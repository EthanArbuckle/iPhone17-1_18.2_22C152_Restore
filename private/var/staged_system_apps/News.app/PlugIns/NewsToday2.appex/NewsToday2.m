BOOL sub_100006548(id a1, NTHeadlineProviding *a2)
{
  void *v2;
  unsigned __int8 v3;

  v2 = [(NTHeadlineProviding *)a2 NewsURL];
  if (objc_msgSend(v2, "fc_isNewsArticleURL")) {
    v3 = 1;
  }
  else {
    v3 = [v2 fc_isHardPaywallNewsArticleURL:0];
  }

  return v3;
}

void sub_1000065D4(void *a1, NSObject *a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint8_t buf)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &buf, 0x26u);
}

BOOL isCloseToColor(ITColor *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  if (a1 && (a3 < 0.0500000007 && a7 < 0.0500000007 || a5 < 0.0149999997 && a9 < 0.0149999997))
  {
    v34.mRed = ITColor::CreateFromHSVDoubles(a1, a2, a3, a4);
    v34.mGreen = v23;
    v34.mBlue = v24;
    v34.mAlpha = v25;
    v33.mRed = ITColor::CreateFromHSVDoubles(v26, a6, a7, a8);
    v33.mGreen = v27;
    v33.mBlue = v28;
    v33.mAlpha = v29;
    if (ITColor::GetContrastWithColor(&v34, &v33) <= 1.65999997) {
      return 1;
    }
  }
  if (vabdd_f64(a3, a7) > a10 || vabdd_f64(a4, a8) > a10) {
    return 0;
  }
  if (vabdd_f64(a2, a6) <= a10) {
    return 1;
  }
  double v30 = a2 + 1.0;
  if (a2 >= a10) {
    double v30 = a2;
  }
  double v31 = a6 + 1.0;
  if (a6 >= a10) {
    double v31 = a6;
  }
  return vabdd_f64(v30, v31) <= a10;
}

void ImageAnalyzer::ImageAnalyzer(ImageAnalyzer *this)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 376) = 0u;
}

void ImageAnalyzer::~ImageAnalyzer(ImageAnalyzer *this)
{
  v2 = *(void **)this;
  if (v2)
  {
    free(v2);
    *(void *)this = 0;
  }
  v3 = (void *)*((void *)this + 2);
  if (v3)
  {
    free(v3);
    *((void *)this + 2) = 0;
  }
  v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    free(v4);
    *((void *)this + 1) = 0;
  }
  v5 = (void *)*((void *)this + 44);
  if (v5)
  {
    *((void *)this + 45) = v5;
    operator delete(v5);
  }
  v6 = (void *)*((void *)this + 41);
  if (v6)
  {
    *((void *)this + 42) = v6;
    operator delete(v6);
  }
}

uint64_t ImageAnalyzer::AnalyzeImage(ImageAnalyzer *this, CGContext *a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t result = ImageAnalyzer::GenerateColorMaps(this, a2);
  if (result)
  {
    uint64_t result = ImageAnalyzer::QuantizeColorMaps(this);
    if (result)
    {
      ImageAnalyzer::PickBackgroundColor(this);
      ImageAnalyzer::PickTextColors(this);
      ImageAnalyzer::DoPostImageAnalysis(this);
      return 1;
    }
  }
  return result;
}

uint64_t ImageAnalyzer::GenerateColorMaps(ImageAnalyzer *this, CGContextRef context)
{
  if (!context) {
    return 0;
  }
  size_t BytesPerRow = CGBitmapContextGetBytesPerRow(context);
  int Width = CGBitmapContextGetWidth(context);
  int Height = CGBitmapContextGetHeight(context);
  uint64_t result = 0;
  if (Height == 102 && Width == 102)
  {
    ITColor::ITColor(&v35);
    __int16 BitmapInfo = CGBitmapContextGetBitmapInfo(context);
    uint64_t result = (uint64_t)CGBitmapContextGetData(context);
    uint64_t v33 = result;
    if (result)
    {
      size_t v8 = (102 * Width);
      uint64_t result = (uint64_t)malloc_type_calloc(v8, 0x20uLL, 0x1000040E0EAB150uLL);
      *(void *)this = result;
      if (result)
      {
        uint64_t result = (uint64_t)malloc_type_calloc(v8, 0x20uLL, 0x1000040E0EAB150uLL);
        *((void *)this + 1) = result;
        if (result)
        {
          uint64_t v12 = 0;
          int v13 = BitmapInfo & 0x3000;
          for (uint64_t i = 1; i != 101; ++i)
          {
            uint64_t v15 = 0;
            uint64_t v16 = 24;
            do
            {
              size_t v17 = v33 + BytesPerRow * i + v15;
              if (v13) {
                uint64_t v18 = 6;
              }
              else {
                uint64_t v18 = 5;
              }
              if (v13) {
                uint64_t v19 = 5;
              }
              else {
                uint64_t v19 = 6;
              }
              if (v13) {
                uint64_t v20 = 4;
              }
              else {
                uint64_t v20 = 7;
              }
              LOBYTE(v9) = *(unsigned char *)(v17 + v18);
              LOBYTE(v10) = *(unsigned char *)(v17 + v19);
              LOBYTE(v11) = *(unsigned char *)(v17 + v20);
              ITColor::ITColor(&v36, (double)*(unint64_t *)&v9 / 255.0, (double)*(unint64_t *)&v10 / 255.0, (double)v11 / 255.0, 1.0);
              ITColor v35 = v36;
              double HSVColor = ITColor::GetHSVColor(&v36);
              uint64_t v23 = v22;
              uint64_t v25 = v24;
              ITColor::GetLuminance(&v36);
              uint64_t v26 = *(void *)this + v12;
              double v27 = (double *)(v26 + v16);
              *(v27 - 3) = HSVColor;
              uint64_t v28 = v26 + 8 * v15;
              *(void *)(v28 + 8) = v23;
              *(void *)(v28 + 16) = v25;
              *double v27 = v29;
              uint64_t v30 = *((void *)this + 1) + v12;
              double v31 = (double *)(v30 + v16);
              *(v31 - 3) = HSVColor;
              uint64_t v32 = v30 + 8 * v15;
              *(void *)(v32 + 8) = v23;
              *(void *)(v32 + 16) = v25;
              *double v31 = v29;
              double v10 = *((double *)this + 48);
              double v9 = v29 + v10;
              *((double *)this + 48) = v9;
              v15 += 4;
              v16 += 32;
            }
            while (v15 != 400);
            v12 += 3200;
          }
          *((double *)this + 48) = v9 / 10000.0;
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t ImageAnalyzer::QuantizeColorMaps(ImageAnalyzer *this)
{
  uint64_t result = (uint64_t)malloc_type_calloc(0x2710uLL, 8uLL, 0x100004000313F17uLL);
  *((void *)this + 2) = result;
  if (result)
  {
    uint64_t result = (uint64_t)malloc_type_calloc(0x2710uLL, 1uLL, 0x100004077774924uLL);
    if (result)
    {
      v3 = (unsigned char *)result;
      uint64_t v4 = 0;
      v5 = 0;
      unint64_t v6 = 0;
      __p = 0;
      v48 = 0;
      v49 = 0;
      uint64_t v7 = 1;
      do
      {
        if (!v3[v6])
        {
          size_t v8 = (double *)(*(void *)this + 32 * v6);
          double v9 = *v8;
          double v10 = v8[1];
          double v11 = v8[2];
          double v12 = v8[3];
          double v13 = ImageAnalyzer::WeightForPointOnEdge((ImageAnalyzer *)result, v6 - 100 * ((unsigned __int16)v6 / 0x64u), (unsigned __int16)v6 / 0x64u);
          double v14 = v13;
          v48 = v5;
          if (v5 >= v49)
          {
            unint64_t v15 = 0x5555555555555556 * (((char *)v49 - (char *)v5) >> 4);
            if (v15 <= 1) {
              unint64_t v15 = 1;
            }
            if (0xAAAAAAAAAAAAAAABLL * (((char *)v49 - (char *)v5) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
              unint64_t v16 = 0x555555555555555;
            }
            else {
              unint64_t v16 = v15;
            }
            size_t v17 = (double *)sub_100009468((uint64_t)&v49, v16);
            *size_t v17 = v9;
            v17[1] = v10;
            v17[2] = v11;
            v17[3] = v12;
            *((_DWORD *)v17 + 8) = v6;
            v17[5] = v14;
            uint64_t v20 = (char *)__p;
            uint64_t v19 = v48;
            v21 = v17;
            if (v48 != __p)
            {
              do
              {
                long long v22 = *((_OWORD *)v19 - 3);
                long long v23 = *((_OWORD *)v19 - 1);
                *((_OWORD *)v21 - 2) = *((_OWORD *)v19 - 2);
                *((_OWORD *)v21 - 1) = v23;
                *((_OWORD *)v21 - 3) = v22;
                v21 -= 6;
                v19 -= 6;
              }
              while (v19 != (double *)v20);
              uint64_t v19 = (double *)v20;
            }
            v5 = v17 + 6;
            __p = v21;
            v48 = v17 + 6;
            v49 = &v17[6 * v18];
            if (v19) {
              operator delete(v19);
            }
          }
          else
          {
            double *v5 = v9;
            v5[1] = v10;
            v5[2] = v11;
            v5[3] = v12;
            *((_DWORD *)v5 + 8) = v6;
            v5[5] = v13;
            v5 += 6;
          }
          v48 = v5;
          *(double *)(*((void *)this + 2) + 8 * v6) = v14;
          v3[v6] = 1;
          if (v6 <= 0x270E)
          {
            uint64_t v24 = v4;
            uint64_t v25 = v7;
            do
            {
              if (!v3[v25])
              {
                uint64_t v26 = (void *)(*(void *)this + v24);
                double v27 = (unsigned int (*)(void, void))v26[4];
                uint64_t v28 = (unsigned int (*)(void, void))v26[5];
                double v29 = (unsigned int (*)(void, void))v26[6];
                uint64_t v30 = (unsigned int (*)(void, void))v26[7];
                BOOL v31 = isCloseToColor(0, v9, v10, v11, v12, *(double *)&v27, *(double *)&v28, *(double *)&v29, *(double *)&v30, 0.0799999982);
                if (v31)
                {
                  double v32 = ImageAnalyzer::WeightForPointOnEdge((ImageAnalyzer *)v31, v25 - 100 * ((unsigned __int16)v25 / 0x64u), (unsigned __int16)v25 / 0x64u);
                  v44[0] = v27;
                  v44[1] = v28;
                  v44[2] = v29;
                  v44[3] = v30;
                  int v45 = v25;
                  double v46 = v32;
                  ImageAnalyzer::AddQuantizeColorEntryToSet(v33, (double *)v44, &__p);
                  v3[v25] = 1;
                }
              }
              ++v25;
              v24 += 32;
            }
            while (v25 != 10000);
            v5 = v48;
          }
          uint64_t result = (uint64_t)__p;
          if (v5 != __p)
          {
            v44[0] = (unsigned int (*)(void, void))CompareQuantizeSortcolor;
            sub_1000094E4((long long *)__p, (long long *)v5, v44, 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)__p) >> 4)), 1);
            v5 = (double *)__p;
            uint64_t v34 = *((unsigned int *)__p + 8);
            double v35 = *((double *)__p + 5);
            unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (unsigned char *)__p) >> 4);
            if (v36 >= 2)
            {
              v37 = (double *)((char *)__p + 88);
              unint64_t v38 = v36 - 1;
              do
              {
                uint64_t v39 = *((unsigned int *)v37 - 2);
                double v40 = *v37;
                if (!v3[v39]) {
                  v3[v39] = 1;
                }
                double v35 = v35 + v40;
                v37 += 6;
                v41 = (_OWORD *)(*(void *)this + 32 * v34);
                long long v42 = v41[1];
                v43 = (_OWORD *)(*(void *)this + 32 * v39);
                _OWORD *v43 = *v41;
                v43[1] = v42;
                --v38;
              }
              while (v38);
            }
            *(double *)(*((void *)this + 2) + 8 * v34) = v35;
          }
        }
        ++v6;
        ++v7;
        v4 += 32;
      }
      while (v6 != 10000);
      free(v3);
      if (__p)
      {
        v48 = (double *)__p;
        operator delete(__p);
      }
      return 1;
    }
  }
  return result;
}

void sub_100007988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ImageAnalyzer::PickBackgroundColor(ImageAnalyzer *this)
{
  double v2 = *((double *)this + 48);
  v3 = ImageAnalyzer::DominantColors(this);
  long long v4 = *((_OWORD *)*v3 + 1);
  *(_OWORD *)((char *)this + 40) = *(_OWORD *)*v3;
  *(_OWORD *)((char *)this + 56) = v4;
  long long v5 = *(_OWORD *)((char *)this + 56);
  *(_OWORD *)&v31.mRed = *(_OWORD *)((char *)this + 40);
  *(_OWORD *)&v31.mBlue = v5;
  if (ITColor::GetContrastWithLuminance(&v31, 0.180000007) < 1.29999995)
  {
    double ContrastWithLuminance = ITColor::GetContrastWithLuminance((ITColor *)((char *)this + 40), 0.180000007);
    unint64_t v7 = (unint64_t)((unsigned char *)v3[1] - (unsigned char *)*v3) >> 5;
    if ((int)v7 >= 2)
    {
      double v8 = ContrastWithLuminance;
      if (v7 == 2) {
        uint64_t v9 = 2;
      }
      else {
        uint64_t v9 = 3;
      }
      for (uint64_t i = 1; i != v9; ++i)
      {
        double v11 = (double *)*((void *)this + 44);
        double v12 = v11[i];
        if (v12 <= 0.0) {
          break;
        }
        double v13 = *v11 / v12;
        if (v13 <= 0.9 || v13 >= 1.112) {
          break;
        }
        double v14 = ITColor::GetContrastWithLuminance((ITColor *)*v3 + i, 0.180000007);
        if (v14 > v8)
        {
          unint64_t v15 = (char *)*v3 + 32 * i;
          long long v16 = v15[1];
          *(_OWORD *)((char *)this + 40) = *v15;
          *(_OWORD *)((char *)this + 56) = v16;
          double v8 = v14;
        }
      }
    }
  }
  long long v17 = *(_OWORD *)((char *)this + 56);
  *(_OWORD *)&v31.mRed = *(_OWORD *)((char *)this + 40);
  *(_OWORD *)&v31.mBlue = v17;
  if (ITColor::GetContrastWithLuminance(&v31, 0.180000007) < 1.29999995)
  {
    double HSVColor = ITColor::GetHSVColor((ITColor *)((char *)this + 40));
    double v20 = v19;
    double v22 = v21;
    double v28 = HSVColor;
    double v29 = v19;
    double v30 = v21;
    if (v2 < 0.180000007
      || (long long v23 = *(_OWORD *)((char *)this + 56),
          *(_OWORD *)&v31.mRed = *(_OWORD *)((char *)this + 40),
          *(_OWORD *)&v31.mBlue = v23,
          ITColor::GetLuminance(&v31),
          v24 < 0.180000007))
    {
      double v29 = v20 * 1.10000002;
      double v30 = v22 * 0.800000012;
    }
    *((double *)this + 5) = ITColor::CreateFromHSVColor(&v28);
    *((void *)this + 6) = v25;
    *((void *)this + 7) = v26;
    *((void *)this + 8) = v27;
  }
}

void ImageAnalyzer::PickTextColors(ImageAnalyzer *this)
{
  double v2 = ImageAnalyzer::DominantColors(this);
  unint64_t v3 = (unsigned char *)v2[1] - (unsigned char *)*v2;
  unint64_t v4 = v3 >> 5;
  if ((v3 >> 5) < 2)
  {
    BOOL v34 = 0;
    char v35 = 0;
    goto LABEL_28;
  }
  long long v5 = v2;
  double ContrastWithColor = ITColor::GetContrastWithColor((ITColor *)*v2 + 1, (ITColor *)((char *)this + 40));
  uint64_t v7 = 0;
  int v8 = 0;
  unint64_t v9 = (v3 >> 5);
  int v10 = 1;
  unsigned int v85 = v4;
  unsigned int v11 = v4;
  unsigned int v12 = 1;
  unsigned int v86 = 1;
  double v13 = ContrastWithColor;
  do
  {
    double v14 = (char *)*v5 + v7;
    long long v15 = v14[1];
    *(_OWORD *)&v87.mRed = *v14;
    *(_OWORD *)&v87.mBlue = v15;
    if ((v8 & 1) == 0 && contrastsWithColor(v87, *(ITColor *)((char *)this + 40)))
    {
      ImageAnalyzer::EnhanceContrastWithColor(v87, *(ITColor *)((char *)this + 40), 0.449999988);
      *((void *)this + 9) = v16;
      *((void *)this + 10) = v17;
      *((void *)this + 11) = v18;
      *((void *)this + 12) = v19;
      int v8 = 1;
      unsigned int v11 = v10;
    }
    double v20 = ITColor::GetContrastWithColor(&v87, (ITColor *)((char *)this + 40));
    if (v20 > v13)
    {
      if (v20 <= ContrastWithColor)
      {
        double v13 = v20;
        unsigned int v86 = v10 - 1;
      }
      else
      {
        double v13 = ContrastWithColor;
        double ContrastWithColor = v20;
        unsigned int v86 = v12;
        unsigned int v12 = v10 - 1;
      }
    }
    ++v10;
    v7 += 32;
  }
  while (32 * v9 != v7);
  if (v11 >= v85)
  {
LABEL_15:
    ITColor::ITColor(&v87);
    int v29 = 0;
    if (v8)
    {
      LODWORD(v4) = v85;
      goto LABEL_24;
    }
    LOBYTE(v21) = 1;
    goto LABEL_17;
  }
  int v21 = 0;
  uint64_t v22 = 32 * v11;
  uint64_t v23 = v11;
  while (1)
  {
    double v24 = (double *)((char *)*v5 + v22);
    double v25 = *v24;
    double v26 = v24[1];
    double v27 = v24[2];
    double v28 = v24[3];
    v88.mRed = *v24;
    v88.mGreen = v26;
    v88.mBlue = v27;
    v88.mAlpha = v28;
    if (contrastsEnoughWithColor(v88, *(ITColor *)((char *)this + 40))) {
      break;
    }
    int v21 = ++v23 >= v9;
    v22 += 32;
    if (v9 == v23) {
      goto LABEL_15;
    }
  }
  v90.mRed = v25;
  v90.mGreen = v26;
  v90.mBlue = v27;
  v90.mAlpha = v28;
  ImageAnalyzer::EnhanceContrastWithColor(v90, *(ITColor *)((char *)this + 40), 0.449999988);
  *((void *)this + 13) = v36;
  *((void *)this + 14) = v37;
  *((void *)this + 15) = v38;
  *((void *)this + 16) = v39;
  if (v8 & ~v21)
  {
    char v35 = 1;
    int v29 = 1;
    LODWORD(v4) = v85;
    goto LABEL_27;
  }
  ITColor::ITColor(&v87);
  int v29 = 1;
  if ((v8 & 1) == 0)
  {
LABEL_17:
    ImageAnalyzer::EnhanceContrastWithColor(*((ITColor *)*v5 + v12), *(ITColor *)((char *)this + 40), 0.200000003);
    ITColor v87 = v89;
    if (contrastsEnoughWithColor(v89, *(ITColor *)((char *)this + 40)))
    {
      ImageAnalyzer::EnhanceContrastWithColor(v87, *(ITColor *)((char *)this + 40), 0.449999988);
      *((void *)this + 9) = v30;
      *((void *)this + 10) = v31;
      *((void *)this + 11) = v32;
      *((void *)this + 12) = v33;
      LOBYTE(v8) = 1;
    }
  }
  LODWORD(v4) = v85;
  if (v21)
  {
LABEL_24:
    ImageAnalyzer::EnhanceContrastWithColor(*((ITColor *)*v5 + v86), *(ITColor *)((char *)this + 40), 0.200000003);
    ITColor v87 = v91;
    if (contrastsEnoughWithColor(v91, *(ITColor *)((char *)this + 40)))
    {
      ImageAnalyzer::EnhanceContrastWithColor(v87, *(ITColor *)((char *)this + 40), 0.449999988);
      *((void *)this + 13) = v40;
      *((void *)this + 14) = v41;
      *((void *)this + 15) = v42;
      *((void *)this + 16) = v43;
      int v29 = 1;
    }
  }
  char v35 = v8;
LABEL_27:
  BOOL v34 = v29 != 0;
LABEL_28:
  long long v44 = *(_OWORD *)((char *)this + 56);
  *(_OWORD *)&v87.mRed = *(_OWORD *)((char *)this + 40);
  *(_OWORD *)&v87.mBlue = v44;
  ITColor::GetLuminance(&v87);
  int v45 = (long long *)((char *)this + 72);
  double v47 = *((double *)this + 10);
  double v46 = *((double *)this + 11);
  double v48 = *((double *)this + 12);
  v49 = (long long *)((char *)this + 104);
  if (v50 >= 0.180000007)
  {
    v87.mRed = *((double *)this + 9);
    v87.mGreen = v47;
    v87.mBlue = v46;
    v87.mAlpha = v48;
    ITColor::GetLuminance(&v87);
    if (v51 >= 0.180000007) {
      char v35 = 0;
    }
    long long v52 = *(_OWORD *)((char *)this + 120);
    *(_OWORD *)&v87.mRed = *(_OWORD *)((char *)this + 104);
    *(_OWORD *)&v87.mBlue = v52;
    ITColor::GetLuminance(&v87);
    if (v53 >= 0.180000007) {
      BOOL v34 = 0;
    }
    if (v35) {
      goto LABEL_50;
    }
LABEL_40:
    long long v57 = *(_OWORD *)((char *)this + 56);
    *(_OWORD *)&v87.mRed = *(_OWORD *)((char *)this + 40);
    *(_OWORD *)&v87.mBlue = v57;
    ITColor::GetLuminance(&v87);
    if (v58 < 0.180000007)
    {
      if (v4)
      {
        uint64_t v59 = *((void *)this + 5);
        uint64_t v60 = *((void *)this + 6);
        uint64_t v61 = *((void *)this + 7);
        uint64_t v62 = *((void *)this + 8);
        v63 = &ITColor::kWhite;
        goto LABEL_45;
      }
      v68 = &ITColor::kWhite;
    }
    else
    {
      if (v4)
      {
        uint64_t v59 = *((void *)this + 5);
        uint64_t v60 = *((void *)this + 6);
        uint64_t v61 = *((void *)this + 7);
        uint64_t v62 = *((void *)this + 8);
        v63 = &ITColor::kBlack;
LABEL_45:
        double BlendedColorWithFraction = ITColor::CreateBlendedColorWithFraction((ITColor *)v63, 0.0500000007, *(ITColor *)&v59);
LABEL_49:
        *((double *)this + 9) = BlendedColorWithFraction;
        *((void *)this + 10) = v65;
        *((void *)this + 11) = v66;
        *((void *)this + 12) = v67;
        goto LABEL_50;
      }
      v68 = &ITColor::kBlack;
    }
    double BlendedColorWithFraction = *(double *)v68;
    uint64_t v65 = *((void *)v68 + 1);
    uint64_t v66 = *((void *)v68 + 2);
    uint64_t v67 = *((void *)v68 + 3);
    goto LABEL_49;
  }
  v87.mRed = *((double *)this + 9);
  v87.mGreen = v47;
  v87.mBlue = v46;
  v87.mAlpha = v48;
  ITColor::GetLuminance(&v87);
  if (v54 < 0.180000007) {
    char v35 = 0;
  }
  long long v55 = *(_OWORD *)((char *)this + 120);
  *(_OWORD *)&v87.mRed = *(_OWORD *)((char *)this + 104);
  *(_OWORD *)&v87.mBlue = v55;
  ITColor::GetLuminance(&v87);
  if (v56 < 0.180000007) {
    BOOL v34 = 0;
  }
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_50:
  if (v34) {
    goto LABEL_61;
  }
  long long v69 = *(_OWORD *)((char *)this + 56);
  *(_OWORD *)&v87.mRed = *(_OWORD *)((char *)this + 40);
  *(_OWORD *)&v87.mBlue = v69;
  ITColor::GetLuminance(&v87);
  if (v70 < 0.180000007)
  {
    if (v4)
    {
      uint64_t v71 = *((void *)this + 5);
      uint64_t v72 = *((void *)this + 6);
      uint64_t v73 = *((void *)this + 7);
      uint64_t v74 = *((void *)this + 8);
      v75 = &ITColor::kWhite;
      goto LABEL_56;
    }
    v80 = &ITColor::kWhite;
LABEL_59:
    double v76 = *(double *)v80;
    uint64_t v77 = *((void *)v80 + 1);
    uint64_t v78 = *((void *)v80 + 2);
    uint64_t v79 = *((void *)v80 + 3);
    goto LABEL_60;
  }
  if (!v4)
  {
    v80 = &ITColor::kBlack;
    goto LABEL_59;
  }
  uint64_t v71 = *((void *)this + 5);
  uint64_t v72 = *((void *)this + 6);
  uint64_t v73 = *((void *)this + 7);
  uint64_t v74 = *((void *)this + 8);
  v75 = &ITColor::kBlack;
LABEL_56:
  double v76 = ITColor::CreateBlendedColorWithFraction((ITColor *)v75, 0.100000001, *(ITColor *)&v71);
LABEL_60:
  *((double *)this + 13) = v76;
  *((void *)this + 14) = v77;
  *((void *)this + 15) = v78;
  *((void *)this + 16) = v79;
LABEL_61:
  double v81 = ITColor::GetContrastWithColor((ITColor *)((char *)this + 72), (ITColor *)((char *)this + 40));
  if (ITColor::GetContrastWithColor((ITColor *)((char *)this + 104), (ITColor *)((char *)this + 40)) > v81)
  {
    long long v83 = *v45;
    long long v82 = *(_OWORD *)((char *)this + 88);
    long long v84 = *(_OWORD *)((char *)this + 120);
    *int v45 = *v49;
    *(_OWORD *)((char *)this + 88) = v84;
    long long *v49 = v83;
    *(_OWORD *)((char *)this + 120) = v82;
  }
}

void ImageAnalyzer::DoPostImageAnalysis(ImageAnalyzer *this)
{
  v1 = this;
  double v2 = (ITColor *)((char *)this + 72);
  unint64_t v3 = (ITColor *)((char *)this + 40);
  *((double *)this + 17) = ITColor::CreateBlendedColorWithFraction((ITColor *)((char *)this + 72), 0.200000003, *(ITColor *)((char *)this + 40));
  unint64_t v4 = (ITColor *)((char *)v1 + 136);
  *((void *)v1 + 18) = v5;
  *((void *)v1 + 19) = v6;
  *((void *)v1 + 20) = v7;
  int v8 = (ITColor *)((char *)v1 + 104);
  *((double *)v1 + 21) = ITColor::CreateBlendedColorWithFraction((ITColor *)((char *)v1 + 104), 0.200000003, *v3);
  *((void *)v1 + 22) = v9;
  v1 = (ImageAnalyzer *)((char *)v1 + 168);
  *((void *)v1 + 2) = v10;
  *((void *)v1 + 3) = v11;
  ImageAnalyzer::CalculateOneShadowColor(v12, v2, v3);
  *((void *)v1 + 4) = v13;
  *((void *)v1 + 5) = v14;
  *((void *)v1 + 6) = v15;
  *((void *)v1 + 7) = v16;
  ImageAnalyzer::CalculateOneShadowColor(v17, v8, v3);
  *((void *)v1 + 12) = v18;
  *((void *)v1 + 13) = v19;
  *((void *)v1 + 14) = v20;
  *((void *)v1 + 15) = v21;
  ImageAnalyzer::CalculateOneShadowColor(v22, v4, v3);
  *((void *)v1 + 8) = v23;
  *((void *)v1 + 9) = v24;
  *((void *)v1 + 10) = v25;
  *((void *)v1 + 11) = v26;
  ImageAnalyzer::CalculateOneShadowColor(v27, (ITColor *)v1, v3);
  *((void *)v1 + 16) = v28;
  *((void *)v1 + 17) = v29;
  *((void *)v1 + 18) = v30;
  *((void *)v1 + 19) = v31;
}

void ImageAnalyzer::AddQuantizeColorEntryToSet(uint64_t a1, double *a2, void **a3)
{
  uint64_t v5 = a3[1];
  if (v5 == *a3)
  {
    int v8 = a3[1];
LABEL_7:
    unint64_t v9 = (unint64_t)a3[2];
    if ((unint64_t)v8 >= v9)
    {
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - v5) >> 4);
      unint64_t v14 = v13 + 1;
      if (v13 + 1 > 0x555555555555555) {
        sub_1000093C0();
      }
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)v5) >> 4);
      if (2 * v15 > v14) {
        unint64_t v14 = 2 * v15;
      }
      if (v15 >= 0x2AAAAAAAAAAAAAALL) {
        unint64_t v16 = 0x555555555555555;
      }
      else {
        unint64_t v16 = v14;
      }
      if (v16) {
        uint64_t v17 = (char *)sub_100009468((uint64_t)(a3 + 2), v16);
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v18 = &v17[48 * v13];
      uint64_t v19 = &v17[48 * v16];
      long long v20 = *(_OWORD *)a2;
      long long v21 = *((_OWORD *)a2 + 2);
      *((_OWORD *)v18 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)v18 + 2) = v21;
      *(_OWORD *)uint64_t v18 = v20;
      unsigned int v12 = v18 + 48;
      uint64_t v23 = (char *)*a3;
      uint64_t v22 = (char *)a3[1];
      if (v22 != *a3)
      {
        do
        {
          long long v24 = *((_OWORD *)v22 - 3);
          long long v25 = *((_OWORD *)v22 - 1);
          *((_OWORD *)v18 - 2) = *((_OWORD *)v22 - 2);
          *((_OWORD *)v18 - 1) = v25;
          *((_OWORD *)v18 - 3) = v24;
          v18 -= 48;
          v22 -= 48;
        }
        while (v22 != v23);
        uint64_t v22 = (char *)*a3;
      }
      *a3 = v18;
      a3[1] = v12;
      a3[2] = v19;
      if (v22) {
        operator delete(v22);
      }
    }
    else
    {
      long long v10 = *(_OWORD *)a2;
      long long v11 = *((_OWORD *)a2 + 2);
      v8[1] = *((_OWORD *)a2 + 1);
      v8[2] = v11;
      *int v8 = v10;
      unsigned int v12 = v8 + 3;
    }
    a3[1] = v12;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v5 = *a3;
    while (!isCloseToColor(0, *a2, a2[1], a2[2], a2[3], *(double *)&v5[v6], *(double *)&v5[v6 + 8], *(double *)&v5[v6 + 16], *(double *)&v5[v6 + 24], 0.0799999982))
    {
      ++v7;
      uint64_t v5 = *a3;
      int v8 = a3[1];
      v6 += 48;
      if (0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (unsigned char *)*a3) >> 4) <= v7) {
        goto LABEL_7;
      }
    }
    *(double *)((char *)*a3 + v6 + 40) = a2[5] + *(double *)((char *)*a3 + v6 + 40);
  }
}

double ImageAnalyzer::WeightForPointOnEdge(ImageAnalyzer *this, unsigned int a2, unsigned int a3)
{
  double v3 = (double)a2;
  if (a2 <= 0x14 && a3 <= 0x14)
  {
    double v4 = (double)a3;
    double v5 = 20.0000003 - v3;
    goto LABEL_4;
  }
  if (a2 > 0x14)
  {
    if (a2 >= 0x50 && a3 <= 0x14)
    {
      double v4 = (double)a3;
      double v5 = 79.9999997 - v3;
LABEL_4:
      double v6 = 20.0000003 - v4;
      if (v5 >= 1.0) {
        double v7 = v5 * 0.75;
      }
      else {
        double v7 = 0.75;
      }
      if (v6 >= 1.0) {
        double v8 = v6 * 0.75;
      }
      else {
        double v8 = 0.75;
      }
      if (v8 <= v7) {
        double v8 = v7;
      }
      goto LABEL_22;
    }
    double v8 = 1.0;
    if (a2 < 0x50) {
      goto LABEL_22;
    }
    double v9 = 79.9999997;
  }
  else
  {
    double v9 = 20.0000003;
  }
  double v10 = v9 - v3;
  double v8 = 0.75;
  if (v10 >= 1.0) {
    double v8 = v10 * 0.75;
  }
LABEL_22:
  double result = 1.0;
  if (v8 >= 1.0) {
    return v8;
  }
  return result;
}

BOOL CompareQuantizeSortcolor(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) > *(double *)(a2 + 40);
}

void **ImageAnalyzer::DominantColors(ImageAnalyzer *this)
{
  v1 = (void **)((char *)this + 328);
  if (*((void *)this + 42) == *((void *)this + 41))
  {
    long long v44 = 0;
    int v45 = 0;
    uint64_t v46 = 0;
    ITColor::ITColor(&v42);
    for (uint64_t i = 0; i != 10000; ++i)
    {
      if (*(double *)(*((void *)this + 2) + 8 * i) >= 1.0)
      {
        v41[0] = *(double *)(*((void *)this + 2) + 8 * i);
        v42.mRed = ITColor::CreateFromHSVDoubles(v3, *(double *)(*(void *)this + 32 * i), *(double *)(*(void *)this + 32 * i + 8), *(double *)(*(void *)this + 32 * i + 16));
        v42.mGreen = v5;
        v42.mBlue = v6;
        v42.mAlpha = v7;
        uint64_t v43 = *(void *)(*(void *)this + 32 * i + 24);
        ImageAnalyzer::AddDominantColorEntryToSet(v8, v41, (void **)&v44);
      }
    }
    double v9 = v45;
    if (v45 != v44)
    {
      double v47 = CompareSortColor;
      sub_10000AC38(v44, v45, (unsigned int (**)(void, void))&v47, 126 - 2 * __clz(((char *)v45 - (char *)v44) >> 6), 1);
      sub_100008C98(v1, ((char *)v45 - (char *)v44) >> 6);
      double v10 = (void **)((char *)this + 352);
      sub_100008D48((void **)this + 44, ((char *)v45 - (char *)v44) >> 6);
      double v9 = v45;
      if (v45 != v44)
      {
        unint64_t v11 = 0;
        double v9 = v44;
        do
        {
          unsigned int v12 = &v9[4 * v11 + 1];
          unint64_t v13 = (char *)*((void *)this + 42);
          unint64_t v14 = *((void *)this + 43);
          if ((unint64_t)v13 >= v14)
          {
            uint64_t v17 = (v13 - (unsigned char *)*v1) >> 5;
            unint64_t v18 = v17 + 1;
            if ((unint64_t)(v17 + 1) >> 59) {
              sub_1000093C0();
            }
            uint64_t v19 = v14 - (void)*v1;
            if (v19 >> 4 > v18) {
              unint64_t v18 = v19 >> 4;
            }
            if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v20 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v20 = v18;
            }
            if (v20) {
              long long v21 = (char *)sub_10000C2E4((uint64_t)this + 344, v20);
            }
            else {
              long long v21 = 0;
            }
            uint64_t v22 = (long long *)&v21[32 * v17];
            long long v23 = v12[1];
            *uint64_t v22 = *v12;
            v22[1] = v23;
            long long v25 = (char *)*((void *)this + 41);
            long long v24 = (char *)*((void *)this + 42);
            uint64_t v26 = v22;
            if (v24 != v25)
            {
              do
              {
                long long v27 = *((_OWORD *)v24 - 1);
                *(v26 - 2) = *((_OWORD *)v24 - 2);
                *(v26 - 1) = v27;
                v26 -= 2;
                v24 -= 32;
              }
              while (v24 != v25);
              long long v24 = (char *)*v1;
            }
            unint64_t v16 = v22 + 2;
            *((void *)this + 41) = v26;
            *((void *)this + 42) = v22 + 2;
            *((void *)this + 43) = &v21[32 * v20];
            if (v24) {
              operator delete(v24);
            }
          }
          else
          {
            long long v15 = v9[4 * v11 + 2];
            *(_OWORD *)unint64_t v13 = *v12;
            *((_OWORD *)v13 + 1) = v15;
            unint64_t v16 = v13 + 32;
          }
          *((void *)this + 42) = v16;
          uint64_t v28 = &v44[4 * v11];
          uint64_t v30 = (char *)*((void *)this + 45);
          unint64_t v29 = *((void *)this + 46);
          if ((unint64_t)v30 >= v29)
          {
            uint64_t v32 = (char *)*v10;
            uint64_t v33 = (v30 - (unsigned char *)*v10) >> 3;
            unint64_t v34 = v33 + 1;
            if ((unint64_t)(v33 + 1) >> 61) {
              sub_1000093C0();
            }
            uint64_t v35 = v29 - (void)v32;
            if (v35 >> 2 > v34) {
              unint64_t v34 = v35 >> 2;
            }
            if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v36 = v34;
            }
            if (v36)
            {
              uint64_t v37 = (char *)sub_10000C31C((uint64_t)this + 368, v36);
              uint64_t v32 = (char *)*((void *)this + 44);
              uint64_t v30 = (char *)*((void *)this + 45);
            }
            else
            {
              uint64_t v37 = 0;
            }
            uint64_t v38 = &v37[8 * v33];
            *(void *)uint64_t v38 = *(void *)v28;
            uint64_t v31 = v38 + 8;
            while (v30 != v32)
            {
              uint64_t v39 = *((void *)v30 - 1);
              v30 -= 8;
              *((void *)v38 - 1) = v39;
              v38 -= 8;
            }
            *((void *)this + 44) = v38;
            *((void *)this + 45) = v31;
            *((void *)this + 46) = &v37[8 * v36];
            if (v32) {
              operator delete(v32);
            }
          }
          else
          {
            *(void *)uint64_t v30 = *(void *)v28;
            uint64_t v31 = v30 + 8;
          }
          *((void *)this + 45) = v31;
          ++v11;
          double v9 = v44;
        }
        while (v11 < ((char *)v45 - (char *)v44) >> 6);
      }
    }
    if (v9)
    {
      int v45 = v9;
      operator delete(v9);
    }
  }
  return v1;
}

void sub_100008748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL contrastsWithColor(ITColor a1, ITColor a2)
{
  double mAlpha = a2.mAlpha;
  double mBlue = a2.mBlue;
  double mGreen = a2.mGreen;
  double mRed = a2.mRed;
  ITColor v11 = a1;
  ITColor v10 = a2;
  ITColor v12 = a1;
  ITColor::GetLuminance(&v12);
  BOOL v7 = v6 >= 0.180000007;
  v12.double mRed = mRed;
  v12.double mGreen = mGreen;
  v12.double mBlue = mBlue;
  v12.double mAlpha = mAlpha;
  ITColor::GetLuminance(&v12);
  return v7 != v8 >= 0.180000007 && ITColor::GetContrastWithColor(&v11, &v10) >= 4.5999999;
}

void ImageAnalyzer::EnhanceContrastWithColor(ITColor a1, ITColor a2, double a3)
{
  double mAlpha = a2.mAlpha;
  double mBlue = a2.mBlue;
  double mGreen = a2.mGreen;
  double mRed = a2.mRed;
  ITColor v16 = a1;
  double HSVColor = ITColor::GetHSVColor(&v16);
  double v9 = v8;
  double v11 = v10;
  ITColor::GetLuminance(&v16);
  v16.double mRed = mRed;
  v16.double mGreen = mGreen;
  v16.double mBlue = mBlue;
  v16.double mAlpha = mAlpha;
  ITColor::GetLuminance(&v16);
  double v13 = 1.0 - (1.0 - v11) * a3;
  if (v14 >= 0.180000007) {
    double v13 = v11 * a3;
  }
  ITColor::CreateFromHSVDoubles(v12, HSVColor, v9, v13);
}

BOOL contrastsEnoughWithColor(ITColor a1, ITColor a2)
{
  double mAlpha = a2.mAlpha;
  double mBlue = a2.mBlue;
  double mGreen = a2.mGreen;
  double mRed = a2.mRed;
  ITColor v11 = a1;
  ITColor v10 = a2;
  ITColor v12 = a1;
  ITColor::GetLuminance(&v12);
  BOOL v7 = v6 >= 0.180000007;
  v12.double mRed = mRed;
  v12.double mGreen = mGreen;
  v12.double mBlue = mBlue;
  v12.double mAlpha = mAlpha;
  ITColor::GetLuminance(&v12);
  return v7 != v8 >= 0.180000007 && ITColor::GetContrastWithColor(&v11, &v10) >= 3.0999999;
}

void ImageAnalyzer::CalculateOneShadowColor(ImageAnalyzer *this, ITColor *a2, ITColor *a3)
{
  ITColor::ITColor(&v14);
  ITColor::GetLuminance(a2);
  double v6 = v5;
  ITColor::GetLuminance(a3);
  if (v6 >= v7) {
    double v8 = &ITColor::kBlack;
  }
  else {
    double v8 = &ITColor::kWhite;
  }
  long long v9 = v8[1];
  *(_OWORD *)&v14.double mRed = *v8;
  *(_OWORD *)&v14.double mBlue = v9;
  ITColor::GetLuminance(&v14);
  double v11 = v10;
  ITColor::GetLuminance(a3);
  double v13 = vabdd_f64(v11, v12);
  ITColor::CreateBlendedColorWithFraction(&v14, 1.0 - ((v13 + v13) * -0.599999994 + 1.0), *a3);
}

BOOL CompareSortColor(double *a1, double *a2)
{
  return *a1 > *a2;
}

void ImageAnalyzer::AddDominantColorEntryToSet(uint64_t a1, double *a2, void **a3)
{
  double v5 = a3[1];
  if (v5 == *a3)
  {
    long long v25 = a3[1];
LABEL_7:
    unint64_t v26 = (unint64_t)a3[2];
    if ((unint64_t)v25 >= v26)
    {
      uint64_t v31 = ((char *)v25 - v5) >> 6;
      unint64_t v32 = v31 + 1;
      if ((unint64_t)(v31 + 1) >> 58) {
        sub_1000093C0();
      }
      uint64_t v33 = v26 - (void)v5;
      if (v33 >> 5 > v32) {
        unint64_t v32 = v33 >> 5;
      }
      if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFC0) {
        unint64_t v34 = 0x3FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v34 = v32;
      }
      if (v34) {
        uint64_t v35 = (char *)sub_10000AC00((uint64_t)(a3 + 2), v34);
      }
      else {
        uint64_t v35 = 0;
      }
      unint64_t v36 = &v35[64 * v31];
      uint64_t v37 = &v35[64 * v34];
      long long v38 = *(_OWORD *)a2;
      long long v39 = *((_OWORD *)a2 + 1);
      long long v40 = *((_OWORD *)a2 + 3);
      *((_OWORD *)v36 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)v36 + 3) = v40;
      *(_OWORD *)unint64_t v36 = v38;
      *((_OWORD *)v36 + 1) = v39;
      uint64_t v30 = v36 + 64;
      ITColor v42 = (char *)*a3;
      uint64_t v41 = (char *)a3[1];
      if (v41 != *a3)
      {
        do
        {
          long long v43 = *((_OWORD *)v41 - 4);
          long long v44 = *((_OWORD *)v41 - 3);
          long long v45 = *((_OWORD *)v41 - 1);
          *((_OWORD *)v36 - 2) = *((_OWORD *)v41 - 2);
          *((_OWORD *)v36 - 1) = v45;
          *((_OWORD *)v36 - 4) = v43;
          *((_OWORD *)v36 - 3) = v44;
          v36 -= 64;
          v41 -= 64;
        }
        while (v41 != v42);
        uint64_t v41 = (char *)*a3;
      }
      *a3 = v36;
      a3[1] = v30;
      a3[2] = v37;
      if (v41) {
        operator delete(v41);
      }
    }
    else
    {
      long long v27 = *(_OWORD *)a2;
      long long v28 = *((_OWORD *)a2 + 1);
      long long v29 = *((_OWORD *)a2 + 3);
      v25[2] = *((_OWORD *)a2 + 2);
      v25[3] = v29;
      *long long v25 = v27;
      v25[1] = v28;
      uint64_t v30 = v25 + 4;
    }
    a3[1] = v30;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    double v5 = *a3;
    while (1)
    {
      double v8 = (double *)&v5[v6];
      double v9 = v8[4];
      double v10 = v8[5];
      long long v11 = *((_OWORD *)a2 + 2);
      long long v46 = *((_OWORD *)v8 + 1);
      *(_OWORD *)&v47.double mRed = *((_OWORD *)a2 + 1);
      *(_OWORD *)&v47.double mBlue = v11;
      double HSVColor = ITColor::GetHSVColor(&v47);
      double v14 = v13;
      double v16 = v15;
      ITColor::GetLuminance(&v47);
      double v18 = v17;
      *(_OWORD *)&v47.double mRed = v46;
      v47.double mBlue = v9;
      v47.double mAlpha = v10;
      double v19 = ITColor::GetHSVColor(&v47);
      double v21 = v20;
      double v23 = v22;
      ITColor::GetLuminance(&v47);
      if (isCloseToColor((ITColor *)1, HSVColor, v14, v16, v18, v19, v21, v23, v24, 0.0700000003)) {
        break;
      }
      ++v7;
      double v5 = *a3;
      long long v25 = a3[1];
      v6 += 64;
      if (v7 >= ((char *)v25 - (unsigned char *)*a3) >> 6) {
        goto LABEL_7;
      }
    }
    *(double *)((char *)*a3 + v6) = *a2 + *(double *)((char *)*a3 + v6);
  }
}

void sub_100008C98(void **a1, unint64_t a2)
{
  double v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 5)
  {
    if (a2 >> 59) {
      sub_1000093C0();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_10000C2E4(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFE0];
    double v9 = &v6[32 * v8];
    long long v11 = (char *)*a1;
    double v10 = (char *)a1[1];
    double v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v13;
        v12 -= 32;
        v10 -= 32;
      }
      while (v10 != v11);
      double v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_100008D48(void **a1, unint64_t a2)
{
  double v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_1000093C0();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_10000C31C(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    double v9 = &v6[8 * v8];
    double v10 = (char *)*a1;
    long long v11 = (char *)a1[1];
    double v12 = v7;
    if (v11 != *a1)
    {
      double v12 = v7;
      do
      {
        uint64_t v13 = *((void *)v11 - 1);
        v11 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

BOOL AnalyzeImagePlease(BOOL result, AnalyzedImageColors *a2)
{
  if (result)
  {
    uint64_t v3 = (CGContext *)result;
    ImageAnalyzer::ImageAnalyzer((ImageAnalyzer *)&v95);
    if (ImageAnalyzer::AnalyzeImage((ImageAnalyzer *)&v95, v3))
    {
      double v4 = v98;
      double v5 = v99;
      double v6 = v100;
      a2->backgroundColor.double mRed = v98;
      a2->backgroundColor.double mGreen = v5;
      a2->backgroundColor.double mBlue = v6;
      double v7 = *(double *)&v101;
      long long v8 = v102;
      *(_OWORD *)&a2->backgroundColor.double mAlpha = v101;
      *(_OWORD *)&a2->primaryTextColor.double mGreen = v8;
      long long v9 = v104;
      *(_OWORD *)&a2->primaryTextColor.double mAlpha = v103;
      *(_OWORD *)&a2->secondaryTextColor.double mGreen = v9;
      long long v10 = v106;
      *(_OWORD *)&a2->secondaryTextColor.double mAlpha = v105;
      *(_OWORD *)&a2->tertiaryTextColor.double mGreen = v10;
      long long v11 = v108;
      *(_OWORD *)&a2->tertiaryTextColor.double mAlpha = v107;
      *(_OWORD *)&a2->quaternaryTextColor.double mGreen = v11;
      long long v12 = v110;
      *(_OWORD *)&a2->quaternaryTextColor.double mAlpha = v109;
      *(void *)&long long v8 = v111;
      *(_OWORD *)&a2->primaryDropShadowColor.double mGreen = v12;
      *(void *)&a2->primaryDropShadowColor.double mAlpha = v8;
      long long v13 = v113;
      *(_OWORD *)&a2->tertiaryDropShadowColor.double mRed = v112;
      *(_OWORD *)&a2->tertiaryDropShadowColor.double mBlue = v13;
      long long v14 = v115;
      *(_OWORD *)&a2->secondaryDropShadowColor.double mRed = v114;
      *(_OWORD *)&a2->secondaryDropShadowColor.double mBlue = v14;
      long long v15 = v117;
      *(_OWORD *)&a2->quarnaryDropShadowColor.double mRed = v116;
      *(_OWORD *)&a2->quarnaryDropShadowColor.double mBlue = v15;
      a2->colorsValid = 1;
      v119.double mRed = v4;
      v119.double mGreen = v5;
      v119.double mBlue = v6;
      v119.double mAlpha = v7;
      ITColor::GetLuminance(&v119);
      a2->isBackgroundLight = v16 >= 0.180000007;
      long long v17 = *(_OWORD *)&a2->primaryTextColor.mBlue;
      *(_OWORD *)&v119.double mRed = *(_OWORD *)&a2->primaryTextColor.mRed;
      *(_OWORD *)&v119.double mBlue = v17;
      ITColor::GetLuminance(&v119);
      a2->isPrimaryColorLight = v18 >= 0.180000007;
      long long v19 = *(_OWORD *)&a2->secondaryTextColor.mBlue;
      *(_OWORD *)&v119.double mRed = *(_OWORD *)&a2->secondaryTextColor.mRed;
      *(_OWORD *)&v119.double mBlue = v19;
      ITColor::GetLuminance(&v119);
      a2->isSecondaryColorLight = v20 >= 0.180000007;
      double v21 = v118;
      a2->isBorderedImage = v118 > 0.0;
      a2->borderPercentage = v21;
      double v22 = (ITColor *)ImageAnalyzer::DominantColors((ImageAnalyzer *)&v95);
      p_double mRed = &v22->mRed;
      begin = a2->completeColorList.__begin_;
      a2->completeColorList.__end_ = begin;
      double mRed = v22->mRed;
      if (*(void *)&v22->mGreen != *(void *)&v22->mRed)
      {
        unint64_t v26 = 0;
        p_completeColorList = &a2->completeColorList;
        p_end_cap = &a2->completeColorList.__end_cap_;
        do
        {
          long long v29 = (_OWORD *)(*(void *)&mRed + 32 * v26);
          if (begin >= p_end_cap->__value_)
          {
            uint64_t v31 = begin - p_completeColorList->__begin_;
            if ((unint64_t)(v31 + 1) >> 59) {
              sub_1000093C0();
            }
            uint64_t v32 = (char *)p_end_cap->__value_ - (char *)p_completeColorList->__begin_;
            uint64_t v33 = v32 >> 4;
            if (v32 >> 4 <= (unint64_t)(v31 + 1)) {
              uint64_t v33 = v31 + 1;
            }
            if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v34 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v34 = v33;
            }
            if (v34) {
              double v22 = (ITColor *)sub_10000C2E4((uint64_t)&a2->completeColorList.__end_cap_, v34);
            }
            else {
              double v22 = 0;
            }
            uint64_t v35 = &v22[v31];
            long long v36 = v29[1];
            *(_OWORD *)&v35->double mRed = *v29;
            *(_OWORD *)&v35->double mBlue = v36;
            long long v38 = a2->completeColorList.__begin_;
            end = a2->completeColorList.__end_;
            long long v39 = v35;
            if (end != v38)
            {
              do
              {
                long long v40 = *(_OWORD *)&end[-1].mBlue;
                *(_OWORD *)&v39[-1].double mRed = *(_OWORD *)&end[-1].mRed;
                *(_OWORD *)&v39[-1].double mBlue = v40;
                --v39;
                --end;
              }
              while (end != v38);
              end = p_completeColorList->__begin_;
            }
            begin = v35 + 1;
            a2->completeColorList.__begin_ = v39;
            a2->completeColorList.__end_ = v35 + 1;
            a2->completeColorList.__end_cap_.__value_ = &v22[v34];
            if (end) {
              operator delete(end);
            }
          }
          else
          {
            long long v30 = v29[1];
            *(_OWORD *)&begin->double mRed = *v29;
            *(_OWORD *)&begin->double mBlue = v30;
            ++begin;
          }
          a2->completeColorList.__end_ = begin;
          ++v26;
          double mRed = *p_mRed;
        }
        while (v26 < (uint64_t)(*((void *)p_mRed + 1) - *(void *)p_mRed) >> 5);
      }
      uint64_t v41 = 0;
      a2->internalColorMapint Width = 100;
      p_originalColorMap = &a2->originalColorMap;
      a2->originalColorMap.__end_ = a2->originalColorMap.__begin_;
      p_quantizedColorMap = &a2->quantizedColorMap;
      a2->quantizedColorMap.__end_ = a2->quantizedColorMap.__begin_;
      p_mColorCounts = &a2->mColorCounts;
      a2->mColorCounts.__end_ = a2->mColorCounts.__begin_;
      do
      {
        double v46 = ITColor::CreateFromHSVDoubles(v22, *(double *)(v96 + 32 * v41), *(double *)(v96 + 32 * v41 + 8), *(double *)(v96 + 32 * v41 + 16));
        double v50 = v46;
        double v51 = v47;
        double v52 = v48;
        double v53 = v49;
        long long v55 = a2->originalColorMap.__end_;
        value = a2->originalColorMap.__end_cap_.__value_;
        if (v55 >= value)
        {
          long long v45 = p_originalColorMap->__begin_;
          uint64_t v57 = v55 - p_originalColorMap->__begin_;
          unint64_t v58 = v57 + 1;
          if ((unint64_t)(v57 + 1) >> 59) {
            sub_1000093C0();
          }
          uint64_t v59 = (char *)value - (char *)v45;
          if (v59 >> 4 > v58) {
            unint64_t v58 = v59 >> 4;
          }
          if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v60 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v60 = v58;
          }
          if (v60)
          {
            uint64_t v61 = (char *)sub_10000C2E4((uint64_t)&a2->originalColorMap.__end_cap_, v60);
            long long v45 = a2->originalColorMap.__begin_;
            long long v55 = a2->originalColorMap.__end_;
          }
          else
          {
            uint64_t v61 = 0;
          }
          uint64_t v62 = &v61[32 * v57];
          *(double *)uint64_t v62 = v50;
          *((double *)v62 + 1) = v51;
          *((double *)v62 + 2) = v52;
          *((double *)v62 + 3) = v53;
          v63 = (ITColor *)v62;
          if (v55 != v45)
          {
            do
            {
              long long v64 = *(_OWORD *)&v55[-1].mBlue;
              *(_OWORD *)&v63[-1].double mRed = *(_OWORD *)&v55[-1].mRed;
              *(_OWORD *)&v63[-1].double mBlue = v64;
              --v63;
              --v55;
            }
            while (v55 != v45);
            long long v45 = p_originalColorMap->__begin_;
          }
          double v56 = (ITColor *)(v62 + 32);
          a2->originalColorMap.__begin_ = v63;
          a2->originalColorMap.__end_ = (ITColor *)(v62 + 32);
          a2->originalColorMap.__end_cap_.__value_ = (ITColor *)&v61[32 * v60];
          if (v45) {
            operator delete(v45);
          }
        }
        else
        {
          v55->double mRed = v46;
          v55->double mGreen = v47;
          double v56 = v55 + 1;
          v55->double mBlue = v48;
          v55->double mAlpha = v49;
        }
        a2->originalColorMap.__end_ = v56;
        double v65 = ITColor::CreateFromHSVDoubles(v45, *(double *)(v95 + 32 * v41), *(double *)(v95 + 32 * v41 + 8), *(double *)(v95 + 32 * v41 + 16));
        double v69 = v65;
        double v70 = v66;
        double v71 = v67;
        double v72 = v68;
        uint64_t v74 = a2->quantizedColorMap.__end_;
        uint64_t v73 = a2->quantizedColorMap.__end_cap_.__value_;
        if (v74 >= v73)
        {
          double v22 = p_quantizedColorMap->__begin_;
          uint64_t v76 = v74 - p_quantizedColorMap->__begin_;
          unint64_t v77 = v76 + 1;
          if ((unint64_t)(v76 + 1) >> 59) {
            sub_1000093C0();
          }
          uint64_t v78 = (char *)v73 - (char *)v22;
          if (v78 >> 4 > v77) {
            unint64_t v77 = v78 >> 4;
          }
          if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v79 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v79 = v77;
          }
          if (v79)
          {
            v80 = (char *)sub_10000C2E4((uint64_t)&a2->quantizedColorMap.__end_cap_, v79);
            double v22 = a2->quantizedColorMap.__begin_;
            uint64_t v74 = a2->quantizedColorMap.__end_;
          }
          else
          {
            v80 = 0;
          }
          double v81 = &v80[32 * v76];
          *(double *)double v81 = v69;
          *((double *)v81 + 1) = v70;
          *((double *)v81 + 2) = v71;
          *((double *)v81 + 3) = v72;
          long long v82 = (ITColor *)v81;
          if (v74 != v22)
          {
            do
            {
              long long v83 = *(_OWORD *)&v74[-1].mBlue;
              *(_OWORD *)&v82[-1].double mRed = *(_OWORD *)&v74[-1].mRed;
              *(_OWORD *)&v82[-1].double mBlue = v83;
              --v82;
              --v74;
            }
            while (v74 != v22);
            double v22 = p_quantizedColorMap->__begin_;
          }
          v75 = (ITColor *)(v81 + 32);
          a2->quantizedColorMap.__begin_ = v82;
          a2->quantizedColorMap.__end_ = (ITColor *)(v81 + 32);
          a2->quantizedColorMap.__end_cap_.__value_ = (ITColor *)&v80[32 * v79];
          if (v22) {
            operator delete(v22);
          }
        }
        else
        {
          v74->double mRed = v65;
          v74->double mGreen = v66;
          v75 = v74 + 1;
          v74->double mBlue = v67;
          v74->double mAlpha = v68;
        }
        a2->quantizedColorMap.__end_ = v75;
        uint64_t v84 = v97;
        unsigned int v86 = a2->mColorCounts.__end_;
        unsigned int v85 = a2->mColorCounts.__end_cap_.__value_;
        if (v86 >= v85)
        {
          double v22 = (ITColor *)p_mColorCounts->__begin_;
          uint64_t v88 = v86 - p_mColorCounts->__begin_;
          unint64_t v89 = v88 + 1;
          if ((unint64_t)(v88 + 1) >> 61) {
            sub_1000093C0();
          }
          uint64_t v90 = (char *)v85 - (char *)v22;
          if (v90 >> 2 > v89) {
            unint64_t v89 = v90 >> 2;
          }
          if ((unint64_t)v90 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v91 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v91 = v89;
          }
          if (v91)
          {
            v92 = (char *)sub_10000C31C((uint64_t)&a2->mColorCounts.__end_cap_, v91);
            double v22 = (ITColor *)a2->mColorCounts.__begin_;
            unsigned int v86 = a2->mColorCounts.__end_;
          }
          else
          {
            v92 = 0;
          }
          v93 = (double *)&v92[8 * v88];
          double *v93 = *(double *)(v84 + 8 * v41);
          ITColor v87 = v93 + 1;
          while (v86 != (double *)v22)
          {
            uint64_t v94 = *((void *)v86-- - 1);
            *((void *)v93-- - 1) = v94;
          }
          a2->mColorCounts.__begin_ = v93;
          a2->mColorCounts.__end_ = v87;
          a2->mColorCounts.__end_cap_.__value_ = (double *)&v92[8 * v91];
          if (v22) {
            operator delete(v22);
          }
        }
        else
        {
          *unsigned int v86 = *(double *)(v97 + 8 * v41);
          ITColor v87 = v86 + 1;
        }
        a2->mColorCounts.__end_ = v87;
        ++v41;
      }
      while (v41 != 10000);
      ImageAnalyzer::~ImageAnalyzer((ImageAnalyzer *)&v95);
      return a2->colorsValid;
    }
    else
    {
      ImageAnalyzer::~ImageAnalyzer((ImageAnalyzer *)&v95);
      return 0;
    }
  }
  return result;
}

void sub_100009388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  ImageAnalyzer::~ImageAnalyzer((ImageAnalyzer *)va);
  _Unwind_Resume(a1);
}

void sub_1000093C0()
{
}

void sub_1000093D8(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_100009434(exception, a1);
}

void sub_100009420(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_100009434(std::logic_error *a1, const char *a2)
{
  double result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_100009468(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    sub_1000094B0();
  }
  return operator new(48 * a2);
}

void sub_1000094B0()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_1000094E4(long long *a1, long long *a2, unsigned int (**a3)(void, void), uint64_t a4, char a5)
{
LABEL_1:
  long long v11 = a2 - 3;
  long long v12 = a1;
LABEL_2:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (a2 - v12);
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          uint64_t v37 = *a3;
          long long v39 = *(a2 - 2);
          long long v38 = *(a2 - 1);
          v50[0] = *(a2 - 3);
          v50[1] = v39;
          v50[2] = v38;
          long long v40 = *v12;
          long long v41 = v12[2];
          v49[1] = v12[1];
          v49[2] = v41;
          v49[0] = v40;
          if (v37(v50, v49))
          {
            long long v42 = *v12;
            long long v43 = v12[2];
            long long v52 = v12[1];
            long long v53 = v43;
            long long v51 = v42;
            long long v44 = *v11;
            long long v45 = *(a2 - 1);
            v12[1] = *(a2 - 2);
            v12[2] = v45;
            *long long v12 = v44;
            long long v46 = v52;
            *long long v11 = v51;
            *(a2 - 2) = v46;
            *(a2 - 1) = v53;
          }
          break;
        case 3uLL:
          sub_100009AA0(v12, v12 + 3, a2 - 3, a3);
          break;
        case 4uLL:
          sub_10000A348((__n128 *)v12, (__n128 *)v12 + 3, (__n128 *)v12 + 6, (__n128 *)a2 - 3, a3);
          break;
        case 5uLL:
          sub_10000A48C((__n128 *)v12, (__n128 *)v12 + 3, (__n128 *)v12 + 6, (__n128 *)v12 + 9, (__n128 *)a2 - 3, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v15 <= 1151)
    {
      if (a5) {
        sub_10000985C((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      else {
        sub_100009994((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      return;
    }
    if (v14 == 1) {
      break;
    }
    unint64_t v17 = v16 >> 1;
    double v18 = &v12[3 * (v16 >> 1)];
    if ((unint64_t)v15 >= 0x1801)
    {
      sub_100009AA0(v12, &v12[3 * (v16 >> 1)], a2 - 3, a3);
      uint64_t v19 = 3 * v17;
      double v20 = &v12[3 * v17 - 3];
      sub_100009AA0(v12 + 3, v20, a2 - 6, a3);
      double v21 = v12 + 6;
      double v22 = &v12[v19 + 3];
      sub_100009AA0(v21, v22, a2 - 9, a3);
      sub_100009AA0(v20, v18, v22, a3);
      long long v23 = *a1;
      long long v24 = a1[2];
      long long v52 = a1[1];
      long long v53 = v24;
      long long v51 = v23;
      long long v25 = *v18;
      long long v26 = v18[2];
      a1[1] = v18[1];
      a1[2] = v26;
      *a1 = v25;
      long long v27 = v51;
      long long v28 = v53;
      v18[1] = v52;
      v18[2] = v28;
      *double v18 = v27;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100009AA0(&v12[3 * (v16 >> 1)], v12, a2 - 3, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    long long v29 = *a3;
    long long v31 = *(a1 - 2);
    long long v30 = *(a1 - 1);
    v48[0] = *(a1 - 3);
    v48[1] = v31;
    v48[2] = v30;
    long long v32 = *a1;
    long long v33 = a1[2];
    v47[1] = a1[1];
    v47[2] = v33;
    v47[0] = v32;
    if ((((uint64_t (*)(_OWORD *, _OWORD *))v29)(v48, v47) & 1) == 0)
    {
      long long v12 = sub_100009C94(a1, a2, (uint64_t (**)(void, void))a3);
      goto LABEL_18;
    }
LABEL_13:
    unint64_t v34 = (__n128 *)sub_100009EC4(a1, a2, (uint64_t (**)(void, void))a3);
    if ((v35 & 1) == 0) {
      goto LABEL_16;
    }
    BOOL v36 = sub_10000A0D8((__n128 *)a1, v34, a3);
    long long v12 = (long long *)&v34[3];
    if (sub_10000A0D8(v34 + 3, (__n128 *)a2, a3))
    {
      a4 = -v14;
      a2 = (long long *)v34;
      if (v36) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v13 = v14 + 1;
    if (!v36)
    {
LABEL_16:
      sub_1000094E4(a1, v34, a3, -v14, a5 & 1);
      long long v12 = (long long *)&v34[3];
LABEL_18:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (v12 != a2) {
    sub_10000A62C((uint64_t)v12, a2, a2, a3);
  }
}

  long long v11 = a2 - 4;
  long long v12 = a1;
LABEL_2:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = ((char *)a2 - (char *)v12) >> 6;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          long long v38 = *a3;
          long long v39 = *(a2 - 1);
          long long v41 = *(a2 - 4);
          long long v40 = *(a2 - 3);
          v56[2] = *(a2 - 2);
          v56[3] = v39;
          v56[0] = v41;
          v56[1] = v40;
          long long v42 = v12[3];
          long long v44 = *v12;
          long long v43 = v12[1];
          v55[2] = v12[2];
          v55[3] = v42;
          v55[0] = v44;
          v55[1] = v43;
          if (v38(v56, v55))
          {
            long long v45 = *v12;
            long long v46 = v12[1];
            double v47 = v12[3];
            uint64_t v59 = v12[2];
            unint64_t v60 = v47;
            uint64_t v57 = v45;
            unint64_t v58 = v46;
            double v48 = *v11;
            double v49 = *(a2 - 3);
            double v50 = *(a2 - 1);
            v12[2] = *(a2 - 2);
            v12[3] = v50;
            *long long v12 = v48;
            v12[1] = v49;
            long long v51 = v58;
            *long long v11 = v57;
            *(a2 - 3) = v51;
            long long v52 = v60;
            *(a2 - 2) = v59;
            *(a2 - 1) = v52;
          }
          break;
        case 3uLL:
          sub_10000B1D4(v12, v12 + 4, a2 - 4, a3);
          break;
        case 4uLL:
          sub_10000BA70((__n128 *)v12, (__n128 *)v12 + 4, (__n128 *)v12 + 8, (__n128 *)a2 - 4, a3);
          break;
        case 5uLL:
          sub_10000BBBC((uint64_t)v12, (__n128 *)v12 + 4, (__n128 *)v12 + 8, (__n128 *)v12 + 12, (__n128 *)a2 - 4, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v15 <= 1535)
    {
      if (a5) {
        sub_10000AF8C((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      else {
        sub_10000B0C4((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      return;
    }
    if (v14 == 1) {
      break;
    }
    unint64_t v17 = v16 >> 1;
    double v18 = &v12[4 * (v16 >> 1)];
    if ((unint64_t)v15 > 0x2000)
    {
      sub_10000B1D4(v12, &v12[4 * (v16 >> 1)], a2 - 4, a3);
      sub_10000B1D4(v12 + 4, v18 - 4, a2 - 8, a3);
      sub_10000B1D4(v12 + 8, &v12[4 * v17 + 4], a2 - 12, a3);
      sub_10000B1D4(v18 - 4, v18, &v12[4 * v17 + 4], a3);
      uint64_t v19 = *v12;
      double v20 = v12[1];
      double v21 = v12[3];
      uint64_t v59 = v12[2];
      unint64_t v60 = v21;
      uint64_t v57 = v19;
      unint64_t v58 = v20;
      double v22 = *v18;
      long long v23 = v18[1];
      long long v24 = v18[3];
      v12[2] = v18[2];
      v12[3] = v24;
      *long long v12 = v22;
      v12[1] = v23;
      long long v25 = v57;
      long long v26 = v58;
      long long v27 = v60;
      v18[2] = v59;
      v18[3] = v27;
      *double v18 = v25;
      v18[1] = v26;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_10000B1D4(&v12[4 * (v16 >> 1)], v12, a2 - 4, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    long long v28 = *a3;
    long long v29 = *(v12 - 1);
    long long v31 = *(v12 - 4);
    long long v30 = *(v12 - 3);
    v54[2] = *(v12 - 2);
    v54[3] = v29;
    v54[0] = v31;
    v54[1] = v30;
    long long v32 = v12[3];
    unint64_t v34 = *v12;
    long long v33 = v12[1];
    v53[2] = v12[2];
    v53[3] = v32;
    v53[0] = v34;
    v53[1] = v33;
    if ((((uint64_t (*)(_OWORD *, _OWORD *))v28)(v54, v53) & 1) == 0)
    {
      long long v12 = sub_10000B3D0(v12, a2, (uint64_t (**)(void, void))a3);
      goto LABEL_18;
    }
LABEL_13:
    char v35 = sub_10000B5F8(v12, a2, (uint64_t (**)(void, void))a3);
    if ((v36 & 1) == 0) {
      goto LABEL_16;
    }
    uint64_t v37 = sub_10000B808((uint64_t)v12, (__n128 *)v35, a3);
    long long v12 = v35 + 4;
    if (sub_10000B808((uint64_t)(v35 + 4), (__n128 *)a2, a3))
    {
      a4 = -v14;
      a2 = v35;
      if (v37) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v13 = v14 + 1;
    if (!v37)
    {
LABEL_16:
      sub_10000AC38(a1, v35, a3, -v14, a5 & 1);
      long long v12 = v35 + 4;
LABEL_18:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (v12 != a2) {
    sub_10000BD68((uint64_t)v12, a2, a2, a3);
  }
}

uint64_t sub_10000985C(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v31 = v3;
    uint64_t v32 = v4;
    char v6 = (_OWORD *)result;
    double v7 = (long long *)(result + 48);
    if ((long long *)(result + 48) != a2)
    {
      uint64_t v9 = 0;
      long long v10 = (long long *)result;
      do
      {
        long long v11 = v10;
        long long v10 = v7;
        long long v12 = *a3;
        long long v13 = v10[1];
        v30[0] = *v10;
        v30[1] = v13;
        v30[2] = v10[2];
        long long v14 = *v11;
        long long v15 = v11[2];
        v29[1] = v11[1];
        v29[2] = v15;
        v29[0] = v14;
        double result = v12(v30, v29);
        if (result)
        {
          long long v16 = v10[1];
          long long v26 = *v10;
          long long v27 = v16;
          long long v28 = v10[2];
          uint64_t v17 = v9;
          while (1)
          {
            double v18 = (_OWORD *)((char *)v6 + v17);
            long long v19 = *(_OWORD *)((char *)v6 + v17 + 16);
            v18[3] = *(_OWORD *)((char *)v6 + v17);
            v18[4] = v19;
            v18[5] = *(_OWORD *)((char *)v6 + v17 + 32);
            if (!v17) {
              break;
            }
            double v20 = *a3;
            v25[0] = v26;
            v25[1] = v27;
            v25[2] = v28;
            long long v21 = *(v18 - 2);
            v24[0] = *(v18 - 3);
            v24[1] = v21;
            v24[2] = *(v18 - 1);
            double result = v20(v25, v24);
            v17 -= 48;
            if ((result & 1) == 0)
            {
              double v22 = (_OWORD *)((char *)v6 + v17 + 48);
              goto LABEL_10;
            }
          }
          double v22 = v6;
LABEL_10:
          long long v23 = v27;
          *double v22 = v26;
          v22[1] = v23;
          v22[2] = v28;
        }
        double v7 = v10 + 3;
        v9 += 48;
      }
      while (v10 + 3 != a2);
    }
  }
  return result;
}

uint64_t sub_100009994(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v30 = v3;
    uint64_t v31 = v4;
    char v6 = (long long *)result;
    for (uint64_t i = (long long *)(result + 48); v6 + 3 != a2; uint64_t i = v6 + 3)
    {
      uint64_t v9 = v6;
      char v6 = i;
      long long v10 = *a3;
      long long v11 = v6[1];
      v29[0] = *v6;
      v29[1] = v11;
      v29[2] = v6[2];
      long long v12 = *v9;
      long long v13 = v9[2];
      v28[1] = v9[1];
      v28[2] = v13;
      v28[0] = v12;
      double result = v10(v29, v28);
      if (result)
      {
        long long v14 = v6[1];
        long long v25 = *v6;
        long long v26 = v14;
        long long v27 = v6[2];
        long long v15 = v6;
        do
        {
          long long v16 = v15 - 3;
          long long v17 = *(v15 - 2);
          long long v18 = *(v15 - 1);
          long long v19 = *(v15 - 4);
          *long long v15 = *(v15 - 3);
          v15[1] = v17;
          v15[2] = v18;
          double v20 = *a3;
          v24[0] = v25;
          v24[1] = v26;
          v24[2] = v27;
          long long v21 = *(v15 - 6);
          v23[1] = *(v15 - 5);
          v23[2] = v19;
          v23[0] = v21;
          double result = v20(v24, v23);
          long long v15 = v16;
        }
        while ((result & 1) != 0);
        long long v22 = v26;
        *long long v16 = v25;
        v16[1] = v22;
        v16[2] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_100009AA0(_OWORD *a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  long long v8 = *a4;
  long long v9 = a2[1];
  v60[0] = *a2;
  v60[1] = v9;
  v60[2] = a2[2];
  long long v10 = a1[1];
  v59[0] = *a1;
  v59[1] = v10;
  v59[2] = a1[2];
  char v11 = v8(v60, v59);
  long long v12 = *a4;
  if (v11)
  {
    long long v13 = a3[1];
    v54[0] = *a3;
    v54[1] = v13;
    v54[2] = a3[2];
    long long v14 = a2[1];
    v53[0] = *a2;
    v53[1] = v14;
    v53[2] = a2[2];
    if (v12(v54, v53))
    {
      long long v15 = *a1;
      long long v16 = a1[1];
      long long v17 = a1[2];
      long long v19 = a3[1];
      long long v18 = a3[2];
      *a1 = *a3;
      a1[1] = v19;
      a1[2] = v18;
      a3[2] = v17;
      uint64_t result = 1;
LABEL_9:
      *a3 = v15;
      a3[1] = v16;
      return result;
    }
    long long v38 = *a1;
    long long v39 = a1[1];
    long long v40 = a1[2];
    long long v42 = a2[1];
    long long v41 = a2[2];
    *a1 = *a2;
    a1[1] = v42;
    a1[2] = v41;
    a2[1] = v39;
    a2[2] = v40;
    *a2 = v38;
    long long v43 = *a4;
    long long v44 = *a3;
    long long v45 = a3[2];
    v52[1] = a3[1];
    v52[2] = v45;
    long long v46 = *a2;
    long long v47 = a2[1];
    v51[2] = a2[2];
    v52[0] = v44;
    v51[0] = v46;
    v51[1] = v47;
    if (v43(v52, v51))
    {
      long long v15 = *a2;
      long long v16 = a2[1];
      long long v48 = a2[2];
      long long v50 = a3[1];
      long long v49 = a3[2];
      *a2 = *a3;
      a2[1] = v50;
      a2[2] = v49;
      a3[2] = v48;
      uint64_t result = 2;
      goto LABEL_9;
    }
  }
  else
  {
    long long v21 = a3[1];
    v58[0] = *a3;
    v58[1] = v21;
    v58[2] = a3[2];
    long long v22 = a2[1];
    v57[0] = *a2;
    v57[1] = v22;
    v57[2] = a2[2];
    uint64_t result = ((uint64_t (*)(_OWORD *, _OWORD *))v12)(v58, v57);
    if (!result) {
      return result;
    }
    long long v23 = *a2;
    long long v24 = a2[1];
    long long v25 = a2[2];
    long long v27 = a3[1];
    long long v26 = a3[2];
    *a2 = *a3;
    a2[1] = v27;
    a2[2] = v26;
    a3[1] = v24;
    a3[2] = v25;
    *a3 = v23;
    long long v28 = *a4;
    long long v29 = *a2;
    long long v30 = a2[2];
    v56[1] = a2[1];
    v56[2] = v30;
    long long v31 = *a1;
    long long v32 = a1[1];
    v55[2] = a1[2];
    v56[0] = v29;
    v55[0] = v31;
    v55[1] = v32;
    if (v28(v56, v55))
    {
      long long v33 = *a1;
      long long v34 = a1[1];
      long long v35 = a1[2];
      long long v37 = a2[1];
      long long v36 = a2[2];
      *a1 = *a2;
      a1[1] = v37;
      a1[2] = v36;
      a2[1] = v34;
      a2[2] = v35;
      uint64_t result = 2;
      *a2 = v33;
      return result;
    }
  }
  return 1;
}

long long *sub_100009C94(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v4 = a2;
  long long v6 = a1[1];
  long long v53 = *a1;
  long long v54 = v6;
  long long v55 = a1[2];
  double v7 = *a3;
  v52[0] = v53;
  v52[1] = v6;
  v52[2] = v55;
  long long v8 = *(a2 - 2);
  v51[0] = *(a2 - 3);
  v51[1] = v8;
  v51[2] = *(a2 - 1);
  if (v7(v52, v51))
  {
    long long v9 = a1;
    do
    {
      long long v10 = v9 + 3;
      char v11 = *a3;
      v50[0] = v53;
      v50[1] = v54;
      v50[2] = v55;
      long long v12 = v9[4];
      v49[0] = v9[3];
      v49[1] = v12;
      v49[2] = v9[5];
      char v13 = v11(v50, v49);
      long long v9 = v10;
    }
    while ((v13 & 1) == 0);
  }
  else
  {
    long long v14 = a1 + 3;
    do
    {
      long long v10 = v14;
      if (v14 >= v4) {
        break;
      }
      long long v15 = *a3;
      v48[0] = v53;
      v48[1] = v54;
      v48[2] = v55;
      long long v16 = v10[1];
      v47[0] = *v10;
      v47[1] = v16;
      v47[2] = v10[2];
      int v17 = v15(v48, v47);
      long long v14 = v10 + 3;
    }
    while (!v17);
  }
  if (v10 >= v4)
  {
    long long v18 = v4;
  }
  else
  {
    do
    {
      long long v18 = v4 - 3;
      long long v19 = *a3;
      v46[0] = v53;
      v46[1] = v54;
      v46[2] = v55;
      long long v20 = *(v4 - 2);
      v45[0] = *(v4 - 3);
      v45[1] = v20;
      v45[2] = *(v4 - 1);
      v4 -= 3;
    }
    while ((v19(v46, v45) & 1) != 0);
  }
  while (v10 < v18)
  {
    long long v21 = *v10;
    long long v22 = v10[2];
    long long v57 = v10[1];
    long long v58 = v22;
    long long v56 = v21;
    long long v23 = *v18;
    long long v24 = v18[2];
    v10[1] = v18[1];
    v10[2] = v24;
    *long long v10 = v23;
    long long v25 = v56;
    long long v26 = v58;
    v18[1] = v57;
    v18[2] = v26;
    *long long v18 = v25;
    do
    {
      v44[0] = v53;
      v44[1] = v54;
      v44[2] = v55;
      long long v28 = v10[3];
      long long v27 = v10[4];
      long long v29 = v10[5];
      v10 += 3;
      long long v30 = (unsigned int (*)(void, void))*a3;
      v43[1] = v27;
      v43[2] = v29;
      v43[0] = v28;
    }
    while (!v30(v44, v43));
    do
    {
      v42[0] = v53;
      v42[1] = v54;
      v42[2] = v55;
      long long v32 = *(v18 - 3);
      long long v31 = *(v18 - 2);
      long long v33 = *(v18 - 1);
      v18 -= 3;
      long long v34 = *a3;
      v41[1] = v31;
      double v41[2] = v33;
      v41[0] = v32;
    }
    while ((v34(v42, v41) & 1) != 0);
  }
  long long v35 = v10 - 3;
  if (v10 - 3 != a1)
  {
    long long v36 = *v35;
    long long v37 = *(v10 - 1);
    a1[1] = *(v10 - 2);
    a1[2] = v37;
    *a1 = v36;
  }
  long long v38 = v53;
  long long v39 = v55;
  *(v10 - 2) = v54;
  *(v10 - 1) = v39;
  *long long v35 = v38;
  return v10;
}

long long *sub_100009EC4(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v6 = 0;
  long long v7 = a1[1];
  long long v47 = *a1;
  long long v48 = v7;
  long long v49 = a1[2];
  do
  {
    long long v8 = *a3;
    long long v9 = a1[v6 + 4];
    v46[0] = a1[v6 + 3];
    v46[1] = v9;
    v46[2] = a1[v6 + 5];
    v45[0] = v47;
    v45[1] = v48;
    v45[2] = v49;
    v6 += 3;
  }
  while ((v8(v46, v45) & 1) != 0);
  long long v10 = &a1[v6];
  char v11 = &a1[v6 - 3];
  if (v6 == 3)
  {
    while (v10 < a2)
    {
      long long v15 = *a3;
      long long v12 = a2 - 3;
      long long v16 = *(a2 - 2);
      v44[0] = *(a2 - 3);
      v44[1] = v16;
      v44[2] = *(a2 - 1);
      v43[0] = v47;
      v43[1] = v48;
      v43[2] = v49;
      a2 -= 3;
      if (v15(v44, v43)) {
        goto LABEL_9;
      }
    }
    long long v12 = a2;
  }
  else
  {
    do
    {
      long long v12 = a2 - 3;
      char v13 = (unsigned int (*)(void, void))*a3;
      long long v14 = *(a2 - 2);
      v42[0] = *(a2 - 3);
      v42[1] = v14;
      v42[2] = *(a2 - 1);
      v41[0] = v47;
      v41[1] = v48;
      double v41[2] = v49;
      a2 -= 3;
    }
    while (!v13(v42, v41));
  }
LABEL_9:
  if (v10 < v12)
  {
    int v17 = v10;
    long long v18 = v12;
    do
    {
      long long v20 = v17[1];
      long long v50 = *v17;
      long long v19 = v50;
      long long v51 = v20;
      long long v52 = v17[2];
      long long v21 = v52;
      long long v22 = *v18;
      long long v23 = v18[2];
      v17[1] = v18[1];
      v17[2] = v23;
      *int v17 = v22;
      v18[1] = v20;
      v18[2] = v21;
      *long long v18 = v19;
      do
      {
        long long v25 = v17[4];
        long long v24 = v17[5];
        long long v26 = v17[3];
        v17 += 3;
        long long v27 = *a3;
        v40[0] = v26;
        v40[1] = v25;
        v40[2] = v24;
        v39[1] = v48;
        v39[2] = v49;
        v39[0] = v47;
      }
      while ((v27(v40, v39) & 1) != 0);
      do
      {
        long long v29 = *(v18 - 2);
        long long v28 = *(v18 - 1);
        long long v30 = *(v18 - 3);
        v18 -= 3;
        long long v31 = (unsigned int (*)(void, void))*a3;
        v38[0] = v30;
        v38[1] = v29;
        v38[2] = v28;
        v37[1] = v48;
        v37[2] = v49;
        v37[0] = v47;
      }
      while (!v31(v38, v37));
    }
    while (v17 < v18);
    char v11 = v17 - 3;
  }
  if (v11 != a1)
  {
    long long v32 = *v11;
    long long v33 = v11[2];
    a1[1] = v11[1];
    a1[2] = v33;
    *a1 = v32;
  }
  long long v34 = v47;
  long long v35 = v49;
  v11[1] = v48;
  v11[2] = v35;
  *char v11 = v34;
  return v11;
}

BOOL sub_10000A0D8(__n128 *a1, __n128 *a2, unsigned int (**a3)(void, void))
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      long long v8 = *a3;
      __n128 v9 = a2[-2];
      v41[0] = a2[-3];
      v41[1] = v9;
      double v41[2] = a2[-1];
      __n128 v10 = a1[1];
      v40[0] = *a1;
      v40[1] = v10;
      v40[2] = a1[2];
      if (v8(v41, v40))
      {
        char v11 = a2 - 3;
        __n128 v12 = *a1;
        __n128 v13 = a1[1];
        __n128 v14 = a1[2];
        __n128 v16 = a2[-2];
        __n128 v15 = a2[-1];
        *a1 = a2[-3];
        a1[1] = v16;
        a1[2] = v15;
        v11[1] = v13;
        v11[2] = v14;
        *char v11 = v12;
      }
      return 1;
    case 3uLL:
      sub_100009AA0(a1, (__n128 *)a1[3].n128_u64, (__n128 *)a2[-3].n128_u64, a3);
      return 1;
    case 4uLL:
      sub_10000A348(a1, a1 + 3, a1 + 6, a2 - 3, a3);
      return 1;
    case 5uLL:
      sub_10000A48C(a1, a1 + 3, a1 + 6, a1 + 9, a2 - 3, a3);
      return 1;
    default:
      int v17 = a1 + 6;
      sub_100009AA0(a1, (__n128 *)a1[3].n128_u64, (__n128 *)a1[6].n128_u64, a3);
      long long v18 = a1 + 9;
      if (&a1[9] == a2) {
        return 1;
      }
      uint64_t v19 = 0;
      int v20 = 0;
      break;
  }
  while (1)
  {
    long long v21 = *a3;
    __n128 v22 = v18[1];
    v39[0] = *v18;
    v39[1] = v22;
    v39[2] = v18[2];
    __n128 v23 = *v17;
    __n128 v24 = v17[2];
    v38[1] = v17[1];
    v38[2] = v24;
    v38[0] = v23;
    if (v21(v39, v38))
    {
      __n128 v25 = v18[1];
      __n128 v35 = *v18;
      __n128 v36 = v25;
      __n128 v37 = v18[2];
      uint64_t v26 = v19;
      while (1)
      {
        long long v27 = (_OWORD *)((char *)a1->n128_u64 + v26);
        long long v28 = *(long long *)((char *)&a1[7] + v26);
        v27[9] = *(__n128 *)((char *)&a1[6] + v26);
        v27[10] = v28;
        v27[11] = *(__n128 *)((char *)&a1[8] + v26);
        if (v26 == -96) {
          break;
        }
        long long v29 = *a3;
        v34[0] = v35;
        v34[1] = v36;
        v34[2] = v37;
        long long v30 = v27[4];
        v33[0] = v27[3];
        v33[1] = v30;
        v33[2] = v27[5];
        v26 -= 48;
        if ((((uint64_t (*)(_OWORD *, _OWORD *))v29)(v34, v33) & 1) == 0)
        {
          long long v31 = (__n128 *)((char *)a1 + v26 + 144);
          goto LABEL_12;
        }
      }
      long long v31 = a1;
LABEL_12:
      __n128 v32 = v36;
      *long long v31 = v35;
      v31[1] = v32;
      v31[2] = v37;
      if (++v20 == 8) {
        return &v18[3] == a2;
      }
    }
    int v17 = v18;
    v19 += 48;
    v18 += 3;
    if (v18 == a2) {
      return 1;
    }
  }
}

__n128 sub_10000A348(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, unsigned int (**a5)(void, void))
{
  sub_100009AA0(a1, a2, a3, a5);
  __n128 v10 = *a5;
  __n128 v11 = a4[1];
  v43[0] = *a4;
  v43[1] = v11;
  v43[2] = a4[2];
  __n128 v12 = a3[1];
  v42[0] = *a3;
  v42[1] = v12;
  v42[2] = a3[2];
  if (v10(v43, v42))
  {
    __n128 v14 = *a3;
    __n128 v15 = a3[1];
    __n128 v16 = a3[2];
    __n128 v18 = a4[1];
    __n128 v17 = a4[2];
    *a3 = *a4;
    a3[1] = v18;
    a3[2] = v17;
    a4[1] = v15;
    a4[2] = v16;
    *a4 = v14;
    uint64_t v19 = *a5;
    __n128 v20 = *a3;
    __n128 v21 = a3[2];
    v41[1] = a3[1];
    double v41[2] = v21;
    __n128 v22 = *a2;
    __n128 v23 = a2[1];
    v40[2] = a2[2];
    v41[0] = v20;
    v40[0] = v22;
    v40[1] = v23;
    if (v19(v41, v40))
    {
      __n128 v24 = *a2;
      __n128 v25 = a2[1];
      __n128 v26 = a2[2];
      __n128 v28 = a3[1];
      __n128 v27 = a3[2];
      *a2 = *a3;
      a2[1] = v28;
      a2[2] = v27;
      a3[1] = v25;
      a3[2] = v26;
      *a3 = v24;
      long long v29 = *a5;
      __n128 v30 = *a2;
      __n128 v31 = a2[2];
      v39[1] = a2[1];
      v39[2] = v31;
      __n128 v32 = *a1;
      __n128 v33 = a1[1];
      v38[2] = a1[2];
      v39[0] = v30;
      v38[0] = v32;
      v38[1] = v33;
      if (v29(v39, v38))
      {
        __n128 result = *a1;
        __n128 v34 = a1[1];
        __n128 v35 = a1[2];
        __n128 v37 = a2[1];
        __n128 v36 = a2[2];
        *a1 = *a2;
        a1[1] = v37;
        a1[2] = v36;
        a2[1] = v34;
        a2[2] = v35;
        *a2 = result;
      }
    }
  }
  return result;
}

__n128 sub_10000A48C(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, unsigned int (**a6)(void, void))
{
  sub_10000A348((__n128 *)a1, a2, a3, a4, a6);
  __n128 v12 = *a6;
  __n128 v13 = a5[1];
  v57[0] = *a5;
  v57[1] = v13;
  v57[2] = a5[2];
  __n128 v14 = a4[1];
  v56[0] = *a4;
  v56[1] = v14;
  v56[2] = a4[2];
  if (v12(v57, v56))
  {
    __n128 v16 = *a4;
    __n128 v17 = a4[1];
    __n128 v18 = a4[2];
    __n128 v20 = a5[1];
    __n128 v19 = a5[2];
    *a4 = *a5;
    a4[1] = v20;
    a4[2] = v19;
    a5[1] = v17;
    a5[2] = v18;
    *a5 = v16;
    __n128 v21 = *a6;
    __n128 v22 = *a4;
    __n128 v23 = a4[2];
    v55[1] = a4[1];
    v55[2] = v23;
    __n128 v24 = *a3;
    __n128 v25 = a3[1];
    v54[2] = a3[2];
    v55[0] = v22;
    v54[0] = v24;
    v54[1] = v25;
    if (v21(v55, v54))
    {
      __n128 v26 = *a3;
      __n128 v27 = a3[1];
      __n128 v28 = a3[2];
      __n128 v30 = a4[1];
      __n128 v29 = a4[2];
      *a3 = *a4;
      a3[1] = v30;
      a3[2] = v29;
      a4[1] = v27;
      a4[2] = v28;
      *a4 = v26;
      __n128 v31 = *a6;
      __n128 v32 = *a3;
      __n128 v33 = a3[2];
      v53[1] = a3[1];
      v53[2] = v33;
      __n128 v34 = *a2;
      __n128 v35 = a2[1];
      v52[2] = a2[2];
      v53[0] = v32;
      v52[0] = v34;
      v52[1] = v35;
      if (v31(v53, v52))
      {
        __n128 v36 = *a2;
        __n128 v37 = a2[1];
        __n128 v38 = a2[2];
        __n128 v40 = a3[1];
        __n128 v39 = a3[2];
        *a2 = *a3;
        a2[1] = v40;
        a2[2] = v39;
        a3[1] = v37;
        a3[2] = v38;
        *a3 = v36;
        long long v41 = *a6;
        __n128 v42 = *a2;
        __n128 v43 = a2[2];
        v51[1] = a2[1];
        v51[2] = v43;
        __n128 v44 = *(__n128 *)a1;
        long long v45 = *(_OWORD *)(a1 + 16);
        v50[2] = *(_OWORD *)(a1 + 32);
        v51[0] = v42;
        v50[0] = v44;
        v50[1] = v45;
        if (v41(v51, v50))
        {
          __n128 result = *(__n128 *)a1;
          __n128 v46 = *(__n128 *)(a1 + 16);
          __n128 v47 = *(__n128 *)(a1 + 32);
          __n128 v49 = a2[1];
          __n128 v48 = a2[2];
          *(__n128 *)a1 = *a2;
          *(__n128 *)(a1 + 16) = v49;
          *(__n128 *)(a1 + 32) = v48;
          a2[1] = v46;
          a2[2] = v47;
          *a2 = result;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_10000A62C(uint64_t a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  if ((_OWORD *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) / 48;
    if ((uint64_t)a2 - a1 >= 49)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      __n128 v12 = (__n128 *)(a1 + 48 * v10);
      do
      {
        sub_10000A818(a1, a4, v9, v12);
        v12 -= 3;
        --v11;
      }
      while (v11);
    }
    __n128 v13 = a2;
    if (a2 != a3)
    {
      __n128 v14 = a2;
      do
      {
        __n128 v15 = (unsigned int (*)(_OWORD *, _OWORD *))*a4;
        long long v16 = v14[1];
        v34[0] = *v14;
        v34[1] = v16;
        v34[2] = v14[2];
        long long v17 = *(_OWORD *)(a1 + 16);
        v33[0] = *(_OWORD *)a1;
        v33[1] = v17;
        v33[2] = *(_OWORD *)(a1 + 32);
        if (v15(v34, v33))
        {
          long long v18 = *v14;
          long long v19 = v14[1];
          long long v20 = v14[2];
          long long v22 = *(_OWORD *)(a1 + 16);
          long long v21 = *(_OWORD *)(a1 + 32);
          *__n128 v14 = *(_OWORD *)a1;
          v14[1] = v22;
          v14[2] = v21;
          *(_OWORD *)(a1 + 16) = v19;
          *(_OWORD *)(a1 + 32) = v20;
          *(_OWORD *)a1 = v18;
          sub_10000A818(a1, a4, v9, (__n128 *)a1);
        }
        v14 += 3;
      }
      while (v14 != a3);
      __n128 v13 = a3;
    }
    if (v8 >= 49)
    {
      int64_t v23 = v8 / 0x30uLL;
      __n128 v24 = (__n128 *)(a2 - 3);
      do
      {
        __n128 v25 = *(__n128 *)(a1 + 16);
        __n128 v35 = *(__n128 *)a1;
        __n128 v36 = v25;
        __n128 v37 = *(__n128 *)(a1 + 32);
        __n128 v26 = (__n128 *)sub_10000A9FC((_OWORD *)a1, (unsigned int (**)(_OWORD *, _OWORD *))a4, v23);
        if (v24 == v26)
        {
          __n128 v30 = v36;
          __n128 *v26 = v35;
          v26[1] = v30;
          v26[2] = v37;
        }
        else
        {
          __n128 v27 = *v24;
          __n128 v28 = v24[2];
          v26[1] = v24[1];
          v26[2] = v28;
          __n128 *v26 = v27;
          __n128 v29 = v36;
          *__n128 v24 = v35;
          v24[1] = v29;
          v24[2] = v37;
          sub_10000AAE8(a1, (uint64_t)&v26[3], a4, 0xAAAAAAAAAAAAAAABLL * (((uint64_t)&v26[3] - a1) >> 4));
        }
        v24 -= 3;
      }
      while (v23-- > 2);
    }
    return v13;
  }
  return a3;
}

__n128 sub_10000A818(uint64_t a1, unsigned int (**a2)(void, void), uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v48 = v4;
    uint64_t v49 = v5;
    long long v7 = a4;
    uint64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 4)))
    {
      uint64_t v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 4)) | 1;
      __n128 v13 = (__n128 *)(a1 + 48 * v12);
      uint64_t v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 4) + 2;
      if (v14 < a3)
      {
        __n128 v15 = *a2;
        __n128 v16 = v13[1];
        v47[0] = *v13;
        v47[1] = v16;
        __n128 v17 = v13[3];
        v47[2] = v13[2];
        __n128 v18 = v13[4];
        __n128 v19 = v13[5];
        v46[0] = v17;
        v46[1] = v18;
        v46[2] = v19;
        if (v15(v47, v46))
        {
          v13 += 3;
          uint64_t v12 = v14;
        }
      }
      long long v20 = *a2;
      __n128 v21 = v13[1];
      v45[0] = *v13;
      v45[1] = v21;
      v45[2] = v13[2];
      __n128 v22 = v7[1];
      v44[0] = *v7;
      v44[1] = v22;
      v44[2] = v7[2];
      if ((((uint64_t (*)(_OWORD *, _OWORD *))v20)(v45, v44) & 1) == 0)
      {
        __n128 v24 = v7[1];
        __n128 v41 = *v7;
        __n128 v42 = v24;
        __n128 v43 = v7[2];
        do
        {
          __n128 v25 = v13;
          __n128 v26 = *v13;
          __n128 v27 = v13[2];
          v7[1] = v13[1];
          v7[2] = v27;
          *long long v7 = v26;
          if (v9 < v12) {
            break;
          }
          uint64_t v28 = (2 * v12) | 1;
          __n128 v13 = (__n128 *)(a1 + 48 * v28);
          if (2 * v12 + 2 < a3)
          {
            __n128 v29 = *a2;
            __n128 v30 = v13[1];
            v40[0] = *v13;
            v40[1] = v30;
            __n128 v31 = v13[3];
            v40[2] = v13[2];
            __n128 v32 = v13[4];
            __n128 v33 = v13[5];
            v39[0] = v31;
            v39[1] = v32;
            v39[2] = v33;
            if (v29(v40, v39))
            {
              v13 += 3;
              uint64_t v28 = 2 * v12 + 2;
            }
          }
          __n128 v34 = *a2;
          __n128 v35 = v13[1];
          v38[0] = *v13;
          v38[1] = v35;
          v38[2] = v13[2];
          v37[0] = v41;
          v37[1] = v42;
          v37[2] = v43;
          long long v7 = v25;
          uint64_t v12 = v28;
        }
        while (!v34(v38, v37));
        __n128 result = v41;
        __n128 v36 = v43;
        v25[1] = v42;
        v25[2] = v36;
        *__n128 v25 = result;
      }
    }
  }
  return result;
}

_OWORD *sub_10000A9FC(_OWORD *a1, unsigned int (**a2)(_OWORD *, _OWORD *), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = &a1[3 * v6 + 3];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      uint64_t v12 = *a2;
      long long v14 = v9[1];
      long long v13 = v9[2];
      v21[0] = *v9;
      v21[1] = v14;
      v21[2] = v13;
      long long v15 = v9[3];
      long long v16 = v9[5];
      v20[1] = v9[4];
      v20[2] = v16;
      v20[0] = v15;
      if (v12(v21, v20))
      {
        v9 += 3;
        uint64_t v10 = v11;
      }
    }
    long long v17 = *v9;
    long long v18 = v9[2];
    a1[1] = v9[1];
    a1[2] = v18;
    *a1 = v17;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

double sub_10000AAE8(uint64_t a1, uint64_t a2, unsigned int (**a3)(void, void), uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v31 = v4;
    uint64_t v32 = v5;
    unint64_t v9 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v10 = *a3;
    uint64_t v11 = (_OWORD *)(a1 + 48 * v9);
    long long v12 = v11[1];
    v30[0] = *v11;
    v30[1] = v12;
    v30[2] = v11[2];
    long long v13 = *(_OWORD *)(a2 - 32);
    v29[0] = *(_OWORD *)(a2 - 48);
    v29[1] = v13;
    v29[2] = *(_OWORD *)(a2 - 16);
    if (v10(v30, v29))
    {
      long long v15 = (_OWORD *)(a2 - 48);
      long long v16 = *(_OWORD *)(a2 - 32);
      long long v26 = *(_OWORD *)(a2 - 48);
      long long v27 = v16;
      long long v28 = *(_OWORD *)(a2 - 16);
      do
      {
        long long v17 = v11;
        long long v18 = *v11;
        long long v19 = v11[2];
        v15[1] = v11[1];
        v15[2] = v19;
        *long long v15 = v18;
        if (!v9) {
          break;
        }
        unint64_t v9 = (v9 - 1) >> 1;
        long long v20 = *a3;
        uint64_t v11 = (_OWORD *)(a1 + 48 * v9);
        long long v21 = v11[1];
        v25[0] = *v11;
        v25[1] = v21;
        v25[2] = v11[2];
        v24[0] = v26;
        v24[1] = v27;
        v24[2] = v28;
        char v22 = v20(v25, v24);
        long long v15 = v17;
      }
      while ((v22 & 1) != 0);
      long long v23 = v27;
      *long long v17 = v26;
      v17[1] = v23;
      double result = *(double *)&v28;
      v17[2] = v28;
    }
  }
  return result;
}

void *sub_10000AC00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58) {
    sub_1000094B0();
  }
  return operator new(a2 << 6);
}

void sub_10000AC38(long long *a1, long long *a2, unsigned int (**a3)(void, void), uint64_t a4, char a5)
{
uint64_t sub_10000AF8C(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v38 = v3;
    uint64_t v39 = v4;
    char v6 = (_OWORD *)result;
    uint64_t v7 = (long long *)(result + 64);
    if ((long long *)(result + 64) != a2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = (long long *)result;
      do
      {
        uint64_t v11 = v10;
        uint64_t v10 = v7;
        long long v12 = *a3;
        long long v13 = v10[1];
        v37[0] = *v10;
        v37[1] = v13;
        long long v14 = v10[3];
        v37[2] = v10[2];
        _OWORD v37[3] = v14;
        long long v15 = v11[3];
        long long v17 = *v11;
        long long v16 = v11[1];
        v36[2] = v11[2];
        v36[3] = v15;
        v36[0] = v17;
        v36[1] = v16;
        double result = v12(v37, v36);
        if (result)
        {
          long long v18 = v10[1];
          long long v32 = *v10;
          long long v33 = v18;
          long long v19 = v10[3];
          long long v34 = v10[2];
          long long v35 = v19;
          uint64_t v20 = v9;
          while (1)
          {
            long long v21 = (_OWORD *)((char *)v6 + v20);
            long long v22 = *(_OWORD *)((char *)v6 + v20 + 16);
            v21[4] = *(_OWORD *)((char *)v6 + v20);
            v21[5] = v22;
            long long v23 = *(_OWORD *)((char *)v6 + v20 + 48);
            v21[6] = *(_OWORD *)((char *)v6 + v20 + 32);
            v21[7] = v23;
            if (!v20) {
              break;
            }
            long long v24 = *a3;
            v31[0] = v32;
            v31[1] = v33;
            v31[2] = v34;
            v31[3] = v35;
            long long v25 = *(v21 - 3);
            v30[0] = *(v21 - 4);
            v30[1] = v25;
            long long v26 = *(v21 - 1);
            v30[2] = *(v21 - 2);
            _OWORD v30[3] = v26;
            double result = v24(v31, v30);
            v20 -= 64;
            if ((result & 1) == 0)
            {
              long long v27 = (_OWORD *)((char *)v6 + v20 + 64);
              goto LABEL_10;
            }
          }
          long long v27 = v6;
LABEL_10:
          long long v28 = v33;
          *long long v27 = v32;
          v27[1] = v28;
          long long v29 = v35;
          v27[2] = v34;
          v27[3] = v29;
        }
        uint64_t v7 = v10 + 4;
        v9 += 64;
      }
      while (v10 + 4 != a2);
    }
  }
  return result;
}

uint64_t sub_10000B0C4(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v36 = v3;
    uint64_t v37 = v4;
    char v6 = (long long *)result;
    for (uint64_t i = (long long *)(result + 64); v6 + 4 != a2; uint64_t i = v6 + 4)
    {
      uint64_t v9 = v6;
      char v6 = i;
      uint64_t v10 = *a3;
      long long v11 = v6[1];
      v35[0] = *v6;
      v35[1] = v11;
      long long v12 = v6[3];
      v35[2] = v6[2];
      v35[3] = v12;
      long long v13 = v9[3];
      long long v15 = *v9;
      long long v14 = v9[1];
      v34[2] = v9[2];
      _OWORD v34[3] = v13;
      v34[0] = v15;
      v34[1] = v14;
      double result = v10(v35, v34);
      if (result)
      {
        long long v16 = v6[1];
        long long v30 = *v6;
        long long v31 = v16;
        long long v17 = v6[3];
        long long v32 = v6[2];
        long long v33 = v17;
        long long v18 = v6;
        do
        {
          long long v19 = v18 - 4;
          long long v20 = *(v18 - 3);
          *long long v18 = *(v18 - 4);
          v18[1] = v20;
          long long v21 = *(v18 - 1);
          v18[2] = *(v18 - 2);
          v18[3] = v21;
          long long v22 = *a3;
          v29[0] = v30;
          v29[1] = v31;
          v29[2] = v32;
          _OWORD v29[3] = v33;
          long long v23 = *(v18 - 8);
          long long v24 = *(v18 - 7);
          long long v25 = *(v18 - 5);
          v28[2] = *(v18 - 6);
          _OWORD v28[3] = v25;
          v28[0] = v23;
          v28[1] = v24;
          double result = v22(v29, v28);
          long long v18 = v19;
        }
        while ((result & 1) != 0);
        long long v26 = v31;
        *long long v19 = v30;
        v19[1] = v26;
        long long v27 = v33;
        v19[2] = v32;
        v19[3] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_10000B1D4(_OWORD *a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  uint64_t v8 = *a4;
  long long v9 = a2[1];
  v80[0] = *a2;
  v80[1] = v9;
  long long v10 = a2[3];
  v80[2] = a2[2];
  v80[3] = v10;
  long long v11 = a1[1];
  v79[0] = *a1;
  v79[1] = v11;
  long long v12 = a1[3];
  v79[2] = a1[2];
  v79[3] = v12;
  char v13 = v8(v80, v79);
  long long v14 = *a4;
  if (v13)
  {
    long long v15 = a3[1];
    v74[0] = *a3;
    v74[1] = v15;
    long long v16 = a3[3];
    v74[2] = a3[2];
    v74[3] = v16;
    long long v17 = a2[1];
    v73[0] = *a2;
    v73[1] = v17;
    long long v18 = a2[3];
    v73[2] = a2[2];
    v73[3] = v18;
    if (v14(v74, v73))
    {
      long long v20 = a1[2];
      long long v19 = a1[3];
      long long v22 = *a1;
      long long v21 = a1[1];
      long long v23 = a3[3];
      long long v25 = *a3;
      long long v24 = a3[1];
      a1[2] = a3[2];
      a1[3] = v23;
      *a1 = v25;
      a1[1] = v24;
      *a3 = v22;
      a3[1] = v21;
      uint64_t result = 1;
LABEL_9:
      a3[2] = v20;
      a3[3] = v19;
      return result;
    }
    long long v53 = a1[2];
    long long v52 = a1[3];
    long long v55 = *a1;
    long long v54 = a1[1];
    long long v56 = a2[3];
    long long v58 = *a2;
    long long v57 = a2[1];
    a1[2] = a2[2];
    a1[3] = v56;
    *a1 = v58;
    a1[1] = v57;
    *a2 = v55;
    a2[1] = v54;
    a2[2] = v53;
    a2[3] = v52;
    long long v59 = *a4;
    long long v60 = *a3;
    long long v61 = a3[1];
    long long v62 = a3[3];
    v72[2] = a3[2];
    v72[3] = v62;
    v72[0] = v60;
    v72[1] = v61;
    long long v63 = *a2;
    long long v64 = a2[1];
    long long v65 = a2[3];
    v71[2] = a2[2];
    v71[3] = v65;
    v71[0] = v63;
    v71[1] = v64;
    if (v59(v72, v71))
    {
      long long v20 = a2[2];
      long long v19 = a2[3];
      long long v67 = *a2;
      long long v66 = a2[1];
      long long v68 = a3[3];
      long long v70 = *a3;
      long long v69 = a3[1];
      a2[2] = a3[2];
      a2[3] = v68;
      *a2 = v70;
      a2[1] = v69;
      *a3 = v67;
      a3[1] = v66;
      uint64_t result = 2;
      goto LABEL_9;
    }
  }
  else
  {
    long long v27 = a3[1];
    v78[0] = *a3;
    v78[1] = v27;
    long long v28 = a3[3];
    v78[2] = a3[2];
    v78[3] = v28;
    long long v29 = a2[1];
    v77[0] = *a2;
    v77[1] = v29;
    long long v30 = a2[3];
    v77[2] = a2[2];
    v77[3] = v30;
    uint64_t result = ((uint64_t (*)(_OWORD *, _OWORD *))v14)(v78, v77);
    if (!result) {
      return result;
    }
    long long v32 = a2[2];
    long long v31 = a2[3];
    long long v34 = *a2;
    long long v33 = a2[1];
    long long v35 = a3[3];
    long long v37 = *a3;
    long long v36 = a3[1];
    a2[2] = a3[2];
    a2[3] = v35;
    *a2 = v37;
    a2[1] = v36;
    *a3 = v34;
    a3[1] = v33;
    a3[2] = v32;
    a3[3] = v31;
    uint64_t v38 = *a4;
    long long v39 = *a2;
    long long v40 = a2[1];
    long long v41 = a2[3];
    v76[2] = a2[2];
    v76[3] = v41;
    v76[0] = v39;
    v76[1] = v40;
    long long v42 = *a1;
    long long v43 = a1[1];
    long long v44 = a1[3];
    v75[2] = a1[2];
    v75[3] = v44;
    v75[0] = v42;
    v75[1] = v43;
    if (v38(v76, v75))
    {
      long long v46 = a1[2];
      long long v45 = a1[3];
      long long v48 = *a1;
      long long v47 = a1[1];
      long long v49 = a2[3];
      long long v51 = *a2;
      long long v50 = a2[1];
      a1[2] = a2[2];
      a1[3] = v49;
      *a1 = v51;
      a1[1] = v50;
      *a2 = v48;
      a2[1] = v47;
      uint64_t result = 2;
      a2[2] = v46;
      a2[3] = v45;
      return result;
    }
  }
  return 1;
}

long long *sub_10000B3D0(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v4 = a2;
  long long v6 = a1[1];
  long long v66 = *a1;
  long long v67 = v6;
  long long v7 = a1[3];
  long long v68 = a1[2];
  long long v69 = v7;
  uint64_t v8 = *a3;
  v65[0] = v66;
  v65[1] = v6;
  v65[2] = v68;
  v65[3] = v7;
  long long v9 = *(a2 - 4);
  long long v10 = *(a2 - 3);
  long long v11 = *(a2 - 1);
  v64[2] = *(a2 - 2);
  v64[3] = v11;
  v64[0] = v9;
  v64[1] = v10;
  if (v8(v65, v64))
  {
    long long v12 = a1;
    do
    {
      char v13 = v12 + 4;
      long long v14 = *a3;
      v63[0] = v66;
      v63[1] = v67;
      v63[2] = v68;
      v63[3] = v69;
      long long v15 = v12[5];
      v62[0] = v12[4];
      v62[1] = v15;
      long long v16 = v12[7];
      v62[2] = v12[6];
      v62[3] = v16;
      char v17 = v14(v63, v62);
      long long v12 = v13;
    }
    while ((v17 & 1) == 0);
  }
  else
  {
    long long v18 = a1 + 4;
    do
    {
      char v13 = v18;
      if (v18 >= v4) {
        break;
      }
      long long v19 = *a3;
      v61[0] = v66;
      v61[1] = v67;
      v61[2] = v68;
      v61[3] = v69;
      long long v20 = v13[1];
      v60[0] = *v13;
      v60[1] = v20;
      long long v21 = v13[3];
      v60[2] = v13[2];
      v60[3] = v21;
      int v22 = v19(v61, v60);
      long long v18 = v13 + 4;
    }
    while (!v22);
  }
  if (v13 >= v4)
  {
    long long v23 = v4;
  }
  else
  {
    do
    {
      long long v23 = v4 - 4;
      long long v24 = *a3;
      v59[0] = v66;
      v59[1] = v67;
      v59[2] = v68;
      _OWORD v59[3] = v69;
      long long v25 = *(v4 - 3);
      v58[0] = *(v4 - 4);
      v58[1] = v25;
      long long v26 = *(v4 - 1);
      v58[2] = *(v4 - 2);
      _OWORD v58[3] = v26;
      v4 -= 4;
    }
    while ((v24(v59, v58) & 1) != 0);
  }
  while (v13 < v23)
  {
    long long v27 = *v13;
    long long v28 = v13[1];
    long long v29 = v13[3];
    long long v72 = v13[2];
    long long v73 = v29;
    long long v70 = v27;
    long long v71 = v28;
    long long v30 = *v23;
    long long v31 = v23[1];
    long long v32 = v23[3];
    v13[2] = v23[2];
    v13[3] = v32;
    *char v13 = v30;
    v13[1] = v31;
    long long v33 = v70;
    long long v34 = v71;
    long long v35 = v73;
    v23[2] = v72;
    _OWORD v23[3] = v35;
    *long long v23 = v33;
    v23[1] = v34;
    do
    {
      v57[0] = v66;
      v57[1] = v67;
      v57[2] = v68;
      _OWORD v57[3] = v69;
      long long v36 = v13[6];
      long long v37 = v13[7];
      long long v39 = v13[4];
      long long v38 = v13[5];
      v13 += 4;
      long long v40 = (unsigned int (*)(void, void))*a3;
      v56[2] = v36;
      _OWORD v56[3] = v37;
      v56[0] = v39;
      v56[1] = v38;
    }
    while (!v40(v57, v56));
    do
    {
      v55[0] = v66;
      v55[1] = v67;
      v55[2] = v68;
      _OWORD v55[3] = v69;
      long long v41 = *(v23 - 2);
      long long v42 = *(v23 - 1);
      long long v44 = *(v23 - 4);
      long long v43 = *(v23 - 3);
      v23 -= 4;
      long long v45 = *a3;
      v54[2] = v41;
      _OWORD v54[3] = v42;
      v54[0] = v44;
      v54[1] = v43;
    }
    while ((v45(v55, v54) & 1) != 0);
  }
  long long v46 = v13 - 4;
  if (v13 - 4 != a1)
  {
    long long v47 = *v46;
    long long v48 = *(v13 - 3);
    long long v49 = *(v13 - 1);
    a1[2] = *(v13 - 2);
    a1[3] = v49;
    *a1 = v47;
    a1[1] = v48;
  }
  long long v50 = v66;
  long long v51 = v67;
  long long v52 = v69;
  *(v13 - 2) = v68;
  *(v13 - 1) = v52;
  *long long v46 = v50;
  *(v13 - 3) = v51;
  return v13;
}

long long *sub_10000B5F8(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v6 = 0;
  long long v7 = a1[1];
  long long v57 = *a1;
  long long v58 = v7;
  long long v8 = a1[3];
  long long v59 = a1[2];
  long long v60 = v8;
  do
  {
    long long v9 = *a3;
    long long v10 = a1[v6 + 5];
    v56[0] = a1[v6 + 4];
    v56[1] = v10;
    long long v11 = a1[v6 + 7];
    v56[2] = a1[v6 + 6];
    _OWORD v56[3] = v11;
    v55[0] = v57;
    v55[1] = v58;
    v55[2] = v59;
    _OWORD v55[3] = v60;
    v6 += 4;
  }
  while ((v9(v56, v55) & 1) != 0);
  long long v12 = &a1[v6];
  char v13 = &a1[v6 - 4];
  if (v6 == 4)
  {
    while (v12 < a2)
    {
      long long v18 = *a3;
      long long v14 = a2 - 4;
      long long v19 = *(a2 - 3);
      v54[0] = *(a2 - 4);
      v54[1] = v19;
      long long v20 = *(a2 - 1);
      v54[2] = *(a2 - 2);
      _OWORD v54[3] = v20;
      v53[0] = v57;
      v53[1] = v58;
      v53[2] = v59;
      _OWORD v53[3] = v60;
      a2 -= 4;
      if (v18(v54, v53)) {
        goto LABEL_9;
      }
    }
    long long v14 = a2;
  }
  else
  {
    do
    {
      long long v14 = a2 - 4;
      long long v15 = (unsigned int (*)(void, void))*a3;
      long long v16 = *(a2 - 3);
      v52[0] = *(a2 - 4);
      v52[1] = v16;
      long long v17 = *(a2 - 1);
      v52[2] = *(a2 - 2);
      _OWORD v52[3] = v17;
      v51[0] = v57;
      v51[1] = v58;
      v51[2] = v59;
      _OWORD v51[3] = v60;
      a2 -= 4;
    }
    while (!v15(v52, v51));
  }
LABEL_9:
  if (v12 < v14)
  {
    long long v21 = v12;
    int v22 = v14;
    do
    {
      long long v24 = v21[1];
      long long v61 = *v21;
      long long v23 = v61;
      long long v62 = v24;
      long long v26 = v21[3];
      long long v63 = v21[2];
      long long v25 = v63;
      long long v64 = v26;
      long long v28 = v22[2];
      long long v27 = v22[3];
      long long v29 = v22[1];
      long long *v21 = *v22;
      v21[1] = v29;
      v21[2] = v28;
      _OWORD v21[3] = v27;
      v22[2] = v25;
      v22[3] = v26;
      *int v22 = v23;
      v22[1] = v24;
      do
      {
        long long v30 = v21[6];
        long long v31 = v21[7];
        long long v33 = v21[4];
        long long v32 = v21[5];
        v21 += 4;
        long long v34 = *a3;
        v50[2] = v30;
        _OWORD v50[3] = v31;
        v50[0] = v33;
        v50[1] = v32;
        v49[0] = v57;
        v49[1] = v58;
        v49[2] = v59;
        _OWORD v49[3] = v60;
      }
      while ((v34(v50, v49) & 1) != 0);
      do
      {
        long long v35 = *(v22 - 2);
        long long v36 = *(v22 - 1);
        long long v38 = *(v22 - 4);
        long long v37 = *(v22 - 3);
        v22 -= 4;
        long long v39 = (unsigned int (*)(void, void))*a3;
        v48[2] = v35;
        _OWORD v48[3] = v36;
        v48[0] = v38;
        v48[1] = v37;
        v47[0] = v57;
        v47[1] = v58;
        v47[2] = v59;
        _OWORD v47[3] = v60;
      }
      while (!v39(v48, v47));
    }
    while (v21 < v22);
    char v13 = v21 - 4;
  }
  if (v13 != a1)
  {
    long long v40 = *v13;
    long long v41 = v13[1];
    long long v42 = v13[3];
    a1[2] = v13[2];
    a1[3] = v42;
    *a1 = v40;
    a1[1] = v41;
  }
  long long v43 = v57;
  long long v44 = v58;
  long long v45 = v60;
  v13[2] = v59;
  v13[3] = v45;
  *char v13 = v43;
  v13[1] = v44;
  return v13;
}

BOOL sub_10000B808(uint64_t a1, __n128 *a2, unsigned int (**a3)(void, void))
{
  uint64_t v6 = ((uint64_t)a2 - a1) >> 6;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      long long v8 = *a3;
      __n128 v9 = a2[-3];
      v52[0] = a2[-4];
      v52[1] = v9;
      __n128 v10 = a2[-1];
      v52[2] = a2[-2];
      _OWORD v52[3] = v10;
      long long v11 = *(_OWORD *)(a1 + 16);
      v51[0] = *(_OWORD *)a1;
      v51[1] = v11;
      long long v12 = *(_OWORD *)(a1 + 48);
      v51[2] = *(_OWORD *)(a1 + 32);
      _OWORD v51[3] = v12;
      if (!v8(v52, v51)) {
        return 1;
      }
      char v13 = a2 - 4;
      __n128 v15 = *(__n128 *)(a1 + 32);
      __n128 v14 = *(__n128 *)(a1 + 48);
      __n128 v17 = *(__n128 *)a1;
      __n128 v16 = *(__n128 *)(a1 + 16);
      __n128 v18 = a2[-1];
      __n128 v20 = a2[-4];
      __n128 v19 = a2[-3];
      *(__n128 *)(a1 + 32) = a2[-2];
      *(__n128 *)(a1 + 48) = v18;
      *(__n128 *)a1 = v20;
      *(__n128 *)(a1 + 16) = v19;
      *char v13 = v17;
      v13[1] = v16;
      BOOL result = 1;
      v13[2] = v15;
      v13[3] = v14;
      return result;
    case 3:
      sub_10000B1D4((_OWORD *)a1, (_OWORD *)(a1 + 64), (__n128 *)a2[-4].n128_u64, a3);
      return 1;
    case 4:
      sub_10000BA70((__n128 *)a1, (__n128 *)(a1 + 64), (__n128 *)(a1 + 128), a2 - 4, a3);
      return 1;
    case 5:
      sub_10000BBBC(a1, (__n128 *)(a1 + 64), (__n128 *)(a1 + 128), (__n128 *)(a1 + 192), a2 - 4, a3);
      return 1;
    default:
      long long v21 = (__n128 *)(a1 + 128);
      sub_10000B1D4((_OWORD *)a1, (_OWORD *)(a1 + 64), (_OWORD *)(a1 + 128), a3);
      int v22 = (__n128 *)(a1 + 192);
      if ((__n128 *)(a1 + 192) == a2) {
        return 1;
      }
      uint64_t v23 = 0;
      int v24 = 0;
      break;
  }
  while (1)
  {
    long long v25 = *a3;
    __n128 v26 = v22[1];
    v50[0] = *v22;
    v50[1] = v26;
    __n128 v27 = v22[3];
    v50[2] = v22[2];
    _OWORD v50[3] = v27;
    __n128 v28 = v21[3];
    __n128 v30 = *v21;
    __n128 v29 = v21[1];
    v49[2] = v21[2];
    _OWORD v49[3] = v28;
    v49[0] = v30;
    v49[1] = v29;
    if (v25(v50, v49))
    {
      __n128 v31 = v22[1];
      __n128 v45 = *v22;
      __n128 v46 = v31;
      __n128 v32 = v22[3];
      __n128 v47 = v22[2];
      __n128 v48 = v32;
      uint64_t v33 = v23;
      while (1)
      {
        long long v34 = (_OWORD *)(a1 + v33);
        long long v35 = *(_OWORD *)(a1 + v33 + 144);
        v34[12] = *(_OWORD *)(a1 + v33 + 128);
        v34[13] = v35;
        long long v36 = *(_OWORD *)(a1 + v33 + 176);
        v34[14] = *(_OWORD *)(a1 + v33 + 160);
        v34[15] = v36;
        if (v33 == -128) {
          break;
        }
        long long v37 = *a3;
        v44[0] = v45;
        v44[1] = v46;
        v44[2] = v47;
        _OWORD v44[3] = v48;
        long long v38 = v34[5];
        v43[0] = v34[4];
        v43[1] = v38;
        long long v39 = v34[7];
        v43[2] = v34[6];
        _OWORD v43[3] = v39;
        v33 -= 64;
        if ((((uint64_t (*)(_OWORD *, _OWORD *))v37)(v44, v43) & 1) == 0)
        {
          long long v40 = (_OWORD *)(a1 + v33 + 192);
          goto LABEL_12;
        }
      }
      long long v40 = (_OWORD *)a1;
LABEL_12:
      __n128 v41 = v46;
      *long long v40 = v45;
      v40[1] = v41;
      __n128 v42 = v48;
      v40[2] = v47;
      _OWORD v40[3] = v42;
      if (++v24 == 8) {
        return &v22[4] == a2;
      }
    }
    long long v21 = v22;
    v23 += 64;
    v22 += 4;
    if (v22 == a2) {
      return 1;
    }
  }
}

__n128 sub_10000BA70(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, unsigned int (**a5)(void, void))
{
  sub_10000B1D4(a1, a2, a3, a5);
  __n128 v10 = *a5;
  __n128 v11 = a4[1];
  v55[0] = *a4;
  v55[1] = v11;
  __n128 v12 = a4[3];
  v55[2] = a4[2];
  _OWORD v55[3] = v12;
  __n128 v13 = a3[1];
  v54[0] = *a3;
  v54[1] = v13;
  __n128 v14 = a3[3];
  v54[2] = a3[2];
  _OWORD v54[3] = v14;
  if (v10(v55, v54))
  {
    __n128 v17 = a3[2];
    __n128 v16 = a3[3];
    __n128 v19 = *a3;
    __n128 v18 = a3[1];
    __n128 v20 = a4[3];
    __n128 v22 = *a4;
    __n128 v21 = a4[1];
    a3[2] = a4[2];
    a3[3] = v20;
    *a3 = v22;
    a3[1] = v21;
    *a4 = v19;
    a4[1] = v18;
    a4[2] = v17;
    a4[3] = v16;
    uint64_t v23 = *a5;
    __n128 v24 = *a3;
    __n128 v25 = a3[1];
    __n128 v26 = a3[3];
    v53[2] = a3[2];
    _OWORD v53[3] = v26;
    v53[0] = v24;
    v53[1] = v25;
    __n128 v27 = *a2;
    __n128 v28 = a2[1];
    __n128 v29 = a2[3];
    v52[2] = a2[2];
    _OWORD v52[3] = v29;
    v52[0] = v27;
    v52[1] = v28;
    if (v23(v53, v52))
    {
      __n128 v31 = a2[2];
      __n128 v30 = a2[3];
      __n128 v33 = *a2;
      __n128 v32 = a2[1];
      __n128 v34 = a3[3];
      __n128 v36 = *a3;
      __n128 v35 = a3[1];
      a2[2] = a3[2];
      a2[3] = v34;
      *a2 = v36;
      a2[1] = v35;
      *a3 = v33;
      a3[1] = v32;
      a3[2] = v31;
      a3[3] = v30;
      long long v37 = *a5;
      __n128 v38 = *a2;
      __n128 v39 = a2[1];
      __n128 v40 = a2[3];
      v51[2] = a2[2];
      _OWORD v51[3] = v40;
      v51[0] = v38;
      v51[1] = v39;
      __n128 v41 = *a1;
      __n128 v42 = a1[1];
      __n128 v43 = a1[3];
      v50[2] = a1[2];
      _OWORD v50[3] = v43;
      v50[0] = v41;
      v50[1] = v42;
      if (v37(v51, v50))
      {
        __n128 v44 = a1[2];
        __n128 result = a1[3];
        __n128 v46 = *a1;
        __n128 v45 = a1[1];
        __n128 v47 = a2[3];
        __n128 v49 = *a2;
        __n128 v48 = a2[1];
        a1[2] = a2[2];
        a1[3] = v47;
        *a1 = v49;
        a1[1] = v48;
        *a2 = v46;
        a2[1] = v45;
        a2[2] = v44;
        a2[3] = result;
      }
    }
  }
  return result;
}

__n128 sub_10000BBBC(uint64_t a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, unsigned int (**a6)(void, void))
{
  sub_10000BA70((__n128 *)a1, a2, a3, a4, a6);
  __n128 v12 = *a6;
  __n128 v13 = a5[1];
  v73[0] = *a5;
  v73[1] = v13;
  __n128 v14 = a5[3];
  v73[2] = a5[2];
  v73[3] = v14;
  __n128 v15 = a4[1];
  v72[0] = *a4;
  v72[1] = v15;
  __n128 v16 = a4[3];
  v72[2] = a4[2];
  v72[3] = v16;
  if (v12(v73, v72))
  {
    __n128 v19 = a4[2];
    __n128 v18 = a4[3];
    __n128 v21 = *a4;
    __n128 v20 = a4[1];
    __n128 v22 = a5[3];
    __n128 v24 = *a5;
    __n128 v23 = a5[1];
    a4[2] = a5[2];
    a4[3] = v22;
    *a4 = v24;
    a4[1] = v23;
    *a5 = v21;
    a5[1] = v20;
    a5[2] = v19;
    a5[3] = v18;
    __n128 v25 = *a6;
    __n128 v26 = *a4;
    __n128 v27 = a4[1];
    __n128 v28 = a4[3];
    v71[2] = a4[2];
    v71[3] = v28;
    v71[0] = v26;
    v71[1] = v27;
    __n128 v29 = *a3;
    __n128 v30 = a3[1];
    __n128 v31 = a3[3];
    v70[2] = a3[2];
    v70[3] = v31;
    v70[0] = v29;
    v70[1] = v30;
    if (v25(v71, v70))
    {
      __n128 v33 = a3[2];
      __n128 v32 = a3[3];
      __n128 v35 = *a3;
      __n128 v34 = a3[1];
      __n128 v36 = a4[3];
      __n128 v38 = *a4;
      __n128 v37 = a4[1];
      a3[2] = a4[2];
      a3[3] = v36;
      *a3 = v38;
      a3[1] = v37;
      *a4 = v35;
      a4[1] = v34;
      a4[2] = v33;
      a4[3] = v32;
      __n128 v39 = *a6;
      __n128 v40 = *a3;
      __n128 v41 = a3[1];
      __n128 v42 = a3[3];
      v69[2] = a3[2];
      v69[3] = v42;
      v69[0] = v40;
      v69[1] = v41;
      __n128 v43 = *a2;
      __n128 v44 = a2[1];
      __n128 v45 = a2[3];
      v68[2] = a2[2];
      v68[3] = v45;
      v68[0] = v43;
      v68[1] = v44;
      if (v39(v69, v68))
      {
        __n128 v47 = a2[2];
        __n128 v46 = a2[3];
        __n128 v49 = *a2;
        __n128 v48 = a2[1];
        __n128 v50 = a3[3];
        __n128 v52 = *a3;
        __n128 v51 = a3[1];
        a2[2] = a3[2];
        a2[3] = v50;
        *a2 = v52;
        a2[1] = v51;
        *a3 = v49;
        a3[1] = v48;
        a3[2] = v47;
        a3[3] = v46;
        long long v53 = *a6;
        __n128 v54 = *a2;
        __n128 v55 = a2[1];
        __n128 v56 = a2[3];
        v67[2] = a2[2];
        v67[3] = v56;
        v67[0] = v54;
        v67[1] = v55;
        __n128 v57 = *(__n128 *)a1;
        long long v58 = *(_OWORD *)(a1 + 16);
        long long v59 = *(_OWORD *)(a1 + 48);
        v66[2] = *(_OWORD *)(a1 + 32);
        v66[3] = v59;
        v66[0] = v57;
        v66[1] = v58;
        if (v53(v67, v66))
        {
          __n128 v60 = *(__n128 *)(a1 + 32);
          __n128 result = *(__n128 *)(a1 + 48);
          __n128 v62 = *(__n128 *)a1;
          __n128 v61 = *(__n128 *)(a1 + 16);
          __n128 v63 = a2[3];
          __n128 v65 = *a2;
          __n128 v64 = a2[1];
          *(__n128 *)(a1 + 32) = a2[2];
          *(__n128 *)(a1 + 48) = v63;
          *(__n128 *)a1 = v65;
          *(__n128 *)(a1 + 16) = v64;
          *a2 = v62;
          a2[1] = v61;
          a2[2] = v60;
          a2[3] = result;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_10000BD68(uint64_t a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  if ((_OWORD *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) >> 6;
    if ((uint64_t)a2 - a1 >= 65)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      __n128 v12 = (__n128 *)(a1 + (v10 << 6));
      do
      {
        sub_10000BF2C(a1, a4, v9, v12);
        v12 -= 4;
        --v11;
      }
      while (v11);
    }
    __n128 v13 = a2;
    if (a2 != a3)
    {
      __n128 v14 = a2;
      do
      {
        __n128 v15 = (unsigned int (*)(_OWORD *, _OWORD *))*a4;
        long long v16 = v14[1];
        v42[0] = *v14;
        v42[1] = v16;
        long long v17 = v14[3];
        v42[2] = v14[2];
        _OWORD v42[3] = v17;
        long long v18 = *(_OWORD *)(a1 + 16);
        v41[0] = *(_OWORD *)a1;
        v41[1] = v18;
        long long v19 = *(_OWORD *)(a1 + 48);
        double v41[2] = *(_OWORD *)(a1 + 32);
        _OWORD v41[3] = v19;
        if (v15(v42, v41))
        {
          long long v21 = v14[2];
          long long v20 = v14[3];
          long long v23 = *v14;
          long long v22 = v14[1];
          long long v24 = *(_OWORD *)(a1 + 48);
          long long v26 = *(_OWORD *)a1;
          long long v25 = *(_OWORD *)(a1 + 16);
          v14[2] = *(_OWORD *)(a1 + 32);
          v14[3] = v24;
          *__n128 v14 = v26;
          v14[1] = v25;
          *(_OWORD *)a1 = v23;
          *(_OWORD *)(a1 + 16) = v22;
          *(_OWORD *)(a1 + 32) = v21;
          *(_OWORD *)(a1 + 48) = v20;
          sub_10000BF2C(a1, a4, v9, (__n128 *)a1);
        }
        v14 += 4;
      }
      while (v14 != a3);
      __n128 v13 = a3;
    }
    if (v8 >= 65)
    {
      uint64_t v27 = (unint64_t)v8 >> 6;
      __n128 v28 = (__n128 *)(a2 - 4);
      do
      {
        __n128 v29 = *(__n128 *)(a1 + 16);
        __n128 v43 = *(__n128 *)a1;
        __n128 v44 = v29;
        __n128 v30 = *(__n128 *)(a1 + 48);
        __n128 v45 = *(__n128 *)(a1 + 32);
        __n128 v46 = v30;
        __n128 v31 = (__n128 *)sub_10000C0FC((_OWORD *)a1, (unsigned int (**)(_OWORD *, _OWORD *))a4, v27);
        if (v28 == v31)
        {
          __n128 v37 = v44;
          *__n128 v31 = v43;
          v31[1] = v37;
          __n128 v38 = v46;
          v31[2] = v45;
          v31[3] = v38;
        }
        else
        {
          __n128 v32 = *v28;
          __n128 v33 = v28[1];
          __n128 v34 = v28[3];
          v31[2] = v28[2];
          v31[3] = v34;
          *__n128 v31 = v32;
          v31[1] = v33;
          __n128 v35 = v44;
          *__n128 v28 = v43;
          v28[1] = v35;
          __n128 v36 = v46;
          v28[2] = v45;
          _OWORD v28[3] = v36;
          sub_10000C1DC(a1, (uint64_t)&v31[4], a4, ((uint64_t)&v31[4] - a1) >> 6);
        }
        v28 -= 4;
      }
      while (v27-- > 2);
    }
    return v13;
  }
  return a3;
}

__n128 sub_10000BF2C(uint64_t a1, unsigned int (**a2)(void, void), uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v56 = v4;
    uint64_t v57 = v5;
    long long v7 = a4;
    int64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= ((uint64_t)a4 - a1) >> 6)
    {
      uint64_t v12 = ((uint64_t)a4 - a1) >> 5;
      uint64_t v13 = v12 + 1;
      __n128 v14 = (__n128 *)(a1 + ((v12 + 1) << 6));
      uint64_t v15 = v12 + 2;
      if (v12 + 2 < a3)
      {
        long long v16 = *a2;
        __n128 v17 = v14[1];
        v55[0] = *v14;
        v55[1] = v17;
        __n128 v18 = v14[3];
        v55[2] = v14[2];
        _OWORD v55[3] = v18;
        __n128 v19 = v14[5];
        v54[0] = v14[4];
        v54[1] = v19;
        __n128 v20 = v14[7];
        v54[2] = v14[6];
        _OWORD v54[3] = v20;
        if (v16(v55, v54))
        {
          v14 += 4;
          uint64_t v13 = v15;
        }
      }
      long long v21 = *a2;
      __n128 v22 = v14[1];
      v53[0] = *v14;
      v53[1] = v22;
      __n128 v23 = v14[3];
      v53[2] = v14[2];
      _OWORD v53[3] = v23;
      __n128 v24 = v7[1];
      v52[0] = *v7;
      v52[1] = v24;
      __n128 v25 = v7[3];
      v52[2] = v7[2];
      _OWORD v52[3] = v25;
      if ((((uint64_t (*)(_OWORD *, _OWORD *))v21)(v53, v52) & 1) == 0)
      {
        __n128 v27 = v7[1];
        __n128 v48 = *v7;
        __n128 v49 = v27;
        __n128 v28 = v7[3];
        __n128 v50 = v7[2];
        __n128 v51 = v28;
        do
        {
          __n128 v29 = v14;
          __n128 v30 = *v14;
          __n128 v31 = v14[1];
          __n128 v32 = v14[3];
          v7[2] = v14[2];
          v7[3] = v32;
          *long long v7 = v30;
          v7[1] = v31;
          if (v9 < v13) {
            break;
          }
          uint64_t v33 = (2 * v13) | 1;
          __n128 v14 = (__n128 *)(a1 + (v33 << 6));
          if (2 * v13 + 2 < a3)
          {
            __n128 v34 = *a2;
            __n128 v35 = v14[1];
            v47[0] = *v14;
            v47[1] = v35;
            __n128 v36 = v14[3];
            v47[2] = v14[2];
            _OWORD v47[3] = v36;
            __n128 v37 = v14[5];
            v46[0] = v14[4];
            v46[1] = v37;
            __n128 v38 = v14[7];
            v46[2] = v14[6];
            _OWORD v46[3] = v38;
            if (v34(v47, v46))
            {
              v14 += 4;
              uint64_t v33 = 2 * v13 + 2;
            }
          }
          __n128 v39 = *a2;
          __n128 v40 = v14[1];
          v45[0] = *v14;
          v45[1] = v40;
          __n128 v41 = v14[3];
          v45[2] = v14[2];
          _OWORD v45[3] = v41;
          v44[0] = v48;
          v44[1] = v49;
          v44[2] = v50;
          _OWORD v44[3] = v51;
          long long v7 = v29;
          uint64_t v13 = v33;
        }
        while (!v39(v45, v44));
        __n128 result = v48;
        __n128 v42 = v49;
        __n128 v43 = v51;
        v29[2] = v50;
        _OWORD v29[3] = v43;
        *__n128 v29 = result;
        v29[1] = v42;
      }
    }
  }
  return result;
}

_OWORD *sub_10000C0FC(_OWORD *a1, unsigned int (**a2)(_OWORD *, _OWORD *), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    int64_t v9 = &a1[4 * v6 + 4];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      uint64_t v12 = *a2;
      long long v13 = v9[3];
      long long v15 = *v9;
      long long v14 = v9[1];
      v24[2] = v9[2];
      _OWORD v24[3] = v13;
      v24[0] = v15;
      v24[1] = v14;
      long long v16 = v9[7];
      long long v18 = v9[4];
      long long v17 = v9[5];
      v23[2] = v9[6];
      _OWORD v23[3] = v16;
      v23[0] = v18;
      v23[1] = v17;
      if (v12(v24, v23))
      {
        v9 += 4;
        uint64_t v10 = v11;
      }
    }
    long long v19 = *v9;
    long long v20 = v9[1];
    long long v21 = v9[3];
    a1[2] = v9[2];
    a1[3] = v21;
    *a1 = v19;
    a1[1] = v20;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

double sub_10000C1DC(uint64_t a1, uint64_t a2, unsigned int (**a3)(void, void), uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v39 = v4;
    uint64_t v40 = v5;
    uint64_t v10 = *a3;
    unint64_t v11 = v6 >> 1;
    uint64_t v12 = (_OWORD *)(a1 + (v6 >> 1 << 6));
    long long v13 = v12[1];
    v38[0] = *v12;
    v38[1] = v13;
    long long v14 = v12[3];
    v38[2] = v12[2];
    _OWORD v38[3] = v14;
    long long v15 = *(_OWORD *)(a2 - 48);
    v37[0] = *(_OWORD *)(a2 - 64);
    v37[1] = v15;
    long long v16 = *(_OWORD *)(a2 - 16);
    v37[2] = *(_OWORD *)(a2 - 32);
    _OWORD v37[3] = v16;
    if (v10(v38, v37))
    {
      long long v18 = (_OWORD *)(a2 - 64);
      long long v19 = *(_OWORD *)(a2 - 48);
      long long v33 = *(_OWORD *)(a2 - 64);
      long long v34 = v19;
      long long v20 = *(_OWORD *)(a2 - 16);
      long long v35 = *(_OWORD *)(a2 - 32);
      long long v36 = v20;
      do
      {
        long long v21 = v12;
        long long v22 = *v12;
        long long v23 = v12[1];
        long long v24 = v12[3];
        v18[2] = v12[2];
        v18[3] = v24;
        *long long v18 = v22;
        v18[1] = v23;
        if (!v11) {
          break;
        }
        __n128 v25 = *a3;
        unint64_t v11 = (v11 - 1) >> 1;
        uint64_t v12 = (_OWORD *)(a1 + (v11 << 6));
        long long v26 = v12[1];
        v32[0] = *v12;
        v32[1] = v26;
        long long v27 = v12[3];
        v32[2] = v12[2];
        v32[3] = v27;
        v31[0] = v33;
        v31[1] = v34;
        v31[2] = v35;
        v31[3] = v36;
        char v28 = v25(v32, v31);
        long long v18 = v21;
      }
      while ((v28 & 1) != 0);
      long long v29 = v34;
      _OWORD *v21 = v33;
      v21[1] = v29;
      double result = *(double *)&v35;
      long long v30 = v36;
      v21[2] = v35;
      _OWORD v21[3] = v30;
    }
  }
  return result;
}

void *sub_10000C2E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_1000094B0();
  }
  return operator new(32 * a2);
}

void *sub_10000C31C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1000094B0();
  }
  return operator new(8 * a2);
}

BOOL FTWidgetLingerStatePropertiesAreDifferent(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v3 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1000E508C();
    if (v4) {
      goto LABEL_6;
    }
  }
  else if (v4)
  {
    goto LABEL_6;
  }
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1000E4FC8();
  }
LABEL_6:
  uint64_t v5 = [v3 todaySourceIdentifier];
  unint64_t v6 = [v4 todaySourceIdentifier];
  if ([v5 isEqual:v6])
  {
    uint64_t v7 = [v3 appConfigTreatmentID];
    uint64_t v8 = [v4 appConfigTreatmentID];
    if (+[NSObject nf_object:isEqualToObject:](NSObject, "nf_object:isEqualToObject:", v7, v8)&& (id v9 = [v3 widgetDisplayMode], v9 == objc_msgSend(v4, "widgetDisplayMode")))
    {
      id v10 = [v3 appearanceType];
      BOOL v11 = v10 != [v4 appearanceType];
    }
    else
    {
      BOOL v11 = 1;
    }
  }
  else
  {
    BOOL v11 = 1;
  }

  return v11;
}

void sub_10000DA78(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000E5B64();
    }
    uint64_t v4 = *(void *)(a1 + 32);
  }
  [v3 ft_setTemporalBoundsBySanitizingStartDate:v4 endDate:*(void *)(a1 + 40)];
}

id sub_10000DAD8(id *a1, void *a2)
{
  id v3 = a2;
  if ([v3 itemType])
  {
    uint64_t v4 = 0;
LABEL_3:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  unint64_t v6 = FCCheckedProtocolCast();
  uint64_t v5 = [v6 analyticsElement];
  if (v5)
  {
    uint64_t v4 = objc_opt_new();
    [v4 setWidgetContentType:1];
    uint64_t v7 = [v5 articleID];
    [v4 setArticleId:v7];

    uint64_t v8 = [v5 channelID];
    [v4 setSourceChannelId:v8];

    [v4 setWidgetType:[a1[4] _pbWidgetTypeWithStackKind:[a1[5] stackKind]]];
    [v4 setWidgetExposureStackLocation:[a1[4] _pbStackLocationWithStackLocation:[a1[5] stackLocation]]];
    id v9 = [v6 storyType];
    [v4 setStoryType:v9];

    if (!v4) {
      goto LABEL_3;
    }
    [v4 setWidgetArticleCount:[a1[6] count]];
    [v4 setWidgetArticleRank:[a1[5] absoluteOrderOfItem:v3]];
    unint64_t v6 = [a1[5] sectionForItem:v3];
    [v4 setWidgetArticleRankInSection:[a1[5] absoluteOrderOfItemInSection:v3]];
    [v4 setWidgetSectionDisplayRank:[a1[5] absoluteOrderOfSection:v6]];
    id v10 = [v6 identifier];
    [v4 setWidgetSectionId:v10];

    BOOL v11 = [v6 subidentifier];
    [v4 setWidgetSectionSubid:v11];

    uint64_t v12 = [v6 items];
    [v4 setWidgetArticleCountInSection:[v12 count]];

    long long v13 = objc_opt_new();
    [v13 setTodayWidgetHeadlineExposure:v4];
    uint64_t v5 = +[NTPBEvent nss_eventWithIdentifier];
    long long v14 = [a1[4] eventAnnotator];
    [v14 annotateEvent:v5 withOptions:47];

    [a1[4] _annotateEvent:v5 withTrackableWidgetState:a1[5]];
    [v5 setEventObject:v13];
  }
  else
  {
    uint64_t v4 = 0;
  }

LABEL_9:

  return v5;
}

void sub_10000DD7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v10 = (id)objc_opt_new();
  [v10 setPersonalizationFeatureId:v6];

  [v5 floatValue];
  int v8 = v7;

  LODWORD(v9) = v8;
  [v10 setCtr:v9];
  [*(id *)(a1 + 32) addWidgetPersonalizationFeatureCTRPair:v10];
}

id sub_10000DE24(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_new();
  id v5 = [v3 identifier];
  [v4 setWidgetSectionIdsExposed:v5];

  id v6 = [v3 subidentifier];
  [v4 setWidgetSectionSubidsExposed:v6];

  int v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];

  [v4 addCountOfArticlesExposedEachSection:[v7 unsignedIntegerValue]];

  return v4;
}

id sub_10000E98C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) isEqual:v3])
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = [v3 identifier];
  }

  return v4;
}

BOOL sub_10000EF18(id a1, NTTodayResults *a2, NTTodayResultOperationFetchInfoProviding *a3)
{
  id v3 = (void *)NTNewsSourceIdentifier;
  uint64_t v4 = [(NTTodayResultOperationFetchInfoProviding *)a3 todaySourceIdentifier];
  LOBYTE(v3) = [v3 isEqualToString:v4] ^ 1;

  return (char)v3;
}

BOOL sub_10000F10C(id a1, NTTodayResults *a2, NTTodayResultOperationFetchInfoProviding *a3)
{
  id v3 = (void *)NTNewsSourceIdentifier;
  uint64_t v4 = [(NTTodayResultOperationFetchInfoProviding *)a3 todaySourceIdentifier];
  LOBYTE(v3) = [v3 isEqualToString:v4];

  return (char)v3;
}

id FTCampaignIdentifierForSourceIdentifier(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:NTNewsSourceIdentifier]
    || [v1 isEqualToString:NTUnknownSourceIdentifier])
  {
    id v2 = NSSNewsWidgetNewsModeCampaignID;
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000E61BC();
    }
    id v2 = 0;
  }

  return v2;
}

void sub_10000FFE4(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 analyticsElement];
  id v5 = [v4 articleID];

  if (v5)
  {
    id v6 = objc_alloc_init((Class)NSMutableDictionary);
    [v6 setObject:v5 forKey:FCWidgetArticleListArticleID];
    int v7 = [v3 sourceTagID];
    [v6 fc_safelySetObject:v7 forKey:FCWidgetArticleListSourceChannelID];

    int v8 = [a1[4] objectForKeyedSubscript:v3];
    double v9 = [v8 referralBarName];
    [v6 fc_safelySetObjectAllowingNil:v9 forKey:FCWidgetArticleListSectionName];

    id v10 = [v3 flintDocumentURL];
    BOOL v11 = [v10 absoluteString];
    [v6 fc_safelySetObjectAllowingNil:v11 forKey:FCWidgetArticleListFlintDocumentURL];

    uint64_t v12 = [v3 backingElement];
    long long v13 = [v12 articleRecordData];
    long long v14 = [v13 base64EncodedStringWithOptions:0];
    [v6 fc_safelySetObjectAllowingNil:v14 forKey:FCWidgetArticleListArticleRecordData];

    long long v15 = [v3 backingElement];
    long long v16 = [v15 sourceChannelRecordData];
    long long v17 = [v16 base64EncodedStringWithOptions:0];
    [v6 fc_safelySetObjectAllowingNil:v17 forKey:FCWidgetArticleListSourceChannelRecordData];

    long long v18 = [v3 backingElement];
    long long v19 = [v18 parentIssueRecordData];
    long long v20 = [v19 base64EncodedStringWithOptions:0];
    [v6 fc_safelySetObjectAllowingNil:v20 forKey:FCWidgetArticleListParentIssueRecordData];

    [a1[5] addObject:v6];
    long long v21 = [v3 flintDocumentURL];
    if (v21)
    {
      uint64_t v22 = [a1[6] objectForKeyedSubscript:v21];
      if (v22)
      {
        long long v23 = (void *)v22;
        [a1[7] setObject:v22 forKeyedSubscript:v21];
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1000E66A8();
  }
}

__CFString *FTValidatedFreeValuedPropertyValue(void *a1)
{
  id v1 = a1;
  if (!v1 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1000E676C();
  }
  if (+[PETEventStringValidator stringIsValid:v1])id v2 = v1; {
  else
  }
    id v2 = @"invalid";
  id v3 = v2;

  return v3;
}

__CFString *FTHeadlineSourcePropertyValueWithTodaySource(void *a1)
{
  if (a1)
  {
    FTValidatedFreeValuedPropertyValue(a1);
    id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v2 = @"none";
  }
  return v2;
}

__CFString *FTSectionPropertyValueWithSection(void *a1)
{
  if (a1)
  {
    FTValidatedFreeValuedPropertyValue(a1);
    id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v2 = @"none";
  }
  return v2;
}

__CFString *FTUserGroupPropertyValueWithAppConfigTreatmentID(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1 && ([v1 stringValue], (id v3 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    uint64_t v4 = v3;
    FTValidatedFreeValuedPropertyValue(v3);
    id v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v5 = @"none";
  }

  return v5;
}

id FTLocalTimeHourPropertyValue(void *a1)
{
  id v1 = a1;
  id v2 = +[NSCalendar currentCalendar];
  id v3 = +[NSTimeZone localTimeZone];
  uint64_t v4 = [v2 componentsInTimeZone:v3 fromDate:v1];

  id v5 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v4 hour]);

  return v5;
}

id FTTimeZonePropertyValue()
{
  v0 = +[NSTimeZone localTimeZone];
  id v1 = [v0 abbreviation];

  return v1;
}

__CFString *FTBooleanPropertyValue(int a1)
{
  if (a1) {
    return @"yes";
  }
  else {
    return @"no";
  }
}

id sub_100010A60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  int v7 = +[NSDate date];
  int v8 = [v6 engagementWithHeaderAtDate:v7 withTargetURL:*(void *)(a1 + 32) trackableWidgetState:v5];

  return v8;
}

BOOL sub_100010DFC(id a1, NTTodayResults *a2, NTTodayResultOperationFetchInfoProviding *a3)
{
  id v3 = (void *)NTNewsSourceIdentifier;
  uint64_t v4 = [(NTTodayResultOperationFetchInfoProviding *)a3 todaySourceIdentifier];
  LOBYTE(v3) = [v3 isEqualToString:v4];

  return (char)v3;
}

NTPBEnvelope *__cdecl sub_100011210(id a1, NSSNewsAnalyticsPBEventAccumulator *a2)
{
  return (NTPBEnvelope *)[(NSSNewsAnalyticsPBEventAccumulator *)a2 dequeueEventsIntoEnvelope];
}

void sub_100011218(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) submissionGroup];
  dispatch_group_leave(v1);
}

void sub_100011B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100011BAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100011BBC(uint64_t a1)
{
}

void sub_100011BC4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  int v7 = [v6 filePath];
  if (v7)
  {
    int v8 = +[NSURL fileURLWithPath:v7 isDirectory:0];
    if (v8)
    {
      double v9 = +[NSUUID UUID];
      id v10 = [v9 UUIDString];

      BOOL v11 = [*(id *)(a1 + 32) URLByAppendingPathComponent:v10 isDirectory:0];
      uint64_t v12 = *(void **)(a1 + 40);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      id obj = *(id *)(v13 + 40);
      [v12 copyItemAtURL:v8 toURL:v11 error:&obj];
      objc_storeStrong((id *)(v13 + 40), obj);
      long long v14 = *(void **)(a1 + 48);
      long long v15 = [v6 remoteURL];
      [v14 setObject:v11 forKeyedSubscript:v15];

      if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
        *a4 = 1;
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1000E6BA0();
  }
}

id sub_100012248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) assetHandleForURL:a2 prefetchedFileURL:a3 importMethod:0 lifetimeHint:0];
}

void sub_100012C1C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) submissionGroup];
  dispatch_group_leave(v1);
}

uint64_t sub_100012D08()
{
  return objc_opt_respondsToSelector() & 1;
}

void ITColor::ITColor(ITColor *this)
{
  this->double mRed = 0.0;
  this->double mGreen = 0.0;
  this->double mBlue = 0.0;
  this->double mAlpha = 1.0;
}

void ITColor::ITColor(ITColor *this, double a2, double a3, double a4, double a5)
{
  this->double mRed = a2;
  this->double mGreen = a3;
  this->double mBlue = a4;
  this->double mAlpha = a5;
}

double ITColor::CreateFromHSVColor(double *a1)
{
  double v4 = 0.0;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  sub_100012DFC(&v4, (double *)&v3, (double *)&v2, *a1, a1[1], a1[2]);
  return v4;
}

double *sub_100012DFC(double *result, double *a2, double *a3, double a4, double a5, double a6)
{
  if (a5 > 1.0) {
    a5 = 1.0;
  }
  if (a5 >= 0.0) {
    double v6 = a5;
  }
  else {
    double v6 = 0.0;
  }
  if (a6 <= 1.0) {
    double v7 = a6;
  }
  else {
    double v7 = 1.0;
  }
  if (v7 < 0.0) {
    double v7 = 0.0;
  }
  if (v6 == 0.0)
  {
    *double result = v7;
    *a2 = v7;
  }
  else
  {
    if (a4 > 1.0) {
      a4 = 1.0;
    }
    if (a4 >= 0.0) {
      double v8 = a4 * 6.0;
    }
    else {
      double v8 = 0.0;
    }
    int v9 = (int)v8;
    double v10 = v6 * v7 * (v8 - (double)(int)v8);
    double v11 = v7 - v6 * v7;
    double v12 = v11 + v10;
    if (v11 + v10 > 1.0) {
      double v12 = 1.0;
    }
    double v13 = v7 - v10;
    if (v13 > 1.0) {
      double v13 = 1.0;
    }
    double v14 = v11;
    if (v9) {
      double v15 = v13;
    }
    else {
      double v15 = v12;
    }
    if (v14 <= 1.0) {
      double v16 = v14;
    }
    else {
      double v16 = 1.0;
    }
    double v17 = v7;
    switch(v9)
    {
      case 0:
      case 5:
        break;
      case 1:
      case 4:
        double v17 = v15;
        break;
      default:
        double v17 = v16;
        break;
    }
    *double result = v17;
    double v18 = v7;
    if ((v9 - 1) >= 2)
    {
      BOOL v19 = v9 == 3 || v9 == 0;
      double v18 = v15;
      if (!v19) {
        double v18 = v16;
      }
    }
    *a2 = v18;
    if ((v9 - 3) >= 2)
    {
      BOOL v20 = v9 == 5 || v9 == 2;
      double v7 = v15;
      if (!v20) {
        double v7 = v16;
      }
    }
  }
  *a3 = v7;
  return result;
}

double ITColor::CreateFromHSVDoubles(ITColor *this, double a2, double a3, double a4)
{
  double v7 = 0.0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  sub_100012DFC(&v7, (double *)&v6, (double *)&v5, a2, a3, a4);
  return v7;
}

double ITColor::GetHSVColor(ITColor *this)
{
  sub_100012FBC(&v2, (double *)&v3, (double *)&v4, this->mRed, this->mGreen, this->mBlue);
  return v2;
}

double *sub_100012FBC(double *result, double *a2, double *a3, double a4, double a5, double a6)
{
  if (a4 >= 1.0) {
    a4 = 1.0;
  }
  double v6 = 0.0;
  if (a4 < 0.0) {
    a4 = 0.0;
  }
  if (a5 >= 1.0) {
    a5 = 1.0;
  }
  if (a5 < 0.0) {
    a5 = 0.0;
  }
  if (a6 >= 1.0) {
    a6 = 1.0;
  }
  if (a6 >= 0.0) {
    double v7 = a6;
  }
  else {
    double v7 = 0.0;
  }
  if (a5 <= a4) {
    double v8 = a4;
  }
  else {
    double v8 = a5;
  }
  if (a5 >= a4) {
    double v9 = a4;
  }
  else {
    double v9 = a5;
  }
  if (v7 <= a4) {
    double v10 = a4;
  }
  else {
    double v10 = v7;
  }
  if (v7 >= a4) {
    double v11 = a4;
  }
  else {
    double v11 = v7;
  }
  if (a5 <= v7) {
    double v8 = v10;
  }
  if (a5 >= v7) {
    double v9 = v11;
  }
  if (v8 <= 1.0) {
    double v12 = v8;
  }
  else {
    double v12 = 1.0;
  }
  *a3 = v12;
  if (v8 == 0.0)
  {
    *a2 = 0.0;
  }
  else
  {
    double v13 = v8 - v9;
    double v14 = v13 / v8;
    if (v13 / v8 <= 1.0)
    {
      *a2 = v14;
      if (v14 == 0.0) {
        goto LABEL_51;
      }
    }
    else
    {
      *a2 = 1.0;
    }
    if (v13 == 0.0)
    {
      double v15 = 0.0;
      double v16 = 0.0;
    }
    else
    {
      double v6 = (v8 - a4) / v13;
      double v15 = (v8 - a5) / v13;
      double v16 = (v8 - v7) / v13;
    }
    if (a4 == v8)
    {
      double v17 = v16 - v15;
    }
    else if (a5 == v8)
    {
      double v17 = v6 + 2.0 - v16;
    }
    else
    {
      double v17 = v15 + 4.0 - v6;
    }
    double v18 = v17 / 6.0;
    if (v18 < 0.0) {
      double v18 = v18 + 1.0;
    }
    if (v18 <= 1.0) {
      double v6 = v18;
    }
    else {
      double v6 = 1.0;
    }
  }
LABEL_51:
  *double result = v6;
  return result;
}

void ITColor::GetLuminance(ITColor *this)
{
  uint64_t v1 = 0;
  long long v4 = *(_OWORD *)&this->mRed;
  double mBlue = this->mBlue;
  do
  {
    double v2 = *(double *)((char *)&v4 + v1);
    if (v2 <= 0.0392800011) {
      double v3 = v2 / 12.9200001;
    }
    else {
      double v3 = pow((v2 + 0.0549999997) / 1.05499995, 2.4);
    }
    *(double *)((char *)&v4 + v1) = v3;
    v1 += 8;
  }
  while (v1 != 24);
}

double ITColor::GetContrastWithColor(ITColor *this, ITColor *a2)
{
  ITColor::GetLuminance(a2);
  double v4 = v3;
  ITColor::GetLuminance(this);
  if (v5 <= v4) {
    double v6 = v4;
  }
  else {
    double v6 = v5;
  }
  if (v5 > v4) {
    double v5 = v4;
  }
  return (v6 + 0.0500000007) / (v5 + 0.0500000007);
}

double ITColor::GetContrastWithLuminance(ITColor *this, double a2)
{
  ITColor::GetLuminance(this);
  if (v3 <= a2) {
    double v4 = a2;
  }
  else {
    double v4 = v3;
  }
  if (v3 > a2) {
    double v3 = a2;
  }
  return (v4 + 0.0500000007) / (v3 + 0.0500000007);
}

double ITColor::CreateBlendedColorWithFraction(ITColor *this, double a2, ITColor a3)
{
  if (a2 < 1.0)
  {
    if (a2 <= 0.0) {
      a3.double mRed = this->mRed;
    }
    else {
      a3.double mRed = (1.0 - a2) * this->mRed + a3.mRed * a2;
    }
  }
  return a3.mRed;
}

id sub_100013500(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  double v7 = +[NSDate date];
  double v8 = [v6 engagementWithBannerAtDate:v7 withTargetURL:*(void *)(a1 + 32) trackableWidgetState:v5];

  return v8;
}

id PrefetchLog()
{
  if (qword_10013B980 != -1) {
    dispatch_once(&qword_10013B980, &stru_100123E80);
  }
  v0 = (void *)qword_10013B988;

  return v0;
}

void sub_1000135E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.news", "WidgetContentPrefetch");
  double v2 = (void *)qword_10013B988;
  qword_10013B988 = (uint64_t)v1;
}

void sub_1000139D4(uint64_t a1)
{
  double v2 = (id *)(a1 + 32);
  double v3 = [*(id *)(a1 + 32) filePath];

  double v4 = PrefetchLog();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v6 = [*(id *)(a1 + 40) identifier];
      int v7 = 138543362;
      double v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "successfully downloaded JSON for banner %{public}@", (uint8_t *)&v7, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1000E7070(a1, v2);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100013ADC(id *a1)
{
  double v2 = [a1[4] assetManager];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100013B90;
  v3[3] = &unk_100123ED0;
  id v5 = a1[6];
  id v4 = a1[5];
  [v2 saveWithCompletionHandler:v3];
}

uint64_t sub_100013B90(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100013EBC(uint64_t a1)
{
  double v2 = (id *)(a1 + 32);
  double v3 = [*(id *)(a1 + 32) filePath];

  id v4 = PrefetchLog();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v6 = [*(id *)(a1 + 40) identifier];
      int v7 = 138543362;
      double v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "successfully downloaded JSON for headline %{public}@", (uint8_t *)&v7, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1000E7118(a1, v2);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100013FC4(id *a1)
{
  double v2 = [a1[4] assetManager];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100014078;
  v3[3] = &unk_100123ED0;
  id v5 = a1[6];
  id v4 = a1[5];
  [v2 saveWithCompletionHandler:v3];
}

uint64_t sub_100014078(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_10001411C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_100014590()
{
  if (qword_10013B998 != -1) {
    dispatch_once(&qword_10013B998, &stru_100123F18);
  }
  v0 = (void *)qword_10013B990;

  return v0;
}

void sub_1000145E4(id a1)
{
  uint64_t v1 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", FCErrorDomain, NSURLErrorDomain, NSCocoaErrorDomain, CKErrorDomain, 0);
  double v2 = (void *)qword_10013B990;
  qword_10013B990 = v1;
}

void sub_100014AB4(id a1, NSMutableArray *a2)
{
  double v3 = a2;
  double v2 = sub_100014590();
  [(NSMutableArray *)v3 addObjectsFromArray:v2];

  [(NSMutableArray *)v3 addObject:@"other"];
}

id sub_1000158B4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  int v7 = +[NSDate date];
  double v8 = [v6 engagementWithPlaceholderAtDate:v7 withTargetURL:*(void *)(a1 + 32) trackableWidgetState:v5];

  return v8;
}

void sub_100015E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100015E34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  int v7 = [v6 items];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100015F18;
  v12[3] = &unk_100123F80;
  double v8 = *(void **)(a1 + 40);
  v12[4] = *(void *)(a1 + 32);
  id v13 = v8;
  id v14 = v6;
  id v9 = *(id *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  id v15 = v9;
  uint64_t v16 = v10;
  uint64_t v17 = a4;
  id v11 = v6;
  [v7 enumerateObjectsUsingBlock:v12];
}

void sub_100015F18(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v12 = a2;
  id v6 = [v12 itemType];
  int v7 = v12;
  if (!v6)
  {
    double v8 = FCProtocolCast();
    id v9 = [*(id *)(a1 + 32) personalizationEventAtDate:*(void *)(a1 + 40) withAction:1 headline:v8 section:*(void *)(a1 + 48) trackableWidgetState:*(void *)(a1 + 56)];
    if (v9)
    {
      uint64_t v10 = [*(id *)(a1 + 32) events];
      [v10 addObject:v9];
    }
    id v11 = (id)++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    if (v11 == [*(id *)(a1 + 56) absoluteItemCountForCurrentDisplayMode])
    {
      *a4 = 1;
      **(unsigned char **)(a1 + 72) = 1;
    }

    int v7 = v12;
  }
}

uint64_t sub_1000161F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000163E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000163FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001640C(uint64_t a1)
{
}

void sub_100016414(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = [a2 items];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000164C8;
  v9[3] = &unk_100123FF8;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  id v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = a4;
  [v6 enumerateObjectsUsingBlock:v9];
}

void sub_1000164C8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  id v7 = [v9 identifier];
  unsigned int v8 = [v7 isEqual:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
    **(unsigned char **)(a1 + 48) = 1;
  }
}

BOOL sub_100017288(id a1, NTHeadlineProviding *a2)
{
  double v2 = [(NTHeadlineProviding *)a2 analyticsElement];
  unsigned __int8 v3 = [v2 needsSeenStateTracking];

  return v3;
}

NTHeadlineProviding *__cdecl sub_1000172C4(id a1, NTTodayItem *a2)
{
  double v2 = a2;
  if ([(NTTodayItem *)v2 itemType]) {
    unsigned __int8 v3 = 0;
  }
  else {
    unsigned __int8 v3 = v2;
  }
  id v4 = v3;

  return v4;
}

void sub_100017580(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 objectForKeyedSubscript:@"a"];
  id v5 = +[NSMutableOrderedSet orderedSetWithOrderedSet:v4];

  __n128 v25 = v3;
  id v6 = [v3 objectForKeyedSubscript:@"b"];
  id v7 = +[NSMutableDictionary dictionaryWithDictionary:v6];

  long long v26 = objc_opt_new();
  uint64_t v27 = a1;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v8 = *(id *)(a1 + 32);
  id v9 = [v8 countByEnumeratingWithState:&v30 objects:v42 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v31;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v31 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = [*(id *)(*((void *)&v30 + 1) + 8 * (void)v12) analyticsElement];
        id v14 = [v13 preseenCountTrackingIdentifier];
        if (v14)
        {
          id v15 = [v7 objectForKeyedSubscript:v14];
          if ((((v15 == 0) ^ [v5 containsObject:v14]) & 1) == 0
            && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            id v18 = [objc_alloc((Class)NSString) initWithFormat:@"storage data structures must stay in sync"];
            *(_DWORD *)buf = 136315906;
            long long v35 = "-[FTSeenHeadlineWidgetEventTracker _registerOnceVisibleHeadlines:withLastSeenDate:minimumNumberOfTimes"
                  "PreseenToBeSeen:]_block_invoke";
            __int16 v36 = 2080;
            __n128 v37 = "FTSeenHeadlineWidgetEventTracker.m";
            __int16 v38 = 1024;
            int v39 = 163;
            __int16 v40 = 2114;
            id v41 = v18;
            _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@", buf, 0x26u);
          }
          uint64_t v16 = (char *)[v15 unsignedIntegerValue] + 1;
          if ((unint64_t)v16 >= *(void *)(v27 + 64))
          {
            [v26 addObject:v13];
            [v5 removeObject:v14];
            [v7 removeObjectForKey:v14];
          }
          else
          {
            [v5 removeObject:v14];
            [v5 addObject:v14];
            uint64_t v17 = +[NSNumber numberWithUnsignedInteger:v16];
            [v7 setObject:v17 forKeyedSubscript:v14];
          }
        }

        uint64_t v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v30 objects:v42 count:16];
    }
    while (v10);
  }

  if ((unint64_t)[v5 count] >= 0x3E9)
  {
    BOOL v19 = (char *)[v5 count];
    BOOL v20 = v19 - 1000;
    if (v19 != (char *)1000)
    {
      long long v21 = +[NSIndexSet indexSetWithIndexesInRange:](NSIndexSet, "indexSetWithIndexesInRange:", 0, v20);
      uint64_t v22 = [v5 objectsAtIndexes:v21];

      [v5 removeObjectsInRange:0, v20];
      [v7 removeObjectsForKeys:v22];
    }
  }
  [v25 setObject:v5 forKeyedSubscript:@"a"];
  [v25 setObject:v7 forKeyedSubscript:@"b"];
  long long v23 = [*(id *)(v27 + 40) submissionGroup];
  dispatch_group_enter(v23);

  id v28 = *(id *)(v27 + 48);
  id v29 = *(id *)(v27 + 56);
  id v24 = v26;
  FCPerformBlockOnMainThread();
}

id sub_1000179F4(void *a1)
{
  double v2 = (void *)a1[4];
  uint64_t v1 = a1[5];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100017A6C;
  v5[3] = &unk_100123E20;
  uint64_t v3 = a1[6];
  v5[4] = a1[7];
  return [v2 writeUserDidSeeHeadlinesWithAnalyticsElements:v1 atDate:v3 withCompletion:v5];
}

void sub_100017A6C(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) submissionGroup];
  dispatch_group_leave(v1);
}

void sub_100017AB0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) submissionGroup];
  dispatch_group_leave(v1);
}

id sub_100018128(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = +[NSDate date];
  id v8 = [v6 engagementWithBackgroundAtDate:v7 withTargetURL:*(void *)(a1 + 32) trackableWidgetState:v5];

  return v8;
}

uint64_t CGColorSpaceGetSRGB(void)
{
  if (qword_10013B9A8[0] != -1) {
    dispatch_once(qword_10013B9A8, &stru_100124150);
  }
  return qword_10013B9A0;
}

void sub_1000181FC(id a1)
{
  qword_10013B9A0 = (uint64_t)CGColorSpaceCreateWithName(kCGColorSpaceSRGB);
}

CGContext *TSDBitmapContextCreate(char a1, double a2, double a3)
{
  float v4 = a2;
  float v5 = a3;
  size_t v6 = vcvtps_u32_f32(v4);
  size_t v7 = vcvtps_u32_f32(v5);
  if (a1)
  {
    if ((a1 & 0x20) != 0) {
      CGColorSpaceRef DeviceRGB = CGColorSpaceCreateWithName(kCGColorSpaceDisplayP3);
    }
    else {
      CGColorSpaceRef DeviceRGB = CGColorSpaceCreateDeviceRGB();
    }
    id v8 = DeviceRGB;
    if ((a1 & 4) != 0) {
      int v13 = 4102;
    }
    else {
      int v13 = 8198;
    }
    uint64_t v14 = 5;
    if ((a1 & 4) == 0) {
      uint64_t v14 = 8;
    }
    uint64_t v15 = 2;
    if ((a1 & 4) == 0) {
      uint64_t v15 = 4;
    }
    if ((a1 & 0x10) != 0) {
      int v16 = 8193;
    }
    else {
      int v16 = 8194;
    }
    if ((a1 & 2) != 0) {
      uint32_t v9 = v16;
    }
    else {
      uint32_t v9 = v13;
    }
    if ((a1 & 2) != 0) {
      size_t v11 = 8;
    }
    else {
      size_t v11 = v14;
    }
    if ((a1 & 2) != 0) {
      uint64_t v10 = 4;
    }
    else {
      uint64_t v10 = v15;
    }
  }
  else
  {
    id v8 = 0;
    if ((a1 & 2) != 0) {
      uint32_t v9 = 7;
    }
    else {
      uint32_t v9 = 8194;
    }
    uint64_t v10 = 4;
    if ((a1 & 2) != 0) {
      uint64_t v10 = 1;
    }
    size_t v11 = 8;
  }
  uint64_t v17 = CGBitmapContextCreateWithData(0, v6, v7, v11, (v10 * v6 + 31) & 0xFFFFFFFFFFFFFFE0, v8, v9, 0, 0);
  if (v8) {
    CGColorSpaceRelease(v8);
  }
  if ((a1 & 8) != 0)
  {
    CGContextTranslateCTM(v17, 0.0, (double)v7);
    CGContextScaleCTM(v17, 1.0, -1.0);
  }
  return v17;
}

void sub_100018B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_100018DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  _Unwind_Resume(a1);
}

void *sub_100018E5C(void *a1)
{
  double v2 = (void *)a1[46];
  if (v2)
  {
    a1[47] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[43];
  if (v3)
  {
    a1[44] = v3;
    operator delete(v3);
  }
  float v4 = (void *)a1[40];
  if (v4)
  {
    a1[41] = v4;
    operator delete(v4);
  }
  float v5 = (void *)a1[37];
  if (v5)
  {
    a1[38] = v5;
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_100018EC0(uint64_t a1)
{
  ITColor::ITColor((ITColor *)a1);
  ITColor::ITColor(v2 + 1);
  ITColor::ITColor((ITColor *)(a1 + 64));
  ITColor::ITColor((ITColor *)(a1 + 96));
  ITColor::ITColor((ITColor *)(a1 + 128));
  ITColor::ITColor((ITColor *)(a1 + 160));
  ITColor::ITColor((ITColor *)(a1 + 192));
  ITColor::ITColor((ITColor *)(a1 + 224));
  ITColor::ITColor((ITColor *)(a1 + 256));
  *(_DWORD *)(a1 + 288) = 0;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 389) = 0u;
  return a1;
}

void *sub_100018F44(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    size_t v6 = result;
    uint64_t result = sub_100018FC0(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100018FA4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100018FC0(void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_1000093C0();
  }
  uint64_t result = (char *)sub_10000C2E4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

uint64_t sub_100019004()
{
  uint64_t v0 = sub_10001B38C(&qword_100135EC8);
  sub_10001C500(v0, qword_10014B8A8);
  sub_10001C4C8(v0, (uint64_t)qword_10014B8A8);
  sub_10001C5CC();
  return sub_1000E8840();
}

uint64_t sub_100019080(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000191C4, 0, 0);
}

uint64_t sub_1000191C4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100135E88);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_1001364E0, &qword_1001364E8);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  float v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100019368()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  float v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014B8C0);
  sub_10001C4C8(v10, (uint64_t)qword_10014B8C0);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_100019640()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364C0);
  sub_10001C500(v0, qword_10014B8D8);
  sub_10001C4C8(v0, (uint64_t)qword_10014B8D8);
  sub_10001B740();
  return sub_1000E88B0();
}

uint64_t sub_1000196BC()
{
  sub_10001B38C(&qword_1001364A0);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v1 = (char *)&v9 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B38C(&qword_1001364A8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E8A70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  __chkstk_darwin(v6);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  uint64_t v7 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_1000198F8()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014B8F0);
  sub_10001C4C8(v0, (uint64_t)qword_10014B8F0);
  return sub_1000E8A50();
}

uint64_t sub_10001995C()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014B908);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014B908);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100019A14()
{
  uint64_t result = swift_getKeyPath();
  qword_10014B920 = result;
  return result;
}

uint64_t sub_100019A40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100019A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100019A70, 0, 0);
}

uint64_t sub_100019A70()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135BE8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014B920;
  *(void *)(v0 + 80) = qword_10014B920;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_1001364E0, &qword_1001364E8);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_100019BCC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_100019BCC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_100019D20;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100019D20()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014B920;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_100019DFC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FF0;
  }
  else {
    uint64_t v2 = sub_100019F50;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100019F50()
{
  *(unsigned char *)(v0 + 147) = *(unsigned char *)(v0 + 144);
  sub_10001CB14();
  sub_1000E8610();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100019FD8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100019FF0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A008@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E8650();
  *a1 = v3;
  return result;
}

uint64_t sub_10001A044()
{
  return swift_release();
}

uint64_t (*sub_10001A08C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E8640();
  return sub_10001A0E8;
}

uint64_t sub_10001A0EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E8650();
  *a1 = v3;
  return result;
}

uint64_t sub_10001A128()
{
  return sub_1000E8660();
}

uint64_t (*sub_10001A160(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E8640();
  return sub_10001A0E8;
}

void sub_10001A1BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_10001A208()
{
  if (qword_100135BE8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10001A268()
{
  return 0xD000000000000015;
}

uint64_t sub_10001A288@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135BD8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014B8F0, a1);
}

uint64_t sub_10001A2D0@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135BE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014B908);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_10001A34C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_100019A70, 0, 0);
}

uint64_t sub_10001A400()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10001A4F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001C6D4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10001A51C()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_10001A538(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001A558, 0, 0);
}

uint64_t sub_10001A558()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001A634(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 17) = *a2;
  return _swift_task_switch(sub_10001A658, 0, 0);
}

uint64_t sub_10001A658()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 17);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10001C620();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001A7A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135BC0, &qword_100135EC8, (uint64_t)qword_10014B8A8, a1);
}

uint64_t sub_10001A7D0()
{
  uint64_t v0 = qword_100135BB0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10001A808@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135BD0, &qword_1001364C0, (uint64_t)qword_10014B8D8, a1);
}

uint64_t sub_10001A834@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10001B38C(a2);
  uint64_t v8 = sub_10001C4C8(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10001A8D4@<X0>(uint64_t *a1@<X8>)
{
  sub_10001C5CC();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001A914()
{
  sub_10001C564();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_10001A9AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135BC8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014B8C0, a1);
}

uint64_t sub_10001A9E4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10001C4C8(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10001AA88(uint64_t a1)
{
  unint64_t v2 = sub_10001B740();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10001AAD8(uint64_t a1)
{
  unint64_t v2 = sub_10001B934();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10001AB24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136618);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_10001C5CC();
  uint64_t v11 = sub_10001B3D0(&qword_100136628);
  uint64_t v12 = sub_1000E9740();
  uint64_t v13 = sub_10001D100(&qword_100136630, &qword_100136628);
  uint64_t v14 = sub_10001CD94((unint64_t *)&qword_100136638, (void (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle);
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v15 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  uint64_t v25 = v1;
  uint64_t v26 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  uint64_t v25 = v4;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v22;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v17);
}

uint64_t sub_10001AF94()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_10001CD94((unint64_t *)&qword_100136638, (void (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle);
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10001B1BC@<X0>(uint64_t a1@<X8>)
{
  sub_1000E9680();
  uint64_t result = sub_1000E9A40();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10001B228@<X0>(uint64_t a1@<X8>)
{
  sub_1000E9680();
  uint64_t result = sub_1000E9A40();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10001B2AC(long long *a1)
{
  long long v2 = *a1;
  if (sub_1000E3DE8(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_10001B320(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_1000E3DE8(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

uint64_t sub_10001B38C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10001B3D0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of TodayIntentResponse.code()
{
  return 0;
}

unint64_t sub_10001B428()
{
  unint64_t result = qword_100135E78;
  if (!qword_100135E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135E78);
  }
  return result;
}

uint64_t sub_10001B47C()
{
  return sub_10001D100(&qword_100135E80, &qword_100135E88);
}

unint64_t sub_10001B4BC()
{
  unint64_t result = qword_100135E90;
  if (!qword_100135E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135E90);
  }
  return result;
}

unint64_t sub_10001B514()
{
  unint64_t result = qword_100135E98;
  if (!qword_100135E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135E98);
  }
  return result;
}

uint64_t sub_10001B568()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10001B59C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10001B5F0()
{
  unint64_t result = qword_100135EA8;
  if (!qword_100135EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EA8);
  }
  return result;
}

unint64_t sub_10001B648()
{
  unint64_t result = qword_100135EB0;
  if (!qword_100135EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EB0);
  }
  return result;
}

unint64_t sub_10001B6A0()
{
  unint64_t result = qword_100135EB8;
  if (!qword_100135EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EB8);
  }
  return result;
}

uint64_t sub_10001B6F4()
{
  return sub_10001D100(&qword_100135EC0, &qword_100135EC8);
}

void *sub_10001B730()
{
  return &protocol witness table for String;
}

unint64_t sub_10001B740()
{
  unint64_t result = qword_100135ED0;
  if (!qword_100135ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135ED0);
  }
  return result;
}

uint64_t sub_10001B794()
{
  return sub_10001D100(&qword_100135ED8, &qword_100135EC8);
}

unint64_t sub_10001B7D4()
{
  unint64_t result = qword_100135EE0;
  if (!qword_100135EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EE0);
  }
  return result;
}

unint64_t sub_10001B82C()
{
  unint64_t result = qword_100135EE8;
  if (!qword_100135EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EE8);
  }
  return result;
}

unint64_t sub_10001B884()
{
  unint64_t result = qword_100135EF0;
  if (!qword_100135EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EF0);
  }
  return result;
}

unint64_t sub_10001B8DC()
{
  unint64_t result = qword_100135EF8;
  if (!qword_100135EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135EF8);
  }
  return result;
}

unint64_t sub_10001B934()
{
  unint64_t result = qword_100135F00;
  if (!qword_100135F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135F00);
  }
  return result;
}

void *sub_10001B988()
{
  return &protocol witness table for String;
}

uint64_t sub_10001B994()
{
  return sub_10001D100(&qword_100135F10, &qword_100135F18);
}

unint64_t sub_10001B9D4()
{
  unint64_t result = qword_100135F20;
  if (!qword_100135F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100135F20);
  }
  return result;
}

void type metadata accessor for FTTrackableStackLocation(uint64_t a1)
{
}

void type metadata accessor for FTTrackableStackKind(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for MessageView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_10001BA88(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001BA94(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10001BAB4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for FCFeedPersonalizationConfigurationSet(uint64_t a1)
{
}

void type metadata accessor for FTEventTrackingWidgetAppearanceType(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for AutoDownloadSavedStoriesEntity()
{
  return &type metadata for AutoDownloadSavedStoriesEntity;
}

uint64_t destroy for AutoDownloadSavedStoriesEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s10NewsToday230AutoDownloadSavedStoriesEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AutoDownloadSavedStoriesEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AutoDownloadSavedStoriesEntity.UpdateIntent_value(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for AutoDownloadSavedStoriesEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadSavedStoriesEntity.UpdateIntent_value(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadSavedStoriesEntity.UpdateIntent_value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadSavedStoriesEntity.UpdateIntent_value()
{
  return &type metadata for AutoDownloadSavedStoriesEntity.UpdateIntent_value;
}

uint64_t sub_10001BCE4()
{
  return sub_10001D100(&qword_100135FB0, &qword_100135FB8);
}

uint64_t sub_10001BD20(uint64_t a1, uint64_t a2)
{
  return sub_10001BF7C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10001BD40(uint64_t a1, uint64_t a2)
{
  return sub_10001BF7C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10001BD64(uint64_t a1, id *a2)
{
  uint64_t result = sub_1000EA290();
  *a2 = 0;
  return result;
}

uint64_t sub_10001BDDC(uint64_t a1, id *a2)
{
  char v3 = sub_1000EA2A0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10001BE5C@<X0>(void *a1@<X8>)
{
  sub_1000EA2B0();
  NSString v2 = sub_1000EA280();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

NSNumber sub_10001BEA0()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10001BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000E8DD0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10001BEFC(uint64_t a1, uint64_t a2)
{
  char v3 = sub_1000E8DE0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10001BF54@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E8DF0();
  *a1 = v3;
  return result;
}

uint64_t sub_10001BF7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1000EA2B0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10001BFC0()
{
  sub_1000EA2B0();
  sub_1000EA330();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10001C014()
{
  sub_1000EA2B0();
  sub_1000EABB0();
  sub_1000EA330();
  Swift::Int v0 = sub_1000EABE0();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_10001C088(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_10001C09C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10001C0AC()
{
  uint64_t v0 = sub_1000EA2B0();
  uint64_t v2 = v1;
  if (v0 == sub_1000EA2B0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1000EAB20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10001C13C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000EA2B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001C168()
{
  sub_10001CD94(&qword_1001365C0, type metadata accessor for URLResourceKey);
  sub_10001CD94(&qword_1001365C8, type metadata accessor for URLResourceKey);

  return sub_1000EA9D0();
}

uint64_t sub_10001C224()
{
  sub_10001CD94((unint64_t *)&qword_1001365F8, type metadata accessor for AttributeName);
  sub_10001CD94(&qword_100136600, type metadata accessor for AttributeName);

  return sub_1000EA9D0();
}

uint64_t sub_10001C2E0@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1000EA280();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10001C328()
{
  sub_10001CD94(&qword_1001365E8, type metadata accessor for TraitKey);
  sub_10001CD94(&qword_1001365F0, type metadata accessor for TraitKey);

  return sub_1000EA9D0();
}

void *sub_10001C3E4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_10001C3F4@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10001C400()
{
  return sub_1000EA9D0();
}

uint64_t sub_10001C4C8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_10001C500(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_10001C564()
{
  unint64_t result = qword_1001364B0;
  if (!qword_1001364B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001364B0);
  }
  return result;
}

uint64_t sub_10001C5B8(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_10001C5CC()
{
  unint64_t result = qword_1001364B8;
  if (!qword_1001364B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001364B8);
  }
  return result;
}

unint64_t sub_10001C620()
{
  unint64_t result = qword_1001364F0;
  if (!qword_1001364F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001364F0);
  }
  return result;
}

uint64_t sub_10001C674()
{
  return Double.hashValue.getter(*v0);
}

void sub_10001C67C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_1000EABD0(v1);
}

uint64_t sub_10001C6B0(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:_:)(a1, v2);
}

BOOL sub_10001C6C0(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10001C6D4()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  long long v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_100136508);
  sub_1000E8A50();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10001B740();
  BOOL v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

unint64_t sub_10001CB14()
{
  unint64_t result = qword_100136520;
  if (!qword_100136520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136520);
  }
  return result;
}

uint64_t sub_10001CB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C(&qword_100136528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for AutoDownloadSavedStoriesToggleControl()
{
  return &type metadata for AutoDownloadSavedStoriesToggleControl;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for BannerState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BannerState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_10001CCA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10001CCE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001CD04()
{
  return sub_10001CD94(&qword_100136560, type metadata accessor for AttributeName);
}

uint64_t sub_10001CD4C()
{
  return sub_10001CD94(&qword_100136568, type metadata accessor for AttributeName);
}

uint64_t sub_10001CD94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001CDDC()
{
  return sub_10001CD94(&qword_100136570, type metadata accessor for TraitKey);
}

uint64_t sub_10001CE24()
{
  return sub_10001CD94(&qword_100136578, type metadata accessor for TraitKey);
}

uint64_t sub_10001CE6C()
{
  return sub_10001CD94(&qword_100136580, type metadata accessor for TraitKey);
}

uint64_t sub_10001CEB4()
{
  return sub_10001CD94(&qword_100136588, type metadata accessor for Weight);
}

uint64_t sub_10001CEFC()
{
  return sub_10001CD94(&qword_100136590, type metadata accessor for Weight);
}

uint64_t sub_10001CF44()
{
  return sub_10001CD94(&qword_100136598, type metadata accessor for Weight);
}

uint64_t sub_10001CF8C()
{
  return sub_10001CD94(&qword_1001365A0, type metadata accessor for URLResourceKey);
}

uint64_t sub_10001CFD4()
{
  return sub_10001CD94(&qword_1001365A8, type metadata accessor for URLResourceKey);
}

uint64_t sub_10001D01C()
{
  return sub_10001CD94(&qword_1001365B0, type metadata accessor for URLResourceKey);
}

uint64_t sub_10001D064()
{
  return sub_10001CD94(&qword_1001365B8, type metadata accessor for AttributeName);
}

unint64_t sub_10001D0AC()
{
  unint64_t result = qword_1001365E0;
  if (!qword_1001365E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001365E0);
  }
  return result;
}

uint64_t sub_10001D100(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001D144()
{
  return swift_getOpaqueTypeConformance2();
}

void **initializeBufferWithCopyOfBuffer for Banner.Image(void **a1, void **a2)
{
  char v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for Banner.Image(id *a1)
{
}

void **assignWithCopy for Banner.Image(void **a1, void **a2)
{
  char v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void *initializeWithTake for Banner.Image(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for Banner.Image(void **a1, void **a2)
{
  char v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for Banner.Image(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Banner.Image(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_10001D3A4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10001D3BC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Banner.Image()
{
  return &type metadata for Banner.Image;
}

ValueMetadata *type metadata accessor for BannerState()
{
  return &type metadata for BannerState;
}

uint64_t *sub_10001D3FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    id v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_1000E8B60();
    uint64_t v13 = *(void *)(v12 - 8);
    long long v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v11, 1, v12))
    {
      uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    id v18 = (uint64_t *)((char *)v4 + v16);
    BOOL v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *id v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = *(void **)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    if (v21 != (void *)1) {
      id v22 = v21;
    }
    *(uint64_t *)((char *)v4 + v17) = (uint64_t)v21;
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void **)v25;
    unsigned int v27 = (void *)*((void *)v25 + 1);
    char v28 = v25[16];
    sub_10001D614(*(void **)v25, v27);
    *(void *)uint64_t v24 = v26;
    *((void *)v24 + 1) = v27;
    v24[16] = v28;
  }
  return v4;
}

id sub_10001D614(void *a1, void *a2)
{
  id v2 = a1;

  return a2;
}

void sub_10001D64C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1000E8B60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + a2[9]);
  if (v7 != (void *)1) {

  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = *(void **)v8;
  uint64_t v10 = *(void **)(v8 + 8);

  sub_10001D758(v9, v10);
}

void sub_10001D758(void *a1, void *a2)
{
}

void *sub_10001D790(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  BOOL v19 = *(void **)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  if (v19 != (void *)1) {
    id v20 = v19;
  }
  *(void *)((char *)a1 + v15) = v19;
  uint64_t v21 = a3[10];
  id v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void **)v23;
  uint64_t v25 = (void *)*((void *)v23 + 1);
  char v26 = v23[16];
  sub_10001D614(*(void **)v23, v25);
  *(void *)id v22 = v24;
  *((void *)v22 + 1) = v25;
  v22[16] = v26;
  return a1;
}

void *sub_10001D94C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  BOOL v19 = (void *)((char *)a1 + v18);
  id v20 = *(void **)((char *)a1 + v18);
  uint64_t v21 = *(void **)((char *)a2 + v18);
  if (v20 != (void *)1)
  {
    if (v21 != (void *)1)
    {
      *BOOL v19 = v21;
      id v23 = v21;

      goto LABEL_14;
    }
    sub_10001DBE4((id *)((char *)a1 + v18));
    uint64_t v21 = *(void **)((char *)a2 + v18);
    goto LABEL_12;
  }
  if (v21 == (void *)1)
  {
LABEL_12:
    *BOOL v19 = v21;
    goto LABEL_14;
  }
  *BOOL v19 = v21;
  id v22 = v21;
LABEL_14:
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  char v26 = (char *)a2 + v24;
  unsigned int v27 = *(void **)v26;
  char v28 = (void *)*((void *)v26 + 1);
  char v29 = v26[16];
  sub_10001D614(*(void **)v26, v28);
  long long v30 = *(void **)v25;
  uint64_t v31 = (void *)*((void *)v25 + 1);
  *(void *)uint64_t v25 = v27;
  *((void *)v25 + 1) = v28;
  v25[16] = v29;
  sub_10001D758(v30, v31);
  return a1;
}

id *sub_10001DBE4(id *a1)
{
  return a1;
}

_OWORD *sub_10001DC10(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  return a1;
}

void *sub_10001DD6C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  BOOL v19 = (void *)((char *)a1 + v18);
  id v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *BOOL v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = *(void **)((char *)a1 + v23);
  uint64_t v26 = *(void *)((char *)a2 + v23);
  if (v25 != (void *)1)
  {
    if (v26 != 1)
    {
      *uint64_t v24 = v26;

      goto LABEL_12;
    }
    sub_10001DBE4((id *)((char *)a1 + v23));
    uint64_t v26 = *(void *)((char *)a2 + v23);
  }
  *uint64_t v24 = v26;
LABEL_12:
  uint64_t v27 = a3[10];
  char v28 = (char *)a1 + v27;
  char v29 = (char *)a2 + v27;
  char v30 = v29[16];
  uint64_t v31 = *(void **)v28;
  char v32 = (void *)*((void *)v28 + 1);
  *(_OWORD *)char v28 = *(_OWORD *)v29;
  v28[16] = v30;
  sub_10001D758(v31, v32);
  return a1;
}

uint64_t sub_10001DFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001DFB8);
}

uint64_t sub_10001DFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10001E06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001E080);
}

uint64_t sub_10001E080(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Banner()
{
  uint64_t result = qword_1001368E8;
  if (!qword_1001368E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001E178()
{
  sub_10001E230();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10001E230()
{
  if (!qword_1001368F8)
  {
    sub_1000E8B60();
    unint64_t v0 = sub_1000EA730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001368F8);
    }
  }
}

void sub_10001E288(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v80 - v13;
  __chkstk_darwin(v12);
  int v16 = (char *)&v80 - v15;
  id v17 = [a1 identifier];
  uint64_t v18 = sub_1000EA2B0();
  uint64_t v20 = v19;

  *a4 = v18;
  a4[1] = v20;
  id v21 = [a1 title];
  uint64_t v22 = sub_1000EA2B0();
  uint64_t v24 = v23;

  a4[2] = v22;
  a4[3] = v24;
  id v25 = [a1 body];
  uint64_t v26 = sub_1000EA2B0();
  uint64_t v28 = v27;

  a4[4] = v26;
  a4[5] = v28;
  sub_10002230C(a2, (uint64_t)v14);
  uint64_t v29 = sub_1000E8B60();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v14, 1, v29) == 1)
  {
    id v31 = [a1 actionURL];
    if (v31)
    {
      char v32 = v31;
      sub_1000E8B20();

      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v33 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v11, v33, 1, v29);
    sub_100020B80((uint64_t)v11, (uint64_t)v16);
    sub_100020B20((uint64_t)v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v14, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v16, 0, 1, v29);
  }
  long long v34 = (int *)type metadata accessor for Banner();
  sub_100020B80((uint64_t)v16, (uint64_t)a4 + v34[7]);
  id v35 = [a1 actionButtonText];
  if (v35)
  {
    __int16 v36 = v35;
    uint64_t v37 = sub_1000EA2B0();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v39 = 0;
  }
  __int16 v40 = (uint64_t *)((char *)a4 + v34[8]);
  *__int16 v40 = v37;
  v40[1] = v39;
  id v41 = [a1 imageMethod];
  if (v41 == (id)1)
  {
    *(uint64_t *)((char *)a4 + v34[9]) = 0;
    goto LABEL_16;
  }
  if (v41 == (id)2)
  {
    if (a3)
    {
      *(uint64_t *)((char *)a4 + v34[9]) = (uint64_t)a3;
      id v42 = a3;
      goto LABEL_16;
    }
    if (qword_100135E40 == -1) {
      goto LABEL_37;
    }
    goto LABEL_59;
  }
  while (1)
  {
    *(uint64_t *)((char *)a4 + v34[9]) = 1;
LABEL_16:
    uint64_t v43 = (uint64_t)[a1 solidBackgroundColorPair];
    if (v43)
    {
      sub_100022374(0, &qword_1001369F0);
      unint64_t v44 = sub_1000EA470();

      if (v44 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1000EA980();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v43 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    id v45 = [a1 backgroundMethod];
    if (v45 == (id)2)
    {
      id v64 = [a1 gradientBackgroundPair];
      sub_100022374(0, &qword_1001369E0);
      unint64_t v65 = sub_1000EA470();

      if (v65 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_1000EA980();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v66 > 1) {
        goto LABEL_43;
      }
LABEL_35:
      long long v67 = self;
      id v68 = [v67 whiteColor];
      id v61 = [v67 blackColor];

      sub_100020B20(a2);
      char v62 = 0;
      __n128 v63 = (char *)a4 + v34[10];
      *(void *)__n128 v63 = v68;
      goto LABEL_50;
    }
    if (v45 != (id)1 || v43 < 2) {
      goto LABEL_35;
    }
    id v46 = [a1 solidBackgroundColorPair];
    if (!v46)
    {
      sub_100022374(0, (unint64_t *)&qword_100138300);
      long long v73 = (void *)sub_1000EA720();
      sub_1000EA600();
      goto LABEL_42;
    }
    __n128 v47 = v46;
    sub_100022374(0, &qword_1001369F0);
    uint64_t v48 = sub_1000EA470();

    if ((v48 & 0xC000000000000001) != 0) {
      goto LABEL_57;
    }
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    __break(1u);
LABEL_59:
    swift_once();
LABEL_37:
    uint64_t v69 = sub_1000E9260();
    sub_10001C4C8(v69, (uint64_t)static Logger.todayWidgetBanner);
    long long v70 = sub_1000E9240();
    os_log_type_t v71 = sub_1000EA600();
    if (os_log_type_enabled(v70, v71))
    {
      long long v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "Image URL method indicated but no resolved image provided", v72, 2u);
      swift_slowDealloc();
    }
  }
  for (id i = *(id *)(v48 + 32); ; id i = (id)sub_1000EA870())
  {
    __n128 v50 = i;
    swift_bridgeObjectRelease();
    id v51 = [v50 hex];

    sub_1000EA2B0();
    id v52 = [a1 solidBackgroundColorPair];
    if (v52)
    {
      long long v53 = v52;
      uint64_t v54 = sub_1000EA470();

      if ((v54 & 0xC000000000000001) != 0)
      {
        id v55 = (id)sub_1000EA870();
      }
      else
      {
        if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          return;
        }
        id v55 = *(id *)(v54 + 40);
      }
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      id v57 = [v56 hex];

      sub_1000EA2B0();
      NSString v58 = sub_1000EA280();
      swift_bridgeObjectRelease();
      long long v59 = self;
      id v81 = [v59 colorWithHexString:v58];

      NSString v60 = sub_1000EA280();
      swift_bridgeObjectRelease();
      id v61 = [v59 colorWithHexString:v60];

      sub_100020B20(a2);
      char v62 = 0;
      __n128 v63 = (char *)a4 + v34[10];
      *(void *)__n128 v63 = v81;
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    sub_100022374(0, (unint64_t *)&qword_100138300);
    long long v73 = (void *)sub_1000EA720();
    sub_1000EA600();
LABEL_42:
    sub_1000E9220();

LABEL_43:
    id v74 = [a1 gradientBackgroundPair];
    sub_100022374(0, &qword_1001369E0);
    uint64_t v75 = sub_1000EA470();

    if ((v75 & 0xC000000000000001) == 0) {
      break;
    }
    id v76 = (id)sub_1000EA870();
LABEL_46:
    id v74 = v76;
    swift_bridgeObjectRelease();
    id v77 = [a1 gradientBackgroundPair];
    uint64_t v78 = sub_1000EA470();

    if ((v78 & 0xC000000000000001) != 0) {
      goto LABEL_55;
    }
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      id v79 = *(id *)(v78 + 40);
      goto LABEL_49;
    }
    __break(1u);
LABEL_57:
    ;
  }
  if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v76 = *(id *)(v75 + 32);
    goto LABEL_46;
  }
  __break(1u);
LABEL_55:
  id v79 = (id)sub_1000EA870();
LABEL_49:
  id v61 = v79;
  swift_bridgeObjectRelease();

  sub_100020B20(a2);
  __n128 v63 = (char *)a4 + v34[10];
  *(void *)__n128 v63 = v74;
  char v62 = 1;
LABEL_50:
  *((void *)v63 + 1) = v61;
  v63[16] = v62;
}

BOOL sub_10001EBF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_10001EC0C()
{
  sub_1000EABC0(*v0);
}

uint64_t sub_10001EC3C()
{
  if (*v0) {
    return 0x664F7265626D756ELL;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_10001EC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100020F90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001ECAC()
{
  return 0;
}

void sub_10001ECB8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10001ECC4(uint64_t a1)
{
  unint64_t v2 = sub_1000223B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001ED00(uint64_t a1)
{
  unint64_t v2 = sub_1000223B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001ED3C(void *a1)
{
  uint64_t v3 = sub_10001B38C(&qword_100136A18);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_1000223B0();
  sub_1000EAC20();
  char v10 = 0;
  sub_1000EAAD0();
  if (!v1)
  {
    char v9 = 1;
    sub_1000EAAD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10001EEA4(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 2036625250;
      break;
    case 3:
      unint64_t result = 0x52556E6F69746361;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6567616D69;
      break;
    case 6:
      unint64_t result = 0x756F72676B636162;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10001EF90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100021098(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10001EFBC(void *a1)
{
  return sub_10001ED3C(a1);
}

unint64_t sub_10001EFD8()
{
  return sub_10001EEA4(*v0);
}

uint64_t sub_10001EFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002123C(a1, a2);
  *a3 = result;
  return result;
}

void sub_10001F008(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10001F014(uint64_t a1)
{
  unint64_t v2 = sub_100020A6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001F050(uint64_t a1)
{
  unint64_t v2 = sub_100020A6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10001F08C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C(&qword_100136940);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (int *)type metadata accessor for Banner();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  uint64_t v30 = a1;
  sub_100020A28(a1, v12);
  sub_100020A6C();
  uint64_t v13 = v8;
  uint64_t v14 = v31;
  sub_1000EAC00();
  if (v14)
  {
    sub_100020AC0((uint64_t)v30);
  }
  else
  {
    uint64_t v15 = (uint64_t)v5;
    id v31 = v11;
    LOBYTE(v32) = 0;
    uint64_t v16 = v29;
    id v17 = v13;
    uint64_t v18 = sub_1000EAA30();
    uint64_t v19 = v31;
    *id v31 = v18;
    v19[1] = v20;
    LOBYTE(v32) = 1;
    v19[2] = sub_1000EAA30();
    v19[3] = v21;
    LOBYTE(v32) = 2;
    v19[4] = sub_1000EAA30();
    v19[5] = v22;
    LOBYTE(v32) = 3;
    sub_100020DC0((unint64_t *)&qword_100139E10, &qword_100137200);
    sub_1000EAA70();
    sub_100020B80(v15, (uint64_t)v19 + v9[7]);
    sub_10001B38C(&qword_10013A640);
    char v34 = 4;
    sub_100020E84(&qword_100139E30);
    sub_1000EAA70();
    *(_OWORD *)((char *)v19 + v9[8]) = v32;
    sub_10001B38C(&qword_100136950);
    char v34 = 5;
    sub_100020BE8(&qword_100136958, (void (*)(void))sub_100020C58);
    sub_1000EAA70();
    uint64_t v23 = v28;
    *(uint64_t *)((char *)v19 + v9[9]) = v32;
    char v34 = 6;
    sub_100020CAC();
    sub_1000EAA70();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v16);
    char v24 = v33;
    id v25 = (char *)v19 + v9[10];
    *(_OWORD *)id v25 = v32;
    v25[16] = v24;
    sub_100020D00((uint64_t)v19, v27);
    sub_100020AC0((uint64_t)v30);
    sub_100020D64((uint64_t)v19);
  }
}

uint64_t sub_10001F648(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001B38C(&qword_100136970);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_100020A6C();
  sub_1000EAC20();
  LOBYTE(v13) = 0;
  sub_1000EAAA0();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1000EAAA0();
    LOBYTE(v13) = 2;
    sub_1000EAAA0();
    char v9 = (int *)type metadata accessor for Banner();
    LOBYTE(v13) = 3;
    sub_10001B38C((uint64_t *)&unk_1001370F0);
    sub_100020DC0((unint64_t *)&qword_100137240, &qword_100139E70);
    sub_1000EAAE0();
    long long v13 = *(_OWORD *)(v3 + v9[8]);
    char v15 = 4;
    sub_10001B38C(&qword_10013A640);
    sub_100020E84((unint64_t *)&qword_100139E80);
    sub_1000EAAE0();
    *(void *)&long long v13 = *(void *)(v3 + v9[9]);
    char v15 = 5;
    sub_10001B38C(&qword_100136950);
    sub_100020BE8(&qword_100136978, (void (*)(void))sub_100020EE8);
    sub_1000EAAE0();
    uint64_t v10 = (long long *)(v3 + v9[10]);
    char v11 = *((unsigned char *)v10 + 16);
    long long v13 = *v10;
    char v14 = v11;
    char v15 = 6;
    sub_100020F3C();
    sub_1000EAAE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10001F9A4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10001F9BC(void *a1)
{
  return sub_10001F648(a1);
}

uint64_t sub_10001F9D4()
{
  if (*v0) {
    return 0x6172576567616D69;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_10001FA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002151C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001FA38(uint64_t a1)
{
  unint64_t v2 = sub_100021810();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001FA74(uint64_t a1)
{
  unint64_t v2 = sub_100021810();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001FAB0(char *a1, char *a2)
{
  return sub_1000C3550(*a1, *a2);
}

Swift::Int sub_10001FABC()
{
  return sub_1000EABE0();
}

uint64_t sub_10001FB44()
{
  sub_1000EA330();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10001FBB8()
{
  return sub_1000EABE0();
}

uint64_t sub_10001FC3C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100020394(a1, (Swift::OpaquePointer)&off_1001242E0, a2);
}

void sub_10001FC48(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x536D75696D657270;
  if (*v1) {
    uint64_t v2 = 0x6567616D69;
  }
  unint64_t v3 = 0xEB000000006C6165;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10001FC8C()
{
  return sub_1000EA440();
}

uint64_t sub_10001FCEC()
{
  return sub_1000EA430();
}

void sub_10001FD3C(void *a1, void *a2)
{
  uint64_t v5 = sub_1000E8C80();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C(&qword_1001369B0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_100021810();
  sub_1000EAC20();
  if (a2)
  {
    LOBYTE(v22) = 1;
    char v25 = 0;
    sub_10002190C();
    id v12 = a2;
    sub_1000EAAE0();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

      return;
    }
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    id v13 = v12;
    sub_1000E8C70();
    uint64_t v14 = sub_1000E8C60();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    swift_bridgeObjectRelease();
    unint64_t v22 = v14;
    unint64_t v23 = v16;
    v26._countAndFlagsBits = 1735290926;
    v26._object = (void *)0xE400000000000000;
    sub_1000EA370(v26);

    unint64_t v17 = v22;
    unint64_t v18 = v23;
    unint64_t v22 = (unint64_t)v13;
    unint64_t v23 = v17;
    unint64_t v24 = v18;
    char v25 = 1;
    sub_100021960();
    sub_1000EAAE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v22) = 0;
    char v25 = 0;
    sub_10002190C();
    sub_1000EAAE0();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void *sub_100020028@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100021618(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_100020054(void *a1)
{
  sub_10001FD3C(a1, *v1);
}

BOOL sub_100020070(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100020084()
{
  Swift::UInt v1 = *v0;
  sub_1000EABB0();
  sub_1000EABC0(v1);
  return sub_1000EABE0();
}

Swift::Int sub_1000200CC()
{
  Swift::UInt v1 = *v0;
  sub_1000EABB0();
  sub_1000EABC0(v1);
  return sub_1000EABE0();
}

uint64_t sub_100020110()
{
  uint64_t v1 = 0x746144746867696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x617461446B726164;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_100020168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000219B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_100020190(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10002019C(uint64_t a1)
{
  unint64_t v2 = sub_1000220BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000201D8(uint64_t a1)
{
  unint64_t v2 = sub_1000220BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100020214(char *a1, char *a2)
{
  return sub_1000C35FC(*a1, *a2);
}

Swift::Int sub_100020220()
{
  return sub_1000EABE0();
}

uint64_t sub_1000202A0()
{
  sub_1000EA330();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10002030C()
{
  return sub_1000EABE0();
}

uint64_t sub_100020388@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100020394(a1, (Swift::OpaquePointer)&off_100124330, a2);
}

uint64_t sub_100020394@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, char *a3@<X8>)
{
  v9._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v9._object = v4;
  Swift::Int v6 = sub_1000EA9E0(a2, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_1000203F0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64696C6F73;
  if (*v1) {
    uint64_t v2 = 0x746E656964617267;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10002042C()
{
  return sub_1000EA440();
}

uint64_t sub_10002048C()
{
  return sub_1000EA430();
}

void sub_1000204EC(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v9 = sub_10001B38C(&qword_1001369F8);
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_1000220BC();
  sub_1000EAC20();
  if ((a4 & 1) == 0)
  {
    *(_WORD *)uint64_t v38 = 0;
    sub_100022264();
    id v12 = a2;
    id v13 = a3;
    sub_1000EAAE0();
    if (!v4)
    {
      uint64_t v14 = self;
      *(void *)&v38[1] = 0;
      id v15 = [v14 archivedDataWithRootObject:v12 requiringSecureCoding:1 error:&v38[1]];
      id v16 = *(id *)&v38[1];
      if (v15)
      {
        id v36 = v14;
        uint64_t v17 = sub_1000E8B90();
        unint64_t v19 = v18;

        *(void *)&v38[1] = v17;
        unint64_t v39 = v19;
        v38[0] = 1;
        unint64_t v20 = sub_1000222B8();
        sub_1000EAAE0();
        uint64_t v35 = v17;
        *(void *)&v38[1] = 0;
        id v27 = [v36 archivedDataWithRootObject:v13 requiringSecureCoding:1 error:&v38[1]];
        goto LABEL_11;
      }
LABEL_9:
      Swift::String v26 = v16;
      sub_1000E8A40();

      swift_willThrow();
LABEL_10:

      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
      return;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);

    return;
  }
  *(_WORD *)uint64_t v38 = 256;
  sub_100022264();
  id v12 = a2;
  id v13 = a3;
  sub_1000EAAE0();
  if (v4) {
    goto LABEL_6;
  }
  uint64_t v21 = self;
  *(void *)&v38[1] = 0;
  id v22 = [v21 archivedDataWithRootObject:v12 requiringSecureCoding:1 error:&v38[1]];
  id v16 = *(id *)&v38[1];
  if (!v22) {
    goto LABEL_9;
  }
  id v36 = v13;
  uint64_t v23 = sub_1000E8B90();
  unint64_t v19 = v24;

  *(void *)&v38[1] = v23;
  unint64_t v39 = v19;
  v38[0] = 1;
  unint64_t v25 = sub_1000222B8();
  sub_1000EAAE0();
  unint64_t v34 = v25;
  uint64_t v35 = v23;
  *(void *)&v38[1] = 0;
  id v13 = v36;
  id v27 = [v21 archivedDataWithRootObject:v36 requiringSecureCoding:1 error:&v38[1]];
LABEL_11:
  id v28 = v27;
  id v29 = *(id *)&v38[1];
  if (!v28)
  {
    char v33 = v29;
    sub_1000E8A40();

    swift_willThrow();
    sub_1000221B8(v35, v19);
    goto LABEL_10;
  }
  uint64_t v30 = sub_1000E8B90();
  unint64_t v32 = v31;

  *(void *)&v38[1] = v30;
  unint64_t v39 = v32;
  v38[0] = 2;
  sub_1000EAAE0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);

  sub_1000221B8(v35, v19);
  sub_1000221B8(v30, v32);
}

void *sub_1000209D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100021B08(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

void sub_100020A08(void *a1)
{
  sub_1000204EC(a1, *(void **)v1, *(void **)(v1 + 8), *(unsigned char *)(v1 + 16));
}

void *sub_100020A28(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100020A6C()
{
  unint64_t result = qword_100136948;
  if (!qword_100136948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136948);
  }
  return result;
}

uint64_t sub_100020AC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_100020B10(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_100020B20(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100020B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100020BE8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(&qword_100136950);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100020C58()
{
  unint64_t result = qword_100136960;
  if (!qword_100136960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136960);
  }
  return result;
}

unint64_t sub_100020CAC()
{
  unint64_t result = qword_100136968;
  if (!qword_100136968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136968);
  }
  return result;
}

uint64_t sub_100020D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Banner();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100020D64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Banner();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100020DC0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0((uint64_t *)&unk_1001370F0);
    sub_100020E40(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100020E40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000E8B60();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100020E84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(&qword_10013A640);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100020EE8()
{
  unint64_t result = qword_100136980;
  if (!qword_100136980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136980);
  }
  return result;
}

unint64_t sub_100020F3C()
{
  unint64_t result = qword_100136988;
  if (!qword_100136988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136988);
  }
  return result;
}

uint64_t sub_100020F90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001000FD4C0 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xEC00000073706154)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100021098(void *a1)
{
  uint64_t v3 = sub_10001B38C(&qword_100136A08);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_100020A28(a1, v7);
  sub_1000223B0();
  sub_1000EAC00();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = sub_1000EAA60();
    v9[14] = 1;
    sub_1000EAA60();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_100020AC0((uint64_t)a1);
  return v7;
}

uint64_t sub_10002123C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x52556E6F69746361 && a2 == 0xE90000000000004CLL || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000FD4A0 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_10002151C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6172576567616D69 && a2 == 0xEC00000072657070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_100021618(void *a1)
{
  uint64_t v3 = sub_10001B38C(&qword_100136990);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100020A28(a1, a1[3]);
  sub_100021810();
  sub_1000EAC00();
  if (!v1)
  {
    char v10 = 0;
    sub_100021864();
    sub_1000EAA70();
    if (v9)
    {
      char v10 = 1;
      sub_1000218B8();
      sub_1000EAA70();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v7 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v7 = 0;
    }
  }
  sub_100020AC0((uint64_t)a1);
  return v7;
}

unint64_t sub_100021810()
{
  unint64_t result = qword_100136998;
  if (!qword_100136998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136998);
  }
  return result;
}

unint64_t sub_100021864()
{
  unint64_t result = qword_1001369A0;
  if (!qword_1001369A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369A0);
  }
  return result;
}

unint64_t sub_1000218B8()
{
  unint64_t result = qword_1001369A8;
  if (!qword_1001369A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369A8);
  }
  return result;
}

unint64_t sub_10002190C()
{
  unint64_t result = qword_1001369B8;
  if (!qword_1001369B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369B8);
  }
  return result;
}

unint64_t sub_100021960()
{
  unint64_t result = qword_1001369C0;
  if (!qword_1001369C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369C0);
  }
  return result;
}

uint64_t sub_1000219B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746867696CLL && a2 == 0xE900000000000061 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B726164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_100021B08(void *a1)
{
  uint64_t v3 = sub_10001B38C(&qword_1001369C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)a1[3];
  sub_100020A28(a1, (uint64_t)v7);
  sub_1000220BC();
  sub_1000EAC00();
  if (v1) {
    goto LABEL_4;
  }
  char v33 = 0;
  sub_100022110();
  sub_1000EAA70();
  if (v31)
  {
    char v33 = 1;
    unint64_t v9 = sub_100022164();
    sub_1000EAA70();
    unint64_t v28 = v9;
    unint64_t v10 = v32;
    uint64_t v30 = v31;
    uint64_t v11 = sub_100022374(0, (unint64_t *)&unk_10013A600);
    sub_100022374(0, &qword_1001369E0);
    unint64_t v29 = v10;
    uint64_t v27 = v11;
    uint64_t v7 = (void *)sub_1000EA630();
    if (v7)
    {
      char v33 = 2;
      sub_1000EAA70();
      unint64_t v12 = v32;
      unint64_t v28 = v31;
      uint64_t v13 = sub_1000EA630();
      uint64_t v27 = v12;
      if (v13)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        sub_1000221B8(v30, v29);
        unint64_t v22 = v27;
        uint64_t v21 = v28;
LABEL_18:
        sub_1000221B8(v21, v22);
        sub_100020AC0((uint64_t)a1);
        return v7;
      }
      sub_100022210();
      swift_allocError();
      *uint64_t v23 = 1;
      swift_willThrow();
      sub_1000221B8(v30, v29);
      unint64_t v25 = v27;
      uint64_t v24 = v28;
LABEL_21:
      sub_1000221B8(v24, v25);

      goto LABEL_3;
    }
    sub_100022210();
    swift_allocError();
    *uint64_t v17 = 1;
  }
  else
  {
    char v33 = 1;
    unint64_t v14 = sub_100022164();
    sub_1000EAA70();
    unint64_t v28 = v14;
    unint64_t v15 = v32;
    uint64_t v30 = v31;
    uint64_t v16 = sub_100022374(0, (unint64_t *)&unk_10013A600);
    sub_100022374(0, &qword_1001369F0);
    unint64_t v29 = v15;
    uint64_t v27 = v16;
    uint64_t v7 = (void *)sub_1000EA630();
    if (v7)
    {
      char v33 = 2;
      sub_1000EAA70();
      uint64_t v19 = v31;
      unint64_t v28 = v32;
      uint64_t v20 = sub_1000EA630();
      uint64_t v27 = v19;
      if (v20)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        sub_1000221B8(v30, v29);
        uint64_t v21 = v27;
        unint64_t v22 = v28;
        goto LABEL_18;
      }
      sub_100022210();
      swift_allocError();
      unsigned char *v26 = 0;
      swift_willThrow();
      sub_1000221B8(v30, v29);
      uint64_t v24 = v27;
      unint64_t v25 = v28;
      goto LABEL_21;
    }
    sub_100022210();
    swift_allocError();
    *unint64_t v18 = 0;
  }
  swift_willThrow();
  sub_1000221B8(v30, v29);
LABEL_3:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_4:
  sub_100020AC0((uint64_t)a1);
  return v7;
}

unint64_t sub_1000220BC()
{
  unint64_t result = qword_1001369D0;
  if (!qword_1001369D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369D0);
  }
  return result;
}

unint64_t sub_100022110()
{
  unint64_t result = qword_1001369D8;
  if (!qword_1001369D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369D8);
  }
  return result;
}

unint64_t sub_100022164()
{
  unint64_t result = qword_1001371C0;
  if (!qword_1001371C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001371C0);
  }
  return result;
}

uint64_t sub_1000221B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_100022210()
{
  unint64_t result = qword_1001369E8;
  if (!qword_1001369E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001369E8);
  }
  return result;
}

unint64_t sub_100022264()
{
  unint64_t result = qword_100136A00;
  if (!qword_100136A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A00);
  }
  return result;
}

unint64_t sub_1000222B8()
{
  unint64_t result = qword_100139E40;
  if (!qword_100139E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139E40);
  }
  return result;
}

uint64_t sub_10002230C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022374(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1000223B0()
{
  unint64_t result = qword_100136A10;
  if (!qword_100136A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A10);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for BannerState.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_100022418(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100022420(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BannerState.CodingKeys()
{
  return &type metadata for BannerState.CodingKeys;
}

ValueMetadata *type metadata accessor for Banner.Background.Errors()
{
  return &type metadata for Banner.Background.Errors;
}

ValueMetadata *type metadata accessor for Banner.Background.CodingType()
{
  return &type metadata for Banner.Background.CodingType;
}

uint64_t getEnumTagSinglePayload for Banner.Background.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Banner.Background.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000225B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000225E0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Banner.Background.CodingKeys()
{
  return &type metadata for Banner.Background.CodingKeys;
}

ValueMetadata *type metadata accessor for Banner.Image.CodingType()
{
  return &type metadata for Banner.Image.CodingType;
}

uint64_t getEnumTagSinglePayload for EntryStore.Errors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10NewsToday211BannerStateV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100022764);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Banner.Image.CodingKeys()
{
  return &type metadata for Banner.Image.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Banner.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Banner.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000228F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Banner.CodingKeys()
{
  return &type metadata for Banner.CodingKeys;
}

void destroy for Banner.Background(void **a1)
{
}

uint64_t _s10NewsToday26BannerV10BackgroundOwCP_0(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10001D614(*(void **)a2, v4);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Banner.Background(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10001D614(*(void **)a2, v4);
  unsigned int v6 = *(void **)a1;
  BOOL v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10001D758(v6, v7);
  return a1;
}

__n128 initializeWithTake for Banner.Background(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Banner.Background(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  unsigned int v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10001D758(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Banner.Background(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Banner.Background(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100022AD0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100022AD8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Banner.Background()
{
  return &type metadata for Banner.Background;
}

unint64_t sub_100022AF8()
{
  unint64_t result = qword_100136A20;
  if (!qword_100136A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A20);
  }
  return result;
}

unint64_t sub_100022B50()
{
  unint64_t result = qword_100136A28;
  if (!qword_100136A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A28);
  }
  return result;
}

unint64_t sub_100022BA8()
{
  unint64_t result = qword_100136A30;
  if (!qword_100136A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A30);
  }
  return result;
}

unint64_t sub_100022C00()
{
  unint64_t result = qword_100136A38;
  if (!qword_100136A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A38);
  }
  return result;
}

unint64_t sub_100022C58()
{
  unint64_t result = qword_100136A40;
  if (!qword_100136A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A40);
  }
  return result;
}

unint64_t sub_100022CB0()
{
  unint64_t result = qword_100136A48;
  if (!qword_100136A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A48);
  }
  return result;
}

unint64_t sub_100022D08()
{
  unint64_t result = qword_100136A50;
  if (!qword_100136A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A50);
  }
  return result;
}

unint64_t sub_100022D60()
{
  unint64_t result = qword_100136A58;
  if (!qword_100136A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A58);
  }
  return result;
}

unint64_t sub_100022DB8()
{
  unint64_t result = qword_100136A60;
  if (!qword_100136A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A60);
  }
  return result;
}

unint64_t sub_100022E10()
{
  unint64_t result = qword_100136A68;
  if (!qword_100136A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A68);
  }
  return result;
}

unint64_t sub_100022E68()
{
  unint64_t result = qword_100136A70;
  if (!qword_100136A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A70);
  }
  return result;
}

unint64_t sub_100022EC0()
{
  unint64_t result = qword_100136A78;
  if (!qword_100136A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A78);
  }
  return result;
}

unint64_t sub_100022F18()
{
  unint64_t result = qword_100136A80;
  if (!qword_100136A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A80);
  }
  return result;
}

unint64_t sub_100022F70()
{
  unint64_t result = qword_100136A88;
  if (!qword_100136A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A88);
  }
  return result;
}

unint64_t sub_100022FC8()
{
  unint64_t result = qword_100136A90;
  if (!qword_100136A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A90);
  }
  return result;
}

unint64_t sub_10002301C()
{
  unint64_t result = qword_100136A98;
  if (!qword_100136A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136A98);
  }
  return result;
}

unint64_t sub_100023070()
{
  unint64_t result = qword_100136AA0;
  if (!qword_100136AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136AA0);
  }
  return result;
}

void sub_1000230E0(id *a1)
{
  int v2 = *(void **)(v1 + 16);
  unsigned int v3 = [*a1 promotionCriterion];
  if (v3 == 1 || v3 == 2)
  {
    id v4 = [self mainBundle];
    id v5 = [v4 bundleIdentifier];

    if (v5)
    {
      id v6 = NSSNewsAppBundleID;
      NSString v7 = sub_1000EA280();
      NSString v8 = sub_1000EA280();
      swift_bridgeObjectRelease();
      id v9 = [objc_allocWithZone((Class)type metadata accessor for TodayIntent()) init];
      id v10 = [v2 createSuggestionWithAppBundleIdentifier:v6 widgetBundleIdentifier:v5 widgetKind:v7 criterion:v8 applicableLayouts:24 suggestionIdentifier:0 startDate:0 endDate:0 intent:v9 metadata:0];

      if (v10)
      {
        sub_10001B38C(&qword_1001390C0);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1000F15A0;
        *(void *)(v11 + 32) = v10;
        sub_1000EA490();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_100023354();
  Class isa = sub_1000EA460().super.isa;
  swift_bridgeObjectRelease();
  [v2 updateSuggestions:isa];
}

uint64_t sub_1000232F0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ProactiveSuggestionManager()
{
  return self;
}

unint64_t sub_100023354()
{
  unint64_t result = qword_100136B50;
  if (!qword_100136B50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100136B50);
  }
  return result;
}

uint64_t sub_100023394()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_100023760(char a1)
{
  uint64_t result = 0x746F6F7223;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t result = sub_1000EA2B0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100023824(char a1)
{
  uint64_t result = 0x746F6F7223;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t result = sub_1000EA2B0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000238E8(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_100023760(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_100023760(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000EAB20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_100023978()
{
  unint64_t result = qword_100136B58;
  if (!qword_100136B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136B58);
  }
  return result;
}

Swift::Int sub_1000239CC()
{
  char v1 = *v0;
  sub_1000EABB0();
  sub_100023760(v1);
  sub_1000EA330();
  swift_bridgeObjectRelease();
  return sub_1000EABE0();
}

uint64_t sub_100023A30()
{
  sub_100023760(*v0);
  sub_1000EA330();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100023A84()
{
  char v1 = *v0;
  sub_1000EABB0();
  sub_100023760(v1);
  sub_1000EA330();
  swift_bridgeObjectRelease();
  return sub_1000EABE0();
}

uint64_t sub_100023AE4()
{
  return sub_10001D100(&qword_100136B60, &qword_100136B68);
}

void sub_100023B20(void *a1@<X8>)
{
  *a1 = &off_100124380;
}

uint64_t sub_100023B30()
{
  return sub_100023824(*v0);
}

uint64_t sub_100023B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000255CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100023B80@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000255CC(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100023BB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100023760(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100023BE0()
{
  unint64_t result = qword_100136B70;
  if (!qword_100136B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136B70);
  }
  return result;
}

uint64_t sub_100023C34()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  char v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000E8A70();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_1000E8910();
  sub_10001C500(v5, qword_10014B928);
  sub_10001C4C8(v5, (uint64_t)qword_10014B928);
  sub_1000E8A50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1000E8900();
}

uint64_t sub_100023DA0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100136CA8 + dword_100136CA8);
  char v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100023E44;
  return v4();
}

uint64_t sub_100023E44(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100023F5C()
{
  unint64_t result = qword_100136B80;
  if (!qword_100136B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136B80);
  }
  return result;
}

unint64_t sub_100023FB4()
{
  unint64_t result = qword_100136B88;
  if (!qword_100136B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136B88);
  }
  return result;
}

unint64_t sub_10002400C()
{
  unint64_t result = qword_100136B90[0];
  if (!qword_100136B90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100136B90);
  }
  return result;
}

uint64_t sub_100024060(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100136CB0 + dword_100136CB0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100024108;
  return v5(a1);
}

uint64_t sub_100024108(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100024208(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100136CA8 + dword_100136CA8);
  char v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100026474;
  return v4();
}

unint64_t sub_1000242B0()
{
  unint64_t result = qword_100136BA8;
  if (!qword_100136BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BA8);
  }
  return result;
}

unint64_t sub_100024308()
{
  unint64_t result = qword_100136BB0;
  if (!qword_100136BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BB0);
  }
  return result;
}

unint64_t sub_100024360()
{
  unint64_t result = qword_100136BB8;
  if (!qword_100136BB8)
  {
    sub_10001B3D0(qword_100136BC0);
    sub_100024308();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BB8);
  }
  return result;
}

uint64_t sub_1000243D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100023BE0();
  void *v5 = v2;
  v5[1] = sub_10001A400;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100024488(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100136CA0 + dword_100136CA0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_10002452C;
  return v4();
}

uint64_t sub_10002452C(char a1)
{
  uint64_t v3 = *(unsigned char **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  unsigned char *v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

unint64_t sub_100024648()
{
  unint64_t result = qword_100136BD8;
  if (!qword_100136BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BD8);
  }
  return result;
}

uint64_t sub_10002469C()
{
  uint64_t v0 = sub_10001B38C(&qword_100136C90);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136C98);
  __chkstk_darwin(v4);
  sub_10002400C();
  sub_1000E88E0();
  v7._object = (void *)0x80000001000FD790;
  v7._countAndFlagsBits = 0xD000000000000056;
  sub_1000E88D0(v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  sub_1000E88C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1000E88D0(v8);
  return sub_1000E88F0();
}

unint64_t sub_10002485C()
{
  unint64_t result = qword_100136BE0;
  if (!qword_100136BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BE0);
  }
  return result;
}

unint64_t sub_1000248B4()
{
  unint64_t result = qword_100136BE8;
  if (!qword_100136BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BE8);
  }
  return result;
}

unint64_t sub_10002490C()
{
  unint64_t result = qword_100136BF0;
  if (!qword_100136BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BF0);
  }
  return result;
}

unint64_t sub_100024968()
{
  unint64_t result = qword_100136BF8;
  if (!qword_100136BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136BF8);
  }
  return result;
}

uint64_t sub_1000249BC()
{
  sub_10002638C();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

unint64_t sub_100024A54()
{
  unint64_t result = qword_100136C08;
  if (!qword_100136C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C08);
  }
  return result;
}

unint64_t sub_100024AAC()
{
  unint64_t result = qword_100136C10;
  if (!qword_100136C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C10);
  }
  return result;
}

unint64_t sub_100024B04()
{
  unint64_t result = qword_100136C18;
  if (!qword_100136C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C18);
  }
  return result;
}

unint64_t sub_100024B5C()
{
  unint64_t result = qword_100136C20;
  if (!qword_100136C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C20);
  }
  return result;
}

void sub_100024BB0(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100024BBC@<X0>(uint64_t a1@<X8>)
{
  return sub_100025108(&qword_100135BF0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014B928, a1);
}

uint64_t sub_100024BF4()
{
  return sub_10001D100(&qword_100136C28, &qword_100136C30);
}

uint64_t sub_100024C30(uint64_t a1)
{
  unint64_t v2 = sub_10002400C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100024C80()
{
  unint64_t result = qword_100136C38;
  if (!qword_100136C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C38);
  }
  return result;
}

uint64_t sub_100024CD4()
{
  return sub_100023394();
}

uint64_t sub_100024CDC(uint64_t a1)
{
  unint64_t v2 = sub_100024B04();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100024D2C()
{
  unint64_t result = qword_100136C40;
  if (!qword_100136C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C40);
  }
  return result;
}

uint64_t sub_100024D80()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014B940);
  sub_10001C4C8(v0, (uint64_t)qword_10014B940);
  return sub_1000E8A50();
}

uint64_t sub_100024DE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E8650();
  *a1 = v3;
  return result;
}

uint64_t sub_100024E20()
{
  return sub_1000E8660();
}

void (*sub_100024E58(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E8640();
  return sub_10001A1BC;
}

unint64_t sub_100024EB8()
{
  unint64_t result = qword_100136C48;
  if (!qword_100136C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C48);
  }
  return result;
}

unint64_t sub_100024F10()
{
  unint64_t result = qword_100136C50;
  if (!qword_100136C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C50);
  }
  return result;
}

uint64_t sub_100024F64(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000262E4();
  unint64_t v5 = sub_10002638C();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_100024FD4()
{
  unint64_t result = qword_100136C58;
  if (!qword_100136C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C58);
  }
  return result;
}

unint64_t sub_10002502C()
{
  unint64_t result = qword_100136C60;
  if (!qword_100136C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C60);
  }
  return result;
}

uint64_t sub_100025080()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000250D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100025108(&qword_100135BF8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014B940, a1);
}

uint64_t sub_100025108@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10001C4C8(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1000251AC()
{
  return 0;
}

uint64_t static Tag.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1000251C0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000262E4();
  unint64_t v7 = sub_100026338();
  unint64_t v8 = sub_10002638C();
  void *v5 = v2;
  v5[1] = sub_100025294;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100025294()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_10002539C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100025E6C();
  *a1 = result;
  return result;
}

uint64_t sub_1000253C4(uint64_t a1)
{
  unint64_t v2 = sub_100024EB8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNewsSettingsAutomaticDownloadDynamicDeepLinks()
{
  return &type metadata for OpenNewsSettingsAutomaticDownloadDynamicDeepLinks;
}

ValueMetadata *type metadata accessor for NewsSettingsAutomaticDownloadDynamicDeepLinks()
{
  return &type metadata for NewsSettingsAutomaticDownloadDynamicDeepLinks;
}

ValueMetadata *type metadata accessor for NewsSettingsAutomaticDownloadDynamicDeepLinks.AvailableNewsSettingsAutoDownloadsDynamicDestinationQuery()
{
  return &type metadata for NewsSettingsAutomaticDownloadDynamicDeepLinks.AvailableNewsSettingsAutoDownloadsDynamicDestinationQuery;
}

uint64_t _s10NewsToday247NewsSettingsAutomaticDownloadDynamicDestinationOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10NewsToday247NewsSettingsAutomaticDownloadDynamicDestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100025594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsSettingsAutomaticDownloadDynamicDestination()
{
  return &type metadata for NewsSettingsAutomaticDownloadDynamicDestination;
}

uint64_t sub_1000255CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746F6F7223 && a2 == 0xE500000000000000;
  if (v2 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (sub_1000EA2B0() == a1 && v7 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v9 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v9)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    if (sub_1000EA2B0() == a1 && v10 == a2)
    {
      uint64_t v5 = 2;
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v12 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    if (sub_1000EA2B0() == a1 && v13 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 3;
    }
    char v14 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    if (sub_1000EA2B0() == a1 && v15 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 4;
    }
    char v16 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    if (sub_1000EA2B0() == a1 && v17 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 5;
    }
    char v18 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v18)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    if (sub_1000EA2B0() == a1 && v19 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 6;
    }
    char v20 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    if (sub_1000EA2B0() == a1 && v21 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 7;
    }
    char v22 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v22)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    sub_1000EA600();
    sub_10001B38C(&qword_100137370);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1000F1610;
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = sub_1000263E0();
    *(void *)(v23 + 32) = a1;
    *(void *)(v23 + 40) = a2;
    sub_100026434();
    uint64_t v24 = (void *)sub_1000EA720();
    sub_1000E9220();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1000259C8()
{
  return _swift_task_switch(sub_1000259E4, 0, 0);
}

uint64_t sub_1000259E4()
{
  sub_100025B24((uint64_t)&off_100124380);
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    sub_1000304E8(0, v3, 0);
    uint64_t v4 = 0;
    uint64_t v5 = *((void *)&_swiftEmptyArrayStorage + 2);
    do
    {
      char v6 = *(unsigned char *)(v2 + v4 + 32);
      unint64_t v7 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v5 + v4 >= v7 >> 1) {
        sub_1000304E8(v7 > 1, v5 + v4 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v5 + v4 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage + v5 + v4++ + 32) = v6;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  int v8 = *(uint64_t (**)(void *))(v0 + 8);
  return v8(&_swiftEmptyArrayStorage);
}

void sub_100025B24(uint64_t a1)
{
  unint64_t v1 = 0;
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = a1 + 32;
  uint64_t v4 = FCNewsURLResolutionSubscriptionStatusSharedPreferenceKey;
  char v12 = &_swiftEmptyArrayStorage;
LABEL_2:
  if (v1 <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = v1;
  }
  while (v2 != v1)
  {
    if (v5 == v1)
    {
      __break(1u);
      return;
    }
    char v6 = *(unsigned char *)(v3 + v1++);
    id v7 = (id)NewsCoreUserDefaults();
    unsigned int v8 = [v7 BOOLForKey:v4];

    if (v8)
    {
      char v9 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100030510(0, v12[2] + 1, 1);
        char v9 = v12;
      }
      unint64_t v11 = v9[2];
      unint64_t v10 = v9[3];
      if (v11 >= v10 >> 1)
      {
        sub_100030510(v10 > 1, v11 + 1, 1);
        char v9 = v12;
      }
      v9[2] = v11 + 1;
      char v12 = v9;
      *((unsigned char *)v9 + v11 + 32) = v6;
      goto LABEL_2;
    }
  }
}

uint64_t sub_100025C58(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100025C78, 0, 0);
}

uint64_t sub_100025C78()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_100025B24(v1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_1000304E8(0, v4, 0);
    uint64_t v5 = 0;
    uint64_t v6 = *((void *)&_swiftEmptyArrayStorage + 2);
    do
    {
      char v7 = *(unsigned char *)(v3 + v5 + 32);
      unint64_t v8 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v6 + v5 >= v8 >> 1) {
        sub_1000304E8(v8 > 1, v6 + v5 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v6 + v5 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage + v6 + v5++ + 32) = v7;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  char v9 = *(uint64_t (**)(void *))(v0 + 8);
  return v9(&_swiftEmptyArrayStorage);
}

uint64_t sub_100025DC4()
{
  return _swift_task_switch(sub_100025DE0, 0, 0);
}

uint64_t sub_100025DE0()
{
  sub_100025B24((uint64_t)&off_100124380);
  if (*(void *)(v1 + 16)) {
    uint64_t v2 = *(unsigned __int8 *)(v1 + 32);
  }
  else {
    uint64_t v2 = 8;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100025E6C()
{
  uint64_t v0 = sub_1000E8860();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10001B38C(&qword_100136500);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v22 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)v20 - v5;
  uint64_t v6 = sub_1000E8A60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E8CC0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000EA270();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000E8A70();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v20[1] = sub_10001B38C(&qword_100136C70);
  sub_1000E8A50();
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  sub_1000E8A80();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  char v26 = 8;
  uint64_t v17 = sub_1000E8600();
  char v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v21, 1, 1, v17);
  v18(v22, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10002400C();
  return sub_1000E8670();
}

unint64_t sub_1000262E4()
{
  unint64_t result = qword_100136C78;
  if (!qword_100136C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C78);
  }
  return result;
}

unint64_t sub_100026338()
{
  unint64_t result = qword_100136C80;
  if (!qword_100136C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C80);
  }
  return result;
}

unint64_t sub_10002638C()
{
  unint64_t result = qword_100136C88;
  if (!qword_100136C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136C88);
  }
  return result;
}

unint64_t sub_1000263E0()
{
  unint64_t result = qword_100137380;
  if (!qword_100137380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137380);
  }
  return result;
}

unint64_t sub_100026434()
{
  unint64_t result = qword_100138300;
  if (!qword_100138300)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100138300);
  }
  return result;
}

uint64_t sub_100026478()
{
  uint64_t v0 = sub_10001B38C(&qword_100136CC0);

  return TupleWidget.init(_:)(v0, v0);
}

uint64_t sub_1000264C0()
{
  uint64_t v0 = sub_1000E90D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B38C(&qword_100136CE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000F1D60;
  uint64_t v5 = type metadata accessor for ProactiveAssembly();
  uint64_t v6 = swift_allocObject();
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = sub_100026FEC(&qword_100136CE8, (void (*)(uint64_t))type metadata accessor for ProactiveAssembly);
  *(void *)(v4 + 32) = v6;
  uint64_t v7 = type metadata accessor for WidgetAnalyticsAssembly();
  uint64_t v8 = swift_allocObject();
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = sub_100026FEC(&qword_100136CF0, (void (*)(uint64_t))type metadata accessor for WidgetAnalyticsAssembly);
  *(void *)(v4 + 72) = v8;
  uint64_t v9 = type metadata accessor for WidgetServiceAssembly();
  uint64_t v10 = swift_allocObject();
  *(void *)(v4 + 136) = v9;
  *(void *)(v4 + 144) = sub_100026FEC(&qword_100136CF8, (void (*)(uint64_t))type metadata accessor for WidgetServiceAssembly);
  *(void *)(v4 + 112) = v10;
  uint64_t v11 = type metadata accessor for TodayWidgetServiceAssembly();
  uint64_t v12 = swift_allocObject();
  *(void *)(v4 + 176) = v11;
  *(void *)(v4 + 184) = sub_100026FEC(&qword_100136D00, (void (*)(uint64_t))type metadata accessor for TodayWidgetServiceAssembly);
  *(void *)(v4 + 152) = v12;
  sub_1000E8F00();
  swift_allocObject();
  sub_1000E8EF0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Container.Environment.normal(_:), v0);
  sub_1000E9100();
  swift_allocObject();
  uint64_t result = sub_1000E90E0();
  qword_10014B958 = result;
  return result;
}

uint64_t sub_100026780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100135E60);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  uint64_t v50 = v2;
  __chkstk_darwin(v1);
  __n128 v47 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100135E58);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  uint64_t v54 = v5;
  __chkstk_darwin(v4);
  uint64_t v48 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100135E50);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  __chkstk_darwin(v7);
  id v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C(&qword_100135E48);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  uint64_t v58 = v11;
  __chkstk_darwin(v10);
  id v52 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000EA2B0();
  uint64_t v61 = v13;
  char v62 = sub_100026E58;
  uint64_t v63 = 0;
  sub_1000E9680();
  uint64_t v14 = sub_1000E9A40();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t v19 = sub_10001B38C(&qword_100135E68);
  uint64_t v20 = sub_10001D100(&qword_100135E70, &qword_100135E68);
  sub_1000E9790();
  sub_100026FDC(v14, v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001B38C(&qword_100136CD8);
  uint64_t v21 = sub_1000E9F60();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 72);
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000F1D70;
  unint64_t v26 = v25 + v24;
  uint64_t v27 = *(void (**)(unint64_t, void, uint64_t))(v22 + 104);
  v27(v26, enum case for InternalWidgetFamily.accessoryRectangular(_:), v21);
  v27(v26 + v23, enum case for InternalWidgetFamily.systemSmall(_:), v21);
  v27(v26 + 2 * v23, enum case for InternalWidgetFamily.systemMedium(_:), v21);
  v27(v26 + 3 * v23, enum case for InternalWidgetFamily.systemLarge(_:), v21);
  v27(v26 + 4 * v23, enum case for InternalWidgetFamily.newsLargeTall(_:), v21);
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v48;
  uint64_t v29 = v49;
  uint64_t v31 = v47;
  sub_1000E97A0();
  swift_bridgeObjectRelease();
  unint64_t v32 = v31;
  uint64_t v33 = v29;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v29);
  sub_1000E9680();
  uint64_t v34 = sub_1000E9A40();
  uint64_t v36 = v35;
  LOBYTE(v22) = v37 & 1;
  uint64_t v60 = v33;
  uint64_t v61 = OpaqueTypeConformance2;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  unint64_t v39 = v51;
  uint64_t v40 = v53;
  sub_1000E9760();
  sub_100026FDC(v34, v36, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v40);
  uint64_t v60 = v40;
  uint64_t v61 = v38;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  id v42 = v52;
  uint64_t v43 = v55;
  sub_1000E97D0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v43);
  id v44 = [self currentDevice];
  [v44 userInterfaceIdiom];

  uint64_t v60 = v43;
  uint64_t v61 = v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v45 = v57;
  sub_1000E97C0();
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v42, v45);
}

uint64_t sub_100026E58()
{
  if (qword_100135C00 != -1) {
    swift_once();
  }
  return sub_1000E90F0();
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_100026EF4()
{
  unint64_t result = qword_100136CB8;
  if (!qword_100136CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136CB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayWidgetBundle()
{
  return &type metadata for TodayWidgetBundle;
}

uint64_t sub_100026F58()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for TodayWidget()
{
  return &type metadata for TodayWidget;
}

uint64_t sub_100026F84()
{
  return sub_10001D100(&qword_100136CC8, &qword_100136CD0);
}

uint64_t sub_100026FC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100026FDC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100026FEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100027034()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100027194()
{
  sub_100020AC0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for EntryStore()
{
  return self;
}

uint64_t sub_1000271F8(uint64_t a1)
{
  uint64_t v3 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v48 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = type metadata accessor for NewsTimelineEntry();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v46 = a1;
  uint64_t v14 = (uint64_t *)(a1 + v13 + *(int *)(type metadata accessor for TodayContent() + 44));
  uint64_t v15 = (void *)v14[1];
  if (v15)
  {
    uint64_t v43 = v12;
    uint64_t v16 = *v14;
    sub_100020A28((void *)(v1 + 16), *(void *)(v1 + 40));
    id v44 = v11;
    swift_bridgeObjectRetain();
    v47[0] = sub_10002EF5C();
    v47[1] = v17;
    swift_bridgeObjectRetain();
    v49._countAndFlagsBits = 45;
    v49._object = (void *)0xE100000000000000;
    sub_1000EA370(v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v42 = v16;
    v50._countAndFlagsBits = v16;
    v50._object = v15;
    sub_1000EA370(v50);
    swift_bridgeObjectRelease();
    char v18 = v44;
    sub_1000E8AF0();
    swift_bridgeObjectRelease();
    sub_1000E8B00();
    sub_1000E89B0();
    swift_allocObject();
    sub_1000E89A0();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v18, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    uint64_t v19 = (void (*)(void *, void))sub_1000E8990();
    sub_10002777C((uint64_t)v5);
    v19(v47, 0);
    sub_100028BD8(&qword_100136DB8);
    uint64_t v20 = v45;
    uint64_t v21 = sub_1000E8980();
    if (v20)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v48, v6);
      return ((uint64_t (*)(char *, uint64_t))v23)(v18, v6);
    }
    else
    {
      unint64_t v26 = v22;
      uint64_t v45 = v7;
      uint64_t v46 = v21;
      sub_10001B38C(&qword_100137370);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1000F1E20;
      *(void *)(v27 + 56) = &type metadata for String;
      unint64_t v28 = sub_1000263E0();
      *(void *)(v27 + 64) = v28;
      *(void *)(v27 + 32) = v42;
      *(void *)(v27 + 40) = v15;
      uint64_t v29 = 0;
      unint64_t v30 = v28;
      switch(v26 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v46), v46))
          {
            __break(1u);
LABEL_13:
            __break(1u);
            JUMPOUT(0x100027718);
          }
          uint64_t v29 = HIDWORD(v46) - (int)v46;
LABEL_10:
          id v33 = [self stringFromByteCount:v29 countStyle:0];
          uint64_t v34 = sub_1000EA2B0();
          uint64_t v36 = v35;

          *(void *)(v27 + 96) = &type metadata for String;
          *(void *)(v27 + 104) = v30;
          *(void *)(v27 + 72) = v34;
          *(void *)(v27 + 80) = v36;
          sub_100026434();
          char v37 = (void *)sub_1000EA720();
          sub_1000EA620();
          sub_1000E9220();
          swift_bridgeObjectRelease();

          uint64_t v38 = v48;
          uint64_t v39 = v46;
          sub_1000E8BA0();
          sub_1000221B8(v39, v26);
          swift_release();
          uint64_t v40 = *(void (**)(char *, uint64_t))(v45 + 8);
          v40(v38, v6);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v40)(v44, v6);
          break;
        case 2uLL:
          uint64_t v32 = *(void *)(v46 + 16);
          uint64_t v31 = *(void *)(v46 + 24);
          uint64_t v29 = v31 - v32;
          if (!__OFSUB__(v31, v32)) {
            goto LABEL_10;
          }
          goto LABEL_13;
        case 3uLL:
          goto LABEL_10;
        default:
          uint64_t v29 = BYTE6(v26);
          goto LABEL_10;
      }
    }
  }
  else
  {
    sub_100027728();
    swift_allocError();
    *uint64_t v25 = 1;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_100027728()
{
  unint64_t result = qword_100136DB0;
  if (!qword_100136DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136DB0);
  }
  return result;
}

uint64_t sub_10002777C(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000EA930();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EA920();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_10002230C(a1, (uint64_t)v4);
    uint64_t v13 = sub_1000E8B60();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      sub_100028B6C((uint64_t)v4, (uint64_t *)&unk_1001370F0);
      long long v16 = 0u;
      long long v17 = 0u;
    }
    else
    {
      *((void *)&v17 + 1) = v13;
      uint64_t v15 = sub_100028B08((uint64_t *)&v16);
      (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 32))(v15, v4, v13);
    }
    sub_1000289E8((uint64_t)&v16, (uint64_t)v11);
    return sub_100028B6C(a1, (uint64_t *)&unk_1001370F0);
  }
  return result;
}

uint64_t sub_1000279F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v57 = type metadata accessor for NewsTimelineEntry();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v54 = (uint64_t)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v50 - v7;
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v50 - v14;
  sub_100020A28((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_10002ED04((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100028B6C((uint64_t)v8, (uint64_t *)&unk_1001370F0);
    uint64_t v16 = 1;
    uint64_t v17 = v56;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v17, v16, 1, v57);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  sub_1000E8B00();
  uint64_t v19 = v59;
  uint64_t v20 = sub_1000E8B70();
  uint64_t v22 = (uint64_t)v19;
  if (!v19)
  {
    unint64_t v24 = v21;
    uint64_t v59 = v13;
    uint64_t v25 = v20;
    sub_1000E8970();
    swift_allocObject();
    uint64_t v26 = sub_1000E8960();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    uint64_t v53 = v15;
    uint64_t v27 = v9;
    unint64_t v28 = (void (*)(char *, void))sub_1000E8950();
    sub_10002777C((uint64_t)v6);
    v28(v58, 0);
    sub_100028BD8(&qword_100136DC8);
    uint64_t v29 = v54;
    uint64_t v30 = v57;
    sub_1000E8940();
    uint64_t v50 = v26;
    uint64_t v51 = v27;
    uint64_t v52 = v25;
    sub_10001B38C(&qword_100137370);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1000F1E20;
    uint64_t v32 = *(int *)(v30 + 20);
    id v33 = (uint64_t *)(v29 + v32 + *(int *)(type metadata accessor for TodayContent() + 44));
    uint64_t v35 = *v33;
    unint64_t v34 = v33[1];
    *(void *)(v31 + 56) = &type metadata for String;
    unint64_t v36 = sub_1000263E0();
    *(void *)(v31 + 64) = v36;
    if (v34) {
      uint64_t v37 = v35;
    }
    else {
      uint64_t v37 = 0;
    }
    unint64_t v38 = 0xE000000000000000;
    if (v34) {
      unint64_t v38 = v34;
    }
    *(void *)(v31 + 32) = v37;
    *(void *)(v31 + 40) = v38;
    unint64_t v39 = v36;
    switch(v24 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v52), v52))
        {
          __break(1u);
LABEL_18:
          __break(1u);
          JUMPOUT(0x100027FE8);
        }
        uint64_t v22 = HIDWORD(v52) - (int)v52;
LABEL_16:
        uint64_t v42 = self;
        swift_bridgeObjectRetain();
        id v43 = [v42 stringFromByteCount:v22 countStyle:0];
        uint64_t v44 = sub_1000EA2B0();
        uint64_t v46 = v45;

        *(void *)(v31 + 96) = &type metadata for String;
        *(void *)(v31 + 104) = v39;
        *(void *)(v31 + 72) = v44;
        *(void *)(v31 + 80) = v46;
        sub_100026434();
        __n128 v47 = (void *)sub_1000EA720();
        sub_1000EA620();
        sub_1000E9220();
        swift_release();
        swift_bridgeObjectRelease();

        sub_1000221B8(v52, v24);
        uint64_t v48 = *(void (**)(char *, uint64_t))(v10 + 8);
        uint64_t v49 = v51;
        v48(v59, v51);
        v48(v53, v49);
        uint64_t v17 = v56;
        sub_100028C1C(v54, v56);
        uint64_t v16 = 0;
        break;
      case 2uLL:
        uint64_t v41 = *(void *)(v52 + 16);
        uint64_t v40 = *(void *)(v52 + 24);
        uint64_t v22 = v40 - v41;
        if (!__OFSUB__(v40, v41)) {
          goto LABEL_16;
        }
        goto LABEL_18;
      case 3uLL:
        goto LABEL_16;
      default:
        uint64_t v22 = BYTE6(v24);
        goto LABEL_16;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v17, v16, 1, v57);
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  return ((uint64_t (*)(char *, uint64_t))v23)(v15, v9);
}

Swift::Int sub_100027FF8()
{
  return sub_1000EABE0();
}

void sub_10002803C()
{
}

Swift::Int sub_100028064()
{
  return sub_1000EABE0();
}

uint64_t sub_1000280A4()
{
  return 0x656D614E656C6966;
}

uint64_t sub_1000280BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1000EAB20();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_100028154(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100028160(uint64_t a1)
{
  unint64_t v2 = sub_10002956C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002819C(uint64_t a1)
{
  unint64_t v2 = sub_10002956C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000281D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100136DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000EA930();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EA920();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(void *)(a1 + 16) && (unint64_t v12 = sub_10003BA88((uint64_t)v10), (v13 & 1) != 0))
    {
      sub_100029614(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((void *)&v18 + 1))
    {
      uint64_t v14 = sub_1000E8B60();
      int v15 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, v15 ^ 1u, 1, v14);
    }
    else
    {
      sub_100028B6C((uint64_t)&v17, (uint64_t *)&unk_1001394E0);
      uint64_t v16 = sub_1000E8B60();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    }
  }
  return result;
}

uint64_t sub_10002843C(void *a1, UIImage *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a4;
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v5 = sub_1000E8AA0();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  __chkstk_darwin(v5);
  unint64_t v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136DF0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v18 = (char *)&v37 - v17;
  sub_100020A28(a1, a1[3]);
  uint64_t v19 = sub_1000EAC10();
  sub_1000281D8(v19, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100028B6C((uint64_t)v11, (uint64_t *)&unk_1001370F0);
    sub_100029518();
    swift_allocError();
    *uint64_t v20 = 0;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    uint64_t v22 = UIImagePNGRepresentation(v46);
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v37 = sub_1000E8B90();
      uint64_t v46 = v24;

      sub_100020A28(a1, a1[3]);
      sub_10002956C();
      sub_1000EAC20();
      uint64_t v47 = v45;
      uint64_t v48 = v42;
      uint64_t v25 = v38;
      uint64_t v26 = v39;
      uint64_t v27 = v40;
      (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for URL.DirectoryHint.notDirectory(_:), v40);
      sub_1000295C0();
      swift_bridgeObjectRetain();
      sub_1000E8B50();
      uint64_t v28 = v37;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
      uint64_t v29 = v46;
      swift_bridgeObjectRelease();
      uint64_t v30 = v41;
      sub_1000E8BA0();
      if (v30)
      {
        sub_1000221B8(v28, (unint64_t)v29);
        uint64_t v31 = *(void (**)(char *, uint64_t))(v13 + 8);
        v31(v16, v12);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v44);
        return ((uint64_t (*)(char *, uint64_t))v31)(v18, v12);
      }
      else
      {
        uint64_t v33 = v28;
        uint64_t v34 = v44;
        uint64_t v35 = v49;
        sub_1000EAAA0();
        sub_1000221B8(v33, (unint64_t)v29);
        unint64_t v36 = *(void (**)(char *, uint64_t))(v13 + 8);
        v36(v16, v12);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v34);
        return ((uint64_t (*)(char *, uint64_t))v36)(v18, v12);
      }
    }
    else
    {
      sub_100029518();
      swift_allocError();
      *uint64_t v32 = 2;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
}

void (*sub_10002894C@<X0>(void *a1@<X0>, void (**a2)(char *, uint64_t)@<X8>))(char *, uint64_t)
{
  uint64_t result = sub_100028FB4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_10002897C(void *a1)
{
  uint64_t v3 = *(UIImage **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  sub_10002843C(a1, v3, v4, v5);
}

uint64_t sub_1000289E8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100028BC8((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1000BDF34(v9, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1000EA930();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_100028B6C(a1, (uint64_t *)&unk_1001394E0);
    sub_1000719D0(a2, v9);
    uint64_t v7 = sub_1000EA930();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_100028B6C((uint64_t)v9, (uint64_t *)&unk_1001394E0);
  }
}

uint64_t *sub_100028B08(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100028B6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10001B38C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_100028BC8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100028BD8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NewsTimelineEntry();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100028C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for EntryStore.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100028D4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryStore.Errors()
{
  return &type metadata for EntryStore.Errors;
}

uint64_t destroy for EntryStoreImage(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s10NewsToday215EntryStoreImageVwCP_0(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntryStoreImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for EntryStoreImage(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EntryStoreImage(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntryStoreImage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntryStoreImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryStoreImage()
{
  return &type metadata for EntryStoreImage;
}

unint64_t sub_100028F60()
{
  unint64_t result = qword_100136DD0;
  if (!qword_100136DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136DD0);
  }
  return result;
}

void (*sub_100028FB4(void *a1))(char *, uint64_t)
{
  uint64_t v2 = sub_1000E8AA0();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  unint64_t v38 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136DD8);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v35 - v14;
  sub_100020A28(a1, a1[3]);
  uint64_t v16 = (void (*)(char *, uint64_t))sub_1000EABF0();
  sub_1000281D8((uint64_t)v16, (uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100028B6C((uint64_t)v8, (uint64_t *)&unk_1001370F0);
    sub_100029518();
    swift_allocError();
    *uint64_t v17 = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v37 = v13;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    uint64_t v16 = (void (*)(char *, uint64_t))sub_100020A28(a1, a1[3]);
    sub_10002956C();
    long long v18 = v43;
    uint64_t v19 = v46;
    sub_1000EAC00();
    if (v19)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    else
    {
      unint64_t v36 = a1;
      uint64_t v46 = v9;
      v35[0] = sub_1000EAA30();
      uint64_t v44 = v35[0];
      uint64_t v45 = v21;
      uint64_t v23 = v38;
      uint64_t v22 = v39;
      unint64_t v24 = *(void (**)(char *, void, uint64_t))(v39 + 104);
      uint64_t v25 = v40;
      v35[1] = v21;
      v24(v38, enum case for URL.DirectoryHint.notDirectory(_:), v40);
      sub_1000295C0();
      uint64_t v26 = v37;
      sub_1000E8B50();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v25);
      sub_1000E8B30();
      id v27 = objc_allocWithZone((Class)UIImage);
      NSString v28 = sub_1000EA280();
      swift_bridgeObjectRelease();
      uint64_t v16 = (void (*)(char *, uint64_t))[v27 initWithContentsOfFile:v28];

      if (v16)
      {
        uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
        uint64_t v30 = v26;
        uint64_t v31 = v46;
        v29(v30, v46);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v42);
        v29(v15, v31);
        sub_100020AC0((uint64_t)v36);
        return v16;
      }
      swift_bridgeObjectRelease();
      sub_100029518();
      swift_allocError();
      *uint64_t v32 = 1;
      swift_willThrow();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v33 = v26;
      uint64_t v34 = v46;
      v16(v33, v46);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v42);
      v16(v15, v34);
      a1 = v36;
    }
  }
  sub_100020AC0((uint64_t)a1);
  return v16;
}

unint64_t sub_100029518()
{
  unint64_t result = qword_100136DE0;
  if (!qword_100136DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136DE0);
  }
  return result;
}

unint64_t sub_10002956C()
{
  unint64_t result = qword_100136DE8;
  if (!qword_100136DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136DE8);
  }
  return result;
}

unint64_t sub_1000295C0()
{
  unint64_t result = qword_1001385D0;
  if (!qword_1001385D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001385D0);
  }
  return result;
}

uint64_t sub_100029614(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for EntryStoreImage.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002973CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryStoreImage.Errors()
{
  return &type metadata for EntryStoreImage.Errors;
}

uint64_t getEnumTagSinglePayload for EntryStoreImage.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for EntryStoreImage.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100029864);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryStoreImage.CodingKeys()
{
  return &type metadata for EntryStoreImage.CodingKeys;
}

unint64_t sub_1000298A0()
{
  unint64_t result = qword_100136DF8;
  if (!qword_100136DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136DF8);
  }
  return result;
}

unint64_t sub_1000298F8()
{
  unint64_t result = qword_100136E00;
  if (!qword_100136E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136E00);
  }
  return result;
}

unint64_t sub_100029950()
{
  unint64_t result = qword_100136E08;
  if (!qword_100136E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136E08);
  }
  return result;
}

unint64_t sub_1000299A8()
{
  unint64_t result = qword_100136E10;
  if (!qword_100136E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136E10);
  }
  return result;
}

void *sub_1000299FC()
{
  type metadata accessor for UpdatableEntitySettingsManager();
  uint64_t v0 = swift_allocObject();
  unint64_t result = sub_100029A38();
  qword_10014B960 = v0;
  return result;
}

void *sub_100029A38()
{
  if (qword_100135C10 != -1) {
    swift_once();
  }
  sub_10001B38C(&qword_100137020);
  swift_allocObject();
  swift_retain();
  v0[2] = sub_1000E8D40();
  if (qword_100135C18 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[3] = sub_1000E8D40();
  if (qword_100135C28 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[4] = sub_1000E8D40();
  if (qword_100135C20 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[5] = sub_1000E8D40();
  if (qword_100135C30 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[6] = sub_1000E8D40();
  if (qword_100135C38 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[7] = sub_1000E8D40();
  if (qword_100135C40 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[8] = sub_1000E8D40();
  if (qword_100135C48 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[9] = sub_1000E8D40();
  if (qword_100135C50 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  v0[10] = sub_1000E8D40();
  return v0;
}

uint64_t sub_100029DD0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100029E30()
{
  sub_100029DD0();

  return _swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for UpdatableEntitySettingsManager()
{
  return self;
}

unint64_t sub_100029E8C()
{
  unint64_t result = qword_100137018;
  if (!qword_100137018)
  {
    type metadata accessor for UpdatableEntitySettingsManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137018);
  }
  return result;
}

uint64_t sub_100029EE0()
{
  return sub_1000E8D00();
}

uint64_t sub_100029EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, a5, a6);
}

uint64_t sub_100029EF8()
{
  return sub_1000E8D10();
}

uint64_t sub_100029F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, a7, a8);
}

uint64_t sub_100029F10()
{
  return sub_1000E8D80();
}

uint64_t sub_100029F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Updatable.reset<A>(setting:)(a1, a4, a5);
}

uint64_t sub_100029F2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10001B38C(&qword_1001370D0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000E9260();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_10001B38C(&qword_1001370D8);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1000E8F70();
  sub_1000E8CD0();
  sub_10002A47C(&qword_1001370C8);
  sub_1000E8D00();
  swift_release();
  if (v7[15] == 1)
  {
    sub_1000E8F60();
    sub_1000E8CD0();
    v7[13] = 0;
    sub_10002A47C((unint64_t *)&unk_1001370E0);
    sub_1000E8D80();
    swift_release();
  }
  sub_1000E8CD0();
  swift_allocObject();
  swift_weakInit();
  sub_1000E8D10();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002A188()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000E8F60();
    sub_1000E8CD0();
    type metadata accessor for TodayBannerStateStore();
    sub_10002A47C((unint64_t *)&unk_1001370E0);
    sub_1000E8D80();
    swift_release();
    sub_1000EA050();
    sub_1000EA040();
    sub_1000EA020();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10002A260()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for TodayBannerStateStore()
{
  return self;
}

uint64_t sub_10002A2BC()
{
  return sub_10002A47C(&qword_1001370C8);
}

uint64_t sub_10002A2F0()
{
  return sub_1000E8D00();
}

uint64_t sub_10002A320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, *v6, a6);
}

uint64_t sub_10002A350()
{
  return sub_1000E8D10();
}

uint64_t sub_10002A380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, *v8, a8);
}

uint64_t sub_10002A3B0()
{
  return sub_1000E8D80();
}

uint64_t sub_10002A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Updatable.reset<A>(setting:)(a1, *v5, a5);
}

uint64_t sub_10002A410()
{
  return sub_1000E8D90();
}

uint64_t sub_10002A43C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002A474()
{
  return sub_10002A188();
}

uint64_t sub_10002A47C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TodayBannerStateStore();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_10002A4BC(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v9 = a2[1];
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = v9;
    *((void *)a1 + 2) = v8;
    a1[24] = *((unsigned char *)a2 + 24);
    uint64_t v10 = *(int *)(a3 + 32);
    __dst = &a1[v10];
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1000E8B60();
    uint64_t v13 = *(void *)(v12 - 8);
    unint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v9;
    swift_bridgeObjectRetain();
    if (v24(v11, 1, v12))
    {
      uint64_t v16 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    long long v18 = &v7[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1000E8C50();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10001B38C((uint64_t *)&unk_10013A350);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v7;
}

uint64_t sub_10002A75C(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1000E8B60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v8 = sub_1000E8C50();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_10002A8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 32);
  __dst = (void *)(a1 + v7);
  uint64_t v8 = (const void *)(a2 + v7);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v5;
  id v13 = v6;
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v8, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_1000E8C50();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_10002AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v12 = *(int *)(a3 + 32);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000E8B60();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 36);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = sub_1000E8C50();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_10002AE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 36);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1000E8C50();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_10002B05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1000E8B60();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 36);
  int v18 = (void *)(a1 + v17);
  int v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_1000E8C50();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_10002B35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002B370);
}

uint64_t sub_10002B370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C((uint64_t *)&unk_10013A350);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10002B4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002B4B8);
}

uint64_t sub_10002B4B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C((uint64_t *)&unk_10013A350);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for Section()
{
  uint64_t result = qword_100137158;
  if (!qword_100137158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002B638()
{
  sub_10002B768(319, (unint64_t *)&qword_1001368F8, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10002B768(319, (unint64_t *)&unk_100137170, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10002B768(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000EA730();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10002B7BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  id v14 = [a1 items];
  v21[2] = a2;
  _OWORD v21[3] = a3;
  v21[4] = a4;
  uint64_t v15 = sub_10002BA54((void (*)(_OWORD *))sub_10002D8A4, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v16 = [a1 backingTagID];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [self nu_safeColorForIdentifier:v16];
  }
  else
  {
    id v18 = 0;
  }
  uint64_t v19 = type metadata accessor for Section();
  sub_10002BE10(a1, a3, a7 + *(int *)(v19 + 32));
  *(void *)a7 = v18;
  *(void *)(a7 + 8) = a1;
  *(void *)(a7 + 16) = v15;
  *(unsigned char *)(a7 + 24) = a5 & 1;
  sub_10002D5DC(a6, a7 + *(int *)(v19 + 36), (uint64_t *)&unk_10013A350);
  return sub_100020AC0((uint64_t)a3);
}

uint64_t sub_10002B91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_100029614(a1, (uint64_t)v22);
  sub_10001B38C(&qword_100137270);
  swift_dynamicCast();
  uint64_t v9 = (void *)v22[5];
  sub_10002D970(a3, (uint64_t)v22);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = [v9 identifier];
  uint64_t v11 = sub_1000EA2B0();
  uint64_t v13 = v12;

  if (*(void *)(a4 + 16) && (unint64_t v14 = sub_10003BAEC(v11, v13), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(a4 + 56) + 16 * v14;
    id v17 = *(id *)v16;
    id v18 = *(void **)(v16 + 8);
    id v19 = *(id *)v16;
    id v20 = v18;
  }
  else
  {
    id v17 = 0;
    id v18 = 0;
  }
  swift_bridgeObjectRelease();
  sub_1000D89A0(v9, a2, v22, v17, v18, a5);
  return swift_unknownObjectRelease();
}

void *sub_10002BA54(void (*a1)(_OWORD *), uint64_t a2)
{
  uint64_t v32 = a1;
  uint64_t v5 = sub_10001B38C((uint64_t *)&unk_100137260);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Item(0);
  uint64_t v8 = *(void *)(v28 - 8);
  uint64_t v9 = __chkstk_darwin(v28);
  uint64_t v27 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v26 = (uint64_t)&v23 - v11;
  uint64_t v12 = sub_1000E8A90();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = v2;
  sub_1000EA5E0();

  sub_10002D8C4((unint64_t *)&qword_1001394D0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  sub_1000EA740();
  uint64_t v23 = v13;
  if (v31)
  {
    uint64_t v24 = v8;
    id v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    id v18 = _swiftEmptyArrayStorage;
    uint64_t v25 = a2;
    while (1)
    {
      sub_100028BC8(&v30, v29);
      v32(v29);
      if (v3) {
        break;
      }
      sub_100020AC0((uint64_t)v29);
      if ((*v17)(v7, 1, v28) == 1)
      {
        sub_100028B6C((uint64_t)v7, (uint64_t *)&unk_100137260);
      }
      else
      {
        uint64_t v19 = v26;
        sub_10002D90C((uint64_t)v7, v26);
        sub_10002D90C(v19, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v18 = (void *)sub_1000A482C(0, v18[2] + 1, 1, (unint64_t)v18);
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1) {
          id v18 = (void *)sub_1000A482C(v20 > 1, v21 + 1, 1, (unint64_t)v18);
        }
        v18[2] = v21 + 1;
        sub_10002D90C(v27, (uint64_t)v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21);
      }
      sub_1000EA740();
      if (!v31) {
        goto LABEL_13;
      }
    }
    sub_100020AC0((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v18 = _swiftEmptyArrayStorage;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v12);
  }
  return v18;
}

uint64_t sub_10002BE10@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)&v26 - v14;
  id v16 = [a1 nameActionURL];
  if (!v16)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v19(v8, 1, 1, v9);
LABEL_5:
    sub_100028B6C((uint64_t)v8, (uint64_t *)&unk_1001370F0);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(a3, 1, 1, v9);
  }
  id v17 = v16;
  sub_1000E8B20();

  id v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v8, v13, v9);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v19(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_5;
  }
  v18(v15, v8, v9);
  unint64_t v21 = self;
  sub_1000E8AE0(v22);
  uint64_t v24 = v23;
  id v25 = [v21 engagementDescriptorWithTargetURL:v23];

  sub_100020A28(a2, a2[3]);
  sub_1000D0B14(v25, a3);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_10002C0C0()
{
  unint64_t v1 = (id *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  id v3 = [v2 nameColorLight];
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1000EA2B0();
    uint64_t v7 = v6;

    sub_100022374(0, (unint64_t *)&qword_100139070);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    v9.super.Class isa = UIColor.init(hex:)(v8).super.isa;
  }
  else if (*(void *)v0)
  {
    v9.super.Class isa = (Class)*(id *)v0;
  }
  else
  {
    v9.super.Class isa = (Class)[self labelColor];
  }
  Class isa = v9.super.isa;
  id v11 = [v2 nameColorDark];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1000EA2B0();
    char v15 = v14;

    sub_100022374(0, (unint64_t *)&qword_100139070);
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    v17.super.Class isa = UIColor.init(hex:)(v16).super.isa;
  }
  else if (*v1)
  {
    v17.super.Class isa = (Class)*v1;
  }
  else
  {
    v17.super.Class isa = (Class)[self labelColor];
  }
  Class v18 = v17.super.isa;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = isa;
  *(void *)(v19 + 24) = v18;
  id v20 = objc_allocWithZone((Class)UIColor);
  v26[4] = sub_10002E180;
  v26[5] = v19;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 1107296256;
  v26[2] = sub_100075C34;
  v26[3] = &unk_100125688;
  unint64_t v21 = _Block_copy(v26);
  uint64_t v22 = isa;
  uint64_t v23 = v18;
  [v20 initWithDynamicProvider:v21];
  _Block_release(v21);
  swift_release();
  uint64_t v24 = sub_1000E9C40();

  return v24;
}

id sub_10002C2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = type metadata accessor for Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(void *)(v3 + 16);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      unint64_t v13 = *(void *)(v12 + 16);
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      unint64_t v12 = sub_1000A4FD0(v12);
      unint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
LABEL_4:
        unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        uint64_t v9 = *(void *)(v9 + 72) * (v13 - 1);
        sub_10002D9D4(v12 + v22 + v9, type metadata accessor for Item);
        *(void *)(v12 + 16) = v13 - 1;
        *id v11 = a1;
        v11[1] = a2;
        swift_storeEnumTagMultiPayload();
        unint64_t v4 = *(void *)(v12 + 24);
        swift_bridgeObjectRetain();
        if (v13 <= v4 >> 1)
        {
LABEL_5:
          *(void *)(v12 + 16) = v13;
          sub_10002D90C((uint64_t)v11, v12 + v22 + v9);
          uint64_t v14 = *(void **)v3;
          unint64_t v22 = *(void *)(v3 + 8);
          uint64_t v15 = type metadata accessor for Section();
          sub_10002DA34(v3 + *(int *)(v15 + 32), a3 + *(int *)(v15 + 32), (uint64_t *)&unk_1001370F0);
          char v16 = *(unsigned char *)(v3 + 24);
          sub_10002DA34(v3 + *(int *)(v15 + 36), a3 + *(int *)(v15 + 36), (uint64_t *)&unk_10013A350);
          unint64_t v17 = v22;
          *(void *)a3 = v14;
          *(void *)(a3 + 8) = v17;
          *(void *)(a3 + 16) = v12;
          *(unsigned char *)(a3 + 24) = v16;
          id v18 = v14;
          uint64_t v19 = (void *)v22;
          return v19;
        }
LABEL_13:
        unint64_t v12 = sub_1000A482C(v4 > 1, v13, 1, v12);
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_13;
  }

  return (id)sub_10002D640(v3, a3);
}

unint64_t sub_10002C544(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F6974636553746ELL;
      break;
    case 2:
      unint64_t result = 0x736D657469;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0x69746341656D616ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10002C630()
{
  return sub_10002C544(*v0);
}

uint64_t sub_10002C638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002DE90(a1, a2);
  *a3 = result;
  return result;
}

void sub_10002C660(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10002C66C(uint64_t a1)
{
  unint64_t v2 = sub_10002D348();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002C6A8(uint64_t a1)
{
  unint64_t v2 = sub_10002D348();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10002C6E4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = sub_10001B38C((uint64_t *)&unk_10013A350);
  __chkstk_darwin(v39);
  uint64_t v40 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v41);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C(&qword_1001371B0);
  uint64_t v42 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Section();
  __chkstk_darwin(v9);
  id v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100020A28(a1, a1[3]);
  sub_10002D348();
  uint64_t v12 = v43;
  sub_1000EAC00();
  if (v12) {
    goto LABEL_3;
  }
  uint64_t v37 = v5;
  uint64_t v13 = v42;
  uint64_t v43 = v9;
  char v46 = 0;
  sub_100022164();
  sub_1000EAA20();
  uint64_t v14 = v6;
  unint64_t v36 = v8;
  unint64_t v15 = v45;
  if (v45 >> 60 == 15)
  {
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v18 = v44;
  sub_100022374(0, (unint64_t *)&unk_10013A600);
  sub_100022374(0, (unint64_t *)&qword_100139070);
  uint64_t v16 = sub_1000EA630();
  if (!v16)
  {
    sub_10002D39C();
    swift_allocError();
    *id v25 = 0;
    swift_willThrow();
    sub_10002D6A4(v18, v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v36, v14);
LABEL_3:
    sub_100020AC0((uint64_t)a1);
    return;
  }
  sub_10002D6A4(v18, v15);
LABEL_6:
  uint64_t v17 = (uint64_t)v11;
  *id v11 = v16;
  char v46 = 1;
  sub_1000EAA70();
  uint64_t v19 = v44;
  unint64_t v20 = v45;
  sub_100022374(0, (unint64_t *)&unk_10013A600);
  sub_100022374(0, (unint64_t *)&qword_1001371D0);
  uint64_t v21 = sub_1000EA630();
  unint64_t v22 = (void *)v21;
  uint64_t v35 = v19;
  if (v21)
  {
    unint64_t v34 = v20;
    *(void *)(v17 + 8) = v21;
    sub_10001B38C(&qword_1001371E0);
    char v46 = 2;
    sub_10002D3F0();
    id v23 = v22;
    uint64_t v24 = v36;
    sub_1000EAA70();
    id v33 = v23;
    *(void *)(v17 + 16) = v44;
    LOBYTE(v44) = 3;
    *(unsigned char *)(v17 + 24) = sub_1000EAA40() & 1;
    LOBYTE(v44) = 4;
    sub_10002D494();
    uint64_t v27 = (uint64_t)v37;
    sub_1000EAA70();
    uint64_t v28 = v14;
    uint64_t v29 = v43;
    sub_10002D5DC(v27, v17 + *(int *)(v43 + 32), (uint64_t *)&unk_1001370F0);
    LOBYTE(v44) = 5;
    sub_10002D538();
    uint64_t v30 = (uint64_t)v40;
    sub_1000EAA70();
    uint64_t v31 = v33;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v28);
    sub_1000221B8(v35, v34);

    sub_10002D5DC(v30, v17 + *(int *)(v29 + 36), (uint64_t *)&unk_10013A350);
    sub_10002D640(v17, v38);
    sub_100020AC0((uint64_t)a1);
    sub_10002D9D4(v17, (uint64_t (*)(void))type metadata accessor for Section);
  }
  else
  {
    sub_10002D39C();
    swift_allocError();
    unsigned char *v26 = 1;
    swift_willThrow();
    sub_1000221B8(v35, v20);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v36, v14);
    sub_100020AC0((uint64_t)a1);
  }
}

uint64_t sub_10002CE4C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001B38C((uint64_t *)&unk_100137220);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_10002D348();
  sub_1000EAC20();
  uint64_t v9 = *(void **)v3;
  if (*(void *)v3)
  {
    uint64_t v10 = self;
    id v33 = 0;
    id v11 = v9;
    id v12 = [v10 archivedDataWithRootObject:v11 requiringSecureCoding:1 error:&v33];
    id v13 = v33;
    if (!v12)
    {
      uint64_t v19 = v13;
      sub_1000E8A40();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v31 = v3;
    uint64_t v14 = (void *)sub_1000E8B90();
    unint64_t v16 = v15;

    id v33 = v14;
    unint64_t v34 = v16;
    char v32 = 0;
    sub_1000222B8();
    sub_1000EAAE0();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      uint64_t v17 = (uint64_t)v14;
      unint64_t v18 = v16;
      return sub_1000221B8(v17, v18);
    }

    sub_1000221B8((uint64_t)v14, v16);
    uint64_t v3 = v31;
  }
  unint64_t v20 = self;
  uint64_t v21 = *(void *)(v3 + 8);
  id v33 = 0;
  id v22 = [v20 archivedDataWithRootObject:v21 requiringSecureCoding:1 error:&v33];
  id v23 = v33;
  if (v22)
  {
    uint64_t v31 = v3;
    uint64_t v24 = (void *)sub_1000E8B90();
    unint64_t v26 = v25;

    id v33 = v24;
    unint64_t v34 = v26;
    char v32 = 1;
    sub_1000222B8();
    sub_1000EAAE0();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v17 = (uint64_t)v24;
      unint64_t v18 = v26;
    }
    else
    {
      id v33 = v24;
      unint64_t v34 = v26;
      char v32 = 1;
      sub_1000EAAE0();
      id v33 = *(id *)(v31 + 16);
      char v32 = 2;
      swift_bridgeObjectRetain();
      sub_10001B38C(&qword_1001371E0);
      sub_10002D6B8();
      sub_1000EAAE0();
      swift_bridgeObjectRelease();
      LOBYTE(v33) = 3;
      sub_1000EAAB0();
      unint64_t v30 = v26;
      v29[1] = type metadata accessor for Section();
      LOBYTE(v33) = 4;
      sub_10001B38C((uint64_t *)&unk_1001370F0);
      sub_10002D75C();
      sub_1000EAAE0();
      LOBYTE(v33) = 5;
      sub_10001B38C((uint64_t *)&unk_10013A350);
      sub_10002D800();
      sub_1000EAAE0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v17 = (uint64_t)v24;
      unint64_t v18 = v30;
    }
    return sub_1000221B8(v17, v18);
  }
  uint64_t v28 = v23;
  sub_1000E8A40();

  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10002D318(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10002D330(void *a1)
{
  return sub_10002CE4C(a1);
}

unint64_t sub_10002D348()
{
  unint64_t result = qword_1001371B8;
  if (!qword_1001371B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001371B8);
  }
  return result;
}

unint64_t sub_10002D39C()
{
  unint64_t result = qword_1001371D8;
  if (!qword_1001371D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001371D8);
  }
  return result;
}

unint64_t sub_10002D3F0()
{
  unint64_t result = qword_1001371E8;
  if (!qword_1001371E8)
  {
    sub_10001B3D0(&qword_1001371E0);
    sub_10002D8C4((unint64_t *)&unk_1001371F0, (void (*)(uint64_t))type metadata accessor for Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001371E8);
  }
  return result;
}

unint64_t sub_10002D494()
{
  unint64_t result = qword_100139E10;
  if (!qword_100139E10)
  {
    sub_10001B3D0((uint64_t *)&unk_1001370F0);
    sub_10002D8C4(&qword_100137200, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139E10);
  }
  return result;
}

unint64_t sub_10002D538()
{
  unint64_t result = qword_100137208;
  if (!qword_100137208)
  {
    sub_10001B3D0((uint64_t *)&unk_10013A350);
    sub_10002D8C4((unint64_t *)&unk_100137210, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137208);
  }
  return result;
}

uint64_t sub_10002D5DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001B38C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002D640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Section();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D6A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000221B8(a1, a2);
  }
  return a1;
}

unint64_t sub_10002D6B8()
{
  unint64_t result = qword_100137230;
  if (!qword_100137230)
  {
    sub_10001B3D0(&qword_1001371E0);
    sub_10002D8C4(&qword_100137238, (void (*)(uint64_t))type metadata accessor for Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137230);
  }
  return result;
}

unint64_t sub_10002D75C()
{
  unint64_t result = qword_100137240;
  if (!qword_100137240)
  {
    sub_10001B3D0((uint64_t *)&unk_1001370F0);
    sub_10002D8C4(&qword_100139E70, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137240);
  }
  return result;
}

unint64_t sub_10002D800()
{
  unint64_t result = qword_100137250;
  if (!qword_100137250)
  {
    sub_10001B3D0((uint64_t *)&unk_10013A350);
    sub_10002D8C4(&qword_100137258, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137250);
  }
  return result;
}

uint64_t sub_10002D8A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10002B91C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10002D8C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002D90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D970(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10002D9D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002DA34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001B38C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for Section.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002DB64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Section.Errors()
{
  return &type metadata for Section.Errors;
}

uint64_t getEnumTagSinglePayload for Section.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Section.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002DCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Section.CodingKeys()
{
  return &type metadata for Section.CodingKeys;
}

unint64_t sub_10002DD34()
{
  unint64_t result = qword_100137278;
  if (!qword_100137278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137278);
  }
  return result;
}

unint64_t sub_10002DD8C()
{
  unint64_t result = qword_100137280;
  if (!qword_100137280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137280);
  }
  return result;
}

unint64_t sub_10002DDE4()
{
  unint64_t result = qword_100137288;
  if (!qword_100137288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137288);
  }
  return result;
}

unint64_t sub_10002DE3C()
{
  unint64_t result = qword_100137290;
  if (!qword_100137290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137290);
  }
  return result;
}

uint64_t sub_10002DE90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001000FDB80 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6974636553746ELL && a2 == 0xED0000617461446ELL || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001000FDBA0 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69746341656D616ELL && a2 == 0xED00006C72556E6FLL || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000FCF70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10002E140()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10002E180(void *a1)
{
  return sub_1000D1F74(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10002E188(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002E198()
{
  return swift_release();
}

uint64_t sub_10002E1A0(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCShowStoriesOnlyFromFavoritesSharedPreferenceKey, 0, &qword_10014B968);
}

uint64_t sub_10002E1B8(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCAutomaticDownloadsEnabledKey, 1, &qword_10014B970);
}

uint64_t sub_10002E1D0(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCAutomaticSavedStoriesDownloadsEnabledKey, 1, &qword_10014B978);
}

uint64_t sub_10002E1E8(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCAutomaticFeedStoriesDownloadsEnabledKey, 1, &qword_10014B980);
}

uint64_t sub_10002E200(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCAutomaticIssueDownloadsEnabledKey, 1, &qword_10014B988);
}

uint64_t sub_10002E218(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCPuzzlesSettingsGameCenterEnabledKey, 1, &qword_10014B990);
}

uint64_t sub_10002E230(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCAutomaticPuzzlesDownloadsEnabledKey, 1, &qword_10014B998);
}

uint64_t sub_10002E248(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCAutomaticAudioDownloadsEnabledKey, 1, &qword_10014B9A0);
}

uint64_t sub_10002E260(uint64_t a1)
{
  return sub_10002E278(a1, (uint64_t)&FCOptimizedStorageEnabledKey, 0, &qword_10014B9A8);
}

uint64_t sub_10002E278(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v6 = sub_1000E8D50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000E8D60();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (uint64_t *)&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000EA2B0();
  *id v13 = sub_1000EA2B0();
  v13[1] = v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for Domain.domain(_:), v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, enum case for Access.public(_:), v6);
  v16[15] = a3;
  sub_10001B38C((uint64_t *)&unk_1001372A0);
  swift_allocObject();
  uint64_t result = sub_1000E8D70();
  *a4 = result;
  return result;
}

id sub_10002E464()
{
  uint64_t v1 = OBJC_IVAR____TtC10NewsToday216WidgetAssetStore____lazy_storage___pruneThrottler;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10NewsToday216WidgetAssetStore____lazy_storage___pruneThrottler);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC10NewsToday216WidgetAssetStore____lazy_storage___pruneThrottler);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)FCOperationThrottler) initWithDelegate:v0];
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *sub_10002E4DC()
{
  uint64_t v0 = sub_1000E8B60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultManager];
  sub_1000E8AE0(v5);
  uint64_t v7 = v6;
  uint64_t v37 = 0;
  id v8 = [v4 contentsOfDirectoryAtURL:v6 includingPropertiesForKeys:0 options:4 error:&v37];

  id v9 = v37;
  if (!v8)
  {
    unint64_t v25 = v37;
    uint64_t v26 = sub_1000E8A40();

    swift_willThrow();
    id v27 = PrefetchLog();
    sub_1000EA600();
    sub_10001B38C(&qword_100137370);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1000F1610;
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    uint64_t v36 = v26;
    sub_10001B38C(&qword_100137378);
    sub_1000EA910();
    uint64_t v29 = v37;
    unint64_t v30 = v38;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_1000263E0();
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v30;
    sub_1000E9220();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = sub_1000EA470();
  id v11 = v9;

  int64_t v12 = *(void *)(v10 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_100030538(0, v12, 0);
  uint64_t v13 = v1 + 16;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v15 = *(unsigned __int8 *)(v1 + 80);
  v32[1] = v10;
  uint64_t v16 = v10 + ((v15 + 32) & ~v15);
  uint64_t v33 = *(void *)(v13 + 56);
  unint64_t v34 = v14;
  uint64_t v35 = v13;
  uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
  do
  {
    v34(v3, v16, v0);
    uint64_t v18 = sub_1000E8AD0();
    uint64_t v20 = v19;
    (*v17)(v3, v0);
    uint64_t v21 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100030538(0, v21[2] + 1, 1);
      uint64_t v21 = v37;
    }
    unint64_t v23 = v21[2];
    unint64_t v22 = v21[3];
    if (v23 >= v22 >> 1)
    {
      sub_100030538(v22 > 1, v23 + 1, 1);
      uint64_t v21 = v37;
    }
    v21[2] = v23 + 1;
    uint64_t v24 = &v21[2 * v23];
    _OWORD v24[4] = v18;
    v24[5] = v20;
    v16 += v33;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10002E874@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v6 = sub_1000E8B60();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v32 = (id)sub_10002EF5C();
  uint64_t v33 = v9;
  swift_bridgeObjectRetain();
  v34._countAndFlagsBits = 45;
  v34._object = (void *)0xE100000000000000;
  sub_1000EA370(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v35._countAndFlagsBits = a1;
  v35._object = a2;
  sub_1000EA370(v35);
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t)v32;
  uint64_t v10 = v33;
  uint64_t v29 = v3;
  sub_1000E8AF0();
  id v12 = PrefetchLog();
  sub_1000EA5F0();
  sub_10001B38C(&qword_100137370);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000F1610;
  sub_100030C74((unint64_t *)&unk_100137390, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v14 = sub_1000EAB10();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000263E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  sub_1000E9220();

  swift_bridgeObjectRelease();
  id v17 = [self defaultManager];
  sub_1000E8AE0(v18);
  uint64_t v20 = v19;
  id v32 = 0;
  unsigned __int8 v21 = [v17 createDirectoryAtURL:v19 withIntermediateDirectories:1 attributes:0 error:&v32];

  id v23 = v32;
  if (v21)
  {
    id v32 = *(id *)(v29 + OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_lock);
    __chkstk_darwin(v22);
    *(&v28 - 4) = v24;
    *(&v28 - 3) = v11;
    *(&v28 - 2) = v10;
    *(&v28 - 1) = (uint64_t)v8;
    sub_1000E8E50();
    id v25 = v23;
    swift_retain();
    sub_1000E9010();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    id v27 = v32;
    swift_bridgeObjectRelease();
    sub_1000E8A40();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v8, v6);
}

uint64_t sub_10002EC38@<X0>(Swift::Int a1@<X1>, Swift::Int a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100042528(&v10, a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000E8B60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a4, a3, v8);
}

uint64_t sub_10002ED04@<X0>(uint64_t a1@<X8>)
{
  v9[1] = *(void *)&v1[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_lock];
  sub_1000E8E50();
  swift_retain();
  sub_10001B38C((uint64_t *)&unk_1001373B0);
  sub_1000E9010();
  swift_release();
  uint64_t v3 = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  char v5 = sub_1000716BC(v4);
  swift_bridgeObjectRelease();
  v9[0] = (uint64_t)v5;
  sub_100033818(v9, v3);
  swift_bridgeObjectRelease();

  if (*(void *)(v9[0] + 16))
  {
    swift_bridgeObjectRetain();
    swift_release();
    sub_1000E8AF0();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1000E8B60();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    swift_release();
    uint64_t v8 = sub_1000E8B60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t sub_10002EED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_keysOfInterest);
  swift_beginAccess();
  uint64_t v6 = *v5;
  v8[2] = a2;
  swift_bridgeObjectRetain();
  uint64_t result = sub_100031074((uint64_t)sub_100033B04, (uint64_t)v8, v6);
  *a3 = result;
  return result;
}

uint64_t sub_10002EF5C()
{
  uint64_t v1 = v0;
  sub_10001B38C(&qword_100137388);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000F2570;
  uint64_t v3 = (void *)((char *)v0 + *(int *)(type metadata accessor for NewsWidgetInfo() + 24));
  uint64_t v4 = v3[1];
  *(void *)(v2 + 32) = *v3;
  *(void *)(v2 + 40) = v4;
  if (*v1)
  {
    uint64_t v5 = v1[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    uint64_t v8 = v7(ObjectType, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = 0xE300000000000000;
    uint64_t v8 = 7104878;
  }
  *(void *)(v2 + 48) = v8;
  *(void *)(v2 + 56) = v9;
  sub_1000E9F60();
  sub_100030C74((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
  *(void *)(v2 + 64) = sub_1000EAB10();
  *(void *)(v2 + 72) = v10;
  sub_10001B38C(&qword_1001373A0);
  sub_100030CBC();
  uint64_t v11 = sub_1000EA200();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10002F0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v5 = sub_10001B38C((uint64_t *)&unk_10013A350);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E8A20();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E8B60();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8AF0();
  sub_10001B38C(&qword_1001373C0);
  uint64_t inited = swift_initStackObject();
  long long v30 = xmmword_1000F1610;
  *(_OWORD *)(inited + 16) = xmmword_1000F1610;
  *(void *)(inited + 32) = NSURLCreationDateKey;
  uint64_t v16 = NSURLCreationDateKey;
  sub_1000442C8(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1000E8AC0();
  uint64_t v29 = a2;
  uint64_t v17 = a1;
  swift_bridgeObjectRelease();
  sub_1000E8A10();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = sub_1000E8C50();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18);
  uint64_t v22 = v32;
  uint64_t v21 = v33;
  uint64_t v23 = v31;
  if (v20 == 1)
  {
    sub_100032340((uint64_t)v7);
    id v24 = PrefetchLog();
    sub_1000EA600();
    sub_10001B38C(&qword_100137370);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v30;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = sub_1000263E0();
    uint64_t v26 = v29;
    *(void *)(v25 + 32) = v17;
    *(void *)(v25 + 40) = v26;
    swift_bridgeObjectRetain();
    sub_1000E9220();

    swift_bridgeObjectRelease();
    _s10NewsToday216TelemetryManagerC13lastFlushDate33_F9D4AB4E0910E2715C8CD19E0D9BCB9510Foundation0G0Vvpfi_0();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v21, v7, v18);
  }
}

id WidgetPersonalizationConfigurationManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_10002F6C0()
{
  return type metadata accessor for WidgetAssetStore();
}

uint64_t type metadata accessor for WidgetAssetStore()
{
  uint64_t result = qword_100137300;
  if (!qword_100137300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002F714()
{
  uint64_t result = sub_1000E8B60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10002F7D4()
{
  id v0 = PrefetchLog();
  sub_1000EA600();
  sub_10001B38C(&qword_100137370);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000F1610;
  type metadata accessor for NewsWidgetInfo();
  uint64_t v2 = sub_1000EA480();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_1000263E0();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_1000E9220();

  swift_bridgeObjectRelease();
  sub_1000E8E50();
  swift_retain();
  sub_1000E9010();
  return swift_release();
}

uint64_t sub_10002F930(uint64_t a1, char *a2)
{
  uint64_t v4 = 0;
  uint64_t v83 = sub_1000E8B60();
  uint64_t v74 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v84 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NewsWidgetInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  unint64_t v79 = (unint64_t)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &_swiftEmptySetSingleton;
  uint64_t v88 = &_swiftEmptySetSingleton;
  uint64_t v78 = *(char **)(a1 + 16);
  if (!v78) {
    goto LABEL_21;
  }
  uint64_t v10 = (uint64_t *)&a2[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_keysOfInterest];
  *(void *)&long long v76 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v73[1] = a1;
  swift_bridgeObjectRetain();
  id v77 = v10;
  swift_beginAccess();
  uint64_t v11 = 0;
  uint64_t v75 = *(char **)(v7 + 72);
  do
  {
    uint64_t v12 = *v77;
    uint64_t v13 = v79;
    uint64_t v14 = sub_1000338B0(v76 + (void)v75 * (void)v11, v79);
    __chkstk_darwin(v14);
    v73[-2] = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100031074((uint64_t)sub_100033914, (uint64_t)&v73[-4], v12);
    sub_100033934(v13);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v80 = 0;
      id v81 = v11;
      sub_10001B38C(&qword_100137388);
      uint64_t v17 = (void *)swift_allocObject();
      int64_t v18 = j__malloc_size(v17);
      uint64_t v19 = v18 - 32;
      if (v18 < 32) {
        uint64_t v19 = v18 - 17;
      }
      v17[2] = v16;
      v17[3] = 2 * (v19 >> 4);
      *(void *)&long long v82 = sub_1000729CC((uint64_t)&v89, v17 + 4, v16, v15);
      swift_retain_n();
      int v20 = a2;
      sub_100033990();
      if ((void)v82 != v16) {
        goto LABEL_50;
      }
      swift_release();
      uint64_t v4 = v80;
      uint64_t v11 = v81;
    }
    else
    {
      uint64_t v21 = a2;
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    unint64_t v89 = v17;
    uint64_t v22 = a2;
    sub_100033818((uint64_t *)&v89, v22);
    if (v4)
    {

      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    swift_release();

    uint64_t v23 = v89;
    unsigned int v86 = v89;
    uint64_t v24 = v89[2];
    uint64_t v25 = 2;
    if (v24 > 2) {
      uint64_t v25 = v89[2];
    }
    unint64_t v26 = v25 - 2;
    if (v25 != 2)
    {
      if (v24 < v26) {
        goto LABEL_51;
      }
      sub_100033998(0, v26);
      uint64_t v23 = v86;
      uint64_t v24 = v86[2];
    }
    if (v24)
    {
      id v27 = v23 + 5;
      do
      {
        Swift::Int v28 = *(v27 - 1);
        Swift::Int v29 = *v27;
        swift_bridgeObjectRetain();
        sub_100042528((Swift::Int *)&v89, v28, v29);
        swift_bridgeObjectRelease();
        v27 += 2;
        --v24;
      }
      while (v24);
    }
    uint64_t v11 = (unint64_t *)((char *)v11 + 1);
    swift_bridgeObjectRelease();
  }
  while (v11 != (unint64_t *)v78);
  swift_bridgeObjectRelease();
  uint64_t v9 = v88;
LABEL_21:
  id v30 = PrefetchLog();
  sub_1000EA600();
  uint64_t v80 = sub_10001B38C(&qword_100137370);
  uint64_t v31 = swift_allocObject();
  long long v82 = xmmword_1000F1610;
  *(_OWORD *)(v31 + 16) = xmmword_1000F1610;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1000EA5B0();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  *(void *)(v31 + 56) = &type metadata for String;
  unint64_t v79 = sub_1000263E0();
  *(void *)(v31 + 64) = v79;
  *(void *)(v31 + 32) = v32;
  *(void *)(v31 + 40) = v34;
  sub_1000E9220();

  swift_bridgeObjectRelease();
  Swift::String v35 = &a2[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_keysOfInterest];
  swift_beginAccess();
  uint64_t v36 = *(void **)v35;
  unint64_t v37 = v9[2];
  unint64_t v38 = *(void *)(*(void *)v35 + 16);
  uint64_t v75 = v35;
  if (v37 > v38 >> 3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_100031844((uint64_t)v9, (uint64_t)v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v86 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10003169C((uint64_t)v9);
    swift_bridgeObjectRelease();
    uint64_t v39 = v86;
  }
  uint64_t v40 = v84;
  id v41 = PrefetchLog();
  sub_1000EA600();
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v82;
  uint64_t v43 = sub_1000EA5B0();
  unint64_t v44 = v79;
  *(void *)(v42 + 56) = &type metadata for String;
  *(void *)(v42 + 64) = v44;
  *(void *)(v42 + 32) = v43;
  *(void *)(v42 + 40) = v45;
  sub_1000E9220();

  swift_bridgeObjectRelease();
  uint64_t v46 = 0;
  unint64_t v47 = v39[7];
  id v81 = v39 + 7;
  uint64_t v48 = 1 << *((unsigned char *)v39 + 32);
  uint64_t v49 = -1;
  if (v48 < 64) {
    uint64_t v49 = ~(-1 << v48);
  }
  uint64_t i = v49 & v47;
  *(void *)&long long v82 = (unint64_t)(v48 + 63) >> 6;
  uint64_t v51 = (uint64_t *)(v74 + 8);
  long long v76 = xmmword_1000F1E20;
  uint64_t v78 = &a2[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_directoryUrl];
  id v77 = (uint64_t *)(v74 + 8);
  if ((v49 & v47) != 0) {
    goto LABEL_29;
  }
LABEL_30:
  if (__OFADD__(v46++, 1))
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v46 < (uint64_t)v82)
  {
    unint64_t v63 = v81[v46];
    if (v63)
    {
LABEL_40:
      for (uint64_t i = (v63 - 1) & v63; ; i &= i - 1)
      {
        swift_bridgeObjectRetain();
        sub_1000E8AF0();
        swift_bridgeObjectRelease();
        id v65 = [self defaultManager];
        sub_1000E8AE0(v66);
        id v68 = v67;
        unsigned int v86 = 0;
        unsigned int v69 = [v65 removeItemAtURL:v67 error:&v86];

        if (v69)
        {
          long long v70 = (void (*)(char *, uint64_t))*v51;
          os_log_type_t v71 = v86;
          v70(v40, v83);
          if (!i) {
            goto LABEL_30;
          }
        }
        else
        {
          uint64_t v52 = v86;
          uint64_t v53 = sub_1000E8A40();

          swift_willThrow();
          id v54 = PrefetchLog();
          sub_1000EA600();
          uint64_t v55 = swift_allocObject();
          *(_OWORD *)(v55 + 16) = v76;
          sub_100030C74((unint64_t *)&unk_100137390, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v56 = v83;
          uint64_t v57 = sub_1000EAB10();
          unint64_t v58 = v79;
          *(void *)(v55 + 56) = &type metadata for String;
          *(void *)(v55 + 64) = v58;
          *(void *)(v55 + 32) = v57;
          *(void *)(v55 + 40) = v59;
          unsigned int v86 = 0;
          unint64_t v87 = 0xE000000000000000;
          uint64_t v85 = v53;
          sub_10001B38C(&qword_100137378);
          sub_1000EA910();
          uint64_t v60 = v86;
          unint64_t v61 = v87;
          *(void *)(v55 + 96) = &type metadata for String;
          *(void *)(v55 + 104) = v58;
          *(void *)(v55 + 72) = v60;
          *(void *)(v55 + 80) = v61;
          sub_1000E9220();

          uint64_t v40 = v84;
          swift_bridgeObjectRelease();
          uint64_t v51 = v77;
          swift_errorRelease();
          ((void (*)(char *, uint64_t))*v51)(v40, v56);
          if (!i) {
            goto LABEL_30;
          }
        }
LABEL_29:
        ;
      }
    }
    uint64_t v64 = v46 + 1;
    if (v46 + 1 < (uint64_t)v82)
    {
      unint64_t v63 = v81[v64];
      if (v63) {
        goto LABEL_39;
      }
      uint64_t v64 = v46 + 2;
      if (v46 + 2 < (uint64_t)v82)
      {
        unint64_t v63 = v81[v64];
        if (v63) {
          goto LABEL_39;
        }
        uint64_t v64 = v46 + 3;
        if (v46 + 3 < (uint64_t)v82)
        {
          unint64_t v63 = v81[v64];
          if (v63)
          {
LABEL_39:
            uint64_t v46 = v64;
            goto LABEL_40;
          }
          while (1)
          {
            uint64_t v46 = v64 + 1;
            if (__OFADD__(v64, 1)) {
              break;
            }
            if (v46 >= (uint64_t)v82) {
              goto LABEL_48;
            }
            unint64_t v63 = v81[v46];
            ++v64;
            if (v63) {
              goto LABEL_40;
            }
          }
LABEL_52:
          __break(1u);
        }
      }
    }
  }
LABEL_48:
  swift_release();
  *(void *)uint64_t v75 = v88;
  return swift_bridgeObjectRelease();
}

BOOL sub_1000302F0()
{
  v2._countAndFlagsBits = sub_10002EF5C();
  BOOL v0 = sub_1000EA3E0(v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100030348()
{
  id v0 = PrefetchLog();
  sub_1000EA5F0();
  sub_10001B38C(&qword_100137370);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000F1610;
  sub_10001B38C(&qword_100137378);
  sub_1000EA910();
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_1000263E0();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1000E9220();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000304E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000308E8(a1, a2, a3, *v3, (uint64_t *)&unk_100137410);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_100030510(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000308E8(a1, a2, a3, *v3, &qword_100137408);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_100030538(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000305C8(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_100030558(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000308E8(a1, a2, a3, *v3, &qword_100137400);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_100030580(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000308E8(a1, a2, a3, *v3, &qword_1001373F8);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1000305A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100030A34(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000305C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001B38C(&qword_100137388);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_100030738@<X0>(uint64_t a1@<X8>)
{
  return sub_10002EC38(v1[3], v1[4], v1[5], a1);
}

uint64_t sub_100030744(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001B38C(&qword_1001373D8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10001B38C(&qword_1001373E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_1000308E8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_10001B38C(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_100030A34(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10001B38C(&qword_1001373F0);
  uint64_t v10 = *(void *)(type metadata accessor for NewsWidgetInfo() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for NewsWidgetInfo() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_100030C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100030CBC()
{
  unint64_t result = qword_1001373A8;
  if (!qword_1001373A8)
  {
    sub_10001B3D0(&qword_1001373A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001373A8);
  }
  return result;
}

uint64_t sub_100030D18@<X0>(uint64_t *a1@<X8>)
{
  return sub_10002EED0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

char *sub_100030D20(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001B38C(&qword_1001373C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100030E1C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    unint64_t result = (char *)sub_1000EA9C0();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_100030ED8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    unint64_t result = (char *)sub_1000EA9C0();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_100030FA4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    unint64_t result = (char *)sub_1000EA9C0();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_100031060(uint64_t a1)
{
  return sub_100030D20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100031074(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(void *))isStackAllocationSafe;
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1000311F8((uint64_t)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_1000311F8((uint64_t)v10, v7, a3, v5);
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

uint64_t sub_1000311F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  uint64_t v20 = (unint64_t *)result;
  int64_t v7 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v7 << 6);
LABEL_17:
    uint64_t v16 = (void *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    swift_bridgeObjectRetain();
    char v18 = a4(v23);
    unint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return result;
    }
    if (v18)
    {
      *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = __OFADD__(v21++, 1);
      if (v13) {
        goto LABEL_30;
      }
    }
  }
  BOOL v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v15 = v7 + 1;
  if (v7 + 1 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v7 + 2;
  if (v7 + 2 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    return sub_100031404(v20, a2, v21, a3);
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    int64_t v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v24) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100031404(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10001B38C(&qword_1001373D0);
  uint64_t result = sub_1000EA830();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1000EABB0();
    swift_bridgeObjectRetain();
    sub_1000EA330();
    uint64_t result = sub_1000EABE0();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    Swift::Int v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *Swift::Int v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10003169C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100031CB4(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

unint64_t *sub_100031844(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_100033990();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1000EABB0();
      swift_bridgeObjectRetain();
      sub_1000EA330();
      Swift::Int v19 = sub_1000EABE0();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    unint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1000EAB20() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        BOOL v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1000EAB20() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_100031E44((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_100033990();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_100031E44((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_100033990();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_100031CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1000EABB0();
  swift_bridgeObjectRetain();
  sub_1000EA330();
  Swift::Int v6 = sub_1000EABE0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1000EAB20() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1000EAB20() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000432C4();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10003213C(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t *sub_100031E44(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_100031404(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1000EABB0();
        swift_bridgeObjectRetain();
        sub_1000EA330();
        Swift::Int v22 = sub_1000EABE0();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        Swift::Int v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1000EAB20() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1000EAB20() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t sub_10003213C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1000EA7D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1000EABB0();
        swift_bridgeObjectRetain();
        sub_1000EA330();
        Swift::Int v10 = sub_1000EABE0();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v2);
          int64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *int64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100032304(uint64_t a1)
{
  return sub_1000305C8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100032318(void *a1)
{
  return sub_100030744(0, a1[2], 0, a1);
}

uint64_t sub_10003232C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100032340(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C((uint64_t *)&unk_10013A350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000323A0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000323D8()
{
  return sub_10004AD40(*(void *)(v0 + 16));
}

void sub_1000323E0(uint64_t a1, uint64_t a2)
{
  id v5 = PrefetchLog();
  sub_1000EA5F0();
  sub_1000E9220();

  sub_10001B38C(&qword_1001373E8);
  sub_1000E90C0();
  *(void *)(swift_allocObject() + 16) = v2;
  id v6 = v2;
  uint64_t v7 = (void *)sub_1000E9030();
  sub_1000E9050();
  swift_release();
  swift_release();

  uint64_t v8 = (void *)sub_1000E9030();
  sub_1000E9060();
  swift_release();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_retain();
  Swift::Int v10 = (void *)sub_1000E9030();
  sub_1000E9080();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_100032598()
{
  sub_100020A28((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_infoService), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_infoService + 24));
  sub_1000EA050();
  return sub_1000C9B54();
}

uint64_t sub_100032610()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100032648()
{
  return sub_10002F7D4();
}

uint64_t sub_100032664()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003269C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000326C4()
{
  return sub_10002F930(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1000326CC(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, void *a5)
{
  id v51 = a5;
  uint64_t v54 = sub_1000E8C50();
  uint64_t v9 = *(void *)(v54 - 8);
  uint64_t v10 = __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v52 = (uint64_t)&v44 - v12;
  uint64_t v13 = (char *)a2 - (char *)a1;
  uint64_t v14 = (char *)a2 - (char *)a1 + 15;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v14 = (char *)a2 - (char *)a1;
  }
  uint64_t v15 = v14 >> 4;
  uint64_t v50 = a3;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 16;
  unint64_t v58 = a1;
  uint64_t v57 = a4;
  if (v14 >> 4 >= v16 / 16)
  {
    if (v16 < -15) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[2 * v17] <= a4) {
      memmove(a4, a2, 16 * v17);
    }
    BOOL v29 = &a4[2 * v17];
    uint64_t v56 = v29;
    unint64_t v58 = a2;
    if (v16 < 16 || a1 >= a2) {
      goto LABEL_42;
    }
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v46 = a4;
    unint64_t v30 = v50 - 2;
    uint64_t v31 = a2;
    uint64_t v55 = a1;
    uint64_t v32 = v52;
    while (1)
    {
      uint64_t v50 = a2;
      uint64_t v48 = v29;
      uint64_t v49 = v30 + 2;
      uint64_t v34 = *(v29 - 2);
      uint64_t v33 = *(v29 - 1);
      v29 -= 2;
      uint64_t v35 = *(v31 - 2);
      uint64_t v36 = *(v31 - 1);
      v31 -= 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10002F0E4(v34, v33, v32);
      uint64_t v37 = v53;
      sub_10002F0E4(v35, v36, v53);
      int v47 = sub_1000E8BE0();
      uint64_t v38 = *v45;
      uint64_t v39 = v37;
      uint64_t v40 = v54;
      (*v45)(v39, v54);
      v38(v32, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v47)
      {
        BOOL v29 = v48;
        if (v49 != v50 || v30 >= v50) {
          *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
        }
        unint64_t v58 = v31;
      }
      else
      {
        uint64_t v56 = v29;
        if (v49 >= v48 && v30 < v48)
        {
          unint64_t v41 = (unint64_t)v46;
          unint64_t v42 = v55;
          uint64_t v31 = v50;
          if (v49 != v48) {
            *(_OWORD *)unint64_t v30 = *(_OWORD *)v29;
          }
          goto LABEL_40;
        }
        *(_OWORD *)unint64_t v30 = *(_OWORD *)v29;
        uint64_t v31 = v50;
      }
      unint64_t v41 = (unint64_t)v46;
      unint64_t v42 = v55;
LABEL_40:
      if ((unint64_t)v29 > v41)
      {
        v30 -= 2;
        a2 = v31;
        if (v31 > v42) {
          continue;
        }
      }
      goto LABEL_42;
    }
  }
  if (v13 >= -15)
  {
    if (a4 != a1 || &a1[2 * v15] <= a4) {
      memmove(a4, a1, 16 * v15);
    }
    uint64_t v49 = &a4[2 * v15];
    uint64_t v56 = v49;
    if (v13 >= 16 && a2 < v50)
    {
      uint64_t v48 = (uint64_t *)(v9 + 8);
      do
      {
        uint64_t v55 = a1;
        uint64_t v19 = *a2;
        uint64_t v18 = a2[1];
        uint64_t v21 = *a4;
        uint64_t v20 = a4[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = v52;
        sub_10002F0E4(v19, v18, v52);
        uint64_t v23 = v53;
        sub_10002F0E4(v21, v20, v53);
        LOBYTE(v21) = sub_1000E8BE0();
        unint64_t v24 = (void (*)(uint64_t, uint64_t))*v48;
        uint64_t v25 = v23;
        uint64_t v26 = v54;
        ((void (*)(uint64_t, uint64_t))*v48)(v25, v54);
        v24(v22, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21)
        {
          uint64_t v27 = a2 + 2;
          Swift::Int v28 = v55;
          if (v55 < a2 || v55 >= v27 || v55 != a2) {
            *(_OWORD *)uint64_t v55 = *(_OWORD *)a2;
          }
        }
        else
        {
          Swift::Int v28 = v55;
          if (v55 != a4) {
            *(_OWORD *)uint64_t v55 = *(_OWORD *)a4;
          }
          a4 += 2;
          uint64_t v57 = a4;
          uint64_t v27 = a2;
        }
        a1 = v28 + 2;
        unint64_t v58 = a1;
        if (a4 >= v49) {
          break;
        }
        a2 = v27;
      }
      while (v27 < v50);
    }
LABEL_42:
    sub_100030E1C((void **)&v58, (const void **)&v57, &v56);
    return 1;
  }
LABEL_43:

  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_100032B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v29 = a1;
  uint64_t v35 = sub_1000E8C50();
  uint64_t v8 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v33 = (char *)&v27 - v12;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *a4;
    uint64_t v31 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    uint64_t v36 = v13;
    uint64_t v14 = (uint64_t *)(v13 + 16 * a3);
    uint64_t v15 = (uint64_t)v33;
LABEL_5:
    uint64_t v16 = (uint64_t *)(v36 + 16 * a3);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v29;
    unint64_t v30 = v14;
    uint64_t v37 = a3;
    while (1)
    {
      uint64_t v21 = *(v14 - 2);
      uint64_t v20 = *(v14 - 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10002F0E4(v17, v18, v15);
      uint64_t v22 = v34;
      sub_10002F0E4(v21, v20, v34);
      int v38 = sub_1000E8BE0();
      uint64_t v23 = *v31;
      uint64_t v24 = v22;
      uint64_t v25 = v35;
      (*v31)(v24, v35);
      v23(v15, v25);
      swift_bridgeObjectRelease();
      uint64_t v26 = v37;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v38 & 1) == 0)
      {
LABEL_4:
        a3 = v26 + 1;
        uint64_t v14 = v30 + 2;
        if (a3 == v28) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      uint64_t v17 = *v14;
      uint64_t v18 = v14[1];
      *(_OWORD *)uint64_t v14 = *((_OWORD *)v14 - 1);
      *(v14 - 1) = v18;
      *(v14 - 2) = v17;
      v14 -= 2;
      if (v26 == ++v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_100032DA0(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v150 = sub_1000E8C50();
  uint64_t v6 = *(void *)(v150 - 8);
  uint64_t v7 = __chkstk_darwin(v150);
  uint64_t v149 = (uint64_t)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v148 = (uint64_t)&v136 - v9;
  Swift::Int v10 = a1[1];
  uint64_t v11 = a2;
  Swift::Int v12 = sub_1000EAB00(v10);
  if (v12 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        uint64_t v16 = v11;
        sub_100032B78(0, v10, 1, a1, (uint64_t)v16);
      }
      else
      {
      }
      goto LABEL_114;
    }
    goto LABEL_138;
  }
  if (v10 >= 0) {
    uint64_t v13 = v10;
  }
  else {
    uint64_t v13 = v10 + 1;
  }
  if (v10 < -1)
  {
LABEL_146:

    sub_1000EA950();
    __break(1u);
    return;
  }
  v137 = (uint64_t **)a1;
  Swift::Int v138 = v12;
  v153 = v11;
  Swift::Int v141 = v10;
  if (v10 < 2)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    v143 = &_swiftEmptyArrayStorage[4];
    if (v10 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      uint64_t v19 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_102;
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = (uint64_t *)sub_1000EA4D0();
    v15[2] = v14;
    v143 = v15 + 4;
  }
  uint64_t v17 = 0;
  uint64_t v18 = *v137;
  v147 = (uint64_t *)(v6 + 8);
  v136 = v18 + 3;
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v20 = v141;
  v152 = v18;
  v144 = v15;
  while (1)
  {
    uint64_t v22 = (uint64_t)v17 + 1;
    v145 = v17;
    if ((uint64_t)v17 + 1 >= v20)
    {
      uint64_t v34 = v17;
    }
    else
    {
      v140 = v19;
      uint64_t v23 = &v18[2 * v22];
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = &v18[2 * (void)v145];
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v148;
      sub_10002F0E4(v24, v25, v148);
      uint64_t v30 = v149;
      sub_10002F0E4(v27, v28, v149);
      LODWORD(v154) = sub_1000E8BE0();
      uint64_t v31 = (void (*)(uint64_t, uint64_t))*v147;
      uint64_t v32 = v30;
      uint64_t v33 = v150;
      ((void (*)(uint64_t, uint64_t))*v147)(v32, v150);
      v31(v29, v33);
      uint64_t v34 = v145;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = (uint64_t)v34 + 2;
      if ((uint64_t)v34 + 2 < v20)
      {
        uint64_t v139 = v3;
        uint64_t v35 = &v136[2 * (void)v34];
        uint64_t v36 = v35;
        while (1)
        {
          uint64_t v37 = v22;
          uint64_t v38 = v36[2];
          v36 += 2;
          uint64_t v40 = *(v35 - 1);
          uint64_t v39 = *v35;
          uint64_t v41 = v35[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v42 = v148;
          sub_10002F0E4(v41, v38, v148);
          uint64_t v43 = v149;
          sub_10002F0E4(v40, v39, v149);
          LODWORD(v40) = sub_1000E8BE0();
          uint64_t v44 = v43;
          uint64_t v45 = v150;
          v31(v44, v150);
          v31(v42, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v154 ^ v40)) {
            break;
          }
          uint64_t v22 = v37 + 1;
          uint64_t v35 = v36;
          if (v141 == v37 + 1)
          {
            uint64_t v22 = v141;
            uint64_t v3 = v139;
            goto LABEL_23;
          }
        }
        uint64_t v3 = v139;
        uint64_t v22 = v37;
LABEL_23:
        uint64_t v15 = v144;
        uint64_t v34 = v145;
      }
      uint64_t v19 = v140;
      uint64_t v18 = v152;
      uint64_t v11 = v153;
      if (v154)
      {
        if (v22 < (uint64_t)v34) {
          goto LABEL_139;
        }
        if ((uint64_t)v34 < v22)
        {
          uint64_t v46 = 2 * v22;
          uint64_t v47 = 2 * (void)v34;
          uint64_t v48 = v22;
          uint64_t v49 = v34;
          do
          {
            if (v49 != (uint64_t *)--v48)
            {
              if (!v18) {
                goto LABEL_144;
              }
              uint64_t v50 = &v18[v46];
              uint64_t v51 = v18[v47];
              uint64_t v52 = v18[v47 + 1];
              *(_OWORD *)&v18[v47] = *(_OWORD *)&v18[v46 - 2];
              *(v50 - 2) = v51;
              *(v50 - 1) = v52;
            }
            uint64_t v49 = (uint64_t *)((char *)v49 + 1);
            v46 -= 2;
            v47 += 2;
          }
          while ((uint64_t)v49 < v48);
        }
      }
    }
    if (v22 < v141)
    {
      if (__OFSUB__(v22, v34)) {
        goto LABEL_137;
      }
      if (v22 - (uint64_t)v34 < v138)
      {
        uint64_t v53 = (char *)v34 + v138;
        if (__OFADD__(v34, v138)) {
          goto LABEL_140;
        }
        if ((uint64_t)v53 >= v141) {
          uint64_t v53 = (char *)v141;
        }
        if ((uint64_t)v53 < (uint64_t)v34) {
          goto LABEL_141;
        }
        if ((char *)v22 != v53)
        {
          uint64_t v139 = v3;
          v140 = v19;
          uint64_t v54 = &v18[2 * v22];
          v142 = v53;
          do
          {
            v151 = (uint64_t *)v22;
            uint64_t v55 = &v18[2 * v22];
            uint64_t v56 = *v55;
            uint64_t v57 = v55[1];
            unint64_t v58 = v34;
            v146 = v54;
            while (1)
            {
              uint64_t v60 = *(v54 - 2);
              uint64_t v59 = *(v54 - 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v61 = v148;
              sub_10002F0E4(v56, v57, v148);
              uint64_t v62 = v149;
              sub_10002F0E4(v60, v59, v149);
              LODWORD(v154) = sub_1000E8BE0();
              uint64_t v11 = v147;
              unint64_t v63 = (void (*)(uint64_t, uint64_t))*v147;
              uint64_t v64 = v62;
              uint64_t v65 = v150;
              ((void (*)(uint64_t, uint64_t))*v147)(v64, v150);
              v63(v61, v65);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v154 & 1) == 0) {
                break;
              }
              uint64_t v18 = v152;
              if (!v152) {
                goto LABEL_142;
              }
              uint64_t v56 = *v54;
              uint64_t v57 = v54[1];
              *(_OWORD *)uint64_t v54 = *((_OWORD *)v54 - 1);
              *(v54 - 1) = v57;
              *(v54 - 2) = v56;
              v54 -= 2;
              unint64_t v58 = (uint64_t *)((char *)v58 + 1);
              if (v151 == v58) {
                goto LABEL_43;
              }
            }
            uint64_t v18 = v152;
LABEL_43:
            uint64_t v22 = (uint64_t)v151 + 1;
            uint64_t v34 = v145;
            uint64_t v54 = v146 + 2;
          }
          while ((char *)v151 + 1 != v142);
          uint64_t v22 = (uint64_t)v142;
          uint64_t v3 = v139;
          uint64_t v19 = v140;
          uint64_t v15 = v144;
        }
      }
    }
    if (v22 < (uint64_t)v34)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v151 = (uint64_t *)v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_100030D20(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v68 = *((void *)v19 + 2);
    unint64_t v67 = *((void *)v19 + 3);
    unint64_t v21 = v68 + 1;
    uint64_t v18 = v152;
    if (v68 >= v67 >> 1)
    {
      v121 = sub_100030D20((char *)(v67 > 1), v68 + 1, 1, v19);
      uint64_t v18 = v152;
      uint64_t v19 = v121;
    }
    *((void *)v19 + 2) = v21;
    unsigned int v69 = v19 + 32;
    long long v70 = &v19[16 * v68 + 32];
    os_log_type_t v71 = v151;
    *(void *)long long v70 = v34;
    *((void *)v70 + 1) = v71;
    if (v68) {
      break;
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v20 = v141;
    uint64_t v17 = v151;
    if ((uint64_t)v151 >= v141)
    {
      uint64_t v11 = v153;
LABEL_102:
      uint64_t v139 = v3;
      if (v21 < 2)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        v15[2] = 0;

        swift_bridgeObjectRelease();
        goto LABEL_114;
      }
      v123 = *v137;
      v144 = v15;
      v154 = v123;
      while (1)
      {
        unint64_t v124 = v21 - 2;
        if (v21 < 2) {
          break;
        }
        if (!v123) {
          goto LABEL_145;
        }
        v140 = v19;
        uint64_t v125 = *(void *)&v19[16 * v124 + 32];
        uint64_t v126 = *(void *)&v19[16 * v21 + 24];
        uint64_t v11 = &v123[2 * v125];
        v127 = &v123[2 * *(void *)&v19[16 * v21 + 16]];
        v128 = &v123[2 * v126];
        v129 = v153;
        uint64_t v130 = v139;
        sub_1000326CC(v11, v127, v128, v143, v129);
        uint64_t v139 = v130;
        if (v130)
        {
          v122 = v144;
          goto LABEL_99;
        }

        uint64_t v15 = v144;
        if (v126 < v125) {
          goto LABEL_134;
        }
        uint64_t v19 = v140;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_100031060((uint64_t)v19);
        }
        uint64_t v11 = v153;
        if (v124 >= *((void *)v19 + 2)) {
          goto LABEL_135;
        }
        v131 = &v19[16 * v124 + 32];
        *(void *)v131 = v125;
        *((void *)v131 + 1) = v126;
        unint64_t v132 = *((void *)v19 + 2);
        if (v21 > v132) {
          goto LABEL_136;
        }
        memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v132 - v21));
        *((void *)v19 + 2) = v132 - 1;
        unint64_t v21 = v132 - 1;
        v123 = v154;
        if (v132 <= 2) {
          goto LABEL_113;
        }
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      v133 = v153;

      __break(1u);
LABEL_143:
      v134 = v153;

      __break(1u);
LABEL_144:

      __break(1u);
LABEL_145:
      v135 = v153;

      __break(1u);
      goto LABEL_146;
    }
  }
  v142 = v19 + 32;
  while (1)
  {
    unint64_t v72 = v21 - 1;
    if (v21 >= 4)
    {
      id v77 = &v69[16 * v21];
      uint64_t v78 = *((void *)v77 - 8);
      uint64_t v79 = *((void *)v77 - 7);
      BOOL v83 = __OFSUB__(v79, v78);
      uint64_t v80 = v79 - v78;
      if (v83) {
        goto LABEL_121;
      }
      uint64_t v82 = *((void *)v77 - 6);
      uint64_t v81 = *((void *)v77 - 5);
      BOOL v83 = __OFSUB__(v81, v82);
      uint64_t v75 = v81 - v82;
      char v76 = v83;
      if (v83) {
        goto LABEL_122;
      }
      unint64_t v84 = v21 - 2;
      uint64_t v85 = &v69[16 * v21 - 32];
      uint64_t v87 = *(void *)v85;
      uint64_t v86 = *((void *)v85 + 1);
      BOOL v83 = __OFSUB__(v86, v87);
      uint64_t v88 = v86 - v87;
      if (v83) {
        goto LABEL_124;
      }
      BOOL v83 = __OFADD__(v75, v88);
      uint64_t v89 = v75 + v88;
      if (v83) {
        goto LABEL_127;
      }
      if (v89 >= v80)
      {
        long long v107 = &v69[16 * v72];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v83 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v83) {
          goto LABEL_131;
        }
        BOOL v100 = v75 < v110;
        goto LABEL_88;
      }
    }
    else
    {
      if (v21 != 3)
      {
        uint64_t v101 = *((void *)v19 + 4);
        uint64_t v102 = *((void *)v19 + 5);
        BOOL v83 = __OFSUB__(v102, v101);
        uint64_t v94 = v102 - v101;
        char v95 = v83;
        goto LABEL_82;
      }
      uint64_t v74 = *((void *)v19 + 4);
      uint64_t v73 = *((void *)v19 + 5);
      BOOL v83 = __OFSUB__(v73, v74);
      uint64_t v75 = v73 - v74;
      char v76 = v83;
    }
    if (v76) {
      goto LABEL_123;
    }
    unint64_t v84 = v21 - 2;
    uint64_t v90 = &v69[16 * v21 - 32];
    uint64_t v92 = *(void *)v90;
    uint64_t v91 = *((void *)v90 + 1);
    BOOL v93 = __OFSUB__(v91, v92);
    uint64_t v94 = v91 - v92;
    char v95 = v93;
    if (v93) {
      goto LABEL_126;
    }
    uint64_t v96 = &v69[16 * v72];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    BOOL v83 = __OFSUB__(v97, v98);
    uint64_t v99 = v97 - v98;
    if (v83) {
      goto LABEL_129;
    }
    if (__OFADD__(v94, v99)) {
      goto LABEL_130;
    }
    if (v94 + v99 >= v75)
    {
      BOOL v100 = v75 < v99;
LABEL_88:
      if (v100) {
        unint64_t v72 = v84;
      }
      goto LABEL_90;
    }
LABEL_82:
    if (v95) {
      goto LABEL_125;
    }
    long long v103 = &v69[16 * v72];
    uint64_t v105 = *(void *)v103;
    uint64_t v104 = *((void *)v103 + 1);
    BOOL v83 = __OFSUB__(v104, v105);
    uint64_t v106 = v104 - v105;
    if (v83) {
      goto LABEL_128;
    }
    if (v106 < v94) {
      goto LABEL_14;
    }
LABEL_90:
    unint64_t v111 = v72 - 1;
    if (v72 - 1 >= v21)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v18) {
      goto LABEL_143;
    }
    long long v112 = v69;
    long long v113 = (id *)&v69[16 * v111];
    uint64_t v11 = (uint64_t *)*v113;
    unint64_t v114 = v72;
    long long v115 = &v112[16 * v72];
    uint64_t v116 = *(void *)v115;
    uint64_t v117 = *((void *)v115 + 1);
    v154 = &v18[2 * (void)*v113];
    v145 = &v18[2 * v117];
    v146 = &v18[2 * v116];
    double v118 = v153;
    sub_1000326CC(v154, v146, v145, v143, v118);
    if (v3) {
      break;
    }

    if (v117 < (uint64_t)v11) {
      goto LABEL_118;
    }
    if (v114 > *((void *)v19 + 2)) {
      goto LABEL_119;
    }
    unint64_t v119 = v114;
    *long long v113 = v11;
    unsigned int v69 = v142;
    *(void *)&v142[16 * v111 + 8] = v117;
    unint64_t v120 = *((void *)v19 + 2);
    if (v119 >= v120) {
      goto LABEL_120;
    }
    unint64_t v21 = v120 - 1;
    memmove(v115, v115 + 16, 16 * (v120 - 1 - v119));
    *((void *)v19 + 2) = v120 - 1;
    uint64_t v15 = v144;
    uint64_t v18 = v152;
    if (v120 <= 2) {
      goto LABEL_14;
    }
  }
  v122 = v144;
LABEL_99:
  swift_bridgeObjectRelease();
  uint64_t v11 = v153;

  v122[2] = 0;
  swift_bridgeObjectRelease();
LABEL_114:
}

void sub_100033818(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_100032304(v3);
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v7[0] = v3 + 32;
  v7[1] = v5;
  id v6 = v4;
  sub_100032DA0(v7, v6);

  *a1 = v3;
}

uint64_t sub_1000338B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsWidgetInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_100033914()
{
  return sub_1000302F0();
}

uint64_t sub_100033934(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsWidgetInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100033990()
{
  return swift_release();
}

uint64_t sub_100033998(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1000A4860(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

BOOL sub_100033B04()
{
  return sub_100033914();
}

void *sub_100033B20(void *a1)
{
  uint64_t v48 = sub_1000E9B90();
  uint64_t v2 = *(void **)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = (SEL *)&selRef_addCountOfArticlesExposedEachSection_;
  id v47 = a1;
  id v6 = [a1 colors];
  sub_100022374(0, &qword_1001369F0);
  unint64_t v7 = sub_1000EA470();

  if (v7 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1000EA980();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v9 = [v47 locations];
  uint64_t v46 = sub_100022374(0, &qword_10013A3A0);
  unint64_t v10 = sub_1000EA470();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1000EA980();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v12 = [v47 v5[452]];
  unint64_t v13 = sub_1000EA470();

  unint64_t v49 = v13;
  unint64_t v14 = v13 >> 62;
  if (v8 == v11)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1000EA980();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_8:
        uint64_t result = self;
        id v45 = result;
        if (v15 >= 1)
        {
          unint64_t v17 = 0;
          unint64_t v44 = v13 & 0xC000000000000001;
          uint64_t v18 = (void (**)(char *, void, uint64_t))(v2 + 13);
          uint64_t v2 = _swiftEmptyArrayStorage;
          HIDWORD(v43) = enum case for Color.RGBColorSpace.sRGB(_:);
          while (1)
          {
            if (v44) {
              id v19 = (id)sub_1000EA870();
            }
            else {
              id v19 = *(id *)(v13 + 8 * v17 + 32);
            }
            Swift::Int v20 = v19;
            id v21 = [v19 hex];
            sub_1000EA2B0();

            NSString v22 = sub_1000EA280();
            swift_bridgeObjectRelease();
            id v23 = [v45 colorWithHexString:v22];

            [v23 red];
            [v23 green];
            [v23 blue];
            (*v18)(v4, HIDWORD(v43), v48);
            sub_1000E9C30();

            int64_t v5 = (SEL *)[v47 locations];
            uint64_t v24 = sub_1000EA470();

            if ((v24 & 0xC000000000000001) != 0)
            {
              id v25 = (id)sub_1000EA870();
            }
            else
            {
              if (v17 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_33;
              }
              id v25 = *(id *)(v24 + 8 * v17 + 32);
            }
            uint64_t v26 = v25;
            swift_bridgeObjectRelease();
            sub_1000E8DB0();

            uint64_t v27 = sub_1000E9D50();
            uint64_t v29 = v28;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v2 = sub_1000A4970(0, v2[2] + 1, 1, v2);
            }
            unint64_t v31 = v2[2];
            unint64_t v30 = v2[3];
            if (v31 >= v30 >> 1) {
              uint64_t v2 = sub_1000A4970((void *)(v30 > 1), v31 + 1, 1, v2);
            }
            ++v17;
            v2[2] = v31 + 1;
            uint64_t v32 = &v2[2 * v31];
            _OWORD v32[4] = v27;
            v32[5] = v29;

            unint64_t v13 = v49;
            if (v15 == v17) {
              goto LABEL_36;
            }
          }
        }
        __break(1u);
        goto LABEL_40;
      }
    }
LABEL_36:
    swift_bridgeObjectRelease();
    return (void *)sub_1000E9D60();
  }
  if (!v14)
  {
    uint64_t v33 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33) {
      goto LABEL_25;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return (void *)sub_1000E9D70();
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1000EA980();
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_38;
  }
LABEL_25:
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t result = (void *)sub_1000EA8E0();
  if ((v33 & 0x8000000000000000) == 0)
  {
    id v47 = self;
    uint64_t v34 = 0;
    unint64_t v35 = v13 & 0xC000000000000001;
    uint64_t v36 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v2 + 13);
    do
    {
      if (v35) {
        id v38 = (id)sub_1000EA870();
      }
      else {
        id v38 = *(id *)(v49 + 8 * v34 + 32);
      }
      uint64_t v39 = v38;
      ++v34;
      id v40 = [v38 hex];
      sub_1000EA2B0();

      NSString v41 = sub_1000EA280();
      swift_bridgeObjectRelease();
      id v42 = [v47 colorWithHexString:v41];

      [v42 red];
      [v42 green];
      [v42 blue];
      (*v37)(v4, v36, v48);
      sub_1000E9C30();

      sub_1000EA8C0();
      sub_1000EA8F0();
      sub_1000EA900();
      sub_1000EA8D0();
    }
    while (v33 != v34);
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100034200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a2;
  uint64_t v22 = a1;
  uint64_t v6 = sub_1000E8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v12 = (char *)&v19 - v11;
  sub_1000E8C40();
  id v21 = *(id *)(v3 + 32);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v13, v10, v6);
  *(void *)(v15 + v14) = v4;
  uint64_t v16 = (void *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = v20;
  v16[1] = a3;
  aBlock[4] = sub_1000347D0;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000345D0;
  aBlock[3] = &unk_100125798;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v21 fetchLatestResultsWithOperationInfo:v22 completion:v17];
  _Block_release(v17);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

void sub_100034438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, void *, uint64_t))
{
  uint64_t v20 = a7;
  uint64_t v11 = sub_1000E8C50();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8C40();
  sub_1000E8BC0();
  double v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  self;
  unint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (v17) {
    swift_unknownObjectRetain();
  }
  uint64_t v18 = *(void (**)(uint64_t, void *, uint64_t, double))(a6 + 16);
  if (v18)
  {
    swift_retain();
    v18(a1, v17, a4, v16);
    sub_100034914((uint64_t)v18);
  }
  v20(a1, a2, v17, a4);
}

uint64_t sub_1000345D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1000E8B60();
    sub_1000348BC();
    uint64_t v7 = sub_1000EA1C0();
  }
  swift_retain();
  id v10 = a2;
  swift_unknownObjectRetain();
  id v11 = a5;
  v9(a2, v7, a4, a5);
  swift_release();

  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000346AC()
{
  sub_100034914(*(void *)(v0 + 16));

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for NTTodayContextResultsService()
{
  return self;
}

uint64_t sub_100034710()
{
  uint64_t v1 = sub_1000E8C50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1000347D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(sub_1000E8C50() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v4 + v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, void *, uint64_t))(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100034438(a1, a2, a3, a4, v4 + v10, v12, v13);
}

uint64_t sub_1000348A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000348B4()
{
  return swift_release();
}

unint64_t sub_1000348BC()
{
  unint64_t result = qword_100139090;
  if (!qword_100139090)
  {
    sub_1000E8B60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139090);
  }
  return result;
}

uint64_t sub_100034914(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100034924()
{
  sub_100020AC0(v0 + 16);
  sub_100020AC0(v0 + 56);
  sub_100020AC0(v0 + 96);

  return _swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for EventProcessingSidecarTask()
{
  return self;
}

uint64_t sub_100034990(void **a1, uint64_t a2)
{
  sub_1000A9300(*a1);
  sub_100020A28((void *)(a2 + 96), *(void *)(a2 + 120));
  type metadata accessor for SessionReporter();
  uint64_t v3 = sub_10003B68C();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100034A38(char *a1, char *a2)
{
  uint64_t v79 = a2;
  uint64_t v75 = sub_10001B38C(&qword_100137578);
  uint64_t v3 = __chkstk_darwin(v75);
  char v76 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v72 = (char *)&v65 - v5;
  uint64_t v73 = sub_10001B38C(&qword_100137580);
  uint64_t v6 = __chkstk_darwin(v73);
  uint64_t v74 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v78 = (uint64_t)&v65 - v8;
  uint64_t v9 = sub_1000E8C50();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v80 = (char *)&v65 - v14;
  __chkstk_darwin(v13);
  double v16 = (char *)&v65 - v15;
  uint64_t v17 = sub_10001B38C(&qword_100137588);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NewsTimelineEntry();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v71 = (uint64_t)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v65 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v65 - v27;
  uint64_t v29 = *(int *)(type metadata accessor for TaskContext() + 20);
  id v77 = a1;
  sub_100035330((uint64_t)&a1[v29], (uint64_t)v19);
  uint64_t v70 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_100028B6C((uint64_t)v19, &qword_100137588);
    sub_100026434();
    unint64_t v30 = (void *)sub_1000EA720();
    sub_1000EA620();
    sub_1000E9220();

    sub_10001B38C(&qword_1001379B0);
    swift_allocObject();
    return sub_1000E9070();
  }
  sub_100028C1C((uint64_t)v19, (uint64_t)v28);
  sub_1000E8C40();
  sub_10003585C((unint64_t *)&qword_100137590);
  if (sub_1000EA210())
  {
    sub_10003542C((uint64_t)v28, (uint64_t)v26);
    sub_100026434();
    uint64_t v32 = sub_1000EA720();
    uint64_t v33 = (uint64_t)v28;
    os_log_type_t v34 = sub_1000EA620();
    if (os_log_type_enabled(v32, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      unsigned int v69 = v16;
      uint64_t v83 = v36;
      unint64_t v68 = (char *)v33;
      *(_DWORD *)unint64_t v35 = 136315138;
      sub_10003585C(&qword_100137598);
      uint64_t v37 = sub_1000EAB10();
      uint64_t v82 = sub_1000B1D7C(v37, v38, &v83);
      uint64_t v33 = (uint64_t)v68;
      sub_1000EA750();
      swift_bridgeObjectRelease();
      sub_100035800((uint64_t)v26);
      _os_log_impl((void *)&_mh_execute_header, v32, v34, "event-processing sidecar task cannot query because the last entry dated %s is in the future", v35, 0xCu);
      swift_arrayDestroy();
      double v16 = v69;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100035800((uint64_t)v26);
    }
    uint64_t v64 = v81;
    sub_10001B38C(&qword_1001379B0);
    swift_allocObject();
    uint64_t v31 = sub_1000E9070();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v16, v9);
    sub_100035800(v33);
    return v31;
  }
  sub_1000E8C00();
  char v39 = sub_1000EA220();
  id v40 = v80;
  uint64_t v41 = v81;
  id v42 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  if (v39) {
    uint64_t v43 = v12;
  }
  else {
    uint64_t v43 = v28;
  }
  v42(v80, v43, v9);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v67 = v41 + 8;
  v66(v12, v9);
  unint64_t v44 = v40;
  uint64_t result = sub_1000EA230();
  if (result)
  {
    unint64_t v68 = v28;
    unsigned int v69 = v16;
    uint64_t v46 = v75;
    id v47 = v72;
    uint64_t v48 = &v72[*(int *)(v75 + 48)];
    v42(v72, v44, v9);
    uint64_t v65 = v48;
    v42(v48, v16, v9);
    unint64_t v49 = v76;
    uint64_t v50 = &v76[*(int *)(v46 + 48)];
    v42(v76, v47, v9);
    v42(v50, v48, v9);
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    uint64_t v52 = (uint64_t)v74;
    v51(v74, v49, v9);
    v66(v50, v9);
    uint64_t v53 = &v49[*(int *)(v46 + 48)];
    v51(v49, v47, v9);
    v51(v53, v65, v9);
    v51((char *)(v52 + *(int *)(v73 + 36)), v53, v9);
    uint64_t v54 = v49;
    uint64_t v55 = v66;
    v66(v54, v9);
    uint64_t v56 = v78;
    uint64_t v57 = sub_100035398(v52, v78);
    __chkstk_darwin(v57);
    unint64_t v58 = v79;
    *(&v65 - 4) = v79;
    *(&v65 - 3) = (char *)v56;
    *(&v65 - 2) = v77;
    sub_10001B38C(&qword_100139FB0);
    sub_1000E90C0();
    uint64_t v59 = (uint64_t)v68;
    uint64_t v60 = v71;
    sub_10003542C((uint64_t)v68, v71);
    unint64_t v61 = (*(unsigned __int8 *)(v70 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v58;
    sub_100028C1C(v60, v62 + v61);
    swift_retain();
    unint64_t v63 = (void *)sub_1000E9030();
    uint64_t v31 = sub_1000E9040();
    swift_release();
    swift_release();

    v55(v80, v9);
    v55(v69, v9);
    sub_100035800(v59);
    sub_100028B6C(v56, &qword_100137580);
    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_100035330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C(&qword_100137588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C(&qword_100137580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035400()
{
  return sub_1000D7DA0(*(void *)(v0 + 24), *(uint8_t **)(v0 + 32));
}

uint64_t sub_10003542C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035490()
{
  uint64_t v1 = (int *)(type metadata accessor for NewsTimelineEntry() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  uint64_t v6 = (id *)(v0 + v3 + v1[7]);

  uint64_t v7 = type metadata accessor for TodayContent();
  uint64_t v8 = (char *)v6 + *(int *)(v7 + 20);
  uint64_t v9 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9))
  {
    uint64_t v18 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = &v8[v9[7]];
    uint64_t v11 = sub_1000E8B60();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)&v8[v9[9]];
    if (v13 != (void *)1) {

    }
    sub_10001D758(*(void **)&v8[v9[10]], *(void **)&v8[v9[10] + 8]);
    uint64_t v4 = v18;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v14 = (char *)v6 + *(int *)(v7 + 36);
  uint64_t v15 = sub_1000E8B60();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100035790(void **a1)
{
  type metadata accessor for NewsTimelineEntry();
  return sub_100034990(a1, *(void *)(v1 + 16));
}

uint64_t sub_100035800(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003585C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000E8C50();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000358A0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for TodayIntent()) init];
  qword_10014B9B0 = (uint64_t)result;
  *(void *)algn_10014B9B8 = &off_100125800;
  return result;
}

id sub_1000358E0()
{
  id result = [objc_allocWithZone((Class)NTPBTodayModuleContentRequest) init];
  if (result)
  {
    id v1 = result;
    [result setModuleDescriptorType:0];
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100035934()
{
  return 0;
}

uint64_t sub_100035940()
{
  if (qword_100135C58 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10014B9B0;
  id v1 = (id)qword_10014B9B0;
  return v0;
}

uint64_t sub_1000359A4@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self nss_NewsURLForForYou];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1000E8B20();

    uint64_t v4 = sub_1000E8B60();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a1;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = sub_1000E8B60();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }

  return v5(v7, v8, 1, v6);
}

id sub_100035A74()
{
  id result = [objc_allocWithZone((Class)NTPBTodayModuleContentRequest) init];
  if (result)
  {
    id v2 = result;
    [result setModuleDescriptorType:1];
    id v3 = [v0 tag];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 identifier];
      if (v5)
      {
        uint64_t v6 = v5;
        [v2 setTagID:v5];

        NSString v7 = [v4 displayString];
        if (!v7)
        {
          sub_1000EA2B0();
          NSString v7 = sub_1000EA280();
          swift_bridgeObjectRelease();
        }
        [v2 setName:v7];

        id v8 = [v4 nameColorLight];
        [v2 setNameColorLight:v8];

        id v9 = [v4 nameColorDark];
        [v2 setNameColorDark:v9];

        uint64_t v4 = v9;
      }
    }
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100035BE4@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 tag];
  if (v3 && (uint64_t v4 = v3, v5 = [v3 identifier], v4, v5))
  {
    sub_1000EA2B0();

    uint64_t v6 = self;
    NSString v7 = sub_1000EA280();
    swift_bridgeObjectRelease();
    id v8 = [v6 nss_NewsURLForTagID:v7];

    sub_1000E8B20();
    uint64_t v9 = sub_1000E8B60();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v11 = v9;
    uint64_t v12 = a1;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v14 = sub_1000E8B60();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v11 = v14;
    uint64_t v12 = a1;
    uint64_t v13 = 1;
  }

  return v10(v12, v13, 1, v11);
}

uint64_t sub_100035D40()
{
  uint64_t v1 = 1701736302;
  id v2 = [v0 tag];
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 identifier];

    if (v4)
    {
      uint64_t v1 = sub_1000EA2B0();
    }
  }
  return v1;
}

id sub_100035DD0()
{
  if (qword_100135C60 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10014B9C0;
  id v1 = objc_allocWithZone((Class)type metadata accessor for TagIntent());
  id v2 = v0;
  id v3 = [v1 init];
  [v3 setTag:v2];

  return v3;
}

void sub_100035E88()
{
  swift_bridgeObjectRetain();
  id v0 = (id)NSSNewsTagWidgetPlaceholderName();
  if (v0)
  {
    id v1 = v0;
    type metadata accessor for Tag();
    sub_1000EA2B0();

    id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    NSString v3 = sub_1000EA280();
    swift_bridgeObjectRelease();
    NSString v4 = sub_1000EA280();
    swift_bridgeObjectRelease();
    id v5 = [v2 initWithIdentifier:v3 displayString:v4];

    qword_10014B9C0 = (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
}

uint64_t _s10NewsToday29TagIntentC14equalInContent3lhs3rhsSbAC_ACtFZ_0(void *a1, void *a2)
{
  id v3 = [a1 tag];
  NSString v4 = v3;
  if (v3)
  {
    id v5 = [v3 identifier];

    if (v5)
    {
      uint64_t v6 = sub_1000EA2B0();
      NSString v4 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      NSString v4 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v8 = [a2 tag];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = [v8 identifier];

    if (v10)
    {
      uint64_t v11 = sub_1000EA2B0();
      uint64_t v9 = v12;

      if (!v4) {
        goto LABEL_16;
      }
LABEL_11:
      if (v9)
      {
        if (v6 == v11 && v4 == v9)
        {
          swift_bridgeObjectRelease();
          char v13 = 1;
        }
        else
        {
          char v13 = sub_1000EAB20();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        char v13 = 0;
      }
      goto LABEL_20;
    }
    uint64_t v11 = 0;
    uint64_t v9 = 0;
    if (v4) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (v4) {
      goto LABEL_11;
    }
  }
LABEL_16:
  if (!v9)
  {
    char v13 = 1;
    return v13 & 1;
  }
  char v13 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1000360E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for MessageView(uint64_t a1)
{
  sub_100026FDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for MessageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1000360E4(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MessageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1000360E4(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100026FDC(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MessageView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MessageView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100026FDC(v5, v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageView()
{
  return &type metadata for MessageView;
}

uint64_t sub_100036354()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100036370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10001B38C(&qword_1001375B0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B38C(&qword_1001375B8);
  uint64_t inited = swift_initStackObject();
  long long v16 = xmmword_1000F1610;
  *(_OWORD *)(inited + 16) = xmmword_1000F1610;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  sub_10001B38C(&qword_1001375C0);
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = v16;
  *(void *)(v6 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v6 + 40) = UIFontWeightSemibold;
  char v7 = UIFontDescriptorTraitsAttribute;
  uint64_t v8 = UIFontWeightTrait;
  unint64_t v9 = sub_1000B5358(v6);
  *(void *)(inited + 64) = sub_10001B38C(&qword_1001375C8);
  *(void *)(inited + 40) = v9;
  sub_1000B5464(inited);
  id v10 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleSubheadline];
  type metadata accessor for AttributeName(0);
  sub_100036AEC();
  Class isa = sub_1000EA1B0().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v10 fontDescriptorByAddingAttributes:isa];

  id v13 = [self fontWithDescriptor:v12 size:0.0];
  sub_1000E9930();
  *(void *)char v4 = sub_1000E9710();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v14 = sub_10001B38C(&qword_1001375D0);
  sub_100036600(&v4[*(int *)(v14 + 44)]);
  sub_1000E9DC0();
  sub_1000368D4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1);

  swift_release();
  return sub_100036B44((uint64_t)v4);
}

uint64_t sub_100036600@<X0>(void *a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v36 = sub_10001B38C(&qword_1001375E0);
  uint64_t v38 = *(void *)(v36 - 8);
  uint64_t v1 = __chkstk_darwin(v36);
  unint64_t v35 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v1);
  char v4 = &v30[-v3];
  uint64_t v5 = sub_1000E99C0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = sub_1000E9980();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_100026FDC(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = v10;
  uint64_t v40 = v12;
  LOBYTE(v41) = v16;
  uint64_t v42 = v14;
  uint64_t v43 = KeyPath;
  LOBYTE(v44) = 1;
  sub_10001B38C(&qword_1001375E8);
  sub_100036C60();
  sub_1000E9AB0();
  sub_100026FDC(v10, v12, v16);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v34 = v39;
  int v33 = v40;
  uint64_t v32 = v41;
  int v31 = v42;
  uint64_t v18 = v43;
  uint64_t v19 = v44;
  uint64_t v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v38 + 16);
  uint64_t v21 = v35;
  uint64_t v22 = v4;
  uint64_t v23 = v4;
  uint64_t v24 = v36;
  v20(v35, v22, v36);
  uint64_t v25 = v37;
  void *v37 = 0;
  *((unsigned char *)v25 + 8) = 1;
  uint64_t v26 = sub_10001B38C(&qword_100137608);
  v20((unsigned char *)v25 + *(int *)(v26 + 48), v21, v24);
  uint64_t v27 = (char *)v25 + *(int *)(v26 + 64);
  *(void *)uint64_t v27 = 0;
  v27[8] = 1;
  *((void *)v27 + 2) = v34;
  v27[24] = v33;
  *((void *)v27 + 4) = v32;
  v27[40] = v31;
  *((void *)v27 + 6) = v18;
  *((void *)v27 + 7) = v19;
  uint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
  v28(v23, v24);
  return ((uint64_t (*)(unsigned char *, uint64_t))v28)(v21, v24);
}

__n128 sub_1000368D4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000EA610();
    uint64_t v23 = (void *)sub_1000E9860();
    sub_1000E9230();
  }
  sub_1000E9400();
  sub_100036BA4(v13, a9);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(sub_10001B38C(&qword_1001375D8) + 36));
  _OWORD v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *uint64_t v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  _OWORD v24[3] = v29;
  return result;
}

uint64_t sub_100036A94()
{
  return sub_1000E9AD0();
}

uint64_t sub_100036AB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100036370(a1);
}

unint64_t sub_100036AEC()
{
  unint64_t result = qword_1001365F8;
  if (!qword_1001365F8)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001365F8);
  }
  return result;
}

uint64_t sub_100036B44(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C(&qword_1001375B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100036BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C(&qword_1001375B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100036C0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E9510();
  *a1 = result;
  return result;
}

uint64_t sub_100036C38()
{
  return sub_1000E9520();
}

unint64_t sub_100036C60()
{
  unint64_t result = qword_1001375F0;
  if (!qword_1001375F0)
  {
    sub_10001B3D0(&qword_1001375E8);
    sub_10001D100(&qword_1001375F8, &qword_100137600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001375F0);
  }
  return result;
}

unint64_t sub_100036D04()
{
  unint64_t result = qword_100137610;
  if (!qword_100137610)
  {
    sub_10001B3D0(&qword_1001375D8);
    sub_10001D100(&qword_100137618, &qword_1001375B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137610);
  }
  return result;
}

unint64_t sub_100036DA8()
{
  unint64_t result = qword_100137630;
  if (!qword_100137630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137630);
  }
  return result;
}

uint64_t sub_100036DFC()
{
  return sub_10001D100(&qword_100137638, &qword_100137640);
}

uint64_t sub_100036E38()
{
  return sub_1000E8A50();
}

uint64_t sub_100036E54()
{
  uint64_t v0 = sub_10001B38C(&qword_1001376F0);
  sub_10001C500(v0, qword_10014B9C8);
  sub_10001C4C8(v0, (uint64_t)qword_10014B9C8);
  sub_10003859C();
  return sub_1000E88B0();
}

uint64_t sub_100036ED0()
{
  uint64_t v0 = sub_10001B38C(&qword_100137680);
  sub_10001C500(v0, qword_10014B9E0);
  sub_10001C4C8(v0, (uint64_t)qword_10014B9E0);
  sub_100038B34();
  return sub_1000E8840();
}

uint64_t sub_100036F4C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100037090, 0, 0);
}

uint64_t sub_100037090()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100137640);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_100137710, &qword_100137718);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100037234()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014B9F8);
  sub_10001C4C8(v10, (uint64_t)qword_10014B9F8);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_10003750C()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_100037748()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014BA10);
  sub_10001C4C8(v0, (uint64_t)qword_10014BA10);
  return sub_1000E8A50();
}

uint64_t sub_1000377AC()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014BA28);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014BA28);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100037864()
{
  uint64_t result = swift_getKeyPath();
  qword_10014BA40 = result;
  return result;
}

uint64_t sub_10003788C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1000378B0, 0, 0);
}

uint64_t sub_1000378B0()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135C90 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BA40;
  *(void *)(v0 + 80) = qword_10014BA40;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_100137710, &qword_100137718);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_100037A0C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_100037A0C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_100037B60;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100037B60()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014BA40;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_100037C3C()
{
  if (qword_100135C90 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100037C9C()
{
  unint64_t result = qword_100137648;
  if (!qword_100137648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137648);
  }
  return result;
}

unint64_t sub_100037CF4()
{
  unint64_t result = qword_100137650;
  if (!qword_100137650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137650);
  }
  return result;
}

uint64_t sub_100037D48()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100037D7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037DCC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135C80, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014BA10, a1);
}

uint64_t sub_100037E04@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135C88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BA28);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_100037E80(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1000378B0, 0, 0);
}

uint64_t sub_100037F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100039218();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100037F5C()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_100037F7C()
{
  unint64_t result = qword_100137660;
  if (!qword_100137660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137660);
  }
  return result;
}

unint64_t sub_100037FD4()
{
  unint64_t result = qword_100137668;
  if (!qword_100137668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137668);
  }
  return result;
}

unint64_t sub_10003802C()
{
  unint64_t result = qword_100137670;
  if (!qword_100137670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137670);
  }
  return result;
}

uint64_t sub_100038080()
{
  return sub_10001D100(&qword_100137678, &qword_100137680);
}

uint64_t sub_1000380BC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000380DC, 0, 0);
}

uint64_t sub_1000380DC()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000381B8(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 65) = *a2;
  return _swift_task_switch(sub_1000381DC, 0, 0);
}

uint64_t sub_1000381DC()
{
  v0[2] = self;
  v0[3] = sub_1000EA570();
  v0[4] = sub_1000EA560();
  uint64_t v2 = sub_1000EA550();
  return _swift_task_switch(sub_100038284, v2, v1);
}

uint64_t sub_100038284()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  *(void *)(v0 + 40) = [v1 currentDevice];
  return _swift_task_switch(sub_10003830C, 0, 0);
}

uint64_t sub_10003830C()
{
  *(void *)(v0 + 48) = sub_1000EA560();
  uint64_t v2 = sub_1000EA550();
  return _swift_task_switch(sub_100038398, v2, v1);
}

uint64_t sub_100038398()
{
  uint64_t v1 = *(void **)(v0 + 40);
  swift_release();
  *(void *)(v0 + 56) = [v1 userInterfaceIdiom];

  return _swift_task_switch(sub_100038418, 0, 0);
}

uint64_t sub_100038418()
{
  if (*(void *)(v0 + 56)) {
    goto LABEL_6;
  }
  if (qword_100135C08 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 64) != 1)
  {
LABEL_6:
    sub_1000391C4();
    swift_allocError();
    swift_willThrow();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    *(unsigned char *)(v0 + 64) = *(unsigned char *)(v0 + 65);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v1();
}

uint64_t sub_10003856C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135C70, &qword_100137680, (uint64_t)qword_10014B9E0, a1);
}

unint64_t sub_10003859C()
{
  unint64_t result = qword_100137688;
  if (!qword_100137688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137688);
  }
  return result;
}

uint64_t sub_1000385F0()
{
  return sub_10001D100(&qword_100137690, &qword_100137680);
}

uint64_t sub_10003862C()
{
  uint64_t v0 = qword_100137620;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100038668()
{
  unint64_t result = qword_100137698;
  if (!qword_100137698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137698);
  }
  return result;
}

uint64_t sub_1000386BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135C68, &qword_1001376F0, (uint64_t)qword_10014B9C8, a1);
}

unint64_t sub_1000386EC()
{
  unint64_t result = qword_1001376A0;
  if (!qword_1001376A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376A0);
  }
  return result;
}

unint64_t sub_100038744()
{
  unint64_t result = qword_1001376A8;
  if (!qword_1001376A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376A8);
  }
  return result;
}

unint64_t sub_10003879C()
{
  unint64_t result = qword_1001376B0;
  if (!qword_1001376B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376B0);
  }
  return result;
}

unint64_t sub_1000387F4()
{
  unint64_t result = qword_1001376B8;
  if (!qword_1001376B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376B8);
  }
  return result;
}

uint64_t sub_100038848@<X0>(uint64_t *a1@<X8>)
{
  sub_100038B34();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100038888()
{
  sub_100038AE0();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_10003891C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135C78, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014B9F8, a1);
}

uint64_t sub_100038954()
{
  return sub_10001D100(&qword_1001376C8, &qword_1001376D0);
}

uint64_t sub_100038990(uint64_t a1)
{
  unint64_t v2 = sub_10003859C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000389E0()
{
  unint64_t result = qword_1001376D8;
  if (!qword_1001376D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376D8);
  }
  return result;
}

uint64_t sub_100038A38(uint64_t a1)
{
  unint64_t v2 = sub_1000387F4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AutoDownloadAudioStoriesEntity()
{
  return &type metadata for AutoDownloadAudioStoriesEntity;
}

ValueMetadata *type metadata accessor for AutoDownloadAudioStoriesEntity.UpdateIntent_value()
{
  return &type metadata for AutoDownloadAudioStoriesEntity.UpdateIntent_value;
}

uint64_t sub_100038AA4()
{
  return sub_10001D100(&qword_100135FB0, &qword_100135FB8);
}

unint64_t sub_100038AE0()
{
  unint64_t result = qword_1001376E0;
  if (!qword_1001376E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376E0);
  }
  return result;
}

unint64_t sub_100038B34()
{
  unint64_t result = qword_1001376E8;
  if (!qword_1001376E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001376E8);
  }
  return result;
}

uint64_t sub_100038B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136618);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_100038B34();
  uint64_t v11 = sub_10001B3D0(&qword_100136628);
  uint64_t v12 = sub_1000E9740();
  uint64_t v13 = sub_10001D100(&qword_100136630, &qword_100136628);
  unint64_t v14 = sub_1000397BC();
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  unint64_t v28 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v15 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  uint64_t v25 = v1;
  uint64_t v26 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  uint64_t v25 = v4;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v22;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v17);
}

uint64_t sub_100038FC8()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_1000397BC();
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1000391C4()
{
  unint64_t result = qword_100137720;
  if (!qword_100137720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137720);
  }
  return result;
}

uint64_t sub_100039218()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  long long v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_100137728);
  sub_1000E8A50();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10003859C();
  uint64_t v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

uint64_t sub_100039658@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

unsigned char *storeEnumTagSinglePayload for AutoDownloadAudioStoriesEntity.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100039700);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadAudioStoriesEntity.Error()
{
  return &type metadata for AutoDownloadAudioStoriesEntity.Error;
}

ValueMetadata *type metadata accessor for AutoDownloadAudioStoriesToggleControl()
{
  return &type metadata for AutoDownloadAudioStoriesToggleControl;
}

uint64_t sub_100039748()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100039768()
{
  unint64_t result = qword_100137738;
  if (!qword_100137738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137738);
  }
  return result;
}

unint64_t sub_1000397BC()
{
  unint64_t result = qword_100136638;
  if (!qword_100136638)
  {
    sub_1000E9740();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100136638);
  }
  return result;
}

uint64_t sub_100039814()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AudioIndicatorView()
{
  return &type metadata for AudioIndicatorView;
}

uint64_t sub_100039914()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100039930@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100137748);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v19 - v9;
  v19[1] = a1;
  sub_1000E9A60();
  if (qword_100135DD0 != -1) {
    swift_once();
  }
  id v11 = [(id)qword_10014BD98 imageWithRenderingMode:2];
  uint64_t v12 = sub_1000E9C50();
  uint64_t v13 = sub_1000E9BF0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v8, v10, v4);
  v15(a2, v8, v4);
  uint64_t v16 = (uint64_t *)&a2[*(int *)(sub_10001B38C(&qword_100137750) + 48)];
  *uint64_t v16 = v12;
  v16[1] = KeyPath;
  v16[2] = v13;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v10, v4);
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v17)(v8, v4);
}

uint64_t sub_100039B5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  *a1 = sub_1000E9DC0();
  a1[1] = v4;
  uint64_t v5 = sub_10001B38C(&qword_100137740);
  return sub_100039930(v3, (char *)a1 + *(int *)(v5 + 44));
}

unint64_t sub_100039BB0()
{
  unint64_t result = qword_100137758;
  if (!qword_100137758)
  {
    sub_10001B3D0((uint64_t *)&unk_100137760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137758);
  }
  return result;
}

uint64_t sub_100039C0C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100039C4C((uint64_t (*)(void))type metadata accessor for BiomeEventStore, (uint64_t)&off_100127CF8, a1);
}

uint64_t sub_100039C2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100039C4C((uint64_t (*)(void))type metadata accessor for SessionAssembler, (uint64_t)&off_100126F60, a1);
}

uint64_t sub_100039C4C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_100039C9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100137900);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for SessionReporter();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100125A50;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100039D28(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100137820);
  uint64_t result = sub_1000E8EC0();
  if (!v24)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_100020A28(a1, a1[3]);
  sub_10003A480();
  uint64_t result = sub_1000E8EB0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = (void *)result;
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137890);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_10003A4C0((uint64_t)v23, v24);
    __chkstk_darwin(v5);
    uint64_t v7 = (void *)((char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for TelemetryEnablement();
    v22[3] = v10;
    v22[4] = &off_100127C68;
    v22[0] = v9;
    type metadata accessor for TelemetryManager();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = sub_10003A4C0((uint64_t)v22, v10);
    __chkstk_darwin(v12);
    uint64_t v14 = (void *)((char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    _OWORD v21[3] = v10;
    v21[4] = &off_100127C68;
    v21[0] = v16;
    _s10NewsToday216TelemetryManagerC13lastFlushDate33_F9D4AB4E0910E2715C8CD19E0D9BCB9510Foundation0G0Vvpfi_0();
    sub_10002D970((uint64_t)v21, v11 + 16);
    *(void *)(v11 + 56) = v3;
    id v17 = objc_allocWithZone((Class)NSSNewsAnalyticsTelemetryAnnotator);
    id v18 = v3;
    id v19 = [v17 initWithUserIDProvider:v4];

    swift_unknownObjectRelease();
    sub_100020AC0((uint64_t)v21);
    *(void *)(v11 + 64) = v19;
    sub_100020AC0((uint64_t)v22);
    sub_100020AC0((uint64_t)v23);
    return v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10003A014()
{
  sub_10001B38C((uint64_t *)&unk_100137820);
  sub_1000E8FB0();

  return swift_release();
}

uint64_t sub_10003A078@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_1001399E0);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v5 = result;
    sub_100020A28(a1, a1[3]);
    sub_10001B38C(&qword_100137890);
    uint64_t result = sub_1000E8EB0();
    if (result)
    {
      uint64_t v6 = result;
      uint64_t v7 = type metadata accessor for TelemetryEnablement();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v5;
      *(void *)(result + 24) = v6;
      a2[3] = v7;
      a2[4] = (uint64_t)&off_100127C68;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003A14C()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for WidgetAnalyticsAssembly()
{
  return self;
}

uint64_t sub_10003A184()
{
  uint64_t v0 = sub_1000E9020();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_100139A30);
  sub_1000E8FB0();
  swift_release();
  uint64_t v4 = enum case for Scope.singleton(_:);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, enum case for Scope.singleton(_:), v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_100137810);
  sub_1000E8FB0();
  swift_release();
  v5(v3, v4, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_100139A40);
  sub_1000E8FB0();
  swift_release();
  swift_release();
  sub_1000E8F10();
  type metadata accessor for TelemetryManager();
  sub_1000E8FA0();
  swift_release();
  v5(v3, v4, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_1000E8F90();
  return swift_release();
}

unint64_t sub_10003A480()
{
  unint64_t result = qword_100137898;
  if (!qword_100137898)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100137898);
  }
  return result;
}

uint64_t sub_10003A4C0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10003A510()
{
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for SessionReporter()
{
  return self;
}

void sub_10003A56C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = *(void *)(a5 + 16);
  if (v13)
  {
    uint64_t v14 = *(void **)(a6 + 16);
    uint64_t v15 = *(void *)(type metadata accessor for Session() - 8);
    uint64_t v16 = a5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v17 = *(void *)(v15 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      sub_10003A794(v16, a7);
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    sub_100022374(0, (unint64_t *)&qword_100138300);
    id v18 = (void *)sub_1000EA720();
    sub_1000EA620();
    sub_1000E9220();

    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_10003B738;
    *(void *)(v19 + 24) = v12;
    v22[4] = sub_10003B760;
    void v22[5] = v19;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_10003B648;
    v22[3] = &unk_100125AB0;
    uint64_t v20 = _Block_copy(v22);
    swift_release();
    [v14 submitEventsIfNeededWithCompletion:v20];
    _Block_release(v20);
  }
  else
  {
    swift_retain();
    uint64_t v21 = swift_release();
    a1(v21);
  }
}

uint64_t sub_10003A794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DisappearanceEvent(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v84 = (uint64_t)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v96 = (char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C(&qword_1001379B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v94 = (char *)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for EngagementEvent(0);
  v83[0] = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  char v95 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for VisibleRectChangedEvent(0);
  uint64_t v97 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v105 = (uint64_t)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AppearanceEvent(0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a2 + *(int *)(type metadata accessor for NewsTimelineEntry() + 20);
  uint64_t v19 = *(void *)(v18 + *(int *)(type metadata accessor for TodayContent() + 40));
  uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_results);
  swift_retain();
  id v21 = v20;
  uint64_t v22 = sub_1000B6CB4();
  id v23 = [v21 sections];
  id v24 = [v23 array];

  uint64_t v25 = sub_1000EA470();
  uint64_t v26 = sub_100084B00(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unsigned int v27 = sub_10003CF28((unint64_t)v26, (uint64_t)v22);
  uint64_t v106 = 0;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  sub_10003D16C(a1, (uint64_t)v17, type metadata accessor for AppearanceEvent);
  memset(v115, 0, sizeof(v115));
  char v116 = 1;
  uint64_t v28 = *(int *)(v15 + 28);
  uint64_t v98 = *(int *)(v15 + 32);
  uint64_t v29 = v17[v98];
  uint64_t v102 = v17;
  uint64_t v99 = v28;
  uint64_t v30 = v17[v28];
  uint64_t v101 = v19;
  uint64_t v31 = sub_10003B780((uint64_t)v115, v30, v29);
  if ([v3 respondsToSelector:"widgetDidAppearAtDate:withTrackableWidgetState:"])
  {
    swift_unknownObjectRetain();
    swift_retain();
    Class isa = sub_1000E8BD0().super.isa;
    [v3 widgetDidAppearAtDate:isa withTrackableWidgetState:v31];
    swift_release();
    swift_unknownObjectRelease();
  }
  v83[1] = v31;
  uint64_t v86 = (int *)type metadata accessor for Session();
  uint64_t v33 = *(void *)(a1 + v86[5]);
  uint64_t v92 = *(void *)(v33 + 16);
  if (!v92)
  {
    uint64_t v62 = (uint64_t)v96;
    uint64_t v63 = (uint64_t)v95;
    uint64_t v64 = (uint64_t)v94;
    goto LABEL_48;
  }
  uint64_t v91 = v33 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  uint64_t result = swift_bridgeObjectRetain();
  int v35 = 0;
  unint64_t v36 = 0;
  uint64_t v90 = (char *)&type metadata for Any + 8;
  uint64_t v87 = a1;
  unint64_t v37 = (unint64_t)v27;
  uint64_t v88 = v3;
  uint64_t v89 = v33;
  while (2)
  {
    if (v36 >= *(void *)(v33 + 16))
    {
LABEL_66:
      __break(1u);
      return result;
    }
    int v100 = v35;
    uint64_t v38 = *(void *)(v97 + 72);
    unint64_t v107 = v36;
    uint64_t v39 = v105;
    sub_10003D16C(v91 + v38 * v36, v105, type metadata accessor for VisibleRectChangedEvent);
    uint64_t v40 = (_OWORD *)(v39 + *(int *)(v93 + 20));
    long long v41 = v40[1];
    v113[0] = *v40;
    v113[1] = v41;
    char v114 = 0;
    uint64_t v42 = sub_10003B780((uint64_t)v113, v102[v99], v102[v98]);
    id v43 = *(id *)(v42 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_results);
    uint64_t v103 = v42;
    uint64_t v44 = sub_1000B6CB4();
    id v45 = [v43 sections];
    id v46 = [v45 array];

    uint64_t v47 = sub_1000EA470();
    uint64_t v48 = sub_100084B00(v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v49 = v106;
    unint64_t v50 = (unint64_t)sub_10003CF28((unint64_t)v48, (uint64_t)v44);
    uint64_t v106 = v49;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1000EA980();
      uint64_t v51 = result;
    }
    else
    {
      uint64_t v51 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
    }
    uint64_t v52 = v50 & 0xFFFFFFFFFFFFFF8;
    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1000EA980();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v53 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v54 = 0;
    unint64_t v55 = 0;
    ++v107;
    uint64_t v109 = v37 & 0xFFFFFFFFFFFFFF8;
    unint64_t v110 = v37 & 0xC000000000000001;
    unint64_t v104 = v37;
    uint64_t v108 = (void *)(v37 + 32);
    unint64_t v56 = v50;
    unint64_t v57 = v50 & 0xC000000000000001;
    while (v55 == v51)
    {
      unint64_t v58 = 0;
      uint64_t v59 = 0;
      unint64_t v55 = v51;
      unint64_t v37 = v56;
      if (v53 == v54) {
        goto LABEL_37;
      }
LABEL_21:
      if (v57)
      {
        uint64_t result = sub_1000EA870();
        uint64_t v59 = result;
        if (__OFADD__(v54, 1)) {
          goto LABEL_62;
        }
      }
      else
      {
        if (v54 >= *(void *)(v52 + 16))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        uint64_t v59 = *(void *)(v37 + 8 * v54 + 32);
        uint64_t result = swift_unknownObjectRetain();
        if (__OFADD__(v54, 1)) {
          goto LABEL_62;
        }
      }
      if (!v58) {
        goto LABEL_37;
      }
      if (!v59) {
        goto LABEL_35;
      }
      unsigned __int8 v61 = [v58 isEqual:v59];
      swift_unknownObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      ++v54;
      if ((v61 & 1) == 0)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v37 = v56;
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    if (v110)
    {
      uint64_t result = sub_1000EA870();
      unint64_t v58 = (void *)result;
      BOOL v60 = __OFADD__(v55++, 1);
      if (v60) {
        goto LABEL_65;
      }
    }
    else
    {
      if ((v55 & 0x8000000000000000) != 0) {
        goto LABEL_63;
      }
      if (v55 >= *(void *)(v109 + 16)) {
        goto LABEL_64;
      }
      unint64_t v58 = (void *)v108[v55];
      uint64_t result = swift_unknownObjectRetain();
      BOOL v60 = __OFADD__(v55++, 1);
      if (v60) {
        goto LABEL_65;
      }
    }
    unint64_t v37 = v56;
    if (v53 != v54) {
      goto LABEL_21;
    }
    if (v58)
    {
LABEL_35:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_38:
      swift_unknownObjectRelease();
LABEL_39:
      uint64_t v3 = v88;
      a1 = v87;
      uint64_t v62 = (uint64_t)v96;
      uint64_t v63 = (uint64_t)v95;
      uint64_t v64 = (uint64_t)v94;
      goto LABEL_40;
    }
    uint64_t v59 = 0;
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v59) {
      goto LABEL_38;
    }
    uint64_t v3 = v88;
    a1 = v87;
    uint64_t v62 = (uint64_t)v96;
    uint64_t v63 = (uint64_t)v95;
    uint64_t v64 = (uint64_t)v94;
    if (v100)
    {
LABEL_5:
      sub_10003D1D4(v105, type metadata accessor for VisibleRectChangedEvent);
      uint64_t result = swift_release();
      goto LABEL_6;
    }
LABEL_40:
    if (([v3 respondsToSelector:"visibleItemsDidChangeAtDate:withTriggerEvent:trackableWidgetState:"] & 1) == 0)goto LABEL_5; {
    swift_unknownObjectRetain();
    }
    uint64_t v65 = v103;
    swift_retain();
    uint64_t v66 = v105;
    Class v67 = sub_1000E8BD0().super.isa;
    [v3 visibleItemsDidChangeAtDate:v67 withTriggerEvent:5 trackableWidgetState:v65];
    swift_release_n();
    swift_unknownObjectRelease();

    uint64_t result = sub_10003D1D4(v66, type metadata accessor for VisibleRectChangedEvent);
LABEL_6:
    int v35 = 1;
    unint64_t v36 = v107;
    uint64_t v33 = v89;
    if (v107 != v92) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_48:
  swift_bridgeObjectRelease();
  sub_10002DA34(a1 + v86[6], v64, &qword_1001379B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83[0] + 48))(v64, 1, v85) == 1)
  {
    sub_100028B6C(v64, &qword_1001379B8);
  }
  else
  {
    sub_10003D09C(v64, v63, type metadata accessor for EngagementEvent);
    if ([v3 respondsToSelector:"userEngagedWithWidgetAtDate:actionURL:trackableWidgetState:"])
    {
      uint64_t v68 = v63 + *(int *)(v85 + 20);
      swift_retain();
      swift_unknownObjectRetain();
      v69.super.Class isa = sub_1000E8BD0().super.isa;
      sub_10002DA34(v68, v62, (uint64_t *)&unk_1001370F0);
      uint64_t v70 = sub_1000E8B60();
      uint64_t v71 = *(void *)(v70 - 8);
      uint64_t v73 = 0;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v62, 1, v70) != 1)
      {
        sub_1000E8AE0(v72);
        uint64_t v73 = v74;
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v62, v70);
      }
      [v3 userEngagedWithWidgetAtDate:v69.super.isa actionURL:v73 trackableWidgetState:v101];
      swift_unknownObjectRelease();
      swift_release();
    }
    sub_10003D1D4(v63, type metadata accessor for EngagementEvent);
  }
  char v112 = 0;
  memset(v111, 0, sizeof(v111));
  uint64_t v75 = sub_10003B780((uint64_t)v111, v102[v99], v102[v98]);
  if ([v3 respondsToSelector:"visibleItemsDidChangeAtDate:withTriggerEvent:trackableWidgetState:"])
  {
    uint64_t v76 = v84;
    sub_10003D16C(a1 + v86[7], v84, type metadata accessor for DisappearanceEvent);
    swift_unknownObjectRetain();
    Class v77 = sub_1000E8BD0().super.isa;
    [v3 visibleItemsDidChangeAtDate:v77 withTriggerEvent:4 trackableWidgetState:v75];
    swift_unknownObjectRelease();

    uint64_t v78 = sub_1000E8C50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v76, v78);
  }
  if ([v3 respondsToSelector:"widgetDidDisappearAtDate:withTrackableWidgetState:"])
  {
    uint64_t v79 = v84;
    sub_10003D16C(a1 + v86[7], v84, type metadata accessor for DisappearanceEvent);
    uint64_t v80 = v101;
    swift_retain();
    swift_unknownObjectRetain();
    Class v81 = sub_1000E8BD0().super.isa;
    [v3 widgetDidDisappearAtDate:v81 withTrackableWidgetState:v80];
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release_n();

    sub_10003D1D4((uint64_t)v102, type metadata accessor for AppearanceEvent);
    uint64_t v82 = sub_1000E8C50();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v79, v82);
  }
  else
  {
    sub_10003D1D4((uint64_t)v102, type metadata accessor for AppearanceEvent);
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10003B5B8(uint64_t (*a1)(void))
{
  sub_100022374(0, (unint64_t *)&qword_100138300);
  uint64_t v2 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();

  return a1();
}

uint64_t sub_10003B648(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10003B68C()
{
  return sub_1000E90A0();
}

void sub_10003B6F4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10003A56C(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_10003B700()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003B738()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10003B760()
{
  return sub_10003B5B8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10003B768(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003B778()
{
  return swift_release();
}

uint64_t sub_10003B780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v4 = sub_1000E8C50();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_entryID + 8);
  uint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_entryID);
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_results);
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_fetchInfo);
  sub_10003D16C(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentID + 8);
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType);
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentID);
  uint64_t v23 = v15;
  uint64_t v25 = v25;
  uint64_t v26 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v12;
  id v17 = v13;
  sub_1000E8C40();
  uint64_t v18 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentFetchDate, v7, v4);
  uint64_t v19 = (void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_entryID);
  *uint64_t v19 = v24;
  v19[1] = v11;
  *(void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_results) = v16;
  *(void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_fetchInfo) = v17;
  sub_10003D09C((uint64_t)v10, v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  uint64_t v20 = (void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentID);
  *uint64_t v20 = v22;
  v20[1] = v14;
  *(void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType) = v23;
  sub_10003D104(v27, v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_visibleRect);
  *(void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_stackKind) = v25;
  *(void *)(v18 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_stackLocation) = v26;
  return v18;
}

unint64_t sub_10003BA88(uint64_t a1)
{
  sub_1000EA930();
  uint64_t v2 = sub_1000EA1D0();

  return sub_10003BEF4(a1, v2);
}

unint64_t sub_10003BAEC(uint64_t a1, uint64_t a2)
{
  sub_1000EABB0();
  sub_1000EA330();
  Swift::Int v4 = sub_1000EABE0();

  return sub_10003C08C(a1, a2, v4);
}

unint64_t sub_10003BB68(uint64_t a1)
{
  sub_1000EA2B0();
  sub_1000EABB0();
  sub_1000EA330();
  Swift::Int v2 = sub_1000EABE0();
  swift_bridgeObjectRelease();
  return sub_10003C170(a1, v2);
}

unint64_t sub_10003BBF8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000EA700(*(void *)(v2 + 40));

  return sub_10003C2E8(a1, v4);
}

unint64_t sub_10003BC3C(uint64_t a1)
{
  uint64_t v2 = sub_1000E8B60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ImageStore.Key();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EABB0();
  sub_10003D16C(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1000EABC0(1uLL);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000EABC0(0);
    sub_100020E40((unint64_t *)&qword_100139090);
    sub_1000EA1E0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  Swift::Int v9 = sub_1000EABE0();
  return sub_10003C404(a1, v9);
}

unint64_t sub_10003BE2C(uint64_t a1)
{
  sub_1000E8B60();
  sub_100020E40((unint64_t *)&qword_100139090);
  uint64_t v2 = sub_1000EA1D0();

  return sub_10003C86C(a1, v2);
}

unint64_t sub_10003BEB0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000EA7F0(*(void *)(v2 + 40));

  return sub_10003CA18(a1, v4);
}

unint64_t sub_10003BEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1000EA930();
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1000EA240();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_10003C08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000EAB20() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000EAB20() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10003C170(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1000EA2B0();
    uint64_t v8 = v7;
    if (v6 == sub_1000EA2B0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1000EA2B0();
          uint64_t v15 = v14;
          if (v13 == sub_1000EA2B0() && v15 == v16) {
            break;
          }
          char v18 = sub_1000EAB20();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10003C2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100022374(0, (unint64_t *)&qword_1001371D0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1000EA710();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1000EA710();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10003C404(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v4 = sub_1000E8B60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v41 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v35 - v8;
  uint64_t v44 = sub_10001B38C((uint64_t *)&unk_1001379E0);
  __chkstk_darwin(v44);
  char v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ImageStore.Key() - 8;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v17 = (char *)&v35 - v16;
  uint64_t v46 = v2;
  char v18 = *(unsigned char *)(v2 + 32);
  uint64_t v19 = v2 + 64;
  uint64_t v20 = -1 << v18;
  unint64_t v21 = a2 & ~v20;
  if ((*(void *)(v19 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
  {
    uint64_t v22 = *(void *)(v15 + 72);
    uint64_t v42 = ~v20;
    uint64_t v43 = v22;
    uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    unint64_t v37 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v38 = v19;
    uint64_t v24 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v39 = v14;
    unint64_t v36 = v24;
    while (1)
    {
      sub_10003D16C(*(void *)(v46 + 48) + v43 * v21, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      uint64_t v25 = (uint64_t)&v10[*(int *)(v44 + 48)];
      sub_10003D16C((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      sub_10003D16C(v45, v25, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      uint64_t v26 = *v23;
      if ((*v23)(v10, 1, v4) == 1) {
        break;
      }
      sub_10003D16C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      if (v26((char *)v25, 1, v4) == 1)
      {
        (*v24)(v14, v4);
LABEL_4:
        sub_100028B6C((uint64_t)v10, (uint64_t *)&unk_1001379E0);
        sub_10003D1D4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
        goto LABEL_5;
      }
      uint64_t v27 = *v37;
      uint64_t v28 = v40;
      (*v37)(v40, v14, v4);
      uint64_t v29 = v41;
      v27(v41, (char *)v25, v4);
      uint64_t v24 = v36;
      char v30 = sub_1000E8B10();
      uint64_t v31 = *v24;
      char v32 = v29;
      uint64_t v14 = v39;
      (*v24)(v32, v4);
      uint64_t v33 = v28;
      uint64_t v19 = v38;
      v31(v33, v4);
      sub_10003D1D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      sub_10003D1D4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      if (v30) {
        return v21;
      }
LABEL_5:
      unint64_t v21 = (v21 + 1) & v42;
      if (((*(void *)(v19 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        return v21;
      }
    }
    if (v26((char *)v25, 1, v4) == 1)
    {
      sub_10003D1D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      sub_10003D1D4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      return v21;
    }
    goto LABEL_4;
  }
  return v21;
}

unint64_t sub_10003C86C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1000E8B60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_100020E40((unint64_t *)&qword_100139F70);
      char v15 = sub_1000EA240();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_10003CA18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10003D284(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1000EA800();
      sub_10003D2E0((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10003CAE0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1000EA980();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000EA980();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000EA880();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10003CD08(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, &qword_100137270, (unint64_t *)&unk_1001379D0, &qword_10013A670, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1000853BC);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1000EA980();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1000EA490();
}

uint64_t sub_10003CCD8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10003CD08(a1, a2, a3, &qword_1001379F0, (unint64_t *)&unk_100137A00, &qword_1001379F8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_100085428);
}

uint64_t sub_10003CD08(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000EA980();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000EA980();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10003D234(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_10001B38C(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_10001B38C(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

void *sub_10003CF28(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1000EA980())
  {
    unint64_t v15 = v3 & 0xC000000000000001;
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = v15 ? (id)sub_1000EA870() : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if (*(void *)(a2 + 16))
      {
        unint64_t v9 = v3;
        id v10 = v6;
        unint64_t v11 = sub_10003BBF8((uint64_t)v10);
        uint64_t v12 = _swiftEmptyArrayStorage;
        if (v13)
        {
          uint64_t v12 = *(void **)(*(void *)(a2 + 56) + 8 * v11);
          swift_bridgeObjectRetain();
        }

        unint64_t v3 = v9;
      }
      else
      {
        uint64_t v12 = _swiftEmptyArrayStorage;
      }

      sub_10003CAE0((unint64_t)v12);
      ++v5;
      if (v8 == v4) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10003D09C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003D104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C((uint64_t *)&unk_1001379C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003D16C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003D1D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003D234(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003D284(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003D2E0(uint64_t a1)
{
  return a1;
}

unint64_t sub_10003D338(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10003D4B0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    id v10 = (void *)(a1 + v9);
    unint64_t v11 = (void *)(a2 + v9);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    uint64_t v17 = *(void **)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    char v19 = *(unsigned char *)(v16 + 16);
    sub_10003D4BC(*(void **)v16, v18, v19);
    *(void *)uint64_t v15 = v17;
    *(void *)(v15 + 8) = v18;
    *(unsigned char *)(v15 + 16) = v19;
    *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_10003D4B0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

id sub_10003D4BC(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_10003D4CC(uint64_t a1, uint64_t a2)
{
  sub_10003D590(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void **)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  char v9 = *(unsigned char *)(v6 + 16);

  sub_10003D59C(v7, v8, v9);
}

uint64_t sub_10003D590(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void sub_10003D59C(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10003D5AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10003D4B0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  char v9 = (void *)(a1 + v8);
  id v10 = (void *)(a2 + v8);
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *char v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void **)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  char v17 = *(unsigned char *)(v14 + 16);
  sub_10003D4BC(*(void **)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *(void *)(v13 + 8) = v16;
  *(unsigned char *)(v13 + 16) = v17;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10003D6D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10003D4B0(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10003D590(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_10003D834(a1 + v10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  char v17 = *(void **)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  char v19 = *(unsigned char *)(v16 + 16);
  sub_10003D4BC(*(void **)v16, v18, v19);
  uint64_t v20 = *(void **)v15;
  uint64_t v21 = *(void *)(v15 + 8);
  char v22 = *(unsigned char *)(v15 + 16);
  *(void *)uint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(unsigned char *)(v15 + 16) = v19;
  sub_10003D59C(v20, v21, v22);
  uint64_t v23 = a3[7];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_10003D834(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C(&qword_100137A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003D894(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000E9F90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_10003D9A4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10003D590(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_10003D834(a1 + v10);
    uint64_t v13 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000E9F90();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t)a2 + v15;
  char v18 = *(unsigned char *)(v17 + 16);
  char v19 = *(void **)v16;
  uint64_t v20 = *(void *)(v16 + 8);
  char v21 = *(unsigned char *)(v16 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = v18;
  sub_10003D59C(v19, v20, v21);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_10003DAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003DAF4);
}

uint64_t sub_10003DAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10001B38C(&qword_100137A18);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10003DBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003DBB4);
}

uint64_t sub_10003DBB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_10001B38C(&qword_100137A18);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SourceView()
{
  uint64_t result = qword_100137A78;
  if (!qword_100137A78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003DCA8()
{
  sub_10003DD54();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10003DD54()
{
  if (!qword_100137A88)
  {
    sub_1000E9F90();
    unint64_t v0 = sub_1000E92A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100137A88);
    }
  }
}

uint64_t sub_10003DDAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003DDC8()
{
  uint64_t v1 = sub_1000E9F90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for SourceView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v0;
  char v12 = *(unsigned char *)(v0 + 8);
  sub_10003D4B0(*(void *)v0, v12);
  char v13 = sub_10007D650(v11, v12);
  sub_10003D590(v11, v12);
  sub_10003E560(v0, (uint64_t)v10);
  if (v13)
  {
    sub_10003E5C4((uint64_t)v10);
    char v14 = 0;
  }
  else
  {
    sub_10007D854((uint64_t)v7);
    sub_1000E9F80();
    char v15 = sub_1000E9F70();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
    v16(v5, v1);
    v16(v7, v1);
    sub_10003E5C4((uint64_t)v10);
    char v14 = v15 ^ 1;
  }
  return v14 & 1;
}

void sub_10003DFA0(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000E9C60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SourceView();
  uint64_t v9 = v2 + *(int *)(v8 + 24);
  uint64_t v11 = *(void **)v9;
  uint64_t v10 = *(void *)(v9 + 8);
  if (*(unsigned char *)(v9 + 16))
  {
    id v12 = v11;
    sub_1000E9C50();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v13 = sub_1000E9CC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10003DDC8();
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v38 = (void *)v13;
    uint64_t v39 = 0;
    __int16 v40 = 1;
    uint64_t v41 = v46;
    LOBYTE(v42) = v47;
    uint64_t v43 = v48;
    char v44 = v49;
    long long v45 = v50;
    sub_10001B38C(&qword_100137AC0);
    sub_10003E390();
    uint64_t v14 = sub_1000E9D10();
    sub_10003D59C(v11, v10, 1);
  }
  else
  {
    uint64_t v38 = *(void **)v9;
    uint64_t v39 = v10;
    sub_1000295C0();
    uint64_t v15 = sub_1000EA770();
    v37[1] = v16;
    uint64_t v38 = (void *)v15;
    uint64_t v39 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1000E9A50();
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    id v22 = [self systemFontOfSize:*(double *)(v2 + *(int *)(v8 + 28) + 8) weight:UIFontWeightBlack];
    sub_1000E9930();
    uint64_t v23 = sub_1000E99C0();
    uint64_t v25 = v24;
    uint64_t v26 = a1;
    char v28 = v27;
    swift_release();
    char v29 = v28 & 1;
    a1 = v26;
    sub_100026FDC(v17, v19, v21);
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1000E99E0();
    uint64_t v32 = v31;
    LOBYTE(v19) = v33;
    uint64_t v35 = v34;
    sub_100026FDC(v23, v25, v29);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)v30;
    uint64_t v39 = v32;
    LOBYTE(v40) = v19 & 1;
    uint64_t v41 = v35;
    uint64_t v42 = KeyPath;
    uint64_t v43 = 1;
    char v44 = 0;
    sub_10001B38C(&qword_100137AE0);
    sub_10003E488();
    uint64_t v14 = sub_1000E9D10();
  }
  *a1 = v14;
}

void sub_10003E358(void *a1@<X8>)
{
  sub_10003DFA0(&v2);
  *a1 = v2;
}

unint64_t sub_10003E390()
{
  unint64_t result = qword_100137AC8;
  if (!qword_100137AC8)
  {
    sub_10001B3D0(&qword_100137AC0);
    sub_10003E40C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137AC8);
  }
  return result;
}

unint64_t sub_10003E40C()
{
  unint64_t result = qword_100137AD0;
  if (!qword_100137AD0)
  {
    sub_10001B3D0(&qword_100137AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137AD0);
  }
  return result;
}

unint64_t sub_10003E488()
{
  unint64_t result = qword_100137AE8;
  if (!qword_100137AE8)
  {
    sub_10001B3D0(&qword_100137AE0);
    sub_10003E504();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137AE8);
  }
  return result;
}

unint64_t sub_10003E504()
{
  unint64_t result = qword_100137AF0;
  if (!qword_100137AF0)
  {
    sub_10001B3D0(&qword_100137AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137AF0);
  }
  return result;
}

uint64_t sub_10003E560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SourceView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003E5C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SourceView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for SourceViewModel(uint64_t a1)
{
}

uint64_t _s10NewsToday215SourceViewModelOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10003D4BC(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SourceViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10003D4BC(*(void **)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10003D59C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SourceViewModel(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10003D59C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SourceViewModel()
{
  return &type metadata for SourceViewModel;
}

ValueMetadata *type metadata accessor for SourceView.LayoutOptions()
{
  return &type metadata for SourceView.LayoutOptions;
}

void *sub_10003E740()
{
  return &protocol witness table for AnyView;
}

unint64_t sub_10003E750()
{
  unint64_t result = qword_100137B10;
  if (!qword_100137B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B10);
  }
  return result;
}

uint64_t sub_10003E7A4()
{
  return sub_10001D100(&qword_100137B18, &qword_100137B20);
}

uint64_t sub_10003E7E0()
{
  uint64_t v0 = sub_10001B38C(&qword_100137B60);
  sub_10001C500(v0, qword_10014BA48);
  sub_10001C4C8(v0, (uint64_t)qword_10014BA48);
  sub_100040240();
  return sub_1000E8840();
}

uint64_t sub_10003E85C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_10003E9A0, 0, 0);
}

uint64_t sub_10003E9A0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100137B20);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_100137BF0, &qword_100137BF8);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10003EB44()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014BA60);
  sub_10001C4C8(v10, (uint64_t)qword_10014BA60);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_10003EE1C()
{
  uint64_t v0 = sub_10001B38C(&qword_100137BD0);
  sub_10001C500(v0, qword_10014BA78);
  sub_10001C4C8(v0, (uint64_t)qword_10014BA78);
  sub_10003FCE4();
  return sub_1000E88B0();
}

uint64_t sub_10003EE98()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_10003F0D4()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014BA90);
  sub_10001C4C8(v0, (uint64_t)qword_10014BA90);
  return sub_1000E8A50();
}

uint64_t sub_10003F138()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014BAA8);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014BAA8);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10003F1F0()
{
  uint64_t result = swift_getKeyPath();
  qword_10014BAC0 = result;
  return result;
}

uint64_t sub_10003F218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10003F23C, 0, 0);
}

uint64_t sub_10003F23C()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BAC0;
  *(void *)(v0 + 80) = qword_10014BAC0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_100137BF0, &qword_100137BF8);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_10003F398;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10003F398()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_10003F4EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10003F4EC()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014BAC0;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10003F5C8()
{
  if (qword_100135CC0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10003F628()
{
  unint64_t result = qword_100137B28;
  if (!qword_100137B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B28);
  }
  return result;
}

unint64_t sub_10003F680()
{
  unint64_t result = qword_100137B30;
  if (!qword_100137B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B30);
  }
  return result;
}

uint64_t sub_10003F6D4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10003F708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003F758@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135CB0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014BA90, a1);
}

uint64_t sub_10003F790@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135CB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BAA8);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_10003F80C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10003F23C, 0, 0);
}

uint64_t sub_10003F8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000408D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10003F8E8()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_10003F908()
{
  unint64_t result = qword_100137B40;
  if (!qword_100137B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B40);
  }
  return result;
}

unint64_t sub_10003F960()
{
  unint64_t result = qword_100137B48;
  if (!qword_100137B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B48);
  }
  return result;
}

unint64_t sub_10003F9B8()
{
  unint64_t result = qword_100137B50;
  if (!qword_100137B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B50);
  }
  return result;
}

uint64_t sub_10003FA0C()
{
  return sub_10001D100(&qword_100137B58, &qword_100137B60);
}

uint64_t sub_10003FA48(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10003FA68, 0, 0);
}

uint64_t sub_10003FA68()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003FB44(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 17) = *a2;
  return _swift_task_switch(sub_10003FB68, 0, 0);
}

uint64_t sub_10003FB68()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 17);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10001C620();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003FCB4@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135C98, &qword_100137B60, (uint64_t)qword_10014BA48, a1);
}

unint64_t sub_10003FCE4()
{
  unint64_t result = qword_100137B68;
  if (!qword_100137B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B68);
  }
  return result;
}

uint64_t sub_10003FD38()
{
  return sub_10001D100(&qword_100137B70, &qword_100137B60);
}

uint64_t sub_10003FD74()
{
  uint64_t v0 = qword_100137B00;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10003FDB0()
{
  unint64_t result = qword_100137B78;
  if (!qword_100137B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B78);
  }
  return result;
}

uint64_t sub_10003FE04@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135CA8, &qword_100137BD0, (uint64_t)qword_10014BA78, a1);
}

unint64_t sub_10003FE34()
{
  unint64_t result = qword_100137B80;
  if (!qword_100137B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B80);
  }
  return result;
}

unint64_t sub_10003FE8C()
{
  unint64_t result = qword_100137B88;
  if (!qword_100137B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B88);
  }
  return result;
}

unint64_t sub_10003FEE4()
{
  unint64_t result = qword_100137B90;
  if (!qword_100137B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B90);
  }
  return result;
}

unint64_t sub_10003FF3C()
{
  unint64_t result = qword_100137B98;
  if (!qword_100137B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137B98);
  }
  return result;
}

uint64_t sub_10003FF90@<X0>(uint64_t *a1@<X8>)
{
  sub_100040240();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10003FFD0()
{
  sub_1000401EC();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_100040064@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135CA0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014BA60, a1);
}

uint64_t sub_10004009C()
{
  return sub_10001D100(&qword_100137BA8, &qword_100137BB0);
}

uint64_t sub_1000400D8(uint64_t a1)
{
  unint64_t v2 = sub_10003FCE4();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100040128()
{
  unint64_t result = qword_100137BB8;
  if (!qword_100137BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137BB8);
  }
  return result;
}

uint64_t sub_100040180(uint64_t a1)
{
  unint64_t v2 = sub_10003FF3C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AutoDownloadPuzzlesEntity()
{
  return &type metadata for AutoDownloadPuzzlesEntity;
}

ValueMetadata *type metadata accessor for AutoDownloadPuzzlesEntity.UpdateIntent_value()
{
  return &type metadata for AutoDownloadPuzzlesEntity.UpdateIntent_value;
}

unint64_t sub_1000401EC()
{
  unint64_t result = qword_100137BC0;
  if (!qword_100137BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137BC0);
  }
  return result;
}

unint64_t sub_100040240()
{
  unint64_t result = qword_100137BC8;
  if (!qword_100137BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137BC8);
  }
  return result;
}

uint64_t sub_100040294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136618);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_100040240();
  uint64_t v11 = sub_10001B3D0(&qword_100136628);
  uint64_t v12 = sub_1000E9740();
  uint64_t v13 = sub_10001D100(&qword_100136630, &qword_100136628);
  unint64_t v14 = sub_1000397BC();
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  unint64_t v28 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v15 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  uint64_t v25 = v1;
  uint64_t v26 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  uint64_t v25 = v4;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v22;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v17);
}

uint64_t sub_1000406D4()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_1000397BC();
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000408D0()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_100137C00);
  sub_1000E8A50();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10003FCE4();
  uint64_t v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

uint64_t sub_100040D10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for AutoDownloadPuzzlesToggleControl()
{
  return &type metadata for AutoDownloadPuzzlesToggleControl;
}

uint64_t sub_100040D2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100040D48()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100040E38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D80);
  unint64_t result = (void *)sub_1000E8EC0();
  if (!v22)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100137D70);
  unint64_t result = (void *)sub_1000E8EB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = (uint64_t)result;
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D58);
  unint64_t result = (void *)sub_1000E8EB0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = (uint64_t)result;
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, (unint64_t *)&unk_100137DA0);
  unint64_t result = (void *)sub_1000E8EB0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = (uint64_t)result;
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D90);
  unint64_t result = (void *)sub_1000E8EC0();
  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100137D60);
  unint64_t result = (void *)sub_1000E8E90();
  if (result)
  {
    uint64_t v8 = result;
    id v9 = [result nonVideoContentEventTracker];

    uint64_t v10 = sub_10003A4C0((uint64_t)v21, v22);
    __chkstk_darwin(v10);
    uint64_t v12 = (uint64_t *)&v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *))(v13 + 16))(v12);
    uint64_t v14 = sub_10003A4C0((uint64_t)v19, v20);
    __chkstk_darwin(v14);
    uint64_t v16 = (uint64_t *)&v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    uint64_t v18 = sub_1000440A4(*v12, v5, v6, v7, *v16, (uint64_t)v9);
    sub_100020AC0((uint64_t)v19);
    sub_100020AC0((uint64_t)v21);
    unint64_t result = (void *)type metadata accessor for ContentService();
    a2[3] = result;
    a2[4] = &off_100126658;
    *a2 = v18;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1000411D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137CA8);
  uint64_t result = sub_1000E8EC0();
  if (v19)
  {
    uint64_t v4 = sub_10003A4C0((uint64_t)v18, v19);
    __chkstk_darwin(v4);
    uint64_t v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = type metadata accessor for ContentService();
    v17[3] = v9;
    v17[4] = &off_100126658;
    v17[0] = v8;
    uint64_t v10 = type metadata accessor for EntryService();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = sub_10003A4C0((uint64_t)v17, v9);
    __chkstk_darwin(v12);
    uint64_t v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_100126658;
    v11[2] = v16;
    sub_100020AC0((uint64_t)v17);
    uint64_t result = sub_100020AC0((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_100126F70;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000413EC(void *a1)
{
  sub_100020A28(a1, a1[3]);
  type metadata accessor for FeedPersonalizerFactory();
  uint64_t result = sub_1000E8EB0();
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_100041440()
{
  id v0 = [self widgetEventTrackerWithMaxRowCount:10];

  return v0;
}

id sub_10004148C()
{
  id v0 = objc_allocWithZone((Class)FTNewsAnalyticsUserIDWidgetEventTracker);

  return [v0 init];
}

uint64_t sub_1000414C4(void *a1)
{
  sub_10001B38C(&qword_1001390C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000F15A0;
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100137D68);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    *(void *)(v2 + 32) = result;
    sub_1000EA490();
    id v4 = objc_allocWithZone((Class)FTAggregateWidgetEventTracker);
    sub_10001B38C((uint64_t *)&unk_100137DD0);
    Class isa = sub_1000EA460().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithEventTrackers:isa];

    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000415C8(void *a1)
{
  return sub_1000415DC(a1, (unint64_t *)&unk_100137CC8);
}

uint64_t sub_1000415DC(void *a1, unint64_t *a2)
{
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, a2);
  uint64_t result = sub_1000E8EB0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004164C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D90);
  uint64_t result = sub_1000E8EC0();
  if (v19)
  {
    uint64_t v4 = sub_10003A4C0((uint64_t)v18, v19);
    __chkstk_darwin(v4);
    id v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = type metadata accessor for WidgetAssetStore();
    v17[3] = v9;
    v17[4] = &off_1001256B0;
    v17[0] = v8;
    uint64_t v10 = type metadata accessor for EntryStore();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = sub_10003A4C0((uint64_t)v17, v9);
    __chkstk_darwin(v12);
    uint64_t v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1001256B0;
    v11[2] = v16;
    v11[7] = 0x7972746E65;
    v11[8] = 0xE500000000000000;
    sub_100020AC0((uint64_t)v17);
    uint64_t result = sub_100020AC0((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_1001252B8;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10004187C(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D40);
  id result = (id)sub_1000E8EC0();
  if (v9 == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100020A28(a1, a1[3]);
    type metadata accessor for FCFeedPersonalizationConfigurationSet(0);
    id result = (id)sub_1000E8EC0();
    if ((v8 & 1) == 0)
    {
      uint64_t v3 = v7;
      uint64_t v4 = (objc_class *)type metadata accessor for FeedPersonalizerFactory();
      uint64_t v5 = (char *)objc_allocWithZone(v4);
      *(void *)&v5[OBJC_IVAR____TtC10NewsToday223FeedPersonalizerFactory_translationProvider] = v9;
      *(void *)&v5[OBJC_IVAR____TtC10NewsToday223FeedPersonalizerFactory_configurationSet] = v3;
      v6.receiver = v5;
      v6.super_class = v4;
      return [super init];
    }
  }
  __break(1u);
  return result;
}

void *sub_100041970@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D48);
  id result = (void *)sub_1000E8EB0();
  if (result)
  {
    id v4 = [result possiblyUnfetchedTranslationProvider];
    id result = (void *)swift_unknownObjectRelease();
    *a2 = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000419F4(void *a1)
{
  return sub_1000415DC(a1, &qword_100137D50);
}

uint64_t sub_100041A08(void *a1)
{
  return sub_100041A74(a1, (uint64_t *)&unk_100137DC0, (Class *)FCTranslationManager_ptr, (SEL *)&selRef_initWithContentContext_);
}

uint64_t sub_100041A24()
{
  type metadata accessor for ImageJoeColorAnalyzer();

  return swift_allocObject();
}

uint64_t sub_100041A58(void *a1)
{
  return sub_100041A74(a1, &qword_100137890, (Class *)off_1001224F8, (SEL *)&selRef_initWithUserIDProvider_);
}

uint64_t sub_100041A74(void *a1, uint64_t *a2, Class *a3, SEL *a4)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(a2);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    id v8 = [objc_allocWithZone(*a3) *a4 result];
    swift_unknownObjectRelease();
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100041B08(void *a1)
{
  uint64_t v2 = sub_1000E8B60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D78);
  uint64_t v9 = sub_1000E8EB0();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  id v11 = (id)FCURLForContainerizedUserAccountDocumentDirectory();
  if (!v11)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  uint64_t v12 = v11;
  sub_1000E8B20();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {
    id v14 = objc_allocWithZone((Class)FTSeenHeadlineWidgetEventTracker);
    sub_1000E8AE0(v15);
    uint64_t v17 = v16;
    id v18 = [v14 initWithTodayEventTracker:v10 documentsDirectory:v16];
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return (uint64_t)v18;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100041D54(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100137D88);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = [objc_allocWithZone((Class)FTEngagementURLProvider) initWithAvailabilityMonitor:result];

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100041DE4(void *a1)
{
  return sub_1000415DC(a1, &qword_100137DB8);
}

uint64_t sub_100041DF8(void *a1, void *a2)
{
  sub_100020A28(a2, a2[3]);
  sub_10001B38C(&qword_100137DB0);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_100020A28(a1, a1[3]);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    uint64_t v7 = *v5;
    uint64_t v8 = *(void *)(*v5 + 16);
    *(void *)(v7 + 16) = sub_100045234;
    *(void *)(v7 + 24) = v6;
    return sub_100034914(v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100041EB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  if (a3) {
    uint64_t v9 = sub_1000E8A30();
  }
  else {
    uint64_t v9 = 0;
  }
  id v10 = (id)v9;
  [a4 widgetPerformedUpdateWithTodayResults:a1, a2, a5];
}

void sub_100041F44(void *a1)
{
  void v3[4] = TodayIntentResponseCode.rawValue.getter;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100041FEC;
  v3[3] = &unk_100125CB0;
  uint64_t v2 = _Block_copy(v3);
  [a1 fetchTranslationProvider:v2];
  _Block_release(v2);
}

uint64_t sub_100041FEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_10004206C()
{
  id v0 = objc_allocWithZone((Class)FCNewsAvailabilityMonitor);

  return [v0 initWithProcessVariant:0];
}

uint64_t sub_1000420A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1000E8B60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137D98);
  sub_1000E8EC0();
  if (!v31)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v11 = [self mainBundle];
  id v12 = [v11 bundleIdentifier];

  id v13 = (id)FCURLForWidgetReferralItems();
  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    goto LABEL_7;
  }
  sub_1000E8B20();

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (result != 1)
  {
    uint64_t v15 = sub_10003A4C0((uint64_t)v30, v31);
    __chkstk_darwin(v15);
    uint64_t v17 = (void *)((char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    uint64_t v19 = *v17;
    uint64_t v28 = sub_1000EA050();
    uint64_t v29 = &off_100127650;
    v27[0] = v19;
    uint64_t v20 = (objc_class *)type metadata accessor for WidgetAssetStore();
    uint64_t v21 = (char *)objc_allocWithZone(v20);
    uint64_t v22 = sub_10003A4C0((uint64_t)v27, v28);
    __chkstk_darwin(v22);
    uint64_t v24 = (void *)((char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v25 + 16))(v24);
    id v26 = sub_100043BB4(*v24, (uint64_t)v10, v21);
    sub_100020AC0((uint64_t)v27);
    uint64_t result = sub_100020AC0((uint64_t)v30);
    a2[3] = v20;
    a2[4] = &off_1001256B0;
    *a2 = v26;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100042488@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000EA050();
  uint64_t result = sub_1000EA040();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100127650;
  *a1 = result;
  return result;
}

id sub_1000424C8()
{
  id v0 = objc_allocWithZone((Class)FTContentPrefetchManager);

  return [v0 init];
}

uint64_t type metadata accessor for WidgetServiceAssembly()
{
  return self;
}

uint64_t sub_100042528(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1000EABB0();
  swift_bridgeObjectRetain();
  sub_1000EA330();
  Swift::Int v8 = sub_1000EABE0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    id v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1000EAB20() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1000EAB20() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100042EF8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1000426D8(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  sub_1000EA2B0();
  sub_1000EABB0();
  swift_bridgeObjectRetain();
  sub_1000EA330();
  Swift::Int v7 = sub_1000EABE0();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    void *v3 = 0x8000000000000000;
    id v24 = a2;
    sub_100043094((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    void *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_1000EA2B0();
  uint64_t v12 = v11;
  if (v10 == sub_1000EA2B0() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_1000EA2B0();
        uint64_t v19 = v18;
        if (v17 == sub_1000EA2B0() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_1000EAB20();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  id v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_100042904()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001B38C(&qword_1001373D0);
  uint64_t v3 = sub_1000EA820();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1000EABB0();
      sub_1000EA330();
      uint64_t result = sub_1000EABE0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100042BE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001B38C((uint64_t *)&unk_100137DE0);
  uint64_t v3 = sub_1000EA820();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    BOOL v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_1000EA2B0();
      sub_1000EABB0();
      sub_1000EA330();
      Swift::Int v18 = sub_1000EABE0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

Swift::Int sub_100042EF8(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100042904();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1000432C4();
      goto LABEL_22;
    }
    sub_100043624();
  }
  uint64_t v11 = *v4;
  sub_1000EABB0();
  sub_1000EA330();
  uint64_t result = sub_1000EABE0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1000EAB20(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1000EAB40();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        Swift::Int v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1000EAB20();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_100043094(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_100042BE4();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_100043478();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1000438D4();
  }
  uint64_t v9 = *v3;
  sub_1000EA2B0();
  sub_1000EABB0();
  sub_1000EA330();
  Swift::Int v10 = sub_1000EABE0();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_1000EA2B0();
  uint64_t v14 = v13;
  if (v12 == sub_1000EA2B0() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_1000EAB20();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_1000EA2B0();
      uint64_t v21 = v20;
      if (v19 == sub_1000EA2B0() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_1000EAB20();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for URLResourceKey(0);
  uint64_t result = sub_1000EAB40();
  __break(1u);
  return result;
}

void *sub_1000432C4()
{
  uint64_t v1 = v0;
  sub_10001B38C(&qword_1001373D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000EA810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100043478()
{
  uint64_t v1 = v0;
  sub_10001B38C((uint64_t *)&unk_100137DE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000EA810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    char v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100043624()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001B38C(&qword_1001373D0);
  uint64_t v3 = sub_1000EA820();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1000EABB0();
    swift_bridgeObjectRetain();
    sub_1000EA330();
    uint64_t result = sub_1000EABE0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000438D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001B38C((uint64_t *)&unk_100137DE0);
  uint64_t v3 = sub_1000EA820();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_1000EA2B0();
    sub_1000EABB0();
    id v18 = v17;
    sub_1000EA330();
    Swift::Int v19 = sub_1000EABE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_100043BB4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_1000E8E30();
  __chkstk_darwin(v6 - 8);
  _OWORD v46[3] = sub_1000EA050();
  _OWORD v46[4] = &off_100127650;
  v46[0] = a1;
  *(void *)&a3[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore____lazy_storage___pruneThrottler] = 0;
  uint64_t v7 = OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_lock;
  uint64_t v8 = a3;
  sub_1000E8E20();
  sub_1000E8E50();
  swift_allocObject();
  *(void *)&a3[v7] = sub_1000E8E40();
  sub_10002D970((uint64_t)v46, (uint64_t)&v8[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_infoService]);
  uint64_t v9 = &v8[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_directoryUrl];
  uint64_t v10 = sub_1000E8B60();
  uint64_t v42 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v9, a2, v10);
  id v11 = [self defaultManager];
  sub_1000E8AE0(v12);
  int64_t v14 = v13;
  v45[0] = 0;
  unsigned int v15 = [v11 createDirectoryAtURL:v13 withIntermediateDirectories:1 attributes:0 error:v45];

  if (v15)
  {
    id v16 = v45[0];
  }
  else
  {
    id v17 = v45[0];
    sub_1000E8A40();

    swift_willThrow();
    id v18 = (void *)sub_1000E8A30();
    id v19 = [v18 code];

    if (v19 == (id)516)
    {
      swift_errorRelease();
    }
    else
    {
      id v20 = PrefetchLog();
      sub_1000EA600();
      sub_10001B38C(&qword_100137370);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1000F1610;
      sub_10004523C((unint64_t *)&unk_100137390, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v22 = sub_1000EAB10();
      char v23 = v8;
      uint64_t v24 = v10;
      uint64_t v26 = v25;
      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_1000263E0();
      *(void *)(v21 + 32) = v22;
      *(void *)(v21 + 40) = v26;
      uint64_t v10 = v24;
      uint64_t v8 = v23;
      sub_1000E9220();
      swift_errorRelease();

      swift_bridgeObjectRelease();
    }
  }
  BOOL v27 = sub_10002E4DC();
  uint64_t v28 = sub_100044384((uint64_t)v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = a2;
  *(void *)&v8[OBJC_IVAR____TtC10NewsToday216WidgetAssetStore_keysOfInterest] = v28;
  id v30 = PrefetchLog();
  sub_1000EA5F0();
  sub_10001B38C(&qword_100137370);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1000F1E20;
  sub_10004523C((unint64_t *)&unk_100137390, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v32 = sub_1000EAB10();
  uint64_t v34 = v33;
  *(void *)(v31 + 56) = &type metadata for String;
  uint64_t v35 = v10;
  unint64_t v36 = sub_1000263E0();
  *(void *)(v31 + 64) = v36;
  *(void *)(v31 + 32) = v32;
  *(void *)(v31 + 40) = v34;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1000EA5B0();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();

  *(void *)(v31 + 96) = &type metadata for String;
  *(void *)(v31 + 104) = v36;
  *(void *)(v31 + 72) = v37;
  *(void *)(v31 + 80) = v39;
  sub_1000E9220();

  swift_bridgeObjectRelease();
  v44.receiver = v8;
  v44.super_class = ObjectType;
  id v40 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v29, v35);
  sub_100020AC0((uint64_t)v46);
  return v40;
}

void *sub_1000440A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for NTTodayContextResultsService();
  _OWORD v29[3] = v12;
  _OWORD v29[4] = &off_100125750;
  v29[0] = a1;
  uint64_t v13 = type metadata accessor for WidgetAssetStore();
  uint64_t v27 = v13;
  uint64_t v28 = &off_1001256B0;
  v26[0] = a5;
  type metadata accessor for ContentService();
  int64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = sub_10003A4C0((uint64_t)v29, v12);
  __chkstk_darwin(v15);
  id v17 = (void *)((char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = sub_10003A4C0((uint64_t)v26, v27);
  __chkstk_darwin(v19);
  uint64_t v21 = (void *)((char *)v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = *v17;
  uint64_t v24 = *v21;
  v14[7] = v12;
  v14[8] = &off_100125750;
  v14[4] = v23;
  v14[15] = v13;
  v14[16] = &off_1001256B0;
  v14[17] = a6;
  v14[2] = 0;
  v14[3] = 0;
  v14[9] = a2;
  v14[10] = a3;
  v14[11] = a4;
  v14[12] = v24;
  sub_100020AC0((uint64_t)v26);
  sub_100020AC0((uint64_t)v29);
  return v14;
}

uint64_t sub_1000442C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for URLResourceKey(0);
  sub_10004523C(&qword_1001365C0, type metadata accessor for URLResourceKey);
  uint64_t result = sub_1000EA5C0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1000426D8(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100044384(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1000EA5C0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100042528(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10004441C(uint64_t a1)
{
  uint64_t v39 = sub_1000E8EE0();
  uint64_t v41 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000E9020();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8F10();
  sub_10001B38C(&qword_100137CA8);
  sub_1000E8FB0();
  swift_release();
  swift_release();
  sub_1000E8F10();
  sub_10001B38C(&qword_100137CB0);
  sub_1000E8FB0();
  swift_release();
  uint64_t v7 = enum case for Scope.singleton(_:);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  unsigned int v40 = enum case for Scope.singleton(_:);
  v8(v6, enum case for Scope.singleton(_:), v3);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  uint64_t v42 = v9;
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_100137CB8);
  sub_1000E8FA0();
  swift_release();
  v8(v6, v7, v3);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v10 = v3;
  v9(v6, v3);
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_100137900);
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F10();
  sub_100022374(0, (unint64_t *)&unk_100137CC8);
  sub_1000E8FA0();
  swift_release();
  uint64_t v11 = v40;
  v8(v6, v40, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v12 = v42;
  v42(v6, v10);
  sub_1000E8F10();
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F10();
  sub_10001B38C(&qword_100137890);
  sub_1000E8FA0();
  swift_release();
  v8(v6, v11, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v12(v6, v10);
  sub_1000E8F10();
  sub_10001B38C(&qword_100137CD8);
  sub_1000E8FB0();
  swift_release();
  v8(v6, v11, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v12(v6, v10);
  uint64_t v13 = a1;
  sub_1000E8F20();
  type metadata accessor for FeedPersonalizerFactory();
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F20();
  sub_10001B38C(&qword_100137D40);
  sub_1000E8FB0();
  swift_release();
  uint64_t v14 = v11;
  v8(v6, v11, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v15 = v42;
  v42(v6, v10);
  sub_1000E8F20();
  uint64_t v37 = sub_10001B38C(&qword_100137D48);
  sub_1000E8FA0();
  swift_release();
  v8(v6, v14, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v15(v6, v10);
  uint64_t v16 = v15;
  sub_1000E8F20();
  sub_100022374(0, &qword_100137D50);
  sub_1000E8FA0();
  swift_release();
  uint64_t v17 = v40;
  v8(v6, v40, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v16(v6, v10);
  sub_1000E8F20();
  sub_10001B38C(&qword_100137D58);
  sub_1000E8FA0();
  swift_release();
  v8(v6, v17, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v18 = v42;
  v42(v6, v10);
  sub_1000E8F20();
  sub_100022374(0, &qword_100137D60);
  sub_1000E8FA0();
  swift_release();
  v8(v6, v17, v10);
  uint64_t v34 = v8;
  uint64_t v35 = v4 + 104;
  sub_1000E8E10();
  swift_release();
  swift_release();
  v18(v6, v10);
  uint64_t v36 = v4 + 8;
  sub_1000E8F20();
  sub_100022374(0, &qword_100137D68);
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F20();
  sub_100022374(0, &qword_100137D70);
  sub_1000E8FA0();
  swift_release();
  uint64_t v33 = v10;
  v8(v6, v17, v10);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v18(v6, v10);
  uint64_t v32 = v13;
  sub_1000E8F20();
  sub_10001B38C(&qword_100137D78);
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F30();
  sub_100020A28(v43, v44);
  sub_10001B38C(&qword_100137D80);
  uint64_t v19 = enum case for CallbackScope.any(_:);
  uint64_t v20 = v41;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 104);
  uint64_t v21 = v38;
  uint64_t v22 = v39;
  v31(v38, enum case for CallbackScope.any(_:), v39);
  sub_1000E8FD0();
  uint64_t v23 = v20 + 8;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v41 = v23;
  v24(v21, v22);
  sub_100020AC0((uint64_t)v43);
  sub_1000E8F30();
  sub_100020A28(v43, v44);
  v31(v21, v19, v22);
  sub_1000E8FC0();
  v24(v21, v22);
  sub_100020AC0((uint64_t)v43);
  sub_1000E8F20();
  sub_100022374(0, &qword_100137D88);
  sub_1000E8FA0();
  swift_release();
  uint64_t v25 = v40;
  uint64_t v26 = v33;
  uint64_t v27 = v34;
  v34(v6, v40, v33);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v28 = v42;
  v42(v6, v26);
  sub_1000E8F20();
  sub_10001B38C(&qword_100137D90);
  sub_1000E8FB0();
  swift_release();
  v27(v6, v25, v26);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v28(v6, v26);
  sub_1000E8F20();
  sub_10001B38C(&qword_100137D98);
  sub_1000E8FB0();
  swift_release();
  v27(v6, v25, v26);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v28(v6, v26);
  sub_1000E8F20();
  sub_100022374(0, (unint64_t *)&unk_100137DA0);
  sub_1000E8FA0();
  swift_release();
  v27(v6, v25, v26);
  sub_1000E8E10();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v28)(v6, v26);
}

uint64_t sub_1000451E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000451F4()
{
  return swift_release();
}

uint64_t sub_1000451FC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100045234(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_100041EB4(a1, a2, a3, *(void **)(v4 + 16), a4);
}

uint64_t sub_10004523C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100045284(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v6 + 24);
    uint64_t v7[2] = *(uint64_t *)((char *)a2 + v6 + 16);
    v7[3] = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v6 + 40);
    v7[4] = *(uint64_t *)((char *)a2 + v6 + 32);
    v7[5] = v11;
    uint64_t v12 = type metadata accessor for Banner();
    uint64_t v13 = *(int *)(v12 + 28);
    __dst = (char *)v7 + v13;
    uint64_t v38 = (int *)v12;
    uint64_t v36 = &v8[v13];
    uint64_t v14 = sub_1000E8B60();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35(v36, 1, v14))
    {
      uint64_t v16 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v36, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v36, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v17 = v38[8];
    uint64_t v18 = (void *)((char *)v7 + v17);
    uint64_t v19 = &v8[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *uint64_t v18 = *(void *)v19;
    v18[1] = v20;
    uint64_t v21 = v38[9];
    uint64_t v22 = *(void **)&v8[v21];
    swift_bridgeObjectRetain();
    if (v22 != (void *)1) {
      id v23 = v22;
    }
    *(void *)((char *)v7 + v21) = v22;
    uint64_t v24 = v38[10];
    uint64_t v25 = (char *)v7 + v24;
    uint64_t v26 = &v8[v24];
    uint64_t v27 = *(void **)v26;
    uint64_t v28 = (void *)*((void *)v26 + 1);
    char v29 = v26[16];
    sub_10001D614(*(void **)v26, v28);
    *(void *)uint64_t v25 = v27;
    *((void *)v25 + 1) = v28;
    v25[16] = v29;
    uint64_t v30 = *(int *)(a3 + 24);
    uint64_t v31 = (char *)v5 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_10001B38C(&qword_100137DF0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v5;
}

uint64_t sub_100045528(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Banner();
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_1000E8B60();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(v4 + v5[9]);
  if (v9 != (void *)1) {

  }
  sub_10001D758(*(void **)(v4 + v5[10]), *(void **)(v4 + v5[10] + 8));
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = sub_10001B38C(&qword_100137DF0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);

  return v12(v10, v11);
}

void *sub_1000456A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(void *)((char *)a2 + v4 + 8);
  void *v5 = *(void *)((char *)a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(void *)((char *)a2 + v4 + 24);
  v5[2] = *(void *)((char *)a2 + v4 + 16);
  v5[3] = v8;
  uint64_t v9 = *(void *)((char *)a2 + v4 + 40);
  v5[4] = *(void *)((char *)a2 + v4 + 32);
  void v5[5] = v9;
  uint64_t v10 = type metadata accessor for Banner();
  uint64_t v11 = *(int *)(v10 + 28);
  __dst = (char *)v5 + v11;
  uint64_t v36 = (int *)v10;
  uint64_t v34 = &v6[v11];
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33(v34, 1, v12))
  {
    uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v34, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v34, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v15 = v36[8];
  uint64_t v16 = (void *)((char *)v5 + v15);
  uint64_t v17 = &v6[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *uint64_t v16 = *(void *)v17;
  v16[1] = v18;
  uint64_t v19 = v36[9];
  uint64_t v20 = *(void **)&v6[v19];
  swift_bridgeObjectRetain();
  if (v20 != (void *)1) {
    id v21 = v20;
  }
  *(void *)((char *)v5 + v19) = v20;
  uint64_t v22 = v36[10];
  id v23 = (char *)v5 + v22;
  uint64_t v24 = &v6[v22];
  uint64_t v25 = *(void **)v24;
  uint64_t v26 = (void *)*((void *)v24 + 1);
  char v27 = v24[16];
  sub_10001D614(*(void **)v24, v26);
  *(void *)id v23 = v25;
  *((void *)v23 + 1) = v26;
  v23[16] = v27;
  uint64_t v28 = *(int *)(a3 + 24);
  char v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_10001B38C(&qword_100137DF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

void *sub_1000458F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v40 = (int *)type metadata accessor for Banner();
  uint64_t v9 = v40[7];
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = (char *)v8 + v9;
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = v40[8];
  uint64_t v19 = (void *)((char *)v7 + v18);
  uint64_t v20 = (void *)((char *)v8 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v40[9];
  uint64_t v22 = (void *)((char *)v7 + v21);
  id v23 = *(void **)((char *)v7 + v21);
  uint64_t v24 = *(void **)((char *)v8 + v21);
  if (v23 != (void *)1)
  {
    if (v24 != (void *)1)
    {
      *uint64_t v22 = v24;
      id v26 = v24;

      goto LABEL_14;
    }
    sub_10001DBE4((id *)((char *)v7 + v21));
    uint64_t v24 = *(void **)((char *)v8 + v21);
    goto LABEL_12;
  }
  if (v24 == (void *)1)
  {
LABEL_12:
    *uint64_t v22 = v24;
    goto LABEL_14;
  }
  *uint64_t v22 = v24;
  id v25 = v24;
LABEL_14:
  uint64_t v27 = v40[10];
  uint64_t v28 = (char *)v7 + v27;
  char v29 = (char *)v8 + v27;
  uint64_t v30 = *(void **)v29;
  uint64_t v31 = (void *)*((void *)v29 + 1);
  char v32 = v29[16];
  sub_10001D614(*(void **)v29, v31);
  uint64_t v33 = *(void **)v28;
  uint64_t v34 = (void *)*((void *)v28 + 1);
  *(void *)uint64_t v28 = v30;
  *((void *)v28 + 1) = v31;
  v28[16] = v32;
  sub_10001D758(v33, v34);
  uint64_t v35 = *(int *)(v41 + 24);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)v42 + v35;
  uint64_t v38 = sub_10001B38C(&qword_100137DF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

_OWORD *sub_100045C34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  uint64_t v10 = (int *)type metadata accessor for Banner();
  uint64_t v11 = v10[7];
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1000E8B60();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_OWORD *)((char *)v7 + v10[8]) = *(_OWORD *)&v8[v10[8]];
  *(void *)((char *)v7 + v10[9]) = *(void *)&v8[v10[9]];
  uint64_t v17 = v10[10];
  uint64_t v18 = (char *)v7 + v17;
  uint64_t v19 = &v8[v17];
  v18[16] = v19[16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_10001B38C(&qword_100137DF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

void *sub_100045E08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v42 = a3;
  uint64_t v43 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = v8[3];
  uint64_t v7[2] = v8[2];
  v7[3] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v8[5];
  v7[4] = v8[4];
  v7[5] = v11;
  swift_bridgeObjectRelease();
  uint64_t v41 = (int *)type metadata accessor for Banner();
  uint64_t v12 = v41[7];
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_1000E8B60();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = v41[8];
  uint64_t v22 = (void *)((char *)v7 + v21);
  uint64_t v23 = (void *)((char *)v8 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v41[9];
  uint64_t v27 = (void *)((char *)v7 + v26);
  uint64_t v28 = *(void **)((char *)v7 + v26);
  uint64_t v29 = *(void *)((char *)v8 + v26);
  if (v28 != (void *)1)
  {
    if (v29 != 1)
    {
      *uint64_t v27 = v29;

      goto LABEL_12;
    }
    sub_10001DBE4((id *)((char *)v7 + v26));
    uint64_t v29 = *(void *)((char *)v8 + v26);
  }
  *uint64_t v27 = v29;
LABEL_12:
  uint64_t v30 = v41[10];
  uint64_t v31 = (char *)v7 + v30;
  char v32 = (char *)v8 + v30;
  char v33 = v32[16];
  uint64_t v34 = *(void **)v31;
  uint64_t v35 = (void *)*((void *)v31 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  v31[16] = v33;
  sub_10001D758(v34, v35);
  uint64_t v36 = *(int *)(v42 + 24);
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)v43 + v36;
  uint64_t v39 = sub_10001B38C(&qword_100137DF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t sub_1000460D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000460EC);
}

uint64_t sub_1000460EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Banner();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C(&qword_100137DF0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10004621C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046230);
}

void *sub_100046230(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Banner();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C(&qword_100137DF0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for BannerView()
{
  uint64_t result = qword_100137E50;
  if (!qword_100137E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000463AC()
{
  type metadata accessor for Banner();
  if (v0 <= 0x3F)
  {
    sub_100046480();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100046480()
{
  if (!qword_100137E60)
  {
    sub_1000464DC();
    unint64_t v0 = sub_1000E92E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100137E60);
    }
  }
}

unint64_t sub_1000464DC()
{
  unint64_t result = qword_100137E68;
  if (!qword_100137E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137E68);
  }
  return result;
}

uint64_t sub_100046530()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004654C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = sub_10001B38C(&qword_100137EA0);
  __chkstk_darwin(v29);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100137EA8);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10001B38C(&qword_100137EB0);
  __chkstk_darwin(v26);
  uint64_t v25 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E8B60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  int v18 = &v1[*(int *)(type metadata accessor for BannerView() + 20)];
  uint64_t v19 = type metadata accessor for Banner();
  sub_10002DA34((uint64_t)&v18[*(int *)(v19 + 28)], (uint64_t)v10, (uint64_t *)&unk_1001370F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100028B6C((uint64_t)v10, (uint64_t *)&unk_1001370F0);
    *(void *)uint64_t v3 = sub_1000E9720();
    *((void *)v3 + 1) = 0;
    v3[16] = 1;
    uint64_t v20 = sub_10001B38C(&qword_100137EB8);
    sub_100046A10(v1, (uint64_t)&v3[*(int *)(v20 + 44)]);
    sub_10001D100(&qword_100137EC0, &qword_100137EA0);
    uint64_t result = sub_1000E9D10();
    uint64_t v22 = result;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    __chkstk_darwin(v23);
    *(&v25 - 2) = v1;
    sub_10001D100(&qword_100137EC0, &qword_100137EA0);
    sub_1000E9940();
    sub_10001D100(&qword_100137EC8, &qword_100137EA8);
    uint64_t v24 = v28;
    sub_1000E9B00();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v24);
    sub_1000487C4();
    uint64_t v22 = sub_1000E9D10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  *uint64_t v30 = v22;
  return result;
}

uint64_t sub_1000469C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1000E9720();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_10001B38C(&qword_100137EB8);
  return sub_100046A10(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100046A10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100137EE0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v15 - v8;
  type metadata accessor for BannerView();
  sub_10001B38C(&qword_100137DF0);
  sub_1000E92D0();
  uint64_t v10 = v15[1];
  *(void *)uint64_t v9 = sub_1000E9610();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v11 = sub_10001B38C(&qword_100137EE8);
  sub_100046B74(a1, (uint64_t)&v9[*(int *)(v11 + 44)]);
  sub_10002DA34((uint64_t)v9, (uint64_t)v7, &qword_100137EE0);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v12 = sub_10001B38C(&qword_100137EF0);
  sub_10002DA34((uint64_t)v7, a2 + *(int *)(v12 + 48), &qword_100137EE0);
  uint64_t v13 = a2 + *(int *)(v12 + 64);
  *(void *)uint64_t v13 = 0x4028000000000000;
  *(unsigned char *)(v13 + 8) = 0;
  sub_100028B6C((uint64_t)v9, &qword_100137EE0);
  return sub_100028B6C((uint64_t)v7, &qword_100137EE0);
}

uint64_t sub_100046B74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100137EF8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23[-1] - v8;
  *(void *)uint64_t v9 = sub_1000E9720();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v10 = sub_10001B38C(&qword_100137F00);
  sub_100046D28(a1, &v9[*(int *)(v10 + 44)]);
  sub_100047950(v23);
  uint64_t v11 = v23[0];
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v12 = v23[1];
  char v13 = v24;
  uint64_t v14 = v25;
  char v15 = v26;
  uint64_t v16 = v27;
  uint64_t v22 = v28;
  sub_10002DA34((uint64_t)v9, (uint64_t)v7, &qword_100137EF8);
  sub_10002DA34((uint64_t)v7, a2, &qword_100137EF8);
  uint64_t v17 = sub_10001B38C(&qword_100137F08);
  uint64_t v18 = a2 + *(int *)(v17 + 48);
  *(void *)uint64_t v18 = 0x4020000000000000;
  *(unsigned char *)(v18 + 8) = 0;
  uint64_t v19 = a2 + *(int *)(v17 + 64);
  *(void *)uint64_t v19 = v11;
  *(void *)(v19 + 8) = v12;
  *(unsigned char *)(v19 + 16) = v13;
  *(void *)(v19 + 24) = v14;
  *(unsigned char *)(v19 + 32) = v15;
  uint64_t v20 = v22;
  *(void *)(v19 + 40) = v16;
  *(void *)(v19 + 48) = v20;
  swift_retain();
  sub_100028B6C((uint64_t)v9, &qword_100137EF8);
  swift_release();
  return sub_100028B6C((uint64_t)v7, &qword_100137EF8);
}

uint64_t sub_100046D28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  v131 = a1;
  v129 = a2;
  uint64_t v115 = sub_10001B38C(&qword_100137FA8);
  __chkstk_darwin(v115);
  double v118 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E9D20();
  __chkstk_darwin(v4 - 8);
  char v116 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10001B38C(&qword_100137FB0);
  __chkstk_darwin(v114);
  uint64_t v7 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10001B38C(&qword_100137FB8);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v117 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001B38C(&qword_100137FC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v128 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v127 = (uint64_t)&v109 - v12;
  uint64_t v133 = sub_1000E98D0();
  uint64_t v123 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  v122 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v132 = (void *)((char *)a1 + *(int *)(type metadata accessor for BannerView() + 20));
  uint64_t v14 = v132[3];
  uint64_t v146 = v132[2];
  uint64_t v147 = v14;
  unint64_t v130 = sub_1000295C0();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000E9A50();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1000E98E0();
  uint64_t v20 = sub_1000E99C0();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_100026FDC(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_1000E98A0();
  uint64_t v25 = sub_1000E9960();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_100026FDC(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  uint64_t v135 = sub_1000E9980();
  uint64_t v136 = v30;
  int v124 = v31;
  uint64_t v137 = v32;
  sub_100026FDC(v25, v27, v29);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v132[5];
  uint64_t v146 = v132[4];
  uint64_t v147 = v33;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1000E9A50();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  sub_1000E98F0();
  uint64_t v39 = v123;
  unsigned int v40 = v122;
  uint64_t v41 = v133;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v122, enum case for Font.Leading.tight(_:), v133);
  sub_1000E9900();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  uint64_t v52 = sub_1000E99C0();
  uint64_t v43 = v42;
  LOBYTE(v40) = v44;
  swift_release();
  sub_100026FDC(v34, v36, v38);
  swift_bridgeObjectRelease();
  sub_1000E98C0();
  uint64_t v45 = sub_1000E9960();
  uint64_t v47 = v46;
  char v49 = v48 & 1;
  sub_100026FDC(v52, v43, v40 & 1);
  swift_bridgeObjectRelease();
  sub_1000E9BA0();
  uint64_t v123 = sub_1000E9980();
  v122 = v50;
  LODWORD(v52) = v51;
  uint64_t v133 = v53;
  swift_release();
  sub_100026FDC(v45, v47, v49);
  swift_bridgeObjectRelease();
  uint64_t v121 = swift_getKeyPath();
  uint64_t v120 = swift_getKeyPath();
  uint64_t v119 = swift_getKeyPath();
  unint64_t v54 = (void *)((char *)v132 + *(int *)(type metadata accessor for Banner() + 32));
  uint64_t v55 = v54[1];
  if (v55)
  {
    uint64_t v146 = *v54;
    uint64_t v147 = v55;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1000E9A50();
    uint64_t v58 = v57;
    char v60 = v59 & 1;
    sub_1000E98F0();
    LODWORD(v132) = v52;
    uint64_t v61 = sub_1000E99C0();
    uint64_t v63 = v62;
    char v65 = v64;
    swift_release();
    sub_100026FDC(v56, v58, v60);
    swift_bridgeObjectRelease();
    sub_1000E98C0();
    uint64_t v52 = sub_1000E9960();
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    char v71 = v70 & 1;
    sub_100026FDC(v61, v63, v65 & 1);
    swift_bridgeObjectRelease();
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v110 = v146;
    LOBYTE(v56) = v147;
    uint64_t v111 = v148;
    char v72 = v149;
    unint64_t v130 = v150;
    uint64_t v113 = v151;
    int v112 = sub_1000E9870();
    sub_1000E9270();
    uint64_t v74 = v73;
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    char v145 = v71;
    char v143 = v56;
    char v141 = v72;
    char v138 = 0;
    Class v81 = v131;
    uint64_t v82 = *v131;
    uint64_t v83 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v84 = sub_1000E96A0();
    uint64_t v85 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 104))(v116, v83, v84);
    uint64_t v86 = v115;
    uint64_t v87 = v118;
    sub_100048B58(v85, (uint64_t)&v118[*(int *)(v115 + 52)]);
    *uint64_t v87 = v82;
    *(_WORD *)((char *)v87 + *(int *)(v86 + 56)) = 256;
    sub_10002DA34((uint64_t)v87, (uint64_t)&v7[*(int *)(v114 + 36)], &qword_100137FA8);
    *(void *)uint64_t v7 = v52;
    *((void *)v7 + 1) = v67;
    unsigned char v7[16] = v145;
    *(_DWORD *)(v7 + 17) = *(_DWORD *)v144;
    *((_DWORD *)v7 + 5) = *(_DWORD *)&v144[3];
    uint64_t v88 = v110;
    *((void *)v7 + 3) = v69;
    *((void *)v7 + 4) = v88;
    v7[40] = v143;
    *(_DWORD *)(v7 + 41) = *(_DWORD *)v142;
    *((_DWORD *)v7 + 11) = *(_DWORD *)&v142[3];
    *((void *)v7 + 6) = v111;
    v7[56] = v141;
    *((_DWORD *)v7 + 15) = *(_DWORD *)&v140[3];
    *(_DWORD *)(v7 + 57) = *(_DWORD *)v140;
    uint64_t v89 = v113;
    *((void *)v7 + 8) = v130;
    *((void *)v7 + 9) = v89;
    v7[80] = v112;
    *((_DWORD *)v7 + 21) = *(_DWORD *)&v139[3];
    *(_DWORD *)(v7 + 81) = *(_DWORD *)v139;
    *((void *)v7 + 11) = v74;
    *((void *)v7 + 12) = v76;
    *((void *)v7 + 13) = v78;
    *((void *)v7 + 14) = v80;
    v7[120] = v138;
    swift_retain_n();
    sub_1000360E4(v52, v67, v71);
    swift_bridgeObjectRetain();
    sub_100028B6C((uint64_t)v87, &qword_100137FA8);
    sub_100048BBC(v85);
    swift_release();
    uint64_t v90 = v52;
    LOBYTE(v52) = (_BYTE)v132;
    sub_100026FDC(v90, v67, v71);
    swift_bridgeObjectRelease();
    uint64_t v91 = v81[1];
    uint64_t v92 = swift_getKeyPath();
    uint64_t v93 = v117;
    sub_10002DA34((uint64_t)v7, v117, &qword_100137FB0);
    uint64_t v94 = v126;
    char v95 = (uint64_t *)(v93 + *(int *)(v126 + 36));
    *char v95 = v92;
    v95[1] = v91;
    swift_retain();
    sub_100028B6C((uint64_t)v7, &qword_100137FB0);
    uint64_t v96 = v127;
    sub_100048C18(v93, v127);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v125 + 56))(v96, 0, 1, v94);
  }
  else
  {
    uint64_t v96 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56))(v127, 1, 1, v126);
  }
  char v97 = v52 & 1;
  LODWORD(v132) = v52 & 1;
  char v98 = v124 & 1;
  v144[0] = v124 & 1;
  uint64_t v99 = v128;
  sub_10002DA34(v96, v128, &qword_100137FC0);
  int v100 = v129;
  uint64_t v101 = v135;
  uint64_t v102 = v136;
  void *v129 = v135;
  v100[1] = v102;
  *((unsigned char *)v100 + 16) = v98;
  uint64_t v103 = KeyPath;
  v100[3] = v137;
  v100[4] = v103;
  v100[5] = 0x3FE6666666666666;
  v100[6] = 0x4010000000000000;
  *((unsigned char *)v100 + 56) = 0;
  uint64_t v104 = v123;
  uint64_t v105 = (uint64_t)v122;
  v100[8] = v123;
  v100[9] = v105;
  *((unsigned char *)v100 + 80) = v97;
  uint64_t v106 = v121;
  v100[11] = v133;
  v100[12] = v106;
  v100[13] = 0x3FECCCCCCCCCCCCDLL;
  v100[14] = v120;
  v100[15] = 0x3FE6666666666666;
  v100[16] = v119;
  v100[17] = 4;
  *((unsigned char *)v100 + 144) = 0;
  uint64_t v107 = sub_10001B38C(&qword_100137FC8);
  sub_10002DA34(v99, (uint64_t)v100 + *(int *)(v107 + 80), &qword_100137FC0);
  sub_1000360E4(v101, v136, v98);
  swift_bridgeObjectRetain();
  swift_retain();
  LOBYTE(v101) = (_BYTE)v132;
  sub_1000360E4(v104, v105, (char)v132);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100028B6C(v96, &qword_100137FC0);
  sub_100028B6C(v99, &qword_100137FC0);
  sub_100026FDC(v104, v105, v101);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100026FDC(v135, v136, v144[0]);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100047950@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_10001B38C(&qword_100137F10);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E9C60();
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C(&qword_100137F18);
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10001B38C(&qword_100137F20);
  uint64_t v11 = __chkstk_darwin(v33);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = sub_10001B38C(&qword_100137F28);
  __chkstk_darwin(v16);
  char v18 = (uint64_t *)((char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = v1 + *(int *)(type metadata accessor for BannerView() + 20);
  uint64_t v20 = *(void **)(v19 + *(int *)(type metadata accessor for Banner() + 36));
  if (v20)
  {
    if (v20 != (void *)1)
    {
      id v25 = v20;
      sub_1000E9C50();
      uint64_t v26 = v32;
      (*(void (**)(char *, void, uint64_t))(v32 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v5);
      sub_1000E9CC0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
      sub_1000E9FB0();
      uint64_t v27 = sub_1000E9FC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v4, 0, 1, v27);
      sub_1000E9CB0();
      swift_release();
      sub_100028B6C((uint64_t)v4, &qword_100137F10);
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v15, v10, v35);
      uint64_t v30 = &v15[*(int *)(v33 + 36)];
      *(void *)uint64_t v30 = 0;
      *((_WORD *)v30 + 4) = 1;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v28);
      sub_10002DA34((uint64_t)v15, (uint64_t)v13, &qword_100137F20);
      sub_1000488BC();
      uint64_t v24 = sub_1000E9D10();
      sub_100020B10(v20);
      uint64_t result = sub_100028B6C((uint64_t)v15, &qword_100137F20);
      goto LABEL_7;
    }
  }
  else
  {
    *char v18 = sub_1000E9DC0();
    v18[1] = v21;
    uint64_t v22 = sub_10001B38C(&qword_100137F38);
    sub_100047DC0(v1, (uint64_t)v18 + *(int *)(v22 + 44));
    sub_10001D100(&qword_100137F40, &qword_100137F28);
  }
  uint64_t result = sub_1000E9D10();
  uint64_t v24 = result;
LABEL_7:
  *uint64_t v36 = v24;
  return result;
}

uint64_t sub_100047DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v3 = sub_10001B38C(&qword_100137F48);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v30 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v29 = (uint64_t)&v28 - v7;
  uint64_t v8 = sub_10001B38C(&qword_100137F50);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E9C60();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = sub_1000486B4();
  sub_1000E9C50();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v11);
  sub_1000E9CC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v16 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v17 = sub_1000E9C90();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v10, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  uint64_t v19 = sub_1000E9C70();
  swift_release();

  sub_100028B6C((uint64_t)v10, &qword_100137F50);
  uint64_t v20 = *(void *)(v31 + 8);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v22 = v29;
  sub_100048180(v29);
  char v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v24 = v30;
  v23(v30, v22, v3);
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = 0x3FF0000000000000;
  *(_WORD *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = KeyPath;
  *(void *)(a2 + 32) = v20;
  uint64_t v25 = sub_10001B38C(&qword_100137F58);
  v23((char *)(a2 + *(int *)(v25 + 48)), (uint64_t)v24, v3);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v26(v22, v3);
  v26((uint64_t)v24, v3);
  swift_release();
  swift_release();
  return swift_release();
}

id sub_100048180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100137F60);
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  __chkstk_darwin(v1);
  uint64_t v28 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000E9B90();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E9C60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self premiumSealInner:v27];
  if (result)
  {
    sub_1000E9C50();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v7);
    uint64_t v12 = sub_1000E9CC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    NSString v13 = sub_1000EA280();
    uint64_t v14 = self;
    id v15 = [v14 colorWithHexString:v13];

    [v15 red];
    [v15 green];
    [v15 blue];
    uint64_t v16 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    v17(v6, enum case for Color.RGBColorSpace.sRGB(_:), v3);
    uint64_t v18 = sub_1000E9C30();

    NSString v19 = sub_1000EA280();
    id v20 = [v14 colorWithHexString:v19];

    [v20 red];
    [v20 green];
    [v20 blue];
    v17(v6, v16, v3);
    uint64_t v21 = sub_1000E9C30();

    sub_10001B38C(&qword_100137F68);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1000F1E20;
    *(void *)(v22 + 32) = v18;
    *(void *)(v22 + 40) = v21;
    uint64_t v31 = v22;
    sub_1000EA490();
    swift_retain();
    swift_retain();
    sub_1000E9D70();
    sub_1000E9DD0();
    sub_1000E9DE0();
    sub_1000E9360();
    uint64_t v31 = v37;
    long long v32 = v38;
    long long v33 = v39;
    uint64_t v34 = v12;
    uint64_t v35 = 0x3FF0000000000000;
    __int16 v36 = 0;
    swift_retain();
    uint64_t v23 = sub_10001B38C(&qword_100137F70);
    unint64_t v24 = sub_100048958();
    uint64_t v25 = v28;
    sub_1000E9AB0();
    sub_100048AC8((uint64_t)&v37);
    swift_release();
    uint64_t v31 = v23;
    *(void *)&long long v32 = v24;
    swift_getOpaqueTypeConformance2();
    uint64_t v26 = v30;
    sub_1000E9A60();
    swift_release();
    swift_release();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v25, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000486B4()
{
  id v0 = [self sharedAccount];
  id v1 = [v0 supportedContentLanguage];

  if (v1 != (id)1)
  {
    if (v1) {
      goto LABEL_7;
    }
    id result = [self premiumSealOuter];
    if (result) {
      return result;
    }
    __break(1u);
  }
  id result = [self premiumSealOuterFR];
  if (result) {
    return result;
  }
  __break(1u);
LABEL_7:
  id result = [self premiumSealOuter];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100048784@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10004654C(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1000487BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000469C0(*(void **)(v1 + 16), a1);
}

unint64_t sub_1000487C4()
{
  unint64_t result = qword_100137ED0;
  if (!qword_100137ED0)
  {
    sub_10001B3D0(&qword_100137EB0);
    sub_10001D100(&qword_100137EC8, &qword_100137EA8);
    sub_100048864();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137ED0);
  }
  return result;
}

unint64_t sub_100048864()
{
  unint64_t result = qword_100137ED8;
  if (!qword_100137ED8)
  {
    sub_1000E9850();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137ED8);
  }
  return result;
}

unint64_t sub_1000488BC()
{
  unint64_t result = qword_100137F30;
  if (!qword_100137F30)
  {
    sub_10001B3D0(&qword_100137F20);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137F30);
  }
  return result;
}

unint64_t sub_100048958()
{
  unint64_t result = qword_100137F78;
  if (!qword_100137F78)
  {
    sub_10001B3D0(&qword_100137F70);
    sub_1000489D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137F78);
  }
  return result;
}

unint64_t sub_1000489D4()
{
  unint64_t result = qword_100137F80;
  if (!qword_100137F80)
  {
    sub_10001B3D0(&qword_100137F88);
    sub_100048A74();
    sub_10001D100(&qword_100137F98, &qword_100137FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137F80);
  }
  return result;
}

unint64_t sub_100048A74()
{
  unint64_t result = qword_100137F90;
  if (!qword_100137F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100137F90);
  }
  return result;
}

uint64_t sub_100048AC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100048AFC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E94F0();
  *a1 = v3;
  return result;
}

uint64_t sub_100048B28()
{
  return sub_1000E9500();
}

uint64_t sub_100048B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E9D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048BBC(uint64_t a1)
{
  uint64_t v2 = sub_1000E9D20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100048C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C(&qword_100137FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BannerView.LayoutOptions()
{
  return &type metadata for BannerView.LayoutOptions;
}

void *sub_100048C90()
{
  return &protocol witness table for AnyView;
}

void *sub_100048C9C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000E8C50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100048D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048E10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048EA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048F34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048FD8);
}

uint64_t sub_100048FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100049094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000490A8);
}

uint64_t sub_1000490A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000E8C50();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for AppearanceEvent(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_100138028);
}

uint64_t sub_100049184()
{
  uint64_t result = sub_1000E8C50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10004922C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000E8C50();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    unsigned int v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t sub_100049300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_100049384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t sub_100049420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1000494A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_100049528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004953C);
}

uint64_t sub_10004953C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000495A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000495BC);
}

uint64_t sub_1000495BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for VisibleRectChangedEvent(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_1001380C0);
}

uint64_t sub_10004964C()
{
  return sub_10004A738();
}

uint64_t *sub_100049658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000E8C50();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000E8B60();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1000497F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000E8B60();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_1000498F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100049A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100049BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100049D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100049F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049F14);
}

uint64_t sub_100049F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10004A010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004A024);
}

uint64_t sub_10004A024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000E8C50();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for EngagementEvent(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_100138150);
}

void sub_10004A14C()
{
  sub_1000E8C50();
  if (v0 <= 0x3F)
  {
    sub_10001E230();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10004A214(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000E8C50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10004A2E0(uint64_t a1)
{
  uint64_t v2 = sub_1000E8C50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10004A344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10004A3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10004A43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10004A4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10004A534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004A548);
}

uint64_t sub_10004A548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10004A604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004A618);
}

uint64_t sub_10004A618(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000E8C50();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for DisappearanceEvent(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_1001381E0);
}

uint64_t sub_10004A6F4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004A72C()
{
  return sub_10004A738();
}

uint64_t sub_10004A738()
{
  uint64_t result = sub_1000E8C50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_10004A7C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_10004A7DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10004A7F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_10004A804(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_10004A81C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_10004A828(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_10004A834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000E8C50();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

unsigned char *storeEnumTagSinglePayload for StackLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004A968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackLocation()
{
  return &type metadata for StackLocation;
}

uint64_t getEnumTagSinglePayload for StackKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StackKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004AAFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackKind()
{
  return &type metadata for StackKind;
}

unsigned char *storeEnumTagSinglePayload for BookendPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004AC00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookendPosition()
{
  return &type metadata for BookendPosition;
}

unint64_t sub_10004AC3C()
{
  unint64_t result = qword_100138218;
  if (!qword_100138218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138218);
  }
  return result;
}

unint64_t sub_10004AC94()
{
  unint64_t result = qword_100138220;
  if (!qword_100138220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138220);
  }
  return result;
}

unint64_t sub_10004ACEC()
{
  unint64_t result = qword_100138228;
  if (!qword_100138228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138228);
  }
  return result;
}

uint64_t sub_10004AD40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_10004AD4C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v69 = a3;
  uint64_t v7 = sub_1000E9ED0();
  uint64_t v76 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)FCMapTable) init];
  unint64_t v84 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v68 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    id v77 = v10;
    unint64_t v78 = a1;
    char v71 = a4;
    uint64_t v75 = v7;
    uint64_t v80 = a2;
    if (v11)
    {
      if (v11 < 1)
      {
        __break(1u);
LABEL_49:
        sub_1000EAB50();
        __break(1u);
        goto LABEL_50;
      }
      uint64_t v79 = isUniquelyReferenced_nonNull_native;
      uint64_t v12 = 0;
      uint64_t v13 = a2 + OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_cachedScoreProfiles;
      unint64_t v14 = a1 & 0xC000000000000001;
      do
      {
        if (v14)
        {
          uint64_t v18 = (void *)sub_1000EA870();
        }
        else
        {
          uint64_t v18 = *(void **)(a1 + 8 * v12 + 32);
          swift_unknownObjectRetain();
        }
        id v19 = [v18 itemID];
        uint64_t v20 = sub_1000EA2B0();
        uint64_t v22 = v21;

        swift_beginAccess();
        uint64_t v23 = *(void *)v13;
        if (*(void *)(*(void *)v13 + 16) && (unint64_t v24 = sub_10003BAEC(v20, v22), (v25 & 1) != 0))
        {
          uint64_t v15 = *(void **)(*(void *)(v23 + 56) + 8 * v24);
          swift_endAccess();
          id v16 = v15;
          swift_bridgeObjectRelease();
          id v17 = v16;
          [v77 setObject:v17 forKey:v18];
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_unknownObjectRetain();
          sub_1000EA450();
          if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000EA4C0();
          }
          sub_1000EA4F0();
          sub_1000EA490();
        }
        ++v12;
        swift_unknownObjectRelease();
        a1 = v78;
      }
      while (v11 != v12);
      swift_bridgeObjectRelease();
      unint64_t v26 = v84;
      id v10 = v77;
      uint64_t v7 = v75;
      uint64_t isUniquelyReferenced_nonNull_native = v79;
      a2 = v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v26 = (unint64_t)_swiftEmptyArrayStorage;
    }
    sub_10001B38C(&qword_100137370);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1000F2570;
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    uint64_t v28 = a2;
    Class v81 = (void *)a2;
    sub_1000EA910();
    uint64_t v29 = (uint64_t)v82;
    unint64_t v30 = v83;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = sub_1000263E0();
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v30;
    id v31 = [v10 count];
    *(void *)(v27 + 96) = &type metadata for UInt;
    *(void *)(v27 + 104) = &protocol witness table for UInt;
    *(void *)(v27 + 72) = v31;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1000EA980();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v27 + 136) = &type metadata for Int;
    *(void *)(v27 + 144) = &protocol witness table for Int;
    *(void *)(v27 + 112) = v32;
    sub_100022374(0, (unint64_t *)&qword_100138300);
    long long v33 = (void *)sub_1000EA720();
    sub_1000EA620();
    sub_1000E9220();
    swift_bridgeObjectRelease();

    if (v84 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1000EA980();
      swift_bridgeObjectRelease();
      if (!v66) {
        goto LABEL_37;
      }
    }
    else if (!*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_37;
    }
    uint64_t v82 = *(void **)(v28 + OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_scoringService);
    uint64_t v34 = v82;
    sub_1000E91D0();
    id v35 = v34;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1000E9150();

    swift_bridgeObjectRelease();
    uint64_t v37 = *(void *)(v36 + 16);
    if (!v37) {
      break;
    }
    long long v38 = (void *)(v80 + OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_cachedScoreProfiles);
    uint64_t v74 = *(void (**)(uint64_t))(v76 + 16);
    unint64_t v39 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    uint64_t v67 = v36;
    unint64_t v40 = v36 + v39;
    v76 += 16;
    uint64_t v72 = *(void *)(v76 + 56);
    uint64_t v73 = (void (**)(unint64_t, uint64_t))(v76 - 8);
    while (1)
    {
      uint64_t v79 = v40;
      uint64_t v80 = v37;
      v74(isUniquelyReferenced_nonNull_native);
      a2 = sub_1000E9EA0();
      id v10 = v45;
      a1 = isUniquelyReferenced_nonNull_native;
      uint64_t v46 = sub_1000E9EB0();
      swift_beginAccess();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Class v81 = (void *)*v38;
      a4 = v81;
      uint64_t v47 = v38;
      *long long v38 = 0x8000000000000000;
      unint64_t v49 = sub_10003BAEC(a2, (uint64_t)v10);
      uint64_t v50 = a4[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        break;
      }
      uint64_t v7 = v48;
      if (a4[3] >= v52)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000BEF98();
        }
      }
      else
      {
        sub_1000BD968(v52, isUniquelyReferenced_nonNull_native);
        unint64_t v53 = sub_10003BAEC(a2, (uint64_t)v10);
        if ((v7 & 1) != (v54 & 1)) {
          goto LABEL_49;
        }
        unint64_t v49 = v53;
      }
      uint64_t isUniquelyReferenced_nonNull_native = a1;
      a4 = v81;
      if (v7)
      {
        uint64_t v41 = v81[7];
        uint64_t v42 = 8 * v49;

        *(void *)(v41 + v42) = v46;
      }
      else
      {
        v81[(v49 >> 6) + 8] |= 1 << v49;
        uint64_t v55 = (uint64_t *)(a4[6] + 16 * v49);
        *uint64_t v55 = a2;
        v55[1] = (uint64_t)v10;
        *(void *)(a4[7] + 8 * v49) = v46;
        uint64_t v56 = a4[2];
        BOOL v57 = __OFADD__(v56, 1);
        uint64_t v58 = v56 + 1;
        if (v57) {
          goto LABEL_43;
        }
        a4[2] = v58;
        swift_bridgeObjectRetain();
      }
      long long v38 = v47;
      *uint64_t v47 = a4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v43 = (void *)sub_1000E9EB0();
      uint64_t v44 = sub_1000E9EC0();
      id v10 = v77;
      [v77 setObject:v43 forKey:v44];

      swift_unknownObjectRelease();
      uint64_t v7 = v75;
      (*v73)(a1, v75);
      unint64_t v40 = v79 + v72;
      uint64_t v37 = v80 - 1;
      if (v80 == 1)
      {
        swift_bridgeObjectRelease();
        a1 = v78;
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1000EA980();
  }
  swift_bridgeObjectRelease();
LABEL_37:
  swift_getKeyPath();
  if (v68)
  {
    swift_bridgeObjectRetain();
    id v61 = v10;
    swift_retain();
    uint64_t v59 = (uint64_t)sub_1000717A4(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    id v60 = v10;
    swift_retain();
  }
  uint64_t v82 = (void *)v59;
  uint64_t v62 = v70;
  sub_10004D120((uint64_t *)&v82, v10);
  if (!v62)
  {

    swift_release();
    swift_bridgeObjectRelease();
    id v63 = [objc_allocWithZone((Class)FCFeedPersonalizedItems) init];
    sub_10001B38C(&qword_1001379F0);
    Class isa = sub_1000EA460().super.isa;
    swift_release();
    [v63 setSortedItems:isa];

    [v63 setScoreProfiles:v10];
    uint64_t result = swift_release();
    *char v71 = v63;
    return result;
  }
LABEL_50:

  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WidgetPersonalizationService()
{
  return self;
}

id sub_10004BACC(void *a1, uint64_t a2)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = sub_1000EA670();
  uint64_t v3 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000EA660();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000E9E30();
  __chkstk_darwin(v7 - 8);
  *(void *)&v2[OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_cachedScoreProfiles] = &_swiftEmptyDictionarySingleton;
  uint64_t v13 = OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_cacheAccessQueue;
  sub_100022374(0, &qword_1001382D8);
  uint64_t v8 = v2;
  sub_1000E9E10();
  id v19 = _swiftEmptyArrayStorage;
  sub_10004BD54();
  sub_10001B38C(&qword_1001382E8);
  sub_10004BDAC();
  sub_1000EA7C0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  *(void *)&v2[v13] = sub_1000EA6B0();
  uint64_t v9 = v15;
  uint64_t v10 = v16;
  *(void *)&v8[OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_scoringService] = v15;
  *(void *)&v8[OBJC_IVAR____TtC10NewsToday228WidgetPersonalizationService_configurationSet] = v10;
  id v11 = v9;

  v18.receiver = v8;
  v18.super_class = ObjectType;
  return [super init];
}

unint64_t sub_10004BD54()
{
  unint64_t result = qword_1001382E0;
  if (!qword_1001382E0)
  {
    sub_1000EA660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001382E0);
  }
  return result;
}

unint64_t sub_10004BDAC()
{
  unint64_t result = qword_1001382F0;
  if (!qword_1001382F0)
  {
    sub_10001B3D0(&qword_1001382E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001382F0);
  }
  return result;
}

uint64_t sub_10004BE08()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004BE40()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_10004BE50(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000EA980();
    a1 = swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    id v1 = [objc_allocWithZone((Class)FCFeedPersonalizedItems) init];
    sub_10001B38C(&qword_1001379F0);
    Class isa = sub_1000EA460().super.isa;
    [v1 setSortedItems:isa];

    id v4 = [objc_allocWithZone((Class)FCMapTable) init];
    [v1 setScoreProfiles:v4];

    return v1;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  __chkstk_darwin(a1);
  sub_100022374(0, &qword_1001382F8);
  sub_1000EA690();
  return (id)v6;
}

uint64_t sub_10004BFDC@<X0>(void *a1@<X8>)
{
  return sub_10004AD4C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

const char *sub_10004BFFC()
{
  return "sortingScore";
}

id sub_10004C008@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 sortingScore];
  *a2 = v4;
  return result;
}

uint64_t sub_10004C03C(char *a1, char *__src, unint64_t a3, char *__dst, void *a5)
{
  uint64_t v6 = __src;
  uint64_t v7 = __src - a1;
  uint64_t v8 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v8 = __src - a1;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v50 = a1;
  unint64_t v49 = __dst;
  if (v9 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_54;
    }
    if (__dst != __src || &__src[8 * v13] <= __dst) {
      memmove(__dst, __src, 8 * v13);
    }
    uint64_t v43 = __dst;
    uint64_t v27 = &__dst[8 * v13];
    uint64_t v48 = v27;
    uint64_t v50 = v6;
    if (a1 >= v6 || v11 < 8)
    {
LABEL_53:
      sub_100030FA4((void **)&v50, (const void **)&v49, &v48);
      return 1;
    }
    uint64_t v28 = (char *)(a3 - 8);
    uint64_t v29 = &selRef_addCountOfArticlesExposedEachSection_;
    unint64_t v30 = v6;
    while (1)
    {
      uint64_t v45 = v27;
      id v31 = v27 - 8;
      uint64_t v32 = *((void *)v27 - 1);
      uint64_t v34 = *((void *)v30 - 1);
      v30 -= 8;
      uint64_t v33 = v34;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v35 = [a5 v29[184] v32];
      if (v35)
      {
        uint64_t v36 = v35;
        swift_getAtKeyPath();

        double v37 = v47;
      }
      else
      {
        double v37 = 0.0;
      }
      long long v38 = v28 + 8;
      unint64_t v39 = v29;
      id v40 = [a5 v29[184] v33];
      if (v40)
      {
        uint64_t v41 = v40;
        swift_getAtKeyPath();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        if (v47 >= v37) {
          goto LABEL_46;
        }
      }
      else
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v37 <= 0.0)
        {
LABEL_46:
          uint64_t v48 = v31;
          uint64_t v29 = v39;
          if (v38 < v45 || v28 >= v45 || v38 != v45) {
            *(void *)uint64_t v28 = *(void *)v31;
          }
          unint64_t v30 = v6;
          uint64_t v27 = v31;
          goto LABEL_51;
        }
      }
      uint64_t v29 = v39;
      uint64_t v27 = v45;
      if (v38 != v6 || v28 >= v6) {
        *(void *)uint64_t v28 = *(void *)v30;
      }
      uint64_t v50 = v30;
LABEL_51:
      if (v30 > a1)
      {
        v28 -= 8;
        uint64_t v6 = v30;
        if (v27 > v43) {
          continue;
        }
      }
      goto LABEL_53;
    }
  }
  if (v7 >= -7)
  {
    if (__dst != a1 || &a1[8 * v9] <= __dst) {
      memmove(__dst, a1, 8 * v9);
    }
    uint64_t v14 = &__dst[8 * v9];
    uint64_t v48 = v14;
    if ((unint64_t)v6 < a3 && v7 >= 8)
    {
      uint64_t v15 = __dst;
      unint64_t v16 = a3;
      id v17 = v15;
      objc_super v18 = a1;
      while (1)
      {
        uint64_t v19 = *(void *)v6;
        uint64_t v20 = *(void *)v17;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        id v21 = [a5 objectForKey:v19];
        if (v21)
        {
          uint64_t v22 = v21;
          swift_getAtKeyPath();

          double v23 = v47;
        }
        else
        {
          double v23 = 0.0;
        }
        id v24 = [a5 objectForKey:v20];
        if (v24)
        {
          char v25 = v24;
          swift_getAtKeyPath();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          if (v47 >= v23) {
            goto LABEL_23;
          }
        }
        else
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          if (v23 <= 0.0)
          {
LABEL_23:
            if (v18 != v17) {
              *(void *)objc_super v18 = *(void *)v17;
            }
            v17 += 8;
            unint64_t v49 = v17;
            unint64_t v26 = v6;
            goto LABEL_26;
          }
        }
        unint64_t v26 = v6 + 8;
        if (v18 < v6 || v18 >= v26 || v18 != v6) {
          *(void *)objc_super v18 = *(void *)v6;
        }
LABEL_26:
        v18 += 8;
        if (v17 < v14)
        {
          uint64_t v6 = v26;
          if ((unint64_t)v26 < v16) {
            continue;
          }
        }
        uint64_t v50 = v18;
        goto LABEL_53;
      }
    }
    goto LABEL_53;
  }
LABEL_54:
  swift_release();

  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

void sub_10004C47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = *a4;
    uint64_t v8 = (uint64_t *)(*a4 + 8 * a3 - 8);
LABEL_5:
    uint64_t v9 = *(void *)(v7 + 8 * v6);
    uint64_t v10 = a1;
    uint64_t v20 = v8;
    while (1)
    {
      uint64_t v11 = *v8;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v12 = [a5 objectForKey:v9];
      if (v12)
      {
        uint64_t v13 = v12;
        swift_getAtKeyPath();

        double v14 = v21;
      }
      else
      {
        double v14 = 0.0;
      }
      id v15 = [a5 objectForKey:v11];
      if (v15)
      {
        unint64_t v16 = v15;
        swift_getAtKeyPath();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        if (v21 >= v14) {
          goto LABEL_4;
        }
      }
      else
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v14 <= 0.0) {
          goto LABEL_4;
        }
      }
      if (!v7) {
        break;
      }
      uint64_t v17 = *v8;
      uint64_t v9 = v8[1];
      *uint64_t v8 = v9;
      v8[1] = v17;
      --v8;
      if (v6 == ++v10)
      {
LABEL_4:
        ++v6;
        uint64_t v8 = v20 + 1;
        if (v6 == a2) {
          return;
        }
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10004C60C(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  Swift::Int v5 = a1[1];
  id v6 = a2;
  swift_retain_n();
  id v137 = v6;
  Swift::Int v7 = sub_1000EAB00(v5);
  if (v7 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_152;
    }
    if (v5)
    {
      id v11 = v137;
      swift_retain();
      sub_10004C47C(0, v5, 1, a1, v11);

      swift_release_n();
    }
    else
    {
      swift_release_n();
    }
    return swift_release();
  }
  if (v5 >= 0) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = v5 + 1;
  }
  if (v5 >= -1)
  {
    Swift::Int v120 = v7;
    uint64_t v117 = a1;
    if (v5 >= 2)
    {
      uint64_t v9 = v8 >> 1;
      sub_10001B38C(&qword_1001379F0);
      uint64_t v10 = sub_1000EA4D0();
      *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
      __dst = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v139 = v10;
      goto LABEL_12;
    }
    id v12 = (char *)_swiftEmptyArrayStorage;
    uint64_t v139 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 == 1)
    {
LABEL_12:
      Swift::Int v13 = 0;
      uint64_t v14 = *a1;
      uint64_t v118 = *a1 - 8;
      uint64_t v119 = *a1 + 16;
      id v12 = (char *)_swiftEmptyArrayStorage;
      Swift::Int v15 = v5;
      Swift::Int v122 = v5;
      uint64_t v135 = *a1;
      while (1)
      {
        Swift::Int v17 = v13;
        Swift::Int v18 = v13 + 1;
        unint64_t v132 = v12;
        if (v13 + 1 < v15)
        {
          uint64_t v19 = *(void *)(v14 + 8 * v18);
          uint64_t v20 = *(void *)(v14 + 8 * v13);
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          id v21 = [v137 objectForKey:v19];
          if (v21)
          {
            uint64_t v22 = v21;
            swift_getAtKeyPath();

            double v23 = v138;
          }
          else
          {
            double v23 = 0.0;
          }
          id v24 = [v137 objectForKey:v20];
          if (v24)
          {
            char v25 = v24;
            swift_getAtKeyPath();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            double v26 = v138;
          }
          else
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            double v26 = 0.0;
          }
          id v12 = v132;
          Swift::Int v18 = v17 + 2;
          Swift::Int v15 = v122;
          if (v17 + 2 < v122)
          {
            uint64_t v27 = (uint64_t *)(v119 + 8 * v17);
            do
            {
              uint64_t v29 = *(v27 - 1);
              uint64_t v28 = *v27;
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              id v30 = [v137 objectForKey:v28];
              if (v30)
              {
                id v31 = v30;
                swift_getAtKeyPath();

                double v32 = v138;
              }
              else
              {
                double v32 = 0.0;
              }
              id v33 = [v137 objectForKey:v29];
              if (v33)
              {
                uint64_t v34 = v33;
                swift_getAtKeyPath();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();

                id v12 = v132;
                if (v26 < v23 == v138 >= v32)
                {
LABEL_31:
                  Swift::Int v15 = v122;
                  goto LABEL_33;
                }
              }
              else
              {
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                id v12 = v132;
                if (v26 < v23 == v32 <= 0.0) {
                  goto LABEL_31;
                }
              }
              ++v18;
              ++v27;
              Swift::Int v15 = v122;
            }
            while (v122 != v18);
            Swift::Int v18 = v122;
          }
LABEL_33:
          uint64_t v14 = v135;
          if (v26 < v23)
          {
            if (v18 < v17) {
              goto LABEL_153;
            }
            if (v17 < v18)
            {
              id v35 = (uint64_t *)(v118 + 8 * v18);
              Swift::Int v36 = v18;
              Swift::Int v37 = v17;
              long long v38 = (uint64_t *)(v135 + 8 * v17);
              do
              {
                if (v37 != --v36)
                {
                  if (!v135) {
                    goto LABEL_158;
                  }
                  uint64_t v39 = *v38;
                  *long long v38 = *v35;
                  *id v35 = v39;
                }
                ++v37;
                --v35;
                ++v38;
              }
              while (v37 < v36);
            }
          }
        }
        if (v18 >= v15) {
          goto LABEL_65;
        }
        if (__OFSUB__(v18, v17)) {
          goto LABEL_151;
        }
        if (v18 - v17 >= v120) {
          goto LABEL_65;
        }
        if (__OFADD__(v17, v120)) {
          goto LABEL_154;
        }
        Swift::Int v40 = v17 + v120 >= v15 ? v15 : v17 + v120;
        if (v40 < v17) {
          break;
        }
        if (v18 == v40) {
          goto LABEL_65;
        }
        uint64_t v126 = v3;
        *(void *)v129 = v17;
        uint64_t v41 = (uint64_t *)(v118 + 8 * v18);
        while (2)
        {
          Swift::Int v42 = v18;
          uint64_t v43 = *(void *)(v14 + 8 * v18);
          Swift::Int v44 = *(void *)v129;
          uint64_t v45 = v41;
          while (1)
          {
            uint64_t v46 = *v45;
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            id v47 = [v137 objectForKey:v43];
            if (v47)
            {
              uint64_t v48 = v47;
              swift_getAtKeyPath();

              double v49 = v138;
            }
            else
            {
              double v49 = 0.0;
            }
            id v50 = [v137 objectForKey:v46];
            if (v50)
            {
              BOOL v51 = v50;
              swift_getAtKeyPath();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

              if (v138 >= v49) {
                break;
              }
              goto LABEL_61;
            }
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            if (v49 <= 0.0) {
              break;
            }
LABEL_61:
            uint64_t v14 = v135;
            if (!v135) {
              goto LABEL_156;
            }
            uint64_t v52 = *v45;
            uint64_t v43 = v45[1];
            *uint64_t v45 = v43;
            v45[1] = v52;
            --v45;
            if (v42 == ++v44) {
              goto LABEL_52;
            }
          }
          uint64_t v14 = v135;
LABEL_52:
          Swift::Int v18 = v42 + 1;
          ++v41;
          if (v42 + 1 != v40) {
            continue;
          }
          break;
        }
        Swift::Int v18 = v40;
        uint64_t v3 = v126;
        Swift::Int v17 = *(void *)v129;
        id v12 = v132;
LABEL_65:
        if (v18 < v17) {
          goto LABEL_146;
        }
        Swift::Int v121 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v12 = sub_100030D20(0, *((void *)v12 + 2) + 1, 1, v12);
        }
        unint64_t v54 = *((void *)v12 + 2);
        unint64_t v53 = *((void *)v12 + 3);
        unint64_t v16 = v54 + 1;
        uint64_t v14 = v135;
        if (v54 >= v53 >> 1)
        {
          uint64_t v106 = sub_100030D20((char *)(v53 > 1), v54 + 1, 1, v12);
          uint64_t v14 = v135;
          id v12 = v106;
        }
        *((void *)v12 + 2) = v16;
        uint64_t v55 = v12 + 32;
        uint64_t v56 = &v12[16 * v54 + 32];
        *(void *)uint64_t v56 = v17;
        *((void *)v56 + 1) = v18;
        if (v54)
        {
          uint64_t v133 = v12;
          uint64_t v123 = v12 + 32;
          while (1)
          {
            unint64_t v57 = v16 - 1;
            if (v16 >= 4)
            {
              uint64_t v62 = &v55[16 * v16];
              uint64_t v63 = *((void *)v62 - 8);
              uint64_t v64 = *((void *)v62 - 7);
              BOOL v68 = __OFSUB__(v64, v63);
              uint64_t v65 = v64 - v63;
              if (v68) {
                goto LABEL_135;
              }
              uint64_t v67 = *((void *)v62 - 6);
              uint64_t v66 = *((void *)v62 - 5);
              BOOL v68 = __OFSUB__(v66, v67);
              uint64_t v60 = v66 - v67;
              char v61 = v68;
              if (v68) {
                goto LABEL_136;
              }
              unint64_t v69 = v16 - 2;
              uint64_t v70 = &v55[16 * v16 - 32];
              uint64_t v72 = *(void *)v70;
              uint64_t v71 = *((void *)v70 + 1);
              BOOL v68 = __OFSUB__(v71, v72);
              uint64_t v73 = v71 - v72;
              if (v68) {
                goto LABEL_138;
              }
              BOOL v68 = __OFADD__(v60, v73);
              uint64_t v74 = v60 + v73;
              if (v68) {
                goto LABEL_141;
              }
              if (v74 >= v65)
              {
                uint64_t v92 = &v55[16 * v57];
                uint64_t v94 = *(void *)v92;
                uint64_t v93 = *((void *)v92 + 1);
                BOOL v68 = __OFSUB__(v93, v94);
                uint64_t v95 = v93 - v94;
                if (v68) {
                  goto LABEL_145;
                }
                BOOL v85 = v60 < v95;
                goto LABEL_103;
              }
            }
            else
            {
              if (v16 != 3)
              {
                uint64_t v86 = *((void *)v12 + 4);
                uint64_t v87 = *((void *)v12 + 5);
                BOOL v68 = __OFSUB__(v87, v86);
                uint64_t v79 = v87 - v86;
                char v80 = v68;
                goto LABEL_97;
              }
              uint64_t v59 = *((void *)v12 + 4);
              uint64_t v58 = *((void *)v12 + 5);
              BOOL v68 = __OFSUB__(v58, v59);
              uint64_t v60 = v58 - v59;
              char v61 = v68;
            }
            if (v61) {
              goto LABEL_137;
            }
            unint64_t v69 = v16 - 2;
            uint64_t v75 = &v55[16 * v16 - 32];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v78 = __OFSUB__(v76, v77);
            uint64_t v79 = v76 - v77;
            char v80 = v78;
            if (v78) {
              goto LABEL_140;
            }
            Class v81 = &v55[16 * v57];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v68 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v68) {
              goto LABEL_143;
            }
            if (__OFADD__(v79, v84)) {
              goto LABEL_144;
            }
            if (v79 + v84 >= v60)
            {
              BOOL v85 = v60 < v84;
LABEL_103:
              if (v85) {
                unint64_t v57 = v69;
              }
              goto LABEL_105;
            }
LABEL_97:
            if (v80) {
              goto LABEL_139;
            }
            uint64_t v88 = &v55[16 * v57];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v68 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v68) {
              goto LABEL_142;
            }
            if (v91 < v79) {
              goto LABEL_14;
            }
LABEL_105:
            unint64_t v96 = v57 - 1;
            if (v57 - 1 >= v16)
            {
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              goto LABEL_155;
            }
            if (!v14) {
              goto LABEL_157;
            }
            char v97 = v55;
            char v98 = &v55[16 * v96];
            uint64_t v99 = *(void *)v98;
            unint64_t v100 = v57;
            uint64_t v101 = &v97[16 * v57];
            uint64_t v102 = *((void *)v101 + 1);
            uint64_t v127 = (char *)(v14 + 8 * *(void *)v101);
            unint64_t v130 = (char *)(v14 + 8 * *(void *)v98);
            unint64_t v125 = v14 + 8 * v102;
            id v103 = v137;
            swift_retain();
            sub_10004C03C(v130, v127, v125, __dst, v103);
            if (v3)
            {
LABEL_127:
              swift_bridgeObjectRelease();
              uint64_t v115 = v137;

              swift_release();
              *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_1000EA490();
              swift_release_n();
              goto LABEL_129;
            }

            swift_release();
            if (v102 < v99) {
              goto LABEL_132;
            }
            id v12 = v133;
            if (v100 > *((void *)v133 + 2)) {
              goto LABEL_133;
            }
            unint64_t v104 = v100;
            *(void *)char v98 = v99;
            uint64_t v55 = v123;
            *(void *)&v123[16 * v96 + 8] = v102;
            unint64_t v105 = *((void *)v133 + 2);
            if (v100 >= v105) {
              goto LABEL_134;
            }
            unint64_t v16 = v105 - 1;
            memmove(v101, v101 + 16, 16 * (v105 - 1 - v104));
            *((void *)v133 + 2) = v105 - 1;
            uint64_t v14 = v135;
            if (v105 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v16 = 1;
LABEL_14:
        Swift::Int v13 = v121;
        Swift::Int v15 = v122;
        if (v121 >= v122) {
          goto LABEL_115;
        }
      }
LABEL_155:
      __break(1u);
LABEL_156:
      swift_release_n();

      __break(1u);
LABEL_157:
      swift_release_n();

      __break(1u);
LABEL_158:
      swift_release_n();

      __break(1u);
LABEL_159:
      swift_release_n();

      __break(1u);
      goto LABEL_160;
    }
    unint64_t v16 = _swiftEmptyArrayStorage[2];
LABEL_115:
    if (v16 >= 2)
    {
      uint64_t v107 = *v117;
      uint64_t v128 = *v117;
      do
      {
        unint64_t v108 = v16 - 2;
        if (v16 < 2) {
          goto LABEL_147;
        }
        if (!v107) {
          goto LABEL_159;
        }
        uint64_t v109 = *(void *)&v12[16 * v108 + 32];
        uint64_t v110 = *(void *)&v12[16 * v16 + 24];
        uint64_t v134 = (uint64_t)v12;
        uint64_t v136 = (char *)(v107 + 8 * v109);
        uint64_t v111 = (char *)(v107 + 8 * *(void *)&v12[16 * v16 + 16]);
        unint64_t v131 = v107 + 8 * v110;
        id v112 = v137;
        swift_retain();
        sub_10004C03C(v136, v111, v131, __dst, v112);
        if (v3) {
          goto LABEL_127;
        }

        swift_release();
        if (v110 < v109) {
          goto LABEL_148;
        }
        id v12 = (char *)v134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v12 = sub_100031060(v134);
        }
        if (v108 >= *((void *)v12 + 2)) {
          goto LABEL_149;
        }
        uint64_t v113 = &v12[16 * v108 + 32];
        *(void *)uint64_t v113 = v109;
        *((void *)v113 + 1) = v110;
        unint64_t v114 = *((void *)v12 + 2);
        if (v16 > v114) {
          goto LABEL_150;
        }
        memmove(&v12[16 * v16 + 16], &v12[16 * v16 + 32], 16 * (v114 - v16));
        *((void *)v12 + 2) = v114 - 1;
        unint64_t v16 = v114 - 1;
        uint64_t v107 = v128;
      }
      while (v114 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1000EA490();
    swift_release_n();
    uint64_t v115 = v137;
LABEL_129:

    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_160:
  swift_release_n();

  uint64_t result = sub_1000EA950();
  __break(1u);
  return result;
}

void sub_10004D120(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  swift_retain_n();
  id v5 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_10003232C(v3);
    *a1 = v3;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  v9[0] = v3 + 32;
  v9[1] = v7;
  id v8 = v5;
  swift_retain();
  sub_10004C60C(v9, v8);

  swift_release();
  sub_1000EA8D0();
  swift_release_n();
}

const char *sub_10004D1FC()
{
  return "personalizationScore";
}

id sub_10004D208@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 personalizationScore];
  *a2 = v4;
  return result;
}

id sub_10004D23C(double *a1, id *a2)
{
  return [*a2 setPersonalizationScore:*a1];
}

char *sub_10004D250(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  id v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    id v8 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v10 = a3[8];
    id v11 = &a1[v10];
    id v12 = (char **)((char *)a2 + v10);
    a1[56] = *((unsigned char *)a2 + 56);
    Swift::Int v13 = v5;
    uint64_t v14 = v8;
    Swift::Int v15 = v9;
    sub_10001B38C(&qword_100138370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_1000E93E0();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
    }
    else
    {
      *(void *)id v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[9];
    Swift::Int v18 = &a1[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    sub_10003D4B0(*(void *)v19, v21);
    *(void *)Swift::Int v18 = v20;
    v18[8] = v21;
    uint64_t v22 = a3[10];
    double v23 = &a1[v22];
    id v24 = (char **)((char *)a2 + v22);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_1000E9F90();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *(void *)double v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10004D460(id *a1, int *a2)
{
  int v4 = (char *)a1 + a2[8];
  sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000E93E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_10003D590(*(uint64_t *)((char *)a1 + a2[9]), *((unsigned char *)a1 + a2[9] + 8));
  id v6 = (char *)a1 + a2[10];
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E9F90();
    id v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10004D5B4(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  id v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v9 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = a3[8];
  id v11 = (void *)(a1 + v10);
  id v12 = (void *)(a2 + v10);
  *(_OWORD *)(a1 + 40) = v9;
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1000E93E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
  }
  else
  {
    *id v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_10003D4B0(*(void *)v19, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  uint64_t v22 = a3[10];
  double v23 = (void *)(a1 + v22);
  id v24 = (void *)(a2 + v22);
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *double v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10004D774(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  long long v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  id v12 = *(void **)(a1 + 16);
  id v13 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v13;
  id v14 = v13;

  long long v15 = *(_OWORD *)(a2 + 24);
  long long v16 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 24) = v15;
  if (a1 != a2)
  {
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_100028B6C(a1 + v17, &qword_100138370);
    sub_10001B38C(&qword_100138370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_1000E93E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_10003D4B0(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  sub_10003D590(v26, v27);
  if (a1 != a2)
  {
    uint64_t v28 = a3[10];
    uint64_t v29 = (void *)(a1 + v28);
    id v30 = (void *)(a2 + v28);
    sub_100028B6C(a1 + v28, &qword_100137A10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *uint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10004D988(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000E93E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  long long v15 = (void *)(a1 + v12);
  long long v16 = (const void *)(a2 + v12);
  uint64_t v17 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_1000E9F90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10004DB44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  if (a1 != a2)
  {
    uint64_t v9 = a3[8];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_100028B6C(a1 + v9, &qword_100138370);
    uint64_t v12 = sub_10001B38C(&qword_100138370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000E93E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  long long v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  LOBYTE(v16) = *((unsigned char *)v16 + 8);
  uint64_t v18 = *(void *)v15;
  char v19 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = (_BYTE)v16;
  sub_10003D590(v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = a3[10];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_100028B6C(a1 + v20, &qword_100137A10);
    uint64_t v23 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_1000E9F90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004DD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004DD74);
}

uint64_t sub_10004DD74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10001B38C(&qword_100138378);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 32);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_10001B38C(&qword_100137A18);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 40);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_10004DEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004DEC8);
}

void *sub_10004DEC8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *id result = a2;
  }
  else
  {
    uint64_t v8 = sub_10001B38C(&qword_100138378);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C(&qword_100137A18);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 40);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SmallBackgroundView(uint64_t a1)
{
  return sub_10004A6F4(a1, (uint64_t *)&unk_1001383D8);
}

void sub_10004E01C()
{
  sub_10004E13C(319, (unint64_t *)&unk_1001383E8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  if (v0 <= 0x3F)
  {
    sub_10004E13C(319, (unint64_t *)&qword_100137A88, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10004E13C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000E92A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10004E190()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004E1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v38 = sub_10001B38C(&qword_100138438);
  __chkstk_darwin(v38);
  Swift::Int v40 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_10001B38C(&qword_100138440);
  __chkstk_darwin(v39);
  uint64_t v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = type metadata accessor for Scrim(0);
  uint64_t v6 = __chkstk_darwin(v34);
  id v35 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::Int v36 = (uint64_t *)((char *)&v34 - v8);
  uint64_t v9 = type metadata accessor for SmallBackgroundView(0);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v37 + 64);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E9F90();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  sub_10007D854((uint64_t)&v34 - v17);
  sub_1000E9F80();
  sub_10004F6CC(&qword_100138448, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v19 = sub_1000EA240();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v20(v18, v12);
  if (v19)
  {
    sub_10004F3DC(a1, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SmallBackgroundView);
    unint64_t v21 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v22 = swift_allocObject();
    sub_10004F36C((uint64_t)v11, v22 + v21);
    uint64_t v23 = v40;
    *Swift::Int v40 = sub_10004F3D0;
    v23[1] = v22;
    swift_storeEnumTagMultiPayload();
    sub_10001B38C(&qword_100138458);
    sub_10001D100(&qword_100138460, &qword_100138440);
    sub_10001D100(&qword_100138468, &qword_100138458);
    return sub_1000E97F0();
  }
  else
  {
    uint64_t v25 = sub_10004E7B0();
    sub_10004F3DC(a1, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SmallBackgroundView);
    unint64_t v26 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v27 = swift_allocObject();
    sub_10004F36C((uint64_t)v11, v27 + v26);
    uint64_t v28 = *(void **)(a1 + 16);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = (uint64_t)v36;
    *Swift::Int v36 = KeyPath;
    sub_10001B38C(&qword_100137A10);
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = (uint64_t)v35;
    *(void *)(v30 + *(int *)(v34 + 20)) = v28;
    sub_10004F3DC(v30, v31, type metadata accessor for Scrim);
    uint64_t *v5 = v25;
    v5[1] = (uint64_t)sub_10004F3D0;
    v5[2] = v27;
    uint64_t v32 = sub_10001B38C(&qword_100138450);
    sub_10004F3DC(v31, (uint64_t)v5 + *(int *)(v32 + 64), type metadata accessor for Scrim);
    id v33 = v28;
    swift_retain_n();
    swift_retain_n();
    sub_10004F444(v31);
    swift_release();
    swift_release();
    sub_10002DA34((uint64_t)v5, (uint64_t)v40, &qword_100138440);
    swift_storeEnumTagMultiPayload();
    sub_10001B38C(&qword_100138458);
    sub_10001D100(&qword_100138460, &qword_100138440);
    sub_10001D100(&qword_100138468, &qword_100138458);
    sub_1000E97F0();
    sub_100028B6C((uint64_t)v5, &qword_100138440);
    sub_10004F444(v30);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10004E7B0()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1000E9F90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  type metadata accessor for SmallBackgroundView(0);
  sub_10007D854((uint64_t)v8);
  sub_1000E9F80();
  sub_10004F6CC(&qword_100138448, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v9 = sub_1000EA240();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  if (v9) {
    return sub_1000E9BC0();
  }
  if (!*v1) {
    return sub_1000E9BD0();
  }
  id v12 = *v1;
  return sub_1000E9C40();
}

void sub_10004E944(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10001B38C(&qword_100137F10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000E9C60();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10001B38C(&qword_100137F18);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v66 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10001B38C(&qword_100137F20);
  __chkstk_darwin(v65);
  *(void *)&long long v70 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10001B38C(&qword_100138470);
  __chkstk_darwin(v67);
  uint64_t v72 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001B38C(&qword_100138478);
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E93E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v60 - v19;
  unint64_t v21 = *(void **)(v2 + 8);
  if (v21)
  {
    uint64_t v60 = v6;
    uint64_t v61 = v12;
    uint64_t v62 = a1;
    uint64_t v22 = type metadata accessor for SmallBackgroundView(0);
    id v23 = v21;
    sub_10007DA98((uint64_t)v20);
    sub_1000E93D0();
    sub_10004F6CC(&qword_100138480, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v24 = sub_1000EA7B0();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
    v25(v18, v14);
    v25(v20, v14);
    if ((v24 & 1) == 0)
    {
      if (*(unsigned char *)(v2 + 56))
      {
        id v28 = v23;
      }
      else
      {
        uint64_t v29 = v2 + *(int *)(v22 + 36);
        uint64_t v30 = *(void *)v29;
        char v31 = *(unsigned char *)(v29 + 8);
        sub_10003D4B0(*(void *)v29, v31);
        sub_10007D88C(v30, v31);
        sub_10003D590(v30, v31);
        id v28 = (id)sub_1000EA6F0();
      }
      id v32 = v28;
      sub_1000E9C50();
      uint64_t v33 = v63;
      uint64_t v34 = v64;
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v64);
      sub_1000E9CC0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
      uint64_t v35 = (uint64_t)v60;
      sub_1000E9FA0();
      uint64_t v36 = sub_1000E9FC0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
      uint64_t v37 = v66;
      sub_1000E9CB0();
      swift_release();
      sub_100028B6C(v35, &qword_100137F10);
      uint64_t v38 = v68;
      uint64_t v39 = v70;
      uint64_t v40 = v69;
      (*(void (**)(void, char *, uint64_t))(v68 + 16))(v70, v37, v69);
      uint64_t v41 = v39 + *(int *)(v65 + 36);
      *(void *)uint64_t v41 = 0;
      *(_WORD *)(v41 + 8) = 257;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v40);
      sub_1000E9DC0();
      sub_1000E9300();
      uint64_t v42 = v72;
      sub_10002DA34(v39, v72, &qword_100137F20);
      uint64_t v43 = (_OWORD *)(v42 + *(int *)(v67 + 36));
      long long v44 = v74;
      _OWORD *v43 = v73;
      v43[1] = v44;
      v43[2] = v75;
      sub_100028B6C(v39, &qword_100137F20);
      sub_1000E9BC0();
      uint64_t v45 = sub_1000E9D50();
      uint64_t v47 = v46;
      sub_1000E9BC0();
      uint64_t v48 = sub_1000E9D50();
      uint64_t v50 = v49;
      sub_1000E9BC0();
      sub_1000E9C00();
      swift_release();
      uint64_t v51 = sub_1000E9D50();
      uint64_t v53 = v52;
      sub_10001B38C((uint64_t *)&unk_100139FD0);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1000F2570;
      *(void *)(v54 + 32) = v45;
      *(void *)(v54 + 40) = v47;
      *(void *)(v54 + 48) = v48;
      *(void *)(v54 + 56) = v50;
      *(void *)(v54 + 64) = v51;
      *(void *)(v54 + 72) = v53;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000E9D60();
      sub_1000E9DD0();
      sub_1000E9DE0();
      sub_1000E9360();
      uint64_t v55 = v76;
      long long v70 = v77;
      uint64_t v56 = v78;
      uint64_t v57 = v79;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v58 = v71;
      sub_10002DA34(v42, v71, &qword_100138470);
      uint64_t v59 = v58 + *(int *)(v61 + 36);
      *(void *)uint64_t v59 = v55;
      *(_OWORD *)(v59 + 8) = v70;
      *(void *)(v59 + 24) = v56;
      *(void *)(v59 + 32) = v57;
      sub_100028B6C(v42, &qword_100138470);
      sub_10004F714();
      uint64_t v27 = sub_1000E9D10();

      a1 = v62;
      goto LABEL_11;
    }

    a1 = v62;
  }
  if (qword_100135E08 != -1) {
    swift_once();
  }
  id v26 = (id)qword_10014BE20;
  *(void *)&long long v73 = sub_1000E9C40();
  uint64_t v27 = sub_1000E9D10();
LABEL_11:
  *a1 = v27;
}

void sub_10004F1D8(void *a1@<X8>)
{
  sub_1000E9310();
  sub_1000E9310();
  sub_10004E944(&v2);
  *a1 = v2;
}

uint64_t sub_10004F24C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1000E9DA0();
  a1[1] = v3;
  uint64_t v4 = sub_10001B38C(&qword_100138430);
  return sub_10004E1AC(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t type metadata accessor for Scrim(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_100138500);
}

void sub_10004F2B0(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + *(int *)(type metadata accessor for Scrim(0) + 20));
  if (v3)
  {
    id v4 = v3;
    [v4 ts_luminance];
    double v6 = v5;
    sub_100050038();
    sub_1000EA6E0();
    if (v7 >= v6)
    {
      uint64_t v8 = sub_1000E9BD0();
    }
    else
    {
      sub_1000E9BC0();
      uint64_t v8 = sub_1000E9C00();
      swift_release();
    }
  }
  else
  {
    uint64_t v8 = sub_1000E9BD0();
  }
  *a1 = v8;
}

uint64_t sub_10004F36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmallBackgroundView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004F3DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F444(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Scrim(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004F4A4()
{
  uint64_t v1 = (int *)type metadata accessor for SmallBackgroundView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  uint64_t v6 = v0 + v3 + v1[8];
  sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E93E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_10003D590(*(void *)(v5 + v1[9]), *(unsigned char *)(v5 + v1[9] + 8));
  uint64_t v8 = v5 + v1[10];
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_10004F658(void *a1@<X8>)
{
}

uint64_t sub_10004F6CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004F714()
{
  unint64_t result = qword_100138488;
  if (!qword_100138488)
  {
    sub_10001B3D0(&qword_100138478);
    sub_10004F7B4();
    sub_10001D100(&qword_100138498, &qword_1001384A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138488);
  }
  return result;
}

unint64_t sub_10004F7B4()
{
  unint64_t result = qword_100138490;
  if (!qword_100138490)
  {
    sub_10001B3D0(&qword_100138470);
    sub_1000488BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138490);
  }
  return result;
}

uint64_t *sub_10004F830(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E9F90();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    id v11 = v10;
  }
  return a1;
}

void sub_10004F950(uint64_t a1, uint64_t a2)
{
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

void *sub_10004F9F0(void *a1, void *a2, uint64_t a3)
{
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

void *sub_10004FAC0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_100137A10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)((char *)a1 + v7);
  id v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  id v10 = v9;

  return a1;
}

char *sub_10004FBB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E9F90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10004FC84(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_100137A10);
    uint64_t v6 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E9F90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  id v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  return a1;
}

uint64_t sub_10004FD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004FD8C);
}

uint64_t sub_10004FD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001B38C(&qword_100137A18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10004FE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004FE70);
}

uint64_t sub_10004FE70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10001B38C(&qword_100137A18);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

void sub_10004FF30()
{
  sub_10004E13C(319, (unint64_t *)&qword_100137A88, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10004FFE0()
{
  return sub_10001D100(&qword_100138538, (uint64_t *)&unk_100138540);
}

uint64_t sub_10005001C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100050038()
{
  unint64_t result = qword_100139070;
  if (!qword_100139070)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100139070);
  }
  return result;
}

void *sub_100050078()
{
  return &protocol witness table for Color;
}

void sub_100050088(int a1, id a2)
{
  id v3 = [a2 todayResults];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 banner];

    if (v5)
    {
      uint64_t v6 = (void *)(v2 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store);
      sub_100020A28((void *)(v2 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store), *(void *)(v2 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store + 24));
      id v7 = [v5 identifier];
      uint64_t v8 = sub_1000EA2B0();
      uint64_t v10 = v9;

      sub_1000E8F40();
      if (v31)
      {
        if (*(void *)(v31 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v11 = sub_10003BAEC(v8, v10);
          if (v12)
          {
            uint64_t v13 = (uint64_t *)(*(void *)(v31 + 56) + 16 * v11);
            uint64_t v15 = *v13;
            uint64_t v14 = v13[1];
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
      uint64_t v14 = 0;
LABEL_18:
      uint64_t v19 = v15 + 1;
      if (v15 == -1)
      {
        __break(1u);
      }
      else
      {
        sub_100020A28(v6, v6[3]);
        id v20 = [v5 identifier];
        uint64_t v21 = sub_1000EA2B0();
        uint64_t v23 = v22;

        sub_1000E8F40();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1000BE10C(v19, v14, v21, v23, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000E8F50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_100135E40 == -1) {
          goto LABEL_20;
        }
      }
      swift_once();
LABEL_20:
      uint64_t v25 = sub_1000E9260();
      sub_10001C4C8(v25, (uint64_t)static Logger.todayWidgetBanner);
      id v26 = v5;
      uint64_t v27 = sub_1000E9240();
      os_log_type_t v28 = sub_1000EA620();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 134218240;
        sub_1000EA750();
        *(_WORD *)(v29 + 12) = 2048;
        [v26 numberOfAppearancesToHide];
        sub_1000EA750();

        _os_log_impl((void *)&_mh_execute_header, v27, v28, "TodayBannerEventTracker banner appeared, appearances=%lu numberOfAppearancesToHide=%llu", (uint8_t *)v29, 0x16u);
        swift_slowDealloc();
      }
      else
      {
      }
      return;
    }
  }
  if (qword_100135E40 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1000E9260();
  sub_10001C4C8(v16, (uint64_t)static Logger.todayWidgetBanner);
  oslog = sub_1000E9240();
  os_log_type_t v17 = sub_1000EA620();
  if (os_log_type_enabled(oslog, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v17, "TodayBannerEventTracker will ignore appearance when there is no banner", v18, 2u);
    swift_slowDealloc();
  }
}

void sub_1000505B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)&v64 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v64 - v13;
  id v15 = [a3 todayResults];
  if (v15)
  {
    uint64_t v16 = v15;
    os_log_type_t v17 = [v15 banner];

    if (v17)
    {
      sub_10002230C(a2, (uint64_t)v14);
      uint64_t v18 = sub_1000E8B60();
      uint64_t v19 = *(void *)(v18 - 8);
      id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v14, 1, v18) == 1)
      {
        sub_100028B6C((uint64_t)v14, (uint64_t *)&unk_1001370F0);
LABEL_24:
        if (qword_100135E40 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_1000E9260();
        sub_10001C4C8(v47, (uint64_t)static Logger.todayWidgetBanner);
        uint64_t v48 = sub_1000E9240();
        os_log_type_t v49 = sub_1000EA620();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v50 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "TodayBannerEventTracker will not track engagement when actionURL is unrelated", v50, 2u);
          swift_slowDealloc();

          return;
        }

        goto LABEL_29;
      }
      uint64_t v64 = v3;
      uint64_t v65 = sub_1000E8AB0();
      uint64_t v66 = v25;
      id v26 = v14;
      uint64_t v27 = *(void (**)(char *, uint64_t))(v19 + 8);
      v27(v26, v18);
      uint64_t v67 = v17;
      id v28 = [v17 actionURL];
      if (v28)
      {
        uint64_t v29 = v28;
        sub_1000E8B20();

        uint64_t v30 = 0;
      }
      else
      {
        uint64_t v30 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v9, v30, 1, v18);
      sub_100020B80((uint64_t)v9, (uint64_t)v12);
      if (v20(v12, 1, v18) == 1)
      {
        swift_bridgeObjectRelease();
        sub_100028B6C((uint64_t)v12, (uint64_t *)&unk_1001370F0);
LABEL_23:
        os_log_type_t v17 = v67;
        goto LABEL_24;
      }
      uint64_t v31 = sub_1000E8AB0();
      uint64_t v33 = v32;
      v27(v12, v18);
      uint64_t v35 = v65;
      unint64_t v34 = v66;
      v70[0] = v65;
      v70[1] = v66;
      uint64_t v68 = v31;
      uint64_t v69 = v33;
      sub_1000295C0();
      LOBYTE(v31) = sub_1000EA790();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      uint64_t v36 = (void *)(v64 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store);
      sub_100020A28((void *)(v64 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store), *(void *)(v64 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store + 24));
      id v37 = [v67 identifier];
      uint64_t v38 = sub_1000EA2B0();
      uint64_t v40 = v39;

      sub_1000E8F40();
      uint64_t v41 = v70[0];
      if (v70[0])
      {
        if (*(void *)(v70[0] + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v42 = sub_10003BAEC(v38, v40);
          if (v43)
          {
            long long v44 = (uint64_t *)(*(void *)(v41 + 56) + 16 * v42);
            uint64_t v46 = *v44;
            uint64_t v45 = v44[1];
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_34;
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v46 = 0;
      uint64_t v45 = 0;
LABEL_34:
      unint64_t v51 = (unint64_t)&v45->isa + 1;
      if (v45 == -1)
      {
        __break(1u);
      }
      else
      {
        sub_100020A28(v36, v36[3]);
        uint64_t v45 = v67;
        id v52 = [v67 identifier];
        uint64_t v53 = sub_1000EA2B0();
        uint64_t v55 = v54;

        sub_1000E8F40();
        if (v70[0]) {
          uint64_t v56 = (void *)v70[0];
        }
        else {
          uint64_t v56 = &_swiftEmptyDictionarySingleton;
        }
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v70[0] = (uint64_t)v56;
        sub_1000BE10C(v46, v51, v53, v55, isUniquelyReferenced_nonNull_native);
        uint64_t v58 = v70[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v70[0] = v58;
        sub_1000E8F50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_100135E40 == -1)
        {
LABEL_39:
          uint64_t v59 = sub_1000E9260();
          sub_10001C4C8(v59, (uint64_t)static Logger.todayWidgetBanner);
          os_log_type_t v17 = v45;
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_1000E9240();
          os_log_type_t v61 = sub_1000EA620();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t v62 = swift_slowAlloc();
            v70[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v62 = 136315650;
            swift_bridgeObjectRetain();
            uint64_t v68 = sub_1000B1D7C(v35, v34, v70);
            sub_1000EA750();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v62 + 12) = 2048;
            uint64_t v68 = v51;
            sub_1000EA750();
            *(_WORD *)(v62 + 22) = 2048;
            id v63 = [v17 numberOfTapsToHide];

            uint64_t v68 = (uint64_t)v63;
            sub_1000EA750();

            _os_log_impl((void *)&_mh_execute_header, v60, v61, "TodayBannerEventTracker banner engaged, url=%s engagements=%lu numberOfTapsToHide=%llu", (uint8_t *)v62, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          if (v51 >= (unint64_t)[v17 numberOfTapsToHide])
          {
            sub_1000EA050();
            sub_1000EA040();
            sub_1000EA020();
            swift_release();
          }
LABEL_29:

          return;
        }
      }
      swift_once();
      goto LABEL_39;
    }
  }
  if (qword_100135E40 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1000E9260();
  sub_10001C4C8(v21, (uint64_t)static Logger.todayWidgetBanner);
  uint64_t v67 = sub_1000E9240();
  os_log_type_t v22 = sub_1000EA620();
  if (os_log_type_enabled(v67, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v67, v22, "TodayBannerEventTracker will ignore engagement when there is no banner", v23, 2u);
    swift_slowDealloc();
  }
  char v24 = v67;
}

uint64_t sub_1000512C0(const void *a1)
{
  uint64_t v2 = (void (**)(void))_Block_copy(a1);
  v2[2]();
  _Block_release(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return sub_100051C88(v3);
}

uint64_t type metadata accessor for TodayBannerEventTracker()
{
  return self;
}

uint64_t sub_1000513C0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100051400()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10001A400;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_100138588 + dword_100138588);
  return v4(v2);
}

uint64_t sub_1000514AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_100051C90;
  return v6();
}

uint64_t sub_10005157C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100051C90;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100138598 + dword_100138598);
  return v6(v2, v3, v4);
}

uint64_t sub_10005163C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_100051C90;
  return v7();
}

uint64_t sub_10005170C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10005174C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100051C90;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1001385A8 + dword_1001385A8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100051818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000EA590();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1000EA580();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100028B6C(a1, &qword_100138580);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000EA550();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000519C4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_100051AA0;
  return v6(a1);
}

uint64_t sub_100051AA0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100051B98()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100051BD0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10001A400;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1001385B8 + dword_1001385B8);
  return v6(a1, v4);
}

uint64_t sub_100051C88(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_100051C94(unint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v19 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10003D4B0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(v3 + 16);
    uint64_t v10 = *(void *)(v3 + 24);
    uint64_t v11 = *(void *)(v3 + 32);
    uint64_t v12 = *(void *)(v3 + 40);
    char v13 = *(unsigned char *)(v3 + 48);
    sub_100052470(v9, v10, v11, v12, v13);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 48) = v13;
    uint64_t v14 = v6[6];
    id v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(v3 + v14);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *id v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = v6[7];
    uint64_t v21 = (void *)(a1 + v20);
    os_log_type_t v22 = (void *)(v3 + v20);
    type metadata accessor for Item(0);
    uint64_t v109 = v6;
    uint64_t v111 = v3;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = v22[1];
      void *v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = v22[1];
      void *v21 = *v22;
      v21[1] = v24;
      uint64_t v25 = type metadata accessor for Item.Headline(0);
      uint64_t v26 = *(int *)(v25 + 24);
      __dst = (char *)v21 + v26;
      unint64_t v104 = (int *)v25;
      uint64_t v27 = (char *)v22 + v26;
      uint64_t v28 = sub_1000E8B60();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v30(v27, 1, v28))
      {
        uint64_t v31 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
      }
      uint64_t v6 = v109;
      uint64_t v32 = v104[7];
      uint64_t v33 = (void *)((char *)v21 + v32);
      unint64_t v34 = (char *)v22 + v32;
      uint64_t v35 = (void *)*((void *)v34 + 1);
      if (v35)
      {
        uint64_t v36 = *(void **)v34;
        *uint64_t v33 = v36;
        v33[1] = v35;
        id v37 = v36;
        id v38 = v35;
      }
      else
      {
        *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      }
      uint64_t v3 = v111;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v6[8];
    uint64_t v40 = a1 + v39;
    uint64_t v41 = v3 + v39;
    unint64_t v42 = *(void **)(v3 + v39);
    *(void *)(a1 + v39) = v42;
    uint64_t v107 = (int *)type metadata accessor for TodayContent();
    uint64_t v43 = v107[5];
    long long v44 = (void *)(v40 + v43);
    uint64_t v45 = (void *)(v41 + v43);
    uint64_t v46 = (int *)type metadata accessor for Banner();
    uint64_t v47 = (void *)*((void *)v46 - 1);
    uint64_t v48 = (unsigned int (*)(void *, uint64_t, int *))v47[6];
    id v49 = v42;
    unint64_t v108 = a1;
    if (v48(v45, 1, v46))
    {
      uint64_t v50 = sub_10001B38C(&qword_1001385E0);
      memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      __dsta = v46;
      unint64_t v105 = v47;
      uint64_t v51 = v45[1];
      *long long v44 = *v45;
      v44[1] = v51;
      uint64_t v52 = v45[3];
      v44[2] = v45[2];
      _OWORD v44[3] = v52;
      uint64_t v53 = v45[5];
      _OWORD v44[4] = v45[4];
      v44[5] = v53;
      uint64_t v54 = v46[7];
      unint64_t v100 = (char *)v44 + v54;
      uint64_t v55 = (char *)v45 + v54;
      uint64_t v56 = sub_1000E8B60();
      uint64_t v99 = *(void *)(v56 - 8);
      uint64_t v101 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48);
      uint64_t v57 = v55;
      uint64_t v58 = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v101(v57, 1, v58))
      {
        uint64_t v59 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v100, v57, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v99 + 16))(v100, v57, v58);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v100, 0, 1, v58);
      }
      uint64_t v60 = v46[8];
      os_log_type_t v61 = (void *)((char *)v44 + v60);
      uint64_t v62 = (void *)((char *)v45 + v60);
      uint64_t v63 = v62[1];
      *os_log_type_t v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v46[9];
      uint64_t v65 = *(void **)((char *)v45 + v64);
      swift_bridgeObjectRetain();
      if (v65 != (void *)1) {
        id v66 = v65;
      }
      *(void *)((char *)v44 + v64) = v65;
      uint64_t v67 = __dsta[10];
      uint64_t v68 = (char *)v44 + v67;
      uint64_t v69 = (char *)v45 + v67;
      long long v70 = *(void **)v69;
      uint64_t v71 = (void *)*((void *)v69 + 1);
      char v72 = v69[16];
      sub_10001D614(*(void **)v69, v71);
      *(void *)uint64_t v68 = v70;
      *((void *)v68 + 1) = v71;
      v68[16] = v72;
      (*((void (**)(void *, void, uint64_t, int *))v105 + 7))(v44, 0, 1, __dsta);
    }
    *(void *)(v40 + v107[6]) = *(void *)(v41 + v107[6]);
    *(void *)(v40 + v107[7]) = *(void *)(v41 + v107[7]);
    *(unsigned char *)(v40 + v107[8]) = *(unsigned char *)(v41 + v107[8]);
    uint64_t v73 = v107[9];
    uint64_t v106 = (void *)(v40 + v73);
    long long v74 = (const void *)(v41 + v73);
    uint64_t v75 = sub_1000E8B60();
    uint64_t v76 = *(void *)(v75 - 8);
    long long v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v77(v74, 1, v75))
    {
      uint64_t v78 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v106, v74, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v76 + 16))(v106, v74, v75);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v106, 0, 1, v75);
    }
    *(void *)(v40 + v107[10]) = *(void *)(v41 + v107[10]);
    uint64_t v79 = v107[11];
    char v80 = (void *)(v40 + v79);
    Class v81 = (void *)(v41 + v79);
    uint64_t v82 = v81[1];
    void *v80 = *v81;
    v80[1] = v82;
    uint64_t v83 = v107[12];
    uint64_t v84 = (void *)(v40 + v83);
    BOOL v85 = (void *)(v41 + v83);
    uint64_t v86 = v85[1];
    *uint64_t v84 = *v85;
    v84[1] = v86;
    uint64_t v87 = v109[9];
    unint64_t v19 = v108;
    uint64_t v88 = v108 + v87;
    uint64_t v89 = v111 + v87;
    *(_OWORD *)(v108 + v87) = *(_OWORD *)(v111 + v87);
    uint64_t v90 = (int *)type metadata accessor for LayoutContext();
    uint64_t v91 = v90[6];
    uint64_t v110 = v89 + v91;
    uint64_t v112 = v88 + v91;
    uint64_t v92 = sub_1000E9F60();
    uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93(v112, v110, v92);
    *(_OWORD *)(v88 + v90[7]) = *(_OWORD *)(v89 + v90[7]);
    uint64_t v94 = v90[8];
    uint64_t v95 = v88 + v94;
    uint64_t v96 = v89 + v94;
    uint64_t v97 = sub_1000E96F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
    *(void *)(v88 + v90[9]) = *(void *)(v89 + v90[9]);
    *(void *)(v88 + v90[10]) = *(void *)(v89 + v90[10]);
    *(unsigned char *)(v88 + v90[11]) = *(unsigned char *)(v89 + v90[11]);
    *(unsigned char *)(v88 + v90[12]) = *(unsigned char *)(v89 + v90[12]);
  }
  return v19;
}

uint64_t sub_100052470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10005247C(uint64_t a1, int *a2)
{
  sub_10003D590(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_1000528C4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  uint64_t v4 = a1 + a2[6];
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  type metadata accessor for Item(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = type metadata accessor for Item.Headline(0);
    uint64_t v8 = v6 + *(int *)(v7 + 24);
    uint64_t v9 = sub_1000E8B60();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = (id *)(v6 + *(int *)(v7 + 28));
    if (v11[1])
    {
    }
  }
  uint64_t v12 = (id *)(a1 + a2[8]);

  uint64_t v13 = type metadata accessor for TodayContent();
  uint64_t v14 = (char *)v12 + *(int *)(v13 + 20);
  id v15 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v15 - 1) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = &v14[v15[7]];
    uint64_t v17 = sub_1000E8B60();
    uint64_t v18 = *(void *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = *(void **)&v14[v15[9]];
    if (v19 != (void *)1) {

    }
    sub_10001D758(*(void **)&v14[v15[10]], *(void **)&v14[v15[10] + 8]);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v20 = (char *)v12 + *(int *)(v13 + 36);
  uint64_t v21 = sub_1000E8B60();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = a1 + a2[9];
  uint64_t v24 = type metadata accessor for LayoutContext();
  uint64_t v25 = v23 + *(int *)(v24 + 24);
  uint64_t v26 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = v23 + *(int *)(v24 + 32);
  uint64_t v28 = sub_1000E96F0();
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);

  return v29(v27, v28);
}

uint64_t sub_1000528C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000528D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10003D4B0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = *(void *)(v4 + 32);
  uint64_t v11 = *(void *)(v4 + 40);
  char v12 = *(unsigned char *)(v4 + 48);
  sub_100052470(v8, v9, v10, v11, v12);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = v12;
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (void *)(v4 + v13);
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(v4 + v17);
  type metadata accessor for Item(0);
  uint64_t v103 = v4;
  uint64_t v105 = a1;
  uint64_t v102 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v21 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v21;
    __dst = (int *)type metadata accessor for Item.Headline(0);
    uint64_t v22 = __dst[6];
    uint64_t v23 = (char *)v18 + v22;
    uint64_t v24 = (char *)v19 + v22;
    uint64_t v25 = sub_1000E8B60();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v29 = __dst[7];
    uint64_t v30 = (void *)((char *)v18 + v29);
    uint64_t v31 = (char *)v19 + v29;
    uint64_t v32 = (void *)*((void *)v31 + 1);
    if (v32)
    {
      uint64_t v33 = *(void **)v31;
      *uint64_t v30 = v33;
      v30[1] = v32;
      id v34 = v33;
      id v35 = v32;
    }
    else
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    }
    uint64_t v4 = v103;
    a1 = v105;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = a3[8];
  id v37 = (void *)(a1 + v36);
  uint64_t v38 = v4 + v36;
  uint64_t v39 = *(void **)(v4 + v36);
  void *v37 = v39;
  uint64_t v40 = (int *)type metadata accessor for TodayContent();
  uint64_t v41 = v40[5];
  unint64_t v42 = (void *)((char *)v37 + v41);
  uint64_t v43 = (void *)(v38 + v41);
  long long v44 = (int *)type metadata accessor for Banner();
  uint64_t v45 = (void *)*((void *)v44 - 1);
  uint64_t v46 = (unsigned int (*)(void *, uint64_t, int *))v45[6];
  id v47 = v39;
  if (v46(v43, 1, v44))
  {
    uint64_t v48 = sub_10001B38C(&qword_1001385E0);
    memcpy(v42, v43, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    uint64_t v49 = v43[1];
    *unint64_t v42 = *v43;
    v42[1] = v49;
    uint64_t v50 = v43[3];
    v42[2] = v43[2];
    _OWORD v42[3] = v50;
    uint64_t v51 = v43[5];
    v42[4] = v43[4];
    v42[5] = v51;
    uint64_t v52 = v44[7];
    __dsta = (char *)v42 + v52;
    unint64_t v100 = v45;
    uint64_t v96 = (char *)v43 + v52;
    uint64_t v53 = sub_1000E8B60();
    uint64_t v95 = *(void *)(v53 - 8);
    uint64_t v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v97(v96, 1, v53))
    {
      uint64_t v54 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dsta, v96, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(__dsta, v96, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(__dsta, 0, 1, v53);
    }
    uint64_t v55 = v44[8];
    uint64_t v56 = (void *)((char *)v42 + v55);
    uint64_t v57 = (void *)((char *)v43 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = v44[9];
    uint64_t v60 = *(void **)((char *)v43 + v59);
    swift_bridgeObjectRetain();
    if (v60 != (void *)1) {
      id v61 = v60;
    }
    *(void *)((char *)v42 + v59) = v60;
    uint64_t v62 = v44[10];
    uint64_t v63 = (char *)v42 + v62;
    uint64_t v64 = (char *)v43 + v62;
    uint64_t v65 = *(void **)v64;
    id v66 = (void *)*((void *)v64 + 1);
    char v67 = v64[16];
    sub_10001D614(*(void **)v64, v66);
    *(void *)uint64_t v63 = v65;
    *((void *)v63 + 1) = v66;
    v63[16] = v67;
    (*((void (**)(void *, void, uint64_t, int *))v100 + 7))(v42, 0, 1, v44);
  }
  *(void *)((char *)v37 + v40[6]) = *(void *)(v38 + v40[6]);
  *(void *)((char *)v37 + v40[7]) = *(void *)(v38 + v40[7]);
  *((unsigned char *)v37 + v40[8]) = *(unsigned char *)(v38 + v40[8]);
  uint64_t v68 = v40[9];
  uint64_t v101 = (char *)v37 + v68;
  uint64_t v69 = (const void *)(v38 + v68);
  uint64_t v70 = sub_1000E8B60();
  uint64_t v71 = *(void *)(v70 - 8);
  char v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v72(v69, 1, v70))
  {
    uint64_t v73 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v101, v69, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v71 + 16))(v101, v69, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v101, 0, 1, v70);
  }
  *(void *)((char *)v37 + v40[10]) = *(void *)(v38 + v40[10]);
  uint64_t v74 = v40[11];
  uint64_t v75 = (void *)((char *)v37 + v74);
  uint64_t v76 = (void *)(v38 + v74);
  uint64_t v77 = v76[1];
  void *v75 = *v76;
  v75[1] = v77;
  uint64_t v78 = v40[12];
  uint64_t v79 = (void *)((char *)v37 + v78);
  char v80 = (void *)(v38 + v78);
  uint64_t v81 = v80[1];
  *uint64_t v79 = *v80;
  v79[1] = v81;
  uint64_t v82 = v102[9];
  uint64_t v83 = v105 + v82;
  uint64_t v84 = v103 + v82;
  *(_OWORD *)(v105 + v82) = *(_OWORD *)(v103 + v82);
  BOOL v85 = (int *)type metadata accessor for LayoutContext();
  uint64_t v86 = v85[6];
  uint64_t v104 = v83 + v86;
  uint64_t v87 = v84 + v86;
  uint64_t v88 = sub_1000E9F60();
  uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89(v104, v87, v88);
  *(_OWORD *)(v83 + v85[7]) = *(_OWORD *)(v84 + v85[7]);
  uint64_t v90 = v85[8];
  uint64_t v91 = v83 + v90;
  uint64_t v92 = v84 + v90;
  uint64_t v93 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
  *(void *)(v83 + v85[9]) = *(void *)(v84 + v85[9]);
  *(void *)(v83 + v85[10]) = *(void *)(v84 + v85[10]);
  *(unsigned char *)(v83 + v85[11]) = *(unsigned char *)(v84 + v85[11]);
  *(unsigned char *)(v83 + v85[12]) = *(unsigned char *)(v84 + v85[12]);
  return v105;
}

uint64_t sub_100053058(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10003D4B0(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10003D590(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  char v14 = *(unsigned char *)(a2 + 48);
  sub_100052470(v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  char v19 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(unsigned char *)(a1 + 48) = v14;
  sub_1000528C4(v15, v16, v17, v18, v19);
  uint64_t v134 = a3;
  uint64_t v135 = a2;
  if (a1 != a2)
  {
    uint64_t v20 = a3[6];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_100028B6C(a1 + v20, &qword_100137A10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      void *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[7];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    sub_100053BD8(a1 + v24, type metadata accessor for Item);
    type metadata accessor for Item(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v25 = *v26;
      v25[1] = v26[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v25 = *v26;
      v25[1] = v26[1];
      uint64_t v27 = type metadata accessor for Item.Headline(0);
      uint64_t v28 = *(int *)(v27 + 24);
      __dst = (char *)v25 + v28;
      __src = (int *)v27;
      uint64_t v29 = (char *)v26 + v28;
      uint64_t v30 = sub_1000E8B60();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v32(v29, 1, v30))
      {
        uint64_t v33 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
      }
      a3 = v134;
      uint64_t v34 = __src[7];
      id v35 = (void *)((char *)v25 + v34);
      uint64_t v36 = (char *)v26 + v34;
      if (*((void *)v36 + 1))
      {
        id v37 = *(void **)v36;
        *id v35 = *(void *)v36;
        uint64_t v38 = (void *)*((void *)v36 + 1);
        v35[1] = v38;
        id v39 = v37;
        id v40 = v38;
      }
      else
      {
        *(_OWORD *)id v35 = *(_OWORD *)v36;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v41 = a3[8];
  unint64_t v42 = (void **)(a1 + v41);
  uint64_t v43 = a2 + v41;
  long long v44 = *(void **)(a2 + v41);
  uint64_t v45 = *v42;
  *unint64_t v42 = v44;
  id v46 = v44;

  uint64_t v136 = (int *)type metadata accessor for TodayContent();
  uint64_t v47 = v136[5];
  uint64_t v48 = (void **)((char *)v42 + v47);
  uint64_t v49 = (void *)(v43 + v47);
  uint64_t v50 = (int *)type metadata accessor for Banner();
  uint64_t v51 = *((void *)v50 - 1);
  uint64_t v52 = *(uint64_t (**)(void *, uint64_t, int *))(v51 + 48);
  LODWORD(v45) = v52(v48, 1, v50);
  int v53 = v52(v49, 1, v50);
  if (!v45)
  {
    if (v53)
    {
      sub_100053BD8((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_20;
    }
    void *v48 = *v49;
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v48[2] = v49[2];
    _OWORD v48[3] = v49[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _OWORD v48[4] = v49[4];
    v48[5] = v49[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v58 = v50[7];
    uint64_t v59 = (char *)v48 + v58;
    __srcb = (char *)v49 + v58;
    uint64_t v60 = sub_1000E8B60();
    uint64_t v128 = *(void *)(v60 - 8);
    __dsta = v59;
    id v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 48);
    LODWORD(v59) = v61(v59, 1, v60);
    int v62 = v61(__srcb, 1, v60);
    if (v59)
    {
      if (v62)
      {
        size_t v63 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v64 = __dsta;
LABEL_30:
        memcpy(v64, __srcb, v63);
        goto LABEL_33;
      }
      (*(void (**)(void *, char *, uint64_t))(v128 + 16))(__dsta, __srcb, v60);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v128 + 56))(__dsta, 0, 1, v60);
    }
    else
    {
      if (v62)
      {
        (*(void (**)(void *, uint64_t))(v128 + 8))(__dsta, v60);
        size_t v63 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v64 = __dsta;
        goto LABEL_30;
      }
      (*(void (**)(void *, char *, uint64_t))(v128 + 24))(__dsta, __srcb, v60);
    }
LABEL_33:
    uint64_t v77 = v50[8];
    uint64_t v78 = (void *)((char *)v48 + v77);
    uint64_t v79 = (void *)((char *)v49 + v77);
    *uint64_t v78 = *v79;
    v78[1] = v79[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v80 = v50[9];
    uint64_t v81 = (void *)((char *)v48 + v80);
    uint64_t v82 = *(void **)((char *)v48 + v80);
    uint64_t v83 = *(void **)((char *)v49 + v80);
    if (v82 == (void *)1)
    {
      if (v83 != (void *)1)
      {
        *uint64_t v81 = v83;
        id v84 = v83;
LABEL_40:
        uint64_t v86 = v50[10];
        uint64_t v87 = (char *)v48 + v86;
        uint64_t v88 = (char *)v49 + v86;
        uint64_t v89 = *(void **)v88;
        uint64_t v90 = (void *)*((void *)v88 + 1);
        char v91 = v88[16];
        sub_10001D614(*(void **)v88, v90);
        uint64_t v92 = *(void **)v87;
        uint64_t v93 = (void *)*((void *)v87 + 1);
        *(void *)uint64_t v87 = v89;
        *((void *)v87 + 1) = v90;
        v87[16] = v91;
        sub_10001D758(v92, v93);
        goto LABEL_41;
      }
    }
    else
    {
      if (v83 != (void *)1)
      {
        *uint64_t v81 = v83;
        id v85 = v83;

        goto LABEL_40;
      }
      sub_10001DBE4((id *)((char *)v48 + v80));
      uint64_t v83 = *(void **)((char *)v49 + v80);
    }
    *uint64_t v81 = v83;
    goto LABEL_40;
  }
  if (v53)
  {
LABEL_20:
    uint64_t v57 = sub_10001B38C(&qword_1001385E0);
    memcpy(v48, v49, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_41;
  }
  void *v48 = *v49;
  v48[1] = v49[1];
  v48[2] = v49[2];
  _OWORD v48[3] = v49[3];
  _OWORD v48[4] = v49[4];
  v48[5] = v49[5];
  uint64_t v54 = v50[7];
  __srca = (char *)v48 + v54;
  uint64_t v127 = (char *)v49 + v54;
  uint64_t v55 = sub_1000E8B60();
  uint64_t v125 = *(void *)(v55 - 8);
  uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v126(v127, 1, v55))
  {
    uint64_t v56 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__srca, v127, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(__srca, v127, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(__srca, 0, 1, v55);
  }
  uint64_t v65 = v50[8];
  id v66 = (void *)((char *)v48 + v65);
  char v67 = (void *)((char *)v49 + v65);
  *id v66 = *v67;
  v66[1] = v67[1];
  uint64_t v68 = v50[9];
  uint64_t v69 = *(void **)((char *)v49 + v68);
  swift_bridgeObjectRetain();
  if (v69 != (void *)1) {
    id v70 = v69;
  }
  *(void *)((char *)v48 + v68) = v69;
  uint64_t v71 = v50[10];
  char v72 = (char *)v48 + v71;
  uint64_t v73 = (char *)v49 + v71;
  uint64_t v74 = *(void **)v73;
  uint64_t v75 = (void *)*((void *)v73 + 1);
  char v76 = v73[16];
  sub_10001D614(*(void **)v73, v75);
  *(void *)char v72 = v74;
  *((void *)v72 + 1) = v75;
  v72[16] = v76;
  (*(void (**)(void *, void, uint64_t, int *))(v51 + 56))(v48, 0, 1, v50);
LABEL_41:
  *(void **)((char *)v42 + v136[6]) = *(void **)(v43 + v136[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v42 + v136[7]) = *(void **)(v43 + v136[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v42 + v136[8]) = *(unsigned char *)(v43 + v136[8]);
  uint64_t v94 = v136[9];
  uint64_t v95 = (char *)v42 + v94;
  uint64_t v96 = (char *)(v43 + v94);
  uint64_t v97 = sub_1000E8B60();
  uint64_t v98 = *(void *)(v97 - 8);
  uint64_t v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  int v100 = v99(v95, 1, v97);
  int v101 = v99(v96, 1, v97);
  if (!v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v95, v96, v97);
      goto LABEL_47;
    }
    (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v97);
    goto LABEL_46;
  }
  if (v101)
  {
LABEL_46:
    uint64_t v102 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v95, v96, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v96, v97);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
LABEL_47:
  *(void **)((char *)v42 + v136[10]) = *(void **)(v43 + v136[10]);
  swift_retain();
  swift_release();
  uint64_t v103 = v136[11];
  uint64_t v104 = (void **)((char *)v42 + v103);
  uint64_t v105 = (void *)(v43 + v103);
  *uint64_t v104 = *v105;
  v104[1] = v105[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = v136[12];
  uint64_t v107 = (void **)((char *)v42 + v106);
  unint64_t v108 = (void *)(v43 + v106);
  *uint64_t v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v134[9];
  uint64_t v110 = (void *)(a1 + v109);
  uint64_t v111 = v135 + v109;
  *uint64_t v110 = *(void *)(v135 + v109);
  v110[1] = *(void *)(v135 + v109 + 8);
  uint64_t v112 = (int *)type metadata accessor for LayoutContext();
  uint64_t v113 = v112[6];
  unint64_t v114 = (char *)v110 + v113;
  uint64_t v115 = v111 + v113;
  uint64_t v116 = sub_1000E9F60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 24))(v114, v115, v116);
  uint64_t v117 = v112[7];
  uint64_t v118 = (void *)((char *)v110 + v117);
  uint64_t v119 = (void *)(v111 + v117);
  *uint64_t v118 = *v119;
  v118[1] = v119[1];
  uint64_t v120 = v112[8];
  Swift::Int v121 = (char *)v110 + v120;
  uint64_t v122 = v111 + v120;
  uint64_t v123 = sub_1000E96F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v123 - 8) + 24))(v121, v122, v123);
  *(void *)((char *)v110 + v112[9]) = *(void *)(v111 + v112[9]);
  *(void *)((char *)v110 + v112[10]) = *(void *)(v111 + v112[10]);
  *((unsigned char *)v110 + v112[11]) = *(unsigned char *)(v111 + v112[11]);
  *((unsigned char *)v110 + v112[12]) = *(unsigned char *)(v111 + v112[12]);
  return a1;
}

uint64_t sub_100053BD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100053C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000E9F90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(v3 + 28);
  uint64_t v13 = (void *)(v5 + v12);
  char v14 = (void *)(v4 + v12);
  uint64_t v15 = type metadata accessor for Item(0);
  uint64_t v66 = v3;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = v5;
    uint64_t v17 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v17;
    uint64_t v18 = type metadata accessor for Item.Headline(0);
    uint64_t v19 = *(int *)(v18 + 24);
    uint64_t v20 = (char *)v13 + v19;
    uint64_t v21 = (char *)v14 + v19;
    uint64_t v22 = sub_1000E8B60();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v18 + 28)) = *(_OWORD *)((char *)v14 + *(int *)(v18 + 28));
    swift_storeEnumTagMultiPayload();
    uint64_t v5 = v16;
    uint64_t v3 = v66;
  }
  uint64_t v25 = *(int *)(v3 + 32);
  uint64_t v26 = v5 + v25;
  uint64_t v27 = v4 + v25;
  *(void *)(v5 + v25) = *(void *)(v4 + v25);
  uint64_t v28 = (int *)type metadata accessor for TodayContent();
  uint64_t v29 = v28[5];
  uint64_t v30 = (_OWORD *)(v26 + v29);
  uint64_t v31 = (_OWORD *)(v27 + v29);
  uint64_t v32 = (int *)type metadata accessor for Banner();
  uint64_t v33 = *((void *)v32 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_10001B38C(&qword_1001385E0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v63 = v4;
    long long v35 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v35;
    v30[2] = v31[2];
    uint64_t v36 = v32[7];
    uint64_t v64 = (char *)v30 + v36;
    uint64_t v65 = v5;
    id v37 = (char *)v31 + v36;
    uint64_t v38 = sub_1000E8B60();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v64, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v64, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v64, 0, 1, v38);
    }
    *(_OWORD *)((char *)v30 + v32[8]) = *(_OWORD *)((char *)v31 + v32[8]);
    *(void *)((char *)v30 + v32[9]) = *(void *)((char *)v31 + v32[9]);
    uint64_t v41 = v32[10];
    unint64_t v42 = (char *)v30 + v41;
    uint64_t v43 = (char *)v31 + v41;
    v42[16] = v43[16];
    *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
    uint64_t v5 = v65;
    uint64_t v4 = v63;
  }
  *(void *)(v26 + v28[6]) = *(void *)(v27 + v28[6]);
  *(void *)(v26 + v28[7]) = *(void *)(v27 + v28[7]);
  *(unsigned char *)(v26 + v28[8]) = *(unsigned char *)(v27 + v28[8]);
  uint64_t v44 = v28[9];
  uint64_t v45 = (void *)(v26 + v44);
  id v46 = (const void *)(v27 + v44);
  uint64_t v47 = sub_1000E8B60();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    uint64_t v49 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  *(void *)(v26 + v28[10]) = *(void *)(v27 + v28[10]);
  *(_OWORD *)(v26 + v28[11]) = *(_OWORD *)(v27 + v28[11]);
  *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)(v27 + v28[12]);
  uint64_t v50 = *(int *)(v66 + 36);
  uint64_t v51 = v5 + v50;
  uint64_t v52 = v4 + v50;
  *(_OWORD *)(v5 + v50) = *(_OWORD *)(v4 + v50);
  int v53 = (int *)type metadata accessor for LayoutContext();
  uint64_t v54 = v53[6];
  uint64_t v55 = v51 + v54;
  uint64_t v56 = v52 + v54;
  uint64_t v57 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
  *(_OWORD *)(v51 + v53[7]) = *(_OWORD *)(v52 + v53[7]);
  uint64_t v58 = v53[8];
  uint64_t v59 = v51 + v58;
  uint64_t v60 = v52 + v58;
  uint64_t v61 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
  *(void *)(v51 + v53[9]) = *(void *)(v52 + v53[9]);
  *(void *)(v51 + v53[10]) = *(void *)(v52 + v53[10]);
  *(unsigned char *)(v51 + v53[11]) = *(unsigned char *)(v52 + v53[11]);
  *(unsigned char *)(v51 + v53[12]) = *(unsigned char *)(v52 + v53[12]);
  return v5;
}

uint64_t sub_1000542C4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10003D590(v8, v9);
  char v10 = *((unsigned char *)v4 + 48);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  char v15 = *(unsigned char *)(a1 + 48);
  long long v16 = *((_OWORD *)v4 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)v4 + 1);
  *(_OWORD *)(a1 + 32) = v16;
  *(unsigned char *)(a1 + 48) = v10;
  sub_1000528C4(v11, v12, v13, v14, v15);
  Swift::Int v121 = a3;
  if ((uint64_t *)a1 != v4)
  {
    uint64_t v17 = a3[6];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (char *)v4 + v17;
    sub_100028B6C(a1 + v17, &qword_100137A10);
    uint64_t v20 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1000E9F90();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)v4 + v22);
    sub_100053BD8(a1 + v22, type metadata accessor for Item);
    uint64_t v25 = type metadata accessor for Item(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = v4;
      uint64_t v27 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v27;
      uint64_t v28 = type metadata accessor for Item.Headline(0);
      uint64_t v29 = *(int *)(v28 + 24);
      uint64_t v30 = (char *)v23 + v29;
      uint64_t v31 = (char *)v24 + v29;
      uint64_t v32 = sub_1000E8B60();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      *(_OWORD *)((char *)v23 + *(int *)(v28 + 28)) = *(_OWORD *)((char *)v24 + *(int *)(v28 + 28));
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v26;
      a3 = v121;
    }
  }
  uint64_t v35 = a3[8];
  uint64_t v36 = a1 + v35;
  uint64_t v119 = v4;
  uint64_t v37 = (uint64_t)v4 + v35;
  uint64_t v38 = *(void **)(a1 + v35);
  *(void *)(a1 + v35) = *(uint64_t *)((char *)v4 + v35);

  uint64_t v122 = (int *)type metadata accessor for TodayContent();
  uint64_t v39 = v122[5];
  uint64_t v40 = (void *)(v36 + v39);
  uint64_t v41 = (char *)(v37 + v39);
  unint64_t v42 = (int *)type metadata accessor for Banner();
  uint64_t v43 = *((void *)v42 - 1);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, int *))(v43 + 48);
  int v45 = v44((char *)v40, 1, v42);
  __src = v41;
  int v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      long long v47 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v47;
      *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
      uint64_t v48 = v42[7];
      uint64_t v117 = (char *)v40 + v48;
      uint64_t v49 = &v41[v48];
      uint64_t v50 = sub_1000E8B60();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        uint64_t v52 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v117, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v117, v49, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v117, 0, 1, v50);
      }
      *(_OWORD *)((char *)v40 + v42[8]) = *(_OWORD *)&v41[v42[8]];
      *(void *)((char *)v40 + v42[9]) = *(void *)&v41[v42[9]];
      uint64_t v65 = v42[10];
      uint64_t v66 = (char *)v40 + v65;
      char v67 = &v41[v65];
      v66[16] = v67[16];
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))((char *)v40, 0, 1, v42);
      goto LABEL_23;
    }
LABEL_17:
    uint64_t v53 = sub_10001B38C(&qword_1001385E0);
    memcpy(v40, v41, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_23:
    uint64_t v68 = v122;
    goto LABEL_24;
  }
  if (v46)
  {
    sub_100053BD8((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for Banner);
    goto LABEL_17;
  }
  uint64_t v54 = *((void *)v41 + 1);
  *uint64_t v40 = *(void *)v41;
  v40[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v55 = *((void *)v41 + 3);
  v40[2] = *((void *)v41 + 2);
  _OWORD v40[3] = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = *((void *)v41 + 5);
  v40[4] = *((void *)v41 + 4);
  v40[5] = v56;
  swift_bridgeObjectRelease();
  uint64_t v57 = v42[7];
  uint64_t v58 = (char *)v40 + v57;
  uint64_t v59 = &v41[v57];
  uint64_t v60 = sub_1000E8B60();
  uint64_t v116 = *(void *)(v60 - 8);
  uint64_t v118 = v58;
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 48);
  LODWORD(v58) = v61(v58, 1, v60);
  int v62 = v61(v59, 1, v60);
  if (v58)
  {
    if (v62)
    {
      size_t v63 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v64 = v118;
LABEL_34:
      memcpy(v64, v59, v63);
      goto LABEL_37;
    }
    (*(void (**)(void *, char *, uint64_t))(v116 + 32))(v118, v59, v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v116 + 56))(v118, 0, 1, v60);
  }
  else
  {
    if (v62)
    {
      (*(void (**)(void *, uint64_t))(v116 + 8))(v118, v60);
      size_t v63 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v64 = v118;
      goto LABEL_34;
    }
    (*(void (**)(void *, char *, uint64_t))(v116 + 40))(v118, v59, v60);
  }
LABEL_37:
  uint64_t v101 = v42[8];
  uint64_t v102 = (void *)((char *)v40 + v101);
  uint64_t v103 = &__src[v101];
  uint64_t v105 = *(void *)v103;
  uint64_t v104 = *((void *)v103 + 1);
  *uint64_t v102 = v105;
  v102[1] = v104;
  swift_bridgeObjectRelease();
  uint64_t v106 = v42[9];
  uint64_t v107 = (void *)((char *)v40 + v106);
  unint64_t v108 = *(void **)((char *)v40 + v106);
  uint64_t v109 = *(void *)&__src[v106];
  if (v108 != (void *)1)
  {
    if (v109 != 1)
    {
      *uint64_t v107 = v109;

      goto LABEL_42;
    }
    sub_10001DBE4((id *)((char *)v40 + v106));
    uint64_t v109 = *(void *)&__src[v106];
  }
  *uint64_t v107 = v109;
LABEL_42:
  uint64_t v68 = v122;
  uint64_t v110 = v42[10];
  uint64_t v111 = (char *)v40 + v110;
  uint64_t v112 = &__src[v110];
  char v113 = v112[16];
  unint64_t v114 = *(void **)v111;
  uint64_t v115 = (void *)*((void *)v111 + 1);
  *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
  v111[16] = v113;
  sub_10001D758(v114, v115);
LABEL_24:
  *(void *)(v36 + v68[6]) = *(void *)(v37 + v68[6]);
  swift_bridgeObjectRelease();
  *(void *)(v36 + v68[7]) = *(void *)(v37 + v68[7]);
  swift_unknownObjectRelease();
  *(unsigned char *)(v36 + v68[8]) = *(unsigned char *)(v37 + v68[8]);
  uint64_t v69 = v68[9];
  id v70 = (void *)(v36 + v69);
  uint64_t v71 = (void *)(v37 + v69);
  uint64_t v72 = sub_1000E8B60();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(void *, void *, uint64_t))(v73 + 40))(v70, v71, v72);
      goto LABEL_30;
    }
    (*(void (**)(void *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_29;
  }
  if (v76)
  {
LABEL_29:
    uint64_t v77 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v73 + 32))(v70, v71, v72);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
LABEL_30:
  *(void *)(v36 + v122[10]) = *(void *)(v37 + v122[10]);
  swift_release();
  uint64_t v78 = v122[11];
  uint64_t v79 = (void *)(v36 + v78);
  uint64_t v80 = (uint64_t *)(v37 + v78);
  uint64_t v82 = *v80;
  uint64_t v81 = v80[1];
  *uint64_t v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  uint64_t v83 = v122[12];
  id v84 = (void *)(v36 + v83);
  id v85 = (uint64_t *)(v37 + v83);
  uint64_t v87 = *v85;
  uint64_t v86 = v85[1];
  *id v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  uint64_t v88 = v121[9];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = (uint64_t)v119 + v88;
  *(_OWORD *)(a1 + v88) = *(_OWORD *)((char *)v119 + v88);
  char v91 = (int *)type metadata accessor for LayoutContext();
  uint64_t v92 = v91[6];
  uint64_t v93 = v89 + v92;
  uint64_t v94 = v90 + v92;
  uint64_t v95 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 40))(v93, v94, v95);
  *(_OWORD *)(v89 + v91[7]) = *(_OWORD *)(v90 + v91[7]);
  uint64_t v96 = v91[8];
  uint64_t v97 = v89 + v96;
  uint64_t v98 = v90 + v96;
  uint64_t v99 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 40))(v97, v98, v99);
  *(void *)(v89 + v91[9]) = *(void *)(v90 + v91[9]);
  *(void *)(v89 + v91[10]) = *(void *)(v90 + v91[10]);
  *(unsigned char *)(v89 + v91[11]) = *(unsigned char *)(v90 + v91[11]);
  *(unsigned char *)(v89 + v91[12]) = *(unsigned char *)(v90 + v91[12]);
  return a1;
}

uint64_t sub_100054CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100054CC8);
}

uint64_t sub_100054CC8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_10001B38C(&qword_100137A18);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Item(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for LayoutContext();
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[9];

  return v16(v18, a2, v17);
}

uint64_t sub_100054E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054E9C);
}

uint64_t sub_100054E9C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
    return result;
  }
  uint64_t v8 = sub_10001B38C(&qword_100137A18);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Item(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for LayoutContext();
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[9];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for SmallContentView(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_100138640);
}

void sub_100055080()
{
  sub_10003DD54();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Item(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for TodayContent();
      if (v2 <= 0x3F)
      {
        type metadata accessor for LayoutContext();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_1000551D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000551F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v2 = sub_1000E9840();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  __chkstk_darwin(v2);
  uint64_t v56 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E93E0();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Item(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10001B38C(&qword_100138688);
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001B38C(&qword_100138690);
  uint64_t v50 = *(void *)(v17 - 8);
  uint64_t v51 = v17;
  __chkstk_darwin(v17);
  uint64_t v43 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10001B38C(&qword_100138698);
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  __chkstk_darwin(v19);
  int v46 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000E9DC0();
  uint64_t v23 = v22;
  sub_1000559F0(v1, (uint64_t)v65);
  *(void *)&long long v64 = v21;
  *((void *)&v64 + 1) = v23;
  uint64_t v24 = type metadata accessor for SmallContentView(0);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v55 = v1;
  sub_10005A158(v1 + v25, (uint64_t)v11, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100053BD8((uint64_t)v11, type metadata accessor for Item);
    uint64_t v26 = sub_1000E8B60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 1, 1, v26);
  }
  else
  {
    sub_10005A574((uint64_t)v11, (uint64_t)v8, type metadata accessor for Item.Headline);
    sub_10002DA34((uint64_t)&v8[*(int *)(v6 + 24)], (uint64_t)v14, (uint64_t *)&unk_1001370F0);
    sub_100053BD8((uint64_t)v8, type metadata accessor for Item.Headline);
  }
  uint64_t v27 = sub_10001B38C(&qword_1001386A0);
  uint64_t v28 = sub_10001D100(&qword_1001386A8, &qword_1001386A0);
  uint64_t v44 = v16;
  sub_1000E9A70();
  sub_100028B6C((uint64_t)v14, (uint64_t *)&unk_1001370F0);
  v62[8] = v65[7];
  v62[9] = v65[8];
  v63[0] = v66[0];
  *(_OWORD *)((char *)v63 + 9) = *(_OWORD *)((char *)v66 + 9);
  _OWORD v62[4] = v65[3];
  v62[5] = v65[4];
  v62[6] = v65[5];
  v62[7] = v65[6];
  v62[0] = v64;
  v62[1] = v65[0];
  v62[2] = v65[1];
  v62[3] = v65[2];
  sub_100057854((uint64_t)v62);
  uint64_t v29 = v55 + *(int *)(v24 + 36);
  uint64_t v30 = type metadata accessor for LayoutContext();
  uint64_t v31 = v52;
  if (*(unsigned char *)(v29 + *(int *)(v30 + 44)) == 1)
  {
    sub_1000E93D0();
    uint64_t v32 = v54;
  }
  else
  {
    uint64_t v60 = _swiftEmptyArrayStorage;
    sub_10005794C(&qword_100138480, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_10001B38C(&qword_1001386B0);
    sub_10001D100((unint64_t *)&qword_1001386B8, &qword_1001386B0);
    uint64_t v32 = v54;
    sub_1000EA7C0();
  }
  uint64_t v60 = (void *)v27;
  uint64_t v61 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v43;
  uint64_t v34 = v44;
  uint64_t v36 = (void *)v47;
  sub_1000E9B70();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v32);
  (*(void (**)(char *, void *))(v45 + 8))(v34, v36);
  uint64_t v37 = v56;
  uint64_t v38 = sub_1000E9830();
  __chkstk_darwin(v38);
  sub_1000E9DC0();
  uint64_t v60 = v36;
  uint64_t v61 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = v46;
  uint64_t v40 = v51;
  sub_1000E9B10();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v58);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v40);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v59, v39, v49);
}

__n128 sub_1000559F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000E9F90();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for SmallContentView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)a1;
  char v14 = *(unsigned char *)(a1 + 8);
  sub_10003D4B0(*(void *)a1, v14);
  char v15 = sub_10007D650(v13, v14);
  sub_10003D590(v13, v14);
  sub_10005A158(a1, (uint64_t)v12, type metadata accessor for SmallContentView);
  if (v15)
  {
    sub_100053BD8((uint64_t)v12, type metadata accessor for SmallContentView);
  }
  else
  {
    sub_10007D854((uint64_t)v9);
    sub_1000E9F80();
    char v16 = sub_1000E9F70();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v18 = v7;
    uint64_t v19 = v30;
    v17(v18, v30);
    v17(v9, v19);
    sub_100053BD8((uint64_t)v12, type metadata accessor for SmallContentView);
    if ((v16 & 1) == 0)
    {
      sub_100056D04(v32);
      sub_10005A1C0((uint64_t)v32);
      goto LABEL_6;
    }
  }
  uint64_t v20 = sub_1000E9DC0();
  uint64_t v22 = v21;
  sub_100055D30(a1, (uint64_t)v33);
  v32[0] = v20;
  v32[1] = v22;
  sub_10005A1CC((uint64_t)v32);
LABEL_6:
  sub_10002D5DC((uint64_t)v32, (uint64_t)&v31, &qword_1001386D8);
  sub_10001B38C(&qword_1001386E0);
  sub_10001D100(&qword_1001386E8, &qword_1001386E0);
  sub_1000E97F0();
  long long v23 = v34[0];
  *(_OWORD *)(a2 + 128) = v33[18];
  *(_OWORD *)(a2 + 144) = v23;
  *(_OWORD *)(a2 + 153) = *(_OWORD *)((char *)v34 + 9);
  long long v24 = v33[15];
  *(_OWORD *)(a2 + 64) = v33[14];
  *(_OWORD *)(a2 + 80) = v24;
  long long v25 = v33[17];
  *(_OWORD *)(a2 + 96) = v33[16];
  *(_OWORD *)(a2 + 112) = v25;
  long long v26 = v33[11];
  *(_OWORD *)a2 = v33[10];
  *(_OWORD *)(a2 + 16) = v26;
  __n128 result = (__n128)v33[13];
  *(_OWORD *)(a2 + 32) = v33[12];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_100055D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = type metadata accessor for Item(0);
  __chkstk_darwin(v36);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v6 = sub_1000E9F90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v37 - v11 + 16;
  uint64_t v13 = type metadata accessor for SmallContentView(0);
  sub_10007D854((uint64_t)v12);
  sub_1000E9F80();
  char v14 = sub_1000E9F70();
  char v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  double v16 = 0.0;
  if (v14)
  {
    sub_10005A158(a1 + *(int *)(v13 + 28), (uint64_t)v5, type metadata accessor for Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_100053BD8((uint64_t)v5, type metadata accessor for Item);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      double v20 = 0.0;
      double v21 = 0.0;
      double v22 = 0.0;
    }
    else
    {
      sub_1000560D4(v40);
      uint64_t v18 = v40[0];
      long long v23 = *(_OWORD *)(a1 + 32);
      v37[0] = *(_OWORD *)(a1 + 16);
      v37[1] = v23;
      char v38 = *(unsigned char *)(a1 + 48);
      sub_10002D5DC((uint64_t)v37, (uint64_t)v39, &qword_1001386F0);
      sub_10005A1D4((uint64_t)v39, (void (*)(void, void, void, void, void))sub_100052470);
      double v24 = sub_10007DD88();
      sub_10005A1D4((uint64_t)v37, (void (*)(void, void, void, void, void))sub_1000528C4);
      double v16 = -v24;
      sub_10005A1D4((uint64_t)v39, (void (*)(void, void, void, void, void))sub_100052470);
      sub_10007DD88();
      double v26 = v25;
      sub_10005A1D4((uint64_t)v37, (void (*)(void, void, void, void, void))sub_1000528C4);
      double v20 = -v26;
      sub_10005A1D4((uint64_t)v39, (void (*)(void, void, void, void, void))sub_100052470);
      sub_10007DD88();
      double v28 = v27;
      sub_10005A1D4((uint64_t)v37, (void (*)(void, void, void, void, void))sub_1000528C4);
      double v21 = -v28;
      sub_10005A1D4((uint64_t)v39, (void (*)(void, void, void, void, void))sub_100052470);
      sub_10007DD88();
      double v30 = v29;
      sub_10005A1D4((uint64_t)v37, (void (*)(void, void, void, void, void))sub_1000528C4);
      double v22 = -v30;
      uint64_t v19 = sub_1000E9880();
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    double v20 = 0.0;
    double v21 = 0.0;
    double v22 = 0.0;
  }
  uint64_t v31 = sub_1000E9620();
  uint64_t v32 = sub_1000E9710();
  sub_100056630(v40);
  uint64_t v33 = v40[0];
  uint64_t result = sub_100056D04(v40);
  uint64_t v35 = v40[0];
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v19;
  *(double *)(a2 + 16) = v16;
  *(double *)(a2 + 24) = v20;
  *(double *)(a2 + 32) = v21;
  *(double *)(a2 + 40) = v22;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v31;
  *(void *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 72) = 1;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 1;
  *(void *)(a2 + 96) = v32;
  *(void *)(a2 + 104) = 0;
  *(unsigned char *)(a2 + 112) = 1;
  *(void *)(a2 + 120) = v33;
  *(void *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 136) = 1;
  *(void *)(a2 + 144) = v35;
  return result;
}

uint64_t sub_1000560D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v32 = type metadata accessor for SmallBackgroundView(0);
  __chkstk_darwin(v32);
  uint64_t v29 = (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10001B38C(&qword_1001386C0);
  __chkstk_darwin(v31);
  double v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Item(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000E8B60();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  double v28 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = (int *)type metadata accessor for SmallContentView(0);
  uint64_t v20 = v1 + v19[9];
  if (*(unsigned char *)(v20 + *(int *)(type metadata accessor for LayoutContext() + 44)) == 1)
  {
    uint64_t v21 = v2 + v19[8];
    uint64_t v22 = type metadata accessor for TodayContent();
    sub_10002DA34(v21 + *(int *)(v22 + 36), (uint64_t)v12, (uint64_t *)&unk_1001370F0);
  }
  else
  {
    sub_10005A158(v2 + v19[7], (uint64_t)v9, type metadata accessor for Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100053BD8((uint64_t)v9, type metadata accessor for Item);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    }
    else
    {
      sub_10005A574((uint64_t)v9, (uint64_t)v6, type metadata accessor for Item.Headline);
      sub_10002DA34((uint64_t)&v6[*(int *)(v27 + 24)], (uint64_t)v12, (uint64_t *)&unk_1001370F0);
      sub_100053BD8((uint64_t)v6, type metadata accessor for Item.Headline);
    }
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100028B6C((uint64_t)v12, (uint64_t *)&unk_1001370F0);
    sub_1000574CC(v29);
    sub_10005794C(&qword_1001386C8, (void (*)(uint64_t))type metadata accessor for SmallBackgroundView);
    uint64_t result = sub_1000E9D10();
    uint64_t v24 = result;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
    uint64_t v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 16))(v28, v18, v13);
    __chkstk_darwin(v25);
    *(&v26 - 2) = v2;
    sub_10005794C(&qword_1001386C8, (void (*)(uint64_t))type metadata accessor for SmallBackgroundView);
    sub_1000E9940();
    sub_10001D100(&qword_1001386D0, &qword_1001386C0);
    uint64_t v24 = sub_1000E9D10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }
  *uint64_t v33 = v24;
  return result;
}

uint64_t sub_100056630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1000E9C60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10001B38C(&qword_1001386F8);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v49 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10001B38C(&qword_100138700);
  __chkstk_darwin(v48);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C(&qword_100138708);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001B38C(&qword_100138710);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v53 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10001B38C(&qword_100138718);
  __chkstk_darwin(v54);
  uint64_t v50 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1 + *(int *)(type metadata accessor for SmallContentView(0) + 32);
  uint64_t v18 = *(void *)(v17 + *(int *)(type metadata accessor for TodayContent() + 24));
  if (*(void *)(v18 + 16)
    && (uint64_t v19 = *(void *)(type metadata accessor for Section() - 8),
        *(unsigned char *)(v18
                 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
                 + 24) == 1))
  {
    uint64_t v43 = v9;
    uint64_t v44 = v10;
    uint64_t v45 = v14;
    uint64_t v46 = v13;
    uint64_t v47 = a1;
    if (qword_100135DC8 != -1) {
      swift_once();
    }
    id v20 = (id)qword_10014BD90;
    sub_1000E9C50();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v3);
    uint64_t v21 = sub_1000E9CC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v22 = v66;
    char v23 = v67;
    uint64_t v24 = v68;
    char v25 = v69;
    uint64_t v27 = v70;
    uint64_t v26 = v71;
    uint64_t v28 = sub_1000E9BF0();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v55 = v21;
    uint64_t v56 = 0x3FF0000000000000;
    __int16 v57 = 0;
    uint64_t v58 = v22;
    char v59 = v23;
    uint64_t v60 = v24;
    char v61 = v25;
    uint64_t v62 = v27;
    uint64_t v63 = v26;
    uint64_t v64 = KeyPath;
    uint64_t v65 = v28;
    sub_10001B38C(&qword_100138720);
    sub_10005DF78(&qword_100138728, &qword_100138720, (void (*)(void))sub_10003E390);
    double v30 = v49;
    sub_1000E9A60();
    swift_release();
    swift_release();
    swift_release();
    sub_1000E9BC0();
    uint64_t v31 = sub_1000E9C00();
    swift_release();
    uint64_t v32 = v51;
    uint64_t v33 = (uint64_t)v43;
    uint64_t v34 = v52;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v43, v30, v52);
    uint64_t v35 = v33 + *(int *)(v48 + 36);
    *(void *)uint64_t v35 = v31;
    *(_OWORD *)(v35 + 8) = xmmword_1000F3B80;
    *(void *)(v35 + 24) = 0x3FF0000000000000;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v34);
    sub_1000E9BC0();
    uint64_t v36 = sub_1000E9C00();
    swift_release();
    sub_10002DA34(v33, (uint64_t)v12, &qword_100138700);
    uint64_t v37 = v44;
    char v38 = &v12[*(int *)(v44 + 36)];
    *(void *)char v38 = v36;
    *(_OWORD *)(v38 + 8) = xmmword_1000F3B90;
    *((void *)v38 + 3) = 0x4000000000000000;
    sub_100028B6C(v33, &qword_100138700);
    unint64_t v39 = sub_10005A2C4();
    uint64_t v40 = v53;
    sub_1000E9AB0();
    sub_100028B6C((uint64_t)v12, &qword_100138708);
    uint64_t v55 = v37;
    uint64_t v56 = v39;
    swift_getOpaqueTypeConformance2();
    uint64_t v41 = v46;
    sub_1000E9B00();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v41);
    sub_10005A41C();
    uint64_t result = sub_1000E9D10();
    a1 = v47;
  }
  else
  {
    uint64_t result = sub_1000E9D10();
  }
  *a1 = result;
  return result;
}

uint64_t sub_100056D04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  char v69 = a1;
  uint64_t v3 = sub_1000E9820();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TodayContent();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for SmallHeadlineContentView(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001B38C(&qword_100138758);
  uint64_t v67 = *(void *)(v14 - 8);
  uint64_t v68 = v14;
  __chkstk_darwin(v14);
  char v61 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10001B38C(&qword_100138760);
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Item.Headline(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  id v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (id *)((char *)&v61 - v21);
  uint64_t v23 = type metadata accessor for Item(0);
  __chkstk_darwin(v23);
  char v25 = (uint64_t *)((char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = (int *)type metadata accessor for SmallContentView(0);
  sub_10005A158(v2 + v26[7], (uint64_t)v25, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v25[1];
    uint64_t v72 = *v25;
    uint64_t v73 = v27;
    sub_1000295C0();
    uint64_t v28 = sub_1000E9A50();
    uint64_t v30 = v29;
    char v32 = v31;
    uint64_t v34 = v33;
    id v35 = [self secondaryLabelColor];
    id v36 = [self traitCollectionWithUserInterfaceStyle:2];
    id v37 = [v35 resolvedColorWithTraitCollection:v36];

    uint64_t v38 = sub_1000E9C40();
    uint64_t v72 = v28;
    uint64_t v73 = v30;
    char v74 = v32 & 1;
    uint64_t v75 = v34;
    uint64_t v76 = v38;
    sub_10005A51C();
    uint64_t result = sub_1000E9D10();
    uint64_t v40 = result;
  }
  else
  {
    sub_10005A574((uint64_t)v25, (uint64_t)v22, type metadata accessor for Item.Headline);
    sub_10005A158((uint64_t)v22, (uint64_t)v20, type metadata accessor for Item.Headline);
    sub_10005A158(v2 + v26[8], (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TodayContent);
    sub_10005A158(v2 + v26[9], (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LayoutContext);
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&v13[v11[5]] = swift_getKeyPath();
    sub_10001B38C(&qword_100137A10);
    swift_storeEnumTagMultiPayload();
    *(void *)uint64_t v13 = KeyPath;
    v13[8] = 0;
    sub_10005A574((uint64_t)v20, (uint64_t)&v13[v11[6]], type metadata accessor for Item.Headline);
    sub_10005A574((uint64_t)v10, (uint64_t)&v13[v11[7]], (uint64_t (*)(void))type metadata accessor for TodayContent);
    sub_10005A574((uint64_t)v7, (uint64_t)&v13[v11[8]], (uint64_t (*)(void))type metadata accessor for LayoutContext);
    uint64_t v42 = v62;
    sub_1000E9810();
    uint64_t v43 = sub_10005794C(&qword_100138770, (void (*)(uint64_t))type metadata accessor for SmallHeadlineContentView);
    uint64_t v44 = v61;
    sub_1000E9B30();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v64);
    sub_100053BD8((uint64_t)v13, type metadata accessor for SmallHeadlineContentView);
    sub_10001B38C(&qword_100137388);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1000F1E20;
    id v46 = *v22;
    id v47 = [*v22 title];
    if (v47)
    {
      uint64_t v48 = v47;
      uint64_t v49 = sub_1000EA2B0();
      unint64_t v51 = v50;
    }
    else
    {
      uint64_t v49 = 0;
      unint64_t v51 = 0xE000000000000000;
    }
    *(void *)(v45 + 32) = v49;
    *(void *)(v45 + 40) = v51;
    id v52 = [v46 sourceName];
    if (v52)
    {
      uint64_t v53 = v52;
      uint64_t v54 = sub_1000EA2B0();
      unint64_t v56 = v55;
    }
    else
    {
      uint64_t v54 = 0;
      unint64_t v56 = 0xE000000000000000;
    }
    *(void *)(v45 + 48) = v54;
    *(void *)(v45 + 56) = v56;
    uint64_t v72 = v45;
    sub_10001B38C(&qword_1001373A0);
    sub_10001D100((unint64_t *)&qword_1001373A8, &qword_1001373A0);
    uint64_t v57 = sub_1000EA200();
    uint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v72 = v57;
    uint64_t v73 = v59;
    uint64_t v70 = v11;
    uint64_t v71 = v43;
    swift_getOpaqueTypeConformance2();
    sub_1000295C0();
    uint64_t v60 = v68;
    sub_1000E9AF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v44, v60);
    sub_10005A5DC();
    uint64_t v40 = sub_1000E9D10();
    uint64_t result = sub_100053BD8((uint64_t)v22, type metadata accessor for Item.Headline);
  }
  *char v69 = v40;
  return result;
}

uint64_t sub_1000574CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001B38C(&qword_100137A18);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (id *)((char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Item(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = v1 + *(int *)(type metadata accessor for SmallContentView(0) + 28);
  uint64_t v16 = sub_1000D8C74();
  sub_10005A158(v15, (uint64_t)v14, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100053BD8((uint64_t)v14, type metadata accessor for Item);
    uint64_t v17 = 0;
  }
  else
  {
    sub_10005A574((uint64_t)v14, (uint64_t)v8, type metadata accessor for Item.Headline);
    uint64_t v17 = sub_1000D94C0();
    sub_100053BD8((uint64_t)v8, type metadata accessor for Item.Headline);
  }
  id v18 = sub_1000D8DF8();
  sub_10005A158(v15, (uint64_t)v12, type metadata accessor for Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
  }
  else
  {
    sub_10005A574((uint64_t)v12, (uint64_t)v8, type metadata accessor for Item.Headline);
    [*v8 thumbnailFocalFrame];
    uint64_t v20 = v24;
    uint64_t v21 = v25;
    uint64_t v22 = v26;
    uint64_t v23 = v27;
    sub_100053BD8((uint64_t)v8, type metadata accessor for Item.Headline);
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t *v5 = swift_getKeyPath();
  sub_10001B38C(&qword_100137A10);
  swift_storeEnumTagMultiPayload();
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v22;
  *(void *)(a1 + 48) = v23;
  *(unsigned char *)(a1 + 56) = EnumCaseMultiPayload == 1;
  uint64_t v29 = (int *)type metadata accessor for SmallBackgroundView(0);
  uint64_t v30 = (uint64_t *)(a1 + v29[8]);
  *uint64_t v30 = swift_getKeyPath();
  sub_10001B38C(&qword_100138370);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a1 + v29[9];
  *(void *)uint64_t v31 = KeyPath;
  *(unsigned char *)(v31 + 8) = 0;
  return sub_10002D5DC((uint64_t)v5, a1 + v29[10], &qword_100137A18);
}

uint64_t sub_100057854(uint64_t a1)
{
  sub_1000578C0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(unsigned char *)(a1 + 184));
  return a1;
}

uint64_t sub_1000578C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_release();
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100057910@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000560D4(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10005794C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100057994@<X0>(uint64_t a1@<X8>)
{
  return sub_1000574CC(a1);
}

uint64_t sub_1000579B8()
{
  uint64_t v1 = sub_1000E9F90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for SmallHeadlineContentView(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v0;
  char v12 = *(unsigned char *)(v0 + 8);
  sub_10003D4B0(*(void *)v0, v12);
  char v13 = sub_10007D650(v11, v12);
  sub_10003D590(v11, v12);
  sub_10005A158(v0, (uint64_t)v10, type metadata accessor for SmallHeadlineContentView);
  if (v13)
  {
    sub_100053BD8((uint64_t)v10, type metadata accessor for SmallHeadlineContentView);
    char v14 = 0;
  }
  else
  {
    sub_10007D854((uint64_t)v7);
    sub_1000E9F80();
    char v15 = sub_1000E9F70();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
    v16(v5, v1);
    v16(v7, v1);
    sub_100053BD8((uint64_t)v10, type metadata accessor for SmallHeadlineContentView);
    char v14 = v15 ^ 1;
  }
  return v14 & 1;
}

uint64_t sub_100057BCC()
{
  uint64_t v1 = sub_10001B38C(&qword_100138820);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100138828);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100138830);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = sub_1000579B8();
  uint64_t v11 = sub_1000E9720();
  if (v10)
  {
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = 0;
    unsigned char v9[16] = 1;
    uint64_t v12 = sub_10001B38C(&qword_100138850);
    sub_1000590A0(v0, (uint64_t)&v9[*(int *)(v12 + 44)]);
    char v13 = &qword_100138830;
    sub_10002DA34((uint64_t)v9, (uint64_t)v6, &qword_100138830);
    swift_storeEnumTagMultiPayload();
    sub_10001D100(&qword_100138840, &qword_100138830);
    sub_10001D100(&qword_100138848, &qword_100138820);
    sub_1000E97F0();
    uint64_t v14 = (uint64_t)v9;
  }
  else
  {
    *(void *)uint64_t v3 = v11;
    *((void *)v3 + 1) = 0;
    v3[16] = 1;
    uint64_t v15 = sub_10001B38C(&qword_100138838);
    sub_100057E84((uint64_t)&v3[*(int *)(v15 + 44)]);
    char v13 = &qword_100138820;
    sub_10002DA34((uint64_t)v3, (uint64_t)v6, &qword_100138820);
    swift_storeEnumTagMultiPayload();
    sub_10001D100(&qword_100138840, &qword_100138830);
    sub_10001D100(&qword_100138848, &qword_100138820);
    sub_1000E97F0();
    uint64_t v14 = (uint64_t)v3;
  }
  return sub_100028B6C(v14, v13);
}

uint64_t sub_100057E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10001B38C(&qword_100138928);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v54 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = sub_10001B38C(&qword_100138930);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v63 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_10001B38C(&qword_100138870);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v62 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - v16;
  type metadata accessor for SmallHeadlineContentView(0);
  unsigned __int8 v18 = sub_1000D8F80();
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  if (v18)
  {
    uint64_t v19 = sub_10009FC54();
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v20 = v64;
    uint64_t v21 = v65;
    uint64_t v22 = v66;
    uint64_t v23 = v67;
    uint64_t v24 = v68;
    uint64_t v25 = v69;
  }
  uint64_t v55 = v19;
  uint64_t v56 = v21;
  uint64_t v57 = v22;
  uint64_t v58 = v20;
  uint64_t v59 = v23;
  uint64_t v60 = v24;
  uint64_t v61 = v25;
  sub_100058484((uint64_t)v17);
  id v26 = sub_10007F1DC();
  [v26 capHeight];

  sub_10007F504();
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v53 = v70;
  int v52 = v71;
  uint64_t v51 = v72;
  int v50 = v73;
  uint64_t v49 = v74;
  uint64_t v48 = v75;
  *(void *)uint64_t v12 = sub_1000E9620();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v27 = &v12[*(int *)(sub_10001B38C(&qword_100138938) + 44)];
  sub_100058B9C((uint64_t)v7);
  id v47 = v17;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v29 = v54;
  v28(v54, v7, v2);
  v28(v27, v29, v2);
  uint64_t v30 = &v27[*(int *)(sub_10001B38C(&qword_100138940) + 48)];
  *(void *)uint64_t v30 = 0;
  v30[8] = 0;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v3 + 8);
  v31(v7, v2);
  v31(v29, v2);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v54 = v76;
  int v46 = v77;
  uint64_t v45 = v78;
  LOBYTE(v29) = v79;
  uint64_t v44 = v80;
  uint64_t v43 = v81;
  uint64_t v32 = v62;
  sub_10002DA34((uint64_t)v17, v62, &qword_100138870);
  uint64_t v33 = v63;
  sub_10002DA34((uint64_t)v12, v63, &qword_100138930);
  uint64_t v34 = v58;
  *(void *)a1 = v55;
  *(void *)(a1 + 8) = v34;
  uint64_t v35 = v57;
  *(void *)(a1 + 16) = v56;
  *(void *)(a1 + 24) = v35;
  uint64_t v36 = v60;
  *(void *)(a1 + 32) = v59;
  *(void *)(a1 + 40) = v36;
  *(void *)(a1 + 48) = v61;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  id v37 = (int *)sub_10001B38C(&qword_100138948);
  sub_10002DA34(v32, a1 + v37[16], &qword_100138870);
  uint64_t v38 = a1 + v37[20];
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 1;
  *(void *)(v38 + 16) = v53;
  *(unsigned char *)(v38 + 24) = v52;
  *(void *)(v38 + 32) = v51;
  *(unsigned char *)(v38 + 40) = v50;
  uint64_t v39 = v48;
  *(void *)(v38 + 48) = v49;
  *(void *)(v38 + 56) = v39;
  sub_10002DA34(v33, a1 + v37[24], &qword_100138930);
  uint64_t v40 = a1 + v37[28];
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 1;
  *(void *)(v40 + 16) = v54;
  *(unsigned char *)(v40 + 24) = v46;
  *(void *)(v40 + 32) = v45;
  *(unsigned char *)(v40 + 40) = (_BYTE)v29;
  uint64_t v41 = v43;
  *(void *)(v40 + 48) = v44;
  *(void *)(v40 + 56) = v41;
  swift_retain();
  sub_100028B6C((uint64_t)v12, &qword_100138930);
  sub_100028B6C((uint64_t)v47, &qword_100138870);
  sub_100028B6C(v33, &qword_100138930);
  sub_100028B6C(v32, &qword_100138870);
  return swift_release();
}

uint64_t sub_100058484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v2 = sub_1000E96E0();
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  __chkstk_darwin(v2);
  unsigned __int8 v73 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E9670();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for SourceView();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10001B38C(&qword_1001388F8);
  __chkstk_darwin(v64);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001B38C(&qword_100138900);
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  __chkstk_darwin(v12);
  unsigned __int8 v65 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10001B38C(&qword_100138908);
  __chkstk_darwin(v69);
  uint64_t v70 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10001B38C(&qword_100138870);
  __chkstk_darwin(v71);
  uint64_t v72 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (id *)(v1 + *(int *)(type metadata accessor for SmallHeadlineContentView(0) + 24));
  id v17 = sub_1000D9124();
  id v18 = *v16;
  if (v17)
  {
    [v18 sourceNameImageScale];
    uint64_t v78 = v19;
    unsigned __int8 v77 = v17;
  }
  else
  {
    id v20 = [v18 sourceName];
    if (v20)
    {
      uint64_t v21 = v20;
      unsigned __int8 v77 = (void *)sub_1000EA2B0();
      uint64_t v78 = v22;
    }
    else
    {
      unsigned __int8 v77 = 0;
      uint64_t v78 = 0xE000000000000000;
    }
  }
  uint64_t v23 = (char *)v16 + *(int *)(type metadata accessor for Item.Headline(0) + 28);
  uint64_t v24 = *((void *)v23 + 1);
  uint64_t v63 = v6;
  if (v24)
  {
    uint64_t v25 = *(void **)v23;
    if (v25)
    {
      id v26 = v25;
      [v26 ts_luminance:v63];
      sub_100022374(0, (unint64_t *)&qword_100139070);
      sub_1000EA6E0();
    }
  }
  id v66 = v17;
  char v27 = v17 != 0;
  uint64_t v28 = v77;
  uint64_t v29 = v78;
  sub_10003D4BC(v77, v78, v27);
  sub_100081A34();
  uint64_t v31 = v30;
  sub_100081A34();
  double v33 = v32 + 3.0;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v9[v7[5]] = swift_getKeyPath();
  sub_10001B38C(&qword_100137A10);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v9 = KeyPath;
  v9[8] = 0;
  uint64_t v35 = &v9[v7[6]];
  *(void *)uint64_t v35 = v28;
  *((void *)v35 + 1) = v29;
  v35[16] = v27;
  uint64_t v36 = &v9[v7[7]];
  *(void *)uint64_t v36 = v31;
  *((double *)v36 + 1) = v33;
  char v37 = sub_1000579B8();
  uint64_t v38 = sub_1000E9BF0();
  if ((v37 & 1) == 0)
  {
    uint64_t v39 = sub_1000E9C00();
    swift_release();
    uint64_t v38 = v39;
  }
  uint64_t v41 = v69;
  uint64_t v40 = (uint64_t)v70;
  uint64_t v42 = swift_getKeyPath();
  sub_10005A158((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SourceView);
  uint64_t v43 = (uint64_t *)&v11[*(int *)(v64 + 36)];
  uint64_t *v43 = v42;
  v43[1] = v38;
  sub_100053BD8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SourceView);
  sub_10005DD94();
  uint64_t v44 = v65;
  sub_1000E9A60();
  sub_100028B6C((uint64_t)v11, &qword_1001388F8);
  sub_1000E9BC0();
  uint64_t v45 = sub_1000E9C00();
  swift_release();
  uint64_t v47 = v67;
  uint64_t v46 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v40, v44, v68);
  uint64_t v48 = (uint64_t *)(v40 + *(int *)(v41 + 36));
  uint64_t *v48 = v45;
  v48[1] = 0x4020000000000000;
  v48[2] = 0;
  _OWORD v48[3] = 0;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
  sub_1000E9660();
  uint64_t v49 = (void *)0xE000000000000000;
  v79._countAndFlagsBits = 0;
  v79._object = (void *)0xE000000000000000;
  sub_1000E9650(v79);
  id v50 = [*v16 sourceName];
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = sub_1000EA2B0();
    uint64_t v49 = v53;
  }
  else
  {
    uint64_t v52 = 0;
  }
  char v54 = v66 != 0;
  v80._countAndFlagsBits = v52;
  v80._object = v49;
  sub_1000E9640(v80);
  swift_bridgeObjectRelease();
  v81._countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  sub_1000E9650(v81);
  sub_1000E9690();
  uint64_t v55 = sub_1000E9A40();
  uint64_t v57 = v56;
  char v59 = v58 & 1;
  sub_10005DE64();
  uint64_t v60 = (uint64_t)v72;
  sub_1000E9AC0();
  sub_100026FDC(v55, v57, v59);
  swift_bridgeObjectRelease();
  sub_100028B6C(v40, &qword_100138908);
  uint64_t v61 = v73;
  sub_1000E96B0();
  sub_1000E93A0();
  sub_10003D59C(v77, v78, v54);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v61, v76);
  return sub_100028B6C(v60, &qword_100138870);
}

uint64_t sub_100058B9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v2 = sub_1000E8CB0();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  uint64_t v53 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SmallHeadlineContentView(0);
  sub_10007F1DC();
  sub_1000E9930();
  sub_10001B38C(&qword_100137370);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000F2570;
  uint64_t v51 = *(int *)(v4 + 24);
  uint64_t v52 = v1;
  uint64_t v6 = *(void **)(v1 + v51);
  id v7 = [v6 identifier];
  uint64_t v8 = sub_1000EA2B0();
  uint64_t v10 = v9;

  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v11 = sub_1000263E0();
  *(void *)(v5 + 64) = v11;
  *(void *)(v5 + 32) = v8;
  *(void *)(v5 + 40) = v10;
  uint64_t v57 = 0;
  uint64_t v58 = 0xE000000000000000;
  id v12 = [v6 title];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1000EA2B0();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = (void *)0xE000000000000000;
  }
  v68._countAndFlagsBits = v14;
  v68._object = v16;
  sub_1000EA370(v68);
  swift_bridgeObjectRelease();
  uint64_t v17 = v57;
  uint64_t v18 = v58;
  *(void *)(v5 + 96) = &type metadata for String;
  *(void *)(v5 + 104) = v11;
  *(void *)(v5 + 72) = v17;
  *(void *)(v5 + 80) = v18;
  uint64_t v57 = 0;
  uint64_t v58 = 0xE000000000000000;
  id v19 = [v6 language];
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = sub_1000EA2B0();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v66 = v21;
  uint64_t v67 = v23;
  sub_10001B38C(&qword_10013A640);
  sub_1000EA910();
  swift_bridgeObjectRelease();
  uint64_t v24 = v57;
  uint64_t v25 = v58;
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v11;
  *(void *)(v5 + 112) = v24;
  *(void *)(v5 + 120) = v25;
  sub_100022374(0, (unint64_t *)&qword_100138300);
  id v26 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  id v27 = [v6 title];
  if (v27)
  {
    uint64_t v28 = v27;
    sub_1000EA2B0();
  }
  swift_retain();
  uint64_t v29 = sub_1000E99C0();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_bridgeObjectRelease();
  swift_release();
  char v34 = v33 & 1;
  sub_1000E9BC0();
  sub_1000E9C00();
  swift_release();
  uint64_t v35 = sub_1000E99D0();
  uint64_t v37 = v36;
  char v39 = v38;
  uint64_t v41 = v40;
  swift_release();
  sub_100026FDC(v29, v31, v34);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = sub_1000E9BF0();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v57 = v35;
  uint64_t v58 = v37;
  char v59 = v39 & 1;
  uint64_t v60 = v41;
  uint64_t v61 = KeyPath;
  uint64_t v62 = 3;
  char v63 = 0;
  uint64_t v64 = v44;
  uint64_t v65 = v43;
  uint64_t v45 = *(void **)(v52 + v51);
  id v46 = [v45 language];
  if (v46)
  {
    uint64_t v47 = v46;
    sub_1000EA2B0();
  }
  uint64_t v48 = v53;
  sub_1000E8CA0();
  id v49 = [v45 language];
  if (v49) {

  }
  sub_10001B38C(&qword_100138950);
  sub_10005DF78((unint64_t *)&qword_100138958, &qword_100138950, (void (*)(void))sub_10003E488);
  sub_1000E9B20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v56);
  sub_100026FDC(v57, v58, v59);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000590A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100138858);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - v8;
  *(void *)uint64_t v9 = sub_1000E9620();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v10 = sub_10001B38C(&qword_100138860);
  sub_1000592AC(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v11 = v31;
  uint64_t v12 = v33;
  int v26 = v34;
  int v27 = v32;
  uint64_t v24 = v36;
  uint64_t v25 = v35;
  sub_100059BB0(v28);
  uint64_t v13 = v28[0];
  uint64_t v14 = v28[1];
  char v15 = v29;
  uint64_t v16 = v30;
  sub_10002DA34((uint64_t)v9, (uint64_t)v7, &qword_100138858);
  sub_10002DA34((uint64_t)v7, a2, &qword_100138858);
  uint64_t v17 = (int *)sub_10001B38C(&qword_100138868);
  uint64_t v18 = a2 + v17[12];
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  *(void *)(v18 + 16) = v11;
  *(unsigned char *)(v18 + 24) = v27;
  *(void *)(v18 + 32) = v12;
  *(unsigned char *)(v18 + 40) = v26;
  uint64_t v19 = v24;
  *(void *)(v18 + 48) = v25;
  *(void *)(v18 + 56) = v19;
  uint64_t v20 = a2 + v17[16];
  *(void *)uint64_t v20 = v13;
  *(void *)(v20 + 8) = v14;
  *(unsigned char *)(v20 + 16) = v15;
  *(void *)(v20 + 24) = v16;
  uint64_t v21 = a2 + v17[20];
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  sub_1000360E4(v13, v14, v15);
  swift_bridgeObjectRetain();
  sub_100028B6C((uint64_t)v9, &qword_100138858);
  sub_100026FDC(v13, v14, v15);
  swift_bridgeObjectRelease();
  return sub_100028B6C((uint64_t)v7, &qword_100138858);
}

uint64_t sub_1000592AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v79 = a2;
  uint64_t v2 = sub_10001B38C(&qword_100138870);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unsigned __int8 v77 = &v64[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v76 = &v64[-v5];
  uint64_t v6 = sub_10001B38C(&qword_100138878);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v75 = &v64[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  Swift::String v81 = &v64[-v9];
  uint64_t v10 = sub_10001B38C(&qword_100138880) - 8;
  __chkstk_darwin(v10);
  uint64_t v71 = &v64[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1000E9CA0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = &v64[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = sub_10001B38C(&qword_100138888);
  __chkstk_darwin(v70);
  uint64_t v17 = (uint64_t *)&v64[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = sub_10001B38C(&qword_100138890);
  uint64_t v74 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = &v64[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_10001B38C(&qword_100138898);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v82 = &v64[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  Swift::String v80 = &v64[-v22];
  uint64_t v69 = sub_1000E9C80();
  uint64_t v23 = sub_1000E9BB0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = sub_1000E9910();
  uint64_t v26 = swift_getKeyPath();
  int v27 = *(void (**)(unsigned char *, void, uint64_t))(v13 + 104);
  uint64_t v67 = v15;
  uint64_t v68 = v12;
  v27(v15, enum case for Image.Scale.medium(_:), v12);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = *(int *)(v10 + 36);
  uint64_t v30 = (uint64_t)v71;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(&v71[v29], v15, v12);
  *(void *)uint64_t v30 = v28;
  uint64_t v31 = v70;
  sub_10002DA34(v30, (uint64_t)v17 + *(int *)(v70 + 36), &qword_100138880);
  *uint64_t v17 = v69;
  v17[1] = KeyPath;
  v17[2] = v23;
  v17[3] = v26;
  v17[4] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100028B6C(v30, &qword_100138880);
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v67, v68);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v32 = sub_10005DB44();
  uint64_t v33 = v72;
  sub_1000E9A60();
  sub_100028B6C((uint64_t)v17, &qword_100138888);
  uint64_t v89 = v31;
  unint64_t v90 = v32;
  swift_getOpaqueTypeConformance2();
  unsigned __int8 v34 = v82;
  uint64_t v35 = v73;
  sub_1000E9B00();
  (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v33, v35);
  uint64_t v36 = v80;
  sub_10002D5DC((uint64_t)v34, (uint64_t)v80, &qword_100138898);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v74 = v83;
  LODWORD(v73) = v84;
  uint64_t v72 = v85;
  LODWORD(v71) = v86;
  uint64_t v70 = v87;
  uint64_t v69 = v88;
  sub_1000E9910();
  uint64_t v37 = sub_1000E99C0();
  uint64_t v39 = v38;
  LOBYTE(v33) = v40;
  swift_release();
  sub_1000E9BF0();
  uint64_t v41 = sub_1000E9980();
  uint64_t v43 = v42;
  LOBYTE(v30) = v44;
  uint64_t v46 = v45;
  swift_release();
  sub_100026FDC(v37, v39, v33 & 1);
  swift_bridgeObjectRelease();
  uint64_t v89 = v41;
  unint64_t v90 = v43;
  LOBYTE(v91) = v30 & 1;
  uint64_t v92 = v46;
  uint64_t v93 = 0x3FE6666666666666;
  sub_10001B38C(&qword_1001388E0);
  sub_10005DD24((unint64_t *)&qword_1001388E8, &qword_1001388E0);
  uint64_t v47 = v81;
  sub_1000E9B00();
  sub_100026FDC(v41, v43, v30 & 1);
  swift_bridgeObjectRelease();
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v68 = v89;
  LODWORD(v67) = v90;
  uint64_t v66 = v91;
  int v65 = v92;
  uint64_t v48 = v93;
  uint64_t v49 = v94;
  id v50 = v76;
  sub_100058484((uint64_t)v76);
  uint64_t v51 = (uint64_t)v36;
  uint64_t v52 = v82;
  sub_10002DA34(v51, (uint64_t)v82, &qword_100138898);
  uint64_t v53 = v75;
  sub_10002DA34((uint64_t)v47, (uint64_t)v75, &qword_100138878);
  uint64_t v54 = (uint64_t)v50;
  uint64_t v55 = v77;
  sub_10002DA34((uint64_t)v50, (uint64_t)v77, &qword_100138870);
  uint64_t v56 = (uint64_t)v52;
  uint64_t v57 = v79;
  sub_10002DA34(v56, v79, &qword_100138898);
  uint64_t v58 = (int *)sub_10001B38C(&qword_1001388F0);
  uint64_t v59 = v57 + v58[12];
  *(void *)uint64_t v59 = 0;
  *(unsigned char *)(v59 + 8) = 1;
  *(void *)(v59 + 16) = v74;
  *(unsigned char *)(v59 + 24) = v73;
  *(void *)(v59 + 32) = v72;
  *(unsigned char *)(v59 + 40) = (_BYTE)v71;
  uint64_t v60 = v69;
  *(void *)(v59 + 48) = v70;
  *(void *)(v59 + 56) = v60;
  sub_10002DA34((uint64_t)v53, v57 + v58[16], &qword_100138878);
  uint64_t v61 = v57 + v58[20];
  *(void *)uint64_t v61 = 0;
  *(unsigned char *)(v61 + 8) = 1;
  *(void *)(v61 + 16) = v68;
  *(unsigned char *)(v61 + 24) = (_BYTE)v67;
  *(void *)(v61 + 32) = v66;
  *(unsigned char *)(v61 + 40) = v65;
  *(void *)(v61 + 48) = v48;
  *(void *)(v61 + 56) = v49;
  sub_10002DA34((uint64_t)v55, v57 + v58[24], &qword_100138870);
  uint64_t v62 = v57 + v58[28];
  *(void *)uint64_t v62 = 0;
  *(unsigned char *)(v62 + 8) = 1;
  sub_100028B6C(v54, &qword_100138870);
  sub_100028B6C((uint64_t)v81, &qword_100138878);
  sub_100028B6C((uint64_t)v80, &qword_100138898);
  sub_100028B6C((uint64_t)v55, &qword_100138870);
  sub_100028B6C((uint64_t)v53, &qword_100138878);
  return sub_100028B6C((uint64_t)v82, &qword_100138898);
}

uint64_t sub_100059BB0@<X0>(uint64_t *a1@<X8>)
{
  int v65 = a1;
  uint64_t v2 = sub_1000E8CB0();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  __chkstk_darwin(v2);
  uint64_t v66 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SmallHeadlineContentView(0);
  sub_10007F1DC();
  uint64_t v5 = (void *)sub_1000E9930();
  sub_10001B38C(&qword_100137370);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000F2570;
  uint64_t v7 = *(void **)(v1 + *(int *)(v4 + 24));
  id v8 = [v7 identifier];
  uint64_t v9 = sub_1000EA2B0();
  uint64_t v11 = v10;

  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000263E0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  id v13 = [v7 title];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1000EA2B0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = (void *)0xE000000000000000;
  }
  v71._countAndFlagsBits = v15;
  v71._object = v17;
  sub_1000EA370(v71);
  swift_bridgeObjectRelease();
  uint64_t v18 = v69;
  unint64_t v19 = v70;
  *(void *)(v6 + 96) = &type metadata for String;
  *(void *)(v6 + 104) = v12;
  *(void *)(v6 + 72) = v18;
  *(void *)(v6 + 80) = v19;
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  id v20 = [v7 language];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_1000EA2B0();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  uint64_t v67 = v22;
  uint64_t v68 = v24;
  sub_10001B38C(&qword_10013A640);
  sub_1000EA910();
  swift_bridgeObjectRelease();
  uint64_t v25 = v69;
  unint64_t v26 = v70;
  *(void *)(v6 + 136) = &type metadata for String;
  *(void *)(v6 + 144) = v12;
  *(void *)(v6 + 112) = v25;
  *(void *)(v6 + 120) = v26;
  sub_100022374(0, (unint64_t *)&qword_100138300);
  int v27 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  id v28 = [v7 title];
  v62[0] = v7;
  if (v28)
  {
    uint64_t v29 = v28;
    sub_1000EA2B0();
  }
  swift_retain();
  uint64_t v30 = sub_1000E99C0();
  uint64_t v32 = v31;
  char v34 = v33;
  swift_bridgeObjectRelease();
  v62[1] = v5;
  swift_release();
  char v35 = v34 & 1;
  sub_1000E9BC0();
  sub_1000E9C00();
  swift_release();
  uint64_t v36 = sub_1000E99D0();
  uint64_t v38 = v37;
  char v40 = v39;
  swift_release();
  char v41 = v40 & 1;
  sub_100026FDC(v30, v32, v35);
  swift_bridgeObjectRelease();
  sub_1000E9BF0();
  uint64_t v42 = sub_1000E9980();
  uint64_t v44 = v43;
  char v46 = v45;
  swift_release();
  sub_100026FDC(v36, v38, v41);
  swift_bridgeObjectRelease();
  id v47 = v62[0];
  id v48 = [v62[0] language];
  if (v48)
  {
    uint64_t v49 = v48;
    sub_1000EA2B0();
  }
  sub_1000E8CA0();
  id v50 = [v47 language];
  if (v50) {

  }
  char v51 = v46 & 1;
  uint64_t v52 = v66;
  uint64_t v53 = sub_1000E99A0();
  uint64_t v55 = v54;
  char v57 = v56;
  uint64_t v59 = v58;
  sub_100026FDC(v42, v44, v51);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v52, v64);
  uint64_t v61 = v65;
  *int v65 = v53;
  v61[1] = v55;
  *((unsigned char *)v61 + 16) = v57 & 1;
  v61[3] = v59;
  return result;
}

uint64_t sub_10005A0A4()
{
  return sub_1000E94C0();
}

uint64_t sub_10005A0C8()
{
  return sub_1000E94C0();
}

uint64_t sub_10005A0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005DA34(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_10005A118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005DA34(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_10005A158(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005A1C0(uint64_t result)
{
  *(unsigned char *)(result + 168) = 1;
  return result;
}

uint64_t sub_10005A1CC(uint64_t result)
{
  *(unsigned char *)(result + 168) = 0;
  return result;
}

uint64_t sub_10005A1D4(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10005A214@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E94A0();
  *a1 = result;
  return result;
}

uint64_t sub_10005A240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E94A0();
  *a1 = result;
  return result;
}

uint64_t sub_10005A26C()
{
  return sub_1000E94B0();
}

uint64_t sub_10005A298()
{
  return sub_1000E94B0();
}

unint64_t sub_10005A2C4()
{
  unint64_t result = qword_100138740;
  if (!qword_100138740)
  {
    sub_10001B3D0(&qword_100138708);
    sub_10005A340();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138740);
  }
  return result;
}

unint64_t sub_10005A340()
{
  unint64_t result = qword_100138748;
  if (!qword_100138748)
  {
    sub_10001B3D0(&qword_100138700);
    sub_10001B3D0(&qword_100138720);
    sub_10005DF78(&qword_100138728, &qword_100138720, (void (*)(void))sub_10003E390);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138748);
  }
  return result;
}

unint64_t sub_10005A41C()
{
  unint64_t result = qword_100138750;
  if (!qword_100138750)
  {
    sub_10001B3D0(&qword_100138718);
    sub_10001B3D0(&qword_100138708);
    sub_10005A2C4();
    swift_getOpaqueTypeConformance2();
    sub_10005794C((unint64_t *)&qword_100137ED8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138750);
  }
  return result;
}

uint64_t type metadata accessor for SmallHeadlineContentView(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_1001387D8);
}

unint64_t sub_10005A51C()
{
  unint64_t result = qword_100138768;
  if (!qword_100138768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138768);
  }
  return result;
}

uint64_t sub_10005A574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10005A5DC()
{
  unint64_t result = qword_100138778;
  if (!qword_100138778)
  {
    sub_10001B3D0(&qword_100138760);
    type metadata accessor for SmallHeadlineContentView(255);
    sub_10005794C(&qword_100138770, (void (*)(uint64_t))type metadata accessor for SmallHeadlineContentView);
    swift_getOpaqueTypeConformance2();
    sub_10005794C((unint64_t *)&qword_100137ED8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138778);
  }
  return result;
}

unint64_t sub_10005A6E8(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10003D4B0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    unint64_t v97 = a1;
    uint64_t v98 = a2;
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v94 = type metadata accessor for Item.Headline(0);
    uint64_t v19 = *(int *)(v94 + 24);
    __dst = (char *)v16 + v19;
    id v20 = (char *)v17 + v19;
    uint64_t v21 = sub_1000E8B60();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v93 = v23;
    uint64_t v90 = v22;
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    uint64_t v25 = *(int *)(v94 + 28);
    unint64_t v26 = (void *)((char *)v16 + v25);
    int v27 = (char *)v17 + v25;
    id v28 = (void *)*((void *)v27 + 1);
    uint64_t v95 = v21;
    if (v28)
    {
      uint64_t v29 = *(void **)v27;
      void *v26 = v29;
      v26[1] = v28;
      id v30 = v29;
      id v31 = v28;
    }
    else
    {
      *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
    }
    __dsta = a3;
    uint64_t v32 = a3[7];
    uint64_t v33 = a1 + v32;
    uint64_t v34 = v98 + v32;
    char v35 = *(void **)(v98 + v32);
    *(void *)(a1 + v32) = v35;
    uint64_t v36 = (int *)type metadata accessor for TodayContent();
    uint64_t v37 = v36[5];
    uint64_t v38 = (void *)(v33 + v37);
    char v39 = (void *)(v34 + v37);
    char v40 = (int *)type metadata accessor for Banner();
    uint64_t v41 = *((void *)v40 - 1);
    uint64_t v42 = *(unsigned int (**)(void *, uint64_t, int *))(v41 + 48);
    id v43 = v35;
    if (v42(v39, 1, v40))
    {
      uint64_t v44 = sub_10001B38C(&qword_1001385E0);
      memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v89 = v41;
      uint64_t v45 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v45;
      uint64_t v46 = v39[3];
      v38[2] = v39[2];
      _OWORD v38[3] = v46;
      uint64_t v47 = v39[5];
      _OWORD v38[4] = v39[4];
      v38[5] = v47;
      uint64_t v48 = v40[7];
      uint64_t v49 = (char *)v38 + v48;
      id v50 = (char *)v39 + v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v93(v50, 1, v95))
      {
        uint64_t v51 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v49, v50, v95);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v49, 0, 1, v95);
      }
      uint64_t v52 = v40[8];
      uint64_t v53 = (void *)((char *)v38 + v52);
      uint64_t v54 = (void *)((char *)v39 + v52);
      uint64_t v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      uint64_t v56 = v40[9];
      char v57 = *(void **)((char *)v39 + v56);
      swift_bridgeObjectRetain();
      if (v57 != (void *)1) {
        id v58 = v57;
      }
      *(void *)((char *)v38 + v56) = v57;
      uint64_t v59 = v40[10];
      uint64_t v60 = (char *)v38 + v59;
      uint64_t v61 = (char *)v39 + v59;
      uint64_t v62 = *(void **)v61;
      uint64_t v63 = (void *)*((void *)v61 + 1);
      char v64 = v61[16];
      sub_10001D614(*(void **)v61, v63);
      *(void *)uint64_t v60 = v62;
      *((void *)v60 + 1) = v63;
      v60[16] = v64;
      (*(void (**)(void *, void, uint64_t, int *))(v89 + 56))(v38, 0, 1, v40);
    }
    *(void *)(v33 + v36[6]) = *(void *)(v34 + v36[6]);
    *(void *)(v33 + v36[7]) = *(void *)(v34 + v36[7]);
    *(unsigned char *)(v33 + v36[8]) = *(unsigned char *)(v34 + v36[8]);
    uint64_t v65 = v36[9];
    uint64_t v66 = (void *)(v33 + v65);
    uint64_t v67 = (void *)(v34 + v65);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v93((char *)v67, 1, v95))
    {
      uint64_t v68 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v90 + 16))(v66, v67, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v66, 0, 1, v95);
    }
    *(void *)(v33 + v36[10]) = *(void *)(v34 + v36[10]);
    uint64_t v69 = v36[11];
    unint64_t v70 = (void *)(v33 + v69);
    Swift::String v71 = (void *)(v34 + v69);
    uint64_t v72 = v71[1];
    *unint64_t v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = v36[12];
    uint64_t v74 = (void *)(v33 + v73);
    uint64_t v75 = (void *)(v34 + v73);
    uint64_t v76 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v76;
    uint64_t v77 = __dsta[8];
    unint64_t v14 = v97;
    uint64_t v78 = v97 + v77;
    uint64_t v79 = v98 + v77;
    *(_OWORD *)(v97 + v77) = *(_OWORD *)(v98 + v77);
    Swift::String v80 = (int *)type metadata accessor for LayoutContext();
    uint64_t v81 = v80[6];
    uint64_t v99 = v78 + v81;
    uint64_t v96 = v79 + v81;
    uint64_t v82 = sub_1000E9F60();
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v83(v99, v96, v82);
    *(_OWORD *)(v78 + v80[7]) = *(_OWORD *)(v79 + v80[7]);
    uint64_t v84 = v80[8];
    uint64_t v85 = v78 + v84;
    uint64_t v86 = v79 + v84;
    uint64_t v87 = sub_1000E96F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    *(void *)(v78 + v80[9]) = *(void *)(v79 + v80[9]);
    *(void *)(v78 + v80[10]) = *(void *)(v79 + v80[10]);
    *(unsigned char *)(v78 + v80[11]) = *(unsigned char *)(v79 + v80[11]);
    *(unsigned char *)(v78 + v80[12]) = *(unsigned char *)(v79 + v80[12]);
  }
  return v14;
}

uint64_t sub_10005ADCC(uint64_t a1, int *a2)
{
  sub_10003D590(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for Item.Headline(0);
  uint64_t v8 = v6 + *(int *)(v7 + 24);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = (id *)(v6 + *(int *)(v7 + 28));
  if (v12[1])
  {
  }
  uint64_t v13 = (id *)(a1 + a2[7]);

  uint64_t v14 = type metadata accessor for TodayContent();
  uint64_t v15 = (char *)v13 + *(int *)(v14 + 20);
  uint64_t v16 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v16 - 1) + 48))(v15, 1, v16))
  {
    id v28 = a2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = &v15[v16[7]];
    if (!v11((uint64_t)v17, 1, v9)) {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void **)&v15[v16[9]];
    if (v18 != (void *)1) {

    }
    sub_10001D758(*(void **)&v15[v16[10]], *(void **)&v15[v16[10] + 8]);
    a2 = v28;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v19 = (char *)v13 + *(int *)(v14 + 36);
  if (!v11((uint64_t)v19, 1, v9)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + a2[8];
  uint64_t v21 = type metadata accessor for LayoutContext();
  uint64_t v22 = v20 + *(int *)(v21 + 24);
  uint64_t v23 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = v20 + *(int *)(v21 + 32);
  uint64_t v25 = sub_1000E96F0();
  unint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);

  return v26(v24, v25);
}

uint64_t sub_10005B174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10003D4B0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v94 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v91 = a2;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  uint64_t v92 = type metadata accessor for Item.Headline(0);
  uint64_t v16 = *(int *)(v92 + 24);
  __dst = (char *)v13 + v16;
  uint64_t v17 = (void *)(v14 + v16);
  uint64_t v18 = sub_1000E8B60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, void *))(v19 + 48);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v88 = v20;
  uint64_t v87 = v19;
  if (v20((char *)v17, 1, (void *)v18))
  {
    uint64_t v21 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  uint64_t v22 = *(int *)(v92 + 28);
  uint64_t v23 = (void *)((char *)v13 + v22);
  uint64_t v24 = v14 + v22;
  uint64_t v25 = *(void **)(v24 + 8);
  __dsta = (void *)v18;
  if (v25)
  {
    unint64_t v26 = *(void **)v24;
    *uint64_t v23 = v26;
    v23[1] = v25;
    id v27 = v26;
    id v28 = v25;
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  uint64_t v29 = *(int *)(v94 + 28);
  uint64_t v93 = a1;
  id v30 = (void *)(a1 + v29);
  uint64_t v31 = v91 + v29;
  uint64_t v32 = *(void **)(v91 + v29);
  *id v30 = v32;
  uint64_t v33 = (int *)type metadata accessor for TodayContent();
  uint64_t v34 = v33[5];
  char v35 = (void *)((char *)v30 + v34);
  uint64_t v36 = (void *)(v31 + v34);
  uint64_t v37 = (int *)type metadata accessor for Banner();
  uint64_t v38 = *((void *)v37 - 1);
  char v39 = *(unsigned int (**)(void *, uint64_t, int *))(v38 + 48);
  id v40 = v32;
  if (v39(v36, 1, v37))
  {
    uint64_t v41 = sub_10001B38C(&qword_1001385E0);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = v36[1];
    *char v35 = *v36;
    v35[1] = v42;
    uint64_t v43 = v36[3];
    void v35[2] = v36[2];
    v35[3] = v43;
    uint64_t v44 = v36[5];
    _OWORD v35[4] = v36[4];
    v35[5] = v44;
    uint64_t v45 = v37[7];
    uint64_t v86 = (char *)v35 + v45;
    uint64_t v46 = (char *)v36 + v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v88(v46, 1, __dsta))
    {
      uint64_t v47 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v86, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v87 + 16))(v86, v46, __dsta);
      (*(void (**)(char *, void, uint64_t, void *))(v87 + 56))(v86, 0, 1, __dsta);
    }
    uint64_t v48 = v37[8];
    uint64_t v49 = (void *)((char *)v35 + v48);
    id v50 = (void *)((char *)v36 + v48);
    uint64_t v51 = v50[1];
    void *v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = v37[9];
    uint64_t v53 = *(void **)((char *)v36 + v52);
    swift_bridgeObjectRetain();
    if (v53 != (void *)1) {
      id v54 = v53;
    }
    *(void *)((char *)v35 + v52) = v53;
    uint64_t v55 = v37[10];
    uint64_t v56 = (char *)v35 + v55;
    char v57 = (char *)v36 + v55;
    id v58 = *(void **)v57;
    uint64_t v59 = (void *)*((void *)v57 + 1);
    char v60 = v57[16];
    sub_10001D614(*(void **)v57, v59);
    *(void *)uint64_t v56 = v58;
    *((void *)v56 + 1) = v59;
    v56[16] = v60;
    (*(void (**)(void *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
  }
  *(void *)((char *)v30 + v33[6]) = *(void *)(v31 + v33[6]);
  *(void *)((char *)v30 + v33[7]) = *(void *)(v31 + v33[7]);
  *((unsigned char *)v30 + v33[8]) = *(unsigned char *)(v31 + v33[8]);
  uint64_t v61 = v33[9];
  uint64_t v62 = (char *)v30 + v61;
  uint64_t v63 = (void *)(v31 + v61);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v88((char *)v63, 1, __dsta))
  {
    uint64_t v64 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, void *))(v87 + 16))(v62, v63, __dsta);
    (*(void (**)(char *, void, uint64_t, void *))(v87 + 56))(v62, 0, 1, __dsta);
  }
  *(void *)((char *)v30 + v33[10]) = *(void *)(v31 + v33[10]);
  uint64_t v65 = v33[11];
  uint64_t v66 = (void *)((char *)v30 + v65);
  uint64_t v67 = (void *)(v31 + v65);
  uint64_t v68 = v67[1];
  *uint64_t v66 = *v67;
  v66[1] = v68;
  uint64_t v69 = v33[12];
  unint64_t v70 = (void *)((char *)v30 + v69);
  Swift::String v71 = (void *)(v31 + v69);
  uint64_t v72 = v71[1];
  *unint64_t v70 = *v71;
  v70[1] = v72;
  uint64_t v73 = *(int *)(v94 + 32);
  uint64_t v74 = v93 + v73;
  uint64_t v75 = v91 + v73;
  *(_OWORD *)(v93 + v73) = *(_OWORD *)(v91 + v73);
  uint64_t v76 = (int *)type metadata accessor for LayoutContext();
  uint64_t v77 = v76[6];
  uint64_t v95 = v74 + v77;
  uint64_t v78 = v75 + v77;
  uint64_t v79 = sub_1000E9F60();
  Swift::String v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v80(v95, v78, v79);
  *(_OWORD *)(v74 + v76[7]) = *(_OWORD *)(v75 + v76[7]);
  uint64_t v81 = v76[8];
  uint64_t v82 = v74 + v81;
  uint64_t v83 = v75 + v81;
  uint64_t v84 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
  *(void *)(v74 + v76[9]) = *(void *)(v75 + v76[9]);
  *(void *)(v74 + v76[10]) = *(void *)(v75 + v76[10]);
  *(unsigned char *)(v74 + v76[11]) = *(unsigned char *)(v75 + v76[11]);
  *(unsigned char *)(v74 + v76[12]) = *(unsigned char *)(v75 + v76[12]);
  return v93;
}

uint64_t sub_10005B808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10003D4B0(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10003D590(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100028B6C(a1 + v10, &qword_100137A10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v132 = a3;
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v127 = type metadata accessor for Item.Headline(0);
  uint64_t v17 = *(int *)(v127 + 24);
  uint64_t v18 = (void *)(v15 + v17);
  uint64_t v19 = (const void *)(v16 + v17);
  uint64_t v20 = sub_1000E8B60();
  uint64_t v131 = *(void *)(v20 - 8);
  uint64_t v21 = *(uint64_t (**)(void))(v131 + 48);
  unsigned int v22 = ((uint64_t (*)(void *, uint64_t, uint64_t))v21)(v18, 1, v20);
  unint64_t v130 = v21;
  unsigned int v23 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v21)(v19, 1, v20);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v18, 0, 1, v20);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v131 + 8))(v18, v20);
LABEL_11:
    uint64_t v24 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, const void *, uint64_t))(v131 + 24))(v18, v19, v20);
LABEL_12:
  uint64_t v25 = *(int *)(v127 + 28);
  unint64_t v26 = (void **)(v15 + v25);
  uint64_t v27 = v16 + v25;
  uint64_t v28 = *(void *)(v15 + v25 + 8);
  uint64_t v29 = *(void *)(v27 + 8);
  uint64_t v129 = v20;
  if (v28)
  {
    if (v29)
    {
      id v30 = *v26;
      uint64_t v31 = *(void **)v27;
      void *v26 = *(void **)v27;
      id v32 = v31;

      uint64_t v33 = *(void **)(v27 + 8);
      uint64_t v34 = v26[1];
      v26[1] = v33;
      id v35 = v33;

      goto LABEL_19;
    }
    sub_10005C2F0((uint64_t)v26);
  }
  else if (v29)
  {
    uint64_t v36 = *(void **)v27;
    void *v26 = *(void **)v27;
    uint64_t v37 = *(void **)(v27 + 8);
    v26[1] = v37;
    id v38 = v36;
    id v39 = v37;
    goto LABEL_19;
  }
  *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
LABEL_19:
  uint64_t v40 = *(int *)(v132 + 28);
  uint64_t v126 = a2;
  uint64_t v128 = a1;
  uint64_t v41 = (void **)(a1 + v40);
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void **)(a2 + v40);
  uint64_t v44 = *v41;
  char *v41 = v43;
  id v45 = v43;

  uint64_t v46 = (int *)type metadata accessor for TodayContent();
  uint64_t v47 = v46[5];
  uint64_t v48 = (void **)((char *)v41 + v47);
  uint64_t v49 = (void *)(v42 + v47);
  id v50 = (int *)type metadata accessor for Banner();
  uint64_t v51 = *((void *)v50 - 1);
  uint64_t v52 = *(uint64_t (**)(void *, uint64_t, int *))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      void *v48 = *v49;
      v48[1] = v49[1];
      v48[2] = v49[2];
      _OWORD v48[3] = v49[3];
      _OWORD v48[4] = v49[4];
      v48[5] = v49[5];
      uint64_t v55 = v50[7];
      __dst = (char *)v48 + v55;
      uint64_t v56 = (char *)v49 + v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v130)(v56, 1, v129))
      {
        uint64_t v57 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(__dst, v56, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(__dst, 0, 1, v129);
      }
      uint64_t v65 = v50[8];
      uint64_t v66 = (void *)((char *)v48 + v65);
      uint64_t v67 = (void *)((char *)v49 + v65);
      *uint64_t v66 = *v67;
      v66[1] = v67[1];
      uint64_t v68 = v50[9];
      uint64_t v69 = *(void **)((char *)v49 + v68);
      swift_bridgeObjectRetain();
      if (v69 != (void *)1) {
        id v70 = v69;
      }
      *(void *)((char *)v48 + v68) = v69;
      uint64_t v71 = v50[10];
      uint64_t v72 = (char *)v48 + v71;
      uint64_t v73 = (char *)v49 + v71;
      uint64_t v74 = *(void **)v73;
      uint64_t v75 = (void *)*((void *)v73 + 1);
      char v76 = v73[16];
      sub_10001D614(*(void **)v73, v75);
      *(void *)uint64_t v72 = v74;
      *((void *)v72 + 1) = v75;
      v72[16] = v76;
      (*(void (**)(void *, void, uint64_t, int *))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_34;
    }
LABEL_25:
    uint64_t v58 = sub_10001B38C(&qword_1001385E0);
    memcpy(v48, v49, *(void *)(*(void *)(v58 - 8) + 64));
LABEL_34:
    uint64_t v77 = v126;
    uint64_t v61 = v129;
    goto LABEL_35;
  }
  if (v54)
  {
    sub_100053BD8((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for Banner);
    goto LABEL_25;
  }
  void *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48[2] = v49[2];
  _OWORD v48[3] = v49[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v48[4] = v49[4];
  v48[5] = v49[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = v50[7];
  char v60 = (char *)v49 + v59;
  uint64_t v123 = (char *)v48 + v59;
  uint64_t v61 = v129;
  int __dsta = v130();
  unsigned int v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v60, 1, v129);
  if (__dsta)
  {
    if (v62)
    {
      size_t v63 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v64 = v123;
LABEL_45:
      memcpy(v64, v60, v63);
      goto LABEL_48;
    }
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v123, v60, v129);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v123, 0, 1, v129);
  }
  else
  {
    if (v62)
    {
      (*(void (**)(char *, uint64_t))(v131 + 8))(v123, v129);
      size_t v63 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v64 = v123;
      goto LABEL_45;
    }
    (*(void (**)(char *, char *, uint64_t))(v131 + 24))(v123, v60, v129);
  }
LABEL_48:
  uint64_t v106 = v50[8];
  uint64_t v107 = (void *)((char *)v48 + v106);
  unint64_t v108 = (void *)((char *)v49 + v106);
  *uint64_t v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v50[9];
  uint64_t v110 = (void *)((char *)v48 + v109);
  uint64_t v111 = *(void **)((char *)v48 + v109);
  uint64_t v112 = *(void **)((char *)v49 + v109);
  if (v111 != (void *)1)
  {
    if (v112 != (void *)1)
    {
      *uint64_t v110 = v112;
      id v114 = v112;

      goto LABEL_55;
    }
    sub_10001DBE4((id *)((char *)v48 + v109));
    uint64_t v112 = *(void **)((char *)v49 + v109);
    goto LABEL_53;
  }
  if (v112 == (void *)1)
  {
LABEL_53:
    *uint64_t v110 = v112;
    goto LABEL_55;
  }
  *uint64_t v110 = v112;
  id v113 = v112;
LABEL_55:
  uint64_t v115 = v50[10];
  uint64_t v116 = (char *)v48 + v115;
  uint64_t v117 = (char *)v49 + v115;
  uint64_t v118 = *(void **)v117;
  uint64_t v119 = (void *)*((void *)v117 + 1);
  char v120 = v117[16];
  sub_10001D614(*(void **)v117, v119);
  Swift::Int v121 = *(void **)v116;
  uint64_t v122 = (void *)*((void *)v116 + 1);
  *(void *)uint64_t v116 = v118;
  *((void *)v116 + 1) = v119;
  v116[16] = v120;
  sub_10001D758(v121, v122);
  uint64_t v77 = v126;
LABEL_35:
  *(void **)((char *)v41 + v46[6]) = *(void **)(v42 + v46[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v41 + v46[7]) = *(void **)(v42 + v46[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v41 + v46[8]) = *(unsigned char *)(v42 + v46[8]);
  uint64_t v78 = v46[9];
  uint64_t v79 = (char *)v41 + v78;
  Swift::String v80 = (const void *)(v42 + v78);
  unsigned int v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)((char *)v41 + v78, 1, v61);
  unsigned int v82 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v130)(v80, 1, v61);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, const void *, uint64_t))(v131 + 24))(v79, v80, v61);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v131 + 8))(v79, v61);
    goto LABEL_40;
  }
  if (v82)
  {
LABEL_40:
    uint64_t v83 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, const void *, uint64_t))(v131 + 16))(v79, v80, v61);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v79, 0, 1, v61);
LABEL_41:
  *(void **)((char *)v41 + v46[10]) = *(void **)(v42 + v46[10]);
  swift_retain();
  swift_release();
  uint64_t v84 = v46[11];
  uint64_t v85 = (void **)((char *)v41 + v84);
  uint64_t v86 = (void *)(v42 + v84);
  *uint64_t v85 = *v86;
  v85[1] = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = v46[12];
  uint64_t v88 = (void **)((char *)v41 + v87);
  uint64_t v89 = (void *)(v42 + v87);
  *uint64_t v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = *(int *)(v132 + 32);
  uint64_t v91 = (void *)(v128 + v90);
  uint64_t v92 = v77 + v90;
  *uint64_t v91 = *(void *)(v77 + v90);
  v91[1] = *(void *)(v77 + v90 + 8);
  uint64_t v93 = (int *)type metadata accessor for LayoutContext();
  uint64_t v94 = v93[6];
  uint64_t v95 = (char *)v91 + v94;
  uint64_t v96 = v92 + v94;
  uint64_t v97 = sub_1000E9F60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 24))(v95, v96, v97);
  uint64_t v98 = v93[7];
  uint64_t v99 = (void *)((char *)v91 + v98);
  int v100 = (void *)(v92 + v98);
  *uint64_t v99 = *v100;
  v99[1] = v100[1];
  uint64_t v101 = v93[8];
  uint64_t v102 = (char *)v91 + v101;
  uint64_t v103 = v92 + v101;
  uint64_t v104 = sub_1000E96F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
  *(void *)((char *)v91 + v93[9]) = *(void *)(v92 + v93[9]);
  *(void *)((char *)v91 + v93[10]) = *(void *)(v92 + v93[10]);
  *((unsigned char *)v91 + v93[11]) = *(unsigned char *)(v92 + v93[11]);
  *((unsigned char *)v91 + v93[12]) = *(unsigned char *)(v92 + v93[12]);
  return v128;
}

uint64_t sub_10005C2F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005C344(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000E9F90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(v5 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  uint64_t v15 = type metadata accessor for Item.Headline(0);
  uint64_t v16 = *(int *)(v15 + 24);
  uint64_t v17 = (char *)v12 + v16;
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = sub_1000E8B60();
  uint64_t v20 = *(void *)(v19 - 8);
  char v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v60(v18, 1, v19))
  {
    uint64_t v21 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_OWORD *)((char *)v12 + *(int *)(v15 + 28)) = *(_OWORD *)(v13 + *(int *)(v15 + 28));
  uint64_t v58 = a3;
  uint64_t v59 = a2;
  uint64_t v22 = a3[7];
  uint64_t v23 = v5 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(v5 + v22) = *(void *)(a2 + v22);
  uint64_t v25 = (int *)type metadata accessor for TodayContent();
  uint64_t v26 = v25[5];
  uint64_t v27 = (_OWORD *)(v23 + v26);
  uint64_t v28 = (_OWORD *)(v24 + v26);
  uint64_t v29 = (int *)type metadata accessor for Banner();
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_10001B38C(&qword_1001385E0);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    long long v32 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v32;
    v27[2] = v28[2];
    uint64_t v33 = v29[7];
    uint64_t v56 = v5;
    __dst = (char *)v27 + v33;
    uint64_t v34 = (char *)v28 + v33;
    if (v60((char *)v28 + v33, 1, v19))
    {
      uint64_t v35 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v34, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    *(_OWORD *)((char *)v27 + v29[8]) = *(_OWORD *)((char *)v28 + v29[8]);
    *(void *)((char *)v27 + v29[9]) = *(void *)((char *)v28 + v29[9]);
    uint64_t v36 = v29[10];
    uint64_t v37 = (char *)v27 + v36;
    id v38 = (char *)v28 + v36;
    v37[16] = v38[16];
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
    uint64_t v5 = v56;
  }
  *(void *)(v23 + v25[6]) = *(void *)(v24 + v25[6]);
  *(void *)(v23 + v25[7]) = *(void *)(v24 + v25[7]);
  *(unsigned char *)(v23 + v25[8]) = *(unsigned char *)(v24 + v25[8]);
  uint64_t v39 = v25[9];
  uint64_t v40 = (void *)(v23 + v39);
  uint64_t v41 = (const void *)(v24 + v39);
  if (v60((const void *)(v24 + v39), 1, v19))
  {
    uint64_t v42 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v40, v41, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v40, 0, 1, v19);
  }
  *(void *)(v23 + v25[10]) = *(void *)(v24 + v25[10]);
  *(_OWORD *)(v23 + v25[11]) = *(_OWORD *)(v24 + v25[11]);
  *(_OWORD *)(v23 + v25[12]) = *(_OWORD *)(v24 + v25[12]);
  uint64_t v43 = v58[8];
  uint64_t v44 = v5 + v43;
  uint64_t v45 = v59 + v43;
  *(_OWORD *)(v5 + v43) = *(_OWORD *)(v59 + v43);
  uint64_t v46 = (int *)type metadata accessor for LayoutContext();
  uint64_t v47 = v46[6];
  uint64_t v48 = v44 + v47;
  uint64_t v49 = v45 + v47;
  uint64_t v50 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  *(_OWORD *)(v44 + v46[7]) = *(_OWORD *)(v45 + v46[7]);
  uint64_t v51 = v46[8];
  uint64_t v52 = v44 + v51;
  uint64_t v53 = v45 + v51;
  uint64_t v54 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  *(void *)(v44 + v46[9]) = *(void *)(v45 + v46[9]);
  *(void *)(v44 + v46[10]) = *(void *)(v45 + v46[10]);
  *(unsigned char *)(v44 + v46[11]) = *(unsigned char *)(v45 + v46[11]);
  *(unsigned char *)(v44 + v46[12]) = *(unsigned char *)(v45 + v46[12]);
  return v5;
}

uint64_t sub_10005C908(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10003D590(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100028B6C(a1 + v10, &qword_100137A10);
    uint64_t v13 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000E9F90();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v115 = a3;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t)a2 + v15;
  *(void *)(a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  swift_unknownObjectRelease();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_bridgeObjectRelease();
  uint64_t v110 = type metadata accessor for Item.Headline(0);
  uint64_t v18 = *(int *)(v110 + 24);
  uint64_t v19 = (void *)(v16 + v18);
  uint64_t v20 = (const void *)(v17 + v18);
  uint64_t v21 = sub_1000E8B60();
  uint64_t v113 = *(void *)(v21 - 8);
  uint64_t v22 = *(uint64_t (**)(void))(v113 + 48);
  unsigned int v23 = ((uint64_t (*)(void *, uint64_t, uint64_t))v22)(v19, 1, v21);
  uint64_t v114 = v21;
  uint64_t v112 = v22;
  unsigned int v24 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v22)(v20, 1, v21);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v19, 0, 1, v21);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v113 + 8))(v19, v21);
LABEL_10:
    uint64_t v25 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(void *, const void *, uint64_t))(v113 + 40))(v19, v20, v21);
LABEL_11:
  uint64_t v26 = *(int *)(v110 + 28);
  uint64_t v27 = (void **)(v16 + v26);
  uint64_t v28 = (void **)(v17 + v26);
  if (*(void *)(v16 + v26 + 8))
  {
    if (v28[1])
    {
      uint64_t v29 = *v27;
      *uint64_t v27 = *v28;

      uint64_t v30 = v27[1];
      v27[1] = v28[1];

      goto LABEL_16;
    }
    sub_10005C2F0((uint64_t)v27);
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
LABEL_16:
  uint64_t v31 = *(int *)(v115 + 28);
  uint64_t v109 = a2;
  uint64_t v111 = a1;
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t)a2 + v31;
  uint64_t v34 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = *(uint64_t *)((char *)a2 + v31);

  uint64_t v35 = (int *)type metadata accessor for TodayContent();
  uint64_t v36 = v35[5];
  uint64_t v37 = (void *)(v32 + v36);
  id v38 = (void *)(v33 + v36);
  uint64_t v39 = (int *)type metadata accessor for Banner();
  uint64_t v40 = *((void *)v39 - 1);
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t, int *))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      long long v44 = *((_OWORD *)v38 + 1);
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v44;
      *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
      uint64_t v45 = v39[7];
      uint64_t v46 = (char *)v37 + v45;
      uint64_t v47 = (char *)v38 + v45;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v112)((char *)v38 + v45, 1, v114))
      {
        uint64_t v48 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v46, v47, v114);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v46, 0, 1, v114);
      }
      *(_OWORD *)((char *)v37 + v39[8]) = *(_OWORD *)((char *)v38 + v39[8]);
      *(void *)((char *)v37 + v39[9]) = *(void *)((char *)v38 + v39[9]);
      uint64_t v58 = v39[10];
      uint64_t v59 = (char *)v37 + v58;
      char v60 = (char *)v38 + v58;
      v59[16] = v60[16];
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      (*(void (**)(void *, void, uint64_t, int *))(v40 + 56))(v37, 0, 1, v39);
      goto LABEL_29;
    }
LABEL_22:
    uint64_t v49 = sub_10001B38C(&qword_1001385E0);
    memcpy(v37, v38, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_29:
    uint64_t v61 = v111;
    uint64_t v62 = v114;
    goto LABEL_30;
  }
  if (v43)
  {
    sub_100053BD8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for Banner);
    goto LABEL_22;
  }
  uint64_t v50 = v38[1];
  void *v37 = *v38;
  v37[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = v38[3];
  _OWORD v37[2] = v38[2];
  _OWORD v37[3] = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = v38[5];
  void v37[4] = v38[4];
  v37[5] = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = v39[7];
  uint64_t v54 = (char *)v38 + v53;
  uint64_t v107 = (char *)v37 + v53;
  int v108 = v112();
  unsigned int v55 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v54, 1, v114);
  if (v108)
  {
    if (v55)
    {
      size_t v56 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v57 = v107;
LABEL_40:
      memcpy(v57, v54, v56);
      goto LABEL_43;
    }
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v107, v54, v114);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v107, 0, 1, v114);
  }
  else
  {
    if (v55)
    {
      (*(void (**)(char *, uint64_t))(v113 + 8))(v107, v114);
      size_t v56 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v57 = v107;
      goto LABEL_40;
    }
    (*(void (**)(char *, char *, uint64_t))(v113 + 40))(v107, v54, v114);
  }
LABEL_43:
  uint64_t v92 = v39[8];
  uint64_t v93 = (void *)((char *)v37 + v92);
  uint64_t v94 = (void *)((char *)v38 + v92);
  uint64_t v96 = *v94;
  uint64_t v95 = v94[1];
  void *v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = v39[9];
  uint64_t v98 = (void *)((char *)v37 + v97);
  uint64_t v99 = *(void **)((char *)v37 + v97);
  uint64_t v100 = *(void *)((char *)v38 + v97);
  if (v99 != (void *)1)
  {
    if (v100 != 1)
    {
      *uint64_t v98 = v100;

      goto LABEL_48;
    }
    sub_10001DBE4((id *)((char *)v37 + v97));
    uint64_t v100 = *(void *)((char *)v38 + v97);
  }
  *uint64_t v98 = v100;
LABEL_48:
  uint64_t v62 = v114;
  uint64_t v101 = v39[10];
  uint64_t v102 = (char *)v37 + v101;
  uint64_t v103 = (char *)v38 + v101;
  char v104 = v103[16];
  uint64_t v105 = *(void **)v102;
  uint64_t v106 = (void *)*((void *)v102 + 1);
  *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
  v102[16] = v104;
  sub_10001D758(v105, v106);
  uint64_t v61 = v111;
LABEL_30:
  *(void *)(v32 + v35[6]) = *(void *)(v33 + v35[6]);
  swift_bridgeObjectRelease();
  *(void *)(v32 + v35[7]) = *(void *)(v33 + v35[7]);
  swift_unknownObjectRelease();
  *(unsigned char *)(v32 + v35[8]) = *(unsigned char *)(v33 + v35[8]);
  uint64_t v63 = v35[9];
  uint64_t v64 = (void *)(v32 + v63);
  uint64_t v65 = (const void *)(v33 + v63);
  unsigned int v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v112)(v32 + v63, 1, v62);
  unsigned int v67 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v112)(v65, 1, v62);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(void *, const void *, uint64_t))(v113 + 40))(v64, v65, v62);
      goto LABEL_36;
    }
    (*(void (**)(void *, uint64_t))(v113 + 8))(v64, v62);
    goto LABEL_35;
  }
  if (v67)
  {
LABEL_35:
    uint64_t v68 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v64, v65, v62);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v64, 0, 1, v62);
LABEL_36:
  *(void *)(v32 + v35[10]) = *(void *)(v33 + v35[10]);
  swift_release();
  uint64_t v69 = v35[11];
  id v70 = (void *)(v32 + v69);
  uint64_t v71 = (uint64_t *)(v33 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *id v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = v35[12];
  uint64_t v75 = (void *)(v32 + v74);
  char v76 = (uint64_t *)(v33 + v74);
  uint64_t v78 = *v76;
  uint64_t v77 = v76[1];
  void *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease();
  uint64_t v79 = *(int *)(v115 + 32);
  uint64_t v80 = v61 + v79;
  uint64_t v81 = (uint64_t)v109 + v79;
  *(_OWORD *)(v61 + v79) = *(_OWORD *)((char *)v109 + v79);
  unsigned int v82 = (int *)type metadata accessor for LayoutContext();
  uint64_t v83 = v82[6];
  uint64_t v84 = v80 + v83;
  uint64_t v85 = v81 + v83;
  uint64_t v86 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 40))(v84, v85, v86);
  *(_OWORD *)(v80 + v82[7]) = *(_OWORD *)(v81 + v82[7]);
  uint64_t v87 = v82[8];
  uint64_t v88 = v80 + v87;
  uint64_t v89 = v81 + v87;
  uint64_t v90 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  *(void *)(v80 + v82[9]) = *(void *)(v81 + v82[9]);
  *(void *)(v80 + v82[10]) = *(void *)(v81 + v82[10]);
  *(unsigned char *)(v80 + v82[11]) = *(unsigned char *)(v81 + v82[11]);
  *(unsigned char *)(v80 + v82[12]) = *(unsigned char *)(v81 + v82[12]);
  return v61;
}

uint64_t sub_10005D294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005D2A8);
}

uint64_t sub_10005D2A8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_10001B38C(&qword_100137A18);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Item.Headline(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for LayoutContext();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[8];

  return v16(v18, a2, v17);
}

uint64_t sub_10005D468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005D47C);
}

uint64_t sub_10005D47C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
    return result;
  }
  uint64_t v8 = sub_10001B38C(&qword_100137A18);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Item.Headline(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for LayoutContext();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[8];

  return v16(v18, a2, a2, v17);
}

void sub_10005D640()
{
  sub_10003DD54();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Item.Headline(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for TodayContent();
      if (v2 <= 0x3F)
      {
        type metadata accessor for LayoutContext();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10005D78C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D890()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000E95B0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005D8E0()
{
  return sub_1000E95C0();
}

uint64_t sub_10005D910@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E9530();
  *a1 = result;
  return result;
}

uint64_t sub_10005D93C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E9530();
  *a1 = result;
  return result;
}

uint64_t sub_10005D968()
{
  return sub_1000E9540();
}

uint64_t sub_10005D994()
{
  return sub_1000E9540();
}

uint64_t sub_10005D9C0()
{
  return sub_1000E9410();
}

uint64_t sub_10005D9E4()
{
  return sub_1000E9410();
}

uint64_t sub_10005DA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005DA34(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_10005DA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10005DB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005DA34(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

unint64_t sub_10005DB44()
{
  unint64_t result = qword_1001388A0;
  if (!qword_1001388A0)
  {
    sub_10001B3D0(&qword_100138888);
    sub_10005DBE4();
    sub_10001D100(&qword_1001388D8, &qword_100138880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001388A0);
  }
  return result;
}

unint64_t sub_10005DBE4()
{
  unint64_t result = qword_1001388A8;
  if (!qword_1001388A8)
  {
    sub_10001B3D0(&qword_1001388B0);
    sub_10005DC84();
    sub_10001D100(&qword_1001388C8, &qword_1001388D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001388A8);
  }
  return result;
}

unint64_t sub_10005DC84()
{
  unint64_t result = qword_1001388B8;
  if (!qword_1001388B8)
  {
    sub_10001B3D0(&qword_1001388C0);
    sub_10001D100(&qword_100138730, &qword_100138738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001388B8);
  }
  return result;
}

uint64_t sub_10005DD24(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005DD94()
{
  unint64_t result = qword_100138910;
  if (!qword_100138910)
  {
    sub_10001B3D0(&qword_1001388F8);
    sub_10005794C(&qword_100138918, (void (*)(uint64_t))type metadata accessor for SourceView);
    sub_10001D100(&qword_100138730, &qword_100138738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138910);
  }
  return result;
}

unint64_t sub_10005DE64()
{
  unint64_t result = qword_100138920;
  if (!qword_100138920)
  {
    sub_10001B3D0(&qword_100138908);
    sub_10001B3D0(&qword_1001388F8);
    sub_10005DD94();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138920);
  }
  return result;
}

uint64_t sub_10005DF14@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000E95B0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005DF48()
{
  return sub_1000E95C0();
}

uint64_t sub_10005DF78(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(a2);
    a3();
    sub_10001D100(&qword_100138730, &qword_100138738);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005E020()
{
  unint64_t result = qword_100138960;
  if (!qword_100138960)
  {
    sub_10001B3D0(&qword_100138968);
    sub_10001D100(&qword_100138840, &qword_100138830);
    sub_10001D100(&qword_100138848, &qword_100138820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138960);
  }
  return result;
}

void *sub_10005E0E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001B38C(&qword_100138370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E93E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_10001B38C(&qword_100138970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000EA060();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (void *)((char *)a1 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    unsigned int v23 = (void *)((char *)a1 + v19);
    unsigned int v24 = (void *)((char *)a2 + v19);
    uint64_t v25 = v24[1];
    *unsigned int v23 = *v24;
    v23[1] = v25;
    int v108 = a1;
    uint64_t v109 = a3;
    uint64_t v26 = a3[9];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v110 = a2;
    uint64_t v28 = (void *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = type metadata accessor for Item.Headline(0);
    uint64_t v31 = *(int *)(v30 + 24);
    uint64_t v100 = v27;
    __dst = (char *)v27 + v31;
    uint64_t v103 = v30;
    uint64_t v32 = (char *)v28 + v31;
    uint64_t v33 = sub_1000E8B60();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v105 = v35;
    uint64_t v106 = v34;
    uint64_t v107 = v33;
    if (v35(v32, 1, v33))
    {
      uint64_t v36 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    uint64_t v37 = *(int *)(v103 + 28);
    id v38 = (void *)((char *)v100 + v37);
    uint64_t v39 = (char *)v28 + v37;
    uint64_t v40 = (void *)*((void *)v39 + 1);
    if (v40)
    {
      uint64_t v41 = *(void **)v39;
      *id v38 = v41;
      v38[1] = v40;
      id v42 = v41;
      id v43 = v40;
    }
    else
    {
      *(_OWORD *)id v38 = *(_OWORD *)v39;
    }
    uint64_t v44 = v109[10];
    uint64_t v45 = (char *)v108 + v44;
    uint64_t v46 = (char *)v110 + v44;
    uint64_t v47 = *(void **)((char *)v110 + v44);
    *(void *)((char *)v108 + v44) = v47;
    uint64_t v48 = (int *)type metadata accessor for TodayContent();
    uint64_t v49 = v48[5];
    uint64_t v50 = &v45[v49];
    uint64_t v51 = &v46[v49];
    uint64_t v52 = (int *)type metadata accessor for Banner();
    uint64_t v53 = *((void *)v52 - 1);
    uint64_t v54 = *(unsigned int (**)(char *, uint64_t, int *))(v53 + 48);
    id v55 = v47;
    if (v54(v51, 1, v52))
    {
      uint64_t v56 = sub_10001B38C(&qword_1001385E0);
      memcpy(v50, v51, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      uint64_t v57 = *((void *)v51 + 1);
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = v57;
      uint64_t v58 = *((void *)v51 + 3);
      *((void *)v50 + 2) = *((void *)v51 + 2);
      *((void *)v50 + 3) = v58;
      uint64_t v59 = *((void *)v51 + 5);
      *((void *)v50 + 4) = *((void *)v51 + 4);
      *((void *)v50 + 5) = v59;
      uint64_t v60 = v52[7];
      int __dsta = &v50[v60];
      uint64_t v104 = v53;
      uint64_t v61 = &v51[v60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v105(v61, 1, v107))
      {
        uint64_t v62 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dsta, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 16))(__dsta, v61, v107);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(__dsta, 0, 1, v107);
      }
      uint64_t v63 = v52[8];
      uint64_t v64 = &v50[v63];
      uint64_t v65 = &v51[v63];
      uint64_t v66 = *((void *)v65 + 1);
      *(void *)uint64_t v64 = *(void *)v65;
      *((void *)v64 + 1) = v66;
      uint64_t v67 = v52[9];
      uint64_t v68 = *(void **)&v51[v67];
      swift_bridgeObjectRetain();
      if (v68 != (void *)1) {
        id v69 = v68;
      }
      *(void *)&v50[v67] = v68;
      uint64_t v70 = v52[10];
      uint64_t v71 = &v50[v70];
      uint64_t v72 = &v51[v70];
      uint64_t v73 = *(void **)v72;
      uint64_t v74 = (void *)*((void *)v72 + 1);
      char v75 = v72[16];
      sub_10001D614(*(void **)v72, v74);
      *(void *)uint64_t v71 = v73;
      *((void *)v71 + 1) = v74;
      v71[16] = v75;
      (*(void (**)(char *, void, uint64_t, int *))(v104 + 56))(v50, 0, 1, v52);
    }
    *(void *)&v45[v48[6]] = *(void *)&v46[v48[6]];
    *(void *)&v45[v48[7]] = *(void *)&v46[v48[7]];
    v45[v48[8]] = v46[v48[8]];
    uint64_t v76 = v48[9];
    uint64_t v77 = &v45[v76];
    uint64_t v78 = &v46[v76];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v105(v78, 1, v107))
    {
      uint64_t v79 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v77, v78, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v77, 0, 1, v107);
    }
    *(void *)&v45[v48[10]] = *(void *)&v46[v48[10]];
    uint64_t v80 = v48[11];
    uint64_t v81 = &v45[v80];
    unsigned int v82 = &v46[v80];
    uint64_t v83 = *((void *)v82 + 1);
    *(void *)uint64_t v81 = *(void *)v82;
    *((void *)v81 + 1) = v83;
    uint64_t v84 = v48[12];
    uint64_t v85 = &v45[v84];
    uint64_t v86 = &v46[v84];
    uint64_t v87 = *((void *)v86 + 1);
    *(void *)uint64_t v85 = *(void *)v86;
    *((void *)v85 + 1) = v87;
    uint64_t v9 = v108;
    uint64_t v88 = v109[11];
    uint64_t v89 = v109[12];
    uint64_t v90 = (char *)v108 + v88;
    uint64_t v91 = (char *)v110 + v88;
    uint64_t v92 = *(void **)v91;
    *(void *)uint64_t v90 = *(void *)v91;
    *(_OWORD *)(v90 + 17) = *(_OWORD *)(v91 + 17);
    *(_OWORD *)(v90 + 8) = *(_OWORD *)(v91 + 8);
    *(_OWORD *)(v90 + 40) = *(_OWORD *)(v91 + 40);
    *((void *)v90 + 12) = *((void *)v91 + 12);
    uint64_t v93 = (void *)*((void *)v91 + 8);
    *((void *)v90 + 7) = *((void *)v91 + 7);
    *((void *)v90 + 8) = v93;
    long long v94 = *((_OWORD *)v91 + 5);
    uint64_t v95 = (void *)*((void *)v91 + 9);
    *((void *)v90 + 9) = v95;
    *((_OWORD *)v90 + 5) = v94;
    *((unsigned char *)v108 + v89) = *((unsigned char *)v110 + v89);
    *((unsigned char *)v108 + v109[13]) = *((unsigned char *)v110 + v109[13]);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v96 = v92;
    id v97 = v93;
    id v98 = v95;
  }
  return v9;
}

void sub_10005E87C(uint64_t a1, int *a2)
{
  sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E93E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_10001B38C(&qword_100138970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000EA060();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v9 = a1 + a2[9];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Item.Headline(0);
  uint64_t v11 = v9 + *(int *)(v10 + 24);
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v15 = (id *)(v9 + *(int *)(v10 + 28));
  if (v15[1])
  {
  }
  uint64_t v16 = (id *)(a1 + a2[10]);

  uint64_t v17 = type metadata accessor for TodayContent();
  uint64_t v18 = (char *)v16 + *(int *)(v17 + 20);
  uint64_t v19 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v19 - 1) + 48))(v18, 1, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v14;
    uint64_t v21 = &v18[v19[7]];
    uint64_t v26 = v20;
    if (!v20((uint64_t)v21, 1, v12)) {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)&v18[v19[9]];
    if (v22 != (void *)1) {

    }
    sub_10001D758(*(void **)&v18[v19[10]], *(void **)&v18[v19[10] + 8]);
    uint64_t v14 = v26;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  unsigned int v23 = (char *)v16 + *(int *)(v17 + 36);
  if (!v14((uint64_t)v23, 1, v12)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = a1 + a2[11];

  uint64_t v25 = *(void **)(v24 + 72);
}

void *sub_10005EC98(void *a1, void *a2, int *a3)
{
  sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E93E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_10001B38C(&qword_100138970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1000EA060();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)((char *)a1 + v16);
  uint64_t v21 = (void *)((char *)a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v106 = a2;
  uint64_t v107 = a3;
  uint64_t v23 = a3[9];
  uint64_t v105 = a1;
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a2 + v23 + 8);
  *uint64_t v24 = *(void *)((char *)a2 + v23);
  v24[1] = v26;
  uint64_t v27 = type metadata accessor for Item.Headline(0);
  uint64_t v28 = *(int *)(v27 + 24);
  __dst = (char *)v24 + v28;
  uint64_t v100 = v27;
  id v98 = v25;
  uint64_t v29 = &v25[v28];
  uint64_t v30 = sub_1000E8B60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v102 = v32;
  uint64_t v103 = v31;
  uint64_t v104 = v30;
  if (v32(v29, 1, v30))
  {
    uint64_t v33 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  uint64_t v34 = *(int *)(v100 + 28);
  uint64_t v35 = (void *)((char *)v24 + v34);
  uint64_t v36 = &v98[v34];
  uint64_t v37 = (void *)*((void *)v36 + 1);
  if (v37)
  {
    id v38 = *(void **)v36;
    *uint64_t v35 = v38;
    v35[1] = v37;
    id v39 = v38;
    id v40 = v37;
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  }
  uint64_t v41 = v107[10];
  id v42 = (char *)v105 + v41;
  id v43 = (char *)v106 + v41;
  uint64_t v44 = *(void **)((char *)v106 + v41);
  *(void *)((char *)v105 + v41) = v44;
  uint64_t v45 = (int *)type metadata accessor for TodayContent();
  uint64_t v46 = v45[5];
  uint64_t v47 = &v42[v46];
  uint64_t v48 = &v43[v46];
  uint64_t v49 = (int *)type metadata accessor for Banner();
  uint64_t v50 = *((void *)v49 - 1);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, int *))(v50 + 48);
  id v52 = v44;
  if (v51(v48, 1, v49))
  {
    uint64_t v53 = sub_10001B38C(&qword_1001385E0);
    memcpy(v47, v48, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    uint64_t v101 = v50;
    uint64_t v54 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v54;
    uint64_t v55 = *((void *)v48 + 3);
    *((void *)v47 + 2) = *((void *)v48 + 2);
    *((void *)v47 + 3) = v55;
    uint64_t v56 = *((void *)v48 + 5);
    *((void *)v47 + 4) = *((void *)v48 + 4);
    *((void *)v47 + 5) = v56;
    uint64_t v57 = v49[7];
    uint64_t v58 = &v47[v57];
    uint64_t v59 = &v48[v57];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v102(v59, 1, v104))
    {
      uint64_t v60 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v58, v59, v104);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v58, 0, 1, v104);
    }
    uint64_t v61 = v49[8];
    uint64_t v62 = &v47[v61];
    uint64_t v63 = &v48[v61];
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    uint64_t v65 = v49[9];
    uint64_t v66 = *(void **)&v48[v65];
    swift_bridgeObjectRetain();
    if (v66 != (void *)1) {
      id v67 = v66;
    }
    *(void *)&v47[v65] = v66;
    uint64_t v68 = v49[10];
    id v69 = &v47[v68];
    uint64_t v70 = &v48[v68];
    uint64_t v71 = *(void **)v70;
    uint64_t v72 = (void *)*((void *)v70 + 1);
    char v73 = v70[16];
    sub_10001D614(*(void **)v70, v72);
    *(void *)id v69 = v71;
    *((void *)v69 + 1) = v72;
    v69[16] = v73;
    (*(void (**)(char *, void, uint64_t, int *))(v101 + 56))(v47, 0, 1, v49);
  }
  *(void *)&v42[v45[6]] = *(void *)&v43[v45[6]];
  *(void *)&v42[v45[7]] = *(void *)&v43[v45[7]];
  v42[v45[8]] = v43[v45[8]];
  uint64_t v74 = v45[9];
  char v75 = &v42[v74];
  uint64_t v76 = &v43[v74];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v102(v76, 1, v104))
  {
    uint64_t v77 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v75, v76, v104);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v75, 0, 1, v104);
  }
  *(void *)&v42[v45[10]] = *(void *)&v43[v45[10]];
  uint64_t v78 = v45[11];
  uint64_t v79 = &v42[v78];
  uint64_t v80 = &v43[v78];
  uint64_t v81 = *((void *)v80 + 1);
  *(void *)uint64_t v79 = *(void *)v80;
  *((void *)v79 + 1) = v81;
  uint64_t v82 = v45[12];
  uint64_t v83 = &v42[v82];
  uint64_t v84 = &v43[v82];
  uint64_t v85 = *((void *)v84 + 1);
  *(void *)uint64_t v83 = *(void *)v84;
  *((void *)v83 + 1) = v85;
  uint64_t v86 = v107[11];
  uint64_t v87 = v107[12];
  uint64_t v88 = (char *)v105 + v86;
  uint64_t v89 = (char *)v106 + v86;
  uint64_t v90 = *(void **)v89;
  *(void *)uint64_t v88 = *(void *)v89;
  *(_OWORD *)(v88 + 17) = *(_OWORD *)(v89 + 17);
  *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
  *(_OWORD *)(v88 + 40) = *(_OWORD *)(v89 + 40);
  *((void *)v88 + 12) = *((void *)v89 + 12);
  uint64_t v91 = (void *)*((void *)v89 + 8);
  *((void *)v88 + 7) = *((void *)v89 + 7);
  *((void *)v88 + 8) = v91;
  long long v92 = *((_OWORD *)v89 + 5);
  uint64_t v93 = (void *)*((void *)v89 + 9);
  *((void *)v88 + 9) = v93;
  *((_OWORD *)v88 + 5) = v92;
  *((unsigned char *)v105 + v87) = *((unsigned char *)v106 + v87);
  *((unsigned char *)v105 + v107[13]) = *((unsigned char *)v106 + v107[13]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v94 = v90;
  id v95 = v91;
  id v96 = v93;
  return v105;
}

void *sub_10005F3E0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_100138370);
    sub_10001B38C(&qword_100138370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E93E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100028B6C((uint64_t)a1 + v7, &qword_100137A10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100028B6C((uint64_t)a1 + v11, &qword_100138970);
    sub_10001B38C(&qword_100138970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000EA060();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_retain();
  swift_release();
  uint64_t v134 = a2;
  uint64_t v135 = a3;
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (void *)((char *)a2 + v21);
  *(void *)((char *)a1 + v21) = *v23;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for Item.Headline(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = (char *)v23 + v25;
  uint64_t v28 = sub_1000E8B60();
  uint64_t v132 = *(void *)(v28 - 8);
  uint64_t v29 = *(uint64_t (**)(void))(v132 + 48);
  int v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)(v26, 1, v28);
  uint64_t v133 = v28;
  uint64_t v131 = v29;
  int v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)(v27, 1, v28);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v26, 0, 1, v28);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v132 + 8))(v26, v28);
LABEL_17:
    uint64_t v32 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v26, v27, v28);
LABEL_18:
  uint64_t v33 = *(int *)(v24 + 28);
  uint64_t v34 = (void **)&v22[v33];
  uint64_t v35 = (char *)v23 + v33;
  uint64_t v36 = *(void *)&v22[v33 + 8];
  uint64_t v37 = *((void *)v35 + 1);
  if (v36)
  {
    if (v37)
    {
      id v38 = *v34;
      id v39 = *(void **)v35;
      *uint64_t v34 = *(void **)v35;
      id v40 = v39;

      uint64_t v41 = (void *)*((void *)v35 + 1);
      id v42 = v34[1];
      v34[1] = v41;
      id v43 = v41;

      goto LABEL_25;
    }
    sub_10005C2F0((uint64_t)v34);
  }
  else if (v37)
  {
    uint64_t v44 = *(void **)v35;
    *uint64_t v34 = *(void **)v35;
    uint64_t v45 = (void *)*((void *)v35 + 1);
    v34[1] = v45;
    id v46 = v44;
    id v47 = v45;
    goto LABEL_25;
  }
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
LABEL_25:
  uint64_t v48 = v135[10];
  unint64_t v130 = a1;
  uint64_t v49 = (void **)((char *)a1 + v48);
  uint64_t v50 = (char *)v134 + v48;
  uint64_t v51 = *(void **)((char *)v134 + v48);
  id v52 = *v49;
  int *v49 = v51;
  id v53 = v51;

  uint64_t v54 = (int *)type metadata accessor for TodayContent();
  uint64_t v55 = v54[5];
  uint64_t v56 = (char *)v49 + v55;
  uint64_t v136 = v50;
  uint64_t v57 = &v50[v55];
  uint64_t v58 = (int *)type metadata accessor for Banner();
  uint64_t v59 = *((void *)v58 - 1);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, int *))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (v62)
    {
      sub_1000650FC((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_31;
    }
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = *((void *)v57 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v56 + 2) = *((void *)v57 + 2);
    *((void *)v56 + 3) = *((void *)v57 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v56 + 4) = *((void *)v57 + 4);
    *((void *)v56 + 5) = *((void *)v57 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v68 = v58[7];
    id v69 = &v57[v68];
    uint64_t v129 = &v56[v68];
    int v70 = v131();
    int v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v131)(v69, 1, v133);
    if (v70)
    {
      if (v71)
      {
        size_t v72 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        char v73 = v129;
LABEL_42:
        memcpy(v73, v69, v72);
        goto LABEL_45;
      }
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v129, v69, v133);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v133);
    }
    else
    {
      if (v71)
      {
        (*(void (**)(char *, uint64_t))(v132 + 8))(v129, v133);
        size_t v72 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        char v73 = v129;
        goto LABEL_42;
      }
      (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v129, v69, v133);
    }
LABEL_45:
    uint64_t v86 = v58[8];
    uint64_t v87 = &v56[v86];
    uint64_t v88 = &v57[v86];
    *(void *)uint64_t v87 = *(void *)v88;
    *((void *)v87 + 1) = *((void *)v88 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v89 = v58[9];
    uint64_t v90 = &v56[v89];
    uint64_t v91 = *(void **)&v56[v89];
    long long v92 = *(void **)&v57[v89];
    if (v91 == (void *)1)
    {
      if (v92 != (void *)1)
      {
        *(void *)uint64_t v90 = v92;
        id v93 = v92;
LABEL_52:
        uint64_t v95 = v58[10];
        id v96 = &v56[v95];
        id v97 = &v57[v95];
        id v98 = *(void **)v97;
        uint64_t v99 = (void *)*((void *)v97 + 1);
        char v100 = v97[16];
        sub_10001D614(*(void **)v97, v99);
        uint64_t v101 = *(void **)v96;
        uint64_t v102 = (void *)*((void *)v96 + 1);
        *(void *)id v96 = v98;
        *((void *)v96 + 1) = v99;
        v96[16] = v100;
        sub_10001D758(v101, v102);
        goto LABEL_53;
      }
    }
    else
    {
      if (v92 != (void *)1)
      {
        *(void *)uint64_t v90 = v92;
        id v94 = v92;

        goto LABEL_52;
      }
      sub_10001DBE4((id *)&v56[v89]);
      long long v92 = *(void **)&v57[v89];
    }
    *(void *)uint64_t v90 = v92;
    goto LABEL_52;
  }
  if (v62)
  {
LABEL_31:
    uint64_t v67 = sub_10001B38C(&qword_1001385E0);
    memcpy(v56, v57, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_53;
  }
  *(void *)uint64_t v56 = *(void *)v57;
  *((void *)v56 + 1) = *((void *)v57 + 1);
  *((void *)v56 + 2) = *((void *)v57 + 2);
  *((void *)v56 + 3) = *((void *)v57 + 3);
  *((void *)v56 + 4) = *((void *)v57 + 4);
  *((void *)v56 + 5) = *((void *)v57 + 5);
  uint64_t v63 = v58[7];
  uint64_t v64 = &v56[v63];
  uint64_t v65 = &v57[v63];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v65, 1, v133))
  {
    uint64_t v66 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v64, v65, v133);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v64, 0, 1, v133);
  }
  uint64_t v74 = v58[8];
  char v75 = &v56[v74];
  uint64_t v76 = &v57[v74];
  *(void *)char v75 = *(void *)v76;
  *((void *)v75 + 1) = *((void *)v76 + 1);
  uint64_t v77 = v58[9];
  uint64_t v78 = *(void **)&v57[v77];
  swift_bridgeObjectRetain();
  if (v78 != (void *)1) {
    id v79 = v78;
  }
  *(void *)&v56[v77] = v78;
  uint64_t v80 = v58[10];
  uint64_t v81 = &v56[v80];
  uint64_t v82 = &v57[v80];
  uint64_t v83 = *(void **)v82;
  uint64_t v84 = (void *)*((void *)v82 + 1);
  char v85 = v82[16];
  sub_10001D614(*(void **)v82, v84);
  *(void *)uint64_t v81 = v83;
  *((void *)v81 + 1) = v84;
  v81[16] = v85;
  (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(v56, 0, 1, v58);
LABEL_53:
  *(void **)((char *)v49 + v54[6]) = *(void **)&v136[v54[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v49 + v54[7]) = *(void **)&v136[v54[7]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v49 + v54[8]) = v136[v54[8]];
  uint64_t v103 = v54[9];
  uint64_t v104 = (char *)v49 + v103;
  uint64_t v105 = &v136[v103];
  int v106 = ((uint64_t (*)(char *, uint64_t, uint64_t))v131)((char *)v49 + v103, 1, v133);
  int v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v131)(v105, 1, v133);
  if (!v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v104, v105, v133);
      goto LABEL_59;
    }
    (*(void (**)(char *, uint64_t))(v132 + 8))(v104, v133);
    goto LABEL_58;
  }
  if (v107)
  {
LABEL_58:
    uint64_t v108 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v104, v105, v133);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v104, 0, 1, v133);
LABEL_59:
  *(void **)((char *)v49 + v54[10]) = *(void **)&v136[v54[10]];
  swift_retain();
  swift_release();
  uint64_t v109 = v54[11];
  uint64_t v110 = (void **)((char *)v49 + v109);
  uint64_t v111 = &v136[v109];
  *uint64_t v110 = *(void *)v111;
  v110[1] = *((void *)v111 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v112 = v54[12];
  uint64_t v113 = (void **)((char *)v49 + v112);
  uint64_t v114 = &v136[v112];
  *uint64_t v113 = *(void *)v114;
  v113[1] = *((void *)v114 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v115 = v135[11];
  uint64_t v116 = (char *)v130 + v115;
  uint64_t v117 = (char *)v134 + v115;
  uint64_t v118 = *(void **)((char *)v134 + v115);
  uint64_t v119 = *(void **)v116;
  *(void *)uint64_t v116 = v118;
  id v120 = v118;

  *((void *)v116 + 1) = *((void *)v117 + 1);
  long long v121 = *((_OWORD *)v117 + 1);
  v116[32] = v117[32];
  *((_OWORD *)v116 + 1) = v121;
  *((void *)v116 + 5) = *((void *)v117 + 5);
  *((void *)v116 + 6) = *((void *)v117 + 6);
  *((void *)v116 + 7) = *((void *)v117 + 7);
  uint64_t v122 = (void *)*((void *)v117 + 8);
  uint64_t v123 = (void *)*((void *)v116 + 8);
  *((void *)v116 + 8) = v122;
  id v124 = v122;

  uint64_t v125 = (void *)*((void *)v117 + 9);
  uint64_t v126 = (void *)*((void *)v116 + 9);
  *((void *)v116 + 9) = v125;
  id v127 = v125;

  *((void *)v116 + 10) = *((void *)v117 + 10);
  *((void *)v116 + 11) = *((void *)v117 + 11);
  *((void *)v116 + 12) = *((void *)v117 + 12);
  *((unsigned char *)v130 + v135[12]) = *((unsigned char *)v134 + v135[12]);
  *((unsigned char *)v130 + v135[13]) = *((unsigned char *)v134 + v135[13]);
  return v130;
}

char *sub_10005FFD8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E93E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000E9F90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_10001B38C(&qword_100138970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000EA060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)&a2[v19 + 8];
  *(void *)uint64_t v20 = *(void *)&a2[v19];
  *((void *)v20 + 1) = v22;
  uint64_t v23 = type metadata accessor for Item.Headline(0);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v25 = &v20[v24];
  uint64_t v26 = &v21[v24];
  uint64_t v27 = sub_1000E8B60();
  uint64_t v28 = *(void *)(v27 - 8);
  int v62 = *(unsigned int (**)(void))(v28 + 48);
  uint64_t v60 = v28;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v26, 1, v27))
  {
    uint64_t v29 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_OWORD *)&v20[*(int *)(v23 + 28)] = *(_OWORD *)&v21[*(int *)(v23 + 28)];
  int v61 = a3;
  uint64_t v30 = a3[10];
  int v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  uint64_t v33 = (int *)type metadata accessor for TodayContent();
  uint64_t v34 = v33[5];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  uint64_t v37 = (int *)type metadata accessor for Banner();
  uint64_t v38 = *((void *)v37 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_10001B38C(&qword_1001385E0);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    long long v40 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v40;
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    uint64_t v41 = v37[7];
    uint64_t v58 = &v36[v41];
    uint64_t v59 = &v35[v41];
    if (v62())
    {
      uint64_t v42 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v59, v58, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v59, v58, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v59, 0, 1, v27);
    }
    *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
    *(void *)&v35[v37[9]] = *(void *)&v36[v37[9]];
    uint64_t v43 = v37[10];
    uint64_t v44 = &v35[v43];
    uint64_t v45 = &v36[v43];
    v44[16] = v45[16];
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
  }
  *(void *)&v31[v33[6]] = *(void *)&v32[v33[6]];
  *(void *)&v31[v33[7]] = *(void *)&v32[v33[7]];
  v31[v33[8]] = v32[v33[8]];
  uint64_t v46 = v33[9];
  id v47 = &v31[v46];
  uint64_t v48 = &v32[v46];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(&v32[v46], 1, v27))
  {
    uint64_t v49 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v47, v48, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v47, 0, 1, v27);
  }
  *(void *)&v31[v33[10]] = *(void *)&v32[v33[10]];
  *(_OWORD *)&v31[v33[11]] = *(_OWORD *)&v32[v33[11]];
  *(_OWORD *)&v31[v33[12]] = *(_OWORD *)&v32[v33[12]];
  uint64_t v50 = v61[11];
  uint64_t v51 = v61[12];
  id v52 = &a1[v50];
  id v53 = &a2[v50];
  long long v54 = *((_OWORD *)v53 + 1);
  *(_OWORD *)id v52 = *(_OWORD *)v53;
  *((_OWORD *)v52 + 1) = v54;
  *((void *)v52 + 12) = *((void *)v53 + 12);
  long long v55 = *((_OWORD *)v53 + 5);
  *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
  *((_OWORD *)v52 + 5) = v55;
  long long v56 = *((_OWORD *)v53 + 3);
  *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
  *((_OWORD *)v52 + 3) = v56;
  a1[v51] = a2[v51];
  a1[v61[13]] = a2[v61[13]];
  return a1;
}

char *sub_100060604(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_100138370);
    uint64_t v6 = sub_10001B38C(&qword_100138370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E93E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100028B6C((uint64_t)&a1[v8], &qword_100137A10);
    uint64_t v11 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000E9F90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100028B6C((uint64_t)&a1[v13], &qword_100138970);
    uint64_t v16 = sub_10001B38C(&qword_100138970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000EA060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_release();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_release();
  uint64_t v119 = a3;
  id v120 = a2;
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(void *)&a1[v24] = *(void *)v26;
  swift_unknownObjectRelease();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRelease();
  uint64_t v115 = type metadata accessor for Item.Headline(0);
  uint64_t v27 = *(int *)(v115 + 24);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  uint64_t v30 = sub_1000E8B60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void))(v31 + 48);
  unsigned int v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v28, 1, v30);
  uint64_t v118 = v32;
  unsigned int v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v29, 1, v30);
  uint64_t v117 = v30;
  uint64_t v114 = v31;
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
LABEL_16:
    uint64_t v35 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_17:
  uint64_t v36 = *(int *)(v115 + 28);
  uint64_t v37 = (void **)&v25[v36];
  uint64_t v38 = (void **)&v26[v36];
  if (*(void *)&v25[v36 + 8])
  {
    if (v38[1])
    {
      uint64_t v39 = *v37;
      int *v37 = *v38;

      long long v40 = v37[1];
      v37[1] = v38[1];

      goto LABEL_22;
    }
    sub_10005C2F0((uint64_t)v37);
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_22:
  uint64_t v41 = v119[10];
  uint64_t v116 = a1;
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &v120[v41];
  uint64_t v44 = *(void **)&a1[v41];
  *(void *)&a1[v41] = *(void *)&v120[v41];

  uint64_t v45 = (int *)type metadata accessor for TodayContent();
  uint64_t v46 = v45[5];
  id v47 = &v42[v46];
  uint64_t v48 = &v43[v46];
  uint64_t v49 = (int *)type metadata accessor for Banner();
  uint64_t v50 = *((void *)v49 - 1);
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, int *))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      long long v54 = *((_OWORD *)v48 + 1);
      *(_OWORD *)id v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v54;
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
      uint64_t v55 = v49[7];
      long long v56 = &v47[v55];
      uint64_t v57 = &v48[v55];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v118)(&v48[v55], 1, v117))
      {
        uint64_t v58 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v56, v57, v117);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v56, 0, 1, v117);
      }
      *(_OWORD *)&v47[v49[8]] = *(_OWORD *)&v48[v49[8]];
      *(void *)&v47[v49[9]] = *(void *)&v48[v49[9]];
      uint64_t v68 = v49[10];
      id v69 = &v47[v68];
      int v70 = &v48[v68];
      v69[16] = v70[16];
      *(_OWORD *)id v69 = *(_OWORD *)v70;
      (*(void (**)(char *, void, uint64_t, int *))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_35;
    }
LABEL_28:
    uint64_t v59 = sub_10001B38C(&qword_1001385E0);
    memcpy(v47, v48, *(void *)(*(void *)(v59 - 8) + 64));
LABEL_35:
    size_t v72 = v116;
    uint64_t v71 = v117;
    goto LABEL_36;
  }
  if (v53)
  {
    sub_1000650FC((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for Banner);
    goto LABEL_28;
  }
  uint64_t v60 = *((void *)v48 + 1);
  *(void *)id v47 = *(void *)v48;
  *((void *)v47 + 1) = v60;
  swift_bridgeObjectRelease();
  uint64_t v61 = *((void *)v48 + 3);
  *((void *)v47 + 2) = *((void *)v48 + 2);
  *((void *)v47 + 3) = v61;
  swift_bridgeObjectRelease();
  uint64_t v62 = *((void *)v48 + 5);
  *((void *)v47 + 4) = *((void *)v48 + 4);
  *((void *)v47 + 5) = v62;
  swift_bridgeObjectRelease();
  uint64_t v63 = v49[7];
  uint64_t v64 = &v48[v63];
  uint64_t v112 = &v47[v63];
  int v113 = v118();
  unsigned int v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v118)(v64, 1, v117);
  if (v113)
  {
    if (v65)
    {
      size_t v66 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v67 = v112;
LABEL_46:
      memcpy(v67, v64, v66);
      goto LABEL_49;
    }
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v112, v64, v117);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v112, 0, 1, v117);
  }
  else
  {
    if (v65)
    {
      (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v117);
      size_t v66 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v67 = v112;
      goto LABEL_46;
    }
    (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v112, v64, v117);
  }
LABEL_49:
  uint64_t v97 = v49[8];
  id v98 = &v47[v97];
  uint64_t v99 = (uint64_t *)&v48[v97];
  uint64_t v101 = *v99;
  uint64_t v100 = v99[1];
  *(void *)id v98 = v101;
  *((void *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v49[9];
  uint64_t v103 = &v47[v102];
  uint64_t v104 = *(void **)&v47[v102];
  uint64_t v105 = *(void *)&v48[v102];
  if (v104 != (void *)1)
  {
    if (v105 != 1)
    {
      *(void *)uint64_t v103 = v105;

      goto LABEL_54;
    }
    sub_10001DBE4((id *)&v47[v102]);
    uint64_t v105 = *(void *)&v48[v102];
  }
  *(void *)uint64_t v103 = v105;
LABEL_54:
  uint64_t v71 = v117;
  uint64_t v106 = v49[10];
  int v107 = &v47[v106];
  uint64_t v108 = &v48[v106];
  char v109 = v108[16];
  uint64_t v110 = *(void **)v107;
  uint64_t v111 = (void *)*((void *)v107 + 1);
  *(_OWORD *)int v107 = *(_OWORD *)v108;
  v107[16] = v109;
  sub_10001D758(v110, v111);
  size_t v72 = v116;
LABEL_36:
  *(void *)&v42[v45[6]] = *(void *)&v43[v45[6]];
  swift_bridgeObjectRelease();
  *(void *)&v42[v45[7]] = *(void *)&v43[v45[7]];
  swift_unknownObjectRelease();
  v42[v45[8]] = v43[v45[8]];
  uint64_t v73 = v45[9];
  uint64_t v74 = &v42[v73];
  char v75 = &v43[v73];
  unsigned int v76 = ((uint64_t (*)(char *, uint64_t, uint64_t))v118)(&v42[v73], 1, v71);
  unsigned int v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v118)(v75, 1, v71);
  if (!v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v74, v75, v71);
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v114 + 8))(v74, v71);
    goto LABEL_41;
  }
  if (v77)
  {
LABEL_41:
    uint64_t v78 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v74, v75, v71);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v74, 0, 1, v71);
LABEL_42:
  *(void *)&v42[v45[10]] = *(void *)&v43[v45[10]];
  swift_release();
  uint64_t v79 = v45[11];
  uint64_t v80 = &v42[v79];
  uint64_t v81 = &v43[v79];
  uint64_t v83 = *(void *)v81;
  uint64_t v82 = *((void *)v81 + 1);
  *(void *)uint64_t v80 = v83;
  *((void *)v80 + 1) = v82;
  swift_bridgeObjectRelease();
  uint64_t v84 = v45[12];
  char v85 = &v42[v84];
  uint64_t v86 = &v43[v84];
  uint64_t v88 = *(void *)v86;
  uint64_t v87 = *((void *)v86 + 1);
  *(void *)char v85 = v88;
  *((void *)v85 + 1) = v87;
  swift_bridgeObjectRelease();
  uint64_t v89 = v119[11];
  uint64_t v90 = &v72[v89];
  uint64_t v91 = &v120[v89];
  long long v92 = *(void **)&v72[v89];
  *(void *)&v72[v89] = *(void *)&v120[v89];

  *((void *)v90 + 1) = *((void *)v91 + 1);
  *((_OWORD *)v90 + 1) = *((_OWORD *)v91 + 1);
  v90[32] = v91[32];
  *(_OWORD *)(v90 + 40) = *(_OWORD *)(v91 + 40);
  *((void *)v90 + 7) = *((void *)v91 + 7);
  id v93 = (void *)*((void *)v90 + 8);
  *((void *)v90 + 8) = *((void *)v91 + 8);

  id v94 = (void *)*((void *)v90 + 9);
  *((void *)v90 + 9) = *((void *)v91 + 9);

  *((_OWORD *)v90 + 5) = *((_OWORD *)v91 + 5);
  *((void *)v90 + 12) = *((void *)v91 + 12);
  uint64_t v95 = v119[13];
  v72[v119[12]] = v120[v119[12]];
  v72[v95] = v120[v95];
  return v72;
}

uint64_t sub_10006109C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000610B0);
}

uint64_t sub_1000610B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10001B38C(&qword_100138378);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001B38C(&qword_100137A18);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_10001B38C(&qword_100138978);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for Item.Headline(0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_11;
  }
  uint64_t v16 = type metadata accessor for TodayContent();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_11;
  }
  unint64_t v18 = *(void *)(a1 + a3[11]);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

uint64_t sub_1000612B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000612C8);
}

uint64_t sub_1000612C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10001B38C(&qword_100138378);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_10001B38C(&qword_100137A18);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_10001B38C(&qword_100138978);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t v17 = type metadata accessor for Item.Headline(0);
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = *(void *)(v17 - 8);
          uint64_t v15 = a4[9];
        }
        else
        {
          uint64_t result = type metadata accessor for TodayContent();
          if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
          {
            *(void *)(a1 + a4[11]) = (a2 - 1);
            return result;
          }
          uint64_t v10 = result;
          uint64_t v14 = *(void *)(result - 8);
          uint64_t v15 = a4[10];
        }
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for HeadlineCell(uint64_t a1)
{
  return sub_10004A6F4(a1, (uint64_t *)&unk_1001389D8);
}

void sub_1000614E8()
{
  sub_1000616D8(319, (unint64_t *)&unk_1001383E8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  if (v0 <= 0x3F)
  {
    sub_1000616D8(319, (unint64_t *)&qword_100137A88, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_1000616D8(319, (unint64_t *)&unk_1001389E8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Item.Headline(319);
        if (v3 <= 0x3F)
        {
          type metadata accessor for TodayContent();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1000616D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000E92A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void destroy for HeadlineCell.LayoutOptions(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for HeadlineCell.LayoutOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  unint64_t v4 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

uint64_t assignWithCopy for HeadlineCell.LayoutOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  id v8 = *(void **)(a2 + 64);
  uint64_t v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v8;
  id v10 = v8;

  uint64_t v11 = *(void **)(a2 + 72);
  uint64_t v12 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v11;
  id v13 = v11;

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

__n128 initializeWithTake for HeadlineCell.LayoutOptions(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for HeadlineCell.LayoutOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  long long v5 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineCell.LayoutOptions(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineCell.LayoutOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineCell.LayoutOptions()
{
  return &type metadata for HeadlineCell.LayoutOptions;
}

uint64_t sub_100061A00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100061A1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000E9670();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10001B38C(&qword_100138A38);
  __chkstk_darwin(v4);
  long long v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10001B38C(&qword_100138A40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)long long v6 = sub_1000E9720();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v10 = sub_10001B38C(&qword_100138A48);
  sub_100061D20(v1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  sub_1000E9660();
  uint64_t v11 = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  sub_1000E9650(v29);
  uint64_t v12 = *(void **)(v1 + *(int *)(type metadata accessor for HeadlineCell(0) + 36));
  id v13 = [v12 sourceName];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1000EA2B0();
    uint64_t v11 = v16;
  }
  else
  {
    uint64_t v15 = 0;
  }
  v30._countAndFlagsBits = v15;
  v30._object = v11;
  sub_1000E9640(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 8236;
  v31._object = (void *)0xE200000000000000;
  sub_1000E9650(v31);
  id v17 = [v12 title];
  if (v17)
  {
    unint64_t v18 = v17;
    uint64_t v19 = sub_1000EA2B0();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = (void *)0xE000000000000000;
  }
  v32._countAndFlagsBits = v19;
  v32._object = v21;
  sub_1000E9640(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_1000E9650(v33);
  sub_1000E9690();
  uint64_t v22 = sub_1000E9A40();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_10001D100(&qword_100138A50, &qword_100138A38);
  sub_1000E9AC0();
  sub_100026FDC(v22, v24, v26);
  swift_bridgeObjectRelease();
  sub_100028B6C((uint64_t)v6, &qword_100138A38);
  return sub_10002D5DC((uint64_t)v9, a1, &qword_100138A40);
}

uint64_t sub_100061D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100138A58);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100138A60);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v26 - v12;
  type metadata accessor for HeadlineCell(0);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v32 = v33;
  int v31 = v34;
  uint64_t v30 = v35;
  int v29 = v36;
  uint64_t v28 = v37;
  uint64_t v27 = v38;
  *(void *)long long v6 = sub_1000E9610();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = sub_10001B38C(&qword_100138A68);
  sub_100062040(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  sub_1000E9DC0();
  sub_1000E9300();
  sub_10002DA34((uint64_t)v6, (uint64_t)v11, &qword_100138A58);
  uint64_t v15 = &v11[*(int *)(v8 + 44)];
  long long v16 = v40;
  *(_OWORD *)uint64_t v15 = v39;
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v41;
  sub_100028B6C((uint64_t)v6, &qword_100138A58);
  sub_10002D5DC((uint64_t)v11, (uint64_t)v13, &qword_100138A60);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v17 = v42;
  LOBYTE(a1) = v43;
  uint64_t v18 = v44;
  char v19 = v45;
  uint64_t v20 = v46;
  uint64_t v26 = v47;
  sub_10002DA34((uint64_t)v13, (uint64_t)v11, &qword_100138A60);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v32;
  *(unsigned char *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v30;
  *(unsigned char *)(a2 + 40) = v29;
  uint64_t v21 = v27;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v21;
  uint64_t v22 = sub_10001B38C(&qword_100138A70);
  sub_10002DA34((uint64_t)v11, a2 + *(int *)(v22 + 48), &qword_100138A60);
  uint64_t v23 = a2 + *(int *)(v22 + 64);
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = 1;
  *(void *)(v23 + 16) = v17;
  *(unsigned char *)(v23 + 24) = a1;
  *(void *)(v23 + 32) = v18;
  *(unsigned char *)(v23 + 40) = v19;
  uint64_t v24 = v26;
  *(void *)(v23 + 48) = v20;
  *(void *)(v23 + 56) = v24;
  sub_100028B6C((uint64_t)v13, &qword_100138A60);
  return sub_100028B6C((uint64_t)v11, &qword_100138A60);
}

uint64_t sub_100062040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ThumbnailView(0);
  uint64_t v7 = (int *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v36 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v34 - v10);
  uint64_t v12 = sub_10001B38C(&qword_100138A78);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v16 = (uint64_t *)((char *)&v34 - v15);
  *long long v16 = sub_1000E9D80();
  v16[1] = v17;
  uint64_t v18 = sub_10001B38C(&qword_100138A80);
  sub_10006237C(a1, (uint64_t *)((char *)v16 + *(int *)(v18 + 44)));
  char v19 = (int *)type metadata accessor for HeadlineCell(0);
  sub_100065094(a1 + v19[9], (uint64_t)v5, type metadata accessor for Item.Headline);
  uint64_t v20 = a1 + v19[11];
  uint64_t v21 = *(void *)(v20 + 8);
  uint64_t v22 = *(void *)(v20 + 16);
  uint64_t v23 = *(void *)(v20 + 24);
  char v24 = *(unsigned char *)(v20 + 32);
  uint64_t v25 = sub_10009FC54();
  uint64_t v26 = v19[13];
  LOBYTE(v19) = *(unsigned char *)(a1 + v19[12]);
  LOBYTE(a1) = *(unsigned char *)(a1 + v26);
  *uint64_t v11 = swift_getKeyPath();
  sub_10001B38C(&qword_100137A10);
  swift_storeEnumTagMultiPayload();
  sub_100065160((uint64_t)v5, (uint64_t)v11 + v7[7], type metadata accessor for Item.Headline);
  uint64_t v27 = (char *)v11 + v7[8];
  *(void *)uint64_t v27 = v21;
  *((void *)v27 + 1) = v22;
  *((void *)v27 + 2) = v23;
  v27[24] = v24;
  *(uint64_t *)((char *)v11 + v7[9]) = v25;
  *((unsigned char *)v11 + v7[10]) = (_BYTE)v19;
  *((unsigned char *)v11 + v7[11]) = a1;
  uint64_t v28 = v35;
  sub_10002DA34((uint64_t)v16, v35, &qword_100138A78);
  uint64_t v29 = v36;
  sub_100065094((uint64_t)v11, v36, type metadata accessor for ThumbnailView);
  uint64_t v30 = v37;
  sub_10002DA34(v28, v37, &qword_100138A78);
  uint64_t v31 = sub_10001B38C(&qword_100138A88);
  uint64_t v32 = v30 + *(int *)(v31 + 48);
  *(void *)uint64_t v32 = 0;
  *(unsigned char *)(v32 + 8) = 1;
  sub_100065094(v29, v30 + *(int *)(v31 + 64), type metadata accessor for ThumbnailView);
  sub_1000650FC((uint64_t)v11, type metadata accessor for ThumbnailView);
  sub_100028B6C((uint64_t)v16, &qword_100138A78);
  sub_1000650FC(v29, type metadata accessor for ThumbnailView);
  return sub_100028B6C(v28, &qword_100138A78);
}

uint64_t sub_10006237C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100138900);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for HeadlineCell(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  sub_1000643B4(&v37);
  uint64_t v33 = v37;
  sub_100065094(a1, (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadlineCell);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v32 = swift_allocObject();
  sub_100065160((uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v12, type metadata accessor for HeadlineCell);
  uint64_t v13 = sub_1000E9DC0();
  uint64_t v30 = v14;
  uint64_t v31 = v13;
  sub_100062714((uint64_t)v8);
  sub_100065094(a1, (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadlineCell);
  uint64_t v29 = swift_allocObject();
  sub_100065160((uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v12, type metadata accessor for HeadlineCell);
  sub_100065094(a1, (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadlineCell);
  uint64_t v15 = swift_allocObject();
  sub_100065160((uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v12, type metadata accessor for HeadlineCell);
  uint64_t v17 = v34;
  uint64_t v16 = v35;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  char v19 = v36;
  uint64_t v28 = v8;
  v18(v36, v8, v35);
  uint64_t v20 = v32;
  *a2 = v33;
  a2[1] = (uint64_t)sub_100064520;
  a2[2] = 0;
  a2[3] = (uint64_t)sub_1000651C8;
  uint64_t v21 = v31;
  a2[4] = v20;
  a2[5] = v21;
  a2[6] = v30;
  uint64_t v22 = (int *)sub_10001B38C(&qword_100138A90);
  v18((char *)a2 + v22[12], v19, v16);
  uint64_t v23 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)a2 + v22[16]);
  uint64_t v24 = v29;
  *uint64_t v23 = sub_10006568C;
  v23[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v24;
  uint64_t v25 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)a2 + v22[20]);
  *uint64_t v25 = sub_1000656B0;
  v25[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v15;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v26(v28, v16);
  swift_release();
  swift_release();
  v26(v36, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_100062714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v40 = sub_1000EA060();
  uint64_t v42 = *(void *)(v40 - 8);
  uint64_t v2 = __chkstk_darwin(v40);
  char v45 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v44 = &v38[-v4];
  uint64_t v5 = (int *)type metadata accessor for SourceView();
  __chkstk_darwin(v5);
  uint64_t v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = sub_10001B38C(&qword_1001388F8);
  __chkstk_darwin(v43);
  long long v41 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for HeadlineCell(0);
  uint64_t v10 = v1;
  uint64_t v11 = (void **)(v1 + *(int *)(v9 + 36));
  id v12 = sub_1000D9124();
  uint64_t v13 = *v11;
  if (v12)
  {
    [v13 sourceNameImageScale];
    uint64_t v15 = v14;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = v9;
    id v18 = [v13 sourceName];
    if (v18)
    {
      char v19 = v18;
      uint64_t v16 = (void *)sub_1000EA2B0();
      uint64_t v15 = v20;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v15 = 0xE000000000000000;
    }
    uint64_t v9 = v17;
  }
  BOOL v21 = v12 != 0;
  uint64_t v22 = v10 + *(int *)(v9 + 44);
  uint64_t v23 = *(void *)(v22 + 80);
  uint64_t v24 = *(void *)(v22 + 88);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v7[v5[5]] = swift_getKeyPath();
  sub_10001B38C(&qword_100137A10);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v7 = KeyPath;
  v7[8] = 0;
  uint64_t v26 = &v7[v5[6]];
  *(void *)uint64_t v26 = v16;
  *((void *)v26 + 1) = v15;
  BOOL v39 = v21;
  v26[16] = v21;
  uint64_t v27 = &v7[v5[7]];
  *uint64_t v27 = v23;
  v27[1] = v24;
  sub_10003D4BC(v16, v15, v21);
  uint64_t v28 = sub_1000E9C20();
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = v41;
  sub_100065094((uint64_t)v7, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for SourceView);
  uint64_t v31 = (uint64_t *)&v30[*(int *)(v43 + 36)];
  *uint64_t v31 = v29;
  v31[1] = v28;
  sub_1000650FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SourceView);
  uint64_t v32 = v44;
  sub_10007DFBC((uint64_t)v44);
  uint64_t v33 = v42;
  uint64_t v34 = v45;
  uint64_t v35 = v40;
  (*(void (**)(unsigned char *, void, uint64_t))(v42 + 104))(v45, enum case for WidgetFamily.systemSmall(_:), v40);
  sub_100066C90(&qword_100138AF8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000EA420();
  sub_1000EA420();
  uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v33 + 8);
  v36(v34, v35);
  v36(v32, v35);
  sub_10005DD94();
  sub_1000E9A60();
  sub_10003D59C(v16, v15, v39);
  return sub_100028B6C((uint64_t)v30, &qword_1001388F8);
}

uint64_t sub_100062B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10001B38C(&qword_100138AA0);
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v3 = v24;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  type metadata accessor for HeadlineCell(0);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v40 = v48;
  int v39 = v49;
  uint64_t v38 = v50;
  int v37 = v51;
  uint64_t v36 = v52;
  uint64_t v35 = v53;
  sub_1000E9310();
  uint64_t v25 = v8;
  sub_100062FD8(0, 1, (uint64_t)v8);
  sub_1000635DC(&v54);
  uint64_t v34 = v54;
  sub_1000E9DC0();
  sub_1000E9400();
  uint64_t v33 = v54;
  uint64_t v32 = v56;
  uint64_t v31 = v58;
  uint64_t v30 = v60;
  uint64_t v29 = v62;
  uint64_t v28 = v64;
  uint64_t v27 = v66;
  uint64_t v26 = v67;
  char v47 = 1;
  char v46 = v55;
  char v45 = v57;
  char v44 = v59;
  unsigned __int8 v43 = v61;
  unsigned __int8 v42 = v63;
  unsigned __int8 v41 = v65;
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v10 = v6;
  uint64_t v22 = v6;
  v9(v6, v8, v2);
  char v11 = v47;
  LOBYTE(v6) = v46;
  LOBYTE(v3) = v45;
  LOBYTE(v8) = v44;
  int v20 = v43;
  int v21 = v42;
  int v23 = v41;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v40;
  *(unsigned char *)(a1 + 24) = v39;
  *(void *)(a1 + 32) = v38;
  *(unsigned char *)(a1 + 40) = v37;
  uint64_t v12 = v35;
  *(void *)(a1 + 48) = v36;
  *(void *)(a1 + 56) = v12;
  uint64_t v13 = (int *)sub_10001B38C(&qword_100138AE0);
  uint64_t v14 = v10;
  uint64_t v15 = v2;
  v9((char *)(a1 + v13[12]), v14, v2);
  *(void *)(a1 + v13[16]) = v34;
  uint64_t v16 = a1 + v13[20];
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = v11;
  *(void *)(v16 + 16) = v33;
  *(unsigned char *)(v16 + 24) = (_BYTE)v6;
  *(void *)(v16 + 32) = v32;
  *(unsigned char *)(v16 + 40) = v3;
  *(void *)(v16 + 48) = v31;
  *(unsigned char *)(v16 + 56) = (_BYTE)v8;
  *(void *)(v16 + 64) = v30;
  *(unsigned char *)(v16 + 72) = v20;
  *(void *)(v16 + 80) = v29;
  *(unsigned char *)(v16 + 88) = v21;
  *(void *)(v16 + 96) = v28;
  *(unsigned char *)(v16 + 104) = v23;
  uint64_t v17 = v26;
  *(void *)(v16 + 112) = v27;
  *(void *)(v16 + 120) = v17;
  id v18 = *(void (**)(char *, uint64_t))(v24 + 8);
  swift_retain();
  v18(v25, v15);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v18)(v22, v15);
}

uint64_t sub_100062FD8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v70 = a2;
  uint64_t v69 = a1;
  uint64_t v73 = a3;
  uint64_t v4 = sub_1000E8CB0();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  __chkstk_darwin(v4);
  size_t v72 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000E93E0();
  uint64_t v67 = *(void *)(v68 - 8);
  uint64_t v6 = __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v64 - v8;
  uint64_t v10 = type metadata accessor for HeadlineCell(0);
  id v11 = *(id *)(v3 + *(int *)(v10 + 44));
  uint64_t v76 = sub_1000E9930();
  sub_10001B38C(&qword_100137370);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000F2570;
  uint64_t v13 = *(int *)(v10 + 36);
  uint64_t v71 = v3;
  uint64_t v65 = v13;
  uint64_t v14 = *(void **)(v3 + v13);
  id v15 = [v14 identifier];
  uint64_t v16 = sub_1000EA2B0();
  uint64_t v18 = v17;

  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v19 = sub_1000263E0();
  *(void *)(v12 + 64) = v19;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v18;
  uint64_t v77 = 0;
  uint64_t v78 = 0xE000000000000000;
  id v20 = [v14 title];
  if (v20)
  {
    int v21 = v20;
    uint64_t v22 = sub_1000EA2B0();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = (void *)0xE000000000000000;
  }
  v87._countAndFlagsBits = v22;
  v87._object = v24;
  sub_1000EA370(v87);
  swift_bridgeObjectRelease();
  uint64_t v25 = v77;
  uint64_t v26 = v78;
  *(void *)(v12 + 96) = &type metadata for String;
  *(void *)(v12 + 104) = v19;
  *(void *)(v12 + 72) = v25;
  *(void *)(v12 + 80) = v26;
  uint64_t v77 = 0;
  uint64_t v78 = 0xE000000000000000;
  id v27 = [v14 language];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1000EA2B0();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  uint64_t v85 = v29;
  uint64_t v86 = v31;
  sub_10001B38C(&qword_10013A640);
  sub_1000EA910();
  swift_bridgeObjectRelease();
  uint64_t v32 = v77;
  uint64_t v33 = v78;
  *(void *)(v12 + 136) = &type metadata for String;
  *(void *)(v12 + 144) = v19;
  *(void *)(v12 + 112) = v32;
  *(void *)(v12 + 120) = v33;
  sub_100026434();
  uint64_t v34 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  id v35 = [v14 title];
  if (v35)
  {
    uint64_t v36 = v35;
    sub_1000EA2B0();
  }
  swift_retain();
  uint64_t v37 = sub_1000E99C0();
  uint64_t v39 = v38;
  char v41 = v40;
  swift_bridgeObjectRelease();
  swift_release();
  char v42 = v41 & 1;
  sub_1000E9C10();
  uint64_t v43 = sub_1000E9980();
  uint64_t v45 = v44;
  char v47 = v46;
  uint64_t v64 = v48;
  swift_release();
  sub_100026FDC(v37, v39, v42);
  swift_bridgeObjectRelease();
  unsigned __int8 v49 = v9;
  uint64_t v50 = v71;
  sub_10007DA98((uint64_t)v9);
  unsigned __int8 v51 = v66;
  sub_1000E93D0();
  sub_100066C90(&qword_100138480, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v52 = v68;
  char v53 = sub_1000EA7B0();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v67 + 8);
  v54(v51, v52);
  v54(v49, v52);
  if (v53) {
    uint64_t v55 = 3;
  }
  else {
    uint64_t v55 = v69;
  }
  char v56 = v70 & ~v53;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v77 = v43;
  uint64_t v78 = v45;
  char v79 = v47 & 1;
  uint64_t v80 = v64;
  uint64_t v81 = KeyPath;
  uint64_t v82 = v55;
  char v83 = v56 & 1;
  uint64_t v84 = 0x4059000000000000;
  uint64_t v58 = *(void **)(v50 + v65);
  id v59 = [v58 language];
  if (v59)
  {
    uint64_t v60 = v59;
    sub_1000EA2B0();
  }
  unsigned __int8 v61 = v72;
  sub_1000E8CA0();
  id v62 = [v58 language];
  if (v62) {

  }
  sub_10001B38C(&qword_100138AB8);
  sub_100065804();
  sub_1000E9B20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v61, v75);
  sub_100026FDC(v77, v78, v79);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000635DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for HeadlineCell(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(v5 + 36);
  id v9 = [*(id *)(v2 + v8) storyType];
  if (!v9)
  {
    sub_100065094(v2, (uint64_t)v7, type metadata accessor for HeadlineCell);
LABEL_5:
    unsigned int v13 = [*(id *)&v7[v4[9]] isBundlePaid];
    sub_1000650FC((uint64_t)v7, type metadata accessor for HeadlineCell);
    if (!v13) {
      goto LABEL_13;
    }
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  sub_1000EA2B0();
  uint64_t v12 = v11;

  swift_bridgeObjectRelease();
  sub_100065094(v2, (uint64_t)v7, type metadata accessor for HeadlineCell);
  if (!v12) {
    goto LABEL_5;
  }
  sub_1000650FC((uint64_t)v7, type metadata accessor for HeadlineCell);
LABEL_6:
  uint64_t v14 = (uint64_t *)(v2 + v4[8]);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  *(void *)&long long v43 = v15;
  *((void *)&v43 + 1) = v16;
  sub_10001B38C(&qword_100138AB0);
  sub_1000E9CF0();
  double v17 = v54;
  uint64_t v18 = (uint64_t *)(v2 + v4[7]);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  *(void *)&long long v43 = v19;
  *((void *)&v43 + 1) = v20;
  sub_1000E9CF0();
  if (v54 <= v17)
  {
    int v21 = *(void **)(v2 + v8);
    id v22 = [v21 storyType:v54];
    if (v22)
    {
      int v23 = v22;
      uint64_t v24 = sub_1000EA2B0();
      uint64_t v26 = v25;

      id v27 = *(id *)(v2 + v4[11] + 64);
      sub_1000E9930();
      uint64_t v28 = sub_1000E9710();
      sub_100063D48(v24, v26, v2, (uint64_t)&v43);
      swift_bridgeObjectRelease();
      swift_release();
      char v29 = v44;
      uint64_t v31 = *((void *)&v45 + 1);
      uint64_t v30 = v45;
      char v32 = v46;
      uint64_t v33 = v47;
      char v34 = v48;
      uint64_t v35 = v49;
      char v36 = v50;
      long long v37 = v43;
      long long v38 = v51;
      *(void *)&long long v43 = v28;
    }
    else
    {
      if (![v21 isBundlePaid]) {
        goto LABEL_13;
      }
      id v39 = *(id *)(v2 + v4[11] + 64);
      uint64_t v40 = sub_1000E9930();
      uint64_t v41 = sub_1000E9710();
      sub_100064074(0x654EAF80E2BFA3EFLL, 0xAB000000002B7377, v40, v2, (uint64_t)&v43);
      swift_release();
      char v29 = v44;
      uint64_t v31 = *((void *)&v45 + 1);
      uint64_t v30 = v45;
      char v32 = v46;
      uint64_t v33 = v47;
      char v34 = v48;
      uint64_t v35 = v49;
      char v36 = v50;
      long long v37 = v43;
      long long v38 = v51;
      *(void *)&long long v43 = v41;
    }
    *((void *)&v43 + 1) = 0;
    char v44 = 1;
    long long v45 = v37;
    char v46 = v29;
    uint64_t v47 = v30;
    uint64_t v48 = v31;
    LOBYTE(v49) = v32;
    uint64_t v50 = v33;
    LOBYTE(v51) = v34;
    *((void *)&v51 + 1) = v35;
    char v52 = v36;
    long long v53 = v38;
    sub_10001B38C(&qword_100138AE8);
    sub_10001D100(&qword_100138AF0, &qword_100138AE8);
  }
LABEL_13:
  uint64_t result = sub_1000E9D10();
  *a1 = result;
  return result;
}

uint64_t sub_100063974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = sub_1000E9720();
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 0;
  sub_10001B38C(a3);
  return a4(a2, a1);
}

uint64_t sub_1000639E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HeadlineCell(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v35 = sub_10001B38C(&qword_100138AA0);
  uint64_t v7 = *(void *)(v35 - 8);
  uint64_t v8 = __chkstk_darwin(v35);
  char v34 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - v10;
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v33 = v36;
  int v32 = v37;
  uint64_t v31 = v38;
  int v30 = v39;
  uint64_t v28 = v41;
  uint64_t v29 = v40;
  sub_1000E9310();
  sub_100062FD8(2, 0, (uint64_t)v11);
  uint64_t v12 = sub_1000E9BE0();
  sub_100065094(a1, (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadlineCell);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_100065160((uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for HeadlineCell);
  uint64_t v15 = sub_1000E9DC0();
  uint64_t v26 = v16;
  uint64_t v27 = v15;
  double v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v19 = v34;
  uint64_t v18 = v35;
  v17(v34, v11, v35);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v33;
  *(unsigned char *)(a2 + 24) = v32;
  *(void *)(a2 + 32) = v31;
  *(unsigned char *)(a2 + 40) = v30;
  uint64_t v20 = v28;
  *(void *)(a2 + 48) = v29;
  *(void *)(a2 + 56) = v20;
  uint64_t v21 = sub_10001B38C(&qword_100138AA8);
  v17((char *)(a2 + *(int *)(v21 + 48)), v19, v18);
  id v22 = (uint64_t *)(a2 + *(int *)(v21 + 64));
  *id v22 = v12;
  v22[1] = (uint64_t)sub_100064520;
  v22[2] = 0;
  v22[3] = (uint64_t)sub_100065760;
  uint64_t v23 = v27;
  v22[4] = v14;
  void v22[5] = v23;
  void v22[6] = v26;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  swift_retain();
  v24(v11, v18);
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v24)(v19, v18);
}

uint64_t sub_100063D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v7 = sub_1000E9F90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v40 - v12;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  sub_1000295C0();
  uint64_t v44 = sub_1000EA770();
  uint64_t v45 = v14;
  uint64_t v15 = sub_1000E9A50();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = sub_1000E99C0();
  uint64_t v42 = v21;
  uint64_t v43 = v22;
  int v41 = v23;
  sub_100026FDC(v15, v17, v19);
  swift_bridgeObjectRelease();
  type metadata accessor for HeadlineCell(0);
  sub_10007D854((uint64_t)v13);
  sub_1000E9F80();
  sub_100066C90(&qword_100138448, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  LOBYTE(v15) = sub_1000EA240();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v11, v7);
  v24(v13, v7);
  if (v15) {
    uint64_t v25 = sub_1000E9C20();
  }
  else {
    uint64_t v25 = sub_1000D92DC();
  }
  char v26 = v41 & 1;
  uint64_t v44 = v25;
  uint64_t v27 = v42;
  uint64_t v28 = sub_1000E9990();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_100026FDC(v20, v27, v26);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v35 = v44;
  char v36 = v45;
  uint64_t v37 = v46;
  char v38 = v47;
  *(void *)a4 = v28;
  *(void *)(a4 + 8) = v30;
  *(unsigned char *)(a4 + 16) = v34;
  *(void *)(a4 + 24) = v32;
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 1;
  *(void *)(a4 + 48) = v35;
  *(unsigned char *)(a4 + 56) = v36;
  *(void *)(a4 + 64) = v37;
  *(unsigned char *)(a4 + 72) = v38;
  *(_OWORD *)(a4 + 80) = v48;
  sub_1000360E4(v28, v30, v34);
  swift_bridgeObjectRetain();
  sub_100026FDC(v28, v30, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100064074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v44 = a3;
  uint64_t v8 = sub_1000E9F90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  sub_1000295C0();
  uint64_t v45 = sub_1000EA780();
  uint64_t v46 = v15;
  uint64_t v16 = sub_1000E9A50();
  uint64_t v18 = v17;
  LOBYTE(a1) = v19 & 1;
  uint64_t v43 = sub_1000E99C0();
  uint64_t v44 = v20;
  uint64_t v22 = v21;
  int v42 = v23;
  sub_100026FDC(v16, v18, a1);
  swift_bridgeObjectRelease();
  type metadata accessor for HeadlineCell(0);
  sub_10007D854((uint64_t)v14);
  sub_1000E9F80();
  sub_100066C90(&qword_100138448, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  LOBYTE(v16) = sub_1000EA240();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  v24(v14, v8);
  if (v16)
  {
    uint64_t v25 = sub_1000E9C20();
  }
  else
  {
    id v26 = [self systemPinkColor:v41];
    uint64_t v25 = sub_1000E9C40();
  }
  char v27 = v42 & 1;
  uint64_t v45 = v25;
  uint64_t v28 = v43;
  uint64_t v29 = sub_1000E9990();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  sub_100026FDC(v28, v22, v27);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v36 = v45;
  char v37 = v46;
  uint64_t v38 = v47;
  char v39 = v48;
  *(void *)a5 = v29;
  *(void *)(a5 + 8) = v31;
  *(unsigned char *)(a5 + 16) = v35;
  *(void *)(a5 + 24) = v33;
  *(void *)(a5 + 32) = 0;
  *(unsigned char *)(a5 + 40) = 1;
  *(void *)(a5 + 48) = v36;
  *(unsigned char *)(a5 + 56) = v37;
  *(void *)(a5 + 64) = v38;
  *(unsigned char *)(a5 + 72) = v39;
  *(_OWORD *)(a5 + 80) = v49;
  sub_1000360E4(v29, v31, v35);
  swift_bridgeObjectRetain();
  sub_100026FDC(v29, v31, v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000643B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadlineCell(0);
  unsigned int v4 = [*(id *)(v1 + *(int *)(v3 + 36)) isBundlePaid];
  id v5 = *(id *)(v1 + *(int *)(v3 + 44) + 64);
  uint64_t v6 = sub_1000E9930();
  uint64_t v7 = sub_1000E9710();
  if (v4) {
    sub_100064074(0x654EAF80E2BFA3EFLL, 0xAB000000002B7377, v6, v1, (uint64_t)&v18);
  }
  else {
    sub_100063D48(65, 0xE100000000000000, v1, (uint64_t)&v18);
  }
  swift_release();
  char v8 = v19;
  long long v9 = v20;
  char v10 = v21;
  uint64_t v11 = v22;
  char v12 = BYTE8(v22);
  uint64_t v13 = v23;
  char v14 = v24;
  long long v15 = v18;
  long long v16 = v25;
  long long v18 = (unint64_t)v7;
  char v19 = 1;
  long long v20 = v15;
  char v21 = v8;
  long long v22 = v9;
  LOBYTE(v23) = v10;
  uint64_t v24 = v11;
  LOBYTE(v25) = v12;
  *((void *)&v25 + 1) = v13;
  char v26 = v14;
  long long v27 = v16;
  sub_10001B38C(&qword_100138AE8);
  sub_10001D100(&qword_100138AF0, &qword_100138AE8);
  uint64_t result = sub_1000E9D10();
  *a1 = result;
  return result;
}

uint64_t sub_100064524()
{
  return sub_1000E9D00();
}

uint64_t sub_100064594@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000E9BD0();
  uint64_t result = sub_1000E9310();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000645D4()
{
  return sub_1000E9D00();
}

uint64_t type metadata accessor for ThumbnailView(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_100138B58);
}

void sub_100064668()
{
  qword_10014BAC8 = 0;
}

double sub_100064674@<D0>(void *a1@<X8>)
{
  return sub_1000646D4(&qword_100135CC8, (double *)&qword_10014BAC8, a1);
}

void sub_1000646A4()
{
  qword_10014BAD0 = 0;
}

double sub_1000646B0@<D0>(void *a1@<X8>)
{
  return sub_1000646D4(&qword_100135CD0, (double *)&qword_10014BAD0, a1);
}

double sub_1000646D4@<D0>(void *a1@<X2>, double *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  double result = *a2;
  *a3 = *(void *)a2;
  return result;
}

void *sub_10006471C(double *a1, void *(*a2)(double *__return_ptr))
{
  double v3 = *a1;
  double result = a2(&v6);
  double v5 = v6;
  if (v3 > v6) {
    double v5 = v3;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_100064770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10001B38C(&qword_100138BA8);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  double v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E93F0();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  long long v9 = (_OWORD *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000649B0(v28);
  uint64_t v10 = v28[0];
  type metadata accessor for ThumbnailView(0);
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v11 = v28[1];
  char v12 = v29;
  uint64_t v13 = v30;
  int v27 = v31;
  uint64_t v25 = v33;
  uint64_t v26 = v32;
  char v14 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v15 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v16 = sub_1000E96A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  __asm { FMOV            V0.2D, #8.0 }
  *long long v9 = _Q0;
  sub_100065094((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v5[*(int *)(v3 + 44)] = 256;
  uint64_t v22 = sub_10001B38C(&qword_100138BB0);
  sub_10002DA34((uint64_t)v5, a1 + *(int *)(v22 + 36), &qword_100138BA8);
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v27;
  uint64_t v23 = v25;
  *(void *)(a1 + 40) = v26;
  *(void *)(a1 + 48) = v23;
  swift_retain();
  sub_100028B6C((uint64_t)v5, &qword_100138BA8);
  sub_1000650FC((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return swift_release();
}

uint64_t sub_1000649B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for ThumbnailView(0);
  if (sub_1000D8F80())
  {
    long long v9 = sub_1000D94C0();

    if (v9 && (*(unsigned char *)(v2 + v4[6] + 24) & 1) == 0)
    {
      uint64_t v10 = sub_1000E9DC0();
      uint64_t v12 = v11;
      sub_100064FE8(v2, (uint64_t)&v17);
      long long v13 = v17;
      unint64_t v14 = v18;
      char v15 = BYTE8(v18);
      *(void *)&long long v17 = v10;
      *((void *)&v17 + 1) = v12;
      long long v18 = v13;
      unint64_t v19 = v14;
      char v20 = v15;
      goto LABEL_9;
    }
    *(void *)&long long v17 = *(void *)(v2 + v4[7]);
    sub_100066CF4();
    swift_retain();
  }
  else
  {
    if (*(unsigned char *)(v1 + v4[9]) == 1)
    {
      uint64_t v5 = sub_1000E9DC0();
      uint64_t v7 = v6;
      sub_100064B60((uint64_t *)&v18);
      char v8 = *(unsigned char *)(v1 + v4[8]);
      *(void *)&long long v17 = v5;
      *((void *)&v17 + 1) = v7;
      *((void *)&v18 + 1) = 0xD000000000000017;
      unint64_t v19 = 0x80000001000FEBB0;
      char v20 = v8;
LABEL_9:
      sub_10001B38C(&qword_100138BC0);
      sub_10001D100(&qword_100138BC8, &qword_100138BC0);
      goto LABEL_10;
    }
    sub_100064B60((uint64_t *)&v17);
  }
LABEL_10:
  uint64_t result = sub_1000E9D10();
  *a1 = result;
  return result;
}

uint64_t sub_100064B60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10001B38C(&qword_100137F10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E9C60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C(&qword_100137F18);
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10001B38C(&qword_100137F20);
  __chkstk_darwin(v31);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10001B38C(&qword_100138470);
  uint64_t v15 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v18 = (char *)&v28 - v17;
  uint64_t v30 = type metadata accessor for ThumbnailView(0);
  unint64_t v19 = sub_1000D94C0();
  if (v19)
  {
    id v29 = v19;
    sub_1000E9C50();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v6);
    sub_1000E9CC0();
    uint64_t v28 = v1;
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1000E9FB0();
    uint64_t v20 = sub_1000E9FC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 0, 1, v20);
    sub_1000E9CB0();
    swift_release();
    sub_100028B6C((uint64_t)v5, &qword_100137F10);
    uint64_t v22 = v32;
    uint64_t v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v14, v12, v33);
    uint64_t v23 = &v14[*(int *)(v31 + 36)];
    *(void *)uint64_t v23 = 0;
    *((_WORD *)v23 + 4) = 257;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    sub_1000E9DC0();
    sub_1000E9300();
    sub_10002DA34((uint64_t)v14, (uint64_t)v18, &qword_100137F20);
    uint64_t v24 = &v18[*(int *)(v35 + 36)];
    long long v25 = v37;
    *(_OWORD *)uint64_t v24 = v36;
    *((_OWORD *)v24 + 1) = v25;
    *((_OWORD *)v24 + 2) = v38;
    sub_100028B6C((uint64_t)v14, &qword_100137F20);
    sub_10002DA34((uint64_t)v18, v34, &qword_100138470);
    sub_10004F7B4();
    uint64_t v26 = sub_1000E9D10();

    uint64_t result = sub_100028B6C((uint64_t)v18, &qword_100138470);
  }
  else
  {
    uint64_t result = sub_1000E9D10();
    uint64_t v26 = result;
  }
  *a1 = v26;
  return result;
}

void sub_100064FE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100064B60(&v11);
  uint64_t v4 = v11;
  uint64_t v5 = type metadata accessor for ThumbnailView(0);
  id v6 = [*(id *)(a1 + *(int *)(v5 + 20)) identifier];
  uint64_t v7 = sub_1000EA2B0();
  uint64_t v9 = v8;

  char v10 = *(unsigned char *)(a1 + *(int *)(v5 + 32));
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = v10;
}

uint64_t sub_100065094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000650FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100065160(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000651C8(uint64_t a1)
{
  return sub_100065778(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100064524);
}

uint64_t sub_1000651E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for HeadlineCell(0);
  uint64_t v26 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v24 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v25 = (v26 + 16) & ~v26;
  uint64_t v3 = v0 + v25;
  sub_10001B38C(&qword_100138370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E93E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v2[5];
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v2[6];
  sub_10001B38C(&qword_100138970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000EA060();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v9 = v3 + v2[9];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Item.Headline(0);
  uint64_t v11 = v9 + *(int *)(v10 + 24);
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  int v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v27(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  unint64_t v14 = (id *)(v9 + *(int *)(v10 + 28));
  if (v14[1])
  {
  }
  uint64_t v15 = (id *)(v3 + v2[10]);

  uint64_t v16 = type metadata accessor for TodayContent();
  uint64_t v17 = (char *)v15 + *(int *)(v16 + 20);
  long long v18 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v18 - 1) + 48))(v17, 1, v18))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v19 = &v17[v18[7]];
    if (!v27((uint64_t)v19, 1, v12)) {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void **)&v17[v18[9]];
    if (v20 != (void *)1) {

    }
    sub_10001D758(*(void **)&v17[v18[10]], *(void **)&v17[v18[10] + 8]);
    uint64_t v1 = v0;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v21 = (char *)v15 + *(int *)(v16 + 36);
  if (!v27((uint64_t)v21, 1, v12)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = (id *)(v3 + v2[11]);

  return _swift_deallocObject(v1, v25 + v24, v26 | 7);
}

uint64_t sub_10006568C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000656D0(a1, &qword_100138AD8, (uint64_t (*)(uint64_t, uint64_t))sub_100062B38, a2);
}

uint64_t sub_1000656B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000656D0(a1, &qword_100138A98, (uint64_t (*)(uint64_t, uint64_t))sub_1000639E0, a2);
}

uint64_t sub_1000656D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(type metadata accessor for HeadlineCell(0) - 8);
  return sub_100063974(a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

uint64_t sub_100065760(uint64_t a1)
{
  return sub_100065778(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000645D4);
}

uint64_t sub_100065778(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for HeadlineCell(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_100065804()
{
  unint64_t result = qword_100138AC0;
  if (!qword_100138AC0)
  {
    sub_10001B3D0(&qword_100138AB8);
    sub_10003E488();
    sub_10001D100(&qword_100138AC8, &qword_100138AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138AC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for StoryTypeAvailableHeightPreferenceKey()
{
  return &type metadata for StoryTypeAvailableHeightPreferenceKey;
}

ValueMetadata *type metadata accessor for StoryTypeRequiredHeightPreferenceKey()
{
  return &type metadata for StoryTypeRequiredHeightPreferenceKey;
}

void *sub_1000658D0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    long long v36 = a3;
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(void *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = type metadata accessor for Item.Headline(0);
    uint64_t v14 = *(int *)(v13 + 24);
    __dst = (char *)v10 + v14;
    uint64_t v35 = v13;
    uint64_t v33 = v11;
    uint64_t v15 = &v11[v14];
    uint64_t v16 = sub_1000E8B60();
    uint64_t v17 = *(void *)(v16 - 8);
    long long v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v20 = *(int *)(v35 + 28);
    uint64_t v21 = (void *)((char *)v10 + v20);
    uint64_t v22 = &v33[v20];
    uint64_t v23 = (void *)*((void *)v22 + 1);
    if (v23)
    {
      uint64_t v24 = *(void **)v22;
      void *v21 = v24;
      v21[1] = v23;
      id v25 = v24;
      id v26 = v23;
    }
    else
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    }
    uint64_t v27 = v36[6];
    uint64_t v28 = v36[7];
    id v29 = (_OWORD *)((char *)a1 + v27);
    uint64_t v30 = (_OWORD *)((char *)a2 + v27);
    *id v29 = *v30;
    *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v30 + 9);
    *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
    uint64_t v31 = v36[9];
    *((unsigned char *)a1 + v36[8]) = *((unsigned char *)a2 + v36[8]);
    *((unsigned char *)a1 + v31) = *((unsigned char *)a2 + v31);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100065B84(uint64_t a1, uint64_t a2)
{
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E9F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for Item.Headline(0);
  uint64_t v7 = v5 + *(int *)(v6 + 24);
  uint64_t v8 = sub_1000E8B60();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = (id *)(v5 + *(int *)(v6 + 28));
  if (v10[1])
  {
  }

  return swift_release();
}

void *sub_100065CFC(void *a1, void *a2, int *a3)
{
  sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E9F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  uint64_t v11 = type metadata accessor for Item.Headline(0);
  uint64_t v12 = *(int *)(v11 + 24);
  __dst = (char *)v8 + v12;
  uint64_t v32 = v11;
  uint64_t v13 = &v9[v12];
  uint64_t v14 = sub_1000E8B60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v18 = *(int *)(v32 + 28);
  uint64_t v19 = (void *)((char *)v8 + v18);
  uint64_t v20 = &v9[v18];
  uint64_t v21 = (void *)*((void *)v20 + 1);
  if (v21)
  {
    uint64_t v22 = *(void **)v20;
    *uint64_t v19 = v22;
    v19[1] = v21;
    id v23 = v22;
    id v24 = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  uint64_t v25 = v33[6];
  uint64_t v26 = v33[7];
  uint64_t v27 = (_OWORD *)((char *)a1 + v25);
  uint64_t v28 = (_OWORD *)((char *)v34 + v25);
  *uint64_t v27 = *v28;
  *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v28 + 9);
  *(void *)((char *)a1 + v26) = *(void *)((char *)v34 + v26);
  uint64_t v29 = v33[9];
  *((unsigned char *)a1 + v33[8]) = *((unsigned char *)v34 + v33[8]);
  *((unsigned char *)a1 + v29) = *((unsigned char *)v34 + v29);
  swift_retain();
  return a1;
}

void *sub_100065F64(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_100137A10);
    sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E9F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = type metadata accessor for Item.Headline(0);
  uint64_t v10 = *(int *)(v39 + 24);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_1000E8B60();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_11:
    uint64_t v18 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_12:
  uint64_t v19 = *(int *)(v39 + 28);
  uint64_t v20 = &v8[v19];
  uint64_t v21 = &v9[v19];
  uint64_t v22 = *(void *)&v8[v19 + 8];
  uint64_t v23 = *(void *)&v9[v19 + 8];
  if (!v22)
  {
    if (v23)
    {
      uint64_t v30 = *(void **)v21;
      *(void *)uint64_t v20 = *(void *)v21;
      uint64_t v31 = (void *)*((void *)v21 + 1);
      *((void *)v20 + 1) = v31;
      id v32 = v30;
      id v33 = v31;
      goto LABEL_19;
    }
LABEL_18:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_19;
  }
  if (!v23)
  {
    sub_10005C2F0((uint64_t)v20);
    goto LABEL_18;
  }
  id v24 = *(void **)v20;
  uint64_t v25 = *(void **)v21;
  *(void *)uint64_t v20 = *(void *)v21;
  id v26 = v25;

  uint64_t v27 = (void *)*((void *)v21 + 1);
  uint64_t v28 = (void *)*((void *)v20 + 1);
  *((void *)v20 + 1) = v27;
  id v29 = v27;

LABEL_19:
  uint64_t v34 = v40[6];
  uint64_t v35 = (char *)a1 + v34;
  long long v36 = (char *)v41 + v34;
  *(void *)uint64_t v35 = *(void *)v36;
  long long v37 = *(_OWORD *)(v36 + 8);
  v35[24] = v36[24];
  *(_OWORD *)(v35 + 8) = v37;
  *(void *)((char *)a1 + v40[7]) = *(void *)((char *)v41 + v40[7]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + v40[8]) = *((unsigned char *)v41 + v40[8]);
  *((unsigned char *)a1 + v40[9]) = *((unsigned char *)v41 + v40[9]);
  return a1;
}

char *sub_1000662B4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001B38C(&qword_100137A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E9F90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *((void *)v9 + 1) = v11;
  uint64_t v12 = type metadata accessor for Item.Headline(0);
  uint64_t v13 = *(int *)(v12 + 24);
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_1000E8B60();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)&v9[*(int *)(v12 + 28)] = *(_OWORD *)&v10[*(int *)(v12 + 28)];
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 9) = *(_OWORD *)(v22 + 9);
  *(void *)&a1[v20] = *(void *)&a2[v20];
  uint64_t v23 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v23] = a2[v23];
  return a1;
}

char *sub_1000664D0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_100137A10);
    uint64_t v6 = sub_10001B38C(&qword_100137A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E9F90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  id v33 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v31 = a2;
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_unknownObjectRelease();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for Item.Headline(0);
  uint64_t v11 = *(int *)(v32 + 24);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = &v10[v11];
  uint64_t v14 = sub_1000E8B60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_10:
    uint64_t v19 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_11:
  uint64_t v20 = *(int *)(v32 + 28);
  uint64_t v21 = (uint64_t)&v9[v20];
  uint64_t v22 = &v10[v20];
  if (!*(void *)&v9[v20 + 8])
  {
LABEL_15:
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    goto LABEL_16;
  }
  if (!*((void *)v22 + 1))
  {
    sub_10005C2F0(v21);
    goto LABEL_15;
  }
  uint64_t v23 = *(void **)v21;
  *(void *)uint64_t v21 = *(void *)v22;

  id v24 = *(void **)(v21 + 8);
  *(void *)(v21 + 8) = *((void *)v22 + 1);

LABEL_16:
  uint64_t v25 = v33[6];
  uint64_t v26 = v33[7];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &v31[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  *(_OWORD *)(v27 + 8) = *(_OWORD *)(v28 + 8);
  v27[24] = v28[24];
  *(void *)&a1[v26] = *(void *)&v31[v26];
  swift_release();
  uint64_t v29 = v33[9];
  a1[v33[8]] = v31[v33[8]];
  a1[v29] = v31[v29];
  return a1;
}

uint64_t sub_1000667EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100066800);
}

uint64_t sub_100066800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001B38C(&qword_100137A18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Item.Headline(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100066918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006692C);
}

uint64_t sub_10006692C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10001B38C(&qword_100137A18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Item.Headline(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100066A40()
{
  sub_1000616D8(319, (unint64_t *)&qword_100137A88, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Item.Headline(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

__n128 initializeWithCopy for ThumbnailView.LayoutOptions(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ThumbnailView.LayoutOptions(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ThumbnailView.LayoutOptions(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailView.LayoutOptions()
{
  return &type metadata for ThumbnailView.LayoutOptions;
}

unint64_t sub_100066BC0()
{
  unint64_t result = qword_100138BA0;
  if (!qword_100138BA0)
  {
    sub_10001B3D0(&qword_100138A40);
    sub_10001D100(&qword_100138A50, &qword_100138A38);
    sub_100066C90((unint64_t *)&qword_100137ED8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138BA0);
  }
  return result;
}

uint64_t sub_100066C90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100066CD8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100066CF4()
{
  unint64_t result = qword_100138BB8;
  if (!qword_100138BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138BB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MediaIndicatorDisplayStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MediaIndicatorDisplayStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_100066D98(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100066DB4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaIndicatorDisplayStyle()
{
  return &type metadata for MediaIndicatorDisplayStyle;
}

unint64_t sub_100066DE8()
{
  unint64_t result = qword_100138BD0;
  if (!qword_100138BD0)
  {
    sub_10001B3D0(&qword_100138BB0);
    sub_100066E88();
    sub_10001D100(qword_100138BE8, &qword_100138BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138BD0);
  }
  return result;
}

unint64_t sub_100066E88()
{
  unint64_t result = qword_100138BD8;
  if (!qword_100138BD8)
  {
    sub_10001B3D0(&qword_100138BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138BD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaIndicatorDisplayStyle.BadgeLayoutOptions()
{
  return &type metadata for MediaIndicatorDisplayStyle.BadgeLayoutOptions;
}

uint64_t sub_100066F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100066F18()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100066F54(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100066FA0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100067008(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t sub_100067058(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000670A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for NewsWidgetConfiguration()
{
  return sub_1000674DC();
}

uint64_t sub_1000670F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006713C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000E8E80();
  __chkstk_darwin(v12 - 8);
  type metadata accessor for NewsTimelineProvider();
  sub_1000E9000();
  swift_bridgeObjectRetain();
  sub_1000E8E70();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a5;
  v13[3] = a6;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a1;
  v13[7] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v14 = sub_1000E8FF0();
  uint64_t WitnessTable = swift_getWitnessTable();
  TodayIntentResponseCode.rawValue.getter(v14, WitnessTable);
  type metadata accessor for ContentView();
  type metadata accessor for LazyIntentTimelineProvider();
  sub_100067484();
  swift_getWitnessTable();
  return sub_1000EA090();
}

uint64_t sub_10006732C@<X0>(void (*a1)(void *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  a1(v11);
  sub_100020A28(v11, v11[3]);
  sub_10001B38C(&qword_100137CB0);
  uint64_t result = sub_1000E8EC0();
  if (v10)
  {
    type metadata accessor for NewsTimelineProvider();
    sub_10002D970((uint64_t)v11, (uint64_t)v8);
    swift_bridgeObjectRetain();
    *a4 = sub_1000AC898(a2, a3, (uint64_t)v9, v8);
    return sub_100020AC0((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100067414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003542C(a1, a2);
}

uint64_t sub_10006741C(uint64_t a1)
{
  return sub_10006713C(*v1, v1[1], v1[2], v1[3], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_100067434()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100067474@<X0>(uint64_t *a1@<X8>)
{
  return sub_10006732C(*(void (**)(void *__return_ptr))(v1 + 32), *(void *)(v1 + 48), *(void *)(v1 + 56), a1);
}

unint64_t sub_100067484()
{
  unint64_t result = qword_100138C70;
  if (!qword_100138C70)
  {
    type metadata accessor for ContentView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138C70);
  }
  return result;
}

uint64_t sub_1000674DC()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10006750C()
{
  type metadata accessor for ContentView();
  sub_100067484();
  sub_1000EA0A0();

  return swift_getWitnessTable();
}

unint64_t sub_10006757C()
{
  unint64_t result = qword_100138C88;
  if (!qword_100138C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138C88);
  }
  return result;
}

uint64_t sub_1000675D0()
{
  return sub_10001D100(&qword_100138C90, &qword_100138C98);
}

uint64_t sub_10006760C()
{
  return sub_1000E8A50();
}

uint64_t sub_100067644()
{
  uint64_t v0 = sub_10001B38C(&qword_100138D48);
  sub_10001C500(v0, qword_10014BAD8);
  sub_10001C4C8(v0, (uint64_t)qword_10014BAD8);
  sub_100068B40();
  return sub_1000E88B0();
}

uint64_t sub_1000676C0()
{
  uint64_t v0 = sub_10001B38C(&qword_100138CD8);
  sub_10001C500(v0, qword_10014BAF0);
  sub_10001C4C8(v0, (uint64_t)qword_10014BAF0);
  sub_10006909C();
  return sub_1000E8840();
}

uint64_t sub_10006773C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100067880, 0, 0);
}

uint64_t sub_100067880()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100138C98);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_100138D68, &qword_100138D70);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100067A24()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014BB08);
  sub_10001C4C8(v10, (uint64_t)qword_10014BB08);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_100067CFC()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_100067F38()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014BB20);
  sub_10001C4C8(v0, (uint64_t)qword_10014BB20);
  return sub_1000E8A50();
}

uint64_t sub_100067F9C()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014BB38);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014BB38);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100068054()
{
  uint64_t result = swift_getKeyPath();
  qword_10014BB50 = result;
  return result;
}

uint64_t sub_10006807C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  void v3[6] = a1;
  return _swift_task_switch(sub_1000680A0, 0, 0);
}

uint64_t sub_1000680A0()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135D00 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BB50;
  *(void *)(v0 + 80) = qword_10014BB50;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_100138D68, &qword_100138D70);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_1000681FC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_1000681FC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_100068350;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100068350()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014BB50;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10006842C()
{
  if (qword_100135D00 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10006848C()
{
  unint64_t result = qword_100138CA0;
  if (!qword_100138CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CA0);
  }
  return result;
}

unint64_t sub_1000684E4()
{
  unint64_t result = qword_100138CA8;
  if (!qword_100138CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CA8);
  }
  return result;
}

uint64_t sub_100068538()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10006856C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000685BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135CF0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014BB20, a1);
}

uint64_t sub_1000685F4@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135CF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BB38);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_100068670(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1000680A0, 0, 0);
}

uint64_t sub_100068724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100069780();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10006874C()
{
  return 0xD000000000000023;
}

unint64_t sub_10006876C()
{
  unint64_t result = qword_100138CB8;
  if (!qword_100138CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CB8);
  }
  return result;
}

unint64_t sub_1000687C4()
{
  unint64_t result = qword_100138CC0;
  if (!qword_100138CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CC0);
  }
  return result;
}

unint64_t sub_10006881C()
{
  unint64_t result = qword_100138CC8;
  if (!qword_100138CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CC8);
  }
  return result;
}

uint64_t sub_100068870()
{
  return sub_10001D100(&qword_100138CD0, &qword_100138CD8);
}

uint64_t sub_1000688AC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000688CC, 0, 0);
}

uint64_t sub_1000688CC()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000689A8(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 17) = *a2;
  return _swift_task_switch(sub_1000689CC, 0, 0);
}

uint64_t sub_1000689CC()
{
  id v1 = (id)NewsCoreUserDefaults();
  unsigned int v2 = [v1 BOOLForKey:FCNewsURLResolutionSubscriptionStatusSharedPreferenceKey];

  if (v2)
  {
    if (qword_100135C08 != -1) {
      swift_once();
    }
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 17);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_1000690F0();
    swift_allocError();
    unsigned char *v4 = 1;
    swift_willThrow();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t sub_100068B10@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135CE0, &qword_100138CD8, (uint64_t)qword_10014BAF0, a1);
}

unint64_t sub_100068B40()
{
  unint64_t result = qword_100138CE0;
  if (!qword_100138CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CE0);
  }
  return result;
}

uint64_t sub_100068B94()
{
  return sub_10001D100(&qword_100138CE8, &qword_100138CD8);
}

uint64_t sub_100068BD0()
{
  uint64_t v0 = qword_100138C78;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100068C0C()
{
  unint64_t result = qword_100138CF0;
  if (!qword_100138CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CF0);
  }
  return result;
}

uint64_t sub_100068C60@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135CD8, &qword_100138D48, (uint64_t)qword_10014BAD8, a1);
}

unint64_t sub_100068C90()
{
  unint64_t result = qword_100138CF8;
  if (!qword_100138CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138CF8);
  }
  return result;
}

unint64_t sub_100068CE8()
{
  unint64_t result = qword_100138D00;
  if (!qword_100138D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D00);
  }
  return result;
}

unint64_t sub_100068D40()
{
  unint64_t result = qword_100138D08;
  if (!qword_100138D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D08);
  }
  return result;
}

unint64_t sub_100068D98()
{
  unint64_t result = qword_100138D10;
  if (!qword_100138D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D10);
  }
  return result;
}

uint64_t sub_100068DEC@<X0>(uint64_t *a1@<X8>)
{
  sub_10006909C();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100068E2C()
{
  sub_100069048();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_100068EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135CE8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014BB08, a1);
}

uint64_t sub_100068EF8()
{
  return sub_10001D100(&qword_100138D20, &qword_100138D28);
}

uint64_t sub_100068F34(uint64_t a1)
{
  unint64_t v2 = sub_100068B40();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100068F84()
{
  unint64_t result = qword_100138D30;
  if (!qword_100138D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D30);
  }
  return result;
}

uint64_t sub_100068FDC(uint64_t a1)
{
  unint64_t v2 = sub_100068D98();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AutoDownloadEntity()
{
  return &type metadata for AutoDownloadEntity;
}

ValueMetadata *type metadata accessor for AutoDownloadEntity.UpdateIntent_value()
{
  return &type metadata for AutoDownloadEntity.UpdateIntent_value;
}

unint64_t sub_100069048()
{
  unint64_t result = qword_100138D38;
  if (!qword_100138D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D38);
  }
  return result;
}

unint64_t sub_10006909C()
{
  unint64_t result = qword_100138D40;
  if (!qword_100138D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D40);
  }
  return result;
}

unint64_t sub_1000690F0()
{
  unint64_t result = qword_100138D78;
  if (!qword_100138D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138D78);
  }
  return result;
}

uint64_t sub_100069144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136618);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_10006909C();
  uint64_t v11 = sub_10001B3D0(&qword_100136628);
  uint64_t v12 = sub_1000E9740();
  uint64_t v13 = sub_10001D100(&qword_100136630, &qword_100136628);
  unint64_t v14 = sub_1000397BC();
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  unint64_t v28 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v15 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  uint64_t v25 = v1;
  uint64_t v26 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  uint64_t v25 = v4;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v22;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v17);
}

uint64_t sub_100069584()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_1000397BC();
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100069780()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_100138D80);
  sub_1000E8A50();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  int v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100068B40();
  uint64_t v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

uint64_t sub_100069BC0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

unsigned char *storeEnumTagSinglePayload for AutoDownloadEntity.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100069C98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadEntity.Error()
{
  return &type metadata for AutoDownloadEntity.Error;
}

ValueMetadata *type metadata accessor for AutoDownloadToggleControl()
{
  return &type metadata for AutoDownloadToggleControl;
}

uint64_t sub_100069CE0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100069D00()
{
  unint64_t result = qword_100138D90[0];
  if (!qword_100138D90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100138D90);
  }
  return result;
}

uint64_t type metadata accessor for LazyIntentTimelineProvider()
{
  return sub_1000674DC();
}

uint64_t sub_100069D6C(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 24), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for IntentTimelineProvider, &associated conformance descriptor for IntentTimelineProvider.IntentTimelineProvider.Entry: TimelineEntry);
}

uint64_t sub_100069D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8FE0();
  sub_1000EA0D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a3);
}

uint64_t sub_100069E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8FE0();
  a8(a1, a2, a3, a4, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, a6);
}

uint64_t sub_100069F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8FE0();
  uint64_t v6 = sub_1000EA0E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  return v6;
}

uint64_t sub_10006A068(uint64_t a1)
{
  return sub_100069F88(*v1, *(void *)(a1 + 16));
}

uint64_t sub_10006A078(uint64_t a1, uint64_t a2)
{
  return sub_100069D88(a1, *v2, *(void *)(a2 + 16));
}

uint64_t sub_10006A088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100069E78(a1, a2, a3, a4, *v5, *(void *)(a5 + 16), *(void *)(a5 + 24), (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of IntentTimelineProvider.getSnapshot(for:in:completion:));
}

uint64_t sub_10006A0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100069E78(a1, a2, a3, a4, *v5, *(void *)(a5 + 16), *(void *)(a5 + 24), (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of IntentTimelineProvider.getTimeline(for:in:completion:));
}

uint64_t sub_10006A0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001A400;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10006A1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100051C90;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

unint64_t sub_10006A264()
{
  unint64_t result = qword_100138E38;
  if (!qword_100138E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E38);
  }
  return result;
}

uint64_t sub_10006A2B8()
{
  return sub_10001D100(&qword_100138E40, &qword_100138E48);
}

uint64_t sub_10006A2F4()
{
  uint64_t v0 = sub_10001B38C(&qword_100138E88);
  sub_10001C500(v0, qword_10014BB58);
  sub_10001C4C8(v0, (uint64_t)qword_10014BB58);
  sub_10006BD54();
  return sub_1000E8840();
}

uint64_t sub_10006A370(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_10006A4B4, 0, 0);
}

uint64_t sub_10006A4B4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100138E48);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_100138F18, &qword_100138F20);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10006A658()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014BB70);
  sub_10001C4C8(v10, (uint64_t)qword_10014BB70);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_10006A930()
{
  uint64_t v0 = sub_10001B38C(&qword_100138EF8);
  sub_10001C500(v0, qword_10014BB88);
  sub_10001C4C8(v0, (uint64_t)qword_10014BB88);
  sub_10006B7F8();
  return sub_1000E88B0();
}

uint64_t sub_10006A9AC()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_10006ABE8()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014BBA0);
  sub_10001C4C8(v0, (uint64_t)qword_10014BBA0);
  return sub_1000E8A50();
}

uint64_t sub_10006AC4C()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014BBB8);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014BBB8);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10006AD04()
{
  uint64_t result = swift_getKeyPath();
  qword_10014BBD0 = result;
  return result;
}

uint64_t sub_10006AD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  void v3[6] = a1;
  return _swift_task_switch(sub_10006AD50, 0, 0);
}

uint64_t sub_10006AD50()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135D30 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BBD0;
  *(void *)(v0 + 80) = qword_10014BBD0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_100138F18, &qword_100138F20);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_10006AEAC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10006AEAC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_10006B000;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10006B000()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014BBD0;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10006B0DC()
{
  if (qword_100135D30 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10006B13C()
{
  unint64_t result = qword_100138E50;
  if (!qword_100138E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E50);
  }
  return result;
}

unint64_t sub_10006B194()
{
  unint64_t result = qword_100138E58;
  if (!qword_100138E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E58);
  }
  return result;
}

uint64_t sub_10006B1E8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10006B21C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006B26C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135D20, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014BBA0, a1);
}

uint64_t sub_10006B2A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135D28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BBB8);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_10006B320(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10006AD50, 0, 0);
}

uint64_t sub_10006B3D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006C3E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10006B3FC()
{
  return 0xD000000000000031;
}

unint64_t sub_10006B41C()
{
  unint64_t result = qword_100138E68;
  if (!qword_100138E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E68);
  }
  return result;
}

unint64_t sub_10006B474()
{
  unint64_t result = qword_100138E70;
  if (!qword_100138E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E70);
  }
  return result;
}

unint64_t sub_10006B4CC()
{
  unint64_t result = qword_100138E78;
  if (!qword_100138E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E78);
  }
  return result;
}

uint64_t sub_10006B520()
{
  return sub_10001D100(&qword_100138E80, &qword_100138E88);
}

uint64_t sub_10006B55C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10006B57C, 0, 0);
}

uint64_t sub_10006B57C()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10006B658(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 17) = *a2;
  return _swift_task_switch(sub_10006B67C, 0, 0);
}

uint64_t sub_10006B67C()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 17);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10001C620();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006B7C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135D08, &qword_100138E88, (uint64_t)qword_10014BB58, a1);
}

unint64_t sub_10006B7F8()
{
  unint64_t result = qword_100138E90;
  if (!qword_100138E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138E90);
  }
  return result;
}

uint64_t sub_10006B84C()
{
  return sub_10001D100(&qword_100138E98, &qword_100138E88);
}

uint64_t sub_10006B888()
{
  uint64_t v0 = qword_100138E28;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10006B8C4()
{
  unint64_t result = qword_100138EA0;
  if (!qword_100138EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EA0);
  }
  return result;
}

uint64_t sub_10006B918@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135D18, &qword_100138EF8, (uint64_t)qword_10014BB88, a1);
}

unint64_t sub_10006B948()
{
  unint64_t result = qword_100138EA8;
  if (!qword_100138EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EA8);
  }
  return result;
}

unint64_t sub_10006B9A0()
{
  unint64_t result = qword_100138EB0;
  if (!qword_100138EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EB0);
  }
  return result;
}

unint64_t sub_10006B9F8()
{
  unint64_t result = qword_100138EB8;
  if (!qword_100138EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EB8);
  }
  return result;
}

unint64_t sub_10006BA50()
{
  unint64_t result = qword_100138EC0;
  if (!qword_100138EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EC0);
  }
  return result;
}

uint64_t sub_10006BAA4@<X0>(uint64_t *a1@<X8>)
{
  sub_10006BD54();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10006BAE4()
{
  sub_10006BD00();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_10006BB78@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135D10, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014BB70, a1);
}

uint64_t sub_10006BBB0()
{
  return sub_10001D100(&qword_100138ED0, &qword_100138ED8);
}

uint64_t sub_10006BBEC(uint64_t a1)
{
  unint64_t v2 = sub_10006B7F8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10006BC3C()
{
  unint64_t result = qword_100138EE0;
  if (!qword_100138EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EE0);
  }
  return result;
}

uint64_t sub_10006BC94(uint64_t a1)
{
  unint64_t v2 = sub_10006BA50();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AutoDownloadMagazineIssuesEntity()
{
  return &type metadata for AutoDownloadMagazineIssuesEntity;
}

ValueMetadata *type metadata accessor for AutoDownloadMagazineIssuesEntity.UpdateIntent_value()
{
  return &type metadata for AutoDownloadMagazineIssuesEntity.UpdateIntent_value;
}

unint64_t sub_10006BD00()
{
  unint64_t result = qword_100138EE8;
  if (!qword_100138EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EE8);
  }
  return result;
}

unint64_t sub_10006BD54()
{
  unint64_t result = qword_100138EF0;
  if (!qword_100138EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100138EF0);
  }
  return result;
}

uint64_t sub_10006BDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136618);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_10006BD54();
  uint64_t v11 = sub_10001B3D0(&qword_100136628);
  uint64_t v12 = sub_1000E9740();
  uint64_t v13 = sub_10001D100(&qword_100136630, &qword_100136628);
  unint64_t v14 = sub_1000397BC();
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  unint64_t v28 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v15 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  uint64_t v25 = v1;
  uint64_t v26 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  uint64_t v25 = v4;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v22;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v17);
}

uint64_t sub_10006C1E8()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_1000397BC();
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10006C3E4()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_100138F28);
  sub_1000E8A50();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  int v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10006B7F8();
  uint64_t v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

uint64_t sub_10006C824@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for AutoDownloadMagazineIssuesToggleControl()
{
  return &type metadata for AutoDownloadMagazineIssuesToggleControl;
}

uint64_t sub_10006C840()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006C85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v22 = a3;
  uint64_t v23 = a1;
  uint64_t v10 = type metadata accessor for ContentServiceRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  sub_10001B38C(&qword_100137370);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000F1610;
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1000EA910();
  uint64_t v14 = v24;
  unint64_t v15 = v25;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000263E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  sub_100022374(0, (unint64_t *)&qword_100138300);
  uint64_t v16 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  sub_100020A28((void *)(a6 + 32), *(void *)(a6 + 56));
  uint64_t v17 = *a5;
  sub_1000742CC((uint64_t)a5, (uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContentServiceRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v22;
  v19[3] = a4;
  v19[4] = a6;
  sub_100074334((uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v19 + v18, (uint64_t (*)(void))type metadata accessor for ContentServiceRequest);
  uint64_t v20 = (void *)((char *)v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v20 = v23;
  v20[1] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100034200(v17, (uint64_t)sub_1000714B4, (uint64_t)v19);
  return swift_release();
}

void sub_10006CAD4(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t), void (*a6)(uint64_t), uint64_t a7, id *a8, void (*a9)(void *), uint64_t a10)
{
  uint64_t v81 = a7;
  uint64_t v82 = a8;
  char v83 = a5;
  uint64_t v84 = a6;
  char v79 = a9;
  uint64_t v80 = a10;
  uint64_t v14 = sub_1000E8CC0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000EA270();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for TodayContent();
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (void *)((char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v21 = (void *)((char *)v73 - v20);
  uint64_t v22 = type metadata accessor for ContentServiceRequest();
  uint64_t v23 = *(void *)(*(void *)(v22 - 8) + 64);
  __chkstk_darwin(v22);
  if (!a1 || !a2 || !a3)
  {
    if (a4)
    {
      uint64_t v38 = a4;
    }
    else
    {
      sub_1000725B4();
      uint64_t v38 = swift_allocError();
      *uint64_t v39 = 0;
    }
    swift_errorRetain();
    v83(v38);
    swift_errorRelease();
    return;
  }
  uint64_t v76 = v24;
  uint64_t v77 = (uint64_t)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = a1;
  swift_bridgeObjectRetain();
  id v78 = a3;
  id v26 = [v25 sections];
  uint64_t v27 = (uint64_t)[v26 count];

  if (v27 < 1)
  {
    swift_bridgeObjectRelease();
    sub_1000EA260();
    sub_1000E8C90();
    uint64_t v41 = sub_1000EA2F0();
    uint64_t v43 = v42;
    sub_10006FCF8(v82, 1, v19);
    sub_1000A02F8(v41, v43, v21);
    sub_10007426C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TodayContent);
    swift_bridgeObjectRelease();
    v79(v21);

    sub_10007426C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TodayContent);
    return;
  }
  id v28 = v78;
  sub_10001B38C(&qword_100137370);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1000F1610;
  unint64_t v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  sub_1000EA910();
  unint64_t v30 = v86;
  unint64_t v31 = v87;
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = sub_1000263E0();
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 40) = v31;
  sub_100022374(0, (unint64_t *)&qword_100138300);
  char v32 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  unint64_t v33 = (unint64_t)NTTodayResults.allItems.getter();
  unint64_t v34 = v33;
  unint64_t v86 = (unint64_t)_swiftEmptyArrayStorage;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000EA980();
    uint64_t v75 = a2;
    if (v35) {
      goto LABEL_7;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v40 = _swiftEmptyArrayStorage;
    id v37 = v28;
LABEL_28:
    uint64_t v44 = swift_bridgeObjectRelease();
    __chkstk_darwin(v44);
    uint64_t v45 = v81;
    uint64_t v46 = v82;
    v73[-4] = v37;
    v73[-3] = v46;
    v73[-2] = v45;
    v73[-1] = v40;
    uint64_t v47 = v45;
    sub_10001B38C(&qword_100139020);
    swift_allocObject();
    uint64_t v48 = sub_1000E90A0();
    void v73[2] = v48;
    uint64_t v49 = swift_bridgeObjectRelease();
    __chkstk_darwin(v49);
    v73[-4] = v25;
    v73[-3] = v47;
    v73[-2] = v46;
    sub_10001B38C(&qword_100139028);
    swift_allocObject();
    uint64_t v74 = sub_1000E90A0();
    uint64_t v50 = __chkstk_darwin(v74);
    v73[-2] = v48;
    v73[-1] = v50;
    sub_10001B38C((uint64_t *)&unk_100139030);
    v73[1] = sub_1000E90C0();
    sub_100022374(0, &qword_1001382D8);
    v73[0] = sub_1000EA680();
    uint64_t v51 = v77;
    sub_1000742CC((uint64_t)v46, v77, (uint64_t (*)(void))type metadata accessor for ContentServiceRequest);
    unint64_t v52 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    unint64_t v53 = (v23 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = v25;
    unint64_t v56 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v58 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v59 = swift_allocObject();
    sub_100074334(v51, v59 + v52, (uint64_t (*)(void))type metadata accessor for ContentServiceRequest);
    *(void *)(v59 + v53) = v55;
    id v61 = v78;
    uint64_t v60 = (void (*)(void))v79;
    *(void *)(v59 + v54) = v78;
    *(void *)(v59 + v56) = v75;
    uint64_t v62 = v80;
    uint64_t v63 = v81;
    *(void *)(v59 + v57) = v81;
    uint64_t v64 = (void *)(v59 + v58);
    *uint64_t v64 = v60;
    v64[1] = v62;
    uint64_t v65 = (void (**)(uint64_t))(v59 + ((v58 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v67 = v83;
    uint64_t v66 = v84;
    *uint64_t v65 = v83;
    v65[1] = v66;
    id v68 = v55;
    id v69 = v61;
    swift_retain();
    swift_retain();
    swift_retain();
    int v70 = (void *)v73[0];
    sub_1000E9050();
    swift_release();

    swift_release();
    uint64_t v71 = (void *)swift_allocObject();
    v71[2] = v63;
    v71[3] = v67;
    _OWORD v71[4] = v66;
    swift_retain();
    swift_retain();
    size_t v72 = (void *)sub_1000E9030();
    sub_1000E9060();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return;
  }
  uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v75 = a2;
  if (!v35) {
    goto LABEL_27;
  }
LABEL_7:
  uint64_t v74 = (uint64_t)v25;
  if (v35 >= 1)
  {
    uint64_t v36 = 0;
    id v37 = v28;
    do
    {
      if ((v34 & 0xC000000000000001) != 0) {
        sub_1000EA870();
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v85 = &OBJC_PROTOCOL___NTHeadlineProviding;
      if (swift_dynamicCastObjCProtocolConditional())
      {
        sub_1000EA450();
        if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000EA4C0();
        }
        sub_1000EA4F0();
        sub_1000EA490();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v36;
    }
    while (v35 != v36);
    swift_bridgeObjectRelease();
    uint64_t v40 = (void *)v86;
    id v25 = (id)v74;
    goto LABEL_28;
  }
  __break(1u);
}

void sub_10006D3BC(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, id *a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_retain();
  id v13 = [a5 widgetConfig];
  if (v13)
  {
    uint64_t v14 = v13;
    if (([v13 contentPrefetchEnabled] & 1) != 0
      && (uint64_t v15 = (char *)a6 + *(int *)(type metadata accessor for ContentServiceRequest() + 20),
          (v15[*(int *)(type metadata accessor for LayoutContext() + 48)] & 1) == 0))
    {
      uint64_t v16 = *(void **)(a7 + 88);
      sub_10001B38C(&qword_1001390A8);
      Class isa = sub_1000EA460().super.isa;
      id v18 = [*a6 qualityOfService];
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_10007441C;
      *(void *)(v19 + 24) = v12;
      v21[4] = sub_100074494;
      void v21[5] = v19;
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 1107296256;
      v21[2] = sub_10006D5E8;
      _OWORD v21[3] = &unk_1001267C0;
      uint64_t v20 = _Block_copy(v21);
      swift_release();
      [v16 prefetchContentForHeadlines:isa withQualityOfService:v18 completionHandler:v20];
      _Block_release(v20);
    }
    else
    {
      swift_release();
      v21[0] = sub_1000B56A0((uint64_t)_swiftEmptyArrayStorage);
      a1(v21);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    v21[0] = sub_1000B56A0((uint64_t)_swiftEmptyArrayStorage);
    a1(v21);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10006D5E8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1000E8B60();
  sub_100022374(0, (unint64_t *)&qword_1001390B0);
  sub_10007439C((unint64_t *)&qword_100139090, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v2 = sub_1000EA1C0();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10006D6C0(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, id *a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_retain();
  id v13 = [a5 banner];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void **)(a6 + 88);
    id v16 = [*a7 qualityOfService];
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_10007441C;
    *(void *)(v17 + 24) = v12;
    v19[4] = sub_100074454;
    v19[5] = v17;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    void v19[2] = sub_10006D840;
    v19[3] = &unk_100126748;
    id v18 = _Block_copy(v19);
    swift_release();
    [v15 prefetchContentForBanner:v14 withQualityOfService:v16 completionHandler:v18];
    _Block_release(v18);
  }
  else
  {
    swift_release();
    v19[0] = 0;
    a1(v19);
  }
}

void sub_10006D840(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_10006D8A8(uint64_t *a1, id *a2, void *a3, void *a4, uint64_t a5, void *a6, void (*a7)(void *), uint64_t a8, void (*a9)(uint64_t))
{
  uint64_t v136 = a8;
  id v137 = a7;
  id v152 = a3;
  v153 = a6;
  id v147 = a4;
  uint64_t v148 = a5;
  uint64_t v11 = sub_10001B38C((uint64_t *)&unk_100139040);
  __chkstk_darwin(v11 - 8);
  uint64_t v131 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for TodayContent();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v135 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  double v138 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v133 = (char *)&v128 - v17;
  uint64_t v18 = sub_10001B38C(&qword_100139050);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v134 = (uint64_t *)((char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v132 = (uint64_t)&v128 - v22;
  __chkstk_darwin(v21);
  uint64_t v151 = (uint64_t *)((char *)&v128 - v23);
  uint64_t v141 = sub_1000E8C50();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  char v145 = (char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1000E8C80();
  uint64_t v25 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v27 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for LayoutContext();
  uint64_t v29 = (int *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  char v32 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  unint64_t v34 = (uint64_t *)((char *)&v128 - v33);
  uint64_t v36 = *a1;
  uint64_t v35 = (void *)a1[1];
  id v37 = (id *)((char *)a2 + *(int *)(type metadata accessor for ContentServiceRequest() + 20));
  uint64_t v146 = v35;
  id v38 = v35;
  uint64_t v142 = v36;
  id v143 = v38;
  swift_bridgeObjectRetain();
  [v152 headlineScale];
  uint64_t v40 = v39;
  uint64_t v41 = *v37;
  uint64_t v42 = v37[1];
  uint64_t v43 = v29[8];
  uint64_t v44 = (char *)v37 + v43;
  uint64_t v45 = (char *)v34 + v43;
  uint64_t v46 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v45, v44, v46);
  uint64_t v47 = v29[10];
  uint64_t v48 = (void *)((char *)v37 + v29[9]);
  uint64_t v49 = *v48;
  uint64_t v50 = v48[1];
  uint64_t v51 = (char *)v37 + v47;
  unint64_t v52 = (char *)v34 + v47;
  uint64_t v53 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v52, v51, v53);
  uint64_t v54 = *(void *)((char *)v37 + v29[11]);
  char v55 = *((unsigned char *)v37 + v29[14]);
  *unint64_t v34 = v41;
  v34[1] = v42;
  unint64_t v56 = (void *)((char *)v34 + v29[9]);
  *unint64_t v56 = v49;
  v56[1] = v50;
  *(void *)((char *)v34 + v29[11]) = v54;
  *(void *)((char *)v34 + v29[12]) = v40;
  *((unsigned char *)v34 + v29[13]) = 0;
  *((unsigned char *)v34 + v29[14]) = v55;
  sub_1000E8C70();
  uint64_t v57 = sub_1000E8C60();
  uint64_t v59 = v58;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v150);
  v144 = v32;
  sub_1000742CC((uint64_t)v34, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  uint64_t v150 = (uint64_t)a2;
  id result = [*a2 request];
  if (result)
  {
    id v61 = result;
    id v62 = [result tagID];

    uint64_t v139 = v34;
    if (v62)
    {
      uint64_t v63 = sub_1000EA2B0();
      uint64_t v65 = v64;
    }
    else
    {
      uint64_t v63 = 0;
      uint64_t v65 = 0;
    }
    uint64_t v66 = v141;
    uint64_t v67 = v140;
    id v68 = v145;
    sub_1000E8C40();
    type metadata accessor for TrackableWidgetState();
    uint64_t v69 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentFetchDate, v68, v66);
    int v70 = (uint64_t *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_entryID);
    *int v70 = v57;
    v70[1] = v59;
    id v71 = v152;
    *(void *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_results) = v152;
    size_t v72 = v147;
    *(void *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_fetchInfo) = v147;
    sub_100074334((uint64_t)v144, v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext, (uint64_t (*)(void))type metadata accessor for LayoutContext);
    uint64_t v73 = (uint64_t *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentID);
    *uint64_t v73 = v63;
    v73[1] = v65;
    *(void *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType) = 0;
    uint64_t v74 = v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_visibleRect;
    *(_OWORD *)uint64_t v74 = 0u;
    *(_OWORD *)(v74 + 16) = 0u;
    *(unsigned char *)(v74 + 32) = 1;
    *(void *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_stackKind) = 0;
    *(void *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_stackLocation) = 0;
    id v147 = v72;
    id v75 = v71;
    uint64_t v76 = sub_10006E548(v75, v146, v148);
    uint64_t v77 = v150;
    id v78 = sub_100072FC0(v150, v75, v76);
    sub_10007189C(v76);
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_1000E8B60();
    Class isa = sub_1000EA460().super.isa;
    swift_release();
    NTDeleteOnDiskAssets();

    uint64_t v81 = (uint64_t)v149;
    uint64_t v82 = sub_100072314((uint64_t)v78);
    swift_bridgeObjectRelease();
    uint64_t v83 = (uint64_t)v153;
    id v84 = sub_10006EA58(v77, v75, (uint64_t)v82);
    uint64_t v85 = v151;
    sub_10006F344(v77, v83, v151);
    if (v81)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      a9(v81);

      swift_errorRelease();
      swift_release();
    }
    else
    {
      uint64_t v86 = v79;
      uint64_t v148 = (uint64_t)v84;
      char v149 = v82;
      id v152 = v75;
      unint64_t v87 = (void *)v153[9];
      uint64_t v88 = (char *)v153[17];
      uint64_t v89 = v132;
      sub_100074204((uint64_t)v85, v132);
      uint64_t v90 = sub_10001B38C((uint64_t *)&unk_100139058);
      uint64_t v91 = *(void *)(v90 - 8);
      long long v92 = *(void **)(v91 + 48);
      char v145 = (char *)(v91 + 48);
      uint64_t v146 = v92;
      int v93 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v92)(v89, 1, v90);
      v144 = v88;
      if (v93 == 1)
      {
        id v94 = v87;
        uint64_t v95 = v88;
        sub_100028B6C(v89, &qword_100139050);
        uint64_t v96 = v86;
        uint64_t v97 = *(void *)(v86 - 8);
        uint64_t v98 = v97;
        uint64_t v99 = 1;
        uint64_t v100 = v133;
      }
      else
      {
        id v101 = v87;
        uint64_t v102 = v88;
        swift_bridgeObjectRelease();
        uint64_t v103 = v89 + *(int *)(v90 + 48);
        uint64_t v96 = v86;
        uint64_t v97 = *(void *)(v86 - 8);
        uint64_t v98 = v97;
        uint64_t v100 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v133, v103, v96);
        uint64_t v99 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v100, v99, 1, v96);
      uint64_t v104 = type metadata accessor for EngagementURLProvider();
      uint64_t v105 = (void *)swift_allocObject();
      uint64_t v106 = (uint64_t)v100;
      int v107 = v105;
      uint64_t v108 = (uint64_t)v144;
      v105[2] = v87;
      v105[3] = v108;
      uint64_t v109 = v142;
      v105[4] = v69;
      v105[5] = v109;
      sub_100020B80(v106, (uint64_t)v105 + OBJC_IVAR____TtC10NewsToday221EngagementURLProvider_sharedDirectoryFileUrl);
      v154[3] = v104;
      v154[4] = &off_100127960;
      v154[0] = v107;
      uint64_t v110 = *(void *)(v69 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType);
      swift_retain();
      swift_retain();
      sub_10006F55C(v147, v150, v110, v138);
      uint64_t v111 = v134;
      sub_100074204((uint64_t)v151, (uint64_t)v134);
      if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v146)(v111, 1, v90) == 1)
      {
        sub_100028B6C((uint64_t)v111, &qword_100139050);
        uint64_t v112 = 0;
        uint64_t v113 = 0;
      }
      else
      {
        uint64_t v112 = *v111;
        uint64_t v114 = v96;
        uint64_t v113 = v111[1];
        (*(void (**)(char *, uint64_t))(v97 + 8))((char *)v111 + *(int *)(v90 + 48), v114);
      }
      uint64_t v115 = v135;
      id v116 = (id)NewsCoreUserDefaults();
      NSString v117 = sub_1000EA280();
      id v118 = [v116 stringForKey:v117];

      if (v118)
      {
        uint64_t v119 = sub_1000EA2B0();
        uint64_t v121 = v120;
      }
      else
      {
        uint64_t v119 = 0;
        uint64_t v121 = 0xE000000000000000;
      }
      id v122 = v147;
      id v123 = v152;
      swift_retain();
      sub_10009FE98(v123, (uint64_t)v122, (uint64_t)v149, v154, v148, 0, (uint64_t)v138, v69, v115, v112, v113, v119, v121);
      id v124 = v153;
      sub_100020A28(v153 + 12, v153[15]);
      id v125 = sub_10002E464();
      [v125 tickle];

      uint64_t v126 = (void (*)(uint64_t, void))v124[2];
      if (v126)
      {
        uint64_t v127 = v131;
        sub_1000742CC((uint64_t)v115, v131, (uint64_t (*)(void))type metadata accessor for TodayContent);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v127, 0, 1, v130);
        swift_retain();
        v126(v127, 0);
        sub_100034914((uint64_t)v126);
        sub_100028B6C(v127, (uint64_t *)&unk_100139040);
      }
      v137(v115);
      swift_release();
      swift_release();

      sub_10007426C((uint64_t)v115, (uint64_t (*)(void))type metadata accessor for TodayContent);
      sub_100028B6C((uint64_t)v151, &qword_100139050);
    }
    return (id)sub_10007426C((uint64_t)v139, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006E548(void *a1, void *a2, uint64_t a3)
{
  id v48 = a2;
  uint64_t v5 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = sub_1000E8B60();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v45 - v22;
  id v24 = [a1 banner];
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_7:
    uint64_t v11 = v16;
    goto LABEL_15;
  }
  uint64_t v25 = v24;
  uint64_t v46 = v21;
  id v26 = [v24 imageURL];

  uint64_t v47 = v23;
  if (v26)
  {
    sub_1000E8B20();

    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v27(v14, 0, 1, v17);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v27(v14, 1, 1, v17);
  }
  sub_100020B80((uint64_t)v14, (uint64_t)v16);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v28(v16, 1, v17) == 1) {
    goto LABEL_7;
  }
  uint64_t v45 = a3;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v29(v47, v16, v17);
  if (v48)
  {
    uint64_t v30 = v29;
    id v31 = [v48 fileURL];
    if (v31)
    {
      char v32 = v31;
      sub_1000E8B20();

      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v33 = 1;
    }
    unint64_t v34 = v46;
    v27(v8, v33, 1, v17);
    sub_100020B80((uint64_t)v8, (uint64_t)v11);
    if (v28(v11, 1, v17) != 1)
    {
      v30(v34, v11, v17);
      sub_10001B38C(&qword_100139098);
      uint64_t v36 = (int *)(sub_10001B38C(&qword_1001390A0) - 8);
      unint64_t v37 = (*(unsigned __int8 *)(*(void *)v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v36 + 80);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1000F1610;
      unint64_t v39 = v38 + v37 + v36[14];
      uint64_t v40 = *(void (**)(void))(v18 + 16);
      uint64_t v41 = v34;
      uint64_t v42 = v47;
      v40();
      ((void (*)(unint64_t, char *, uint64_t))v40)(v39, v41, v17);
      sub_1000B59BC(v38);
      sub_10007439C((unint64_t *)&qword_100139090, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v43 = sub_1000E8F80();
      swift_bridgeObjectRelease();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v18 + 8);
      v44(v41, v17);
      v44(v42, v17);
      return v43;
    }
  }
  else
  {
    v27(v11, 1, 1, v17);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v47, v17);
  a3 = v45;
LABEL_15:
  sub_100028B6C((uint64_t)v11, (uint64_t *)&unk_1001370F0);
  swift_bridgeObjectRetain();
  return a3;
}

id sub_10006EA58(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v72 = a3;
  uint64_t v4 = type metadata accessor for ImageStore.Key();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)&v68 - v14;
  unint64_t v15 = sub_1000E9F60();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContentServiceRequest();
  type metadata accessor for LayoutContext();
  (*(void (**)(char *, void, unint64_t))(v16 + 104))(v18, enum case for InternalWidgetFamily.systemSmall(_:), v15);
  sub_10007439C((unint64_t *)&qword_100139068, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
  sub_1000EA420();
  sub_1000EA420();
  uint64_t v20 = v76;
  uint64_t v19 = v77;
  (*(void (**)(char *, unint64_t))(v16 + 8))(v18, v15);
  if (v19 != v20) {
    return (id)sub_1000B5894((uint64_t)_swiftEmptyArrayStorage);
  }
  id v21 = [a2 sections];
  id v22 = [v21 array];

  uint64_t v23 = sub_1000EA470();
  unint64_t v24 = (unint64_t)sub_100084B00(v23);
  swift_bridgeObjectRelease();
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1000EA980();
    swift_bridgeObjectRelease();
    if (!v66) {
      goto LABEL_47;
    }
  }
  else if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_47;
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v25 = (id)sub_1000EA870();
  }
  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_46;
    }
    id v25 = *(id *)(v24 + 32);
  }
  id v26 = v25;
  swift_bridgeObjectRelease();
  sub_100084480();
  uint64_t v18 = v27;

  if (!((unint64_t)v18 >> 62))
  {
    if (*(void *)(((unint64_t)v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    return (id)sub_1000B5894((uint64_t)_swiftEmptyArrayStorage);
  }
LABEL_46:
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_1000EA980();
  swift_bridgeObjectRelease();
  if (!v67) {
    goto LABEL_47;
  }
LABEL_9:
  if (((unint64_t)v18 & 0xC000000000000001) != 0)
  {
    sub_1000EA870();
  }
  else
  {
    if (!*(void *)(((unint64_t)v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_52;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v75 = &OBJC_PROTOCOL___NTHeadlineProviding;
  uint64_t v28 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v28)
  {
    swift_unknownObjectRelease();
    return (id)sub_1000B5894((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v29 = v28;
  id v30 = [v28 thumbnailRemoteURL];
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v9, 1, 1, v10);
    goto LABEL_32;
  }
  id v31 = v30;
  sub_1000E8B20();

  char v32 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v33 = v13;
  uint64_t v34 = v74;
  v32(v9, v33, v10);
  uint64_t v35 = *(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56);
  v35(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v9, 1, v10) == 1)
  {
LABEL_32:
    sub_100028B6C((uint64_t)v9, (uint64_t *)&unk_1001370F0);
LABEL_34:
    unint64_t v55 = sub_1000B5894((uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease();
    return (id)v55;
  }
  id v69 = v29;
  uint64_t v36 = v73;
  v32(v73, v9, v10);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v6, v36, v10);
  v35(v6, 0, 1, v10);
  uint64_t v37 = v72;
  if (!*(void *)(v72 + 16) || (unint64_t v38 = sub_10003BC3C((uint64_t)v6), (v39 & 1) == 0))
  {
    sub_10007426C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v73, v10);
    goto LABEL_34;
  }
  id v40 = *(id *)(*(void *)(v37 + 56) + 8 * v38);
  sub_10007426C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
  id v41 = [*(id *)(v71 + 80) colorsForImage:v40];
  uint64_t v72 = sub_100022374(0, (unint64_t *)&qword_100139070);
  unint64_t v15 = sub_1000EA470();

  id v68 = v40;
  if (v15 >> 62) {
    goto LABEL_53;
  }
  uint64_t v42 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v42; uint64_t v42 = sub_1000EA980())
  {
    uint64_t v43 = self;
    unint64_t v44 = v15 & 0xC000000000000001;
    uint64_t v45 = 4;
    id v70 = v43;
    unint64_t v71 = v15 & 0xC000000000000001;
    while (1)
    {
      id v46 = v44 ? (id)sub_1000EA870() : *(id *)(v15 + 8 * v45);
      id v47 = v46;
      uint64_t v48 = v45 - 3;
      if (__OFADD__(v45 - 4, 1)) {
        break;
      }
      uint64_t v49 = (void *)sub_1000EA6D0();
      id v50 = [v70 whiteColor];
      char v51 = sub_1000EA710();

      if (v51)
      {
        id result = (id)swift_bridgeObjectRelease();
        uint64_t v52 = v74;
        unint64_t v53 = v71;
        goto LABEL_36;
      }

      ++v45;
      unint64_t v44 = v71;
      if (v48 == v42) {
        goto LABEL_26;
      }
    }
LABEL_52:
    __break(1u);
LABEL_53:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  if (qword_100135E08 != -1) {
    swift_once();
  }
  uint64_t v52 = v74;
  if (!v42)
  {
    id v47 = (id)qword_10014BE20;
    swift_bridgeObjectRelease();
    uint64_t v57 = 0;
    goto LABEL_41;
  }
  unint64_t v53 = v15 & 0xC000000000000001;
  id result = (id)qword_10014BE20;
  id v47 = result;
LABEL_36:
  if (v53)
  {
    id v56 = (id)sub_1000EA870();
    goto LABEL_39;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v56 = *(id *)(v15 + 32);
LABEL_39:
    uint64_t v57 = v56;
    swift_bridgeObjectRelease();
LABEL_41:
    sub_10001B38C(&qword_100139078);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000F1610;
    id v59 = v47;
    id v60 = [v69 identifier];
    uint64_t v61 = sub_1000EA2B0();
    uint64_t v63 = v62;

    *(void *)(inited + 32) = v61;
    *(void *)(inited + 40) = v63;
    *(void *)(inited + 48) = v57;
    *(void *)(inited + 56) = v59;
    id v64 = v57;
    id v65 = v59;
    unint64_t v55 = sub_1000B5894(inited);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v73, v10);
    return (id)v55;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006F344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1000E8C80();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + *(int *)(type metadata accessor for ContentServiceRequest() + 20);
  if (*(unsigned char *)(v11 + *(int *)(type metadata accessor for LayoutContext() + 48)))
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_100139058);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
  else
  {
    sub_1000E8C70();
    uint64_t v14 = sub_1000E8C60();
    uint64_t v22 = v3;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v18 = sub_10001B38C((uint64_t *)&unk_100139058);
    uint64_t v19 = (uint64_t)a3 + *(int *)(v18 + 48);
    *a3 = v15;
    a3[1] = (uint64_t)v17;
    sub_100020A28((void *)(a2 + 96), *(void *)(a2 + 120));
    swift_bridgeObjectRetain();
    uint64_t v20 = v22;
    sub_10002E874(v15, v17, v19);
    if (v20)
    {
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 0, 1, v18);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10006F55C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E8B60();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a1 widgetConfig];
  uint64_t v16 = v15;
  if ((unint64_t)(a3 - 1) < 4)
  {

    goto LABEL_3;
  }
  if (a3)
  {

LABEL_14:
    sub_10001B38C(&qword_100137370);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1000F1610;
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    type metadata accessor for ContentServiceRequest();
    sub_1000EA910();
    uint64_t v33 = v50;
    unint64_t v34 = v51;
    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = sub_1000263E0();
    *(void *)(v32 + 32) = v33;
    *(void *)(v32 + 40) = v34;
    sub_100022374(0, (unint64_t *)&qword_100138300);
    uint64_t v35 = (void *)sub_1000EA720();
    sub_1000EA620();
    sub_1000E9220();
    swift_bridgeObjectRelease();

    if (qword_100135D38 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_10001C4C8(v11, (uint64_t)qword_10014BBD8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(a4, v36, v11);
    goto LABEL_22;
  }
  if (v15)
  {
    unsigned __int8 v26 = [v15 widgetBackgroundInteractionEnabled];

    if ((v26 & 1) == 0) {
      goto LABEL_14;
    }
  }
LABEL_3:
  uint64_t v17 = (void *)(a2 + *(int *)(type metadata accessor for ContentServiceRequest() + 24));
  if (*v17)
  {
    uint64_t v49 = a4;
    uint64_t v18 = v17[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 32);
    uint64_t v21 = v18;
    a4 = v49;
    v20(ObjectType, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v22(v14, v10, v11);
      sub_10001B38C(&qword_100137370);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1000F2570;
      uint64_t v50 = 0;
      unint64_t v51 = 0xE000000000000000;
      id v47 = v22;
      uint64_t v48 = v12 + 32;
      unint64_t v24 = (void *)0xE700000000000000;
      v25._countAndFlagsBits = 0x736569726F7473;
      switch(a3)
      {
        case 0:
          break;
        case 1:
          unint64_t v24 = (void *)0xEA00000000007365;
          v25._countAndFlagsBits = 0x69726F7473206F6ELL;
          break;
        case 2:
          unint64_t v24 = (void *)0xE500000000000000;
          v25._countAndFlagsBits = 0x726F727265;
          break;
        case 3:
          v25._countAndFlagsBits = 0x656E696C66666FLL;
          break;
        case 4:
          unint64_t v24 = (void *)0xEB00000000726564;
          v25._countAndFlagsBits = 0x6C6F686563616C70;
          break;
        default:
          v25._countAndFlagsBits = 0x6E776F6E6B6E75;
          break;
      }
      v25._object = v24;
      sub_1000EA370(v25);
      swift_bridgeObjectRelease();
      uint64_t v37 = v50;
      unint64_t v38 = v51;
      *(void *)(v23 + 56) = &type metadata for String;
      unint64_t v39 = sub_1000263E0();
      *(void *)(v23 + 64) = v39;
      *(void *)(v23 + 32) = v37;
      *(void *)(v23 + 40) = v38;
      sub_10007439C((unint64_t *)&unk_100137390, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v40 = sub_1000EAB10();
      *(void *)(v23 + 96) = &type metadata for String;
      *(void *)(v23 + 104) = v39;
      *(void *)(v23 + 72) = v40;
      *(void *)(v23 + 80) = v41;
      uint64_t v50 = 0;
      unint64_t v51 = 0xE000000000000000;
      sub_1000EA910();
      uint64_t v42 = v50;
      unint64_t v43 = v51;
      *(void *)(v23 + 136) = &type metadata for String;
      *(void *)(v23 + 144) = v39;
      *(void *)(v23 + 112) = v42;
      *(void *)(v23 + 120) = v43;
      sub_100022374(0, (unint64_t *)&qword_100138300);
      unint64_t v44 = (void *)sub_1000EA720();
      sub_1000EA620();
      sub_1000E9220();
      swift_bridgeObjectRelease();

      a4 = v49;
      v47(v49, v14, v11);
LABEL_22:
      uint64_t v31 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, v31, 1, v11);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_100028B6C((uint64_t)v10, (uint64_t *)&unk_1001370F0);
  sub_10001B38C(&qword_100137370);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000F1610;
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  sub_1000EA910();
  uint64_t v28 = v50;
  unint64_t v29 = v51;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_1000263E0();
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v29;
  sub_100022374(0, (unint64_t *)&qword_100138300);
  id v30 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  uint64_t v31 = 1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, v31, 1, v11);
}

uint64_t sub_10006FBE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_100139040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, uint64_t))(a2 + 16);
  if (v9)
  {
    uint64_t v10 = type metadata accessor for TodayContent();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    swift_retain();
    v9(v8, a1);
    sub_100034914((uint64_t)v9);
    sub_100028B6C((uint64_t)v8, (uint64_t *)&unk_100139040);
  }
  return a3(a1);
}

id sub_10006FCF8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v111 = a2;
  int v107 = a3;
  uint64_t v5 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v102 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v100 = (char *)&v100 - v8;
  uint64_t v9 = sub_1000E8B60();
  uint64_t v112 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v106 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000E8C50();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (void *)sub_1000E8C80();
  id v118 = (void *)*(v114 - 1);
  uint64_t v12 = __chkstk_darwin(v114);
  uint64_t v105 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v15 = (char *)&v100 - v14;
  uint64_t v16 = (int *)type metadata accessor for LayoutContext();
  uint64_t v17 = __chkstk_darwin(v16);
  id v116 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char **)((char *)&v100 - v19);
  uint64_t v21 = type metadata accessor for ImageStore.Key();
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = v3;
  id v24 = [*(id *)(*sub_100020A28((void *)(v3 + 32), *(void *)(v3 + 56)) + 32) placeholderResultsWithOperationInfo:*a1];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v104 = type metadata accessor for ContentServiceRequest();
  uint64_t v26 = *(int *)(v104 + 20);
  NSString v117 = a1;
  uint64_t v27 = (id *)((char *)a1 + v26);
  [v24 headlineScale];
  sub_10007F780();
  CGFloat v29 = v28;
  id v30 = [self blackColor];
  uint64_t v31 = sub_1000D1E64(v29, v29);

  if (v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v23, 1, 1, v9);
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v25 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v119[0] = v33;
    *(void *)(v25 + 16) = 0x8000000000000000;
    sub_1000BE400((uint64_t)v32, (uint64_t)v23, isUniquelyReferenced_nonNull_native);
    *(void *)(v25 + 16) = v119[0];
    swift_bridgeObjectRelease();
    sub_10007426C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
  }
  uint64_t v115 = v25;
  id result = [objc_allocWithZone((Class)NTPBTodayResultOperationFetchInfo) init];
  if (!result)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v36 = result;
  NSString v37 = [v24 sourceIdentifier];
  if (!v37)
  {
    sub_1000EA2B0();
    NSString v37 = sub_1000EA280();
    swift_bridgeObjectRelease();
  }
  [v36 setTodaySourceIdentifier:v37];

  [v24 headlineScale];
  uint64_t v39 = v38;
  uint64_t v40 = *v27;
  uint64_t v41 = v27[1];
  uint64_t v42 = v16[6];
  unint64_t v43 = (char *)v27 + v42;
  unint64_t v44 = (char *)v20 + v42;
  uint64_t v45 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v44, v43, v45);
  uint64_t v46 = v16[8];
  id v47 = (void *)((char *)v27 + v16[7]);
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = (char *)v27 + v46;
  unint64_t v51 = (char *)v20 + v46;
  uint64_t v52 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v51, v50, v52);
  uint64_t v53 = *(void *)((char *)v27 + v16[9]);
  char v54 = *((unsigned char *)v27 + v16[12]);
  *uint64_t v20 = v40;
  v20[1] = v41;
  unint64_t v55 = (void *)((char *)v20 + v16[7]);
  *unint64_t v55 = v48;
  v55[1] = v49;
  *(void *)((char *)v20 + v16[9]) = v53;
  *(void *)((char *)v20 + v16[10]) = v39;
  *((unsigned char *)v20 + v16[11]) = 1;
  *((unsigned char *)v20 + v16[12]) = v54;
  sub_1000E8C70();
  uint64_t v56 = sub_1000E8C60();
  uint64_t v58 = v57;
  id v59 = v118 + 1;
  id v60 = (void (*)(char *, void *))v118[1];
  v60(v15, v114);
  sub_1000742CC((uint64_t)v20, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  id result = [*v117 request];
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v61 = result;
  uint64_t v103 = v60;
  id v118 = v59;
  uint64_t v101 = v9;
  id v62 = [result tagID];

  if (v62)
  {
    uint64_t v63 = sub_1000EA2B0();
    uint64_t v65 = v64;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v65 = 0;
  }
  uint64_t v66 = v115;
  uint64_t v67 = v108;
  sub_1000E8C40();
  type metadata accessor for TrackableWidgetState();
  uint64_t v68 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentFetchDate, v67, v110);
  id v69 = (uint64_t *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_entryID);
  *id v69 = v56;
  v69[1] = v58;
  *(void *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_results) = v24;
  *(void *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_fetchInfo) = v36;
  sub_100074334((uint64_t)v116, v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  id v70 = (uint64_t *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_contentID);
  *id v70 = v63;
  v70[1] = v65;
  uint64_t v71 = v111;
  *(void *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType) = v111;
  uint64_t v72 = v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_visibleRect;
  *(_OWORD *)uint64_t v72 = 0u;
  *(_OWORD *)(v72 + 16) = 0u;
  *(unsigned char *)(v72 + 32) = 1;
  *(void *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_stackKind) = 0;
  *(void *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_stackLocation) = 0;
  id v73 = v36;
  uint64_t v74 = (char *)v24;
  id v75 = v74;
  if (v71 == 4)
  {
    sub_1000708AC(v113, v68, v74, v73, v66, 1, (uint64_t)v117, v107);

    swift_release();
    sub_10007426C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  }
  else
  {
    id v116 = v74;
    uint64_t v76 = v105;
    sub_1000E8C70();
    uint64_t v77 = sub_1000E8C60();
    uint64_t v79 = v78;
    v103(v76, v114);
    uint64_t v80 = v113;
    sub_100020A28((void *)(v113 + 96), *(void *)(v113 + 120));
    uint64_t v81 = v106;
    sub_10002E874(v77, v79, v106);
    uint64_t v111 = (uint64_t)v79;
    uint64_t v82 = *(void **)(v80 + 136);
    id v118 = *(id *)(v80 + 72);
    uint64_t v114 = v82;
    swift_retain();
    unint64_t v83 = sub_1000B56A0((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v84 = v112;
    uint64_t v85 = (uint64_t)v100;
    uint64_t v86 = v81;
    uint64_t v87 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v100, v86, v101);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v87);
    uint64_t v88 = type metadata accessor for EngagementURLProvider();
    uint64_t v89 = (void *)swift_allocObject();
    id v90 = v114;
    v89[2] = v118;
    v89[3] = v90;
    v89[4] = v68;
    v89[5] = v83;
    sub_100020B80(v85, (uint64_t)v89 + OBJC_IVAR____TtC10NewsToday221EngagementURLProvider_sharedDirectoryFileUrl);
    id v118 = sub_100072314(*(void *)(v115 + 16));
    v119[3] = v88;
    v119[4] = &off_100127960;
    v119[0] = v89;
    id v91 = v73;
    swift_retain();
    uint64_t v114 = (void *)sub_1000B5894((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v92 = *(void *)(v68 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType);
    id v93 = v91;
    sub_10006F55C(v93, (uint64_t)v117, v92, v102);

    id v94 = (id)NewsCoreUserDefaults();
    NSString v95 = sub_1000EA280();
    id v96 = [v94 stringForKey:v95];

    if (v96)
    {
      uint64_t v97 = sub_1000EA2B0();
      uint64_t v99 = v98;
    }
    else
    {
      uint64_t v97 = 0;
      uint64_t v99 = 0xE000000000000000;
    }
    sub_10009FE98(v116, (uint64_t)v93, (uint64_t)v118, v119, (uint64_t)v114, 1, (uint64_t)v102, v68, v107, v77, v111, v97, v99);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v106, v101);
    sub_10007426C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  }
  return (id)swift_release();
}

uint64_t sub_1000708AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v39 = a7;
  int v40 = a6;
  uint64_t v36 = a4;
  id v37 = a3;
  uint64_t v41 = a8;
  uint64_t v11 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v38 = (void *)(a5 + 16);
  uint64_t v17 = *(void **)(a1 + 136);
  id v18 = *(id *)(a1 + 72);
  id v19 = v17;
  swift_retain();
  unint64_t v20 = sub_1000B56A0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v21 = sub_1000E8B60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  uint64_t v22 = type metadata accessor for EngagementURLProvider();
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v23[2] = v18;
  _OWORD v23[3] = v19;
  _OWORD v23[4] = a2;
  v23[5] = v20;
  sub_100020B80((uint64_t)v16, (uint64_t)v23 + OBJC_IVAR____TtC10NewsToday221EngagementURLProvider_sharedDirectoryFileUrl);
  swift_beginAccess();
  uint64_t v38 = sub_100072314(*(void *)(a5 + 16));
  _OWORD v42[3] = v22;
  v42[4] = &off_100127960;
  id v24 = v36;
  v42[0] = v23;
  id v25 = v37;
  swift_retain();
  unint64_t v26 = sub_1000B5894((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v27 = (uint64_t)v14;
  sub_10006F55C(v24, v39, *(void *)(a2 + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_appearanceType), v14);
  swift_retain();
  id v28 = (id)NewsCoreUserDefaults();
  NSString v29 = sub_1000EA280();
  id v30 = [v28 stringForKey:v29];

  if (v30)
  {
    uint64_t v31 = sub_1000EA2B0();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0xE000000000000000;
  }
  swift_unknownObjectRetain();
  sub_10009FE98(v25, (uint64_t)v24, (uint64_t)v38, v42, v26, v40 & 1, v27, a2, v41, 0, 0, v31, v33);
  return swift_release();
}

uint64_t sub_100070B70(void *a1)
{
  uint64_t v2 = sub_1000E8CC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000EA270();
  __chkstk_darwin(v3 - 8);
  [a1 fc_isOfflineError];
  sub_1000EA260();
  sub_1000E8C90();
  return sub_1000EA2F0();
}

uint64_t sub_100070CEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for ImageStore.Key();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a2 + 16) || (unint64_t v16 = sub_10003BE2C(a1), (v17 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    return sub_100028B6C((uint64_t)v11, (uint64_t *)&unk_1001370F0);
  }
  id v28 = a3;
  id v18 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v18(v11, *(void *)(a2 + 56) + *(void *)(v13 + 72) * v16, v12);
  id v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  v19(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_100028B6C((uint64_t)v11, (uint64_t *)&unk_1001370F0);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v18(v8, a1, v12);
  v19(v8, 0, 1, v12);
  sub_1000E8B30();
  id v20 = objc_allocWithZone((Class)UIImage);
  NSString v21 = sub_1000EA280();
  swift_bridgeObjectRelease();
  id v22 = [v20 initWithContentsOfFile:v21];

  uint64_t v23 = v28;
  swift_beginAccess();
  if (v22)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v23;
    *uint64_t v23 = 0x8000000000000000;
    sub_1000BE400((uint64_t)v22, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v23 = v29;
    swift_bridgeObjectRelease();
    sub_10007426C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
  }
  else
  {
    unint64_t v26 = (void *)sub_100071AFC((uint64_t)v8);
    sub_10007426C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
  }
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t FTEventTrackingWidgetAppearanceType.debugDescription.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_100071140()
{
  sub_100034914(*(void *)(v0 + 16));
  sub_100020AC0(v0 + 32);

  swift_unknownObjectRelease();
  sub_100020AC0(v0 + 96);

  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t sub_1000711A8()
{
  uint64_t result = 0x736569726F7473;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x69726F7473206F6ELL;
      break;
    case 2:
      uint64_t result = 0x726F727265;
      break;
    case 3:
      uint64_t result = 0x656E696C66666FLL;
      break;
    case 4:
      uint64_t result = 0x6C6F686563616C70;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t type metadata accessor for ContentService()
{
  return self;
}

uint64_t type metadata accessor for ContentServiceRequest()
{
  uint64_t result = qword_100139120;
  if (!qword_100139120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000712E4()
{
  uint64_t v1 = (int *)(type metadata accessor for ContentServiceRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  unint64_t v15 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v16 = v2 | 7;
  swift_release();
  swift_release();
  uint64_t v4 = v0 + v3;

  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = type metadata accessor for LayoutContext();
  uint64_t v7 = v5 + *(int *)(v6 + 24);
  uint64_t v8 = sub_1000E9F60();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = v5 + *(int *)(v6 + 32);
  uint64_t v11 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = (id *)(v4 + v1[8]);

  uint64_t v13 = type metadata accessor for NewsWidgetInfo();
  v9((uint64_t)v12 + *(int *)(v13 + 20), v8);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v15, v16);
}

void sub_1000714B4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ContentServiceRequest() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (id *)(v4 + v10);
  uint64_t v12 = v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_10006CAD4(a1, a2, a3, a4, *(void (**)(uint64_t))(v4 + 16), *(void (**)(uint64_t))(v4 + 24), *(void *)(v4 + 32), v11, *(void (**)(void *))v12, *(void *)(v12 + 8));
}

uint64_t sub_100071584()
{
  uint64_t v0 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000E8B60();
  sub_10001C500(v3, qword_10014BBD8);
  uint64_t v4 = sub_10001C4C8(v3, (uint64_t)qword_10014BBD8);
  sub_1000E8B40();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

void *sub_1000716BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001B38C(&qword_100137388);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1000729CC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100033990();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1000717A4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10001B38C(&qword_1001390C0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_10003CCD8((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000EA980();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_10007189C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001B38C(&qword_100139088);
  uint64_t v3 = *(void *)(sub_1000E8B60() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_100072BCC(&v10, (char *)v6 + v5, v1, a1);
      sub_100033990();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1000719D0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10003BA88(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000BE998();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1000EA930();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_100028BC8((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_100071BF0(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_100071AFC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10003BC3C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000BF14C();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for ImageStore.Key();
  sub_10007426C(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_100071EA8(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_100071BF0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000EA930();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_1000EA7D0();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_1000EA1D0();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            unint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              _OWORD *v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100071EA8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8B60();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ImageStore.Key();
  uint64_t v7 = __chkstk_darwin(v40);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = __chkstk_darwin(v7);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = a2 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v16 = (a1 + 1) & ~v15;
  if (((1 << v16) & *(void *)(a2 + 64 + 8 * (v16 >> 6))) != 0)
  {
    uint64_t v45 = v11;
    uint64_t v41 = v5;
    uint64_t v17 = ~v15;
    unint64_t result = sub_1000EA7D0();
    uint64_t v44 = a2 + 64;
    if ((*(void *)(v14 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
    {
      unint64_t v46 = (result + 1) & v17;
      uint64_t v47 = v17;
      uint64_t v18 = v44;
      unint64_t v19 = v45[9];
      id v20 = v41;
      uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 6);
      ++v41;
      uint64_t v42 = (void (**)(char *, char *, uint64_t))(v20 + 4);
      while (1)
      {
        NSString v21 = v19;
        int64_t v22 = (void)v19 * v16;
        sub_1000742CC(*(void *)(a2 + 48) + (void)v19 * v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
        sub_1000EABB0();
        sub_1000742CC((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
        if ((*v45)(v9, 1, v4) == 1)
        {
          sub_1000EABC0(1uLL);
        }
        else
        {
          uint64_t v23 = v4;
          id v24 = v43;
          (*v42)(v43, v9, v23);
          sub_1000EABC0(0);
          sub_10007439C((unint64_t *)&qword_100139090, (void (*)(uint64_t))&type metadata accessor for URL);
          sub_1000EA1E0();
          uint64_t v25 = v24;
          uint64_t v4 = v23;
          uint64_t v18 = v44;
          (*v41)(v25, v4);
        }
        Swift::Int v26 = sub_1000EABE0();
        unint64_t result = sub_10007426C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
        unint64_t v27 = v26 & v47;
        uint64_t v28 = v47;
        if ((uint64_t)a1 >= (uint64_t)v46)
        {
          unint64_t v19 = v21;
          if (v27 < v46) {
            goto LABEL_5;
          }
        }
        else
        {
          unint64_t v19 = v21;
          if (v27 >= v46) {
            goto LABEL_14;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v27)
        {
LABEL_14:
          uint64_t v29 = *(void *)(a2 + 48);
          unint64_t result = v29 + (void)v19 * a1;
          if ((uint64_t)((void)v19 * a1) < v22 || result >= (unint64_t)v19 + v29 + v22)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_19:
            unint64_t v19 = v21;
          }
          else if ((void)v19 * a1 != v22)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
            goto LABEL_19;
          }
          uint64_t v30 = *(void *)(a2 + 56);
          uint64_t v31 = (void *)(v30 + 8 * a1);
          uint64_t v32 = (void *)(v30 + 8 * v16);
          if (a1 != v16 || (a1 = v16, v31 >= v32 + 1))
          {
            *uint64_t v31 = *v32;
            a1 = v16;
          }
        }
LABEL_5:
        unint64_t v16 = (v16 + 1) & v28;
        if (((*(void *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v18 = v44;
LABEL_25:
    BOOL v33 = (uint64_t *)(v18 + 8 * (a1 >> 6));
    uint64_t v35 = *v33;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v33 = (uint64_t *)(v14 + 8 * (a1 >> 6));
    uint64_t v34 = *v33;
    uint64_t v35 = (-1 << a1) - 1;
  }
  *BOOL v33 = v34 & v35;
  uint64_t v36 = *(void *)(a2 + 16);
  BOOL v37 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_100072314(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageStore.Key();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B38C(&qword_100139080);
  unint64_t result = (void *)sub_1000EA990();
  uint64_t v6 = result;
  int64_t v7 = 0;
  uint64_t v30 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v27 = v9;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = (char *)(result + 8);
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    uint64_t v20 = v30;
    unint64_t v21 = *(void *)(v29 + 72) * i;
    sub_1000742CC(*(void *)(v30 + 48) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
    int64_t v22 = *(void **)(*(void *)(v20 + 56) + 8 * i);
    *(void *)&v14[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    unint64_t result = (void *)sub_100074334((uint64_t)v4, v6[6] + v21, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
    *(void *)(v6[7] + 8 * i) = v22;
    uint64_t v23 = v6[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v25;
    unint64_t result = v22;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v28) {
      return v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v28) {
        return v6;
      }
      unint64_t v18 = *(void *)(v27 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v28) {
          return v6;
        }
        unint64_t v18 = *(void *)(v27 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v28) {
    return v6;
  }
  unint64_t v18 = *(void *)(v27 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v28) {
      return v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1000725B4()
{
  unint64_t result = qword_100139018;
  if (!qword_100139018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139018);
  }
  return result;
}

void sub_100072608(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10006D3BC(a1, a2, a3, a4, *(void **)(v4 + 16), *(id **)(v4 + 24), *(void *)(v4 + 32));
}

void sub_100072614(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10006D6C0(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(id **)(v4 + 32));
}

uint64_t sub_100072620()
{
  return sub_1000E90B0();
}

uint64_t sub_10007264C()
{
  uint64_t v1 = (int *)(type metadata accessor for ContentServiceRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = v2 | 7;
  uint64_t v5 = v0 + v3;

  uint64_t v6 = v5 + v1[7];
  uint64_t v7 = type metadata accessor for LayoutContext();
  uint64_t v8 = (char *)(v6 + *(int *)(v7 + 24));
  uint64_t v9 = sub_1000E9F60();
  uint64_t v10 = *(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = v6 + *(int *)(v7 + 32);
  uint64_t v12 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  unint64_t v13 = (id *)(v5 + v1[8]);

  uint64_t v14 = type metadata accessor for NewsWidgetInfo();
  v10((char *)v13 + *(int *)(v14 + 20), v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((((((v16 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16, v17);
}

id sub_100072888(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ContentServiceRequest() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_10006D8A8(a1, (id *)(v1 + v4), *(void **)(v1 + v5), *(void **)(v1 + v6), *(void *)(v1 + v7), *(void **)(v1 + v8), *(void (**)(void *))(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(uint64_t))(v1 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100072980()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000729C0(uint64_t a1)
{
  return sub_10006FBE0(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1000729CC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100072BCC(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E8B60();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  int64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 56) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_100028B6C((uint64_t)v10, (uint64_t *)&unk_1001370F0);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_100072FC0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v170 = a3;
  uint64_t v148 = type metadata accessor for ImageStore.Key();
  uint64_t v151 = *(void *)(v148 - 8);
  uint64_t v4 = __chkstk_darwin(v148);
  uint64_t v6 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v158 = (uint64_t)&v147 - v7;
  uint64_t v8 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v147 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (uint64_t)&v147 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  v169 = (char *)&v147 - v19;
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v147 - v20;
  uint64_t v22 = sub_1000E8B60();
  uint64_t v160 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  v155 = (char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v166 = (char *)&v147 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v156 = (char *)&v147 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v167 = (char *)&v147 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v174 = (char *)&v147 - v32;
  __chkstk_darwin(v31);
  int64_t v34 = (char *)&v147 - v33;
  v182 = &_swiftEmptyDictionarySingleton;
  id v35 = [a2 banner];
  v168 = v14;
  uint64_t v179 = v22;
  if (v35)
  {
    uint64_t v36 = v35;
    if ([v35 imageMethod] != (id)2)
    {

      goto LABEL_10;
    }
    id v37 = [v36 imageURL];
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v39 = v6;
      uint64_t v40 = v174;
      sub_1000E8B20();

      uint64_t v41 = v160;
      uint64_t v42 = v40;
      uint64_t v6 = v39;
      uint64_t v43 = v179;
      v178 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v160 + 32);
      ((void (*)(char *, char *, uint64_t))v178)(v21, v42, v179);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v21, 0, 1, v43);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v21, 1, v43) != 1)
      {
        ((void (*)(char *, char *, uint64_t))v178)(v34, v21, v43);
        sub_100070CEC((uint64_t)v34, v170, (uint64_t *)&v182);

        (*(void (**)(char *, uint64_t))(v160 + 8))(v34, v43);
LABEL_9:
        uint64_t v14 = v168;
        goto LABEL_10;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v21, 1, 1, v22);
    }

    sub_100028B6C((uint64_t)v21, (uint64_t *)&unk_1001370F0);
    goto LABEL_9;
  }
LABEL_10:
  id v44 = [a2 sections];
  id v45 = [v44 array];

  uint64_t v46 = sub_1000EA470();
  unint64_t v47 = (unint64_t)sub_100084B00(v46);
  swift_bridgeObjectRelease();
  v157 = v6;
  unint64_t v152 = v47;
  if (v47 >> 62) {
    goto LABEL_99;
  }
  uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v49 = (uint64_t)v167;
  if (!v48)
  {
LABEL_100:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    return v182;
  }
LABEL_12:
  unint64_t v50 = 0;
  unint64_t v154 = v152 & 0xC000000000000001;
  uint64_t v150 = v152 & 0xFFFFFFFFFFFFFF8;
  unint64_t v149 = v152 + 32;
  v177 = (void (**)(char *, char *, uint64_t))(v160 + 32);
  v178 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56);
  v175 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
  uint64_t v162 = v160 + 16;
  v165 = (void (**)(void))(v160 + 8);
  v163 = v11;
  uint64_t v164 = v17;
  uint64_t v153 = v48;
  while (1)
  {
    if (v154)
    {
      id v51 = (id)sub_1000EA870();
    }
    else
    {
      if (v50 >= *(void *)(v150 + 16)) {
        goto LABEL_94;
      }
      id v51 = *(id *)(v149 + 8 * v50);
    }
    id v161 = v51;
    BOOL v52 = __OFADD__(v50, 1);
    unint64_t v53 = v50 + 1;
    if (v52)
    {
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1000EA980();
      swift_bridgeObjectRelease();
      uint64_t v49 = (uint64_t)v167;
      if (!v48) {
        goto LABEL_100;
      }
      goto LABEL_12;
    }
    unint64_t v159 = v53;
    sub_100084480();
    unint64_t v55 = v54;
    if (v54 >> 62) {
      break;
    }
    uint64_t v56 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v56) {
      goto LABEL_21;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    unint64_t v50 = v159;
    if (v159 == v153) {
      goto LABEL_100;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_1000EA980();
  swift_bridgeObjectRelease();
  if (!v56) {
    goto LABEL_13;
  }
LABEL_21:
  unint64_t v176 = v55 & 0xC000000000000001;
  uint64_t v17 = 4;
  uint64_t v171 = v56;
  unint64_t v172 = v55;
  while (1)
  {
    uint64_t v57 = v17 - 4;
    if (v176)
    {
      sub_1000EA870();
      uint64_t v11 = (char *)(v17 - 3);
      if (__OFADD__(v57, 1)) {
        goto LABEL_92;
      }
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v11 = (char *)(v17 - 3);
      if (__OFADD__(v57, 1))
      {
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
    }
    v181 = &OBJC_PROTOCOL___NTHeadlineProviding;
    uint64_t v58 = swift_dynamicCastObjCProtocolConditional();
    if (v58) {
      break;
    }
    swift_unknownObjectRelease();
LABEL_23:
    ++v17;
    if (v11 == (char *)v56) {
      goto LABEL_13;
    }
  }
  id v59 = (void *)v58;
  swift_unknownObjectRetain();
  id v60 = [v59 thumbnailRemoteURL];
  if (!v60)
  {
    id v69 = *v178;
    uint64_t v64 = (uint64_t)v169;
    (*v178)(v169, 1, 1, v179);
    goto LABEL_34;
  }
  uint64_t v61 = v60;
  v173 = v11;
  id v62 = v174;
  sub_1000E8B20();

  uint64_t v63 = *v177;
  uint64_t v64 = (uint64_t)v169;
  uint64_t v65 = v62;
  uint64_t v66 = v179;
  (*v177)(v169, v65, v179);
  uint64_t v67 = *v178;
  (*v178)((char *)v64, 0, 1, v66);
  uint64_t v68 = *v175;
  if ((*v175)(v64, 1, v66) == 1)
  {
    uint64_t v14 = v168;
    id v69 = v67;
    uint64_t v11 = v173;
LABEL_34:
    sub_100028B6C(v64, (uint64_t *)&unk_1001370F0);
    goto LABEL_46;
  }
  v63((char *)v49, (char *)v64, v66);
  if (*(void *)(v170 + 16) && (unint64_t v70 = sub_10003BE2C(v49), (v71 & 1) != 0))
  {
    uint64_t v72 = *(void (**)(uint64_t, unint64_t, uint64_t))(v160 + 16);
    uint64_t v73 = v164;
    uint64_t v74 = v179;
    v72(v164, *(void *)(v170 + 56) + *(void *)(v160 + 72) * v70, v179);
    id v69 = v67;
    v67((char *)v73, 0, 1, v74);
    unsigned int v75 = v68(v73, 1, v74);
    uint64_t v14 = v168;
    if (v75 != 1)
    {
      uint64_t v76 = v179;
      v63(v156, (char *)v73, v179);
      uint64_t v77 = v158;
      v72(v158, (unint64_t)v167, v76);
      v67((char *)v77, 0, 1, v76);
      sub_1000E8B30();
      id v78 = objc_allocWithZone((Class)UIImage);
      NSString v79 = sub_1000EA280();
      swift_bridgeObjectRelease();
      uint64_t v14 = (char *)[v78 initWithContentsOfFile:v79];

      swift_beginAccess();
      uint64_t v11 = v173;
      if (v14)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v81 = v182;
        v180 = v182;
        v182 = (void *)0x8000000000000000;
        unint64_t v83 = sub_10003BC3C(v77);
        uint64_t v84 = v81[2];
        BOOL v85 = (v82 & 1) == 0;
        uint64_t v86 = v84 + v85;
        if (__OFADD__(v84, v85)) {
          goto LABEL_95;
        }
        char v87 = isUniquelyReferenced_nonNull_native;
        if (v81[3] >= v86)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            char v145 = v82;
            sub_1000BF14C();
            char v82 = v145;
          }
        }
        else
        {
          char v88 = v82;
          sub_1000BDC78(v86, v87);
          unint64_t v89 = sub_10003BC3C(v158);
          if ((v88 & 1) != (v90 & 1)) {
            goto LABEL_101;
          }
          unint64_t v83 = v89;
          char v82 = v88;
        }
        uint64_t v135 = v158;
        uint64_t v136 = v180;
        if (v82)
        {
          id v137 = v14;
          uint64_t v138 = v180[7];
          uint64_t v139 = 8 * v83;

          *(void *)(v138 + v139) = v137;
        }
        else
        {
          v180[(v83 >> 6) + 8] |= 1 << v83;
          sub_1000742CC(v135, v136[6] + *(void *)(v151 + 72) * v83, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
          *(void *)(v136[7] + 8 * v83) = v14;
          uint64_t v140 = v136[2];
          BOOL v52 = __OFADD__(v140, 1);
          uint64_t v141 = v140 + 1;
          if (v52) {
            goto LABEL_97;
          }
          v136[2] = v141;
        }
        v182 = v136;
        swift_bridgeObjectRelease();
        sub_10007426C(v158, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
        uint64_t v14 = v168;
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v122 = sub_10003BC3C(v77);
        char v124 = v123;
        swift_bridgeObjectRelease();
        if (v124)
        {
          char v125 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v126 = (uint64_t)v182;
          v180 = v182;
          v182 = (void *)0x8000000000000000;
          uint64_t v14 = v168;
          if ((v125 & 1) == 0)
          {
            sub_1000BF14C();
            uint64_t v126 = (uint64_t)v180;
          }
          sub_10007426C(*(void *)(v126 + 48) + *(void *)(v151 + 72) * v122, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
          uint64_t v127 = *(void **)(*(void *)(v126 + 56) + 8 * v122);
          sub_100071EA8(v122, v126);
          v182 = (void *)v126;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v127 = 0;
          uint64_t v14 = v168;
        }
        sub_10007426C(v158, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      }
      swift_endAccess();
      id v91 = *v165;
      ((void (*)(char *, uint64_t))*v165)(v156, v179);
      uint64_t v92 = v167;
      goto LABEL_45;
    }
  }
  else
  {
    uint64_t v73 = v164;
    id v69 = v67;
    v67((char *)v164, 1, 1, v179);
    uint64_t v14 = v168;
  }
  sub_100028B6C(v73, (uint64_t *)&unk_1001370F0);
  id v91 = *v165;
  uint64_t v92 = v167;
  uint64_t v11 = v173;
LABEL_45:
  uint64_t v49 = (uint64_t)v92;
  v91();
LABEL_46:
  id v93 = [v59 sourceNameImageRemoteURL];
  if (!v93)
  {
    v69(v14, 1, 1, v179);
    goto LABEL_59;
  }
  id v94 = v93;
  NSString v95 = v174;
  sub_1000E8B20();

  id v96 = *v177;
  uint64_t v97 = v95;
  uint64_t v98 = v179;
  (*v177)(v14, v97, v179);
  v69(v14, 0, 1, v98);
  uint64_t v99 = *v175;
  if ((*v175)((uint64_t)v14, 1, v98) == 1)
  {
LABEL_59:
    swift_unknownObjectRelease_n();
    sub_100028B6C((uint64_t)v14, (uint64_t *)&unk_1001370F0);
LABEL_62:
    uint64_t v56 = v171;
    goto LABEL_23;
  }
  uint64_t v100 = (uint64_t)v166;
  v96(v166, v14, v98);
  if (!*(void *)(v170 + 16) || (unint64_t v101 = sub_10003BE2C(v100), (v102 & 1) == 0))
  {
    uint64_t v104 = (uint64_t)v163;
    uint64_t v105 = v179;
    v69(v163, 1, 1, v179);
    goto LABEL_61;
  }
  uint64_t v103 = *(void (**)(char *, unint64_t, uint64_t))(v160 + 16);
  uint64_t v104 = (uint64_t)v163;
  uint64_t v105 = v179;
  v103(v163, *(void *)(v170 + 56) + *(void *)(v160 + 72) * v101, v179);
  v69((char *)v104, 0, 1, v105);
  if (v99(v104, 1, v105) == 1)
  {
LABEL_61:
    sub_100028B6C(v104, (uint64_t *)&unk_1001370F0);
    swift_unknownObjectRelease_n();
    uint64_t v49 = (uint64_t)v167;
    uint64_t v14 = v168;
    ((void (*)(char *, uint64_t))*v165)(v166, v105);
    goto LABEL_62;
  }
  v96(v155, (char *)v104, v105);
  uint64_t v14 = v157;
  v103(v157, (unint64_t)v166, v105);
  v69(v14, 0, 1, v105);
  sub_1000E8B30();
  id v106 = objc_allocWithZone((Class)UIImage);
  NSString v107 = sub_1000EA280();
  swift_bridgeObjectRelease();
  uint64_t v108 = (char *)[v106 initWithContentsOfFile:v107];

  swift_beginAccess();
  uint64_t v49 = (uint64_t)v167;
  if (!v108)
  {
    swift_bridgeObjectRetain();
    unint64_t v128 = sub_10003BC3C((uint64_t)v14);
    char v130 = v129;
    swift_bridgeObjectRelease();
    if (v130)
    {
      char v131 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v132 = (uint64_t)v182;
      v180 = v182;
      v182 = (void *)0x8000000000000000;
      uint64_t v14 = v168;
      uint64_t v133 = v166;
      if ((v131 & 1) == 0)
      {
        sub_1000BF14C();
        uint64_t v132 = (uint64_t)v180;
      }
      sub_10007426C(*(void *)(v132 + 48) + *(void *)(v151 + 72) * v128, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      uint64_t v134 = *(void **)(*(void *)(v132 + 56) + 8 * v128);
      sub_100071EA8(v128, v132);
      v182 = (void *)v132;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v134 = 0;
      uint64_t v14 = v168;
      uint64_t v133 = v166;
    }
    sub_10007426C((uint64_t)v157, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);

    goto LABEL_87;
  }
  v173 = v108;
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v110 = v182;
  v180 = v182;
  v182 = (void *)0x8000000000000000;
  unint64_t v112 = sub_10003BC3C((uint64_t)v14);
  uint64_t v113 = v110[2];
  BOOL v114 = (v111 & 1) == 0;
  uint64_t v115 = v113 + v114;
  if (__OFADD__(v113, v114)) {
    goto LABEL_96;
  }
  char v116 = v111;
  if (v110[3] >= v115)
  {
    uint64_t v14 = v168;
    if (v109)
    {
      uint64_t v119 = v180;
      if ((v111 & 1) == 0) {
        goto LABEL_56;
      }
    }
    else
    {
      sub_1000BF14C();
      uint64_t v119 = v180;
      if ((v116 & 1) == 0) {
        goto LABEL_56;
      }
    }
    goto LABEL_80;
  }
  sub_1000BDC78(v115, v109);
  unint64_t v117 = sub_10003BC3C((uint64_t)v157);
  uint64_t v14 = v168;
  if ((v116 & 1) == (v118 & 1))
  {
    unint64_t v112 = v117;
    uint64_t v119 = v180;
    if ((v116 & 1) == 0)
    {
LABEL_56:
      v119[(v112 >> 6) + 8] |= 1 << v112;
      sub_1000742CC((uint64_t)v157, v119[6] + *(void *)(v151 + 72) * v112, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
      *(void *)(v119[7] + 8 * v112) = v173;
      uint64_t v120 = v119[2];
      BOOL v52 = __OFADD__(v120, 1);
      uint64_t v121 = v120 + 1;
      if (v52) {
        goto LABEL_98;
      }
      v119[2] = v121;
      goto LABEL_81;
    }
LABEL_80:
    uint64_t v142 = v119[7];
    uint64_t v143 = 8 * v112;

    *(void *)(v142 + v143) = v173;
LABEL_81:
    v182 = v119;
    swift_bridgeObjectRelease();
    sub_10007426C((uint64_t)v157, (uint64_t (*)(void))type metadata accessor for ImageStore.Key);
    uint64_t v133 = v166;
LABEL_87:
    swift_endAccess();
    v144 = *v165;
    ((void (*)(char *, uint64_t))*v165)(v155, v105);
    swift_unknownObjectRelease_n();
    ((void (*)(char *, uint64_t))v144)(v133, v105);
    goto LABEL_62;
  }
LABEL_101:
  uint64_t result = (void *)sub_1000EAB50();
  __break(1u);
  return result;
}

uint64_t sub_100074204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C(&qword_100139050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007426C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000742CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100074334(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007439C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000743E4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007441C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_100074454()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10007447C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007448C()
{
  return swift_release();
}

uint64_t sub_100074494()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000744BC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for ContentService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000745C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentService.Errors()
{
  return &type metadata for ContentService.Errors;
}

void **sub_1000745F8(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for LayoutContext();
    uint64_t v12 = v11[6];
    uint64_t v33 = &v10[v12];
    int64_t v34 = &v9[v12];
    uint64_t v13 = sub_1000E9F60();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v4;
    v14(v34, v33, v13);
    *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
    uint64_t v16 = v11[8];
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    uint64_t v19 = sub_1000E96F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *(void *)&v9[v11[9]] = *(void *)&v10[v11[9]];
    *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
    v9[v11[11]] = v10[v11[11]];
    v9[v11[12]] = v10[v11[12]];
    uint64_t v20 = *(int *)(a3 + 24);
    unint64_t v21 = (char *)v7 + v20;
    uint64_t v22 = (char *)a2 + v20;
    long long v35 = *(_OWORD *)((char *)a2 + v20);
    *(_OWORD *)((char *)v7 + v20) = v35;
    uint64_t v23 = type metadata accessor for NewsWidgetInfo();
    uint64_t v24 = *(int *)(v23 + 20);
    uint64_t v25 = &v21[v24];
    uint64_t v26 = &v22[v24];
    id v27 = (id)v35;
    v14(v25, v26, v13);
    uint64_t v28 = *(int *)(v23 + 24);
    uint64_t v29 = &v21[v28];
    uint64_t v30 = &v22[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_100074808(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for LayoutContext();
  unsigned int v6 = &v4[*(int *)(v5 + 24)];
  uint64_t v7 = sub_1000E9F60();
  uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = &v4[*(int *)(v5 + 32)];
  uint64_t v10 = sub_1000E96F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (id *)((char *)a1 + *(int *)(a2 + 24));

  uint64_t v12 = type metadata accessor for NewsWidgetInfo();
  v8((char *)v11 + *(int *)(v12 + 20), v7);

  return swift_bridgeObjectRelease();
}

void **sub_100074934(void **a1, void **a2, uint64_t a3)
{
  unsigned int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  unsigned int v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for LayoutContext();
  uint64_t v9 = v8[6];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_1000E9F60();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v4;
  v13(v10, v11, v12);
  *(_OWORD *)&v6[v8[7]] = *(_OWORD *)&v7[v8[7]];
  uint64_t v15 = v8[8];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  uint64_t v18 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(void *)&v6[v8[9]] = *(void *)&v7[v8[9]];
  *(void *)&v6[v8[10]] = *(void *)&v7[v8[10]];
  v6[v8[11]] = v7[v8[11]];
  v6[v8[12]] = v7[v8[12]];
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (char *)a1 + v19;
  unint64_t v21 = (char *)a2 + v19;
  long long v34 = *(_OWORD *)((char *)a2 + v19);
  *(_OWORD *)((char *)a1 + v19) = v34;
  uint64_t v22 = type metadata accessor for NewsWidgetInfo();
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  id v26 = (id)v34;
  v13(v24, v25, v12);
  uint64_t v27 = *(int *)(v22 + 24);
  uint64_t v28 = &v20[v27];
  uint64_t v29 = &v21[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_100074AF0(void **a1, void **a2, uint64_t a3)
{
  unsigned int v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void **)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  *uint64_t v10 = *(void **)((char *)a2 + v9);
  v10[1] = *(void **)((char *)a2 + v9 + 8);
  uint64_t v12 = (int *)type metadata accessor for LayoutContext();
  uint64_t v13 = v12[6];
  id v14 = (char *)v10 + v13;
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_1000E9F60();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  uint64_t v18 = v12[7];
  uint64_t v19 = (void *)((char *)v10 + v18);
  uint64_t v20 = &v11[v18];
  *uint64_t v19 = *(void *)v20;
  v19[1] = *((void *)v20 + 1);
  uint64_t v21 = v12[8];
  uint64_t v22 = (char *)v10 + v21;
  uint64_t v23 = &v11[v21];
  uint64_t v24 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(void *)((char *)v10 + v12[9]) = *(void *)&v11[v12[9]];
  *(void *)((char *)v10 + v12[10]) = *(void *)&v11[v12[10]];
  *((unsigned char *)v10 + v12[11]) = v11[v12[11]];
  *((unsigned char *)v10 + v12[12]) = v11[v12[12]];
  uint64_t v25 = *(int *)(a3 + 24);
  id v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void **)((char *)a2 + v25);
  uint64_t v29 = *((void *)v27 + 1);
  uint64_t v30 = *(void **)v26;
  *(void *)id v26 = v28;
  id v31 = v28;

  *((void *)v26 + 1) = v29;
  uint64_t v32 = type metadata accessor for NewsWidgetInfo();
  v17(&v26[*(int *)(v32 + 20)], &v27[*(int *)(v32 + 20)], v16);
  uint64_t v33 = *(int *)(v32 + 24);
  long long v34 = &v26[v33];
  long long v35 = &v27[v33];
  *(void *)long long v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100074CE0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  unsigned int v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  id v8 = (int *)type metadata accessor for LayoutContext();
  uint64_t v9 = v8[6];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_1000E9F60();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  *(_OWORD *)&v6[v8[7]] = *(_OWORD *)&v7[v8[7]];
  uint64_t v14 = v8[8];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  uint64_t v17 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(void *)&v6[v8[9]] = *(void *)&v7[v8[9]];
  *(void *)&v6[v8[10]] = *(void *)&v7[v8[10]];
  v6[v8[11]] = v7[v8[11]];
  v6[v8[12]] = v7[v8[12]];
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for NewsWidgetInfo();
  v13(&v19[*(int *)(v21 + 20)], &v20[*(int *)(v21 + 20)], v12);
  *(_OWORD *)&v19[*(int *)(v21 + 24)] = *(_OWORD *)&v20[*(int *)(v21 + 24)];
  return a1;
}

void **sub_100074E78(void **a1, void **a2, uint64_t a3)
{
  unsigned int v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for LayoutContext();
  uint64_t v11 = v10[6];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_1000E9F60();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  *(_OWORD *)&v8[v10[7]] = *(_OWORD *)&v9[v10[7]];
  uint64_t v16 = v10[8];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(void *)&v8[v10[9]] = *(void *)&v9[v10[9]];
  *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
  v8[v10[11]] = v9[v10[11]];
  v8[v10[12]] = v9[v10[12]];
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(uint64_t *)((char *)a2 + v20);
  uint64_t v24 = *((void *)v22 + 1);
  uint64_t v25 = *(void **)v21;
  *(void *)uint64_t v21 = v23;

  *((void *)v21 + 1) = v24;
  uint64_t v26 = type metadata accessor for NewsWidgetInfo();
  v15(&v21[*(int *)(v26 + 20)], &v22[*(int *)(v26 + 20)], v14);
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100075038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007504C);
}

uint64_t sub_10007504C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for LayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for NewsWidgetInfo();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100075178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007518C);
}

void *sub_10007518C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for LayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for NewsWidgetInfo();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1000752B8()
{
  uint64_t result = type metadata accessor for LayoutContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NewsWidgetInfo();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100075394()
{
  unint64_t result = qword_100139160;
  if (!qword_100139160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139160);
  }
  return result;
}

UIColor __swiftcall UIColor.init(hex:)(Swift::String hex)
{
  uint64_t v1 = sub_1000757CC(hex._countAndFlagsBits, (unint64_t)hex._object);
  unint64_t v3 = v2;
  result.super.Class isa = (Class)swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v3) & 0xF;
  uint64_t v6 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v7 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    LODWORD(v1) = sub_100075C9C(v1, v3, 16);
    char v10 = v26;
    goto LABEL_48;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v1 & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1000EA8B0();
    }
    LODWORD(v1) = sub_100075D9C(v8, v6, 16);
    char v10 = v9 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return (UIColor)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRed:(double)BYTE3(v1) / 255.0 green:(double)BYTE2(v1) / 255.0 blue:(double)BYTE1(v1) / 255.0 alpha:(double)v1 / 255.0];
    }
LABEL_51:
    id v24 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v31 = sub_100075BF4;
    uint64_t v32 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_100075C34;
    uint64_t v30 = &unk_1001268A0;
    uint64_t v25 = _Block_copy(&aBlock);
    id v23 = [v24 initWithDynamicProvider:v25];
    _Block_release(v25);
    return (UIColor)v23;
  }
  aBlock = (void **)v1;
  uint64_t v28 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v1 == 43)
  {
    if (v5)
    {
      uint64_t v16 = v5 - 1;
      if (v16)
      {
        uint64_t v1 = 0;
        uint64_t v17 = (unsigned __int8 *)&aBlock + 1;
        while (1)
        {
          int v18 = *v17;
          unsigned __int8 v19 = v18 - 48;
          if ((v18 - 48) >= 0xA)
          {
            if ((v18 - 65) < 6)
            {
              unsigned __int8 v19 = v18 - 55;
            }
            else
            {
              if ((v18 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v19 = v18 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFADD__(16 * v1, v19);
          uint64_t v1 = 16 * v1 + v19;
          if (v15) {
            break;
          }
          ++v17;
          if (!--v16)
          {
LABEL_46:
            char v10 = 0;
            goto LABEL_48;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else
  {
    if (v1 != 45)
    {
      if (v5)
      {
        uint64_t v1 = 0;
        p_aBlock = &aBlock;
        while (1)
        {
          int v21 = *(unsigned __int8 *)p_aBlock;
          unsigned __int8 v22 = v21 - 48;
          if ((v21 - 48) >= 0xA)
          {
            if ((v21 - 65) < 6)
            {
              unsigned __int8 v22 = v21 - 55;
            }
            else
            {
              if ((v21 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v22 = v21 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFADD__(16 * v1, v22);
          uint64_t v1 = 16 * v1 + v22;
          if (v15) {
            break;
          }
          p_aBlock = (void ***)((char *)p_aBlock + 1);
          if (!--v5) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_47;
    }
    if (v5)
    {
      uint64_t v11 = v5 - 1;
      if (v11)
      {
        uint64_t v1 = 0;
        uint64_t v12 = (unsigned __int8 *)&aBlock + 1;
        while (1)
        {
          int v13 = *v12;
          unsigned __int8 v14 = v13 - 48;
          if ((v13 - 48) >= 0xA)
          {
            if ((v13 - 65) < 6)
            {
              unsigned __int8 v14 = v13 - 55;
            }
            else
            {
              if ((v13 - 97) > 5) {
                break;
              }
              unsigned __int8 v14 = v13 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFSUB__(16 * v1, v14);
          uint64_t v1 = 16 * v1 - v14;
          if (v15) {
            break;
          }
          ++v12;
          if (!--v11) {
            goto LABEL_46;
          }
        }
      }
LABEL_47:
      LODWORD(v1) = 0;
      char v10 = 1;
      goto LABEL_48;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

UIColor __swiftcall UIColor.init(hex:)(Swift::Int hex)
{
  int v1 = hex;
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (UIColor)[v2 initWithRed:(double)HIBYTE(v1) / 255.0 green:(double)BYTE2(v1) / 255.0 blue:(double)BYTE1(v1) / 255.0 alpha:(double)v1 / 255.0];
}

uint64_t sub_1000757CC(uint64_t a1, unint64_t a2)
{
  v7._countAndFlagsBits = 35;
  v7._object = (void *)0xE100000000000000;
  BOOL v4 = sub_1000EA3E0(v7);
  swift_bridgeObjectRetain();
  if (v4)
  {
    sub_100076504(1uLL, a1, a2);
    swift_bridgeObjectRelease();
    a1 = sub_1000EA310();
    swift_bridgeObjectRelease();
  }
  if (sub_1000EA340() != 8)
  {
    if (sub_1000EA340() == 6)
    {
      uint64_t v6 = a1;
LABEL_10:
      v8._countAndFlagsBits = 17990;
      v8._object = (void *)0xE200000000000000;
      sub_1000EA370(v8);
      return v6;
    }
    if (sub_1000EA340() == 4)
    {
      sub_1000EA360();
      sub_1000EA3F0();
      sub_1000EA360();
      sub_1000EA3F0();
      sub_1000EA360();
      sub_1000EA3F0();
      sub_1000EA360();
      sub_1000EA3F0();
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      sub_1000EA840(16);
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      return v6;
    }
    if (sub_1000EA340() == 3)
    {
      sub_1000EA360();
      sub_1000EA3F0();
      sub_1000EA360();
      sub_1000EA3F0();
      sub_1000EA360();
      sub_1000EA3F0();
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      sub_1000EA1F0();
      sub_1000EA1F0();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  return a1;
}

id sub_100075BF4()
{
  id v0 = [self clearColor];

  return v0;
}

id sub_100075C34(uint64_t a1, void *a2)
{
  unint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

unsigned __int8 *sub_100075C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000EA400();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    Swift::String v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100076018();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    Swift::String v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    Swift::String v7 = (unsigned __int8 *)sub_1000EA8B0();
  }
LABEL_7:
  uint64_t v11 = sub_100075D9C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100075D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100075D94()
{
  return swift_release();
}

unsigned __int8 *sub_100075D9C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100076018()
{
  unint64_t v0 = sub_1000EA410();
  uint64_t v4 = sub_100076098(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100076098(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1000761F0(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1000B221C(v9, 0),
          unint64_t v12 = sub_1000762F0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1000EA320();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1000EA320();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1000EA8B0();
LABEL_4:

  return sub_1000EA320();
}

uint64_t sub_1000761F0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1000B2284(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1000B2284(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_1000762F0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    uint64_t v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    UIColor result = v12;
    if (v17 == v15) {
      UIColor result = sub_1000B2284(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      UIColor result = sub_1000EA3C0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        UIColor result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          UIColor result = sub_1000EA8B0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    UIColor result = sub_1000B2284(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1000EA390();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_100076504(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  UIColor result = sub_1000EA350();
  if (v6) {
    UIColor result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_1000EA410();
}

NSString *sub_1000765B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000E96F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for ContentSizeCategory.extraSmall(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryExtraSmall;
  }
  else if (v6 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v7 = &UIContentSizeCategorySmall;
  }
  else if (v6 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryMedium;
  }
  else if (v6 == enum case for ContentSizeCategory.large(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryLarge;
  }
  else if (v6 == enum case for ContentSizeCategory.extraLarge(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryExtraLarge;
  }
  else if (v6 == enum case for ContentSizeCategory.extraExtraLarge(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryExtraExtraLarge;
  }
  else if (v6 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryExtraExtraExtraLarge;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityMedium(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryAccessibilityMedium;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityLarge(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryAccessibilityLarge;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryAccessibilityExtraLarge;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
  {
    unint64_t v7 = &UIContentSizeCategoryAccessibilityExtraExtraLarge;
  }
  else
  {
    if (v6 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      unint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v11 = UIContentSizeCategoryUnspecified;
      v10(v5, v2);
      return v11;
    }
    unint64_t v7 = &UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  }
  UIContentSizeCategory v8 = *v7;

  return v8;
}

uint64_t sub_100076874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v45 = a1;
  uint64_t v46 = a3;
  uint64_t v4 = sub_1000E96F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v47 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - v8;
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v43 = v3;
  uint64_t v48 = v10;
  v10((char *)&v30 - v8, v3, v4);
  uint64_t v35 = v5;
  id v44 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v11 = v44(v9, v4);
  int v12 = v11;
  int v13 = enum case for ContentSizeCategory.extraSmall(_:);
  int v41 = enum case for ContentSizeCategory.small(_:);
  BOOL v15 = v11 == enum case for ContentSizeCategory.extraSmall(_:) || v11 == enum case for ContentSizeCategory.small(_:);
  BOOL v39 = v15;
  int v40 = enum case for ContentSizeCategory.medium(_:);
  if (v11 == enum case for ContentSizeCategory.medium(_:)) {
    BOOL v15 = 1;
  }
  int v16 = 1;
  BOOL v37 = v15;
  int v38 = enum case for ContentSizeCategory.large(_:);
  if (v15)
  {
    int v17 = 1;
    int v18 = 1;
    int v19 = 1;
    int v20 = 1;
    char v21 = 1;
    char v22 = 1;
    char v23 = 1;
  }
  else
  {
    int v17 = 1;
    int v18 = 1;
    int v19 = 1;
    int v20 = 1;
    char v21 = 1;
    char v22 = 1;
    char v23 = 1;
    if (v11 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_28;
    }
    if (v11 == enum case for ContentSizeCategory.extraLarge(_:)) {
      goto LABEL_26;
    }
    if (v11 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
LABEL_25:
      char v22 = 0;
LABEL_26:
      char v23 = 0;
      goto LABEL_28;
    }
    if (v11 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
LABEL_24:
      char v21 = 0;
      goto LABEL_25;
    }
    if (v11 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
LABEL_23:
      int v20 = 0;
      goto LABEL_24;
    }
    if (v11 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
LABEL_22:
      int v19 = 0;
      goto LABEL_23;
    }
    if (v11 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
LABEL_21:
      int v18 = 0;
      goto LABEL_22;
    }
    if (v11 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
LABEL_20:
      int v17 = 0;
      goto LABEL_21;
    }
    if (v11 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      int v16 = 0;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v4);
    int v16 = 1;
    int v17 = 1;
    int v18 = 1;
    int v19 = 1;
    int v20 = 1;
  }
LABEL_28:
  int v36 = v20;
  int v33 = v18;
  int v34 = v19;
  int v31 = v16;
  int v32 = v17;
  unsigned __int8 v24 = v47;
  uint64_t v25 = v45;
  v48(v47, v45, v4);
  int v26 = v44(v24, v4);
  if (v26 != v13)
  {
    if (v26 == v41)
    {
      if (v12 == v13) {
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v46, v25, v4);
      }
    }
    else if (v26 == v40)
    {
      if (v39) {
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v46, v25, v4);
      }
    }
    else if (v26 == v38)
    {
      if (v37) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      if (v23) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      if (v22) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      if (v21) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      if (v36) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      if (v34) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      if (v33) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      if (v32) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else if (v26 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      if (v31) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v47, v4);
      if (v37) {
        return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
      }
    }
  }
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  if (sub_100076D18(v43, v42)) {
    uint64_t v25 = v28;
  }
  else {
    uint64_t v25 = v27;
  }
  return ((uint64_t (*)(void, void, void))v48)(v46, v25, v4);
}

BOOL sub_100076D18(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_1000E96F0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a2, v3);
  int v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

unint64_t sub_100077134()
{
  unint64_t result = qword_100139170;
  if (!qword_100139170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139170);
  }
  return result;
}

unint64_t sub_10007718C()
{
  unint64_t result = qword_100139178;
  if (!qword_100139178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139178);
  }
  return result;
}

unint64_t sub_1000771E4()
{
  unint64_t result = qword_100139180;
  if (!qword_100139180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139180);
  }
  return result;
}

unint64_t sub_10007723C()
{
  unint64_t result = qword_100139188;
  if (!qword_100139188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139188);
  }
  return result;
}

uint64_t sub_100077290()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000772AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000772FC()
{
  uint64_t v0 = sub_1000E8A60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E8CC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000EA270();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E8A70();
  sub_10001C500(v6, qword_10014BBF0);
  sub_10001C4C8(v6, (uint64_t)qword_10014BBF0);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000E8A80();
}

uint64_t sub_1000774DC@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135D40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000E8A70();
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BBF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100077584(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000775A4, 0, 0);
}

uint64_t sub_1000775A4()
{
  sub_1000E8620();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100077608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007767C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100077630(uint64_t a1)
{
  unint64_t v2 = sub_10007718C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for ToggleAudioPlaybackIntent()
{
  return &type metadata for ToggleAudioPlaybackIntent;
}

uint64_t sub_10007767C()
{
  uint64_t v0 = sub_1000E8860();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10001B38C(&qword_100136500);
  __chkstk_darwin(v2 - 8);
  int v26 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100139198);
  __chkstk_darwin(v4 - 8);
  uint64_t v25 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v6 - 8);
  unsigned __int8 v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E8A60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E8CC0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1000EA270();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1000E8A70();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v23[1] = sub_10001B38C(&qword_1001391A0);
  sub_1000EA260();
  sub_1000E8C90();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  int v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  sub_1000E8A80();
  sub_1000EA260();
  sub_1000E8C90();
  v17(v11, v16, v8);
  uint64_t v18 = v24;
  sub_1000E8A80();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = sub_1000EA250();
  long long v30 = 0uLL;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v25, 1, 1, v19);
  uint64_t v20 = sub_1000E8600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  uint64_t v21 = sub_1000E8680();
  sub_10001B38C(&qword_1001391A8);
  sub_1000E8550();
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v32 = 0;
  sub_1000E8540();
  sub_1000E8500();
  return v21;
}

uint64_t sub_100077BC8(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v32 = a1;
  *((void *)&v32 + 1) = a2;
  uint64_t v2 = sub_1000E8860();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  uint64_t v29 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136500);
  __chkstk_darwin(v4 - 8);
  uint64_t v28 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C(&qword_100139198);
  __chkstk_darwin(v6 - 8);
  uint64_t v27 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v8 - 8);
  int v26 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E8A60();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E8CC0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000EA270();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000E8A70();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v25[1] = sub_10001B38C(&qword_1001391A0);
  sub_1000EA260();
  sub_1000E8C90();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000E8A80();
  sub_1000EA260();
  sub_1000E8C90();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  sub_1000E8A80();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = sub_1000EA250();
  long long v33 = 0uLL;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  uint64_t v22 = sub_1000E8600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v28, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  uint64_t v23 = sub_1000E8680();
  sub_10001B38C(&qword_1001391A8);
  sub_1000E8550();
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v35 = 0;
  swift_retain();
  sub_1000E8540();
  sub_1000E8500();
  long long v33 = v32;
  swift_retain();
  swift_retain();
  sub_1000E8660();
  swift_release();
  swift_release_n();
  return v23;
}

void *sub_100078160(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001B38C(&qword_1001391B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E9290();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *((void *)v12 + 1);
    uint64_t v15 = *((void *)v12 + 2);
    uint64_t v16 = *((void *)v12 + 3);
    char v17 = v12[32];
    sub_100052470(*(void *)v12, v14, v15, v16, v17);
    *(void *)uint64_t v11 = v13;
    *((void *)v11 + 1) = v14;
    *((void *)v11 + 2) = v15;
    *((void *)v11 + 3) = v16;
    v11[32] = v17;
    uint64_t v85 = a3;
    char v87 = a2;
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void **)((char *)a2 + v18);
    *(void *)((char *)a1 + v18) = v21;
    uint64_t v84 = (int *)type metadata accessor for TodayContent();
    uint64_t v22 = v84[5];
    uint64_t v23 = &v19[v22];
    unsigned __int8 v24 = &v20[v22];
    uint64_t v25 = (int *)type metadata accessor for Banner();
    int v26 = (void *)*((void *)v25 - 1);
    uint64_t v27 = (unsigned int (*)(char *, uint64_t, int *))v26[6];
    id v28 = v21;
    unint64_t v89 = a1;
    if (v27(v24, 1, v25))
    {
      uint64_t v29 = sub_10001B38C(&qword_1001385E0);
      memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v81 = v25;
      char v82 = (void (**)(char *, void, uint64_t, int *))v26;
      uint64_t v30 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v30;
      uint64_t v31 = *((void *)v24 + 3);
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *((void *)v23 + 3) = v31;
      uint64_t v32 = *((void *)v24 + 5);
      *((void *)v23 + 4) = *((void *)v24 + 4);
      *((void *)v23 + 5) = v32;
      uint64_t v33 = v25[7];
      __dst = &v23[v33];
      long long v34 = &v24[v33];
      uint64_t v35 = sub_1000E8B60();
      uint64_t v78 = *(void *)(v35 - 8);
      uint64_t v80 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v78 + 48);
      int v36 = v34;
      uint64_t v37 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v80(v36, 1, v37))
      {
        uint64_t v38 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v78 + 16))(__dst, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(__dst, 0, 1, v37);
      }
      uint64_t v39 = v25[8];
      int v40 = &v23[v39];
      int v41 = &v24[v39];
      uint64_t v42 = *((void *)v41 + 1);
      *(void *)int v40 = *(void *)v41;
      *((void *)v40 + 1) = v42;
      uint64_t v43 = v25[9];
      id v44 = *(void **)&v24[v43];
      swift_bridgeObjectRetain();
      if (v44 != (void *)1) {
        id v45 = v44;
      }
      *(void *)&v23[v43] = v44;
      uint64_t v46 = v81[10];
      unint64_t v47 = &v23[v46];
      uint64_t v48 = &v24[v46];
      uint64_t v49 = *(void **)v48;
      unint64_t v50 = (void *)*((void *)v48 + 1);
      char v51 = v48[16];
      sub_10001D614(*(void **)v48, v50);
      *(void *)unint64_t v47 = v49;
      *((void *)v47 + 1) = v50;
      v47[16] = v51;
      v82[7](v23, 0, 1, v81);
    }
    *(void *)&v19[v84[6]] = *(void *)&v20[v84[6]];
    *(void *)&v19[v84[7]] = *(void *)&v20[v84[7]];
    v19[v84[8]] = v20[v84[8]];
    uint64_t v52 = v84[9];
    unint64_t v83 = &v19[v52];
    unint64_t v53 = &v20[v52];
    uint64_t v54 = sub_1000E8B60();
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v56(v53, 1, v54))
    {
      uint64_t v57 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v83, v53, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v83, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v83, 0, 1, v54);
    }
    *(void *)&v19[v84[10]] = *(void *)&v20[v84[10]];
    uint64_t v58 = v84[11];
    id v59 = &v19[v58];
    id v60 = &v20[v58];
    uint64_t v61 = *((void *)v60 + 1);
    *(void *)id v59 = *(void *)v60;
    *((void *)v59 + 1) = v61;
    uint64_t v62 = v84[12];
    uint64_t v63 = &v19[v62];
    uint64_t v64 = &v20[v62];
    uint64_t v65 = *((void *)v64 + 1);
    *(void *)uint64_t v63 = *(void *)v64;
    *((void *)v63 + 1) = v65;
    uint64_t v66 = *(int *)(v85 + 28);
    uint64_t v9 = v89;
    uint64_t v67 = (char *)v89 + v66;
    uint64_t v68 = (char *)v87 + v66;
    *(_OWORD *)((char *)v89 + v66) = *(_OWORD *)((char *)v87 + v66);
    id v69 = (int *)type metadata accessor for LayoutContext();
    uint64_t v70 = v69[6];
    uint64_t v86 = &v68[v70];
    char v88 = &v67[v70];
    uint64_t v71 = sub_1000E9F60();
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72(v88, v86, v71);
    *(_OWORD *)&v67[v69[7]] = *(_OWORD *)&v68[v69[7]];
    uint64_t v73 = v69[8];
    uint64_t v74 = &v67[v73];
    unsigned int v75 = &v68[v73];
    uint64_t v76 = sub_1000E96F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
    *(void *)&v67[v69[9]] = *(void *)&v68[v69[9]];
    *(void *)&v67[v69[10]] = *(void *)&v68[v69[10]];
    v67[v69[11]] = v68[v69[11]];
    v67[v69[12]] = v68[v69[12]];
  }
  return v9;
}

uint64_t sub_100078794(uint64_t a1, int *a2)
{
  sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E9290();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_1000528C4(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  uint64_t v6 = (id *)(a1 + a2[6]);

  uint64_t v7 = type metadata accessor for TodayContent();
  uint64_t v8 = (char *)v6 + *(int *)(v7 + 20);
  uint64_t v9 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = &v8[v9[7]];
    uint64_t v11 = sub_1000E8B60();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)&v8[v9[9]];
    if (v13 != (void *)1) {

    }
    sub_10001D758(*(void **)&v8[v9[10]], *(void **)&v8[v9[10] + 8]);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v14 = (char *)v6 + *(int *)(v7 + 36);
  uint64_t v15 = sub_1000E8B60();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + a2[7];
  uint64_t v18 = type metadata accessor for LayoutContext();
  uint64_t v19 = v17 + *(int *)(v18 + 24);
  uint64_t v20 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v17 + *(int *)(v18 + 32);
  uint64_t v22 = sub_1000E96F0();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

void *sub_100078AE8(void *a1, void *a2, uint64_t a3)
{
  sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E9290();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  char v14 = v9[32];
  sub_100052470(*(void *)v9, v11, v12, v13, v14);
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  *((void *)v8 + 2) = v12;
  *((void *)v8 + 3) = v13;
  v8[32] = v14;
  uint64_t v79 = a3;
  uint64_t v80 = a2;
  uint64_t v15 = *(int *)(a3 + 24);
  char v82 = a1;
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void **)((char *)a2 + v15);
  *uint64_t v16 = v18;
  uint64_t v19 = (int *)type metadata accessor for TodayContent();
  uint64_t v20 = v19[5];
  uint64_t v21 = (void *)((char *)v16 + v20);
  uint64_t v22 = &v17[v20];
  uint64_t v23 = (int *)type metadata accessor for Banner();
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, int *))(v24 + 48);
  id v26 = v18;
  if (v25(v22, 1, v23))
  {
    uint64_t v27 = sub_10001B38C(&qword_1001385E0);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = *((void *)v22 + 1);
    void *v21 = *(void *)v22;
    v21[1] = v28;
    uint64_t v29 = *((void *)v22 + 3);
    v21[2] = *((void *)v22 + 2);
    _OWORD v21[3] = v29;
    uint64_t v30 = *((void *)v22 + 5);
    v21[4] = *((void *)v22 + 4);
    void v21[5] = v30;
    uint64_t v31 = v23[7];
    __dst = (char *)v21 + v31;
    uint64_t v76 = &v22[v31];
    uint64_t v32 = sub_1000E8B60();
    uint64_t v74 = *(void *)(v32 - 8);
    unsigned int v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75(v76, 1, v32))
    {
      uint64_t v33 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v76, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, v76, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v32);
    }
    uint64_t v34 = v23[8];
    uint64_t v35 = (void *)((char *)v21 + v34);
    int v36 = &v22[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *uint64_t v35 = *(void *)v36;
    v35[1] = v37;
    uint64_t v38 = v23[9];
    uint64_t v39 = *(void **)&v22[v38];
    swift_bridgeObjectRetain();
    if (v39 != (void *)1) {
      id v40 = v39;
    }
    *(void *)((char *)v21 + v38) = v39;
    uint64_t v41 = v23[10];
    uint64_t v42 = (char *)v21 + v41;
    uint64_t v43 = &v22[v41];
    id v44 = *(void **)v43;
    id v45 = (void *)*((void *)v43 + 1);
    char v46 = v43[16];
    sub_10001D614(*(void **)v43, v45);
    *(void *)uint64_t v42 = v44;
    *((void *)v42 + 1) = v45;
    v42[16] = v46;
    (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
  }
  *(void *)((char *)v16 + v19[6]) = *(void *)&v17[v19[6]];
  *(void *)((char *)v16 + v19[7]) = *(void *)&v17[v19[7]];
  *((unsigned char *)v16 + v19[8]) = v17[v19[8]];
  uint64_t v47 = v19[9];
  uint64_t v78 = (char *)v16 + v47;
  uint64_t v48 = &v17[v47];
  uint64_t v49 = sub_1000E8B60();
  uint64_t v50 = *(void *)(v49 - 8);
  char v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v51(v48, 1, v49))
  {
    uint64_t v52 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v78, v48, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v78, v48, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v78, 0, 1, v49);
  }
  *(void *)((char *)v16 + v19[10]) = *(void *)&v17[v19[10]];
  uint64_t v53 = v19[11];
  uint64_t v54 = (void *)((char *)v16 + v53);
  uint64_t v55 = &v17[v53];
  uint64_t v56 = *((void *)v55 + 1);
  *uint64_t v54 = *(void *)v55;
  v54[1] = v56;
  uint64_t v57 = v19[12];
  uint64_t v58 = (void *)((char *)v16 + v57);
  id v59 = &v17[v57];
  uint64_t v60 = *((void *)v59 + 1);
  *uint64_t v58 = *(void *)v59;
  v58[1] = v60;
  uint64_t v61 = *(int *)(v79 + 28);
  uint64_t v62 = (char *)v82 + v61;
  uint64_t v63 = (char *)v80 + v61;
  *(_OWORD *)((char *)v82 + v61) = *(_OWORD *)((char *)v80 + v61);
  uint64_t v64 = (int *)type metadata accessor for LayoutContext();
  uint64_t v65 = v64[6];
  uint64_t v81 = &v62[v65];
  uint64_t v66 = &v63[v65];
  uint64_t v67 = sub_1000E9F60();
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v81, v66, v67);
  *(_OWORD *)&v62[v64[7]] = *(_OWORD *)&v63[v64[7]];
  uint64_t v69 = v64[8];
  uint64_t v70 = &v62[v69];
  uint64_t v71 = &v63[v69];
  uint64_t v72 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
  *(void *)&v62[v64[9]] = *(void *)&v63[v64[9]];
  *(void *)&v62[v64[10]] = *(void *)&v63[v64[10]];
  v62[v64[11]] = v63[v64[11]];
  v62[v64[12]] = v63[v64[12]];
  return v82;
}

void *sub_1000790CC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_1001391B0);
    sub_10001B38C(&qword_1001391B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E9290();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  char v14 = v9[32];
  sub_100052470(*(void *)v9, v11, v12, v13, v14);
  uint64_t v15 = *(void *)v8;
  uint64_t v16 = *((void *)v8 + 1);
  uint64_t v17 = *((void *)v8 + 2);
  uint64_t v18 = *((void *)v8 + 3);
  char v19 = v8[32];
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  *((void *)v8 + 2) = v12;
  *((void *)v8 + 3) = v13;
  v8[32] = v14;
  sub_1000528C4(v15, v16, v17, v18, v19);
  uint64_t v113 = a3;
  BOOL v114 = a2;
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v115 = a1;
  uint64_t v21 = (void **)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void **)((char *)a2 + v20);
  uint64_t v24 = *v21;
  void *v21 = v23;
  id v25 = v23;

  id v26 = (int *)type metadata accessor for TodayContent();
  uint64_t v27 = v26[5];
  uint64_t v28 = (char *)v21 + v27;
  uint64_t v29 = &v22[v27];
  uint64_t v30 = (int *)type metadata accessor for Banner();
  uint64_t v31 = *((void *)v30 - 1);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, int *))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (v34)
    {
      sub_10007E638((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_12;
    }
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = *((void *)v29 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v28 + 2) = *((void *)v29 + 2);
    *((void *)v28 + 3) = *((void *)v29 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v28 + 4) = *((void *)v29 + 4);
    *((void *)v28 + 5) = *((void *)v29 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v30[7];
    id v40 = &v28[v39];
    int __dsta = &v29[v39];
    uint64_t v41 = sub_1000E8B60();
    uint64_t v109 = *(void *)(v41 - 8);
    uint64_t v110 = v40;
    uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48);
    LODWORD(v40) = v42(v40, 1, v41);
    int v43 = v42(__dsta, 1, v41);
    if (v40)
    {
      if (v43)
      {
        size_t v44 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        id v45 = v110;
LABEL_22:
        memcpy(v45, __dsta, v44);
        goto LABEL_25;
      }
      (*(void (**)(void *, char *, uint64_t))(v109 + 16))(v110, __dsta, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v110, 0, 1, v41);
    }
    else
    {
      if (v43)
      {
        (*(void (**)(void *, uint64_t))(v109 + 8))(v110, v41);
        size_t v44 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        id v45 = v110;
        goto LABEL_22;
      }
      (*(void (**)(void *, char *, uint64_t))(v109 + 24))(v110, __dsta, v41);
    }
LABEL_25:
    uint64_t v58 = v30[8];
    id v59 = &v28[v58];
    uint64_t v60 = &v29[v58];
    *(void *)id v59 = *(void *)v60;
    *((void *)v59 + 1) = *((void *)v60 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v61 = v30[9];
    uint64_t v62 = &v28[v61];
    uint64_t v63 = *(void **)&v28[v61];
    uint64_t v64 = *(void **)&v29[v61];
    if (v63 == (void *)1)
    {
      if (v64 != (void *)1)
      {
        *(void *)uint64_t v62 = v64;
        id v65 = v64;
LABEL_32:
        uint64_t v67 = v30[10];
        uint64_t v68 = &v28[v67];
        uint64_t v69 = &v29[v67];
        uint64_t v70 = *(void **)v69;
        uint64_t v71 = (void *)*((void *)v69 + 1);
        char v72 = v69[16];
        sub_10001D614(*(void **)v69, v71);
        uint64_t v73 = *(void **)v68;
        uint64_t v74 = (void *)*((void *)v68 + 1);
        *(void *)uint64_t v68 = v70;
        *((void *)v68 + 1) = v71;
        v68[16] = v72;
        sub_10001D758(v73, v74);
        goto LABEL_33;
      }
    }
    else
    {
      if (v64 != (void *)1)
      {
        *(void *)uint64_t v62 = v64;
        id v66 = v64;

        goto LABEL_32;
      }
      sub_10001DBE4((id *)&v28[v61]);
      uint64_t v64 = *(void **)&v29[v61];
    }
    *(void *)uint64_t v62 = v64;
    goto LABEL_32;
  }
  if (v34)
  {
LABEL_12:
    uint64_t v38 = sub_10001B38C(&qword_1001385E0);
    memcpy(v28, v29, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_33;
  }
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  *((void *)v28 + 2) = *((void *)v29 + 2);
  *((void *)v28 + 3) = *((void *)v29 + 3);
  *((void *)v28 + 4) = *((void *)v29 + 4);
  *((void *)v28 + 5) = *((void *)v29 + 5);
  uint64_t v35 = v30[7];
  __dst = &v28[v35];
  NSString v107 = &v29[v35];
  uint64_t v36 = sub_1000E8B60();
  uint64_t v106 = *(void *)(v36 - 8);
  uint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v108(v107, 1, v36))
  {
    uint64_t v37 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v107, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(__dst, v107, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(__dst, 0, 1, v36);
  }
  uint64_t v46 = v30[8];
  uint64_t v47 = &v28[v46];
  uint64_t v48 = &v29[v46];
  *(void *)uint64_t v47 = *(void *)v48;
  *((void *)v47 + 1) = *((void *)v48 + 1);
  uint64_t v49 = v30[9];
  uint64_t v50 = *(void **)&v29[v49];
  swift_bridgeObjectRetain();
  if (v50 != (void *)1) {
    id v51 = v50;
  }
  *(void *)&v28[v49] = v50;
  uint64_t v52 = v30[10];
  uint64_t v53 = &v28[v52];
  uint64_t v54 = &v29[v52];
  uint64_t v55 = *(void **)v54;
  uint64_t v56 = (void *)*((void *)v54 + 1);
  char v57 = v54[16];
  sub_10001D614(*(void **)v54, v56);
  *(void *)uint64_t v53 = v55;
  *((void *)v53 + 1) = v56;
  v53[16] = v57;
  (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
LABEL_33:
  *(void **)((char *)v21 + v26[6]) = *(void **)&v22[v26[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v21 + v26[7]) = *(void **)&v22[v26[7]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v21 + v26[8]) = v22[v26[8]];
  uint64_t v75 = v26[9];
  uint64_t v76 = (char *)v21 + v75;
  uint64_t v77 = &v22[v75];
  uint64_t v78 = sub_1000E8B60();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
  int v81 = v80(v76, 1, v78);
  int v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 24))(v76, v77, v78);
      goto LABEL_39;
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v78);
    goto LABEL_38;
  }
  if (v82)
  {
LABEL_38:
    uint64_t v83 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v76, v77, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
LABEL_39:
  *(void **)((char *)v21 + v26[10]) = *(void **)&v22[v26[10]];
  swift_retain();
  swift_release();
  uint64_t v84 = v26[11];
  uint64_t v85 = (void **)((char *)v21 + v84);
  uint64_t v86 = &v22[v84];
  *uint64_t v85 = *(void *)v86;
  v85[1] = *((void *)v86 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = v26[12];
  char v88 = (void **)((char *)v21 + v87);
  unint64_t v89 = &v22[v87];
  *char v88 = *(void *)v89;
  v88[1] = *((void *)v89 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = *(int *)(v113 + 28);
  id v91 = (void *)((char *)v115 + v90);
  uint64_t v92 = (char *)v114 + v90;
  *id v91 = *(void *)((char *)v114 + v90);
  v91[1] = *(void *)((char *)v114 + v90 + 8);
  id v93 = (int *)type metadata accessor for LayoutContext();
  uint64_t v94 = v93[6];
  NSString v95 = (char *)v91 + v94;
  id v96 = &v92[v94];
  uint64_t v97 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 24))(v95, v96, v97);
  uint64_t v98 = v93[7];
  uint64_t v99 = (void *)((char *)v91 + v98);
  uint64_t v100 = &v92[v98];
  *uint64_t v99 = *(void *)v100;
  v99[1] = *((void *)v100 + 1);
  uint64_t v101 = v93[8];
  char v102 = (char *)v91 + v101;
  uint64_t v103 = &v92[v101];
  uint64_t v104 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
  *(void *)((char *)v91 + v93[9]) = *(void *)&v92[v93[9]];
  *(void *)((char *)v91 + v93[10]) = *(void *)&v92[v93[10]];
  *((unsigned char *)v91 + v93[11]) = v92[v93[11]];
  *((unsigned char *)v91 + v93[12]) = v92[v93[12]];
  return v115;
}

char *sub_100079A5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E9290();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  v10[32] = v11[32];
  uint64_t v13 = &a1[v9];
  char v14 = &a2[v9];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v15 = (int *)type metadata accessor for TodayContent();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v13[v16];
  uint64_t v18 = &v14[v16];
  char v19 = (int *)type metadata accessor for Banner();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v53 = a3;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_10001B38C(&qword_1001385E0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v50 = a2;
    long long v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    uint64_t v23 = v19[7];
    id v51 = &v17[v23];
    uint64_t v52 = a1;
    uint64_t v24 = &v18[v23];
    uint64_t v25 = sub_1000E8B60();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v51, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v51, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v51, 0, 1, v25);
    }
    *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
    *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
    uint64_t v28 = v19[10];
    uint64_t v29 = &v17[v28];
    uint64_t v30 = &v18[v28];
    v29[16] = v30[16];
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    a1 = v52;
    a2 = v50;
  }
  *(void *)&v13[v15[6]] = *(void *)&v14[v15[6]];
  *(void *)&v13[v15[7]] = *(void *)&v14[v15[7]];
  v13[v15[8]] = v14[v15[8]];
  uint64_t v31 = v15[9];
  uint64_t v32 = &v13[v31];
  int v33 = &v14[v31];
  uint64_t v34 = sub_1000E8B60();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v36 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  *(void *)&v13[v15[10]] = *(void *)&v14[v15[10]];
  *(_OWORD *)&v13[v15[11]] = *(_OWORD *)&v14[v15[11]];
  *(_OWORD *)&v13[v15[12]] = *(_OWORD *)&v14[v15[12]];
  uint64_t v37 = *(int *)(v53 + 28);
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  *(_OWORD *)&a1[v37] = *(_OWORD *)&a2[v37];
  id v40 = (int *)type metadata accessor for LayoutContext();
  uint64_t v41 = v40[6];
  uint64_t v42 = &v38[v41];
  int v43 = &v39[v41];
  uint64_t v44 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  *(_OWORD *)&v38[v40[7]] = *(_OWORD *)&v39[v40[7]];
  uint64_t v45 = v40[8];
  uint64_t v46 = &v38[v45];
  uint64_t v47 = &v39[v45];
  uint64_t v48 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  *(void *)&v38[v40[9]] = *(void *)&v39[v40[9]];
  *(void *)&v38[v40[10]] = *(void *)&v39[v40[10]];
  v38[v40[11]] = v39[v40[11]];
  v38[v40[12]] = v39[v40[12]];
  return a1;
}

char *sub_100079F74(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100028B6C((uint64_t)a1, &qword_1001391B0);
    uint64_t v6 = sub_10001B38C(&qword_1001391B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E9290();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[32];
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *((void *)v9 + 1);
  uint64_t v14 = *((void *)v9 + 2);
  uint64_t v15 = *((void *)v9 + 3);
  char v16 = v9[32];
  long long v17 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v17;
  v9[32] = v11;
  sub_1000528C4(v12, v13, v14, v15, v16);
  uint64_t v102 = a3;
  uint64_t v103 = a2;
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v104 = a1;
  char v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void **)&a1[v18];
  *(void *)&a1[v18] = *(void *)v20;

  long long v22 = (int *)type metadata accessor for TodayContent();
  uint64_t v23 = v22[5];
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  uint64_t v26 = (int *)type metadata accessor for Banner();
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (v30)
    {
      sub_10007E638((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_11;
    }
    uint64_t v38 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v38;
    swift_bridgeObjectRelease();
    uint64_t v39 = *((void *)v25 + 3);
    *((void *)v24 + 2) = *((void *)v25 + 2);
    *((void *)v24 + 3) = v39;
    swift_bridgeObjectRelease();
    uint64_t v40 = *((void *)v25 + 5);
    *((void *)v24 + 4) = *((void *)v25 + 4);
    *((void *)v24 + 5) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = v26[7];
    uint64_t v42 = &v24[v41];
    int __dsta = &v25[v41];
    uint64_t v43 = sub_1000E8B60();
    uint64_t v98 = *(void *)(v43 - 8);
    uint64_t v99 = v42;
    uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
    LODWORD(v42) = v44(v42, 1, v43);
    int v45 = v44(__dsta, 1, v43);
    if (v42)
    {
      if (v45)
      {
        size_t v46 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v47 = v99;
LABEL_19:
        memcpy(v47, __dsta, v46);
        goto LABEL_22;
      }
      (*(void (**)(void *, char *, uint64_t))(v98 + 32))(v99, __dsta, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v99, 0, 1, v43);
    }
    else
    {
      if (v45)
      {
        (*(void (**)(void *, uint64_t))(v98 + 8))(v99, v43);
        size_t v46 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v47 = v99;
        goto LABEL_19;
      }
      (*(void (**)(void *, char *, uint64_t))(v98 + 40))(v99, __dsta, v43);
    }
LABEL_22:
    uint64_t v51 = v26[8];
    uint64_t v52 = &v24[v51];
    uint64_t v53 = (uint64_t *)&v25[v51];
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    *(void *)uint64_t v52 = v55;
    *((void *)v52 + 1) = v54;
    swift_bridgeObjectRelease();
    uint64_t v56 = v26[9];
    char v57 = &v24[v56];
    uint64_t v58 = *(void **)&v24[v56];
    uint64_t v59 = *(void *)&v25[v56];
    if (v58 != (void *)1)
    {
      if (v59 != 1)
      {
        *(void *)char v57 = v59;

        goto LABEL_27;
      }
      sub_10001DBE4((id *)&v24[v56]);
      uint64_t v59 = *(void *)&v25[v56];
    }
    *(void *)char v57 = v59;
LABEL_27:
    uint64_t v60 = v26[10];
    uint64_t v61 = &v24[v60];
    uint64_t v62 = &v25[v60];
    char v63 = v62[16];
    uint64_t v64 = *(void **)v61;
    id v65 = (void *)*((void *)v61 + 1);
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    v61[16] = v63;
    sub_10001D758(v64, v65);
    goto LABEL_28;
  }
  if (v30)
  {
LABEL_11:
    uint64_t v37 = sub_10001B38C(&qword_1001385E0);
    memcpy(v24, v25, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_28;
  }
  long long v31 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v31;
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  uint64_t v32 = v26[7];
  __dst = &v24[v32];
  int v33 = &v25[v32];
  uint64_t v34 = sub_1000E8B60();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v36 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(__dst, v33, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
  }
  *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
  *(void *)&v24[v26[9]] = *(void *)&v25[v26[9]];
  uint64_t v48 = v26[10];
  uint64_t v49 = &v24[v48];
  uint64_t v50 = &v25[v48];
  v49[16] = v50[16];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
LABEL_28:
  *(void *)&v19[v22[6]] = *(void *)&v20[v22[6]];
  swift_bridgeObjectRelease();
  *(void *)&v19[v22[7]] = *(void *)&v20[v22[7]];
  swift_unknownObjectRelease();
  v19[v22[8]] = v20[v22[8]];
  uint64_t v66 = v22[9];
  uint64_t v67 = &v19[v66];
  uint64_t v68 = &v20[v66];
  uint64_t v69 = sub_1000E8B60();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71(v68, 1, v69);
  if (!v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v67, v68, v69);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
    goto LABEL_33;
  }
  if (v73)
  {
LABEL_33:
    uint64_t v74 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_34:
  *(void *)&v19[v22[10]] = *(void *)&v20[v22[10]];
  swift_release();
  uint64_t v75 = v22[11];
  uint64_t v76 = &v19[v75];
  uint64_t v77 = &v20[v75];
  uint64_t v79 = *(void *)v77;
  uint64_t v78 = *((void *)v77 + 1);
  *(void *)uint64_t v76 = v79;
  *((void *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = v22[12];
  int v81 = &v19[v80];
  int v82 = &v20[v80];
  uint64_t v84 = *(void *)v82;
  uint64_t v83 = *((void *)v82 + 1);
  *(void *)int v81 = v84;
  *((void *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = *(int *)(v102 + 28);
  uint64_t v86 = &v104[v85];
  uint64_t v87 = &v103[v85];
  *(_OWORD *)uint64_t v86 = *(_OWORD *)&v103[v85];
  char v88 = (int *)type metadata accessor for LayoutContext();
  uint64_t v89 = v88[6];
  uint64_t v90 = &v86[v89];
  id v91 = &v87[v89];
  uint64_t v92 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v90, v91, v92);
  *(_OWORD *)&v86[v88[7]] = *(_OWORD *)&v87[v88[7]];
  uint64_t v93 = v88[8];
  uint64_t v94 = &v86[v93];
  NSString v95 = &v87[v93];
  uint64_t v96 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  *(void *)&v86[v88[9]] = *(void *)&v87[v88[9]];
  *(void *)&v86[v88[10]] = *(void *)&v87[v88[10]];
  v86[v88[11]] = v87[v88[11]];
  v86[v88[12]] = v87[v88[12]];
  return v104;
}

uint64_t sub_10007A7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007A7C8);
}

uint64_t sub_10007A7C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10001B38C(&qword_1001391B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 32);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for LayoutContext();
  char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[7];

  return v16(v18, a2, v17);
}

uint64_t sub_10007A948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007A95C);
}

uint64_t sub_10007A95C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_10001B38C(&qword_1001391B8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 32) = -(char)a2;
    return result;
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for LayoutContext();
  char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for RegularContentView()
{
  uint64_t result = qword_100139218;
  if (!qword_100139218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007AB2C()
{
  sub_10007AC38();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TodayContent();
    if (v1 <= 0x3F)
    {
      type metadata accessor for LayoutContext();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10007AC38()
{
  if (!qword_100139228)
  {
    sub_1000E9290();
    unint64_t v0 = sub_1000E92A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100139228);
    }
  }
}

uint64_t sub_10007AC90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007ACAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_10001B38C(&qword_1001392B8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v56 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v47 - v6);
  uint64_t v50 = sub_1000E9920();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for BannerView();
  __chkstk_darwin(v47);
  uint64_t v10 = (uint64_t *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10001B38C(&qword_1001392C0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  __chkstk_darwin(v11);
  uint64_t v52 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001B38C(&qword_1001385E0);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Banner();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v51 = (uint64_t)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001B38C(&qword_1001392C8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v47 - v24;
  uint64_t v26 = a1;
  uint64_t v27 = a1 + *(int *)(type metadata accessor for RegularContentView() + 24);
  uint64_t v28 = type metadata accessor for TodayContent();
  sub_10002DA34(v27 + *(int *)(v28 + 20), (uint64_t)v16, &qword_1001385E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100028B6C((uint64_t)v16, &qword_1001385E0);
    uint64_t v29 = 1;
    uint64_t v30 = v53;
  }
  else
  {
    uint64_t v31 = v51;
    sub_10007E6CC((uint64_t)v16, v51, (uint64_t (*)(void))type metadata accessor for Banner);
    uint64_t v32 = v26;
    uint64_t v33 = sub_10007B300();
    uint64_t v35 = v34;
    sub_10007E5D0(v31, (uint64_t)v10 + *(int *)(v47 + 20), (uint64_t (*)(void))type metadata accessor for Banner);
    *uint64_t v10 = v33;
    v10[1] = v35;
    *(void *)&long long v57 = 0x4028000000000000;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v49, enum case for Font.TextStyle.caption(_:), v50);
    sub_1000464DC();
    sub_1000E92C0();
    id v36 = sub_1000812DC();
    [v36 nt_scaledValueForValue:1.0];

    sub_10007FBEC();
    sub_1000816D8();
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v37 = v52;
    sub_10007E5D0((uint64_t)v10, v52, (uint64_t (*)(void))type metadata accessor for BannerView);
    uint64_t v38 = v53;
    uint64_t v39 = (_OWORD *)(v37 + *(int *)(v53 + 36));
    long long v40 = v58;
    *uint64_t v39 = v57;
    v39[1] = v40;
    v39[2] = v59;
    sub_10007E638((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BannerView);
    sub_10007E638(v31, (uint64_t (*)(void))type metadata accessor for Banner);
    sub_10002D5DC(v37, (uint64_t)v25, &qword_1001392C0);
    uint64_t v29 = 0;
    uint64_t v26 = v32;
    uint64_t v30 = v38;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v25, v29, 1, v30);
  *uint64_t v7 = sub_1000E9DA0();
  v7[1] = v41;
  uint64_t v42 = sub_10001B38C(&qword_1001392D0);
  sub_10007B53C(v26, (uint64_t *)((char *)v7 + *(int *)(v42 + 44)));
  sub_10002DA34((uint64_t)v25, (uint64_t)v23, &qword_1001392C8);
  uint64_t v43 = v56;
  sub_10002DA34((uint64_t)v7, v56, &qword_1001392B8);
  uint64_t v44 = v55;
  sub_10002DA34((uint64_t)v23, v55, &qword_1001392C8);
  uint64_t v45 = sub_10001B38C(&qword_1001392D8);
  sub_10002DA34(v43, v44 + *(int *)(v45 + 48), &qword_1001392B8);
  sub_100028B6C((uint64_t)v7, &qword_1001392B8);
  sub_100028B6C((uint64_t)v25, &qword_1001392C8);
  sub_100028B6C(v43, &qword_1001392B8);
  return sub_100028B6C((uint64_t)v23, &qword_1001392C8);
}

uint64_t sub_10007B300()
{
  uint64_t v0 = sub_1000E9290();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - v5;
  sub_10007DAD0(&qword_1001391B0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)&v15 - v5);
  uint64_t v7 = enum case for ColorScheme.dark(_:);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v8(v4, enum case for ColorScheme.dark(_:), v0);
  char v9 = sub_1000E9280();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v6, v0);
  if (v9) {
    uint64_t v11 = sub_1000E9BC0();
  }
  else {
    uint64_t v11 = sub_1000E9BF0();
  }
  uint64_t v12 = v11;
  sub_10007DAD0(&qword_1001391B0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v6);
  v8(v4, v7, v0);
  char v13 = sub_1000E9280();
  v10(v4, v0);
  v10(v6, v0);
  if (v13) {
    sub_1000E9BF0();
  }
  else {
    sub_1000E9BC0();
  }
  return v12;
}

uint64_t sub_10007B53C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_1001392E0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v9 = (char *)&v14 - v8;
  sub_10007B678(&v15);
  uint64_t v10 = v15;
  *(void *)char v9 = sub_1000E9720();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 0;
  uint64_t v11 = sub_10001B38C(&qword_1001392E8);
  sub_10007BB58(a1, &v9[*(int *)(v11 + 44)]);
  sub_10002DA34((uint64_t)v9, (uint64_t)v7, &qword_1001392E0);
  *a2 = v10;
  uint64_t v12 = sub_10001B38C(&qword_1001392F0);
  sub_10002DA34((uint64_t)v7, (uint64_t)a2 + *(int *)(v12 + 48), &qword_1001392E0);
  swift_retain();
  sub_100028B6C((uint64_t)v9, &qword_1001392E0);
  sub_100028B6C((uint64_t)v7, &qword_1001392E0);
  return swift_release();
}

uint64_t sub_10007B678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v2 = sub_10001B38C(&qword_100139298);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10001B38C(&qword_1001392A0);
  __chkstk_darwin(v32);
  v31[1] = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v16 = v1 + *(int *)(type metadata accessor for RegularContentView() + 24);
  uint64_t v17 = type metadata accessor for TodayContent();
  sub_10002DA34(v16 + *(int *)(v17 + 36), (uint64_t)v8, (uint64_t *)&unk_1001370F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100028B6C((uint64_t)v8, (uint64_t *)&unk_1001370F0);
    id v18 = [*(id *)(v16 + *(int *)(v17 + 28)) widgetConfig];
    id v19 = sub_10007D2B8(v18, (SEL *)&selRef_backgroundColorLight);
    id v20 = sub_10007D2B8(v18, (SEL *)&selRef_backgroundColorDark);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v20;
    id v22 = objc_allocWithZone((Class)UIColor);
    aBlock[4] = sub_10002E180;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100075C34;
    aBlock[3] = &unk_100126970;
    uint64_t v23 = _Block_copy(aBlock);
    id v24 = v19;
    id v25 = v20;
    [v22 initWithDynamicProvider:v23];
    _Block_release(v23);
    swift_release();
    uint64_t v26 = sub_1000E9C40();

    aBlock[0] = v26;
    uint64_t result = sub_1000E9D10();
    uint64_t v28 = result;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    uint64_t v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    __chkstk_darwin(v29);
    v31[-2] = v1;
    sub_1000E9940();
    sub_10001D100(&qword_1001392A8, &qword_100139298);
    uint64_t v30 = v34;
    sub_1000E9B00();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v30);
    sub_10007E058();
    uint64_t v28 = sub_1000E9D10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  *uint64_t v35 = v28;
  return result;
}

uint64_t sub_10007BB58@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RegularContentView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_10001B38C(&qword_1001392F8);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v8 = v26;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v22 - v12;
  type metadata accessor for TodayContent();
  sub_10007E5D0(a1, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for RegularContentView);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_10007E6CC((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for RegularContentView);
  type metadata accessor for SectionView();
  sub_10007E588(&qword_100139300, (void (*)(uint64_t))type metadata accessor for SectionView);
  id v25 = v13;
  sub_1000E9D40();
  sub_1000E9DC0();
  sub_1000E9400();
  uint64_t v34 = v42;
  uint64_t v33 = v44;
  uint64_t v32 = v46;
  uint64_t v31 = v48;
  uint64_t v30 = v50;
  uint64_t v29 = v52;
  uint64_t v28 = v54;
  uint64_t v27 = v55;
  char v41 = 1;
  char v40 = v43;
  char v39 = v45;
  char v38 = v47;
  char v37 = v49;
  unsigned __int8 v36 = v51;
  unsigned __int8 v35 = v53;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  id v24 = v11;
  v16(v11, v13, v7);
  LOBYTE(v13) = v41;
  LOBYTE(a1) = v40;
  LOBYTE(v6) = v39;
  LOBYTE(v14) = v38;
  char v17 = v37;
  int v22 = v36;
  int v23 = v35;
  v16(a2, v11, v7);
  id v18 = &a2[*(int *)(sub_10001B38C(&qword_100139308) + 48)];
  *(void *)id v18 = 0;
  v18[8] = (char)v13;
  *((void *)v18 + 2) = v34;
  unsigned char v18[24] = a1;
  *((void *)v18 + 4) = v33;
  v18[40] = v6;
  *((void *)v18 + 6) = v32;
  v18[56] = v14;
  *((void *)v18 + 8) = v31;
  v18[72] = v17;
  *((void *)v18 + 10) = v30;
  v18[88] = v22;
  *((void *)v18 + 12) = v29;
  v18[104] = v23;
  uint64_t v19 = v27;
  *((void *)v18 + 14) = v28;
  *((void *)v18 + 15) = v19;
  id v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v20(v25, v7);
  return ((uint64_t (*)(char *, uint64_t))v20)(v24, v7);
}

uint64_t sub_10007BFE0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TodayContent();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Section();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  unint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t result = type metadata accessor for RegularContentView();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = a2 + *(int *)(result + 24);
    uint64_t v19 = *(void *)(v18 + *(int *)(v7 + 32));
    if (*(void *)(v19 + 16) > a1)
    {
      uint64_t v20 = v19
          + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
          + *(void *)(v11 + 72) * a1;
      sub_10007E5D0(v20, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Section);
      sub_10007E5D0(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TodayContent);
      sub_10007E5D0(v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Section);
      sub_10007C2C0(a1, (uint64_t)v31);
      sub_10007E638((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Section);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v22 = swift_getKeyPath();
      int v23 = (int *)type metadata accessor for SectionView();
      *(void *)(a3 + v23[8]) = v22;
      sub_10001B38C(&qword_1001391B0);
      swift_storeEnumTagMultiPayload();
      sub_10007E6CC((uint64_t)v16, a3, (uint64_t (*)(void))type metadata accessor for Section);
      uint64_t result = sub_10007E6CC((uint64_t)v9, a3 + v23[5], (uint64_t (*)(void))type metadata accessor for TodayContent);
      uint64_t v24 = a3 + v23[6];
      long long v25 = v31[7];
      *(_OWORD *)(v24 + 96) = v31[6];
      *(_OWORD *)(v24 + 112) = v25;
      *(_OWORD *)(v24 + 128) = v31[8];
      *(void *)(v24 + 144) = v32;
      long long v26 = v31[3];
      *(_OWORD *)(v24 + 32) = v31[2];
      *(_OWORD *)(v24 + 48) = v26;
      long long v27 = v31[5];
      *(_OWORD *)(v24 + 64) = v31[4];
      *(_OWORD *)(v24 + 80) = v27;
      long long v28 = v31[1];
      *(_OWORD *)uint64_t v24 = v31[0];
      *(_OWORD *)(v24 + 16) = v28;
      uint64_t v29 = a3 + v23[7];
      *(void *)uint64_t v29 = KeyPath;
      *(unsigned char *)(v29 + 8) = 0;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_10007C2C0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = type metadata accessor for RegularContentView();
    uint64_t v6 = v2 + *(int *)(v5 + 24);
    BOOL v7 = v3 != *(void *)(*(void *)(v6 + *(int *)(type metadata accessor for TodayContent() + 24)) + 16);
    uint64_t v8 = (double *)(v2 + *(int *)(v5 + 28));
    double v9 = sub_10007FBEC();
    id v10 = sub_1000812DC();
    [v10 nt_scaledValueForValue:1.0];
    double v12 = v11;

    double v13 = v12 * 12.0 + *v8 + 6.0;
    id v14 = sub_1000812DC();
    sub_10007FC74((uint64_t)v27);
    uint64_t v15 = v27[0];
    uint64_t v16 = v27[1];
    uint64_t v17 = v27[2];
    uint64_t v18 = v27[3];
    char v19 = v28;
    uint64_t v20 = v30;
    long long v25 = v29;
    long long v26 = v32;
    uint64_t v21 = v33;
    double v22 = v8[1];
    sub_1000816D8();
    char v34 = v19;
    long long v24 = v31;
    *(unsigned char *)a2 = v7;
    *(double *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = 0x402E000000000000;
    *(double *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v17;
    *(void *)(a2 + 64) = v18;
    *(unsigned char *)(a2 + 72) = v19;
    *(_OWORD *)(a2 + 80) = v25;
    *(void *)(a2 + 96) = v20;
    *(_OWORD *)(a2 + 104) = v24;
    *(_OWORD *)(a2 + 120) = v26;
    *(void *)(a2 + 136) = v21;
    *(double *)(a2 + 144) = v22 - v23;
  }
}

__n128 sub_10007C42C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000E9710();
  sub_10007C49C(a1, (uint64_t *)v10);
  uint64_t v5 = v11;
  uint64_t v6 = v12;
  __n128 result = (__n128)v10[0];
  long long v8 = v10[1];
  long long v9 = v10[2];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v8;
  *(_OWORD *)(a2 + 56) = v9;
  *(void *)(a2 + 72) = v5;
  *(void *)(a2 + 80) = v6;
  return result;
}

uint64_t sub_10007C49C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_1001385E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RegularContentView();
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for TodayContent();
  sub_10002DA34(v8 + *(int *)(v9 + 20), (uint64_t)v6, &qword_1001385E0);
  uint64_t v10 = type metadata accessor for Banner();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10) == 1)
  {
    sub_100028B6C((uint64_t)v6, &qword_1001385E0);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v18 = &v6[*(int *)(v10 + 40)];
    uint64_t v20 = (void *)*((void *)v18 + 1);
    char v21 = v18[16];
    long long v29 = *(void **)v18;
    char v19 = v29;
    char v28 = v20;
    sub_10001D614(v29, v20);
    sub_10007E638((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Banner);
    sub_10007C794(v19, v20, v21, v30);
    uint64_t v27 = v30[0];
    id v22 = sub_1000812DC();
    [v22 nt_scaledValueForValue:1.0];

    sub_10007FBEC();
    sub_1000816D8();
    uint64_t v23 = a1 + *(int *)(v7 + 20);
    char v37 = *(unsigned char *)(v23 + 32);
    long long v24 = *(_OWORD *)(v23 + 16);
    v36[0] = *(_OWORD *)v23;
    v36[1] = v24;
    sub_10002D5DC((uint64_t)v36, (uint64_t)v38, &qword_1001386F0);
    sub_10005A1D4((uint64_t)v38, (void (*)(void, void, void, void, void))sub_100052470);
    sub_10007DD88();
    sub_10005A1D4((uint64_t)v36, (void (*)(void, void, void, void, void))sub_1000528C4);
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v12 = v30[1];
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v15 = v33;
    uint64_t v16 = v34;
    uint64_t v17 = v35;
    uint64_t v11 = v27;
    sub_10001D758(v29, v28);
  }
  uint64_t result = sub_10007B678(v30);
  uint64_t v26 = v30[0];
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  a2[6] = v17;
  a2[7] = v26;
  return result;
}

void sub_10007C794(void *a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v7 = sub_10001B38C(&qword_100139288);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  __chkstk_darwin(v7);
  long long v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10001B38C(&qword_100139290);
  __chkstk_darwin(v59);
  long long v57 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000E9B90();
  uint64_t v10 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v54 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E9290();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v55 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  char v21 = (char *)&v52 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v52 - v22;
  id v63 = a1;
  id v24 = a2;
  uint64_t v56 = v13;
  long long v25 = (uint64_t (**)(char *, uint64_t))(v13 + 88);
  if (a3)
  {
    sub_10007DAD0(&qword_1001391B0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v21);
    uint64_t v30 = *v25;
    int v31 = (*v25)(v21, v12);
    int v32 = enum case for ColorScheme.light(_:);
    if (v31 == enum case for ColorScheme.light(_:))
    {
      id v33 = v63;
      uint64_t v54 = (char *)sub_100033B20(v33);
    }
    else
    {
      if (v31 == enum case for ColorScheme.dark(_:))
      {
        char v37 = v24;
        id v38 = v24;
        uint64_t v54 = (char *)sub_100033B20(v38);

LABEL_13:
        sub_10007DAD0(&qword_1001391B0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v18);
        int v44 = v30(v18, v12);
        if (v44 == v32)
        {
          id v45 = v63;
          [v63 startPoint];
          [v45 startPoint];
        }
        else
        {
          id v45 = v63;
          if (v44 == enum case for ColorScheme.dark(_:))
          {
            [v37 startPoint];
            [v37 startPoint];
          }
          else
          {
            [v63 startPoint];
            [v45 startPoint];
            (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v12);
          }
        }
        uint64_t v46 = v55;
        sub_10007DAD0(&qword_1001391B0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, v55);
        int v47 = v30((char *)v46, v12);
        if (v47 == v32)
        {
          [v45 endPoint];
          [v45 endPoint];
        }
        else if (v47 == enum case for ColorScheme.dark(_:))
        {
          [v37 endPoint];
          [v37 endPoint];
        }
        else
        {
          [v45 endPoint];
          [v45 endPoint];
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v46, v12);
        }
        sub_1000E9360();
        long long v64 = v67[0];
        long long v65 = v67[1];
        uint64_t v66 = v68;
        unint64_t v48 = sub_100048A74();
        char v49 = v58;
        sub_1000E9AB0();
        sub_100048AC8((uint64_t)v67);
        *(void *)&long long v64 = &type metadata for LinearGradient;
        *((void *)&v64 + 1) = v48;
        uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        uint64_t v51 = v61;
        sub_1000E9A60();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v49, v51);
        *(void *)&long long v64 = v51;
        *((void *)&v64 + 1) = OpaqueTypeConformance2;
        swift_getOpaqueTypeConformance2();
        uint64_t v29 = sub_1000E9D10();

        goto LABEL_24;
      }
      id v43 = v63;
      uint64_t v54 = (char *)sub_100033B20(v43);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v12);
    }
    char v37 = v24;
    goto LABEL_13;
  }
  sub_10007DAD0(&qword_1001391B0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v23);
  int v26 = (*v25)(v23, v12);
  if (v26 == enum case for ColorScheme.light(_:))
  {
    id v27 = v63;
    [v27 red];
    [v27 green];
    [v27 blue];
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v54, enum case for Color.RGBColorSpace.sRGB(_:), v53);
    uint64_t v28 = sub_1000E9C30();

    *(void *)&v67[0] = v28;
    uint64_t v29 = sub_1000E9D10();
  }
  else
  {
    uint64_t v34 = (void (**)(char *, void, uint64_t))(v10 + 104);
    if (v26 != enum case for ColorScheme.dark(_:))
    {
      uint64_t v39 = v12;
      id v40 = v63;
      [v40 red];
      [v40 green];
      [v40 blue];
      (*v34)(v54, enum case for Color.RGBColorSpace.sRGB(_:), v53);
      uint64_t v41 = sub_1000E9C30();

      *(void *)&v67[0] = v41;
      uint64_t v42 = sub_1000E9D10();

      *uint64_t v62 = v42;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v39);
      return;
    }
    id v35 = v24;
    [v35 red];
    [v35 green];
    [v35 blue];
    (*v34)(v54, enum case for Color.RGBColorSpace.sRGB(_:), v53);
    uint64_t v36 = sub_1000E9C30();

    *(void *)&v67[0] = v36;
    uint64_t v29 = sub_1000E9D10();
  }
LABEL_24:
  *uint64_t v62 = v29;
}

void sub_10007D13C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for RegularContentView() + 24);
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                             + *(int *)(type metadata accessor for TodayContent() + 28)), "widgetConfig"));
  id v5 = sub_10007D2B8(v4, (SEL *)&selRef_backgroundColorLight);
  id v6 = sub_10007D2B8(v4, (SEL *)&selRef_backgroundColorDark);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  id v8 = objc_allocWithZone((Class)UIColor);
  v13[4] = sub_10007E804;
  v13[5] = v7;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100075C34;
  v13[3] = &unk_1001269C0;
  uint64_t v9 = _Block_copy(v13);
  id v10 = v5;
  id v11 = v6;
  [v8 initWithDynamicProvider:v9];
  _Block_release(v9);
  swift_release();
  uint64_t v12 = sub_1000E9C40();

  *a2 = v12;
}

id sub_10007D2B8(void *a1, SEL *a2)
{
  if (a1 && (id v2 = [a1 *a2]) != 0)
  {
    uint64_t v3 = v2;
    sub_1000EA2B0();

    swift_bridgeObjectRetain();
    NSString v4 = sub_1000EA280();
    swift_bridgeObjectRelease();
    id v5 = [self colorWithHexString:v4];

    [v5 red];
    double v7 = v6;
    [v5 green];
    double v9 = v8;
    [v5 blue];
    double v11 = v10;
    [v5 alpha];
    id v13 = [objc_allocWithZone((Class)UIColor) initWithRed:v7 green:v9 blue:v11 alpha:v12];
    swift_bridgeObjectRelease();

    return v13;
  }
  else
  {
    id v15 = [self clearColor];
    return v15;
  }
}

uint64_t sub_10007D434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v10 = a1;
  uint64_t v11 = sub_1000E9840();
  uint64_t v2 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  NSString v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100139260);
  __chkstk_darwin(v5);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)double v7 = sub_1000E9720();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 0;
  uint64_t v8 = sub_10001B38C(&qword_100139268);
  sub_10007ACAC(v1, (uint64_t)&v7[*(int *)(v8 + 44)]);
  sub_1000E9830();
  uint64_t v12 = v1;
  sub_1000E9DC0();
  sub_10001B38C(&qword_100139270);
  sub_10001D100(&qword_100139278, &qword_100139260);
  sub_10001D100(&qword_100139280, &qword_100139270);
  sub_1000E9B10();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v11);
  return sub_100028B6C((uint64_t)v7, &qword_100139260);
}

double sub_10007D648@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10007C42C(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_10007D650(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000E95E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000EA610();
  double v9 = sub_1000E9860();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000B1D7C(1819242306, 0xE400000000000000, &v14);
    sub_1000EA750();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000E95D0();
  swift_getAtKeyPath();
  sub_10003D590(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10007D854@<X0>(uint64_t a1@<X8>)
{
  return sub_10007DAD0(&qword_100137A10, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000FF4C0, a1);
}

double sub_10007D88C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000E95E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000EA610();
  double v9 = sub_1000E9860();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000B1D7C(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_1000EA750();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000E95D0();
  swift_getAtKeyPath();
  sub_10003D590(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_10007DA98@<X0>(uint64_t a1@<X8>)
{
  return sub_10007DAD0(&qword_100138370, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x80000001000FF4E0, a1);
}

uint64_t sub_10007DAD0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1000E95E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001B38C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002DA34(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1000EA610();
    char v21 = sub_1000E9860();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1000B1D7C(v27, v25, &v29);
      sub_1000EA750();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000E95D0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_10007DD88()
{
  uint64_t v1 = sub_1000E95E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_1000EA610();
  double v7 = sub_1000E9860();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v10[0] = v9 + 4;
    v10[1] = sub_1000B1D7C(0x65736E4965676445, 0xEA00000000007374, &v11);
    sub_1000EA750();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000E95D0();
  swift_getAtKeyPath();
  sub_10005A1D4((uint64_t)v0, (void (*)(void, void, void, void, void))sub_1000528C4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return *(double *)&v11;
}

uint64_t sub_10007DFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_10007DAD0(&qword_100138970, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_10007DFF8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007E038(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007E048()
{
  return swift_release();
}

void sub_10007E050(uint64_t *a1@<X8>)
{
  sub_10007D13C(*(void *)(v1 + 16), a1);
}

unint64_t sub_10007E058()
{
  unint64_t result = qword_1001392B0;
  if (!qword_1001392B0)
  {
    sub_10001B3D0(&qword_1001392A0);
    sub_10001D100(&qword_1001392A8, &qword_100139298);
    sub_10007E588((unint64_t *)&qword_100137ED8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001392B0);
  }
  return result;
}

uint64_t sub_10007E128()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for RegularContentView();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v27 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v5 = v0 + v4;
  sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E9290();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v4, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v2[5];
  sub_1000528C4(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(unsigned char *)(v7 + 32));
  os_log_type_t v8 = (id *)(v5 + v2[6]);

  uint64_t v9 = type metadata accessor for TodayContent();
  os_log_type_t v10 = (char *)v8 + *(int *)(v9 + 20);
  uint64_t v11 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
  {
    uint64_t v26 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = &v10[v11[7]];
    uint64_t v13 = sub_1000E8B60();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void **)&v10[v11[9]];
    if (v15 != (void *)1) {

    }
    sub_10001D758(*(void **)&v10[v11[10]], *(void **)&v10[v11[10] + 8]);
    uint64_t v4 = (v3 + 16) & ~v3;
    uint64_t v1 = v26;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v16 = (char *)v8 + *(int *)(v9 + 36);
  uint64_t v17 = sub_1000E8B60();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v5 + v2[7];
  uint64_t v20 = type metadata accessor for LayoutContext();
  uint64_t v21 = v19 + *(int *)(v20 + 24);
  uint64_t v22 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = v19 + *(int *)(v20 + 32);
  uint64_t v24 = sub_1000E96F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);

  return _swift_deallocObject(v1, v4 + v27, v3 | 7);
}

uint64_t sub_10007E508@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for RegularContentView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10007BFE0(a1, v6, a2);
}

uint64_t sub_10007E588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007E5D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007E638(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007E698@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E9430();
  *a1 = v3;
  return result;
}

uint64_t sub_10007E6CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007E734()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10007E808(_OWORD *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[6];
    os_log_type_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000E9F60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[8];
    *(_OWORD *)((char *)v4 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1000E96F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)v4 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
  }
  return v4;
}

uint64_t sub_10007E95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1000E96F0();
  os_log_type_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

_OWORD *sub_10007EA14(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  os_log_type_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

void *sub_10007EB18(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  os_log_type_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

_OWORD *sub_10007EC40(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  os_log_type_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

_OWORD *sub_10007ED44(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  os_log_type_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

uint64_t sub_10007EE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007EE5C);
}

uint64_t sub_10007EE5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000E9F60();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
  }
  else
  {
    uint64_t v10 = sub_1000E96F0();
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) != a2)
    {
      unsigned int v13 = *(unsigned __int8 *)(a1 + a3[11]);
      if (v13 >= 2) {
        return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[8];
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);

  return v11(a1 + v9, a2, v7);
}

uint64_t sub_10007EF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007EF90);
}

uint64_t sub_10007EF90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000E9F60();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = sub_1000E96F0();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(unsigned char *)(a1 + a4[11]) = a2 + 1;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[8];
  }
  unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for LayoutContext()
{
  uint64_t result = qword_100139368;
  if (!qword_100139368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007F0E8()
{
  uint64_t result = sub_1000E9F60();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000E96F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_10007F1DC()
{
  uint64_t v1 = sub_1000E96F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v21 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = self;
  id v22 = v11;
  uint64_t v23 = v0 + *(int *)(type metadata accessor for LayoutContext() + 32);
  unint64_t v24 = 0x80000001000FF550;
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.medium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraSmall(_:), 0x80000001000FF550, 150, (uint64_t)v8);
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:), 0x80000001000FF520, 163, (uint64_t)v5);
  sub_100076874((uint64_t)v8, (uint64_t)v5, (uint64_t)v10);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v5, v1);
  v12(v8, v1);
  unsigned int v13 = sub_1000765B4();
  v12(v10, v1);
  id v14 = [v11 nt_preferredFontForCondensedTextStyle:2 contentSizeCategory:v13];

  [v14 nt_scaledValueForValue:1.0];
  double v16 = v15;

  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.medium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraSmall(_:), v24, 150, (uint64_t)v8);
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:), 0x80000001000FF520, 163, (uint64_t)v5);
  sub_100076874((uint64_t)v8, (uint64_t)v5, (uint64_t)v10);
  v12(v5, v1);
  v12(v8, v1);
  uint64_t v17 = sub_1000765B4();
  v12(v10, v1);
  id v18 = [v22 nt_preferredFontForCondensedTextStyle:2 contentSizeCategory:v17];

  id v19 = [v18 fontWithSize:v16 * 15.0];
  return v19;
}

uint64_t sub_10007F504()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E9F60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v0 + *(int *)(v1 + 24), v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (result != enum case for InternalWidgetFamily.systemSmall(_:))
  {
    BOOL v10 = result == enum case for InternalWidgetFamily.systemMedium(_:)
       || result == enum case for InternalWidgetFamily.systemLarge(_:)
       || result == enum case for InternalWidgetFamily.newsLargeTall(_:);
    if (!v10 && result != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, (uint64_t)v3);
      unint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_1000EA840(38);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000024;
      unint64_t v12 = 0x80000001000FF6A0;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v13._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v13);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1000EA960();
      __break(1u);
    }
  }
  return result;
}

void sub_10007F780()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v21 = (uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v22 = (uint64_t)&v21 - v4;
  uint64_t v5 = sub_1000E9F60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = v0 + *(int *)(v1 + 24);
  Swift::String v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13((char *)&v21 - v10, v12, v5);
  id v14 = *(uint64_t (**)(char *, uint64_t))(v6 + 88);
  int v15 = v14(v11, v5);
  int v16 = enum case for InternalWidgetFamily.systemSmall(_:);
  if (v15 != enum case for InternalWidgetFamily.systemSmall(_:))
  {
    if (v15 == enum case for InternalWidgetFamily.systemMedium(_:)
      || v15 == enum case for InternalWidgetFamily.systemLarge(_:)
      || v15 == enum case for InternalWidgetFamily.newsLargeTall(_:))
    {
      sub_1000816D8();
      sub_1000829B4();
      sub_1000816D8();
      return;
    }
    if (v15 != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, v21);
      unint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_1000EA840(20);
      swift_bridgeObjectRelease();
      unint64_t v23 = 0xD000000000000025;
      unint64_t v24 = 0x80000001000FF5E0;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v26._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v26);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  v13(v9, v12, v5);
  int v19 = v14(v9, v5);
  if (v19 != v16)
  {
    if (v19 == enum case for InternalWidgetFamily.systemMedium(_:)
      || (v19 != enum case for InternalWidgetFamily.systemLarge(_:)
        ? (BOOL v20 = v19 == enum case for InternalWidgetFamily.newsLargeTall(_:))
        : (BOOL v20 = 1),
          v20))
    {
      sub_100082440();
      return;
    }
    if (v19 != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, v22);
      unint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_1000EA840(43);
      swift_bridgeObjectRelease();
      unint64_t v23 = 0xD000000000000029;
      unint64_t v24 = 0x80000001000FF580;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v25._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v25);
      swift_bridgeObjectRelease();
LABEL_25:
      sub_1000EA960();
      __break(1u);
    }
  }
}

double sub_10007FBEC()
{
  sub_1000816D8();
  double v2 = v1;
  sub_1000829B4();
  double v4 = v3;
  double v5 = *(double *)(v0 + *(int *)(type metadata accessor for LayoutContext() + 40));
  sub_1000829B4();
  double v7 = v5 * v6;
  sub_1000816D8();
  double v9 = v7 - (v8 + v8);
  sub_1000816D8();
  double v11 = v9 + (v5 + v5) * v10;
  sub_1000829B4();
  double v13 = v2 + v4 * (sub_100082440() * (v11 / v12));
  sub_1000816D8();
  return v14 + v13;
}

uint64_t sub_10007FC74@<X0>(uint64_t a1@<X8>)
{
  id v3 = sub_10007F1DC();
  sub_1000829B4();
  double v5 = v4;
  double v6 = *(double *)(v1 + *(int *)(type metadata accessor for LayoutContext() + 40));
  sub_1000829B4();
  double v8 = v6 * v7;
  sub_1000816D8();
  double v10 = v8 - (v9 + v9);
  sub_1000816D8();
  double v12 = v10 + (v6 + v6) * v11;
  sub_1000829B4();
  double v14 = v5 * (sub_100082440() * (v12 / v13));
  uint64_t v15 = sub_1000823A8();
  uint64_t v17 = v16;
  char v19 = v18;
  sub_100081A34();
  uint64_t v21 = v20;
  sub_10007F504();
  uint64_t v23 = v22;
  sub_100081D7C();
  uint64_t v25 = v24;
  id v26 = sub_100082128();
  id v27 = [self nt_preferredFontForCondensedTextStyle:2 contentSizeCategory:UIContentSizeCategoryLarge];
  sub_100081A34();
  uint64_t v29 = v28;
  sub_100081A34();
  double v31 = v30 + 3.0;
  uint64_t result = sub_1000816D8();
  *(void *)a1 = v3;
  *(double *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v17;
  *(unsigned char *)(a1 + 32) = v19 & 1;
  *(void *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = v23;
  *(void *)(a1 + 56) = v25;
  *(void *)(a1 + 64) = v26;
  *(void *)(a1 + 72) = v27;
  *(void *)(a1 + 80) = v29;
  *(double *)(a1 + 88) = v31;
  *(void *)(a1 + 96) = v33;
  return result;
}

unint64_t sub_10007FDC0(char a1)
{
  unint64_t result = 0x696772614D706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614D6D6F74746F62;
      break;
    case 2:
      unint64_t result = 0x6E49796C696D6166;
      break;
    case 3:
    case 5:
      unint64_t result = 0x5379616C70736964;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x696C64616548746ELL;
      break;
    case 7:
      unint64_t result = 0x686563616C507369;
      break;
    case 8:
      unint64_t result = 0x6569766572507369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10007FF08(char a1)
{
  unint64_t result = 0x696772614D706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614D6D6F74746F62;
      break;
    case 2:
      unint64_t result = 0x6E49796C696D6166;
      break;
    case 3:
    case 5:
      unint64_t result = 0x5379616C70736964;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x696C64616548746ELL;
      break;
    case 7:
      unint64_t result = 0x686563616C507369;
      break;
    case 8:
      unint64_t result = 0x6569766572507369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100080050(unsigned __int8 *a1, char *a2)
{
  return sub_1000C3748(*a1, *a2);
}

Swift::Int sub_10008005C()
{
  return sub_1000EABE0();
}

uint64_t sub_1000800A4()
{
  return sub_1000C3D7C();
}

Swift::Int sub_1000800AC()
{
  return sub_1000EABE0();
}

uint64_t sub_1000800F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100083244(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_100080120@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10007FDC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10008014C()
{
  return sub_10007FF08(*v0);
}

uint64_t sub_100080154@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100083244(a1, a2);
  *a3 = result;
  return result;
}

void sub_10008017C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_100080188(uint64_t a1)
{
  unint64_t v2 = sub_100082C58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000801C4(uint64_t a1)
{
  unint64_t v2 = sub_100082C58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100080200(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_10001B38C(&qword_1001393F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_100082C58();
  sub_1000EAC20();
  *(void *)&long long v13 = *v3;
  char v14 = 0;
  sub_100082DB0();
  sub_1000EAAE0();
  if (!v2)
  {
    *(void *)&long long v13 = v3[1];
    char v14 = 1;
    sub_1000EAAE0();
    double v9 = (int *)type metadata accessor for LayoutContext();
    sub_1000E9F50();
    LOBYTE(v13) = 2;
    sub_1000EAAC0();
    long long v13 = *(_OWORD *)((char *)v3 + v9[7]);
    char v14 = 3;
    type metadata accessor for CGSize(0);
    sub_100082E04(&qword_100139408, type metadata accessor for CGSize);
    sub_1000EAAE0();
    double v11 = sub_1000765B4();
    v12[1] = sub_1000EA2B0();

    LOBYTE(v13) = 4;
    sub_1000EAAA0();
    swift_bridgeObjectRelease();
    *(void *)&long long v13 = *(void *)((char *)v3 + v9[9]);
    char v14 = 5;
    sub_1000EAAE0();
    *(void *)&long long v13 = *(void *)((char *)v3 + v9[10]);
    char v14 = 6;
    sub_1000EAAE0();
    LOBYTE(v13) = 7;
    sub_1000EAAB0();
    LOBYTE(v13) = 8;
    sub_1000EAAB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000805A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_10001B38C(&qword_1001393C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v53 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E96F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C(&qword_1001393C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E9F60();
  uint64_t v57 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001B38C(&qword_1001393D0);
  uint64_t v58 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v16);
  char v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v59 = a1;
  sub_100020A28(a1, v19);
  sub_100082C58();
  uint64_t v20 = v60;
  sub_1000EAC00();
  if (v20) {
    return sub_100020AC0((uint64_t)v59);
  }
  char v49 = v12;
  uint64_t v50 = v10;
  uint64_t v60 = (int *)v16;
  uint64_t v21 = v18;
  id v22 = v56;
  uint64_t v23 = v57;
  char v62 = 0;
  unint64_t v24 = sub_100082CAC();
  uint64_t v25 = v15;
  sub_1000EAA70();
  uint64_t v26 = v13;
  id v27 = v21;
  void *v21 = v61;
  char v62 = 1;
  sub_1000EAA70();
  uint64_t v28 = v26;
  uint64_t v29 = v58;
  unint64_t v48 = v24;
  v21[1] = v61;
  LOBYTE(v61) = 2;
  sub_1000EAA50();
  uint64_t v46 = v25;
  uint64_t v47 = v28;
  sub_1000E9F40();
  uint64_t v31 = v50;
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v23 + 48))(v22, 1, v50) == 1)
  {
    sub_100028B6C((uint64_t)v22, &qword_1001393C8);
    sub_100082D00();
    swift_allocError();
    *int v32 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v46, v47);
    return sub_100020AC0((uint64_t)v59);
  }
  uint64_t v33 = v49;
  (*(void (**)(char *, id, uint64_t))(v23 + 32))(v49, v22, v31);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))((char *)v21 + v60[6], v33, v31);
  type metadata accessor for CGSize(0);
  char v62 = 3;
  sub_100082E04(&qword_1001393F0, type metadata accessor for CGSize);
  sub_1000EAA70();
  *(_OWORD *)((char *)v21 + v60[7]) = v61;
  LOBYTE(v61) = 4;
  sub_1000EAA30();
  uint64_t v34 = v55;
  NSString v35 = sub_1000EA280();
  swift_bridgeObjectRelease();
  uint64_t v36 = v35;
  uint64_t v37 = (uint64_t)v53;
  sub_1000E9700();
  uint64_t v38 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v37, 1, v54) == 1)
  {
    sub_100028B6C(v37, &qword_1001393C0);
    sub_100082D00();
    swift_allocError();
    *uint64_t v39 = 1;
    swift_willThrow();

    id v40 = *(void (**)(char *, uint64_t))(v57 + 8);
    uint64_t v41 = v50;
    v40(v49, v50);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v47);
    sub_100020AC0((uint64_t)v59);
    return ((uint64_t (*)(char *, uint64_t))v40)((char *)v27 + v60[6], v41);
  }
  else
  {
    uint64_t v56 = v36;
    uint64_t v42 = v37;
    id v43 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v52, v42, v38);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v21 + v60[8], v43, v38);
    char v62 = 5;
    sub_1000EAA70();
    *(void *)((char *)v21 + v60[9]) = v61;
    char v62 = 6;
    sub_1000EAA70();
    *(void *)((char *)v21 + v60[10]) = v61;
    LOBYTE(v61) = 7;
    *((unsigned char *)v21 + v60[11]) = sub_1000EAA40() & 1;
    LOBYTE(v61) = 8;
    char v44 = sub_1000EAA40();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v47);
    *((unsigned char *)v21 + v60[12]) = v44 & 1;
    sub_100081674((uint64_t)v21, v51);
    sub_100020AC0((uint64_t)v59);
    return sub_100082D54((uint64_t)v21);
  }
}

uint64_t sub_100080FDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000805A4(a1, a2);
}

uint64_t sub_100080FF4(void *a1)
{
  return sub_100080200(a1);
}

uint64_t sub_10008100C@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v22[1] = a4;
  uint64_t v10 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v10);
  double v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000E9F60();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v5 + *(int *)(v10 + 24), v13);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == enum case for InternalWidgetFamily.systemSmall(_:)) {
    goto LABEL_2;
  }
  if (v17 == enum case for InternalWidgetFamily.systemMedium(_:)
    || (v17 != enum case for InternalWidgetFamily.systemLarge(_:)
      ? (BOOL v19 = v17 == enum case for InternalWidgetFamily.newsLargeTall(_:))
      : (BOOL v19 = 1),
        v19))
  {
    uint64_t v18 = *a2;
    goto LABEL_10;
  }
  if (v17 == enum case for InternalWidgetFamily.accessoryRectangular(_:))
  {
LABEL_2:
    uint64_t v18 = *a1;
LABEL_10:
    uint64_t v20 = sub_1000E96F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a5, v18, v20);
  }
  sub_100081674(v5, (uint64_t)v12);
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1000EA840(49);
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD00000000000002FLL;
  unint64_t v24 = a3;
  sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
  v25._countAndFlagsBits = sub_1000EAB10();
  sub_1000EA370(v25);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1000EA960();
  __break(1u);
  return result;
}

id sub_1000812DC()
{
  uint64_t v0 = sub_1000E96F0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v23 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - v8;
  sub_10001B38C(&qword_1001375B8);
  uint64_t inited = swift_initStackObject();
  long long v23 = xmmword_1000F1610;
  *(_OWORD *)(inited + 16) = xmmword_1000F1610;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  sub_10001B38C(&qword_1001375C0);
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = v23;
  *(void *)(v11 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v11 + 40) = UIFontWeightBold;
  double v12 = UIFontDescriptorTraitsAttribute;
  uint64_t v13 = UIFontWeightTrait;
  unint64_t v14 = sub_1000B5358(v11);
  *(void *)(inited + 64) = sub_10001B38C(&qword_1001375C8);
  *(void *)(inited + 40) = v14;
  sub_1000B5464(inited);
  type metadata accessor for LayoutContext();
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.medium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraSmall(_:), 0x80000001000FF550, 150, (uint64_t)v7);
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:), 0x80000001000FF520, 163, (uint64_t)v4);
  sub_100076874((uint64_t)v7, (uint64_t)v4, (uint64_t)v9);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v4, v0);
  v15(v7, v0);
  uint64_t v16 = sub_1000765B4();
  v15(v9, v0);
  id v17 = [self traitCollectionWithPreferredContentSizeCategory:v16];

  id v18 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleCallout compatibleWithTraitCollection:v17];
  type metadata accessor for AttributeName(0);
  sub_100082E04((unint64_t *)&qword_1001365F8, type metadata accessor for AttributeName);
  Class isa = sub_1000EA1B0().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v18 fontDescriptorByAddingAttributes:isa];

  id v21 = [self fontWithDescriptor:v20 size:0.0];
  return v21;
}

uint64_t sub_100081674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayoutContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000816D8()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1000E9F60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v0 + *(int *)(v1 + 24), v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (result == enum case for InternalWidgetFamily.systemSmall(_:))
  {
    sub_100081674(v0, (uint64_t)v6);
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_1000EA840(46);
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD00000000000002CLL;
    unint64_t v14 = 0x80000001000FF5B0;
    sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
    v15._countAndFlagsBits = sub_1000EAB10();
    sub_1000EA370(v15);
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t result = sub_1000EA960();
    __break(1u);
    return result;
  }
  if (result != enum case for InternalWidgetFamily.systemMedium(_:))
  {
    BOOL v12 = result == enum case for InternalWidgetFamily.systemLarge(_:)
       || result == enum case for InternalWidgetFamily.newsLargeTall(_:);
    if (!v12 && result != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, (uint64_t)v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_1000EA840(46);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD00000000000002CLL;
      unint64_t v14 = 0x80000001000FF5B0;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v16._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v16);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  return result;
}

void sub_100081A34()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E9F60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v0 + *(int *)(v1 + 24), v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 != enum case for InternalWidgetFamily.systemSmall(_:))
  {
    if (v8 == enum case for InternalWidgetFamily.systemMedium(_:)
      || v8 == enum case for InternalWidgetFamily.systemLarge(_:)
      || v8 == enum case for InternalWidgetFamily.newsLargeTall(_:))
    {
      sub_1000829B4();
      sub_1000829B4();
      sub_1000816D8();
      sub_1000816D8();
      sub_1000829B4();
      sub_100082440();
    }
    else if (v8 != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, (uint64_t)v3);
      unint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_1000EA840(47);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD00000000000002DLL;
      unint64_t v12 = 0x80000001000FF610;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v13._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v13);
      swift_bridgeObjectRelease();
      sub_1000EA960();
      __break(1u);
    }
  }
}

uint64_t sub_100081D20()
{
  double v1 = *(double *)(v0 + *(int *)(type metadata accessor for LayoutContext() + 36));
  sub_100081A34();
  double v3 = v1 * v2;
  BOOL v4 = v3 >= 24.0 || v3 < 22.0;
  uint64_t v5 = 1;
  if (v4) {
    uint64_t v5 = 2;
  }
  if (v3 >= 22.0 || v3 < 0.0) {
    return v5;
  }
  else {
    return 0;
  }
}

void sub_100081D7C()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  uint64_t v2 = __chkstk_darwin(v1);
  BOOL v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1000E9F60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v0 + *(int *)(v1 + 24), v7);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == enum case for InternalWidgetFamily.systemSmall(_:))
  {
    sub_100081674(v0, (uint64_t)v6);
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_1000EA840(41);
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000027;
    unint64_t v14 = 0x80000001000FF670;
    sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
    v15._countAndFlagsBits = sub_1000EAB10();
    sub_1000EA370(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v11 == enum case for InternalWidgetFamily.systemMedium(_:)
      || (v11 != enum case for InternalWidgetFamily.systemLarge(_:)
        ? (BOOL v12 = v11 == enum case for InternalWidgetFamily.newsLargeTall(_:))
        : (BOOL v12 = 1),
          v12 || v11 == enum case for InternalWidgetFamily.accessoryRectangular(_:)))
    {
      sub_1000829B4();
      sub_1000816D8();
      sub_1000816D8();
      sub_1000829B4();
      sub_100082440();
      return;
    }
    sub_100081674(v0, (uint64_t)v4);
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_1000EA840(41);
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000027;
    unint64_t v14 = 0x80000001000FF670;
    sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
    v16._countAndFlagsBits = sub_1000EAB10();
    sub_1000EA370(v16);
    swift_bridgeObjectRelease();
  }
  sub_1000EA960();
  __break(1u);
}

id sub_100082128()
{
  uint64_t v0 = sub_1000E96F0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  BOOL v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v20 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_100083290();
  uint64_t v10 = (void *)sub_1000EA6C0();
  int v11 = self;
  type metadata accessor for LayoutContext();
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.medium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraSmall(_:), 0x80000001000FF550, 150, (uint64_t)v7);
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:), 0x80000001000FF520, 163, (uint64_t)v4);
  sub_100076874((uint64_t)v7, (uint64_t)v4, (uint64_t)v9);
  BOOL v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v7, v0);
  unint64_t v13 = sub_1000765B4();
  v12(v9, v0);
  id v14 = [v11 nt_preferredFontForCondensedTextStyle:2 contentSizeCategory:v13];

  [v14 nt_scaledValueForValue:1.0];
  double v16 = v15;

  sub_100082658();
  id v18 = [v10 fontWithSize:v16 * v17];

  return v18;
}

uint64_t sub_1000823A8()
{
  sub_1000829B4();
  double v2 = v1;
  double v3 = *(double *)(v0 + *(int *)(type metadata accessor for LayoutContext() + 40));
  sub_1000829B4();
  double v5 = v3 * v4;
  sub_1000816D8();
  double v7 = v5 - (v6 + v6);
  sub_1000816D8();
  double v9 = v7 + (v3 + v3) * v8;
  sub_1000829B4();
  if (v2 * (sub_100082440() * (v9 / v10)) + -16.0 >= 36.0) {
    return 0x4042000000000000;
  }
  else {
    return 0;
  }
}

double sub_100082440()
{
  uint64_t v0 = sub_1000E96F0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  double v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  double v7 = (char *)&v17 - v6;
  __chkstk_darwin(v5);
  double v9 = (char *)&v17 - v8;
  double v10 = self;
  type metadata accessor for LayoutContext();
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.medium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraSmall(_:), 0x80000001000FF550, 150, (uint64_t)v7);
  sub_10008100C((unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:), (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:), 0x80000001000FF520, 163, (uint64_t)v4);
  sub_100076874((uint64_t)v7, (uint64_t)v4, (uint64_t)v9);
  int v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v7, v0);
  BOOL v12 = sub_1000765B4();
  v11(v9, v0);
  id v13 = [v10 nt_preferredFontForCondensedTextStyle:2 contentSizeCategory:v12];

  [v13 nt_scaledValueForValue:1.0];
  double v15 = v14;

  return v15;
}

uint64_t sub_100082658()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  uint64_t v2 = __chkstk_darwin(v1);
  double v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1000E9F60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v0 + *(int *)(v1 + 24), v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (result == enum case for InternalWidgetFamily.systemSmall(_:))
  {
    sub_100081674(v0, (uint64_t)v6);
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_1000EA840(39);
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000025;
    unint64_t v14 = 0x80000001000FF640;
    sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
    v15._countAndFlagsBits = sub_1000EAB10();
    sub_1000EA370(v15);
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t result = sub_1000EA960();
    __break(1u);
    return result;
  }
  if (result != enum case for InternalWidgetFamily.systemMedium(_:))
  {
    BOOL v12 = result == enum case for InternalWidgetFamily.systemLarge(_:)
       || result == enum case for InternalWidgetFamily.newsLargeTall(_:);
    if (!v12 && result != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, (uint64_t)v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_1000EA840(39);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD000000000000025;
      unint64_t v14 = 0x80000001000FF640;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v16._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v16);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  return result;
}

void sub_1000829B4()
{
  uint64_t v1 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E9F60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v0 + *(int *)(v1 + 24), v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 != enum case for InternalWidgetFamily.systemSmall(_:))
  {
    if (v8 == enum case for InternalWidgetFamily.systemMedium(_:)
      || (v8 != enum case for InternalWidgetFamily.systemLarge(_:)
        ? (BOOL v9 = v8 == enum case for InternalWidgetFamily.newsLargeTall(_:))
        : (BOOL v9 = 1),
          v9))
    {
      sub_100082440();
    }
    else if (v8 != enum case for InternalWidgetFamily.accessoryRectangular(_:))
    {
      sub_100081674(v0, (uint64_t)v3);
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_1000EA840(43);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000029;
      unint64_t v11 = 0x80000001000FF580;
      sub_100082E04((unint64_t *)&unk_10013A660, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
      v12._countAndFlagsBits = sub_1000EAB10();
      sub_1000EA370(v12);
      swift_bridgeObjectRelease();
      sub_1000EA960();
      __break(1u);
    }
  }
}

unint64_t sub_100082C58()
{
  unint64_t result = qword_1001393D8;
  if (!qword_1001393D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001393D8);
  }
  return result;
}

unint64_t sub_100082CAC()
{
  unint64_t result = qword_1001393E0;
  if (!qword_1001393E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001393E0);
  }
  return result;
}

unint64_t sub_100082D00()
{
  unint64_t result = qword_1001393E8;
  if (!qword_1001393E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001393E8);
  }
  return result;
}

uint64_t sub_100082D54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100082DB0()
{
  unint64_t result = qword_100139400;
  if (!qword_100139400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139400);
  }
  return result;
}

uint64_t sub_100082E04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LayoutContext.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100082F18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutContext.Errors()
{
  return &type metadata for LayoutContext.Errors;
}

uint64_t getEnumTagSinglePayload for LayoutContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LayoutContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000830ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutContext.CodingKeys()
{
  return &type metadata for LayoutContext.CodingKeys;
}

unint64_t sub_1000830E8()
{
  unint64_t result = qword_100139410;
  if (!qword_100139410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139410);
  }
  return result;
}

unint64_t sub_100083140()
{
  unint64_t result = qword_100139418;
  if (!qword_100139418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139418);
  }
  return result;
}

unint64_t sub_100083198()
{
  unint64_t result = qword_100139420;
  if (!qword_100139420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139420);
  }
  return result;
}

unint64_t sub_1000831F0()
{
  unint64_t result = qword_100139428;
  if (!qword_100139428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139428);
  }
  return result;
}

uint64_t sub_100083244(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001243D8;
  v6._object = a2;
  unint64_t v4 = sub_1000EA9E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

unint64_t sub_100083290()
{
  unint64_t result = qword_100139430;
  if (!qword_100139430)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100139430);
  }
  return result;
}

uint64_t Type3Widget.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = *(void *)(a1 + 24);
  *(void *)(v7 + 16) = *(void *)(a1 + 16);
  *(void *)(v7 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_10001B3D0(&qword_100138BA8);
  sub_1000E93C0();
  sub_1000E93C0();
  sub_1000E93C0();
  unint64_t v9 = sub_100083B74();
  uint64_t v22 = v8;
  unint64_t v23 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  id v21 = &protocol witness table for _FrameLayout;
  uint64_t v10 = swift_getWitnessTable();
  unint64_t v11 = sub_100083BD0();
  uint64_t v18 = v10;
  unint64_t v19 = v11;
  swift_getWitnessTable();
  uint64_t v16 = sub_1000E9340();
  uint64_t v17 = v12;
  uint64_t v13 = sub_1000E9350();
  swift_getWitnessTable();
  unint64_t v14 = *(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v24, &v16, v13);
  swift_release();
  uint64_t v16 = v24[0];
  uint64_t v17 = v24[1];
  v14(a2, &v16, v13);
  return swift_release();
}

uint64_t sub_100083560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v39 = a4;
  uint64_t v40 = a1;
  uint64_t v5 = sub_1000E93F0();
  __chkstk_darwin(v5);
  uint64_t v7 = (int64x2_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001B3D0(&qword_100138BA8);
  uint64_t v8 = sub_1000E93C0();
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_1000E93C0();
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int v32 = (char *)&v31 - v12;
  uint64_t v13 = sub_1000E93C0();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  NSString v35 = (char *)&v31 - v16;
  uint64_t v17 = &v7->i8[*(int *)(v5 + 20)];
  uint64_t v18 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v19 = sub_1000E96A0();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  *uint64_t v7 = vdupq_n_s64(0x4044000000000000uLL);
  sub_1000843CC();
  sub_1000E9B80();
  sub_100084424((uint64_t)v7);
  sub_1000E9310();
  sub_1000E9DC0();
  unint64_t v20 = sub_100083B74();
  uint64_t v45 = a3;
  unint64_t v46 = v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = v32;
  sub_1000E9B50();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  sub_1000E9310();
  sub_1000E9310();
  uint64_t v43 = WitnessTable;
  char v44 = &protocol witness table for _FrameLayout;
  uint64_t v23 = swift_getWitnessTable();
  unint64_t v24 = v33;
  sub_1000E9B60();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v11);
  unint64_t v25 = sub_100083BD0();
  uint64_t v41 = v23;
  unint64_t v42 = v25;
  swift_getWitnessTable();
  uint64_t v26 = v37;
  id v27 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v28 = v35;
  v27(v35, v24, v13);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v24, v13);
  v27(v39, v28, v13);
  return ((uint64_t (*)(char *, uint64_t))v29)(v28, v13);
}

uint64_t sub_1000839EC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for Type3Widget() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t type metadata accessor for Type3Widget()
{
  return sub_1000674DC();
}

uint64_t sub_100083AD8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(type metadata accessor for Type3Widget() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100083560(a1, v7, v5, a2);
}

unint64_t sub_100083B74()
{
  unint64_t result = qword_100138BE8[0];
  if (!qword_100138BE8[0])
  {
    sub_10001B3D0(&qword_100138BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100138BE8);
  }
  return result;
}

unint64_t sub_100083BD0()
{
  unint64_t result = qword_100139438[0];
  if (!qword_100139438[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100139438);
  }
  return result;
}

uint64_t sub_100083C24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100083C6C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100083CFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_100083DB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_100083DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100083E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100083E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100083ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100083F20(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_10008407C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100084294);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1000842BC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1000843CC()
{
  unint64_t result = qword_1001394C0;
  if (!qword_1001394C0)
  {
    sub_1000E93F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001394C0);
  }
  return result;
}

uint64_t sub_100084424(uint64_t a1)
{
  uint64_t v2 = sub_1000E93F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100084480()
{
  uint64_t v1 = sub_1000E8A90();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 items];
  unint64_t v6 = (unint64_t)[v5 count];
  unsigned int v14 = _swiftEmptyArrayStorage;
  sub_1000EA8E0();
  id v7 = v5;
  sub_1000EA5E0();

  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v9 = v2;
  if (v6)
  {
    sub_100084740();
    do
    {
      sub_1000EA740();
      if (!v13) {
        goto LABEL_10;
      }
      sub_100029614((uint64_t)&v12, (uint64_t)&v10);
      sub_10001B38C(&qword_100137270);
      swift_dynamicCast();
      sub_100020AC0((uint64_t)&v12);
      sub_1000EA8C0();
      sub_1000EA8F0();
      sub_1000EA900();
      sub_1000EA8D0();
    }
    while (--v6);
  }
  sub_100084740();
  sub_1000EA740();
  while (v11)
  {
    sub_100028BC8(&v10, &v12);
    sub_100029614((uint64_t)&v12, (uint64_t)&v10);
    sub_10001B38C(&qword_100137270);
    swift_dynamicCast();
    sub_100020AC0((uint64_t)&v12);
    sub_1000EA8C0();
    sub_1000EA8F0();
    sub_1000EA900();
    sub_1000EA8D0();
    sub_1000EA740();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v1);
  sub_100084798((uint64_t)&v10);
}

unint64_t sub_100084740()
{
  unint64_t result = qword_1001394D0;
  if (!qword_1001394D0)
  {
    sub_1000E8A90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001394D0);
  }
  return result;
}

uint64_t sub_100084798(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C((uint64_t *)&unk_1001394E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *NTTodayResults.allItems.getter()
{
  id v1 = [v0 sections];
  id v2 = [v1 array];

  uint64_t v3 = sub_1000EA470();
  unint64_t v4 = (unint64_t)sub_100084B00(v3);
  swift_bridgeObjectRelease();
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    unint64_t v6 = 0;
    unint64_t v17 = v4 & 0xC000000000000001;
    int v15 = (void *)(v4 + 32);
    uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v17)
      {
        id v7 = (id)sub_1000EA870();
      }
      else
      {
        if (v6 >= *(void *)(v16 + 16)) {
          goto LABEL_26;
        }
        id v7 = (id)v15[v6];
      }
      uint64_t v8 = v7;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      unint64_t v4 = v5;
      sub_100084480();
      unint64_t v11 = v10;
      if (v10 >> 62)
      {
        uint64_t v12 = sub_1000EA980();
        if (!v12) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v12) {
          goto LABEL_4;
        }
      }
      if (v12 < 1) {
        goto LABEL_25;
      }
      uint64_t v13 = 0;
      do
      {
        if ((v11 & 0xC000000000000001) != 0) {
          sub_1000EA870();
        }
        else {
          swift_unknownObjectRetain();
        }
        swift_unknownObjectRetain();
        sub_1000EA450();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000EA4C0();
        }
        ++v13;
        sub_1000EA4F0();
        sub_1000EA490();
        swift_unknownObjectRelease();
      }
      while (v12 != v13);
LABEL_4:

      swift_bridgeObjectRelease();
      if (v6 == v5) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1000EA980();
    swift_bridgeObjectRelease();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *NTTodayResults.sectionsArray.getter()
{
  id v1 = [v0 sections];
  id v2 = [v1 array];

  uint64_t v3 = sub_1000EA470();
  unint64_t v4 = sub_100084B00(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_100084B00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    unint64_t v6 = _swiftEmptyArrayStorage;
    sub_1000EA8E0();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_100029614(v4, (uint64_t)&v5);
      sub_1000856FC();
      swift_dynamicCast();
      sub_1000EA8C0();
      sub_1000EA8F0();
      sub_1000EA900();
      sub_1000EA8D0();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_100084BDC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v15 = (char *)&v26 - v14;
  id v16 = [a1 actionURL];
  if (!v16)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v19(v8, 1, 1, v9);
LABEL_5:
    sub_100020B20((uint64_t)v8);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(a3, 1, 1, v9);
  }
  unint64_t v17 = v16;
  sub_1000E8B20();

  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v8, v13, v9);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v19(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_5;
  }
  v18(v15, v8, v9);
  if (qword_100135D38 != -1) {
    swift_once();
  }
  sub_10001C4C8(v9, (uint64_t)qword_10014BBD8);
  sub_1000855BC();
  if (sub_1000EA240())
  {
    v18((char *)a3, v15, v9);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v19)(a3, 0, 1, v9);
  }
  else
  {
    id v21 = self;
    sub_1000E8AE0(v22);
    unint64_t v24 = v23;
    id v25 = [v21 engagementDescriptorWithTargetURL:v23];

    sub_100020A28(a2, a2[3]);
    sub_1000D0B14(v25, a3);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

void *sub_100084F20(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageStore.Key();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v26 - v15;
  unint64_t v17 = 0;
  if ([a1 imageMethod] != (id)2) {
    return v17;
  }
  id v18 = [a1 imageURL];
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_8;
  }
  uint64_t v19 = v18;
  sub_1000E8B20();

  unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v9, v14, v10);
  id v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
  v21(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_8:
    sub_100020B20((uint64_t)v9);
    return 0;
  }
  v20(v16, v9, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v16, v10);
  v21(v6, 0, 1, v10);
  if (*(void *)(a2 + 16) && (unint64_t v22 = sub_10003BC3C((uint64_t)v6), (v23 & 1) != 0))
  {
    unint64_t v17 = *(void **)(*(void *)(a2 + 56) + 8 * v22);
    id v24 = v17;
  }
  else
  {
    unint64_t v17 = 0;
  }
  sub_100085560((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v17;
}

uint64_t sub_100085210@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16 = sub_10001B38C((uint64_t *)&unk_10013A350);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v23[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002D970(a4, (uint64_t)v23);
  if (a1)
  {
    uint64_t v19 = sub_1000E8C50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    a6 = 0;
  }
  else
  {
    sub_100085614(a7, (uint64_t)v18);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002B7BC(a2, a3, v23, a5, a6 & 1, (uint64_t)v18, a8);
  uint64_t v20 = type metadata accessor for Section();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a8, 0, 1, v20);
}

uint64_t sub_100085390(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_1000EA4C0();
  }
  return result;
}

uint64_t (*sub_1000853BC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000854D8(v6, a2, a3);
  return sub_100085424;
}

uint64_t (*sub_100085428(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10008567C(v6, a2, a3);
  return sub_100085424;
}

void sub_100085490(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1000854D8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1000EA870();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_100085558;
  }
  __break(1u);
  return result;
}

uint64_t sub_100085558()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100085560(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageStore.Key();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000855BC()
{
  unint64_t result = qword_100139F70;
  if (!qword_100139F70)
  {
    sub_1000E8B60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139F70);
  }
  return result;
}

uint64_t sub_100085614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C((uint64_t *)&unk_10013A350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_10008567C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1000EA870();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_10008573C;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000856FC()
{
  unint64_t result = qword_1001371D0;
  if (!qword_1001371D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001371D0);
  }
  return result;
}

unint64_t sub_100085744()
{
  unint64_t result = qword_100139500;
  if (!qword_100139500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139500);
  }
  return result;
}

uint64_t sub_100085798()
{
  return sub_10001D100(&qword_100139508, &qword_100139510);
}

uint64_t sub_1000857D4()
{
  uint64_t v0 = sub_10001B38C(&qword_100139550);
  sub_10001C500(v0, qword_10014BC08);
  sub_10001C4C8(v0, (uint64_t)qword_10014BC08);
  sub_100087368();
  return sub_1000E8840();
}

uint64_t sub_100085850(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100085994, 0, 0);
}

uint64_t sub_100085994()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100139510);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_1001395E0, &qword_1001395E8);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100085B38()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014BC20);
  sub_10001C4C8(v10, (uint64_t)qword_10014BC20);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_100085E10()
{
  uint64_t v0 = sub_10001B38C(&qword_1001395C0);
  sub_10001C500(v0, qword_10014BC38);
  sub_10001C4C8(v0, (uint64_t)qword_10014BC38);
  sub_100086E0C();
  return sub_1000E88B0();
}

uint64_t sub_100085E8C()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_1000860C8()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014BC50);
  sub_10001C4C8(v0, (uint64_t)qword_10014BC50);
  return sub_1000E8A50();
}

uint64_t sub_10008612C()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014BC68);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014BC68);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000861E4()
{
  uint64_t result = swift_getKeyPath();
  qword_10014BC80 = result;
  return result;
}

uint64_t sub_10008620C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  void v3[6] = a1;
  return _swift_task_switch(sub_100086230, 0, 0);
}

uint64_t sub_100086230()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135D70 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BC80;
  *(void *)(v0 + 80) = qword_10014BC80;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_1001395E0, &qword_1001395E8);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_10008638C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10008638C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_1000864E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000864E0()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014BC80;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_1000865BC()
{
  if (qword_100135D70 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10008661C()
{
  unint64_t result = qword_100139518;
  if (!qword_100139518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139518);
  }
  return result;
}

unint64_t sub_100086674()
{
  unint64_t result = qword_100139520;
  if (!qword_100139520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139520);
  }
  return result;
}

uint64_t sub_1000866C8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000866FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008674C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135D60, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014BC50, a1);
}

uint64_t sub_100086784@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135D68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BC68);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_100086800(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_100086230, 0, 0);
}

uint64_t sub_1000868B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100087B24();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000868DC()
{
  return 0xD000000000000026;
}

unint64_t sub_1000868FC()
{
  unint64_t result = qword_100139530;
  if (!qword_100139530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139530);
  }
  return result;
}

unint64_t sub_100086954()
{
  unint64_t result = qword_100139538;
  if (!qword_100139538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139538);
  }
  return result;
}

unint64_t sub_1000869AC()
{
  unint64_t result = qword_100139540;
  if (!qword_100139540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139540);
  }
  return result;
}

uint64_t sub_100086A00()
{
  return sub_10001D100(&qword_100139548, &qword_100139550);
}

uint64_t sub_100086A3C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100086A5C, 0, 0);
}

uint64_t sub_100086A5C()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100086B38(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = sub_1000E8C50();
  *(void *)(v2 + 16) = v4;
  *(void *)(v2 + 24) = *(void *)(v4 - 8);
  *(void *)(v2 + 32) = swift_task_alloc();
  *(unsigned char *)(v2 + 42) = *a2;
  return _swift_task_switch(sub_100086C00, 0, 0);
}

uint64_t sub_100086C00()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 16);
    *(unsigned char *)(v0 + 41) = *(unsigned char *)(v0 + 42);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
    id v4 = (id)NewsCoreUserDefaults();
    sub_1000E8C40();
    Class isa = sub_1000E8BD0().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    [v4 setObject:isa forKey:FCOptimizedStorageLastUserInteractionKey];
  }
  else
  {
    sub_10001C620();
    swift_allocError();
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100086DDC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135D48, &qword_100139550, (uint64_t)qword_10014BC08, a1);
}

unint64_t sub_100086E0C()
{
  unint64_t result = qword_100139558;
  if (!qword_100139558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139558);
  }
  return result;
}

uint64_t sub_100086E60()
{
  return sub_10001D100(&qword_100139560, &qword_100139550);
}

uint64_t sub_100086E9C()
{
  uint64_t v0 = qword_1001394F0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100086ED8()
{
  unint64_t result = qword_100139568;
  if (!qword_100139568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139568);
  }
  return result;
}

uint64_t sub_100086F2C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135D58, &qword_1001395C0, (uint64_t)qword_10014BC38, a1);
}

unint64_t sub_100086F5C()
{
  unint64_t result = qword_100139570;
  if (!qword_100139570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139570);
  }
  return result;
}

unint64_t sub_100086FB4()
{
  unint64_t result = qword_100139578;
  if (!qword_100139578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139578);
  }
  return result;
}

unint64_t sub_10008700C()
{
  unint64_t result = qword_100139580;
  if (!qword_100139580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139580);
  }
  return result;
}

unint64_t sub_100087064()
{
  unint64_t result = qword_100139588;
  if (!qword_100139588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139588);
  }
  return result;
}

uint64_t sub_1000870B8@<X0>(uint64_t *a1@<X8>)
{
  sub_100087368();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000870F8()
{
  sub_100087314();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_10008718C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135D50, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014BC20, a1);
}

uint64_t sub_1000871C4()
{
  return sub_10001D100(&qword_100139598, &qword_1001395A0);
}

uint64_t sub_100087200(uint64_t a1)
{
  unint64_t v2 = sub_100086E0C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100087250()
{
  unint64_t result = qword_1001395A8;
  if (!qword_1001395A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001395A8);
  }
  return result;
}

uint64_t sub_1000872A8(uint64_t a1)
{
  unint64_t v2 = sub_100087064();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OptimizeStorageEntity()
{
  return &type metadata for OptimizeStorageEntity;
}

ValueMetadata *type metadata accessor for OptimizeStorageEntity.UpdateIntent_value()
{
  return &type metadata for OptimizeStorageEntity.UpdateIntent_value;
}

unint64_t sub_100087314()
{
  unint64_t result = qword_1001395B0;
  if (!qword_1001395B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001395B0);
  }
  return result;
}

unint64_t sub_100087368()
{
  unint64_t result = qword_1001395B8;
  if (!qword_1001395B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001395B8);
  }
  return result;
}

uint64_t sub_1000873BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v29 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C(&qword_100139600);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001B38C(&qword_100139608);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  __chkstk_darwin(v12);
  uint64_t v28 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_100087368();
  uint64_t v15 = sub_10001B3D0(&qword_100136628);
  uint64_t v16 = sub_1000E9740();
  uint64_t v17 = sub_10001D100(&qword_100136630, &qword_100136628);
  unint64_t v18 = sub_1000397BC();
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  uint64_t v39 = v17;
  unint64_t v40 = v18;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v19 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v1);
  sub_1000E9680();
  uint64_t v37 = v1;
  uint64_t v38 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v30;
  sub_1000E9750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v21);
  uint64_t v37 = v21;
  uint64_t v38 = OpaqueTypeConformance2;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  char v23 = v28;
  uint64_t v24 = v32;
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v24);
  uint64_t v37 = v24;
  uint64_t v38 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v34;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v23, v25);
}

uint64_t sub_100087928()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_1000397BC();
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100087B24()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_1001395F0);
  sub_1000E8A50();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100086E0C();
  uint64_t v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

uint64_t sub_100087F64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for OptimizeStorageToggleControl()
{
  return &type metadata for OptimizeStorageToggleControl;
}

uint64_t sub_100087F80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100087F9C()
{
  return swift_getOpaqueTypeConformance2();
}

id WidgetPersonalizationConfigurationManager.__allocating_init(appConfigurationManager:)()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(v0);
  uint64_t v3 = (objc_class *)sub_1000E9120();
  objc_allocWithZone(v3);
  uint64_t v4 = (char *)v2;
  swift_unknownObjectRetain();
  uint64_t v5 = sub_1000E9110();
  uint64_t v6 = (uint64_t *)&v4[OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager];
  v6[3] = (uint64_t)v3;
  v6[4] = (uint64_t)&protocol witness table for NewsAppConfigurationManager;
  uint64_t *v6 = v5;

  v9.receiver = v4;
  v9.super_class = v1;
  id v7 = [super init];
  swift_unknownObjectRelease();
  return v7;
}

id WidgetPersonalizationConfigurationManager.init(appConfigurationManager:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = (objc_class *)sub_1000E9120();
  objc_allocWithZone(v2);
  uint64_t v3 = v0;
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1000E9110();
  uint64_t v5 = (uint64_t *)&v3[OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager];
  v5[3] = (uint64_t)v2;
  v5[4] = (uint64_t)&protocol witness table for NewsAppConfigurationManager;
  uint64_t *v5 = v4;

  v8.receiver = v3;
  v8.super_class = ObjectType;
  id v6 = [super init];
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100088264@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_10001B38C(&qword_100139640);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  uint64_t v36 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100139648);
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  __chkstk_darwin(v5);
  uint64_t v35 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100139650);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C(&qword_100139658);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001B38C(&qword_100139660);
  __chkstk_darwin(v14 - 8);
  uint64_t v38 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 respondsToSelector:"articleEmbeddingsScoringEnabled"]) {
    [a1 articleEmbeddingsScoringEnabled];
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for FeatureState.Feature.articleEmbeddingsScoring<A>(_:), v10);
  if ([a1 respondsToSelector:"newsPersonalizationConfiguration"])
  {
    id v16 = [a1 newsPersonalizationConfiguration];
    id v17 = [v16 articleEmbeddingsConfiguration];
  }
  else
  {
    id v17 = 0;
  }
  id v40 = v17;
  sub_100088BCC();
  sub_1000E9130();

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ([a1 respondsToSelector:"clientSideEngagementBoostEnabled"]) {
    unsigned int v30 = [a1 clientSideEngagementBoostEnabled];
  }
  else {
    unsigned int v30 = 0;
  }
  if ([a1 respondsToSelector:"fallbackToReverseChronSorting"]) {
    unsigned int v29 = [a1 fallbackToReverseChronSorting];
  }
  else {
    unsigned int v29 = 0;
  }
  id v18 = [a1 personalizationTreatment];
  uint64_t v19 = enum case for FeatureState.disabled<A>(_:);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v39, enum case for FeatureState.disabled<A>(_:), v7);
  if ([a1 respondsToSelector:"publisherDampeningConfig"])
  {
    id v20 = [a1 publisherDampeningConfig];
  }
  else
  {
    sub_1000B5BD4((uint64_t)_swiftEmptyArrayStorage);
    id v21 = objc_allocWithZone((Class)FCPersonalizationPublisherDampeningConfig);
    Class isa = sub_1000EA1B0().super.isa;
    swift_bridgeObjectRelease();
    [v21 initWithConfig:isa];
  }
  if ([a1 respondsToSelector:"shadowPublisherDampeningConfig"])
  {
    [a1 shadowPublisherDampeningConfig];
  }
  else
  {
    sub_1000B5BD4((uint64_t)_swiftEmptyArrayStorage);
    id v23 = objc_allocWithZone((Class)FCPersonalizationPublisherDampeningConfig);
    Class v24 = sub_1000EA1B0().super.isa;
    swift_bridgeObjectRelease();
    [v23 initWithConfig:v24];
  }
  if ([a1 respondsToSelector:"aggregatesInWidgetsXavierEnabled"]) {
    [a1 aggregatesInWidgetsXavierEnabled];
  }
  if ([a1 respondsToSelector:"tabiScoringInWidgetsEnabled"]) {
    [a1 tabiScoringInWidgetsEnabled];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v35, v19, v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v36, v19, v34);
  id v25 = objc_allocWithZone((Class)FCStatelessPersonalizationPublisherFavorability);
  sub_10001B38C(&qword_100139670);
  Class v26 = sub_1000EA460().super.isa;
  [v25 initWithArray:v26];

  return sub_1000E9140();
}

uint64_t WidgetPersonalizationConfigurationManager.configuration.getter()
{
  sub_100020A28((void *)(v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager), *(void *)(v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager + 24));
  return sub_1000E9200();
}

uint64_t WidgetPersonalizationConfigurationManager.fetchConfigurationIfNeeded(cachedOnly:)()
{
  sub_100020A28((void *)(v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager), *(void *)(v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager + 24));
  return sub_1000E91F0();
}

uint64_t WidgetPersonalizationConfigurationManager.onChangeOfConfiguration(perform:)()
{
  sub_100020A28((void *)(v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager), *(void *)(v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager + 24));
  return sub_1000E91E0();
}

id Images.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void WidgetPersonalizationConfigurationManager.init()()
{
}

uint64_t sub_100088A8C()
{
  sub_100020A28((void *)(*v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager), *(void *)(*v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager + 24));
  return sub_1000E9200();
}

uint64_t sub_100088AE8()
{
  sub_100020A28((void *)(*v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager), *(void *)(*v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager + 24));
  return sub_1000E91F0();
}

uint64_t sub_100088B40()
{
  sub_100020A28((void *)(*v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager), *(void *)(*v0 + OBJC_IVAR____TtC10NewsToday241WidgetPersonalizationConfigurationManager_configurationManager + 24));
  return sub_1000E91E0();
}

uint64_t type metadata accessor for WidgetPersonalizationConfigurationManager()
{
  return self;
}

unint64_t sub_100088BCC()
{
  unint64_t result = qword_100139668;
  if (!qword_100139668)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100139668);
  }
  return result;
}

char *sub_100088C0C(char *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    uint64_t v9 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    type metadata accessor for Item(0);
    uint64_t v91 = v6;
    uint64_t v92 = a2;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v10;
      uint64_t v11 = type metadata accessor for Item.Headline(0);
      uint64_t v12 = *(int *)(v11 + 24);
      __dst = &a1[v12];
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = sub_1000E8B60();
      uint64_t v15 = *(void *)(v14 - 8);
      id v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        uint64_t v17 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      uint64_t v18 = *(int *)(v11 + 28);
      uint64_t v19 = &a1[v18];
      id v20 = (char *)a2 + v18;
      id v21 = (void *)*((void *)v20 + 1);
      if (v21)
      {
        uint64_t v22 = *(void **)v20;
        *(void *)uint64_t v19 = v22;
        *((void *)v19 + 1) = v21;
        id v23 = v22;
        id v24 = v21;
      }
      else
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      }
      uint64_t v6 = v91;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = *(int *)(v6 + 20);
    int __dsta = a1;
    Class v26 = &a1[v25];
    unsigned int v27 = (char *)a2 + v25;
    uint64_t v28 = *(void **)((char *)a2 + v25);
    *(void *)&a1[v25] = v28;
    unsigned int v29 = (int *)type metadata accessor for TodayContent();
    uint64_t v30 = v29[5];
    uint64_t v31 = &v26[v30];
    uint64_t v32 = &v27[v30];
    uint64_t v33 = (int *)type metadata accessor for Banner();
    uint64_t v34 = (void *)*((void *)v33 - 1);
    uint64_t v35 = (unsigned int (*)(char *, uint64_t, int *))v34[6];
    id v36 = v28;
    if (v35(v32, 1, v33))
    {
      uint64_t v37 = sub_10001B38C(&qword_1001385E0);
      memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      uint64_t v38 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v38;
      uint64_t v39 = *((void *)v32 + 3);
      *((void *)v31 + 2) = *((void *)v32 + 2);
      *((void *)v31 + 3) = v39;
      uint64_t v40 = *((void *)v32 + 5);
      *((void *)v31 + 4) = *((void *)v32 + 4);
      *((void *)v31 + 5) = v40;
      uint64_t v41 = v33[7];
      uint64_t v86 = &v31[v41];
      char v88 = &v32[v41];
      uint64_t v89 = (void (**)(char *, void, uint64_t, int *))v34;
      uint64_t v42 = sub_1000E8B60();
      uint64_t v85 = *(void *)(v42 - 8);
      uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
      uint64_t v43 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v87(v88, 1, v43))
      {
        uint64_t v44 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v86, v88, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v86, v88, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v86, 0, 1, v43);
      }
      uint64_t v45 = v33[8];
      unint64_t v46 = &v31[v45];
      uint64_t v47 = &v32[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)unint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      uint64_t v49 = v33[9];
      uint64_t v50 = *(void **)&v32[v49];
      swift_bridgeObjectRetain();
      if (v50 != (void *)1) {
        id v51 = v50;
      }
      *(void *)&v31[v49] = v50;
      uint64_t v52 = v33[10];
      uint64_t v53 = &v31[v52];
      uint64_t v54 = &v32[v52];
      uint64_t v55 = *(void **)v54;
      uint64_t v56 = (void *)*((void *)v54 + 1);
      char v57 = v54[16];
      sub_10001D614(*(void **)v54, v56);
      *(void *)uint64_t v53 = v55;
      *((void *)v53 + 1) = v56;
      v53[16] = v57;
      v89[7](v31, 0, 1, v33);
    }
    *(void *)&v26[v29[6]] = *(void *)&v27[v29[6]];
    *(void *)&v26[v29[7]] = *(void *)&v27[v29[7]];
    v26[v29[8]] = v27[v29[8]];
    uint64_t v58 = v29[9];
    uint64_t v90 = &v26[v58];
    uint64_t v59 = &v27[v58];
    uint64_t v60 = sub_1000E8B60();
    uint64_t v61 = *(void *)(v60 - 8);
    char v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v62(v59, 1, v60))
    {
      uint64_t v63 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v90, v59, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v90, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v90, 0, 1, v60);
    }
    *(void *)&v26[v29[10]] = *(void *)&v27[v29[10]];
    uint64_t v64 = v29[11];
    long long v65 = &v26[v64];
    uint64_t v66 = &v27[v64];
    uint64_t v67 = *((void *)v66 + 1);
    *(void *)long long v65 = *(void *)v66;
    *((void *)v65 + 1) = v67;
    uint64_t v68 = v29[12];
    uint64_t v69 = &v26[v68];
    uint64_t v70 = &v27[v68];
    uint64_t v71 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = *(int *)(v91 + 24);
    int v73 = &__dsta[v72];
    uint64_t v74 = (char *)v92 + v72;
    *(_OWORD *)&__dsta[v72] = *(_OWORD *)((char *)v92 + v72);
    uint64_t v75 = (int *)type metadata accessor for LayoutContext();
    uint64_t v76 = v75[6];
    uint64_t v93 = &v73[v76];
    uint64_t v77 = &v74[v76];
    uint64_t v78 = sub_1000E9F60();
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v93, v77, v78);
    uint64_t v9 = __dsta;
    *(_OWORD *)&v73[v75[7]] = *(_OWORD *)&v74[v75[7]];
    uint64_t v80 = v75[8];
    int v81 = &v73[v80];
    int v82 = &v74[v80];
    uint64_t v83 = sub_1000E96F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    *(void *)&v73[v75[9]] = *(void *)&v74[v75[9]];
    *(void *)&v73[v75[10]] = *(void *)&v74[v75[10]];
    v73[v75[11]] = v74[v75[11]];
    v73[v75[12]] = v74[v75[12]];
  }
  return v9;
}

uint64_t sub_1000892FC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Item(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = type metadata accessor for Item.Headline(0);
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_1000E8B60();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = (id *)(a1 + *(int *)(v4 + 28));
    if (v8[1])
    {
    }
  }
  uint64_t v9 = (id *)(a1 + *(int *)(a2 + 20));

  uint64_t v10 = type metadata accessor for TodayContent();
  uint64_t v11 = (char *)v9 + *(int *)(v10 + 20);
  uint64_t v12 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v12 - 1) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = &v11[v12[7]];
    uint64_t v14 = sub_1000E8B60();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    id v16 = *(void **)&v11[v12[9]];
    if (v16 != (void *)1) {

    }
    sub_10001D758(*(void **)&v11[v12[10]], *(void **)&v11[v12[10] + 8]);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v17 = (char *)v9 + *(int *)(v10 + 36);
  uint64_t v18 = sub_1000E8B60();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + *(int *)(a2 + 24);
  uint64_t v21 = type metadata accessor for LayoutContext();
  uint64_t v22 = v20 + *(int *)(v21 + 24);
  uint64_t v23 = sub_1000E9F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = v20 + *(int *)(v21 + 32);
  uint64_t v25 = sub_1000E96F0();
  Class v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);

  return v26(v24, v25);
}

void *sub_1000896B4(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for Item(0);
  char v88 = a2;
  uint64_t v90 = a1;
  uint64_t v87 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = type metadata accessor for Item.Headline(0);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1000E8B60();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    a2 = v88;
    uint64_t v16 = *(int *)(v8 + 28);
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (char *)v88 + v16;
    uint64_t v19 = (void *)*((void *)v18 + 1);
    if (v19)
    {
      uint64_t v20 = *(void **)v18;
      *uint64_t v17 = v20;
      v17[1] = v19;
      id v21 = v20;
      id v22 = v19;
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    a3 = v87;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  Class v26 = *(void **)((char *)a2 + v23);
  *uint64_t v24 = v26;
  unsigned int v27 = (int *)type metadata accessor for TodayContent();
  uint64_t v28 = v27[5];
  unsigned int v29 = (void *)((char *)v24 + v28);
  uint64_t v30 = &v25[v28];
  uint64_t v31 = (int *)type metadata accessor for Banner();
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, int *))(v32 + 48);
  id v34 = v26;
  if (v33(v30, 1, v31))
  {
    uint64_t v35 = sub_10001B38C(&qword_1001385E0);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = *((void *)v30 + 1);
    *unsigned int v29 = *(void *)v30;
    v29[1] = v36;
    uint64_t v37 = *((void *)v30 + 3);
    void v29[2] = *((void *)v30 + 2);
    _OWORD v29[3] = v37;
    uint64_t v38 = *((void *)v30 + 5);
    _OWORD v29[4] = *((void *)v30 + 4);
    void v29[5] = v38;
    uint64_t v39 = v31[7];
    __dst = (char *)v29 + v39;
    uint64_t v84 = &v30[v39];
    uint64_t v40 = sub_1000E8B60();
    uint64_t v82 = *(void *)(v40 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v83(v84, 1, v40))
    {
      uint64_t v41 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v84, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(__dst, v84, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v40);
    }
    uint64_t v42 = v31[8];
    uint64_t v43 = (void *)((char *)v29 + v42);
    uint64_t v44 = &v30[v42];
    uint64_t v45 = *((void *)v44 + 1);
    void *v43 = *(void *)v44;
    v43[1] = v45;
    uint64_t v46 = v31[9];
    uint64_t v47 = *(void **)&v30[v46];
    swift_bridgeObjectRetain();
    if (v47 != (void *)1) {
      id v48 = v47;
    }
    *(void *)((char *)v29 + v46) = v47;
    uint64_t v49 = v31[10];
    uint64_t v50 = (char *)v29 + v49;
    id v51 = &v30[v49];
    uint64_t v52 = *(void **)v51;
    uint64_t v53 = (void *)*((void *)v51 + 1);
    char v54 = v51[16];
    sub_10001D614(*(void **)v51, v53);
    *(void *)uint64_t v50 = v52;
    *((void *)v50 + 1) = v53;
    v50[16] = v54;
    (*(void (**)(void *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
  }
  *(void *)((char *)v24 + v27[6]) = *(void *)&v25[v27[6]];
  *(void *)((char *)v24 + v27[7]) = *(void *)&v25[v27[7]];
  *((unsigned char *)v24 + v27[8]) = v25[v27[8]];
  uint64_t v55 = v27[9];
  uint64_t v86 = (char *)v24 + v55;
  uint64_t v56 = &v25[v55];
  uint64_t v57 = sub_1000E8B60();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v59(v56, 1, v57))
  {
    uint64_t v60 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v86, v56, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v86, v56, v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v86, 0, 1, v57);
  }
  *(void *)((char *)v24 + v27[10]) = *(void *)&v25[v27[10]];
  uint64_t v61 = v27[11];
  char v62 = (void *)((char *)v24 + v61);
  uint64_t v63 = &v25[v61];
  uint64_t v64 = *((void *)v63 + 1);
  *char v62 = *(void *)v63;
  v62[1] = v64;
  uint64_t v65 = v27[12];
  uint64_t v66 = (void *)((char *)v24 + v65);
  uint64_t v67 = &v25[v65];
  uint64_t v68 = *((void *)v67 + 1);
  *uint64_t v66 = *(void *)v67;
  v66[1] = v68;
  uint64_t v69 = *(int *)(v87 + 24);
  uint64_t v70 = (char *)v90 + v69;
  uint64_t v71 = (char *)v88 + v69;
  *(_OWORD *)((char *)v90 + v69) = *(_OWORD *)((char *)v88 + v69);
  uint64_t v72 = (int *)type metadata accessor for LayoutContext();
  uint64_t v73 = v72[6];
  uint64_t v89 = &v70[v73];
  uint64_t v74 = &v71[v73];
  uint64_t v75 = sub_1000E9F60();
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v76(v89, v74, v75);
  *(_OWORD *)&v70[v72[7]] = *(_OWORD *)&v71[v72[7]];
  uint64_t v77 = v72[8];
  uint64_t v78 = &v70[v77];
  uint64_t v79 = &v71[v77];
  uint64_t v80 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
  *(void *)&v70[v72[9]] = *(void *)&v71[v72[9]];
  *(void *)&v70[v72[10]] = *(void *)&v71[v72[10]];
  v70[v72[11]] = v71[v72[11]];
  v70[v72[12]] = v71[v72[12]];
  return v90;
}

uint64_t sub_100089D4C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_10008C078(a1, type metadata accessor for Item);
    type metadata accessor for Item(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v5 = *v4;
      v5[1] = v4[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      void *v5 = *v4;
      v5[1] = v4[1];
      uint64_t v6 = type metadata accessor for Item.Headline(0);
      uint64_t v7 = *(int *)(v6 + 24);
      uint64_t v8 = (char *)v5 + v7;
      uint64_t v9 = (char *)v4 + v7;
      uint64_t v10 = sub_1000E8B60();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
        uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 28);
      uint64_t v4 = a2;
      uint64_t v5 = (void *)a1;
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (char *)a2 + v14;
      if (*((void *)v16 + 1))
      {
        uint64_t v17 = *(void **)v16;
        *uint64_t v15 = *(void *)v16;
        uint64_t v18 = (void *)*((void *)v16 + 1);
        v15[1] = v18;
        id v19 = v17;
        id v20 = v18;
      }
      else
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      }
      uint64_t v3 = a3;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = *(int *)(v3 + 20);
  id v22 = (void **)((char *)v5 + v21);
  uint64_t v23 = (char *)v4 + v21;
  uint64_t v24 = *(void **)((char *)v4 + v21);
  uint64_t v25 = *v22;
  *id v22 = v24;
  id v26 = v24;

  unsigned int v27 = (int *)type metadata accessor for TodayContent();
  uint64_t v28 = v27[5];
  unsigned int v29 = (char *)v22 + v28;
  uint64_t v30 = &v23[v28];
  uint64_t v31 = (int *)type metadata accessor for Banner();
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (v35)
    {
      sub_10008C078((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_18;
    }
    *(void *)unsigned int v29 = *(void *)v30;
    *((void *)v29 + 1) = *((void *)v30 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v29 + 2) = *((void *)v30 + 2);
    *((void *)v29 + 3) = *((void *)v30 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v29 + 4) = *((void *)v30 + 4);
    *((void *)v29 + 5) = *((void *)v30 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = v31[7];
    uint64_t v41 = &v29[v40];
    int __dsta = &v30[v40];
    uint64_t v42 = sub_1000E8B60();
    uint64_t v110 = *(void *)(v42 - 8);
    char v111 = v41;
    uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48);
    LODWORD(v41) = v43(v41, 1, v42);
    int v44 = v43(__dsta, 1, v42);
    if (v41)
    {
      if (v44)
      {
        size_t v45 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v46 = v111;
LABEL_28:
        memcpy(v46, __dsta, v45);
        goto LABEL_31;
      }
      (*(void (**)(void *, char *, uint64_t))(v110 + 16))(v111, __dsta, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v42);
    }
    else
    {
      if (v44)
      {
        (*(void (**)(void *, uint64_t))(v110 + 8))(v111, v42);
        size_t v45 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v46 = v111;
        goto LABEL_28;
      }
      (*(void (**)(void *, char *, uint64_t))(v110 + 24))(v111, __dsta, v42);
    }
LABEL_31:
    uint64_t v59 = v31[8];
    uint64_t v60 = &v29[v59];
    uint64_t v61 = &v30[v59];
    *(void *)uint64_t v60 = *(void *)v61;
    *((void *)v60 + 1) = *((void *)v61 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v62 = v31[9];
    uint64_t v63 = &v29[v62];
    uint64_t v64 = *(void **)&v29[v62];
    uint64_t v65 = *(void **)&v30[v62];
    if (v64 == (void *)1)
    {
      if (v65 != (void *)1)
      {
        *(void *)uint64_t v63 = v65;
        id v66 = v65;
LABEL_38:
        uint64_t v68 = v31[10];
        uint64_t v69 = &v29[v68];
        uint64_t v70 = &v30[v68];
        uint64_t v71 = *(void **)v70;
        uint64_t v72 = (void *)*((void *)v70 + 1);
        char v73 = v70[16];
        sub_10001D614(*(void **)v70, v72);
        uint64_t v74 = *(void **)v69;
        uint64_t v75 = (void *)*((void *)v69 + 1);
        *(void *)uint64_t v69 = v71;
        *((void *)v69 + 1) = v72;
        v69[16] = v73;
        sub_10001D758(v74, v75);
        goto LABEL_39;
      }
    }
    else
    {
      if (v65 != (void *)1)
      {
        *(void *)uint64_t v63 = v65;
        id v67 = v65;

        goto LABEL_38;
      }
      sub_10001DBE4((id *)&v29[v62]);
      uint64_t v65 = *(void **)&v30[v62];
    }
    *(void *)uint64_t v63 = v65;
    goto LABEL_38;
  }
  if (v35)
  {
LABEL_18:
    uint64_t v39 = sub_10001B38C(&qword_1001385E0);
    memcpy(v29, v30, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_39;
  }
  *(void *)unsigned int v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  *((void *)v29 + 2) = *((void *)v30 + 2);
  *((void *)v29 + 3) = *((void *)v30 + 3);
  *((void *)v29 + 4) = *((void *)v30 + 4);
  *((void *)v29 + 5) = *((void *)v30 + 5);
  uint64_t v36 = v31[7];
  __dst = &v29[v36];
  uint64_t v108 = &v30[v36];
  uint64_t v37 = sub_1000E8B60();
  uint64_t v107 = *(void *)(v37 - 8);
  uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v109(v108, 1, v37))
  {
    uint64_t v38 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v108, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(__dst, v108, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(__dst, 0, 1, v37);
  }
  uint64_t v47 = v31[8];
  id v48 = &v29[v47];
  uint64_t v49 = &v30[v47];
  *(void *)id v48 = *(void *)v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  uint64_t v50 = v31[9];
  id v51 = *(void **)&v30[v50];
  swift_bridgeObjectRetain();
  if (v51 != (void *)1) {
    id v52 = v51;
  }
  *(void *)&v29[v50] = v51;
  uint64_t v53 = v31[10];
  char v54 = &v29[v53];
  uint64_t v55 = &v30[v53];
  uint64_t v56 = *(void **)v55;
  uint64_t v57 = (void *)*((void *)v55 + 1);
  char v58 = v55[16];
  sub_10001D614(*(void **)v55, v57);
  *(void *)char v54 = v56;
  *((void *)v54 + 1) = v57;
  v54[16] = v58;
  (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_39:
  *(void **)((char *)v22 + v27[6]) = *(void **)&v23[v27[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v22 + v27[7]) = *(void **)&v23[v27[7]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v22 + v27[8]) = v23[v27[8]];
  uint64_t v76 = v27[9];
  uint64_t v77 = (char *)v22 + v76;
  uint64_t v78 = &v23[v76];
  uint64_t v79 = sub_1000E8B60();
  uint64_t v80 = *(void *)(v79 - 8);
  int v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 24))(v77, v78, v79);
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
    goto LABEL_44;
  }
  if (v83)
  {
LABEL_44:
    uint64_t v84 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v77, v78, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
LABEL_45:
  *(void **)((char *)v22 + v27[10]) = *(void **)&v23[v27[10]];
  swift_retain();
  swift_release();
  uint64_t v85 = v27[11];
  uint64_t v86 = (void **)((char *)v22 + v85);
  uint64_t v87 = &v23[v85];
  *uint64_t v86 = *(void *)v87;
  v86[1] = *((void *)v87 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = v27[12];
  uint64_t v89 = (void **)((char *)v22 + v88);
  uint64_t v90 = &v23[v88];
  *uint64_t v89 = *(void *)v90;
  v89[1] = *((void *)v90 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v91 = *(int *)(a3 + 24);
  uint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = (char *)a2 + v91;
  void *v92 = *(void *)((char *)a2 + v91);
  v92[1] = *(void *)((char *)a2 + v91 + 8);
  uint64_t v94 = (int *)type metadata accessor for LayoutContext();
  uint64_t v95 = v94[6];
  uint64_t v96 = (char *)v92 + v95;
  uint64_t v97 = &v93[v95];
  uint64_t v98 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 24))(v96, v97, v98);
  uint64_t v99 = v94[7];
  uint64_t v100 = (void *)((char *)v92 + v99);
  uint64_t v101 = &v93[v99];
  *uint64_t v100 = *(void *)v101;
  v100[1] = *((void *)v101 + 1);
  uint64_t v102 = v94[8];
  uint64_t v103 = (char *)v92 + v102;
  uint64_t v104 = &v93[v102];
  uint64_t v105 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 24))(v103, v104, v105);
  *(void *)((char *)v92 + v94[9]) = *(void *)&v93[v94[9]];
  *(void *)((char *)v92 + v94[10]) = *(void *)&v93[v94[10]];
  *((unsigned char *)v92 + v94[11]) = v93[v94[11]];
  *((unsigned char *)v92 + v94[12]) = v93[v94[12]];
  return a1;
}

void *sub_10008A7A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Item(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = type metadata accessor for Item.Headline(0);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1000E8B60();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 28));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for TodayContent();
  uint64_t v19 = v18[5];
  id v20 = &v16[v19];
  uint64_t v21 = &v17[v19];
  id v22 = (int *)type metadata accessor for Banner();
  uint64_t v23 = *((void *)v22 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_10001B38C(&qword_1001385E0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v53 = a3;
    char v54 = a2;
    long long v25 = *((_OWORD *)v21 + 1);
    *(_OWORD *)id v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v25;
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    uint64_t v26 = v22[7];
    uint64_t v55 = a1;
    __dst = &v20[v26];
    unsigned int v27 = &v21[v26];
    uint64_t v28 = sub_1000E8B60();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(__dst, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
    *(void *)&v20[v22[9]] = *(void *)&v21[v22[9]];
    uint64_t v31 = v22[10];
    uint64_t v32 = &v20[v31];
    uint64_t v33 = &v21[v31];
    v32[16] = v33[16];
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    a2 = v54;
    a1 = v55;
    a3 = v53;
  }
  *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
  *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
  v16[v18[8]] = v17[v18[8]];
  uint64_t v34 = v18[9];
  int v35 = &v16[v34];
  uint64_t v36 = &v17[v34];
  uint64_t v37 = sub_1000E8B60();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  *(void *)&v16[v18[10]] = *(void *)&v17[v18[10]];
  *(_OWORD *)&v16[v18[11]] = *(_OWORD *)&v17[v18[11]];
  *(_OWORD *)&v16[v18[12]] = *(_OWORD *)&v17[v18[12]];
  uint64_t v40 = *(int *)(a3 + 24);
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *(_OWORD *)((char *)a1 + v40) = *(_OWORD *)((char *)a2 + v40);
  uint64_t v43 = (int *)type metadata accessor for LayoutContext();
  uint64_t v44 = v43[6];
  size_t v45 = &v41[v44];
  uint64_t v46 = &v42[v44];
  uint64_t v47 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
  *(_OWORD *)&v41[v43[7]] = *(_OWORD *)&v42[v43[7]];
  uint64_t v48 = v43[8];
  uint64_t v49 = &v41[v48];
  uint64_t v50 = &v42[v48];
  uint64_t v51 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  *(void *)&v41[v43[9]] = *(void *)&v42[v43[9]];
  *(void *)&v41[v43[10]] = *(void *)&v42[v43[10]];
  v41[v43[11]] = v42[v43[11]];
  v41[v43[12]] = v42[v43[12]];
  return a1;
}

void *sub_10008AD50(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008C078((uint64_t)a1, type metadata accessor for Item);
    uint64_t v6 = type metadata accessor for Item(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = type metadata accessor for Item.Headline(0);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1000E8B60();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 28));
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v99 = a3;
  uint64_t v100 = a2;
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v101 = a1;
  uint64_t v16 = (void **)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *v16;
  *uint64_t v16 = *(void **)((char *)a2 + v15);

  uint64_t v19 = (int *)type metadata accessor for TodayContent();
  uint64_t v20 = v19[5];
  uint64_t v21 = (char *)v16 + v20;
  id v22 = &v17[v20];
  uint64_t v23 = (int *)type metadata accessor for Banner();
  uint64_t v24 = *((void *)v23 - 1);
  long long v25 = *(uint64_t (**)(char *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_10008C078((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_14;
    }
    uint64_t v35 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v35;
    swift_bridgeObjectRelease();
    uint64_t v36 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v36;
    swift_bridgeObjectRelease();
    uint64_t v37 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v37;
    swift_bridgeObjectRelease();
    uint64_t v38 = v23[7];
    uint64_t v39 = &v21[v38];
    int __dsta = &v22[v38];
    uint64_t v40 = sub_1000E8B60();
    uint64_t v95 = *(void *)(v40 - 8);
    uint64_t v96 = v39;
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
    LODWORD(v39) = v41(v39, 1, v40);
    int v42 = v41(__dsta, 1, v40);
    if (v39)
    {
      if (v42)
      {
        size_t v43 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v44 = v96;
LABEL_22:
        memcpy(v44, __dsta, v43);
        goto LABEL_25;
      }
      (*(void (**)(void *, char *, uint64_t))(v95 + 32))(v96, __dsta, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v96, 0, 1, v40);
    }
    else
    {
      if (v42)
      {
        (*(void (**)(void *, uint64_t))(v95 + 8))(v96, v40);
        size_t v43 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v44 = v96;
        goto LABEL_22;
      }
      (*(void (**)(void *, char *, uint64_t))(v95 + 40))(v96, __dsta, v40);
    }
LABEL_25:
    uint64_t v48 = v23[8];
    uint64_t v49 = &v21[v48];
    uint64_t v50 = &v22[v48];
    uint64_t v52 = *(void *)v50;
    uint64_t v51 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = v52;
    *((void *)v49 + 1) = v51;
    swift_bridgeObjectRelease();
    uint64_t v53 = v23[9];
    char v54 = &v21[v53];
    uint64_t v55 = *(void **)&v21[v53];
    uint64_t v56 = *(void *)&v22[v53];
    if (v55 != (void *)1)
    {
      if (v56 != 1)
      {
        *(void *)char v54 = v56;

        goto LABEL_30;
      }
      sub_10001DBE4((id *)&v21[v53]);
      uint64_t v56 = *(void *)&v22[v53];
    }
    *(void *)char v54 = v56;
LABEL_30:
    uint64_t v57 = v23[10];
    char v58 = &v21[v57];
    uint64_t v59 = &v22[v57];
    char v60 = v59[16];
    uint64_t v61 = *(void **)v58;
    uint64_t v62 = (void *)*((void *)v58 + 1);
    *(_OWORD *)char v58 = *(_OWORD *)v59;
    v58[16] = v60;
    sub_10001D758(v61, v62);
    goto LABEL_31;
  }
  if (v27)
  {
LABEL_14:
    uint64_t v34 = sub_10001B38C(&qword_1001385E0);
    memcpy(v21, v22, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_31;
  }
  long long v28 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v28;
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  uint64_t v29 = v23[7];
  __dst = &v21[v29];
  uint64_t v30 = &v22[v29];
  uint64_t v31 = sub_1000E8B60();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dst, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
  *(void *)&v21[v23[9]] = *(void *)&v22[v23[9]];
  uint64_t v45 = v23[10];
  uint64_t v46 = &v21[v45];
  uint64_t v47 = &v22[v45];
  v46[16] = v47[16];
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
LABEL_31:
  *(void **)((char *)v16 + v19[6]) = *(void **)&v17[v19[6]];
  swift_bridgeObjectRelease();
  *(void **)((char *)v16 + v19[7]) = *(void **)&v17[v19[7]];
  swift_unknownObjectRelease();
  *((unsigned char *)v16 + v19[8]) = v17[v19[8]];
  uint64_t v63 = v19[9];
  uint64_t v64 = (char *)v16 + v63;
  uint64_t v65 = &v17[v63];
  uint64_t v66 = sub_1000E8B60();
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
  int v69 = v68(v64, 1, v66);
  int v70 = v68(v65, 1, v66);
  if (!v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v64, v65, v66);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
    goto LABEL_36;
  }
  if (v70)
  {
LABEL_36:
    uint64_t v71 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v64, v65, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
LABEL_37:
  *(void **)((char *)v16 + v19[10]) = *(void **)&v17[v19[10]];
  swift_release();
  uint64_t v72 = v19[11];
  char v73 = (void **)((char *)v16 + v72);
  uint64_t v74 = &v17[v72];
  uint64_t v76 = *(void *)v74;
  uint64_t v75 = *((void *)v74 + 1);
  *char v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  uint64_t v77 = v19[12];
  uint64_t v78 = (void **)((char *)v16 + v77);
  uint64_t v79 = &v17[v77];
  uint64_t v81 = *(void *)v79;
  uint64_t v80 = *((void *)v79 + 1);
  *uint64_t v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  uint64_t v82 = *(int *)(v99 + 24);
  int v83 = (_OWORD *)((char *)v101 + v82);
  uint64_t v84 = (char *)v100 + v82;
  *int v83 = *(_OWORD *)((char *)v100 + v82);
  uint64_t v85 = (int *)type metadata accessor for LayoutContext();
  uint64_t v86 = v85[6];
  uint64_t v87 = (char *)v83 + v86;
  uint64_t v88 = &v84[v86];
  uint64_t v89 = sub_1000E9F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 40))(v87, v88, v89);
  *(_OWORD *)((char *)v83 + v85[7]) = *(_OWORD *)&v84[v85[7]];
  uint64_t v90 = v85[8];
  uint64_t v91 = (char *)v83 + v90;
  uint64_t v92 = &v84[v90];
  uint64_t v93 = sub_1000E96F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 40))(v91, v92, v93);
  *(void *)((char *)v83 + v85[9]) = *(void *)&v84[v85[9]];
  *(void *)((char *)v83 + v85[10]) = *(void *)&v84[v85[10]];
  *((unsigned char *)v83 + v85[11]) = v84[v85[11]];
  *((unsigned char *)v83 + v85[12]) = v84[v85[12]];
  return v101;
}

uint64_t sub_10008B624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008B638);
}

uint64_t sub_10008B638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Item(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TodayContent();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for LayoutContext();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_10008B784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008B798);
}

uint64_t sub_10008B798(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for TodayContent();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for LayoutContext();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for RectangularContentView(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_1001396D0);
}

uint64_t sub_10008B910()
{
  uint64_t result = type metadata accessor for Item(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TodayContent();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LayoutContext();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10008BA14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008BA30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v20 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v20);
  unint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Item(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001B38C(&qword_100139710);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E9DC0();
  uint64_t v16 = v15;
  sub_10008BD4C(&v24);
  uint64_t v22 = v14;
  uint64_t v23 = v16;
  sub_10008C0F8(v1, (uint64_t)v6, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10008C078((uint64_t)v6, type metadata accessor for Item);
    uint64_t v17 = sub_1000E8B60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  }
  else
  {
    sub_10008C014((uint64_t)v6, (uint64_t)v3);
    sub_10002DA34((uint64_t)&v3[*(int *)(v20 + 24)], (uint64_t)v9, (uint64_t *)&unk_1001370F0);
    sub_10008C078((uint64_t)v3, type metadata accessor for Item.Headline);
  }
  sub_10001B38C(&qword_100139718);
  sub_10001D100(&qword_100139720, &qword_100139718);
  sub_1000E9A70();
  sub_100028B6C((uint64_t)v9, (uint64_t *)&unk_1001370F0);
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v21, v13, v10);
}

uint64_t sub_10008BD4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RectangularHeadlineView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Item(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10008C0F8(v2, (uint64_t)v12, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = sub_1000E9620();
    *(void *)&long long v28 = v13;
    *((void *)&v28 + 1) = v14;
    sub_1000295C0();
    uint64_t v16 = sub_1000E9A50();
    long long v28 = (unint64_t)v15;
    LOBYTE(v29) = 1;
    *((void *)&v29 + 1) = v16;
    *(void *)&long long v30 = v17;
    BYTE8(v30) = v18 & 1;
    *(void *)&long long v31 = v19;
    sub_10001B38C(&qword_100139728);
    sub_10001D100(&qword_100139730, &qword_100139728);
    uint64_t result = sub_1000E9D10();
    uint64_t v21 = result;
  }
  else
  {
    sub_10008C014((uint64_t)v12, (uint64_t)v9);
    sub_10008C0F8((uint64_t)v9, (uint64_t)v6, type metadata accessor for Item.Headline);
    uint64_t v22 = type metadata accessor for RectangularContentView(0);
    sub_10007FC74((uint64_t)&v28);
    sub_10008C0F8(v2 + *(int *)(v22 + 20), (uint64_t)&v6[*(int *)(v4 + 24)], (uint64_t (*)(void))type metadata accessor for TodayContent);
    uint64_t v23 = &v6[*(int *)(v4 + 20)];
    long long v24 = v33;
    *((_OWORD *)v23 + 4) = v32;
    *((_OWORD *)v23 + 5) = v24;
    *((void *)v23 + 12) = v34;
    long long v25 = v29;
    *(_OWORD *)uint64_t v23 = v28;
    *((_OWORD *)v23 + 1) = v25;
    long long v26 = v31;
    *((_OWORD *)v23 + 2) = v30;
    *((_OWORD *)v23 + 3) = v26;
    sub_10008C160();
    uint64_t v21 = sub_1000E9D10();
    uint64_t result = sub_10008C078((uint64_t)v9, type metadata accessor for Item.Headline);
  }
  *a1 = v21;
  return result;
}

uint64_t sub_10008C014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Item.Headline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C078(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for RectangularHeadlineView(uint64_t a1)
{
  return sub_10004A6F4(a1, qword_100139798);
}

uint64_t sub_10008C0F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10008C160()
{
  unint64_t result = qword_100139738;
  if (!qword_100139738)
  {
    type metadata accessor for RectangularHeadlineView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139738);
  }
  return result;
}

uint64_t *sub_10008C1B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v14 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v85 = type metadata accessor for Item.Headline(0);
    uint64_t v8 = *(int *)(v85 + 24);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1000E8B60();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v87 = v12;
    uint64_t v79 = v11;
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v15 = *(int *)(v85 + 28);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    char v18 = (void *)*((void *)v17 + 1);
    uint64_t v84 = v10;
    if (v18)
    {
      uint64_t v19 = *(void **)v17;
      *uint64_t v16 = v19;
      v16[1] = v18;
      id v20 = v19;
      id v21 = v18;
    }
    else
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
    uint64_t v22 = *(int *)(a3 + 20);
    uint64_t v23 = *(int *)(a3 + 24);
    long long v24 = (char *)a1 + v22;
    long long v25 = (char *)a2 + v22;
    long long v26 = *(void **)v25;
    *(void *)long long v24 = *(void *)v25;
    *(_OWORD *)(v24 + 8) = *(_OWORD *)(v25 + 8);
    *(_OWORD *)(v24 + 17) = *(_OWORD *)(v25 + 17);
    *(_OWORD *)(v24 + 40) = *(_OWORD *)(v25 + 40);
    uint64_t v27 = (void *)*((void *)v25 + 8);
    *((void *)v24 + 7) = *((void *)v25 + 7);
    *((void *)v24 + 8) = v27;
    long long v28 = (void *)*((void *)v25 + 9);
    *((void *)v24 + 9) = v28;
    *((_OWORD *)v24 + 5) = *((_OWORD *)v25 + 5);
    *((void *)v24 + 12) = *((void *)v25 + 12);
    uint64_t v86 = a1;
    long long v29 = (uint64_t *)((char *)a1 + v23);
    long long v30 = (char *)a2 + v23;
    long long v31 = *(void **)((char *)a2 + v23);
    *long long v29 = v31;
    uint64_t v81 = v29;
    int __dsta = (int *)type metadata accessor for TodayContent();
    uint64_t v32 = __dsta[5];
    long long v33 = (void *)((char *)v29 + v32);
    uint64_t v80 = v30;
    uint64_t v34 = &v30[v32];
    uint64_t v35 = type metadata accessor for Banner();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    id v38 = v26;
    id v39 = v27;
    id v40 = v28;
    id v41 = v31;
    if (v37(v34, 1, v35))
    {
      uint64_t v42 = sub_10001B38C(&qword_1001385E0);
      memcpy(v33, v34, *(void *)(*(void *)(v42 - 8) + 64));
      uint64_t v43 = v84;
      uint64_t v44 = v81;
    }
    else
    {
      uint64_t v45 = *((void *)v34 + 1);
      *long long v33 = *(void *)v34;
      v33[1] = v45;
      uint64_t v46 = *((void *)v34 + 3);
      v33[2] = *((void *)v34 + 2);
      _OWORD v33[3] = v46;
      uint64_t v47 = *((void *)v34 + 5);
      v33[4] = *((void *)v34 + 4);
      v33[5] = v47;
      uint64_t v48 = *(int *)(v35 + 28);
      uint64_t v49 = (char *)v33 + v48;
      uint64_t v50 = &v34[v48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = v84;
      uint64_t v51 = (int *)v35;
      if (v87(v50, 1, v84))
      {
        uint64_t v52 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v49, v50, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v49, 0, 1, v84);
      }
      uint64_t v44 = v81;
      uint64_t v53 = v51[8];
      char v54 = (void *)((char *)v33 + v53);
      uint64_t v55 = &v34[v53];
      uint64_t v56 = *((void *)v55 + 1);
      *char v54 = *(void *)v55;
      v54[1] = v56;
      uint64_t v57 = v51[9];
      char v58 = *(void **)&v34[v57];
      swift_bridgeObjectRetain();
      if (v58 != (void *)1) {
        id v59 = v58;
      }
      *(void *)((char *)v33 + v57) = v58;
      uint64_t v60 = v51[10];
      uint64_t v61 = (char *)v33 + v60;
      uint64_t v62 = &v34[v60];
      uint64_t v63 = *(void **)v62;
      uint64_t v64 = (void *)*((void *)v62 + 1);
      char v65 = v62[16];
      sub_10001D614(*(void **)v62, v64);
      *(void *)uint64_t v61 = v63;
      *((void *)v61 + 1) = v64;
      v61[16] = v65;
      (*(void (**)(void *, void, uint64_t, int *))(v36 + 56))(v33, 0, 1, v51);
    }
    *(void *)((char *)v44 + __dsta[6]) = *(void *)&v80[__dsta[6]];
    *(void *)((char *)v44 + __dsta[7]) = *(void *)&v80[__dsta[7]];
    *((unsigned char *)v44 + __dsta[8]) = v80[__dsta[8]];
    uint64_t v66 = __dsta[9];
    uint64_t v67 = (char *)v44 + v66;
    uint64_t v68 = &v80[v66];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v87(v68, 1, v43))
    {
      uint64_t v69 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v67, v68, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v67, 0, 1, v43);
    }
    *(void *)((char *)v44 + __dsta[10]) = *(void *)&v80[__dsta[10]];
    uint64_t v70 = __dsta[11];
    uint64_t v71 = (void *)((char *)v44 + v70);
    uint64_t v72 = &v80[v70];
    uint64_t v73 = *((void *)v72 + 1);
    *uint64_t v71 = *(void *)v72;
    v71[1] = v73;
    uint64_t v74 = __dsta[12];
    uint64_t v75 = (void *)((char *)v44 + v74);
    uint64_t v76 = &v80[v74];
    uint64_t v77 = *((void *)v76 + 1);
    void *v75 = *(void *)v76;
    v75[1] = v77;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v86;
  }
  return (uint64_t *)v14;
}

uint64_t sub_10008C740(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Item.Headline(0);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t v6 = sub_1000E8B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (id *)(a1 + *(int *)(v4 + 28));
  if (v9[1])
  {
  }
  uint64_t v10 = (id *)(a1 + *(int *)(a2 + 20));

  uint64_t v11 = (id *)(a1 + *(int *)(a2 + 24));
  uint64_t v12 = type metadata accessor for TodayContent();
  uint64_t v13 = (char *)v11 + *(int *)(v12 + 20);
  uint64_t v14 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v14 - 1) + 48))(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = &v13[v14[7]];
    if (!v8((uint64_t)v15, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void **)&v13[v14[9]];
    if (v16 != (void *)1) {

    }
    sub_10001D758(*(void **)&v13[v14[10]], *(void **)&v13[v14[10] + 8]);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v17 = (char *)v11 + *(int *)(v12 + 36);
  if (!v8((uint64_t)v17, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_10008C9E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = type metadata accessor for Item.Headline(0);
  uint64_t v7 = *(int *)(v6 + 24);
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v85 = v11;
  uint64_t v77 = v10;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(v6 + 28);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (void *)*((void *)v15 + 1);
  uint64_t v82 = v9;
  if (v16)
  {
    uint64_t v17 = *(void **)v15;
    *uint64_t v14 = v17;
    v14[1] = v16;
    id v18 = v17;
    id v19 = v16;
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  long long v24 = *(void **)v23;
  *(void *)uint64_t v22 = *(void *)v23;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  *(_OWORD *)(v22 + 17) = *(_OWORD *)(v23 + 17);
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
  long long v25 = (void *)*((void *)v23 + 8);
  *((void *)v22 + 7) = *((void *)v23 + 7);
  *((void *)v22 + 8) = v25;
  long long v26 = (void *)*((void *)v23 + 9);
  *((void *)v22 + 9) = v26;
  *((_OWORD *)v22 + 5) = *((_OWORD *)v23 + 5);
  *((void *)v22 + 12) = *((void *)v23 + 12);
  uint64_t v84 = a1;
  uint64_t v27 = (void *)((char *)a1 + v21);
  long long v28 = (char *)a2 + v21;
  long long v29 = *(void **)((char *)a2 + v21);
  *uint64_t v27 = v29;
  uint64_t v79 = v27;
  int __dsta = (int *)type metadata accessor for TodayContent();
  uint64_t v30 = __dsta[5];
  long long v31 = (void *)((char *)v27 + v30);
  uint64_t v78 = v28;
  uint64_t v32 = &v28[v30];
  uint64_t v33 = type metadata accessor for Banner();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  id v36 = v24;
  id v37 = v25;
  id v38 = v26;
  id v39 = v29;
  if (v35(v32, 1, v33))
  {
    uint64_t v40 = sub_10001B38C(&qword_1001385E0);
    memcpy(v31, v32, *(void *)(*(void *)(v40 - 8) + 64));
    uint64_t v41 = v82;
    uint64_t v42 = v79;
  }
  else
  {
    uint64_t v43 = *((void *)v32 + 1);
    *long long v31 = *(void *)v32;
    v31[1] = v43;
    uint64_t v44 = *((void *)v32 + 3);
    void v31[2] = *((void *)v32 + 2);
    v31[3] = v44;
    uint64_t v45 = *((void *)v32 + 5);
    _OWORD v31[4] = *((void *)v32 + 4);
    v31[5] = v45;
    uint64_t v46 = *(int *)(v33 + 28);
    uint64_t v47 = (char *)v31 + v46;
    uint64_t v48 = &v32[v46];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = v82;
    uint64_t v49 = (int *)v33;
    if (v85(v48, 1, v82))
    {
      uint64_t v50 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v47, v48, v82);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v47, 0, 1, v82);
    }
    uint64_t v42 = v79;
    uint64_t v51 = v49[8];
    uint64_t v52 = (void *)((char *)v31 + v51);
    uint64_t v53 = &v32[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *uint64_t v52 = *(void *)v53;
    v52[1] = v54;
    uint64_t v55 = v49[9];
    uint64_t v56 = *(void **)&v32[v55];
    swift_bridgeObjectRetain();
    if (v56 != (void *)1) {
      id v57 = v56;
    }
    *(void *)((char *)v31 + v55) = v56;
    uint64_t v58 = v49[10];
    id v59 = (char *)v31 + v58;
    uint64_t v60 = &v32[v58];
    uint64_t v61 = *(void **)v60;
    uint64_t v62 = (void *)*((void *)v60 + 1);
    char v63 = v60[16];
    sub_10001D614(*(void **)v60, v62);
    *(void *)id v59 = v61;
    *((void *)v59 + 1) = v62;
    v59[16] = v63;
    (*(void (**)(void *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v49);
  }
  *(void *)((char *)v42 + __dsta[6]) = *(void *)&v78[__dsta[6]];
  *(void *)((char *)v42 + __dsta[7]) = *(void *)&v78[__dsta[7]];
  *((unsigned char *)v42 + __dsta[8]) = v78[__dsta[8]];
  uint64_t v64 = __dsta[9];
  char v65 = (char *)v42 + v64;
  uint64_t v66 = &v78[v64];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v85(v66, 1, v41))
  {
    uint64_t v67 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v65, v66, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v65, 0, 1, v41);
  }
  *(void *)((char *)v42 + __dsta[10]) = *(void *)&v78[__dsta[10]];
  uint64_t v68 = __dsta[11];
  uint64_t v69 = (void *)((char *)v42 + v68);
  uint64_t v70 = &v78[v68];
  uint64_t v71 = *((void *)v70 + 1);
  *uint64_t v69 = *(void *)v70;
  v69[1] = v71;
  uint64_t v72 = __dsta[12];
  uint64_t v73 = (void *)((char *)v42 + v72);
  uint64_t v74 = &v78[v72];
  uint64_t v75 = *((void *)v74 + 1);
  *uint64_t v73 = *(void *)v74;
  v73[1] = v75;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v84;
}

void *sub_10008CF14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Item.Headline(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void))(v10 + 48);
  unsigned int v12 = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v7, 1, v9);
  uint64_t v119 = v11;
  unsigned int v13 = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v8, 1, v9);
  uint64_t v115 = v10;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3;
  uint64_t v16 = *(int *)(v5 + 28);
  uint64_t v17 = (void **)((char *)a1 + v16);
  id v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a1 + v16 + 8);
  uint64_t v20 = *(void *)((char *)a2 + v16 + 8);
  uint64_t v118 = v9;
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *v17;
      uint64_t v22 = *(void **)v18;
      *uint64_t v17 = *(void **)v18;
      id v23 = v22;

      long long v24 = (void *)*((void *)v18 + 1);
      long long v25 = v17[1];
      v17[1] = v24;
      id v26 = v24;

      goto LABEL_14;
    }
    sub_10005C2F0((uint64_t)v17);
  }
  else if (v20)
  {
    uint64_t v27 = *(void **)v18;
    *uint64_t v17 = *(void **)v18;
    long long v28 = (void *)*((void *)v18 + 1);
    v17[1] = v28;
    id v29 = v27;
    id v30 = v28;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
LABEL_14:
  uint64_t v31 = *(int *)(v15 + 20);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void **)((char *)a2 + v31);
  uint64_t v35 = *(void **)v32;
  *(void *)uint64_t v32 = v34;
  id v36 = v34;

  *((void *)v32 + 1) = *((void *)v33 + 1);
  long long v37 = *((_OWORD *)v33 + 1);
  v32[32] = v33[32];
  *((_OWORD *)v32 + 1) = v37;
  *((void *)v32 + 5) = *((void *)v33 + 5);
  *((void *)v32 + 6) = *((void *)v33 + 6);
  *((void *)v32 + 7) = *((void *)v33 + 7);
  id v38 = (void *)*((void *)v33 + 8);
  id v39 = (void *)*((void *)v32 + 8);
  *((void *)v32 + 8) = v38;
  id v40 = v38;

  uint64_t v41 = (void *)*((void *)v33 + 9);
  uint64_t v42 = (void *)*((void *)v32 + 9);
  *((void *)v32 + 9) = v41;
  id v43 = v41;

  *((void *)v32 + 10) = *((void *)v33 + 10);
  *((void *)v32 + 11) = *((void *)v33 + 11);
  *((void *)v32 + 12) = *((void *)v33 + 12);
  uint64_t v44 = *(int *)(v15 + 24);
  uint64_t v45 = (void **)((char *)a1 + v44);
  uint64_t v46 = (void **)((char *)a2 + v44);
  uint64_t v47 = *v46;
  uint64_t v48 = *v45;
  *uint64_t v45 = *v46;
  id v49 = v47;

  uint64_t v116 = type metadata accessor for TodayContent();
  uint64_t v50 = *(int *)(v116 + 20);
  uint64_t v51 = (void **)((char *)v45 + v50);
  uint64_t v52 = (void **)((char *)v46 + v50);
  uint64_t v53 = (int *)type metadata accessor for Banner();
  uint64_t v54 = *((void *)v53 - 1);
  uint64_t v55 = *(uint64_t (**)(void *, uint64_t, int *))(v54 + 48);
  int v56 = v55(v51, 1, v53);
  int v57 = v55(v52, 1, v53);
  if (v56)
  {
    if (!v57)
    {
      *uint64_t v51 = *v52;
      v51[1] = v52[1];
      v51[2] = v52[2];
      _OWORD v51[3] = v52[3];
      _OWORD v51[4] = v52[4];
      v51[5] = v52[5];
      uint64_t v58 = v53[7];
      id v59 = (char *)v51 + v58;
      uint64_t v60 = (char *)v52 + v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v119)(v60, 1, v118))
      {
        uint64_t v61 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v59, v60, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v59, 0, 1, v118);
      }
      uint64_t v68 = v53[8];
      uint64_t v69 = (void *)((char *)v51 + v68);
      uint64_t v70 = (void *)((char *)v52 + v68);
      *uint64_t v69 = *v70;
      v69[1] = v70[1];
      uint64_t v71 = v53[9];
      uint64_t v72 = *(void **)((char *)v52 + v71);
      swift_bridgeObjectRetain();
      if (v72 != (void *)1) {
        id v73 = v72;
      }
      *(void *)((char *)v51 + v71) = v72;
      uint64_t v74 = v53[10];
      uint64_t v75 = (char *)v51 + v74;
      uint64_t v76 = (char *)v52 + v74;
      uint64_t v77 = *(void **)v76;
      uint64_t v78 = (void *)*((void *)v76 + 1);
      char v79 = v76[16];
      sub_10001D614(*(void **)v76, v78);
      *(void *)uint64_t v75 = v77;
      *((void *)v75 + 1) = v78;
      v75[16] = v79;
      (*(void (**)(void *, void, uint64_t, int *))(v54 + 56))(v51, 0, 1, v53);
      goto LABEL_29;
    }
LABEL_20:
    uint64_t v62 = sub_10001B38C(&qword_1001385E0);
    memcpy(v51, v52, *(void *)(*(void *)(v62 - 8) + 64));
LABEL_29:
    uint64_t v80 = (int *)v116;
    uint64_t v67 = v118;
    goto LABEL_30;
  }
  if (v57)
  {
    sub_10008C078((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for Banner);
    goto LABEL_20;
  }
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51[2] = v52[2];
  _OWORD v51[3] = v52[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v51[4] = v52[4];
  v51[5] = v52[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v53[7];
  uint64_t v64 = (char *)v52 + v63;
  uint64_t v113 = (char *)v51 + v63;
  int v114 = v119();
  __src = v64;
  unsigned int v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v119)(v64, 1, v118);
  if (v114)
  {
    if (v65)
    {
      uint64_t v66 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v113, v64, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v118;
    }
    else
    {
      uint64_t v67 = v118;
      (*(void (**)(char *, void *, uint64_t))(v115 + 16))(v113, __src, v118);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v113, 0, 1, v118);
    }
  }
  else
  {
    uint64_t v67 = v118;
    if (v65)
    {
      (*(void (**)(char *, uint64_t))(v115 + 8))(v113, v118);
      uint64_t v94 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v113, __src, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v115 + 24))(v113, __src, v118);
    }
  }
  uint64_t v95 = v53[8];
  uint64_t v96 = (void *)((char *)v51 + v95);
  uint64_t v97 = (void *)((char *)v52 + v95);
  *uint64_t v96 = *v97;
  v96[1] = v97[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = v53[9];
  uint64_t v99 = (void *)((char *)v51 + v98);
  uint64_t v100 = *(void **)((char *)v51 + v98);
  uint64_t v101 = *(void **)((char *)v52 + v98);
  if (v100 != (void *)1)
  {
    if (v101 != (void *)1)
    {
      *uint64_t v99 = v101;
      id v103 = v101;

      goto LABEL_49;
    }
    sub_10001DBE4((id *)((char *)v51 + v98));
    uint64_t v101 = *(void **)((char *)v52 + v98);
    goto LABEL_47;
  }
  if (v101 == (void *)1)
  {
LABEL_47:
    *uint64_t v99 = v101;
    goto LABEL_49;
  }
  *uint64_t v99 = v101;
  id v102 = v101;
LABEL_49:
  uint64_t v80 = (int *)v116;
  uint64_t v104 = v53[10];
  uint64_t v105 = (char *)v51 + v104;
  uint64_t v106 = (char *)v52 + v104;
  uint64_t v107 = *(void **)v106;
  uint64_t v108 = (void *)*((void *)v106 + 1);
  char v109 = v106[16];
  sub_10001D614(*(void **)v106, v108);
  uint64_t v110 = *(void **)v105;
  char v111 = (void *)*((void *)v105 + 1);
  *(void *)uint64_t v105 = v107;
  *((void *)v105 + 1) = v108;
  v105[16] = v109;
  sub_10001D758(v110, v111);
LABEL_30:
  *(void **)((char *)v45 + v80[6]) = *(void **)((char *)v46 + v80[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v45 + v80[7]) = *(void **)((char *)v46 + v80[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v45 + v80[8]) = *((unsigned char *)v46 + v80[8]);
  uint64_t v81 = v80[9];
  uint64_t v82 = (char *)v45 + v81;
  int v83 = (char *)v46 + v81;
  unsigned int v84 = ((uint64_t (*)(char *, uint64_t, uint64_t))v119)((char *)v45 + v81, 1, v67);
  unsigned int v85 = ((uint64_t (*)(char *, uint64_t, uint64_t))v119)(v83, 1, v67);
  if (!v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v82, v83, v67);
      goto LABEL_36;
    }
    (*(void (**)(char *, uint64_t))(v115 + 8))(v82, v67);
    goto LABEL_35;
  }
  if (v85)
  {
LABEL_35:
    uint64_t v86 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v82, v83, v67);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v82, 0, 1, v67);
LABEL_36:
  *(void **)((char *)v45 + v80[10]) = *(void **)((char *)v46 + v80[10]);
  swift_retain();
  swift_release();
  uint64_t v87 = v80[11];
  uint64_t v88 = (void **)((char *)v45 + v87);
  uint64_t v89 = (void **)((char *)v46 + v87);
  *uint64_t v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = v80[12];
  uint64_t v91 = (void **)((char *)v45 + v90);
  uint64_t v92 = (void **)((char *)v46 + v90);
  *uint64_t v91 = *v92;
  v91[1] = v92[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10008D8A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for Item.Headline(0);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000E8B60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v45(v10, 1, v11))
  {
    uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v7 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 28));
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 12) = *((void *)v17 + 12);
  long long v19 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v19;
  long long v20 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v20;
  uint64_t v21 = (char *)a1 + v15;
  uint64_t v22 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  id v23 = (int *)type metadata accessor for TodayContent();
  uint64_t v24 = v23[5];
  long long v25 = &v21[v24];
  id v26 = &v22[v24];
  uint64_t v27 = (int *)type metadata accessor for Banner();
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_10001B38C(&qword_1001385E0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = *((_OWORD *)v26 + 1);
    *(_OWORD *)long long v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v30;
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    uint64_t v31 = v27[7];
    uint64_t v43 = v12;
    __dst = &v25[v31];
    uint64_t v32 = &v26[v31];
    if (v45(&v26[v31], 1, v11))
    {
      uint64_t v33 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v32, *(void *)(*(void *)(v33 - 8) + 64));
      uint64_t v12 = v43;
    }
    else
    {
      uint64_t v34 = v32;
      uint64_t v12 = v43;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(__dst, v34, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v11);
    }
    *(_OWORD *)&v25[v27[8]] = *(_OWORD *)&v26[v27[8]];
    *(void *)&v25[v27[9]] = *(void *)&v26[v27[9]];
    uint64_t v35 = v27[10];
    id v36 = &v25[v35];
    long long v37 = &v26[v35];
    v36[16] = v37[16];
    *(_OWORD *)id v36 = *(_OWORD *)v37;
    (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
  }
  *(void *)&v21[v23[6]] = *(void *)&v22[v23[6]];
  *(void *)&v21[v23[7]] = *(void *)&v22[v23[7]];
  v21[v23[8]] = v22[v23[8]];
  uint64_t v38 = v23[9];
  id v39 = &v21[v38];
  id v40 = &v22[v38];
  if (v45(&v22[v38], 1, v11))
  {
    uint64_t v41 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v40, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
  }
  *(void *)&v21[v23[10]] = *(void *)&v22[v23[10]];
  *(_OWORD *)&v21[v23[11]] = *(_OWORD *)&v22[v23[11]];
  *(_OWORD *)&v21[v23[12]] = *(_OWORD *)&v22[v23[12]];
  return a1;
}

void *sub_10008DCCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Item.Headline(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void))(v10 + 48);
  int v12 = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v7, 1, v9);
  uint64_t v96 = v11;
  int v13 = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v8, 1, v9);
  uint64_t v95 = v9;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(v5 + 28);
  uint64_t v16 = (void **)((char *)a1 + v15);
  uint64_t v17 = (void **)((char *)a2 + v15);
  uint64_t v92 = v10;
  if (*(void *)((char *)a1 + v15 + 8))
  {
    if (v17[1])
    {
      long long v18 = *v16;
      *uint64_t v16 = *v17;

      long long v19 = v16[1];
      v16[1] = v17[1];

      goto LABEL_12;
    }
    sub_10005C2F0((uint64_t)v16);
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
LABEL_12:
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  id v23 = *(void **)((char *)a1 + v20);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);

  *((void *)v21 + 1) = *((void *)v22 + 1);
  *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
  v21[32] = v22[32];
  *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
  *((void *)v21 + 7) = *((void *)v22 + 7);
  uint64_t v24 = (void *)*((void *)v21 + 8);
  *((void *)v21 + 8) = *((void *)v22 + 8);

  long long v25 = (void *)*((void *)v21 + 9);
  *((void *)v21 + 9) = *((void *)v22 + 9);

  *((_OWORD *)v21 + 5) = *((_OWORD *)v22 + 5);
  *((void *)v21 + 12) = *((void *)v22 + 12);
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v94 = a1;
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void **)((char *)a1 + v26);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);

  long long v30 = (int *)type metadata accessor for TodayContent();
  uint64_t v31 = v30[5];
  uint64_t v32 = &v27[v31];
  uint64_t v33 = &v28[v31];
  uint64_t v34 = (int *)type metadata accessor for Banner();
  uint64_t v35 = *((void *)v34 - 1);
  id v36 = *(uint64_t (**)(char *, uint64_t, int *))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (v38)
    {
      sub_10008C078((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_18;
    }
    uint64_t v47 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v47;
    swift_bridgeObjectRelease();
    uint64_t v48 = *((void *)v33 + 3);
    *((void *)v32 + 2) = *((void *)v33 + 2);
    *((void *)v32 + 3) = v48;
    swift_bridgeObjectRelease();
    uint64_t v49 = *((void *)v33 + 5);
    *((void *)v32 + 4) = *((void *)v33 + 4);
    *((void *)v32 + 5) = v49;
    swift_bridgeObjectRelease();
    uint64_t v50 = v34[7];
    uint64_t v51 = &v33[v50];
    uint64_t v90 = &v32[v50];
    int v91 = v96();
    int v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(v51, 1, v95);
    if (v91)
    {
      if (v52)
      {
        size_t v53 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v54 = v90;
LABEL_27:
        memcpy(v54, v51, v53);
        goto LABEL_30;
      }
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v90, v51, v95);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v90, 0, 1, v95);
    }
    else
    {
      if (v52)
      {
        (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v95);
        size_t v53 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v54 = v90;
        goto LABEL_27;
      }
      (*(void (**)(char *, char *, uint64_t))(v92 + 40))(v90, v51, v95);
    }
LABEL_30:
    uint64_t v46 = v94;
    uint64_t v58 = v34[8];
    id v59 = &v32[v58];
    uint64_t v60 = &v33[v58];
    uint64_t v62 = *(void *)v60;
    uint64_t v61 = *((void *)v60 + 1);
    *(void *)id v59 = v62;
    *((void *)v59 + 1) = v61;
    swift_bridgeObjectRelease();
    uint64_t v63 = v34[9];
    uint64_t v64 = &v32[v63];
    unsigned int v65 = *(void **)&v32[v63];
    uint64_t v66 = *(void *)&v33[v63];
    if (v65 != (void *)1)
    {
      if (v66 != 1)
      {
        *(void *)uint64_t v64 = v66;

        goto LABEL_35;
      }
      sub_10001DBE4((id *)&v32[v63]);
      uint64_t v66 = *(void *)&v33[v63];
    }
    *(void *)uint64_t v64 = v66;
LABEL_35:
    uint64_t v45 = v95;
    uint64_t v67 = v34[10];
    uint64_t v68 = &v32[v67];
    uint64_t v69 = &v33[v67];
    char v70 = v69[16];
    uint64_t v71 = *(void **)v68;
    uint64_t v72 = (void *)*((void *)v68 + 1);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    v68[16] = v70;
    sub_10001D758(v71, v72);
    goto LABEL_36;
  }
  if (v38)
  {
LABEL_18:
    uint64_t v44 = sub_10001B38C(&qword_1001385E0);
    memcpy(v32, v33, *(void *)(*(void *)(v44 - 8) + 64));
    uint64_t v46 = v94;
    uint64_t v45 = v95;
    goto LABEL_36;
  }
  long long v39 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v39;
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  uint64_t v40 = v34[7];
  uint64_t v41 = &v32[v40];
  uint64_t v42 = &v33[v40];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v96)(&v33[v40], 1, v95))
  {
    uint64_t v43 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v41, v42, v95);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v41, 0, 1, v95);
  }
  *(_OWORD *)&v32[v34[8]] = *(_OWORD *)&v33[v34[8]];
  *(void *)&v32[v34[9]] = *(void *)&v33[v34[9]];
  uint64_t v55 = v34[10];
  int v56 = &v32[v55];
  int v57 = &v33[v55];
  v56[16] = v57[16];
  *(_OWORD *)int v56 = *(_OWORD *)v57;
  (*(void (**)(char *, void, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
  uint64_t v46 = v94;
  uint64_t v45 = v95;
LABEL_36:
  *(void *)&v27[v30[6]] = *(void *)&v28[v30[6]];
  swift_bridgeObjectRelease();
  *(void *)&v27[v30[7]] = *(void *)&v28[v30[7]];
  swift_unknownObjectRelease();
  v27[v30[8]] = v28[v30[8]];
  uint64_t v73 = v30[9];
  uint64_t v74 = &v27[v73];
  uint64_t v75 = &v28[v73];
  int v76 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(&v27[v73], 1, v45);
  int v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(v75, 1, v45);
  if (!v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 40))(v74, v75, v45);
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v74, v45);
    goto LABEL_41;
  }
  if (v77)
  {
LABEL_41:
    uint64_t v78 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v74, v75, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v74, 0, 1, v45);
LABEL_42:
  *(void *)&v27[v30[10]] = *(void *)&v28[v30[10]];
  swift_release();
  uint64_t v79 = v30[11];
  uint64_t v80 = &v27[v79];
  uint64_t v81 = &v28[v79];
  uint64_t v83 = *(void *)v81;
  uint64_t v82 = *((void *)v81 + 1);
  *(void *)uint64_t v80 = v83;
  *((void *)v80 + 1) = v82;
  swift_bridgeObjectRelease();
  uint64_t v84 = v30[12];
  unsigned int v85 = &v27[v84];
  uint64_t v86 = &v28[v84];
  uint64_t v88 = *(void *)v86;
  uint64_t v87 = *((void *)v86 + 1);
  *(void *)unsigned int v85 = v88;
  *((void *)v85 + 1) = v87;
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_10008E4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008E508);
}

uint64_t sub_10008E508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Item.Headline(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TodayContent();
    int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10008E634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008E648);
}

uint64_t sub_10008E648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Item.Headline(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TodayContent();
    int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_10008E774()
{
  uint64_t result = type metadata accessor for Item.Headline(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TodayContent();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10008E844(uint64_t a1)
{
  return sub_100090704(a1, &qword_100139718, &qword_100139720);
}

uint64_t sub_10008E880()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008E89C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_1000E9670();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000E9820();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001B38C(&qword_1001397F0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001B38C(&qword_1001397F8);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001B38C(&qword_100139800);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v66 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v61 = (char *)&v61 - v18;
  __chkstk_darwin(v17);
  uint64_t v68 = (uint64_t)&v61 - v19;
  *(void *)unint64_t v10 = sub_1000E9600();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v20 = sub_10001B38C(&qword_100139808);
  sub_10008EEEC((uint64_t)a1, (uint64_t)&v10[*(int *)(v20 + 44)]);
  sub_1000E9800();
  uint64_t v21 = sub_10001D100(&qword_100139810, &qword_1001397F0);
  uint64_t v62 = (void *)v8;
  sub_1000E9B30();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100028B6C((uint64_t)v10, &qword_1001397F0);
  sub_1000E9660();
  v71._object = (void *)0x80000001000FF970;
  v71._countAndFlagsBits = 0xD000000000000011;
  sub_1000E9650(v71);
  unsigned int v65 = a1;
  id v22 = [*a1 sourceName];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_1000EA2B0();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = (void *)0xE000000000000000;
  }
  v72._countAndFlagsBits = v24;
  v72._object = v26;
  sub_1000E9640(v72);
  swift_bridgeObjectRelease();
  v73._countAndFlagsBits = 0;
  v73._object = (void *)0xE000000000000000;
  sub_1000E9650(v73);
  sub_1000E9690();
  uint64_t v27 = sub_1000E9A40();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  id v69 = v62;
  uint64_t v70 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = (uint64_t)v61;
  uint64_t v33 = v64;
  sub_1000E9AE0();
  sub_100026FDC(v27, v29, v31);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v33);
  sub_10002D5DC(v32, v68, &qword_100139800);
  uint64_t v34 = v65;
  id v69 = sub_1000D97E8();
  uint64_t v70 = v35;
  sub_1000295C0();
  uint64_t v36 = sub_1000E9A50();
  uint64_t v38 = v37;
  LOBYTE(v33) = v39 & 1;
  id v40 = *(id *)((char *)v34 + *(int *)(type metadata accessor for RectangularHeadlineView(0) + 20) + 72);
  sub_1000E9930();
  uint64_t v41 = sub_1000E99C0();
  uint64_t v43 = v42;
  char v45 = v44;
  swift_release();
  char v46 = v45 & 1;
  sub_100026FDC(v36, v38, v33);
  swift_bridgeObjectRelease();
  sub_1000E9BF0();
  uint64_t v47 = sub_1000E9980();
  uint64_t v49 = v48;
  char v51 = v50;
  uint64_t v53 = v52;
  swift_release();
  LOBYTE(v33) = v51 & 1;
  sub_100026FDC(v41, v43, v46);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = v68;
  uint64_t v57 = v66;
  sub_10002DA34(v68, v66, &qword_100139800);
  uint64_t v58 = v67;
  sub_10002DA34(v57, v67, &qword_100139800);
  uint64_t v59 = v58 + *(int *)(sub_10001B38C(&qword_100139818) + 48);
  *(void *)uint64_t v59 = v47;
  *(void *)(v59 + 8) = v49;
  *(unsigned char *)(v59 + 16) = v33;
  *(void *)(v59 + 24) = v53;
  *(void *)(v59 + 32) = KeyPath;
  *(void *)(v59 + 40) = 3;
  *(unsigned char *)(v59 + 48) = 0;
  *(void *)(v59 + 56) = v55;
  *(void *)(v59 + 64) = 0x3FE8000000000000;
  sub_1000360E4(v47, v49, v33);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100028B6C(v56, &qword_100139800);
  sub_100026FDC(v47, v49, v33);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100028B6C(v57, &qword_100139800);
}

uint64_t sub_10008EEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v160 = a2;
  uint64_t v159 = sub_1000E9970();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10001B38C(&qword_100139820);
  __chkstk_darwin(v145);
  unint64_t v149 = (uint64_t *)((char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10001B38C(&qword_100139828);
  __chkstk_darwin(v5 - 8);
  uint64_t v147 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_10001B38C(&qword_100139830);
  __chkstk_darwin(v144);
  uint64_t v148 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10001B38C(&qword_100139838);
  __chkstk_darwin(v146);
  uint64_t v151 = (uint64_t)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_10001B38C(&qword_100139840);
  __chkstk_darwin(v152);
  uint64_t v150 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_10001B38C(&qword_100139848);
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v10 = __chkstk_darwin(v156);
  unint64_t v154 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v153 = (char *)&v129 - v12;
  uint64_t v13 = sub_10001B38C(&qword_100138878);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v129 - v17;
  uint64_t v137 = sub_10001B38C(&qword_100138880);
  __chkstk_darwin(v137);
  uint64_t v20 = (uint64_t *)((char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = sub_1000E9CA0();
  uint64_t v21 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  id v23 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10001B38C(&qword_100138888);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v141 = sub_10001B38C(&qword_100138890);
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10001B38C(&qword_100138898);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v143 = (uint64_t)&v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v142 = (uint64_t)&v129 - v31;
  uint64_t v32 = sub_10001B38C(&qword_100139850);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v162 = (uint64_t)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v129 - v35;
  uint64_t v37 = a1 + *(int *)(type metadata accessor for RectangularHeadlineView(0) + 24);
  uint64_t v38 = *(void *)(v37 + *(int *)(type metadata accessor for TodayContent() + 24));
  uint64_t v39 = *(void *)(v38 + 16);
  id v161 = v36;
  if (v39
    && (uint64_t v40 = *(void *)(type metadata accessor for Section() - 8),
        *(unsigned char *)(v38
                 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
                 + 24) == 1))
  {
    uint64_t v136 = sub_1000E9C80();
    uint64_t v41 = sub_1000E9BB0();
    uint64_t v133 = v18;
    uint64_t v132 = v41;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v135 = a1;
    uint64_t v43 = KeyPath;
    uint64_t v44 = sub_1000E9910();
    uint64_t v134 = v16;
    uint64_t v45 = v44;
    uint64_t v46 = swift_getKeyPath();
    uint64_t v47 = v138;
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for Image.Scale.small(_:), v138);
    uint64_t v48 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))((char *)v20 + *(int *)(v137 + 28), v23, v47);
    *uint64_t v20 = v48;
    sub_10002DA34((uint64_t)v20, (uint64_t)v26 + *(int *)(v24 + 36), &qword_100138880);
    uint64_t *v26 = v136;
    v26[1] = v43;
    v26[2] = v132;
    void v26[3] = v46;
    v26[4] = v45;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100028B6C((uint64_t)v20, &qword_100138880);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v47);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v49 = sub_10005DB44();
    char v50 = v139;
    sub_1000E9A60();
    sub_100028B6C((uint64_t)v26, &qword_100138888);
    uint64_t v171 = v24;
    unint64_t v172 = v49;
    swift_getOpaqueTypeConformance2();
    uint64_t v51 = v143;
    uint64_t v52 = v141;
    sub_1000E9B00();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v50, v52);
    sub_10002D5DC(v51, v142, &qword_100138898);
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v141 = v165;
    LODWORD(v140) = v166;
    uint64_t v139 = v167;
    LODWORD(v138) = v168;
    uint64_t v137 = v169;
    uint64_t v136 = v170;
    sub_1000E9910();
    uint64_t v53 = sub_1000E99C0();
    uint64_t v55 = v54;
    char v57 = v56;
    swift_release();
    sub_1000E9BF0();
    uint64_t v58 = sub_1000E9980();
    uint64_t v60 = v59;
    char v62 = v61;
    uint64_t v64 = v63;
    swift_release();
    sub_100026FDC(v53, v55, v57 & 1);
    swift_bridgeObjectRelease();
    uint64_t v171 = v58;
    unint64_t v172 = v60;
    LOBYTE(v173) = v62 & 1;
    uint64_t v174 = v64;
    uint64_t v175 = 0x3FE6666666666666;
    sub_10001B38C(&qword_1001388E0);
    sub_100090654();
    uint64_t v65 = (uint64_t)v133;
    sub_1000E9B00();
    sub_100026FDC(v58, v60, v62 & 1);
    swift_bridgeObjectRelease();
    sub_1000E9DC0();
    sub_1000E9300();
    uint64_t v132 = v171;
    int v131 = v172;
    uint64_t v130 = v173;
    LOBYTE(v58) = v174;
    uint64_t v66 = v175;
    uint64_t v67 = v176;
    uint64_t v68 = v142;
    uint64_t v69 = v143;
    sub_10002DA34(v142, v143, &qword_100138898);
    uint64_t v70 = (uint64_t)v134;
    sub_10002DA34(v65, (uint64_t)v134, &qword_100138878);
    uint64_t v71 = v162;
    sub_10002DA34(v69, v162, &qword_100138898);
    Swift::String v72 = (int *)sub_10001B38C(&qword_100139898);
    uint64_t v73 = v71 + v72[12];
    *(void *)uint64_t v73 = 0;
    *(unsigned char *)(v73 + 8) = 1;
    *(void *)(v73 + 16) = v141;
    *(unsigned char *)(v73 + 24) = v140;
    *(void *)(v73 + 32) = v139;
    *(unsigned char *)(v73 + 40) = v138;
    uint64_t v74 = v136;
    *(void *)(v73 + 48) = v137;
    *(void *)(v73 + 56) = v74;
    sub_10002DA34(v70, v71 + v72[16], &qword_100138878);
    uint64_t v75 = v71 + v72[20];
    *(void *)uint64_t v75 = 0;
    *(unsigned char *)(v75 + 8) = 1;
    *(void *)(v75 + 16) = v132;
    *(unsigned char *)(v75 + 24) = v131;
    *(void *)(v75 + 32) = v130;
    *(unsigned char *)(v75 + 40) = v58;
    *(void *)(v75 + 48) = v66;
    *(void *)(v75 + 56) = v67;
    sub_100028B6C(v65, &qword_100138878);
    sub_100028B6C(v68, &qword_100138898);
    sub_100028B6C(v70, &qword_100138878);
    sub_100028B6C(v143, &qword_100138898);
    uint64_t v76 = sub_10001B38C(&qword_100139858);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v71, 0, 1, v76);
    sub_10002D5DC(v71, (uint64_t)v161, &qword_100139850);
  }
  else
  {
    uint64_t v77 = sub_10001B38C(&qword_100139858);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v36, 1, 1, v77);
  }
  id v163 = sub_1000D9660();
  uint64_t v164 = v78;
  sub_1000295C0();
  uint64_t v79 = sub_1000E9A50();
  uint64_t v81 = v80;
  char v83 = v82 & 1;
  sub_1000E9910();
  uint64_t v84 = sub_1000E99C0();
  uint64_t v86 = v85;
  char v88 = v87;
  swift_release();
  char v89 = v88 & 1;
  sub_100026FDC(v79, v81, v83);
  swift_bridgeObjectRelease();
  sub_1000E98B0();
  uint64_t v90 = sub_1000E9960();
  uint64_t v92 = v91;
  LOBYTE(v81) = v93 & 1;
  sub_100026FDC(v84, v86, v89);
  swift_bridgeObjectRelease();
  sub_1000E9BB0();
  uint64_t v94 = sub_1000E9980();
  uint64_t v96 = v95;
  LOBYTE(v86) = v97;
  uint64_t v99 = v98;
  swift_release();
  sub_100026FDC(v90, v92, v81);
  swift_bridgeObjectRelease();
  uint64_t v100 = enum case for Text.Case.uppercase(_:);
  uint64_t v101 = sub_1000E99B0();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v103 = (uint64_t)v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 104))(v147, v100, v101);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v103, 0, 1, v101);
  uint64_t v104 = swift_getKeyPath();
  uint64_t v105 = v149;
  sub_10002DA34(v103, (uint64_t)v149 + *(int *)(v145 + 28), &qword_100139828);
  *uint64_t v105 = v104;
  uint64_t v106 = (uint64_t)v148;
  sub_10002DA34((uint64_t)v105, (uint64_t)&v148[*(int *)(v144 + 36)], &qword_100139820);
  *(void *)uint64_t v106 = v94;
  *(void *)(v106 + 8) = v96;
  *(unsigned char *)(v106 + 16) = v86 & 1;
  *(void *)(v106 + 24) = v99;
  sub_1000360E4(v94, v96, v86 & 1);
  swift_bridgeObjectRetain();
  sub_100028B6C((uint64_t)v105, &qword_100139820);
  sub_100028B6C(v103, &qword_100139828);
  sub_100026FDC(v94, v96, v86 & 1);
  swift_bridgeObjectRelease();
  uint64_t v107 = swift_getKeyPath();
  uint64_t v108 = v151;
  sub_10002DA34(v106, v151, &qword_100139830);
  uint64_t v109 = v108 + *(int *)(v146 + 36);
  *(void *)uint64_t v109 = v107;
  *(void *)(v109 + 8) = 1;
  *(unsigned char *)(v109 + 16) = 0;
  sub_100028B6C(v106, &qword_100139830);
  uint64_t v110 = v158;
  char v111 = v157;
  uint64_t v112 = v159;
  (*(void (**)(char *, void, uint64_t))(v158 + 104))(v157, enum case for Text.TruncationMode.tail(_:), v159);
  uint64_t v113 = swift_getKeyPath();
  uint64_t v114 = (uint64_t)v150;
  uint64_t v115 = (uint64_t *)&v150[*(int *)(v152 + 36)];
  uint64_t v116 = sub_10001B38C(&qword_100139860);
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))((char *)v115 + *(int *)(v116 + 28), v111, v112);
  *uint64_t v115 = v113;
  sub_10002DA34(v108, v114, &qword_100139838);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
  sub_100028B6C(v108, &qword_100139838);
  sub_10009045C();
  unint64_t v117 = v154;
  sub_1000E9A60();
  sub_100028B6C(v114, &qword_100139840);
  uint64_t v118 = v155;
  uint64_t v119 = v153;
  uint64_t v120 = v156;
  (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v153, v117, v156);
  uint64_t v121 = (uint64_t)v161;
  uint64_t v122 = v162;
  sub_10002DA34((uint64_t)v161, v162, &qword_100139850);
  char v123 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v123(v117, v119, v120);
  uint64_t v124 = v160;
  sub_10002DA34(v122, v160, &qword_100139850);
  uint64_t v125 = sub_10001B38C(&qword_100139890);
  v123((char *)(v124 + *(int *)(v125 + 48)), v117, v120);
  uint64_t v126 = v124 + *(int *)(v125 + 64);
  *(void *)uint64_t v126 = 0;
  *(unsigned char *)(v126 + 8) = 1;
  uint64_t v127 = *(void (**)(char *, uint64_t))(v118 + 8);
  v127(v119, v120);
  sub_100028B6C(v121, &qword_100139850);
  v127(v117, v120);
  return sub_100028B6C(v122, &qword_100139850);
}

uint64_t sub_100090060()
{
  uint64_t v1 = sub_1000E9820();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_1001397D8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_1000E9720();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  uint64_t v8 = sub_10001B38C(&qword_1001397E0);
  sub_10008E89C(v0, (uint64_t)&v7[*(int *)(v8 + 44)]);
  sub_1000E9810();
  sub_10001D100(&qword_1001397E8, &qword_1001397D8);
  sub_1000E9B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100028B6C((uint64_t)v7, &qword_1001397D8);
}

uint64_t sub_100090208@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E94D0();
  *a1 = v3;
  return result;
}

uint64_t sub_100090234@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E94D0();
  *a1 = v3;
  return result;
}

uint64_t sub_100090260()
{
  return sub_1000E94E0();
}

uint64_t sub_100090288()
{
  return sub_1000E94E0();
}

uint64_t sub_1000902B0()
{
  return sub_1000E9550();
}

uint64_t sub_1000902D4(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C(&qword_100139828);
  __chkstk_darwin(v2 - 8);
  sub_10002DA34(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100139828);
  return sub_1000E9560();
}

uint64_t sub_10009036C()
{
  return sub_1000E9480();
}

uint64_t sub_100090390(uint64_t a1)
{
  uint64_t v2 = sub_1000E9970();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000E9490();
}

unint64_t sub_10009045C()
{
  unint64_t result = qword_100139868;
  if (!qword_100139868)
  {
    sub_10001B3D0(&qword_100139840);
    sub_1000904FC();
    sub_10001D100(&qword_100139888, &qword_100139860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139868);
  }
  return result;
}

unint64_t sub_1000904FC()
{
  unint64_t result = qword_100139870;
  if (!qword_100139870)
  {
    sub_10001B3D0(&qword_100139838);
    sub_10009059C();
    sub_10001D100((unint64_t *)&qword_100137AF0, &qword_100137AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139870);
  }
  return result;
}

unint64_t sub_10009059C()
{
  unint64_t result = qword_100139878;
  if (!qword_100139878)
  {
    sub_10001B3D0(&qword_100139830);
    sub_10001D100(&qword_100139880, &qword_100139820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139878);
  }
  return result;
}

unint64_t sub_100090654()
{
  unint64_t result = qword_1001388E8;
  if (!qword_1001388E8)
  {
    sub_10001B3D0(&qword_1001388E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001388E8);
  }
  return result;
}

uint64_t sub_1000906C8(uint64_t a1)
{
  return sub_100090704(a1, &qword_1001397D8, &qword_1001397E8);
}

uint64_t sub_100090704(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100090778(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_10001B38C(&qword_1001398C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  uint64_t v24 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E86B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001B38C(&qword_1001398D0);
  __chkstk_darwin(v9);
  sub_1000910D4();
  sub_1000E8770();
  v25._countAndFlagsBits = 0x206E65704FLL;
  v25._object = (void *)0xE500000000000000;
  sub_1000E8760(v25);
  swift_getKeyPath();
  unint64_t v20 = sub_10009119C();
  sub_1000E86A0();
  swift_release();
  sub_1000E8750();
  swift_release();
  v26._countAndFlagsBits = 544106784;
  v26._object = (void *)0xE400000000000000;
  sub_1000E8760(v26);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v5);
  sub_1000E8740();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v27._countAndFlagsBits = 0x6E69747465532029;
  v27._object = (void *)0xEA00000000007367;
  sub_1000E8760(v27);
  sub_1000E8780();
  uint64_t v22 = sub_1000E86D0();
  uint64_t v10 = v23;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v24 + 8);
  v24 += 8;
  v18(v4, v23);
  sub_1000E8770();
  v28._countAndFlagsBits = 0x206E65704FLL;
  v28._object = (void *)0xE500000000000000;
  sub_1000E8760(v28);
  swift_getKeyPath();
  sub_1000E86A0();
  swift_release();
  sub_1000E8750();
  swift_release();
  v29._countAndFlagsBits = 0x676E697474657320;
  v29._object = (void *)0xE800000000000000;
  sub_1000E8760(v29);
  sub_1000E8780();
  uint64_t v19 = sub_1000E86D0();
  uint64_t v11 = v18;
  v18(v4, v10);
  sub_1000E8770();
  v30._countAndFlagsBits = 0x20656D20656B6154;
  v30._object = (void *)0xEB00000000206F74;
  sub_1000E8760(v30);
  swift_getKeyPath();
  sub_1000E86A0();
  swift_release();
  sub_1000E8750();
  swift_release();
  v31._countAndFlagsBits = 0x676E697474657320;
  v31._object = (void *)0xE800000000000000;
  sub_1000E8760(v31);
  sub_1000E8780();
  uint64_t v12 = sub_1000E86D0();
  v11(v4, v23);
  sub_10001B38C(&qword_1001398D8);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000F2570;
  uint64_t v14 = v19;
  *(void *)(v13 + 32) = v22;
  *(void *)(v13 + 40) = v14;
  *(void *)(v13 + 48) = v12;
  uint64_t v15 = sub_1000E86C0();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100090C70()
{
  uint64_t v0 = sub_1000E8730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10009119C();
  sub_1000E86A0();
  swift_release();
  sub_1000910D4();
  sub_1000E8720();
  uint64_t v4 = sub_1000E8710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10001B38C(&qword_1001398B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000F1610;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1000E8700();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100090DD8()
{
  uint64_t v0 = sub_1000E86F0();
  uint64_t v1 = sub_1000E86F0();
  uint64_t v2 = sub_1000E86F0();
  uint64_t v3 = sub_1000E86F0();
  uint64_t v4 = sub_1000E86F0();
  sub_10001B38C(&qword_1001398C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000F1D70;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = sub_1000E86E0();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_100090EF4()
{
  qword_10014BC88 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_100090F08()
{
  uint64_t v0 = sub_1000E87B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = sub_1000C60B0();
  sub_1000910D4();
  sub_1000E87C0();
  uint64_t v4 = sub_1000E87A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10001B38C(&qword_1001398A8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000F1610;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1000E8790();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100091068()
{
  if (qword_100135D78 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for NewsTodayAssistantIntentsProvider()
{
  return &type metadata for NewsTodayAssistantIntentsProvider;
}

unint64_t sub_1000910D4()
{
  unint64_t result = qword_1001398A0;
  if (!qword_1001398A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001398A0);
  }
  return result;
}

uint64_t sub_100091128@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E8650();
  *a1 = v3;
  return result;
}

uint64_t sub_100091164()
{
  return sub_1000E8660();
}

unint64_t sub_10009119C()
{
  unint64_t result = qword_1001398B0;
  if (!qword_1001398B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001398B0);
  }
  return result;
}

uint64_t sub_1000911F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100020A28(a1, a1[3]);
  uint64_t v3 = type metadata accessor for NTTodayContextResultsService();
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&off_100125750;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100091264(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100139A30);
  uint64_t result = sub_1000E8EC0();
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100137810);
  uint64_t result = sub_1000E8EC0();
  if (!v20)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100139A40);
  uint64_t result = sub_1000E8EC0();
  if (v18)
  {
    uint64_t v3 = sub_10003A4C0((uint64_t)v21, v22);
    __chkstk_darwin(v3);
    uint64_t v5 = (uint64_t *)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v6 + 16))(v5);
    uint64_t v7 = sub_10003A4C0((uint64_t)v19, v20);
    __chkstk_darwin(v7);
    uint64_t v9 = (uint64_t *)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    uint64_t v11 = sub_10003A4C0((uint64_t)v17, v18);
    __chkstk_darwin(v11);
    uint64_t v13 = (uint64_t **)&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **))(v14 + 16))(v13);
    uint64_t v15 = sub_100092B18(*v5, *v9, *v13);
    sub_100020AC0((uint64_t)v17);
    sub_100020AC0((uint64_t)v19);
    sub_100020AC0((uint64_t)v21);
    return (uint64_t)v15;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100091570(void *a1)
{
  uint64_t v2 = sub_1000E8B60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_1001399F0);
  uint64_t v9 = sub_1000E8EB0();
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  id v11 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  if (!v11)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_8;
  }
  uint64_t v12 = v11;
  sub_1000E8B20();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1000E8AE0(v14);
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, (unint64_t *)&qword_100137898);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v17 = (void *)result;
    id v18 = [self nt_contentContextWithConfigurationManager:v10 contentHostDirectory:v16 networkBehaviorMonitor:result];
    swift_unknownObjectRelease();

    return (uint64_t)v18;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_10009180C(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, (unint64_t *)&unk_100139A00);
  id result = (id)sub_1000E8EB0();
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result asWidgetUpdateEventTracker];

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100091894(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, (unint64_t *)&unk_100139A00);
  uint64_t result = sub_1000E8EB0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000918F8(void *a1)
{
  uint64_t v2 = sub_1000EA660();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_1000EA670();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E9E30();
  __chkstk_darwin(v7 - 8);
  sub_100022374(0, &qword_1001382D8);
  sub_1000E9E20();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  v15[1] = _swiftEmptyArrayStorage;
  sub_10004BD54();
  sub_10001B38C(&qword_1001382E8);
  sub_10004BDAC();
  sub_1000EA7C0();
  uint64_t v8 = (void *)sub_1000EA6B0();
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100137DC0);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    uint64_t v10 = result;
    sub_100020A28(a1, a1[3]);
    sub_10001B38C((uint64_t *)&unk_100137CB8);
    uint64_t result = sub_1000E8EB0();
    if (result)
    {
      uint64_t v11 = result;
      sub_100020A28(a1, a1[3]);
      sub_10001B38C((uint64_t *)&unk_100139A20);
      uint64_t v12 = sub_1000E8EB0();
      id v13 = [objc_allocWithZone((Class)FCAsyncSerialQueue) init];
      id v14 = [objc_allocWithZone((Class)NTTodayContext) initWithContentContext:v10 feedPersonalizerFactory:v11 todayBannerValidator:v12 processVariant:0 accessQueue:v8 fetchQueue:v13];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      return (uint64_t)v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100091C20(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100137DC0);
  id result = (id)sub_1000E8EB0();
  if (result)
  {
    id v2 = [result news_core_ConfigurationManager];
    swift_unknownObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100091CA0()
{
  id v0 = objc_allocWithZone((Class)FCNetworkBehaviorMonitor);

  return [v0 initWithOptions:7 cacheDirectory:0];
}

void sub_100091CE0(void *a1@<X8>)
{
  *a1 = 16;
}

void *sub_100091CEC(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100137DB8);
  id result = (void *)sub_1000E8EB0();
  if (result)
  {
    id v2 = result;
    type metadata accessor for NTTodayContextResultsService();
    id result = (void *)swift_allocObject();
    result[2] = 0;
    result[3] = 0;
    result[4] = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100091D70(void *a1)
{
  uint64_t v2 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (id)FCBundle();
  if (!v5)
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v6 = v5;
  NSString v7 = sub_1000EA280();
  id v8 = [v6 objectForInfoDictionaryKey:v7];

  if (v8)
  {
    sub_1000EA7A0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  uint64_t v9 = 0x6E776F6E6B6E55;
  sub_100093884((uint64_t)&v33, (uint64_t)v35);
  if (v36) {
    swift_dynamicCast();
  }
  else {
    sub_100084798((uint64_t)v35);
  }
  id v10 = (id)FCBundle();
  if (!v10) {
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  NSString v12 = sub_1000EA280();
  id v13 = [v11 objectForInfoDictionaryKey:v12];

  if (v13)
  {
    sub_1000EA7A0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_100093884((uint64_t)&v33, (uint64_t)v35);
  if (v36)
  {
    if (swift_dynamicCast()) {
      uint64_t v9 = v32[2];
    }
  }
  else
  {
    sub_100084798((uint64_t)v35);
  }
  id v14 = [self defaultConfiguration];
  id v15 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  v32[1] = v9;
  if (v15)
  {
    uint64_t v16 = v15;
    sub_1000E8B20();

    uint64_t v17 = sub_1000E8B60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = sub_1000E8B60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  }
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_1001399F8);
  uint64_t v19 = sub_1000E8EB0();
  if (!v19) {
    goto LABEL_27;
  }
  uint64_t v20 = v19;
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, (unint64_t *)&qword_100137898);
  uint64_t v21 = sub_1000E8EB0();
  if (!v21)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  uint64_t v22 = (void *)v21;
  uint64_t v23 = sub_1000E8B60();
  uint64_t v24 = *(void *)(v23 - 8);
  Swift::String v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v23) != 1)
  {
    sub_1000E8AE0(v25);
    Swift::String v26 = v27;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  }
  id v28 = objc_allocWithZone((Class)FCConfigurationManager);
  NSString v29 = sub_1000EA280();
  swift_bridgeObjectRelease();
  NSString v30 = sub_1000EA280();
  swift_bridgeObjectRelease();
  id v31 = [v28 initWithContextConfiguration:v14 contentHostDirectoryFileURL:v26 feldsparIDProvider:v20 appShortVersionString:v29 buildNumberString:v30 networkBehaviorMonitor:v22];

  swift_unknownObjectRelease();
  if (!v31) {
    goto LABEL_29;
  }
}

id sub_100092234()
{
  id v0 = [self sharedInstance];

  return v0;
}

uint64_t sub_100092274(void *a1)
{
  sub_10001B38C(&qword_1001390C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000F5CA0;
  sub_100020A28(a1, a1[3]);
  sub_10001B38C((uint64_t *)&unk_100137900);
  uint64_t result = sub_1000E8E90();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(void *)(v2 + 32) = result;
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, (unint64_t *)&unk_100137CC8);
  uint64_t result = sub_1000E8EB0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(void *)(v2 + 40) = result;
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100137D60);
  uint64_t result = sub_1000E8EB0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v2 + 48) = result;
  sub_100020A28(a1, a1[3]);
  sub_100022374(0, &qword_100139A10);
  uint64_t result = sub_1000E8EB0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v2 + 56) = result;
  sub_100020A28(a1, a1[3]);
  type metadata accessor for TodayBannerEventTracker();
  uint64_t result = sub_1000E8EB0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(v2 + 64) = result;
  sub_1000EA490();
  sub_100020A28(a1, a1[3]);
  uint64_t result = sub_1000E8E90();
  if (!result)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  sub_1000EA450();
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000EA4C0();
  }
  sub_1000EA4F0();
  sub_1000EA490();
  id v4 = objc_allocWithZone((Class)FTAggregateWidgetEventTracker);
  sub_10001B38C((uint64_t *)&unk_100137DD0);
  Class isa = sub_1000EA460().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithEventTrackers:isa];

  return (uint64_t)v6;
}

uint64_t sub_100092550(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100137890);
  uint64_t result = sub_1000E8EB0();
  if (result)
  {
    id v2 = [objc_allocWithZone((Class)FTNewsAnalyticsWidgetEventTracker) initWithUserIDProvider:result];
    swift_unknownObjectRelease();
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000925D8()
{
  id v0 = objc_allocWithZone((Class)FTPersonalizationWidgetEventTracker);

  return [v0 init];
}

uint64_t sub_100092610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TodayBannerStateStore();
  swift_allocObject();
  uint64_t result = sub_100029F2C();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100125500;
  *a1 = result;
  return result;
}

uint64_t sub_100092668(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100139A18);
  uint64_t result = sub_1000E8EC0();
  if (v23)
  {
    uint64_t v2 = sub_10003A4C0((uint64_t)v22, v23);
    __chkstk_darwin(v2);
    id v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    uint64_t v6 = *v4;
    uint64_t v7 = type metadata accessor for TodayBannerStateStore();
    uint64_t v20 = v7;
    uint64_t v21 = &off_100125500;
    v19[0] = v6;
    id v8 = (objc_class *)type metadata accessor for TodayBannerEventTracker();
    id v9 = objc_allocWithZone(v8);
    uint64_t v10 = sub_10003A4C0((uint64_t)v19, v20);
    __chkstk_darwin(v10);
    NSString v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v13 + 16))(v12);
    uint64_t v14 = *v12;
    v18[3] = v7;
    v18[4] = &off_100125500;
    v18[0] = v14;
    sub_10002D970((uint64_t)v18, (uint64_t)v9 + OBJC_IVAR____TtC10NewsToday223TodayBannerEventTracker_store);
    v17.receiver = v9;
    v17.super_class = v8;
    [super init];
    sub_100020AC0((uint64_t)v18);
    sub_100020AC0((uint64_t)v19);
    sub_100020AC0((uint64_t)v22);
    return (uint64_t)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000928A4(void *a1)
{
  sub_100020A28(a1, a1[3]);
  sub_10001B38C(&qword_100139A18);
  uint64_t result = sub_1000E8EC0();
  if (v16)
  {
    uint64_t v2 = sub_10003A4C0((uint64_t)v15, v16);
    __chkstk_darwin(v2);
    id v4 = (void *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    uint64_t v6 = *v4;
    uint64_t v7 = type metadata accessor for TodayBannerStateStore();
    void v14[3] = v7;
    v14[4] = &off_100125500;
    v14[0] = v6;
    type metadata accessor for TodayBannerValidator();
    id v8 = (void *)swift_allocObject();
    uint64_t v9 = sub_10003A4C0((uint64_t)v14, v7);
    __chkstk_darwin(v9);
    uint64_t v11 = (void *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    void v8[5] = v7;
    v8[6] = &off_100125500;
    void v8[2] = v13;
    sub_100020AC0((uint64_t)v14);
    sub_100020AC0((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100092AA4()
{
  id v0 = [self widgetEventTrackerWithMaxRowCount:10];

  return v0;
}

uint64_t type metadata accessor for TodayWidgetServiceAssembly()
{
  return self;
}

void *sub_100092B18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = type metadata accessor for BiomeEventStore();
  _OWORD v33[3] = v7;
  v33[4] = &off_100127CF8;
  v33[0] = a1;
  uint64_t v8 = type metadata accessor for SessionAssembler();
  uint64_t v31 = v8;
  uint64_t v32 = &off_100126F60;
  v30[0] = a2;
  uint64_t v28 = v6;
  NSString v29 = &off_100125A50;
  v27[0] = a3;
  type metadata accessor for EventProcessingSidecarTask();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_10003A4C0((uint64_t)v33, v7);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  uint64_t v14 = sub_10003A4C0((uint64_t)v30, v31);
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)&v27[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  uint64_t v18 = sub_10003A4C0((uint64_t)v27, v28);
  __chkstk_darwin(v18);
  uint64_t v20 = (void *)((char *)&v27[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = *v12;
  uint64_t v23 = *v16;
  uint64_t v24 = *v20;
  v9[5] = v7;
  v9[6] = &off_100127CF8;
  v9[7] = v23;
  uint64_t v9[2] = v22;
  v9[10] = v8;
  v9[11] = &off_100126F60;
  v9[15] = v6;
  unsigned char v9[16] = &off_100125A50;
  v9[12] = v24;
  sub_100020AC0((uint64_t)v27);
  sub_100020AC0((uint64_t)v30);
  sub_100020AC0((uint64_t)v33);
  return v9;
}

uint64_t sub_100092DFC()
{
  uint64_t v0 = sub_1000E9020();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8F10();
  sub_10001B38C(&qword_100137D80);
  sub_1000E8FB0();
  swift_release();
  uint64_t v4 = enum case for Scope.singleton(_:);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, enum case for Scope.singleton(_:), v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1000E8F10();
  type metadata accessor for EventProcessingSidecarTask();
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_100137DC0);
  sub_1000E8FA0();
  swift_release();
  unsigned int v12 = v4;
  v5(v3, v4, v0);
  uint64_t v11 = v5;
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F10();
  sub_10001B38C(&qword_100137DB0);
  sub_1000E8FA0();
  swift_release();
  v5(v3, v4, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F10();
  uint64_t v13 = sub_10001B38C((uint64_t *)&unk_100137900);
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F10();
  sub_100022374(0, &qword_100137DB8);
  sub_1000E8FA0();
  swift_release();
  uint64_t v7 = v12;
  uint64_t v8 = v11;
  v11(v3, v12, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F10();
  sub_10001B38C((uint64_t *)&unk_1001399E0);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F10();
  sub_100022374(0, (unint64_t *)&qword_100137898);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F10();
  type metadata accessor for FCFeedPersonalizationConfigurationSet(0);
  sub_1000E8FB0();
  swift_release();
  swift_release();
  sub_1000E8F20();
  type metadata accessor for NTTodayContextResultsService();
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_10001B38C(&qword_1001399F0);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_10001B38C(&qword_1001399F8);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_100022374(0, (unint64_t *)&unk_100139A00);
  sub_1000E8FA0();
  swift_release();
  swift_release();
  sub_1000E8F20();
  sub_100022374(0, &qword_100137D60);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_100022374(0, &qword_100139A10);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_10001B38C(&qword_100139A18);
  sub_1000E8FB0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  type metadata accessor for TodayBannerEventTracker();
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_10001B38C((uint64_t *)&unk_100139A20);
  sub_1000E8FA0();
  swift_release();
  v8(v3, v7, v0);
  sub_1000E8E10();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1000E8F20();
  sub_1000E8FA0();
  swift_release();
  return swift_release();
}

uint64_t sub_100093884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001B38C((uint64_t *)&unk_1001394E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_1000938EC(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v19 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    a1[24] = *((unsigned char *)a2 + 24);
    uint64_t v10 = type metadata accessor for Section();
    uint64_t v11 = *(int *)(v10 + 32);
    uint64_t v100 = a1;
    __dst = &a1[v11];
    uint64_t v93 = v10;
    unsigned int v12 = (char *)a2 + v11;
    uint64_t v13 = sub_1000E8B60();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v4;
    uint64_t v17 = v8;
    swift_bridgeObjectRetain();
    uint64_t v96 = v15;
    uint64_t v98 = v13;
    if (v15(v12, 1, v13))
    {
      uint64_t v18 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v12, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v95 = v14;
    uint64_t v20 = *(int *)(v93 + 36);
    uint64_t v21 = &a1[v20];
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1000E8C50();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_10001B38C((uint64_t *)&unk_10013A350);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    int __dsta = a3;
    uint64_t v94 = a2;
    uint64_t v26 = a3[5];
    Swift::String v27 = &a1[v26];
    uint64_t v28 = (uint64_t)a2 + v26;
    NSString v29 = *(char **)((char *)a2 + v26);
    *(void *)&a1[v26] = v29;
    NSString v30 = (int *)type metadata accessor for TodayContent();
    uint64_t v31 = v30[5];
    uint64_t v32 = &v27[v31];
    long long v33 = (void *)(v28 + v31);
    long long v34 = (int *)type metadata accessor for Banner();
    uint64_t v35 = *((void *)v34 - 1);
    uint64_t v36 = *(unsigned int (**)(void *, uint64_t, int *))(v35 + 48);
    id v37 = v29;
    if (v36(v33, 1, v34))
    {
      uint64_t v38 = sub_10001B38C(&qword_1001385E0);
      memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
      uint64_t v39 = v98;
    }
    else
    {
      uint64_t v40 = v33[1];
      *(void *)uint64_t v32 = *v33;
      *((void *)v32 + 1) = v40;
      uint64_t v41 = v33[3];
      *((void *)v32 + 2) = v33[2];
      *((void *)v32 + 3) = v41;
      uint64_t v42 = v33[5];
      *((void *)v32 + 4) = v33[4];
      *((void *)v32 + 5) = v42;
      uint64_t v43 = v34[7];
      char v89 = &v32[v43];
      uint64_t v90 = v35;
      uint64_t v44 = (char *)v33 + v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v96(v44, 1, v98))
      {
        uint64_t v45 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v89, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v89, v44, v98);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v89, 0, 1, v98);
      }
      uint64_t v46 = v34[8];
      uint64_t v47 = &v32[v46];
      uint64_t v48 = (void *)((char *)v33 + v46);
      uint64_t v49 = v48[1];
      *(void *)uint64_t v47 = *v48;
      *((void *)v47 + 1) = v49;
      uint64_t v50 = v34[9];
      uint64_t v51 = *(void **)((char *)v33 + v50);
      swift_bridgeObjectRetain();
      if (v51 != (void *)1) {
        id v52 = v51;
      }
      *(void *)&v32[v50] = v51;
      uint64_t v53 = v34[10];
      uint64_t v54 = &v32[v53];
      uint64_t v55 = (char *)v33 + v53;
      char v56 = *(void **)v55;
      char v57 = (void *)*((void *)v55 + 1);
      char v58 = v55[16];
      sub_10001D614(*(void **)v55, v57);
      *(void *)uint64_t v54 = v56;
      *((void *)v54 + 1) = v57;
      v54[16] = v58;
      (*(void (**)(char *, void, uint64_t, int *))(v90 + 56))(v32, 0, 1, v34);
      uint64_t v39 = v98;
    }
    *(void *)&v27[v30[6]] = *(void *)(v28 + v30[6]);
    *(void *)&v27[v30[7]] = *(void *)(v28 + v30[7]);
    v27[v30[8]] = *(unsigned char *)(v28 + v30[8]);
    uint64_t v59 = v30[9];
    uint64_t v60 = &v27[v59];
    char v61 = (void *)(v28 + v59);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v96((char *)v61, 1, v39))
    {
      uint64_t v62 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v95 + 16))(v60, v61, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v60, 0, 1, v39);
    }
    *(void *)&v27[v30[10]] = *(void *)(v28 + v30[10]);
    uint64_t v63 = v30[11];
    uint64_t v64 = &v27[v63];
    uint64_t v65 = (void *)(v28 + v63);
    uint64_t v99 = v65[1];
    *(void *)uint64_t v64 = *v65;
    *((void *)v64 + 1) = v99;
    uint64_t v66 = v30[12];
    uint64_t v67 = &v27[v66];
    uint64_t v68 = (void *)(v28 + v66);
    uint64_t v97 = v68[1];
    *(void *)uint64_t v67 = *v68;
    *((void *)v67 + 1) = v97;
    uint64_t v69 = __dsta[6];
    uint64_t v70 = __dsta[7];
    uint64_t v19 = v100;
    uint64_t v71 = &v100[v69];
    uint64_t v72 = (uint64_t)v94 + v69;
    *uint64_t v71 = *(unsigned char *)v72;
    *(_OWORD *)(v71 + 8) = *(_OWORD *)(v72 + 8);
    uint64_t v73 = *(void **)(v72 + 32);
    *((void *)v71 + 3) = *(void *)(v72 + 24);
    *((void *)v71 + 4) = v73;
    uint64_t v74 = *(void **)(v72 + 40);
    *((void *)v71 + 5) = v74;
    *(_OWORD *)(v71 + 57) = *(_OWORD *)(v72 + 57);
    *((_OWORD *)v71 + 3) = *(_OWORD *)(v72 + 48);
    *((_OWORD *)v71 + 5) = *(_OWORD *)(v72 + 80);
    uint64_t v75 = *(void **)(v72 + 104);
    *((void *)v71 + 12) = *(void *)(v72 + 96);
    *((void *)v71 + 13) = v75;
    uint64_t v76 = *(void **)(v72 + 112);
    *((void *)v71 + 14) = v76;
    *(_OWORD *)(v71 + 120) = *(_OWORD *)(v72 + 120);
    *(_OWORD *)(v71 + 136) = *(_OWORD *)(v72 + 136);
    uint64_t v77 = &v100[v70];
    uint64_t v78 = *(uint64_t *)((char *)v94 + v70);
    char v79 = *((unsigned char *)v94 + v70 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v80 = v73;
    id v81 = v74;
    id v82 = v75;
    id v83 = v76;
    sub_10003D4B0(v78, v79);
    *(void *)uint64_t v77 = v78;
    v77[8] = v79;
    uint64_t v84 = __dsta[8];
    uint64_t v85 = &v100[v84];
    uint64_t v86 = (char **)((char *)v94 + v84);
    sub_10001B38C(&qword_1001391B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v87 = sub_1000E9290();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    }
    else
    {
      *(void *)uint64_t v85 = *v86;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v19;
}

uint64_t sub_100094034(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Section();
  uint64_t v5 = (char *)a1 + *(int *)(v4 + 32);
  uint64_t v6 = sub_1000E8B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (char *)a1 + *(int *)(v4 + 36);
  uint64_t v10 = sub_1000E8C50();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  unsigned int v12 = (id *)((char *)a1 + a2[5]);

  uint64_t v13 = type metadata accessor for TodayContent();
  uint64_t v14 = (char *)v12 + *(int *)(v13 + 20);
  uint64_t v15 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v15 - 1) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v8;
    uint64_t v17 = &v14[v15[7]];
    uint64_t v25 = v16;
    if (!v16(v17, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void **)&v14[v15[9]];
    if (v18 != (void *)1) {

    }
    sub_10001D758(*(void **)&v14[v15[10]], *(void **)&v14[v15[10] + 8]);
    uint64_t v8 = v25;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v19 = (char *)v12 + *(int *)(v13 + 36);
  if (!v8(v19, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = (id *)((char *)a1 + a2[6]);

  sub_10003D590(*(uint64_t *)((char *)a1 + a2[7]), *((unsigned char *)a1 + a2[7] + 8));
  uint64_t v21 = (char *)a1 + a2[8];
  sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_1000E9290();
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8);
    return v23(v21, v22);
  }
  else
  {
    return swift_release();
  }
}

char *sub_100094414(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  a1[2] = *(void *)(a2 + 16);
  *((unsigned char *)a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Section();
  uint64_t v8 = *(int *)(v7 + 32);
  __dst = (char *)a1 + v8;
  uint64_t v93 = a2;
  uint64_t v9 = (void *)(a2 + v8);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  id v14 = v6;
  swift_bridgeObjectRetain();
  char v89 = v12;
  uint64_t v91 = v10;
  uint64_t v88 = v11;
  if (v12((char *)v9, 1, v10))
  {
    uint64_t v15 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(v7 + 36);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (const void *)(v93 + v16);
  uint64_t v19 = sub_1000E8C50();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = a3[5];
  int __dsta = (char *)a1;
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = v93 + v22;
  uint64_t v25 = *(void **)(v93 + v22);
  *(void *)((char *)a1 + v22) = v25;
  uint64_t v26 = (int *)type metadata accessor for TodayContent();
  uint64_t v27 = v26[5];
  uint64_t v28 = &v23[v27];
  NSString v29 = (void *)(v24 + v27);
  NSString v30 = (int *)type metadata accessor for Banner();
  uint64_t v31 = *((void *)v30 - 1);
  uint64_t v32 = *(unsigned int (**)(void *, uint64_t, int *))(v31 + 48);
  id v33 = v25;
  if (v32(v29, 1, v30))
  {
    uint64_t v34 = sub_10001B38C(&qword_1001385E0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v85 = v31;
    uint64_t v35 = v29[1];
    *(void *)uint64_t v28 = *v29;
    *((void *)v28 + 1) = v35;
    uint64_t v36 = v29[3];
    *((void *)v28 + 2) = v29[2];
    *((void *)v28 + 3) = v36;
    uint64_t v37 = v29[5];
    *((void *)v28 + 4) = v29[4];
    *((void *)v28 + 5) = v37;
    uint64_t v38 = v30[7];
    uint64_t v39 = &v28[v38];
    uint64_t v40 = (char *)v29 + v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v89(v40, 1, v91))
    {
      uint64_t v41 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v39, v40, v91);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v39, 0, 1, v91);
    }
    uint64_t v42 = v30[8];
    uint64_t v43 = &v28[v42];
    uint64_t v44 = (void *)((char *)v29 + v42);
    uint64_t v45 = v44[1];
    *(void *)uint64_t v43 = *v44;
    *((void *)v43 + 1) = v45;
    uint64_t v46 = v30[9];
    uint64_t v47 = *(void **)((char *)v29 + v46);
    swift_bridgeObjectRetain();
    if (v47 != (void *)1) {
      id v48 = v47;
    }
    *(void *)&v28[v46] = v47;
    uint64_t v49 = v30[10];
    uint64_t v50 = &v28[v49];
    uint64_t v51 = (char *)v29 + v49;
    id v52 = *(void **)v51;
    uint64_t v53 = (void *)*((void *)v51 + 1);
    char v54 = v51[16];
    sub_10001D614(*(void **)v51, v53);
    *(void *)uint64_t v50 = v52;
    *((void *)v50 + 1) = v53;
    v50[16] = v54;
    (*(void (**)(char *, void, uint64_t, int *))(v85 + 56))(v28, 0, 1, v30);
  }
  *(void *)&v23[v26[6]] = *(void *)(v24 + v26[6]);
  *(void *)&v23[v26[7]] = *(void *)(v24 + v26[7]);
  v23[v26[8]] = *(unsigned char *)(v24 + v26[8]);
  uint64_t v55 = v26[9];
  char v56 = &v23[v55];
  char v57 = (void *)(v24 + v55);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v89((char *)v57, 1, v91))
  {
    uint64_t v58 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v88 + 16))(v56, v57, v91);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v56, 0, 1, v91);
  }
  *(void *)&v23[v26[10]] = *(void *)(v24 + v26[10]);
  uint64_t v59 = v26[11];
  uint64_t v60 = &v23[v59];
  char v61 = (void *)(v24 + v59);
  uint64_t v92 = v61[1];
  *(void *)uint64_t v60 = *v61;
  *((void *)v60 + 1) = v92;
  uint64_t v62 = v26[12];
  uint64_t v63 = &v23[v62];
  uint64_t v64 = (void *)(v24 + v62);
  uint64_t v90 = v64[1];
  *(void *)uint64_t v63 = *v64;
  *((void *)v63 + 1) = v90;
  uint64_t v65 = a3[6];
  uint64_t v66 = a3[7];
  uint64_t v67 = &__dsta[v65];
  uint64_t v68 = (char *)(v93 + v65);
  *uint64_t v67 = *v68;
  *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
  uint64_t v69 = (void *)*((void *)v68 + 4);
  *((void *)v67 + 3) = *((void *)v68 + 3);
  *((void *)v67 + 4) = v69;
  uint64_t v70 = (void *)*((void *)v68 + 5);
  *((void *)v67 + 5) = v70;
  *(_OWORD *)(v67 + 57) = *(_OWORD *)(v68 + 57);
  *((_OWORD *)v67 + 3) = *((_OWORD *)v68 + 3);
  *((_OWORD *)v67 + 5) = *((_OWORD *)v68 + 5);
  uint64_t v71 = (void *)*((void *)v68 + 13);
  *((void *)v67 + 12) = *((void *)v68 + 12);
  *((void *)v67 + 13) = v71;
  uint64_t v72 = (void *)*((void *)v68 + 14);
  *((void *)v67 + 14) = v72;
  *(_OWORD *)(v67 + 120) = *(_OWORD *)(v68 + 120);
  *(_OWORD *)(v67 + 136) = *(_OWORD *)(v68 + 136);
  uint64_t v73 = &__dsta[v66];
  uint64_t v74 = *(void *)(v93 + v66);
  char v75 = *(unsigned char *)(v93 + v66 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v76 = v69;
  id v77 = v70;
  id v78 = v71;
  id v79 = v72;
  sub_10003D4B0(v74, v75);
  *(void *)uint64_t v73 = v74;
  v73[8] = v75;
  uint64_t v80 = a3[8];
  id v81 = &__dsta[v80];
  id v82 = (void *)(v93 + v80);
  sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v83 = sub_1000E9290();
    (*(void (**)(char *, void *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
  }
  else
  {
    *(void *)id v81 = *v82;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return __dsta;
}

uint64_t sub_100094AFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v7 = v6;

  uint64_t v8 = *(void **)(a2 + 8);
  uint64_t v9 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v8;
  id v10 = v8;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v11 = type metadata accessor for Section();
  uint64_t v12 = *(int *)(v11 + 32);
  id v13 = (void *)(a1 + v12);
  id v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1000E8B60();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void))(v16 + 48);
  unsigned int v18 = ((uint64_t (*)(void *, uint64_t, uint64_t))v17)(v13, 1, v15);
  uint64_t v133 = v17;
  unsigned int v19 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v17)(v14, 1, v15);
  uint64_t v132 = v15;
  uint64_t v129 = v16;
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = *(int *)(v11 + 36);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = sub_1000E8C50();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
LABEL_12:
    uint64_t v29 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_13:
  uint64_t v30 = a3[5];
  uint64_t v130 = a2;
  uint64_t v131 = a1;
  uint64_t v31 = (void **)(a1 + v30);
  uint64_t v32 = a2 + v30;
  id v33 = *(void **)(a2 + v30);
  uint64_t v34 = *v31;
  *uint64_t v31 = v33;
  id v35 = v33;

  uint64_t v36 = (int *)type metadata accessor for TodayContent();
  uint64_t v37 = v36[5];
  uint64_t v38 = (void **)((char *)v31 + v37);
  uint64_t v135 = v32;
  uint64_t v39 = (void *)(v32 + v37);
  uint64_t v40 = (int *)type metadata accessor for Banner();
  uint64_t v41 = *((void *)v40 - 1);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, int *))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      *uint64_t v38 = *v39;
      v38[1] = v39[1];
      v38[2] = v39[2];
      _OWORD v38[3] = v39[3];
      unsigned char v38[4] = v39[4];
      v38[5] = v39[5];
      uint64_t v45 = v40[7];
      uint64_t v46 = (char *)v38 + v45;
      uint64_t v47 = (char *)v39 + v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v133)(v47, 1, v132))
      {
        uint64_t v48 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v46, v47, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v46, 0, 1, v132);
      }
      uint64_t v56 = v40[8];
      char v57 = (void *)((char *)v38 + v56);
      uint64_t v58 = (void *)((char *)v39 + v56);
      *char v57 = *v58;
      v57[1] = v58[1];
      uint64_t v59 = v40[9];
      uint64_t v60 = *(void **)((char *)v39 + v59);
      swift_bridgeObjectRetain();
      if (v60 != (void *)1) {
        id v61 = v60;
      }
      *(void *)((char *)v38 + v59) = v60;
      uint64_t v62 = v40[10];
      uint64_t v63 = (char *)v38 + v62;
      uint64_t v64 = (char *)v39 + v62;
      uint64_t v65 = *(void **)v64;
      uint64_t v66 = (void *)*((void *)v64 + 1);
      char v67 = v64[16];
      sub_10001D614(*(void **)v64, v66);
      *(void *)uint64_t v63 = v65;
      *((void *)v63 + 1) = v66;
      v63[16] = v67;
      (*(void (**)(void *, void, uint64_t, int *))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_29;
    }
LABEL_19:
    uint64_t v49 = sub_10001B38C(&qword_1001385E0);
    memcpy(v38, v39, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_29:
    uint64_t v69 = v130;
    uint64_t v68 = v131;
    uint64_t v70 = v132;
    goto LABEL_30;
  }
  if (v44)
  {
    sub_10009976C((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for Banner);
    goto LABEL_19;
  }
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38[2] = v39[2];
  _OWORD v38[3] = v39[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned char v38[4] = v39[4];
  v38[5] = v39[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = v40[7];
  uint64_t v51 = (char *)v39 + v50;
  unint64_t v128 = (char *)v38 + v50;
  int v52 = v133();
  unsigned int v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)(v51, 1, v132);
  if (v52)
  {
    if (v53)
    {
      size_t v54 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v55 = v128;
LABEL_45:
      memcpy(v55, v51, v54);
      goto LABEL_48;
    }
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v128, v51, v132);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v128, 0, 1, v132);
  }
  else
  {
    if (v53)
    {
      (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v132);
      size_t v54 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
      uint64_t v55 = v128;
      goto LABEL_45;
    }
    (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v128, v51, v132);
  }
LABEL_48:
  uint64_t v111 = v40[8];
  uint64_t v112 = (void *)((char *)v38 + v111);
  uint64_t v113 = (void *)((char *)v39 + v111);
  *uint64_t v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v114 = v40[9];
  uint64_t v115 = (void *)((char *)v38 + v114);
  uint64_t v116 = *(void **)((char *)v38 + v114);
  unint64_t v117 = *(void **)((char *)v39 + v114);
  if (v116 != (void *)1)
  {
    if (v117 != (void *)1)
    {
      *uint64_t v115 = v117;
      id v119 = v117;

      goto LABEL_55;
    }
    sub_10001DBE4((id *)((char *)v38 + v114));
    unint64_t v117 = *(void **)((char *)v39 + v114);
    goto LABEL_53;
  }
  if (v117 == (void *)1)
  {
LABEL_53:
    *uint64_t v115 = v117;
    goto LABEL_55;
  }
  *uint64_t v115 = v117;
  id v118 = v117;
LABEL_55:
  uint64_t v70 = v132;
  uint64_t v120 = v40[10];
  uint64_t v121 = (char *)v38 + v120;
  uint64_t v122 = (char *)v39 + v120;
  char v123 = *(void **)v122;
  uint64_t v124 = (void *)*((void *)v122 + 1);
  char v125 = v122[16];
  sub_10001D614(*(void **)v122, v124);
  uint64_t v126 = *(void **)v121;
  uint64_t v127 = (void *)*((void *)v121 + 1);
  *(void *)uint64_t v121 = v123;
  *((void *)v121 + 1) = v124;
  v121[16] = v125;
  sub_10001D758(v126, v127);
  uint64_t v69 = v130;
  uint64_t v68 = v131;
LABEL_30:
  *(void **)((char *)v31 + v36[6]) = *(void **)(v135 + v36[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v31 + v36[7]) = *(void **)(v135 + v36[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v31 + v36[8]) = *(unsigned char *)(v135 + v36[8]);
  uint64_t v71 = v36[9];
  uint64_t v72 = (char *)v31 + v71;
  uint64_t v73 = (const void *)(v135 + v71);
  unsigned int v74 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)((char *)v31 + v71, 1, v70);
  unsigned int v75 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v133)(v73, 1, v70);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, const void *, uint64_t))(v129 + 16))(v72, v73, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v72, 0, 1, v70);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v129 + 8))(v72, v70);
LABEL_35:
    uint64_t v76 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(char *, const void *, uint64_t))(v129 + 24))(v72, v73, v70);
LABEL_36:
  *(void **)((char *)v31 + v36[10]) = *(void **)(v135 + v36[10]);
  swift_retain();
  swift_release();
  uint64_t v77 = v36[11];
  id v78 = (void **)((char *)v31 + v77);
  id v79 = (void *)(v135 + v77);
  *id v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = v36[12];
  id v81 = (void **)((char *)v31 + v80);
  id v82 = (void *)(v135 + v80);
  *id v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = a3[6];
  uint64_t v84 = v68 + v83;
  uint64_t v85 = v69 + v83;
  *(unsigned char *)uint64_t v84 = *(unsigned char *)(v69 + v83);
  *(void *)(v84 + 8) = *(void *)(v69 + v83 + 8);
  *(void *)(v84 + 16) = *(void *)(v69 + v83 + 16);
  *(void *)(v84 + 24) = *(void *)(v69 + v83 + 24);
  uint64_t v86 = *(void **)(v69 + v83 + 32);
  uint64_t v87 = *(void **)(v84 + 32);
  *(void *)(v84 + 32) = v86;
  id v88 = v86;

  char v89 = *(void **)(v85 + 40);
  uint64_t v90 = *(void **)(v84 + 40);
  *(void *)(v84 + 40) = v89;
  id v91 = v89;

  *(void *)(v84 + 48) = *(void *)(v85 + 48);
  long long v92 = *(_OWORD *)(v85 + 56);
  *(unsigned char *)(v84 + 72) = *(unsigned char *)(v85 + 72);
  *(_OWORD *)(v84 + 56) = v92;
  *(void *)(v84 + 80) = *(void *)(v85 + 80);
  *(void *)(v84 + 88) = *(void *)(v85 + 88);
  *(void *)(v84 + 96) = *(void *)(v85 + 96);
  uint64_t v93 = *(void **)(v85 + 104);
  uint64_t v94 = *(void **)(v84 + 104);
  *(void *)(v84 + 104) = v93;
  id v95 = v93;

  uint64_t v96 = *(void **)(v85 + 112);
  uint64_t v97 = *(void **)(v84 + 112);
  *(void *)(v84 + 112) = v96;
  id v98 = v96;

  *(void *)(v84 + 120) = *(void *)(v85 + 120);
  *(void *)(v84 + 128) = *(void *)(v85 + 128);
  *(void *)(v84 + 136) = *(void *)(v85 + 136);
  *(void *)(v84 + 144) = *(void *)(v85 + 144);
  uint64_t v99 = a3[7];
  uint64_t v100 = v68 + v99;
  uint64_t v101 = v69 + v99;
  uint64_t v102 = *(void *)v101;
  char v103 = *(unsigned char *)(v101 + 8);
  sub_10003D4B0(*(void *)v101, v103);
  uint64_t v104 = *(void *)v100;
  char v105 = *(unsigned char *)(v100 + 8);
  *(void *)uint64_t v100 = v102;
  *(unsigned char *)(v100 + 8) = v103;
  sub_10003D590(v104, v105);
  if (v68 != v69)
  {
    uint64_t v106 = a3[8];
    uint64_t v107 = (void *)(v68 + v106);
    uint64_t v108 = (void *)(v69 + v106);
    sub_100028B6C(v68 + v106, &qword_1001391B0);
    sub_10001B38C(&qword_1001391B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v109 = sub_1000E9290();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
    }
    else
    {
      *uint64_t v107 = *v108;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v68;
}

uint64_t sub_100095690(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = type metadata accessor for Section();
  uint64_t v7 = *(int *)(v6 + 32);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1000E8B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v59 = *(unsigned int (**)(void))(v11 + 48);
  uint64_t v58 = v11;
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v59)(v9, 1, v10))
  {
    uint64_t v12 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(v6 + 36);
  id v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1000E8C50();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v60 = v10;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[5];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v22 = (int *)type metadata accessor for TodayContent();
  uint64_t v23 = v22[5];
  uint64_t v24 = (_OWORD *)(v20 + v23);
  uint64_t v25 = (_OWORD *)(v21 + v23);
  uint64_t v26 = (int *)type metadata accessor for Banner();
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10001B38C(&qword_1001385E0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    long long v29 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v29;
    void v24[2] = v25[2];
    uint64_t v30 = v26[7];
    __dst = (char *)v24 + v30;
    __src = (char *)v25 + v30;
    if (v59())
    {
      uint64_t v31 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, __src, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(__dst, __src, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v60);
    }
    *(_OWORD *)((char *)v24 + v26[8]) = *(_OWORD *)((char *)v25 + v26[8]);
    *(void *)((char *)v24 + v26[9]) = *(void *)((char *)v25 + v26[9]);
    uint64_t v32 = v26[10];
    id v33 = (char *)v24 + v32;
    uint64_t v34 = (char *)v25 + v32;
    v33[16] = v34[16];
    *(_OWORD *)id v33 = *(_OWORD *)v34;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  *(void *)(v20 + v22[6]) = *(void *)(v21 + v22[6]);
  *(void *)(v20 + v22[7]) = *(void *)(v21 + v22[7]);
  *(unsigned char *)(v20 + v22[8]) = *(unsigned char *)(v21 + v22[8]);
  uint64_t v35 = v22[9];
  uint64_t v36 = (void *)(v20 + v35);
  uint64_t v37 = (const void *)(v21 + v35);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v59)(v21 + v35, 1, v60))
  {
    uint64_t v38 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v58 + 32))(v36, v37, v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v36, 0, 1, v60);
  }
  *(void *)(v20 + v22[10]) = *(void *)(v21 + v22[10]);
  *(_OWORD *)(v20 + v22[11]) = *(_OWORD *)(v21 + v22[11]);
  *(_OWORD *)(v20 + v22[12]) = *(_OWORD *)(v21 + v22[12]);
  uint64_t v39 = a3[6];
  uint64_t v40 = a3[7];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  long long v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  long long v44 = *(_OWORD *)(v42 + 80);
  *(_OWORD *)(v41 + 64) = *(_OWORD *)(v42 + 64);
  *(_OWORD *)(v41 + 80) = v44;
  long long v45 = *(_OWORD *)(v42 + 48);
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
  *(_OWORD *)(v41 + 48) = v45;
  *(void *)(v41 + 144) = *(void *)(v42 + 144);
  long long v46 = *(_OWORD *)(v42 + 128);
  long long v47 = *(_OWORD *)(v42 + 96);
  *(_OWORD *)(v41 + 112) = *(_OWORD *)(v42 + 112);
  *(_OWORD *)(v41 + 128) = v46;
  *(_OWORD *)(v41 + 96) = v47;
  uint64_t v48 = a1 + v40;
  uint64_t v49 = a2 + v40;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  *(void *)uint64_t v48 = *(void *)v49;
  uint64_t v50 = a3[8];
  uint64_t v51 = (void *)(a1 + v50);
  int v52 = (const void *)(a2 + v50);
  uint64_t v53 = sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = sub_1000E9290();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v54 - 8) + 32))(v51, v52, v54);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100095C7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Section();
  uint64_t v8 = *(int *)(v7 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1000E8B60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  uint64_t v114 = (uint64_t (*)(char *, uint64_t, uint64_t))v13;
  int v15 = v13(v10, 1, v11);
  uint64_t v113 = v11;
  uint64_t v110 = v12;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = *(int *)(v7 + 36);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_1000E8C50();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    uint64_t v25 = sub_10001B38C((uint64_t *)&unk_10013A350);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  uint64_t v26 = a3[5];
  uint64_t v111 = a2;
  uint64_t v112 = a1;
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  long long v29 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  uint64_t v30 = (int *)type metadata accessor for TodayContent();
  uint64_t v31 = v30[5];
  uint64_t v32 = (char *)(v27 + v31);
  id v33 = (char *)(v28 + v31);
  uint64_t v34 = (int *)type metadata accessor for Banner();
  uint64_t v35 = *((void *)v34 - 1);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, int *))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  __src = v33;
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (v38)
    {
      sub_10009976C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_19;
    }
    uint64_t v47 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v47;
    swift_bridgeObjectRelease();
    uint64_t v48 = *((void *)v33 + 3);
    *((void *)v32 + 2) = *((void *)v33 + 2);
    *((void *)v32 + 3) = v48;
    swift_bridgeObjectRelease();
    uint64_t v49 = *((void *)v33 + 5);
    *((void *)v32 + 4) = *((void *)v33 + 4);
    *((void *)v32 + 5) = v49;
    swift_bridgeObjectRelease();
    uint64_t v50 = v34[7];
    uint64_t v51 = &v33[v50];
    uint64_t v109 = &v32[v50];
    int v52 = ((uint64_t (*)(void))v13)();
    int v53 = v114(v51, 1, v113);
    if (v52)
    {
      if (v53)
      {
        size_t v54 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v55 = v109;
LABEL_29:
        memcpy(v55, v51, v54);
        goto LABEL_32;
      }
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v51, v113);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v109, 0, 1, v113);
    }
    else
    {
      if (v53)
      {
        (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v113);
        size_t v54 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v55 = v109;
        goto LABEL_29;
      }
      (*(void (**)(char *, char *, uint64_t))(v110 + 40))(v109, v51, v113);
    }
LABEL_32:
    uint64_t v59 = v34[8];
    uint64_t v60 = &v32[v59];
    id v61 = &__src[v59];
    uint64_t v63 = *(void *)v61;
    uint64_t v62 = *((void *)v61 + 1);
    *uint64_t v60 = v63;
    v60[1] = v62;
    swift_bridgeObjectRelease();
    uint64_t v64 = v34[9];
    uint64_t v65 = &v32[v64];
    uint64_t v66 = *(void **)&v32[v64];
    uint64_t v67 = *(void *)&__src[v64];
    if (v66 == (void *)1)
    {
      uint64_t v43 = v112;
    }
    else
    {
      uint64_t v43 = v112;
      if (v67 != 1)
      {
        *uint64_t v65 = v67;

        goto LABEL_38;
      }
      sub_10001DBE4((id *)&v32[v64]);
      uint64_t v67 = *(void *)&__src[v64];
    }
    *uint64_t v65 = v67;
LABEL_38:
    uint64_t v68 = v34[10];
    uint64_t v69 = &v32[v68];
    uint64_t v70 = &__src[v68];
    char v71 = v70[16];
    uint64_t v72 = *(void **)v69;
    uint64_t v73 = (void *)*((void *)v69 + 1);
    *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
    v69[16] = v71;
    sub_10001D758(v72, v73);
    uint64_t v46 = v113;
    goto LABEL_39;
  }
  if (v38)
  {
LABEL_19:
    uint64_t v45 = sub_10001B38C(&qword_1001385E0);
    memcpy(v32, v33, *(void *)(*(void *)(v45 - 8) + 64));
    uint64_t v43 = v112;
    uint64_t v46 = v113;
    goto LABEL_39;
  }
  long long v39 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v39;
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  uint64_t v40 = v34[7];
  uint64_t v41 = &v32[v40];
  uint64_t v42 = &v33[v40];
  uint64_t v43 = v112;
  if (v114(&__src[v40], 1, v113))
  {
    uint64_t v44 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v41, v42, v113);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v41, 0, 1, v113);
  }
  uint64_t v46 = v113;
  *(_OWORD *)&v32[v34[8]] = *(_OWORD *)&__src[v34[8]];
  *(void *)&v32[v34[9]] = *(void *)&__src[v34[9]];
  uint64_t v56 = v34[10];
  char v57 = &v32[v56];
  uint64_t v58 = &__src[v56];
  v57[16] = v58[16];
  *(_OWORD *)char v57 = *(_OWORD *)v58;
  (*(void (**)(char *, void, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
LABEL_39:
  *(void *)(v27 + v30[6]) = *(void *)(v28 + v30[6]);
  swift_bridgeObjectRelease();
  *(void *)(v27 + v30[7]) = *(void *)(v28 + v30[7]);
  swift_unknownObjectRelease();
  *(unsigned char *)(v27 + v30[8]) = *(unsigned char *)(v28 + v30[8]);
  uint64_t v74 = v30[9];
  unsigned int v75 = (void *)(v27 + v74);
  uint64_t v76 = (char *)(v28 + v74);
  int v77 = v114((char *)(v27 + v74), 1, v46);
  int v78 = v114(v76, 1, v46);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, char *, uint64_t))(v110 + 32))(v75, v76, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v75, 0, 1, v46);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v78)
  {
    (*(void (**)(void *, uint64_t))(v110 + 8))(v75, v46);
LABEL_44:
    uint64_t v79 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, char *, uint64_t))(v110 + 40))(v75, v76, v46);
LABEL_45:
  *(void *)(v27 + v30[10]) = *(void *)(v28 + v30[10]);
  swift_release();
  uint64_t v80 = v30[11];
  id v81 = (void *)(v27 + v80);
  id v82 = (uint64_t *)(v28 + v80);
  uint64_t v84 = *v82;
  uint64_t v83 = v82[1];
  *id v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = v30[12];
  uint64_t v86 = (void *)(v27 + v85);
  uint64_t v87 = (uint64_t *)(v28 + v85);
  uint64_t v89 = *v87;
  uint64_t v88 = v87[1];
  *uint64_t v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = a3[6];
  uint64_t v91 = v43 + v90;
  uint64_t v92 = v111 + v90;
  *(unsigned char *)uint64_t v91 = *(unsigned char *)(v111 + v90);
  *(_OWORD *)(v91 + 8) = *(_OWORD *)(v111 + v90 + 8);
  *(void *)(v91 + 24) = *(void *)(v111 + v90 + 24);
  uint64_t v93 = *(void **)(v43 + v90 + 32);
  *(void *)(v91 + 32) = *(void *)(v111 + v90 + 32);

  uint64_t v94 = *(void **)(v91 + 40);
  *(void *)(v91 + 40) = *(void *)(v92 + 40);

  *(void *)(v91 + 48) = *(void *)(v92 + 48);
  *(_OWORD *)(v91 + 56) = *(_OWORD *)(v92 + 56);
  *(unsigned char *)(v91 + 72) = *(unsigned char *)(v92 + 72);
  *(_OWORD *)(v91 + 80) = *(_OWORD *)(v92 + 80);
  *(void *)(v91 + 96) = *(void *)(v92 + 96);
  id v95 = *(void **)(v91 + 104);
  *(void *)(v91 + 104) = *(void *)(v92 + 104);

  uint64_t v96 = *(void **)(v91 + 112);
  *(void *)(v91 + 112) = *(void *)(v92 + 112);

  *(_OWORD *)(v91 + 120) = *(_OWORD *)(v92 + 120);
  *(_OWORD *)(v91 + 136) = *(_OWORD *)(v92 + 136);
  uint64_t v97 = a3[7];
  uint64_t v98 = v43 + v97;
  uint64_t v99 = (uint64_t *)(v111 + v97);
  uint64_t v100 = *v99;
  LOBYTE(v99) = *((unsigned char *)v99 + 8);
  uint64_t v101 = *(void *)v98;
  char v102 = *(unsigned char *)(v98 + 8);
  *(void *)uint64_t v98 = v100;
  *(unsigned char *)(v98 + 8) = (_BYTE)v99;
  sub_10003D590(v101, v102);
  if (v43 != v111)
  {
    uint64_t v103 = a3[8];
    uint64_t v104 = (void *)(v43 + v103);
    char v105 = (const void *)(v111 + v103);
    sub_100028B6C(v43 + v103, &qword_1001391B0);
    uint64_t v106 = sub_10001B38C(&qword_1001391B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v107 = sub_1000E9290();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v107 - 8) + 32))(v104, v105, v107);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
    }
  }
  return v43;
}

uint64_t sub_1000966E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000966FC);
}

uint64_t sub_1000966FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Section();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TodayContent();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 32);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_10001B38C(&qword_1001391B8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100096884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100096898);
}

uint64_t sub_100096898(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for Section();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for TodayContent();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_10001B38C(&qword_1001391B8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for SectionView()
{
  uint64_t result = qword_100139AA8;
  if (!qword_100139AA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100096A6C()
{
  type metadata accessor for Section();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TodayContent();
    if (v1 <= 0x3F)
    {
      sub_10007AC38();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100096B84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100096BA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10001B38C(&qword_100139AF8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = type metadata accessor for SectionView();
  if (*(unsigned char *)(a1 + *(int *)(v10 + 24)) == 1)
  {
    uint64_t v11 = v10;
    id v12 = [self separatorColor];
    uint64_t v13 = sub_1000E9C40();
    uint64_t v14 = a1 + *(int *)(v11 + 28);
    uint64_t v15 = *(void *)v14;
    char v16 = *(unsigned char *)(v14 + 8);
    sub_10003D4B0(*(void *)v14, v16);
    sub_10007D88C(v15, v16);
    sub_10003D590(v15, v16);
    sub_1000E9DC0();
    sub_1000E9300();
    v21[1] = v13;
    v21[2] = v26;
    char v22 = v27;
    uint64_t v23 = v28;
    char v24 = v29;
    long long v25 = v30;
    sub_10001B38C(&qword_100139B10);
    sub_1000993C0(&qword_100139B18, &qword_100139B10);
  }
  uint64_t v17 = sub_1000E9D10();
  *(void *)uint64_t v9 = sub_1000E9720();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 0;
  uint64_t v18 = sub_10001B38C(&qword_100139B00);
  sub_100096E00(a1, (uint64_t)&v9[*(int *)(v18 + 44)]);
  sub_10002DA34((uint64_t)v9, (uint64_t)v7, &qword_100139AF8);
  *a2 = v17;
  uint64_t v19 = sub_10001B38C(&qword_100139B08);
  sub_10002DA34((uint64_t)v7, (uint64_t)a2 + *(int *)(v19 + 48), &qword_100139AF8);
  swift_retain();
  sub_100028B6C((uint64_t)v9, &qword_100139AF8);
  sub_100028B6C((uint64_t)v7, &qword_100139AF8);
  return swift_release();
}

uint64_t sub_100096E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for SectionView();
  uint64_t v4 = v3 - 8;
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  __chkstk_darwin(v3);
  uint64_t v55 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10001B38C(&qword_100139B20);
  uint64_t v60 = *(void *)(v58 - 8);
  uint64_t v6 = __chkstk_darwin(v58);
  uint64_t v59 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_1000E96E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SectionHeaderView();
  __chkstk_darwin(v14);
  char v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001B38C(&qword_100139B28);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v22 = (char *)&v42 - v21;
  sub_1000995CC(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Section);
  uint64_t v23 = a1 + *(int *)(v4 + 32);
  char v24 = *(void **)(v23 + 32);
  long long v25 = &v16[*(int *)(v14 + 20)];
  *(_OWORD *)long long v25 = *(_OWORD *)(v23 + 16);
  *((void *)v25 + 2) = v24;
  id v26 = v24;
  sub_1000E96D0();
  sub_100099724(&qword_100139B30, (void (*)(uint64_t))type metadata accessor for SectionHeaderView);
  sub_1000E9B40();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10009976C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SectionHeaderView);
  sub_10002D5DC((uint64_t)v20, (uint64_t)v22, &qword_100139B28);
  uint64_t v69 = *(void *)(a1 + 16);
  swift_getKeyPath();
  uint64_t v27 = a1;
  uint64_t v28 = v55;
  sub_1000995CC(v27, v55, (uint64_t (*)(void))type metadata accessor for SectionView);
  unint64_t v29 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v30 = swift_allocObject();
  sub_1000996BC(v28, v30 + v29, (uint64_t (*)(void))type metadata accessor for SectionView);
  swift_bridgeObjectRetain();
  sub_10001B38C(&qword_1001371E0);
  sub_10001D100(&qword_100139B38, &qword_1001371E0);
  sub_1000E9D30();
  sub_1000E9DC0();
  sub_1000E9400();
  uint64_t v57 = v69;
  uint64_t v56 = v71;
  uint64_t v55 = v73;
  uint64_t v54 = v75;
  uint64_t v53 = v77;
  uint64_t v52 = v79;
  uint64_t v51 = v81;
  uint64_t v50 = v82;
  char v68 = 1;
  char v67 = v70;
  char v66 = v72;
  unsigned __int8 v65 = v74;
  unsigned __int8 v64 = v76;
  unsigned __int8 v63 = v78;
  unsigned __int8 v62 = v80;
  sub_10002DA34((uint64_t)v22, (uint64_t)v20, &qword_100139B28);
  uint64_t v31 = v60;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v49 = v22;
  id v33 = v59;
  uint64_t v34 = (uint64_t)v20;
  uint64_t v48 = v20;
  uint64_t v35 = v58;
  v32(v59, v9, v58);
  LOBYTE(v23) = v68;
  LOBYTE(v14) = v67;
  uint64_t v47 = v9;
  LOBYTE(v11) = v66;
  int v43 = v65;
  int v44 = v64;
  int v45 = v63;
  int v46 = v62;
  uint64_t v36 = v61;
  sub_10002DA34(v34, v61, &qword_100139B28);
  uint64_t v37 = sub_10001B38C(&qword_100139B40);
  v32((char *)(v36 + *(int *)(v37 + 48)), v33, v35);
  uint64_t v38 = v36 + *(int *)(v37 + 64);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = v23;
  *(void *)(v38 + 16) = v57;
  *(unsigned char *)(v38 + 24) = v14;
  *(void *)(v38 + 32) = v56;
  *(unsigned char *)(v38 + 40) = v11;
  *(void *)(v38 + 48) = v55;
  *(unsigned char *)(v38 + 56) = v43;
  *(void *)(v38 + 64) = v54;
  *(unsigned char *)(v38 + 72) = v44;
  *(void *)(v38 + 80) = v53;
  *(unsigned char *)(v38 + 88) = v45;
  *(void *)(v38 + 96) = v52;
  *(unsigned char *)(v38 + 104) = v46;
  uint64_t v39 = v50;
  *(void *)(v38 + 112) = v51;
  *(void *)(v38 + 120) = v39;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  v40(v47, v35);
  sub_100028B6C((uint64_t)v49, &qword_100139B28);
  v40(v33, v35);
  return sub_100028B6C((uint64_t)v48, &qword_100139B28);
}

uint64_t sub_1000975E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v4 = sub_10001B38C(&qword_100139B48);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10001B38C(&qword_100139B50);
  __chkstk_darwin(v39);
  uint64_t v37 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Item(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000E8B60();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v48 = (char *)v34 - v21;
  uint64_t v36 = v2;
  sub_100097C40(a1, &v50);
  uint64_t v22 = v50;
  uint64_t v42 = v51;
  int v43 = v52;
  uint64_t v44 = v53;
  int v45 = v54;
  uint64_t v46 = v55;
  uint64_t v47 = v56;
  uint64_t v35 = a1;
  sub_1000995CC(a1, (uint64_t)v12, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10009976C((uint64_t)v12, type metadata accessor for Item);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  else
  {
    sub_1000996BC((uint64_t)v12, (uint64_t)v9, type metadata accessor for Item.Headline);
    sub_10002DA34((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v15, (uint64_t *)&unk_1001370F0);
    sub_10009976C((uint64_t)v9, type metadata accessor for Item.Headline);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100028B6C((uint64_t)v15, (uint64_t *)&unk_1001370F0);
    uint64_t v50 = v22;
    uint64_t v51 = v42;
    unsigned __int8 v52 = v43;
    uint64_t v53 = v44;
    unsigned __int8 v54 = v45;
    uint64_t v55 = v46;
    uint64_t v56 = v47;
    sub_10001B38C(&qword_100138BE0);
    sub_1000993C0((unint64_t *)&qword_100138BD8, &qword_100138BE0);
    uint64_t result = sub_1000E9D10();
    uint64_t v24 = result;
  }
  else
  {
    long long v25 = v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v48, v15, v16);
    uint64_t v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 16))(v20, v25, v16);
    v34[1] = v22;
    uint64_t v50 = v22;
    uint64_t v51 = v42;
    unsigned __int8 v52 = v43;
    uint64_t v53 = v44;
    unsigned __int8 v54 = v45;
    uint64_t v55 = v46;
    uint64_t v56 = v47;
    __chkstk_darwin(v26);
    v34[-2] = &v50;
    swift_retain();
    sub_10001B38C(&qword_100138BE0);
    sub_1000993C0((unint64_t *)&qword_100138BD8, &qword_100138BE0);
    uint64_t v27 = v38;
    sub_1000E9950();
    swift_release();
    uint64_t v28 = sub_100098BD8(v35);
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    sub_10001D100(&qword_100139B58, &qword_100139B48);
    uint64_t v33 = v41;
    sub_1000E9AE0();
    sub_100026FDC(v28, v30, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v33);
    sub_10009945C();
    uint64_t v24 = sub_1000E9D10();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v48, v16);
  }
  uint64_t *v49 = v24;
  return result;
}

uint64_t sub_100097C40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v149 = a2;
  uint64_t v3 = sub_10001B38C(&qword_100138978);
  __chkstk_darwin(v3 - 8);
  uint64_t v144 = (uint64_t *)((char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10001B38C(&qword_100137A18);
  __chkstk_darwin(v5 - 8);
  uint64_t v146 = (uint64_t *)((char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Section();
  uint64_t v145 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v143 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for SectionView();
  uint64_t v9 = __chkstk_darwin(v152);
  uint64_t v148 = (uint64_t)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v147 = (uint64_t)&v128 - v11;
  uint64_t v150 = type metadata accessor for TodayContent();
  __chkstk_darwin(v150);
  uint64_t v151 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for HeadlineCell(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Item.Headline(0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (void **)((char *)&v128 - v20);
  uint64_t v22 = type metadata accessor for Item(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v128 - v28;
  __chkstk_darwin(v27);
  char v31 = (uint64_t *)((char *)&v128 - v30);
  sub_1000995CC(a1, (uint64_t)&v128 - v30, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = sub_1000E9710();
    uint64_t v155 = v33;
    uint64_t v156 = v32;
    sub_1000295C0();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000E9A50();
    uint64_t v37 = v36;
    char v39 = v38;
    uint64_t v41 = v40;
    id v42 = [self secondaryLabelColor];
    uint64_t v43 = sub_1000E9C40();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = sub_1000E9880();
    sub_1000E9270();
    uint64_t v155 = v34;
    uint64_t v156 = 0;
    LOBYTE(v157) = 1;
    uint64_t v158 = (ValueMetadata *)v35;
    *(void *)&long long v159 = v37;
    BYTE8(v159) = v39 & 1;
    uint64_t v160 = v41;
    uint64_t v161 = v43;
    char v162 = v32;
    uint64_t v163 = v44;
    uint64_t v164 = v45;
    uint64_t v165 = v46;
    uint64_t v166 = v47;
    char v167 = 0;
    sub_10001B38C(&qword_100139B68);
    sub_10009952C();
    uint64_t v48 = sub_1000E9D10();
    sub_1000E9DC0();
    uint64_t result = sub_1000E9300();
    uint64_t v50 = v155;
    char v51 = v156;
    uint64_t v52 = v157;
    char v53 = (char)v158;
    unsigned __int8 v54 = v149;
    *unint64_t v149 = v48;
    v54[1] = v50;
    *((unsigned char *)v54 + 16) = v51;
    _OWORD v54[3] = v52;
    *((unsigned char *)v54 + 32) = v53;
    *(_OWORD *)(v54 + 5) = v159;
    return result;
  }
  uint64_t v128 = v23;
  uint64_t v129 = v26;
  uint64_t v142 = v29;
  uint64_t v131 = a1;
  uint64_t v137 = (uint64_t *)v15;
  uint64_t v140 = (int *)v13;
  sub_1000996BC((uint64_t)v31, (uint64_t)v21, type metadata accessor for Item.Headline);
  uint64_t v132 = v19;
  sub_1000995CC((uint64_t)v21, (uint64_t)v19, type metadata accessor for Item.Headline);
  uint64_t v55 = v152;
  uint64_t v56 = v153;
  uint64_t v57 = v153 + *(int *)(v152 + 20);
  sub_1000995CC(v57, v151, (uint64_t (*)(void))type metadata accessor for TodayContent);
  uint64_t v58 = v56 + *(int *)(v55 + 24);
  uint64_t v59 = *(void **)(v58 + 40);
  uint64_t v60 = *(void *)(v58 + 48);
  uint64_t v61 = *(void *)(v58 + 56);
  uint64_t v139 = *(void *)(v58 + 64);
  int v138 = *(unsigned __int8 *)(v58 + 72);
  uint64_t v62 = *(void *)(v58 + 80);
  uint64_t v63 = *(void *)(v58 + 88);
  uint64_t v64 = *(void *)(v58 + 96);
  char v66 = *(void **)(v58 + 104);
  unsigned __int8 v65 = *(void **)(v58 + 112);
  uint64_t v67 = *(void *)(v58 + 120);
  uint64_t v68 = *(void *)(v58 + 128);
  uint64_t v69 = *(void *)(v58 + 136);
  char v70 = (uint64_t *)(v57 + *(int *)(v150 + 48));
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  uint64_t v141 = v21;
  uint64_t v73 = *v21;
  swift_bridgeObjectRetain();
  id v135 = v59;
  id v74 = v66;
  id v134 = v65;
  id v75 = [v73 identifier];
  uint64_t v76 = sub_1000EA2B0();
  uint64_t v78 = v77;

  id v136 = v74;
  uint64_t v133 = v61;
  if (v71)
  {
    uint64_t v79 = v148;
    unsigned __int8 v80 = v137;
    if (v72 == v76 && v71 == v78) {
      int v130 = 1;
    }
    else {
      int v130 = sub_1000EAB20();
    }
    uint64_t v81 = v149;
    uint64_t v82 = (uint64_t)v132;
    uint64_t v83 = (uint64_t)v143;
    swift_bridgeObjectRelease();
  }
  else
  {
    int v130 = 0;
    uint64_t v81 = v149;
    uint64_t v82 = (uint64_t)v132;
    uint64_t v79 = v148;
    unsigned __int8 v80 = v137;
    uint64_t v83 = (uint64_t)v143;
  }
  swift_bridgeObjectRelease();
  uint64_t v158 = &type metadata for FeatureFlags.NewsWidget;
  *(void *)&long long v159 = sub_100099634();
  char v84 = sub_1000E8E00();
  sub_100020AC0((uint64_t)&v155);
  uint64_t v85 = v153;
  uint64_t v86 = v147;
  sub_1000995CC(v153, v147, (uint64_t (*)(void))type metadata accessor for SectionView);
  if ((v84 & 1) == 0)
  {
    sub_10009976C(v86, (uint64_t (*)(void))type metadata accessor for SectionView);
    uint64_t v93 = (uint64_t)v141;
LABEL_20:
    uint64_t v102 = v131;
    sub_1000995CC(v85, v79, (uint64_t (*)(void))type metadata accessor for SectionView);
    uint64_t v99 = (uint64_t)v142;
    sub_1000995CC(v102, (uint64_t)v142, type metadata accessor for Item);
    goto LABEL_21;
  }
  uint64_t v87 = *(void *)(v86 + *(int *)(v152 + 20) + *(int *)(v150 + 24));
  uint64_t v88 = *(void *)(v87 + 16);
  if (v88)
  {
    sub_1000995CC(v87+ ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80))+ *(void *)(v145 + 72) * (v88 - 1), v83, (uint64_t (*)(void))type metadata accessor for Section);
    id v89 = [*(id *)(v83 + 8) identifier];
    uint64_t v90 = sub_1000EA2B0();
    uint64_t v92 = v91;

    sub_10009976C(v83, (uint64_t (*)(void))type metadata accessor for Section);
  }
  else
  {
    uint64_t v90 = 0;
    uint64_t v92 = 0;
  }
  id v94 = [*(id *)(v86 + 8) identifier];
  uint64_t v95 = v86;
  uint64_t v96 = sub_1000EA2B0();
  uint64_t v98 = v97;

  if (!v92)
  {
    sub_10009976C(v95, (uint64_t (*)(void))type metadata accessor for SectionView);
    swift_bridgeObjectRelease();
    uint64_t v93 = (uint64_t)v141;
    uint64_t v79 = v148;
    uint64_t v85 = v153;
    goto LABEL_20;
  }
  if (v90 != v96 || v92 != v98)
  {
    char v120 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    sub_10009976C(v147, (uint64_t (*)(void))type metadata accessor for SectionView);
    swift_bridgeObjectRelease();
    uint64_t v79 = v148;
    sub_1000995CC(v153, v148, (uint64_t (*)(void))type metadata accessor for SectionView);
    uint64_t v99 = (uint64_t)v142;
    sub_1000995CC(v131, (uint64_t)v142, type metadata accessor for Item);
    uint64_t v93 = (uint64_t)v141;
    uint64_t v100 = (uint64_t)v129;
    uint64_t v101 = v128;
    if (v120) {
      goto LABEL_24;
    }
LABEL_21:
    sub_10009976C(v99, type metadata accessor for Item);
    sub_10009976C(v79, (uint64_t (*)(void))type metadata accessor for SectionView);
    char v103 = 0;
    uint64_t v104 = v144;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  sub_10009976C(v147, (uint64_t (*)(void))type metadata accessor for SectionView);
  swift_bridgeObjectRelease();
  uint64_t v79 = v148;
  sub_1000995CC(v153, v148, (uint64_t (*)(void))type metadata accessor for SectionView);
  uint64_t v99 = (uint64_t)v142;
  sub_1000995CC(v131, (uint64_t)v142, type metadata accessor for Item);
  uint64_t v93 = (uint64_t)v141;
  uint64_t v100 = (uint64_t)v129;
  uint64_t v101 = v128;
LABEL_24:
  uint64_t v121 = *(void *)(v79 + 16);
  uint64_t v122 = *(void *)(v121 + 16);
  if (v122)
  {
    sub_1000995CC(v121+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(void *)(v101 + 72) * (v122 - 1), v100, type metadata accessor for Item);
    uint64_t v123 = sub_1000D992C();
    uint64_t v125 = v124;
    sub_10009976C(v100, type metadata accessor for Item);
    uint64_t v126 = sub_1000D992C();
    uint64_t v104 = v144;
    if (v125)
    {
      if (v123 == v126 && v125 == v127)
      {
        swift_bridgeObjectRelease();
        char v103 = 1;
      }
      else
      {
        char v103 = sub_1000EAB20();
        swift_bridgeObjectRelease();
      }
      uint64_t v93 = (uint64_t)v141;
      sub_10009976C((uint64_t)v142, type metadata accessor for Item);
      sub_10009976C(v148, (uint64_t (*)(void))type metadata accessor for SectionView);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    uint64_t v93 = (uint64_t)v141;
    uint64_t v79 = v148;
    uint64_t v99 = (uint64_t)v142;
  }
  else
  {
    sub_1000D992C();
    uint64_t v104 = v144;
  }
  sub_10009976C(v99, type metadata accessor for Item);
  sub_10009976C(v79, (uint64_t (*)(void))type metadata accessor for SectionView);
  swift_bridgeObjectRelease();
  char v103 = 0;
LABEL_22:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v106 = (uint64_t)v146;
  uint64_t *v146 = KeyPath;
  sub_10001B38C(&qword_100137A10);
  swift_storeEnumTagMultiPayload();
  *uint64_t v104 = swift_getKeyPath();
  sub_10001B38C(&qword_100138970);
  swift_storeEnumTagMultiPayload();
  uint64_t *v80 = swift_getKeyPath();
  sub_10001B38C(&qword_100138370);
  swift_storeEnumTagMultiPayload();
  uint64_t v107 = v140;
  sub_10002D5DC(v106, (uint64_t)v80 + v140[5], &qword_100137A18);
  sub_10002D5DC((uint64_t)v104, (uint64_t)v80 + v107[6], &qword_100138978);
  uint64_t v108 = (uint64_t *)((char *)v80 + v107[7]);
  uint64_t v154 = 0;
  sub_1000E9CE0();
  uint64_t v109 = v156;
  *uint64_t v108 = v155;
  v108[1] = v109;
  uint64_t v110 = (uint64_t *)((char *)v80 + v107[8]);
  uint64_t v154 = 0;
  sub_1000E9CE0();
  uint64_t v111 = v156;
  *uint64_t v110 = v155;
  v110[1] = v111;
  sub_1000996BC(v82, (uint64_t)v80 + v107[9], type metadata accessor for Item.Headline);
  sub_1000996BC(v151, (uint64_t)v80 + v107[10], (uint64_t (*)(void))type metadata accessor for TodayContent);
  uint64_t v112 = (char *)v80 + v107[11];
  *(void *)uint64_t v112 = v135;
  *((void *)v112 + 1) = v60;
  uint64_t v113 = v139;
  *((void *)v112 + 2) = v133;
  *((void *)v112 + 3) = v113;
  v112[32] = v138;
  *((void *)v112 + 5) = v62;
  *((void *)v112 + 6) = v63;
  *((void *)v112 + 7) = v64;
  id v114 = v134;
  *((void *)v112 + 8) = v136;
  *((void *)v112 + 9) = v114;
  *((void *)v112 + 10) = v67;
  *((void *)v112 + 11) = v68;
  *((void *)v112 + 12) = v69;
  *((unsigned char *)v80 + v107[12]) = v130 & 1;
  *((unsigned char *)v80 + v107[13]) = v103 & 1;
  sub_100099724(&qword_100139B90, (void (*)(uint64_t))type metadata accessor for HeadlineCell);
  uint64_t v115 = sub_1000E9D10();
  sub_1000E9DC0();
  sub_1000E9300();
  uint64_t v116 = v155;
  char v117 = v156;
  uint64_t v118 = v157;
  char v119 = (char)v158;
  *uint64_t v81 = v115;
  v81[1] = v116;
  *((unsigned char *)v81 + 16) = v117;
  v81[3] = v118;
  *((unsigned char *)v81 + 32) = v119;
  *(_OWORD *)(v81 + 5) = v159;
  return sub_10009976C(v93, type metadata accessor for Item.Headline);
}

uint64_t sub_100098BD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Item.Headline(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (id *)&v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Item(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)&v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000995CC(a1, (uint64_t)v7, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = v7[1];
    uint64_t v27 = *v7;
    uint64_t v28 = v8;
    sub_1000295C0();
    return sub_1000E9A50();
  }
  else
  {
    sub_1000996BC((uint64_t)v7, (uint64_t)v4, type metadata accessor for Item.Headline);
    sub_10001B38C(&qword_100137388);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1000F1E20;
    id v11 = *v4;
    id v12 = [*v4 title];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = sub_1000EA2B0();
      unint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v16 = 0xE000000000000000;
    }
    *(void *)(v10 + 32) = v14;
    *(void *)(v10 + 40) = v16;
    id v17 = [v11 sourceName];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_1000EA2B0();
      unint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0xE000000000000000;
    }
    *(void *)(v10 + 48) = v19;
    *(void *)(v10 + 56) = v21;
    uint64_t v27 = v10;
    sub_10001B38C(&qword_1001373A0);
    sub_10001D100((unint64_t *)&qword_1001373A8, &qword_1001373A0);
    uint64_t v22 = sub_1000EA200();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v27 = v22;
    uint64_t v28 = v24;
    sub_1000295C0();
    uint64_t v9 = sub_1000E9A50();
    sub_10009976C((uint64_t)v4, type metadata accessor for Item.Headline);
  }
  return v9;
}

uint64_t sub_100098E90@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1000E9DB0();
  a1[1] = v3;
  uint64_t v4 = sub_10001B38C(&qword_100139AF0);
  return sub_100096BA0(v1, (uint64_t *)((char *)a1 + *(int *)(v4 + 44)));
}

uint64_t sub_100098ED4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000D992C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100098F00()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for SectionView();
  uint64_t v24 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v22 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v23 = (v24 + 16) & ~v24;
  uint64_t v3 = v0 + v23;

  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Section();
  uint64_t v5 = v0 + v23 + *(int *)(v4 + 32);
  uint64_t v6 = sub_1000E8B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v25(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v3 + *(int *)(v4 + 36);
  uint64_t v9 = sub_1000E8C50();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  id v11 = (id *)(v3 + v2[5]);

  uint64_t v12 = type metadata accessor for TodayContent();
  uint64_t v13 = (char *)v11 + *(int *)(v12 + 20);
  uint64_t v14 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v14 - 1) + 48))(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v15 = &v13[v14[7]];
    if (!v25((uint64_t)v15, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void **)&v13[v14[9]];
    if (v16 != (void *)1) {

    }
    sub_10001D758(*(void **)&v13[v14[10]], *(void **)&v13[v14[10] + 8]);
    uint64_t v1 = v0;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  id v17 = (char *)v11 + *(int *)(v12 + 36);
  if (!v25((uint64_t)v17, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = (id *)(v3 + v2[6]);

  sub_10003D590(*(void *)(v3 + v2[7]), *(unsigned char *)(v3 + v2[7] + 8));
  uint64_t v19 = v3 + v2[8];
  sub_10001B38C(&qword_1001391B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1000E9290();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v1, v23 + v22, v24 | 7);
}

uint64_t sub_10009933C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for SectionView();
  uint64_t result = sub_1000975E8(a1, &v5);
  *a2 = v5;
  return result;
}

uint64_t sub_1000993C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009942C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 8);
  char v4 = *(unsigned char *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  char v6 = *(unsigned char *)(v2 + 32);
  *(void *)a1 = *(void *)v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v2 + 40);
  return swift_retain();
}

unint64_t sub_10009945C()
{
  unint64_t result = qword_100139B60;
  if (!qword_100139B60)
  {
    sub_10001B3D0(&qword_100139B50);
    sub_10001D100(&qword_100139B58, &qword_100139B48);
    sub_100099724((unint64_t *)&qword_100137ED8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139B60);
  }
  return result;
}

unint64_t sub_10009952C()
{
  unint64_t result = qword_100139B70;
  if (!qword_100139B70)
  {
    sub_10001B3D0(&qword_100139B68);
    sub_10001D100(&qword_100139B78, &qword_100139B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139B70);
  }
  return result;
}

uint64_t sub_1000995CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100099634()
{
  unint64_t result = qword_100139B88;
  if (!qword_100139B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139B88);
  }
  return result;
}

uint64_t sub_100099690()
{
  return sub_1000E9580();
}

uint64_t sub_1000996BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100099724(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009976C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void destroy for SectionView.LayoutOptions(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 112);
}

uint64_t initializeWithCopy for SectionView.LayoutOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  char v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v5 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  char v6 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t assignWithCopy for SectionView.LayoutOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  char v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 40);
  id v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v10 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v11 = *(void **)(a2 + 104);
  uint64_t v12 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v11;
  id v13 = v11;

  uint64_t v14 = *(void **)(a2 + 112);
  unint64_t v15 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v14;
  id v16 = v14;

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

__n128 initializeWithTake for SectionView.LayoutOptions(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for SectionView.LayoutOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  long long v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  long long v5 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionView.LayoutOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionView.LayoutOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionView.LayoutOptions()
{
  return &type metadata for SectionView.LayoutOptions;
}

uint64_t sub_100099B34()
{
  return sub_10001D100(&qword_100139B98, &qword_100139BA0);
}

unint64_t sub_100099B74()
{
  unint64_t result = qword_100139BB8;
  if (!qword_100139BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139BB8);
  }
  return result;
}

uint64_t sub_100099BC8()
{
  return sub_10001D100(&qword_100139BC0, &qword_100139BC8);
}

uint64_t sub_100099C04()
{
  uint64_t v0 = sub_10001B38C(&qword_100139C08);
  sub_10001C500(v0, qword_10014BC90);
  sub_10001C4C8(v0, (uint64_t)qword_10014BC90);
  sub_10009B664();
  return sub_1000E8840();
}

uint64_t sub_100099C80(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1000E8A60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000E8CC0();
  v1[6] = swift_task_alloc();
  sub_1000EA270();
  v1[7] = swift_task_alloc();
  sub_1000E8A70();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100099DC4, 0, 0);
}

uint64_t sub_100099DC4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)v0[2];
  sub_10001B38C(&qword_100139BC8);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000E8A80();
  sub_10001D100(&qword_100139C98, &qword_100139CA0);
  uint64_t *v4 = sub_1000E8930();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100099F68()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E8A60();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  long long v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000EA270();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E8A70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E8910();
  sub_10001C500(v10, qword_10014BCA8);
  sub_10001C4C8(v10, (uint64_t)qword_10014BCA8);
  sub_1000EA260();
  sub_1000E8C90();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E8A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E8900();
}

uint64_t sub_10009A240()
{
  uint64_t v0 = sub_10001B38C(&qword_100139C78);
  sub_10001C500(v0, qword_10014BCC0);
  sub_10001C4C8(v0, (uint64_t)qword_10014BCC0);
  sub_10009B108();
  return sub_1000E88B0();
}

uint64_t sub_10009A2BC()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v3 - 8);
  long long v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E8A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  sub_1000E8A50();
  sub_1000E8A50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = sub_1000E8800();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_1000E8A50();
  return sub_1000E8810();
}

uint64_t sub_10009A4F8()
{
  uint64_t v0 = sub_1000E8A70();
  sub_10001C500(v0, qword_10014BCD8);
  sub_10001C4C8(v0, (uint64_t)qword_10014BCD8);
  return sub_1000E8A50();
}

uint64_t sub_10009A55C()
{
  uint64_t v0 = sub_10001B38C(&qword_100136528);
  sub_10001C500(v0, qword_10014BCF0);
  uint64_t v1 = sub_10001C4C8(v0, (uint64_t)qword_10014BCF0);
  sub_1000E87D0();
  uint64_t v2 = sub_1000E87E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10009A614()
{
  uint64_t result = swift_getKeyPath();
  qword_10014BD08 = result;
  return result;
}

uint64_t sub_10009A63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  void v3[6] = a1;
  return _swift_task_switch(sub_10009A660, 0, 0);
}

uint64_t sub_10009A660()
{
  sub_1000E8650();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  sub_1000E8650();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_100135DA8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BD08;
  *(void *)(v0 + 80) = qword_10014BD08;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10001D100(&qword_100139C98, &qword_100139CA0);
  *(void *)(v0 + 96) = v4;
  void *v3 = v0;
  v3[1] = sub_10009A7BC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10009A7BC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FD8;
  }
  else {
    uint64_t v2 = sub_10009A910;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10009A910()
{
  sub_1000E8650();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_10014BD08;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  void *v3 = v0;
  v3[1] = sub_100019DFC;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10009A9EC()
{
  if (qword_100135DA8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10009AA4C()
{
  unint64_t result = qword_100139BD0;
  if (!qword_100139BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139BD0);
  }
  return result;
}

unint64_t sub_10009AAA4()
{
  unint64_t result = qword_100139BD8;
  if (!qword_100139BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139BD8);
  }
  return result;
}

uint64_t sub_10009AAF8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10009AB2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009AB7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135D98, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10014BCD8, a1);
}

uint64_t sub_10009ABB4@<X0>(uint64_t a1@<X8>)
{
  if (qword_100135DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10001B38C(&qword_100136528);
  uint64_t v3 = sub_10001C4C8(v2, (uint64_t)qword_10014BCF0);

  return sub_10001CB68(v3, a1);
}

uint64_t sub_10009AC30(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10001A400;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10009A660, 0, 0);
}

uint64_t sub_10009ACE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009BCF4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10009AD0C()
{
  return 0xD000000000000031;
}

unint64_t sub_10009AD2C()
{
  unint64_t result = qword_100139BE8;
  if (!qword_100139BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139BE8);
  }
  return result;
}

unint64_t sub_10009AD84()
{
  unint64_t result = qword_100139BF0;
  if (!qword_100139BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139BF0);
  }
  return result;
}

unint64_t sub_10009ADDC()
{
  unint64_t result = qword_100139BF8;
  if (!qword_100139BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139BF8);
  }
  return result;
}

uint64_t sub_10009AE30()
{
  return sub_10001D100(&qword_100139C00, &qword_100139C08);
}

uint64_t sub_10009AE6C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10009AE8C, 0, 0);
}

uint64_t sub_10009AE8C()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10009AF68(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 17) = *a2;
  return _swift_task_switch(sub_10009AF8C, 0, 0);
}

uint64_t sub_10009AF8C()
{
  if (qword_100135C08 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1000E8D20();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 17);
    swift_retain();
    swift_retain();
    sub_1000E8D30();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10001C620();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009B0D8@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135D80, &qword_100139C08, (uint64_t)qword_10014BC90, a1);
}

unint64_t sub_10009B108()
{
  unint64_t result = qword_100139C10;
  if (!qword_100139C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C10);
  }
  return result;
}

uint64_t sub_10009B15C()
{
  return sub_10001D100(&qword_100139C18, &qword_100139C08);
}

uint64_t sub_10009B198()
{
  uint64_t v0 = qword_100139BA8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10009B1D4()
{
  unint64_t result = qword_100139C20;
  if (!qword_100139C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C20);
  }
  return result;
}

uint64_t sub_10009B228@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A834(&qword_100135D90, &qword_100139C78, (uint64_t)qword_10014BCC0, a1);
}

unint64_t sub_10009B258()
{
  unint64_t result = qword_100139C28;
  if (!qword_100139C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C28);
  }
  return result;
}

unint64_t sub_10009B2B0()
{
  unint64_t result = qword_100139C30;
  if (!qword_100139C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C30);
  }
  return result;
}

unint64_t sub_10009B308()
{
  unint64_t result = qword_100139C38;
  if (!qword_100139C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C38);
  }
  return result;
}

unint64_t sub_10009B360()
{
  unint64_t result = qword_100139C40;
  if (!qword_100139C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C40);
  }
  return result;
}

uint64_t sub_10009B3B4@<X0>(uint64_t *a1@<X8>)
{
  sub_10009B664();
  uint64_t result = sub_1000E8630();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10009B3F4()
{
  sub_10009B610();
  uint64_t v2 = sub_1000E8870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001C5B8(v3, v0, v2, v1);
}

uint64_t sub_10009B488@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A9E4(&qword_100135D88, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10014BCA8, a1);
}

uint64_t sub_10009B4C0()
{
  return sub_10001D100(&qword_100139C50, &qword_100139C58);
}

uint64_t sub_10009B4FC(uint64_t a1)
{
  unint64_t v2 = sub_10009B108();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10009B54C()
{
  unint64_t result = qword_100139C60;
  if (!qword_100139C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C60);
  }
  return result;
}

uint64_t sub_10009B5A4(uint64_t a1)
{
  unint64_t v2 = sub_10009B360();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AutoDownloadStoriesInFeedsEntity()
{
  return &type metadata for AutoDownloadStoriesInFeedsEntity;
}

ValueMetadata *type metadata accessor for AutoDownloadStoriesInFeedsEntity.UpdateIntent_value()
{
  return &type metadata for AutoDownloadStoriesInFeedsEntity.UpdateIntent_value;
}

unint64_t sub_10009B610()
{
  unint64_t result = qword_100139C68;
  if (!qword_100139C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C68);
  }
  return result;
}

unint64_t sub_10009B664()
{
  unint64_t result = qword_100139C70;
  if (!qword_100139C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139C70);
  }
  return result;
}

uint64_t sub_10009B6B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10001B38C(&qword_100136608);
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136610);
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001B38C(&qword_100136618);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B38C(&qword_100136620);
  sub_10009B664();
  uint64_t v11 = sub_10001B3D0(&qword_100136628);
  uint64_t v12 = sub_1000E9740();
  uint64_t v13 = sub_10001D100(&qword_100136630, &qword_100136628);
  unint64_t v14 = sub_1000397BC();
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  unint64_t v28 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1000EA070();
  sub_1000E9680();
  uint64_t v15 = sub_10001D100((unint64_t *)&unk_100136640, &qword_100136608);
  sub_1000E9780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  uint64_t v25 = v1;
  uint64_t v26 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000E97B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  uint64_t v25 = v4;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v22;
  sub_1000E9770();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v17);
}

uint64_t sub_10009BAF8()
{
  uint64_t v0 = sub_1000E9740();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001B38C(&qword_100136628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E9680();
  sub_1000E9CD0();
  sub_1000E9730();
  sub_10001D100(&qword_100136630, &qword_100136628);
  sub_1000397BC();
  sub_1000E9AA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10009BCF4()
{
  uint64_t v0 = sub_10001B38C(&qword_1001364F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000E8860();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_100136500);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10001B38C(&qword_1001364A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000E8A70();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10001B38C(&qword_100139CA8);
  sub_1000E8A50();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000E8600();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10009B108();
  uint64_t v19 = v23;
  uint64_t v24 = sub_1000E8670();
  sub_10001B38C(&qword_100136510);
  sub_1000E8A50();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000EA540();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000E8690();
  return v24;
}

uint64_t sub_10009C134@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for AutoDownloadStoriesInFeedsToggleControl()
{
  return &type metadata for AutoDownloadStoriesInFeedsToggleControl;
}

uint64_t sub_10009C150()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AudioBadgeView()
{
  return &type metadata for AudioBadgeView;
}

uint64_t sub_10009C17C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10009C198@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_retain();
  sub_1000E9BC0();
  uint64_t v4 = sub_1000E9C00();
  swift_release();
  sub_1000E9BC0();
  uint64_t v5 = sub_1000E9C00();
  swift_release();
  *(void *)a1 = v3;
  *(_WORD *)(a1 + 8) = 256;
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = xmmword_1000F63B0;
  *(void *)(a1 + 40) = 0x4000000000000000;
  *(void *)(a1 + 48) = v5;
  double result = 10.0;
  *(_OWORD *)(a1 + 56) = xmmword_1000F63C0;
  *(void *)(a1 + 72) = 0x4000000000000000;
  return result;
}

uint64_t sub_10009C248()
{
  return sub_10009C2AC(&qword_100139CB8, &qword_100139CC0, (void (*)(void))sub_10009C284);
}

uint64_t sub_10009C284()
{
  return sub_10009C2AC(&qword_100139CC8, &qword_100139CD0, (void (*)(void))sub_10009C32C);
}

uint64_t sub_10009C2AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B3D0(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009C32C()
{
  unint64_t result = qword_100139CD8;
  if (!qword_100139CD8)
  {
    sub_10001B3D0(&qword_100139CE0);
    sub_100066CF4();
    sub_10009C3A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139CD8);
  }
  return result;
}

unint64_t sub_10009C3A8()
{
  unint64_t result = qword_100139CE8;
  if (!qword_100139CE8)
  {
    sub_10001B3D0(&qword_100139CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139CE8);
  }
  return result;
}

uint64_t *sub_10009C404(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for NewsTimelineEntry();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_1000E8C50();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v63 = a1;
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)((char *)a2 + v8);
    *uint64_t v9 = v11;
    uint64_t v12 = (int *)type metadata accessor for TodayContent();
    uint64_t v13 = v12[5];
    uint64_t v14 = (void *)((char *)v9 + v13);
    uint64_t v15 = &v10[v13];
    uint64_t v16 = (int *)type metadata accessor for Banner();
    uint64_t v17 = (void *)*((void *)v16 - 1);
    uint64_t v18 = (unsigned int (*)(char *, uint64_t, int *))v17[6];
    id v19 = v11;
    if (v18(v15, 1, v16))
    {
      uint64_t v20 = sub_10001B38C(&qword_1001385E0);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v23 = *((void *)v15 + 1);
      *uint64_t v14 = *(void *)v15;
      v14[1] = v23;
      uint64_t v24 = *((void *)v15 + 3);
      uint64_t v61 = v17;
      v14[2] = *((void *)v15 + 2);
      void v14[3] = v24;
      uint64_t v25 = *((void *)v15 + 5);
      v14[4] = *((void *)v15 + 4);
      void v14[5] = v25;
      uint64_t v26 = v16[7];
      __dst = (char *)v14 + v26;
      uint64_t v59 = &v15[v26];
      uint64_t v27 = sub_1000E8B60();
      uint64_t v57 = *(void *)(v27 - 8);
      uint64_t v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60(v59, 1, v27))
      {
        uint64_t v28 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v59, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dst, v59, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v27);
      }
      uint64_t v29 = v16[8];
      uint64_t v30 = (void *)((char *)v14 + v29);
      uint64_t v31 = &v15[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *uint64_t v30 = *(void *)v31;
      v30[1] = v32;
      uint64_t v33 = v16[9];
      uint64_t v34 = *(void **)&v15[v33];
      swift_bridgeObjectRetain();
      if (v34 != (void *)1) {
        id v35 = v34;
      }
      *(void *)((char *)v14 + v33) = v34;
      uint64_t v36 = v16[10];
      uint64_t v37 = (char *)v14 + v36;
      char v38 = &v15[v36];
      char v39 = *(void **)v38;
      uint64_t v40 = (void *)*((void *)v38 + 1);
      char v41 = v38[16];
      sub_10001D614(*(void **)v38, v40);
      *(void *)uint64_t v37 = v39;
      *((void *)v37 + 1) = v40;
      v37[16] = v41;
      (*((void (**)(void *, void, uint64_t, int *))v61 + 7))(v14, 0, 1, v16);
    }
    *(void *)((char *)v9 + v12[6]) = *(void *)&v10[v12[6]];
    *(void *)((char *)v9 + v12[7]) = *(void *)&v10[v12[7]];
    *((unsigned char *)v9 + v12[8]) = v10[v12[8]];
    uint64_t v42 = v12[9];
    uint64_t v62 = (char *)v9 + v42;
    uint64_t v43 = &v10[v42];
    uint64_t v44 = sub_1000E8B60();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v46(v43, 1, v44))
    {
      uint64_t v47 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v62, v43, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v62, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v62, 0, 1, v44);
    }
    *(void *)((char *)v9 + v12[10]) = *(void *)&v10[v12[10]];
    uint64_t v48 = v12[11];
    uint64_t v49 = (void *)((char *)v9 + v48);
    uint64_t v50 = &v10[v48];
    uint64_t v51 = *((void *)v50 + 1);
    void *v49 = *(void *)v50;
    v49[1] = v51;
    uint64_t v52 = v12[12];
    char v53 = (void *)((char *)v9 + v52);
    unsigned __int8 v54 = &v10[v52];
    uint64_t v55 = *((void *)v54 + 1);
    *char v53 = *(void *)v54;
    v53[1] = v55;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v63;
  }
  return (uint64_t *)v22;
}

uint64_t sub_10009C8AC(uint64_t a1)
{
  uint64_t v2 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (id *)(a1 + *(int *)(type metadata accessor for NewsTimelineEntry() + 20));

  uint64_t v4 = type metadata accessor for TodayContent();
  int v5 = (char *)v3 + *(int *)(v4 + 20);
  uint64_t v6 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = &v5[v6[7]];
    uint64_t v8 = sub_1000E8B60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void **)&v5[v6[9]];
    if (v10 != (void *)1) {

    }
    sub_10001D758(*(void **)&v5[v6[10]], *(void **)&v5[v6[10] + 8]);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v11 = (char *)v3 + *(int *)(v4 + 36);
  uint64_t v12 = sub_1000E8B60();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009CB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for NewsTimelineEntry() + 20);
  uint64_t v58 = a1;
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void **)(a2 + v5);
  void *v6 = v8;
  uint64_t v9 = (int *)type metadata accessor for TodayContent();
  uint64_t v10 = v9[5];
  uint64_t v11 = (void *)((char *)v6 + v10);
  uint64_t v12 = (void *)(v7 + v10);
  uint64_t v13 = (int *)type metadata accessor for Banner();
  uint64_t v14 = (void *)*((void *)v13 - 1);
  uint64_t v15 = (unsigned int (*)(void *, uint64_t, int *))v14[6];
  id v16 = v8;
  if (v15(v12, 1, v13))
  {
    uint64_t v17 = sub_10001B38C(&qword_1001385E0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v18;
    uint64_t v19 = v12[3];
    v11[2] = v12[2];
    v11[3] = v19;
    uint64_t v20 = v12[5];
    void v11[4] = v12[4];
    v11[5] = v20;
    uint64_t v21 = v13[7];
    __dst = (char *)v11 + v21;
    uint64_t v56 = v14;
    char v53 = (char *)v12 + v21;
    uint64_t v22 = sub_1000E8B60();
    uint64_t v52 = *(void *)(v22 - 8);
    unsigned __int8 v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54(v53, 1, v22))
    {
      uint64_t v23 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v53, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v53, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v24 = v13[8];
    uint64_t v25 = (void *)((char *)v11 + v24);
    uint64_t v26 = (void *)((char *)v12 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = v13[9];
    uint64_t v29 = *(void **)((char *)v12 + v28);
    swift_bridgeObjectRetain();
    if (v29 != (void *)1) {
      id v30 = v29;
    }
    *(void *)((char *)v11 + v28) = v29;
    uint64_t v31 = v13[10];
    uint64_t v32 = (char *)v11 + v31;
    uint64_t v33 = (char *)v12 + v31;
    uint64_t v34 = *(void **)v33;
    id v35 = (void *)*((void *)v33 + 1);
    char v36 = v33[16];
    sub_10001D614(*(void **)v33, v35);
    *(void *)uint64_t v32 = v34;
    *((void *)v32 + 1) = v35;
    v32[16] = v36;
    (*((void (**)(void *, void, uint64_t, int *))v56 + 7))(v11, 0, 1, v13);
  }
  *(void *)((char *)v6 + v9[6]) = *(void *)(v7 + v9[6]);
  *(void *)((char *)v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *((unsigned char *)v6 + v9[8]) = *(unsigned char *)(v7 + v9[8]);
  uint64_t v37 = v9[9];
  uint64_t v57 = (char *)v6 + v37;
  char v38 = (const void *)(v7 + v37);
  uint64_t v39 = sub_1000E8B60();
  uint64_t v40 = *(void *)(v39 - 8);
  char v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v41(v38, 1, v39))
  {
    uint64_t v42 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v57, v38, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v40 + 16))(v57, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v57, 0, 1, v39);
  }
  *(void *)((char *)v6 + v9[10]) = *(void *)(v7 + v9[10]);
  uint64_t v43 = v9[11];
  uint64_t v44 = (void *)((char *)v6 + v43);
  uint64_t v45 = (void *)(v7 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = v9[12];
  uint64_t v48 = (void *)((char *)v6 + v47);
  uint64_t v49 = (void *)(v7 + v47);
  uint64_t v50 = v49[1];
  void *v48 = *v49;
  v48[1] = v50;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v58;
}

uint64_t sub_10009CF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for NewsTimelineEntry() + 20);
  uint64_t v83 = a1;
  uint64_t v6 = (void **)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void **)(a2 + v5);
  uint64_t v9 = *v6;
  void *v6 = v8;
  id v10 = v8;

  uint64_t v11 = (int *)type metadata accessor for TodayContent();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void **)((char *)v6 + v12);
  uint64_t v14 = (void *)(v7 + v12);
  uint64_t v15 = (int *)type metadata accessor for Banner();
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_10009FBA0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_7;
    }
    *uint64_t v13 = *v14;
    v13[1] = v14[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13[2] = v14[2];
    v13[3] = v14[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13[4] = v14[4];
    v13[5] = v14[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = v15[7];
    uint64_t v25 = (char *)v13 + v24;
    int __dsta = (char *)v14 + v24;
    uint64_t v26 = sub_1000E8B60();
    uint64_t v79 = *(void *)(v26 - 8);
    unsigned __int8 v80 = v25;
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
    LODWORD(v25) = v27(v25, 1, v26);
    int v28 = v27(__dsta, 1, v26);
    if (v25)
    {
      if (v28)
      {
        size_t v29 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        id v30 = v80;
LABEL_17:
        memcpy(v30, __dsta, v29);
        goto LABEL_20;
      }
      (*(void (**)(void *, char *, uint64_t))(v79 + 16))(v80, __dsta, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v26);
    }
    else
    {
      if (v28)
      {
        (*(void (**)(void *, uint64_t))(v79 + 8))(v80, v26);
        size_t v29 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        id v30 = v80;
        goto LABEL_17;
      }
      (*(void (**)(void *, char *, uint64_t))(v79 + 24))(v80, __dsta, v26);
    }
LABEL_20:
    uint64_t v43 = v15[8];
    uint64_t v44 = (void *)((char *)v13 + v43);
    uint64_t v45 = (void *)((char *)v14 + v43);
    *uint64_t v44 = *v45;
    v44[1] = v45[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v46 = v15[9];
    uint64_t v47 = (void *)((char *)v13 + v46);
    uint64_t v48 = *(void **)((char *)v13 + v46);
    uint64_t v49 = *(void **)((char *)v14 + v46);
    if (v48 == (void *)1)
    {
      if (v49 != (void *)1)
      {
        *uint64_t v47 = v49;
        id v50 = v49;
LABEL_27:
        uint64_t v52 = v15[10];
        char v53 = (char *)v13 + v52;
        unsigned __int8 v54 = (char *)v14 + v52;
        uint64_t v55 = *(void **)v54;
        uint64_t v56 = (void *)*((void *)v54 + 1);
        char v57 = v54[16];
        sub_10001D614(*(void **)v54, v56);
        uint64_t v58 = *(void **)v53;
        uint64_t v59 = (void *)*((void *)v53 + 1);
        *(void *)char v53 = v55;
        *((void *)v53 + 1) = v56;
        v53[16] = v57;
        sub_10001D758(v58, v59);
        goto LABEL_28;
      }
    }
    else
    {
      if (v49 != (void *)1)
      {
        *uint64_t v47 = v49;
        id v51 = v49;

        goto LABEL_27;
      }
      sub_10001DBE4((id *)((char *)v13 + v46));
      uint64_t v49 = *(void **)((char *)v14 + v46);
    }
    *uint64_t v47 = v49;
    goto LABEL_27;
  }
  if (v19)
  {
LABEL_7:
    uint64_t v23 = sub_10001B38C(&qword_1001385E0);
    memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_28;
  }
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  v13[2] = v14[2];
  v13[3] = v14[3];
  v13[4] = v14[4];
  v13[5] = v14[5];
  uint64_t v20 = v15[7];
  __dst = (char *)v13 + v20;
  uint64_t v77 = (char *)v14 + v20;
  uint64_t v21 = sub_1000E8B60();
  uint64_t v76 = *(void *)(v21 - 8);
  uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v78(v77, 1, v21))
  {
    uint64_t v22 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v77, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, v77, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v31 = v15[8];
  uint64_t v32 = (void *)((char *)v13 + v31);
  uint64_t v33 = (void *)((char *)v14 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  uint64_t v34 = v15[9];
  id v35 = *(void **)((char *)v14 + v34);
  swift_bridgeObjectRetain();
  if (v35 != (void *)1) {
    id v36 = v35;
  }
  *(void *)((char *)v13 + v34) = v35;
  uint64_t v37 = v15[10];
  char v38 = (char *)v13 + v37;
  uint64_t v39 = (char *)v14 + v37;
  uint64_t v40 = *(void **)v39;
  char v41 = (void *)*((void *)v39 + 1);
  char v42 = v39[16];
  sub_10001D614(*(void **)v39, v41);
  *(void *)char v38 = v40;
  *((void *)v38 + 1) = v41;
  v38[16] = v42;
  (*(void (**)(void *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_28:
  *(void **)((char *)v6 + v11[6]) = *(void **)(v7 + v11[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v6 + v11[7]) = *(void **)(v7 + v11[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)v6 + v11[8]) = *(unsigned char *)(v7 + v11[8]);
  uint64_t v60 = v11[9];
  uint64_t v61 = (char *)v6 + v60;
  uint64_t v62 = (char *)(v7 + v60);
  uint64_t v63 = sub_1000E8B60();
  uint64_t v64 = *(void *)(v63 - 8);
  unsigned __int8 v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v61, 1, v63);
  int v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_33;
  }
  if (v67)
  {
LABEL_33:
    uint64_t v68 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_34:
  *(void **)((char *)v6 + v11[10]) = *(void **)(v7 + v11[10]);
  swift_retain();
  swift_release();
  uint64_t v69 = v11[11];
  char v70 = (void **)((char *)v6 + v69);
  uint64_t v71 = (void *)(v7 + v69);
  *char v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = v11[12];
  uint64_t v73 = (void **)((char *)v6 + v72);
  id v74 = (void *)(v7 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v83;
}

uint64_t sub_10009D750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for NewsTimelineEntry() + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for TodayContent();
  uint64_t v9 = v8[5];
  id v10 = (_OWORD *)(v6 + v9);
  uint64_t v11 = (_OWORD *)(v7 + v9);
  uint64_t v12 = (int *)type metadata accessor for Banner();
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10001B38C(&qword_1001385E0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    long long v15 = v11[1];
    *id v10 = *v11;
    v10[1] = v15;
    void v10[2] = v11[2];
    uint64_t v16 = v12[7];
    uint64_t v31 = a1;
    __dst = (char *)v10 + v16;
    uint64_t v17 = (char *)v11 + v16;
    uint64_t v18 = sub_1000E8B60();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
    *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
    uint64_t v21 = v12[10];
    uint64_t v22 = (char *)v10 + v21;
    uint64_t v23 = (char *)v11 + v21;
    v22[16] = v23[16];
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    a1 = v31;
  }
  *(void *)(v6 + v8[6]) = *(void *)(v7 + v8[6]);
  *(void *)(v6 + v8[7]) = *(void *)(v7 + v8[7]);
  *(unsigned char *)(v6 + v8[8]) = *(unsigned char *)(v7 + v8[8]);
  uint64_t v24 = v8[9];
  uint64_t v25 = (void *)(v6 + v24);
  uint64_t v26 = (const void *)(v7 + v24);
  uint64_t v27 = sub_1000E8B60();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(void *)(v6 + v8[10]) = *(void *)(v7 + v8[10]);
  *(_OWORD *)(v6 + v8[11]) = *(_OWORD *)(v7 + v8[11]);
  *(_OWORD *)(v6 + v8[12]) = *(_OWORD *)(v7 + v8[12]);
  return a1;
}

uint64_t sub_10009DB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E8C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for NewsTimelineEntry() + 20);
  uint64_t v77 = a1;
  uint64_t v6 = (void **)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *v6;
  void *v6 = *(void **)(a2 + v5);

  uint64_t v9 = (int *)type metadata accessor for TodayContent();
  uint64_t v10 = v9[5];
  uint64_t v11 = (void **)((char *)v6 + v10);
  uint64_t v12 = (void *)(v7 + v10);
  uint64_t v13 = (int *)type metadata accessor for Banner();
  uint64_t v14 = *((void *)v13 - 1);
  long long v15 = *(uint64_t (**)(void *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_10009FBA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_7;
    }
    uint64_t v25 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = v12[3];
    v11[2] = v12[2];
    v11[3] = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = v12[5];
    void v11[4] = v12[4];
    v11[5] = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = v13[7];
    uint64_t v29 = (char *)v11 + v28;
    int __dsta = (char *)v12 + v28;
    uint64_t v30 = sub_1000E8B60();
    uint64_t v73 = *(void *)(v30 - 8);
    id v74 = v29;
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    LODWORD(v29) = v31(v29, 1, v30);
    int v32 = v31(__dsta, 1, v30);
    if (v29)
    {
      if (v32)
      {
        size_t v33 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v34 = v74;
LABEL_15:
        memcpy(v34, __dsta, v33);
        goto LABEL_18;
      }
      (*(void (**)(void *, char *, uint64_t))(v73 + 32))(v74, __dsta, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v30);
    }
    else
    {
      if (v32)
      {
        (*(void (**)(void *, uint64_t))(v73 + 8))(v74, v30);
        size_t v33 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v34 = v74;
        goto LABEL_15;
      }
      (*(void (**)(void *, char *, uint64_t))(v73 + 40))(v74, __dsta, v30);
    }
LABEL_18:
    uint64_t v38 = v13[8];
    uint64_t v39 = (void *)((char *)v11 + v38);
    uint64_t v40 = (void *)((char *)v12 + v38);
    uint64_t v42 = *v40;
    uint64_t v41 = v40[1];
    *uint64_t v39 = v42;
    v39[1] = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v13[9];
    uint64_t v44 = (void *)((char *)v11 + v43);
    uint64_t v45 = *(void **)((char *)v11 + v43);
    uint64_t v46 = *(void *)((char *)v12 + v43);
    if (v45 != (void *)1)
    {
      if (v46 != 1)
      {
        *uint64_t v44 = v46;

        goto LABEL_23;
      }
      sub_10001DBE4((id *)((char *)v11 + v43));
      uint64_t v46 = *(void *)((char *)v12 + v43);
    }
    *uint64_t v44 = v46;
LABEL_23:
    uint64_t v47 = v13[10];
    uint64_t v48 = (char *)v11 + v47;
    uint64_t v49 = (char *)v12 + v47;
    char v50 = v49[16];
    id v51 = *(void **)v48;
    uint64_t v52 = (void *)*((void *)v48 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    v48[16] = v50;
    sub_10001D758(v51, v52);
    goto LABEL_24;
  }
  if (v17)
  {
LABEL_7:
    uint64_t v24 = sub_10001B38C(&qword_1001385E0);
    memcpy(v11, v12, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_24;
  }
  long long v18 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v18;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  uint64_t v19 = v13[7];
  __dst = (char *)v11 + v19;
  uint64_t v20 = (char *)v12 + v19;
  uint64_t v21 = sub_1000E8B60();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(_OWORD *)((char *)v11 + v13[8]) = *(_OWORD *)((char *)v12 + v13[8]);
  *(void *)((char *)v11 + v13[9]) = *(void *)((char *)v12 + v13[9]);
  uint64_t v35 = v13[10];
  id v36 = (char *)v11 + v35;
  uint64_t v37 = (char *)v12 + v35;
  v36[16] = v37[16];
  *(_OWORD *)id v36 = *(_OWORD *)v37;
  (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
LABEL_24:
  *(void **)((char *)v6 + v9[6]) = *(void **)(v7 + v9[6]);
  swift_bridgeObjectRelease();
  *(void **)((char *)v6 + v9[7]) = *(void **)(v7 + v9[7]);
  swift_unknownObjectRelease();
  *((unsigned char *)v6 + v9[8]) = *(unsigned char *)(v7 + v9[8]);
  uint64_t v53 = v9[9];
  unsigned __int8 v54 = (char *)v6 + v53;
  uint64_t v55 = (char *)(v7 + v53);
  uint64_t v56 = sub_1000E8B60();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v54, v55, v56);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
    goto LABEL_29;
  }
  if (v60)
  {
LABEL_29:
    uint64_t v61 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v54, v55, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_30:
  *(void **)((char *)v6 + v9[10]) = *(void **)(v7 + v9[10]);
  swift_release();
  uint64_t v62 = v9[11];
  uint64_t v63 = (void **)((char *)v6 + v62);
  uint64_t v64 = (uint64_t *)(v7 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  void *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = v9[12];
  uint64_t v68 = (void **)((char *)v6 + v67);
  uint64_t v69 = (uint64_t *)(v7 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  void *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  return v77;
}

uint64_t sub_10009E1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009E1C8);
}

uint64_t sub_10009E1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10009E234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009E248);
}

uint64_t sub_10009E248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ContentView()
{
  uint64_t result = qword_100139D50;
  if (!qword_100139D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009E304()
{
  uint64_t result = type metadata accessor for NewsTimelineEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10009E390()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009E3AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v125 = a1;
  uint64_t v2 = sub_10001B38C(&qword_1001391B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v112 = (uint64_t *)((char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = type metadata accessor for RegularContentView();
  __chkstk_darwin(v114);
  uint64_t v113 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10001B38C(&qword_100139D88);
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C(&qword_100137A18);
  __chkstk_darwin(v6 - 8);
  uint64_t v100 = (uint64_t *)((char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for LayoutContext();
  __chkstk_darwin(v8);
  uint64_t v116 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TodayContent();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v115 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for SmallContentView(0);
  __chkstk_darwin(v104);
  uint64_t v102 = (uint64_t *)((char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = sub_10001B38C(&qword_100139D90);
  __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000E93E0();
  uint64_t v121 = *(void *)(v15 - 8);
  uint64_t v122 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v108 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v99 = (char *)&v98 - v19;
  __chkstk_darwin(v18);
  char v120 = (char *)&v98 - v20;
  uint64_t v119 = type metadata accessor for RectangularContentView(0);
  __chkstk_darwin(v119);
  uint64_t v118 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10001B38C(&qword_100139D98);
  __chkstk_darwin(v106);
  char v105 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10001B38C((uint64_t *)&unk_100137260);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v111 = (uint64_t)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v126 = (uint64_t (*)())((char *)&v98 - v26);
  uint64_t v27 = type metadata accessor for Item(0);
  uint64_t v123 = *(void *)(v27 - 8);
  uint64_t v124 = v27;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v98 = (uint64_t)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v107 = (uint64_t)&v98 - v31;
  __chkstk_darwin(v30);
  char v117 = (char *)&v98 - v32;
  uint64_t v33 = sub_1000E9F60();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for NewsTimelineEntry();
  uint64_t v38 = *(int *)(v11 + 48);
  uint64_t v128 = v1 + *(int *)(v37 + 20);
  uint64_t v129 = v38;
  uint64_t v127 = v8;
  uint64_t v39 = *(void (**)(char *, void, uint64_t))(v34 + 104);
  v39(v36, enum case for InternalWidgetFamily.accessoryRectangular(_:), v33);
  sub_10009FC00((unint64_t *)&qword_100139068, (void (*)(uint64_t))&type metadata accessor for InternalWidgetFamily);
  sub_1000EA420();
  sub_1000EA420();
  uint64_t v40 = v130;
  uint64_t v41 = v132;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v36, v33);
  if (v40 == v41)
  {
    uint64_t v44 = (uint64_t)v117;
    uint64_t v43 = (uint64_t)v118;
    uint64_t v45 = v119;
    uint64_t v46 = v120;
    uint64_t v47 = v128;
    uint64_t v48 = v129;
    uint64_t v49 = v126;
    uint64_t v50 = v127;
    sub_10009F3C8((uint64_t)v126);
    if ((*(unsigned int (**)(uint64_t (*)(), uint64_t, uint64_t))(v123 + 48))(v49, 1, v124) == 1)
    {
      id v51 = (uint64_t (*)(void))v126;
LABEL_7:
      sub_10009FA08((uint64_t)v51);
      uint64_t result = sub_1000E9D10();
      uint64_t v59 = result;
      int v60 = v125;
      goto LABEL_21;
    }
    sub_10009FA68((uint64_t)v126, v44, type metadata accessor for Item);
    uint64_t v61 = v43;
    sub_10009FAD0(v44, v43, type metadata accessor for Item);
    uint64_t v62 = (int *)v45;
    sub_10009FAD0(v47, v43 + *(int *)(v45 + 20), (uint64_t (*)(void))type metadata accessor for TodayContent);
    uint64_t v63 = *(void *)(v47 + v48) + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext;
    sub_10009FAD0(v63, v43 + *(int *)(v45 + 24), (uint64_t (*)(void))type metadata accessor for LayoutContext);
    if (*(unsigned char *)(v63 + *(int *)(v50 + 44)) == 1)
    {
      uint64_t v64 = v46;
      sub_1000E93D0();
      int v60 = v125;
      uint64_t v65 = v122;
    }
    else
    {
      int v130 = (int *)_swiftEmptyArrayStorage;
      sub_10009FC00(&qword_100138480, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      sub_10001B38C(&qword_1001386B0);
      sub_10009F9AC();
      uint64_t v64 = v46;
      uint64_t v65 = v122;
      sub_1000EA7C0();
      uint64_t v61 = v43;
      int v60 = v125;
    }
    uint64_t v92 = v121;
    uint64_t v93 = sub_10009FC00(&qword_100139DB0, (void (*)(uint64_t))type metadata accessor for RectangularContentView);
    sub_1000E9B70();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v64, v65);
    sub_10009FBA0(v61, type metadata accessor for RectangularContentView);
    int v130 = v62;
    uint64_t v131 = v93;
    swift_getOpaqueTypeConformance2();
    uint64_t v59 = sub_1000E9D10();
    uint64_t v94 = v44;
    goto LABEL_20;
  }
  uint64_t v52 = v127;
  v39(v36, enum case for InternalWidgetFamily.systemSmall(_:), v33);
  sub_1000EA420();
  sub_1000EA420();
  uint64_t v53 = v130;
  unsigned __int8 v54 = v132;
  v42(v36, v33);
  if (v53 == v54)
  {
    uint64_t v55 = v128;
    uint64_t v56 = v129;
    uint64_t v57 = v111;
    sub_10009F3C8(v111);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v57, 1, v124) == 1)
    {
      id v51 = (uint64_t (*)(void))v57;
      goto LABEL_7;
    }
    uint64_t v78 = v57;
    uint64_t v79 = v107;
    sub_10009FA68(v78, v107, type metadata accessor for Item);
    uint64_t v80 = v98;
    sub_10009FAD0(v79, v98, type metadata accessor for Item);
    uint64_t v126 = type metadata accessor for TodayContent;
    uint64_t v81 = v55;
    uint64_t v82 = v115;
    sub_10009FAD0(v55, v115, (uint64_t (*)(void))type metadata accessor for TodayContent);
    uint64_t v83 = v116;
    sub_10009FAD0(*(void *)(v55 + v56) + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext, v116, (uint64_t (*)(void))type metadata accessor for LayoutContext);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v85 = swift_getKeyPath();
    uint64_t v86 = (uint64_t)v100;
    *uint64_t v100 = v85;
    sub_10001B38C(&qword_100137A10);
    swift_storeEnumTagMultiPayload();
    uint64_t v87 = (uint64_t)v102;
    *uint64_t v102 = KeyPath;
    *(unsigned char *)(v87 + 8) = 0;
    *(void *)(v87 + 16) = swift_getKeyPath();
    *(void *)(v87 + 24) = 0;
    *(void *)(v87 + 32) = 0;
    *(void *)(v87 + 40) = 0;
    *(unsigned char *)(v87 + 48) = 0;
    uint64_t v88 = (int *)v104;
    sub_10002D5DC(v86, v87 + *(int *)(v104 + 24), &qword_100137A18);
    sub_10009FA68(v80, v87 + v88[7], type metadata accessor for Item);
    sub_10009FA68(v82, v87 + v88[8], (uint64_t (*)(void))v126);
    sub_10009FA68(v83, v87 + v88[9], (uint64_t (*)(void))type metadata accessor for LayoutContext);
    int v60 = v125;
    uint64_t v90 = v121;
    uint64_t v89 = v122;
    uint64_t v91 = v99;
    if (*(unsigned char *)(*(void *)(v81 + v129)
                  + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext
                  + *(int *)(v127 + 44)) == 1)
    {
      sub_1000E93D0();
    }
    else
    {
      int v130 = (int *)_swiftEmptyArrayStorage;
      sub_10009FC00(&qword_100138480, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      sub_10001B38C(&qword_1001386B0);
      sub_10009F9AC();
      sub_1000EA7C0();
    }
    uint64_t v97 = sub_10009FC00(&qword_100139DA8, (void (*)(uint64_t))type metadata accessor for SmallContentView);
    sub_1000E9B70();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v89);
    sub_10009FBA0(v87, type metadata accessor for SmallContentView);
    int v130 = v88;
    uint64_t v131 = v97;
    swift_getOpaqueTypeConformance2();
    uint64_t v59 = sub_1000E9D10();
    uint64_t v94 = v107;
LABEL_20:
    uint64_t result = sub_10009FBA0(v94, type metadata accessor for Item);
    goto LABEL_21;
  }
  uint64_t v66 = v128;
  uint64_t v67 = v115;
  sub_10009FAD0(v128, v115, (uint64_t (*)(void))type metadata accessor for TodayContent);
  uint64_t v68 = v129;
  uint64_t v69 = v116;
  sub_10009FAD0(*(void *)(v66 + v129) + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext, v116, (uint64_t (*)(void))type metadata accessor for LayoutContext);
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = (uint64_t)v112;
  *uint64_t v112 = v70;
  sub_10001B38C(&qword_1001391B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = v113;
  sub_10002D5DC(v71, v113, &qword_1001391B8);
  uint64_t v74 = v114;
  uint64_t v75 = v73 + *(int *)(v114 + 20);
  *(void *)uint64_t v75 = v72;
  *(void *)(v75 + 8) = 0;
  *(void *)(v75 + 16) = 0;
  *(void *)(v75 + 24) = 0;
  *(unsigned char *)(v75 + 32) = 0;
  sub_10009FA68(v67, v73 + *(int *)(v74 + 24), (uint64_t (*)(void))type metadata accessor for TodayContent);
  sub_10009FA68(v69, v73 + *(int *)(v74 + 28), (uint64_t (*)(void))type metadata accessor for LayoutContext);
  if (*(unsigned char *)(*(void *)(v66 + v68)
                + OBJC_IVAR____TtC10NewsToday220TrackableWidgetState_layoutContext
                + *(int *)(v52 + 44)) == 1)
  {
    uint64_t v76 = v108;
    sub_1000E93D0();
    int v60 = v125;
    uint64_t v77 = v122;
  }
  else
  {
    int v130 = (int *)_swiftEmptyArrayStorage;
    sub_10009FC00(&qword_100138480, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_10001B38C(&qword_1001386B0);
    sub_10009F9AC();
    uint64_t v76 = v108;
    uint64_t v77 = v122;
    sub_1000EA7C0();
    int v60 = v125;
  }
  uint64_t v95 = v121;
  uint64_t v96 = sub_10009FC00(&qword_100139DA0, (void (*)(uint64_t))type metadata accessor for RegularContentView);
  sub_1000E9B70();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v77);
  sub_10009FBA0(v73, (uint64_t (*)(void))type metadata accessor for RegularContentView);
  int v130 = (int *)v74;
  uint64_t v131 = v96;
  swift_getOpaqueTypeConformance2();
  uint64_t result = sub_1000E9D10();
  uint64_t v59 = result;
LABEL_21:
  *int v60 = v59;
  return result;
}

uint64_t sub_10009F3C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Item(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_10001B38C((uint64_t *)&unk_100137260);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NewsTimelineEntry();
  uint64_t v12 = sub_1000A06C0();
  if (v12[2])
  {
    sub_10009FAD0((uint64_t)v12 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v11, type metadata accessor for Item);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v11, 0, 1, v2);
  }
  else
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v11, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    uint64_t v14 = a1;
    uint64_t v15 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v14, v15, 1, v2);
  }
  sub_10009FA68((uint64_t)v11, (uint64_t)v8, type metadata accessor for Item);
  sub_10009FAD0((uint64_t)v8, (uint64_t)v6, type metadata accessor for Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    sub_10009FA68((uint64_t)v8, a1, type metadata accessor for Item);
    uint64_t v14 = a1;
    uint64_t v15 = 0;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v14, v15, 1, v2);
  }
  sub_10009FA68((uint64_t)v8, a1, type metadata accessor for Item);
  v13((char *)a1, 0, 1, v2);
  return sub_10009FBA0((uint64_t)v6, type metadata accessor for Item);
}

uint64_t sub_10009F69C()
{
  return sub_1000E9590();
}

uint64_t sub_10009F6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009F86C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10009F6EC()
{
  sub_1000E9570();
  sub_10009FC00(&qword_100139DB8, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_1000E95F0();
  return v1;
}

uint64_t sub_10009F768@<X0>(unsigned char *a1@<X8>)
{
  sub_1000E9570();
  sub_10009FC00(&qword_100139DB8, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_1000E95F0();
  *a1 = v3;
  return result;
}

uint64_t sub_10009F7F8()
{
  return sub_1000E9420();
}

uint64_t sub_10009F81C()
{
  return sub_1000E9420();
}

uint64_t sub_10009F840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009F86C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10009F86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10009F93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009F86C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10009F97C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E95A0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

unint64_t sub_10009F9AC()
{
  unint64_t result = qword_1001386B8;
  if (!qword_1001386B8)
  {
    sub_10001B3D0(&qword_1001386B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001386B8);
  }
  return result;
}

uint64_t sub_10009FA08(uint64_t a1)
{
  uint64_t v2 = sub_10001B38C((uint64_t *)&unk_100137260);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009FA68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009FAD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009FB3C()
{
  return sub_1000E9590();
}

uint64_t sub_10009FB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009F86C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10009FBA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10009FC00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10009FC48()
{
  return &protocol witness table for AnyView;
}

uint64_t sub_10009FC54()
{
  uint64_t v1 = sub_1000E9B90();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + *(int *)(type metadata accessor for TodayContent() + 28)), "widgetConfig"));
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v6 = v5;
  id v7 = [v5 audioIndicatorColor];

  if (!v7) {
    goto LABEL_8;
  }
  uint64_t v8 = sub_1000EA2B0();
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    NSString v12 = sub_1000EA280();
    id v13 = [self colorWithHexString:v12];
    goto LABEL_9;
  }
  NSString v12 = sub_1000EA280();
  swift_bridgeObjectRelease();
  id v13 = [self colorWithHexString:v12];
LABEL_9:
  id v14 = v13;

  [v14 red];
  [v14 green];
  [v14 blue];
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
  uint64_t v15 = sub_1000E9C30();

  return v15;
}

uint64_t sub_10009FE98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v63 = a7;
  uint64_t v64 = a8;
  int v56 = a6;
  uint64_t v62 = a5;
  uint64_t v55 = a2;
  uint64_t v17 = sub_10001B38C((uint64_t *)&unk_10013A350);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v26 = sub_10001B38C(&qword_1001385E0);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (uint64_t *)((char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = a1;
  id v29 = [a1 banner];
  if (v29)
  {
    uint64_t v30 = v29;
    sub_100084BDC(v29, a4, (uint64_t)v25);
    uint64_t v31 = a3;
    uint64_t v32 = sub_100084F20(v30, a3);
    sub_10002DA34((uint64_t)v25, (uint64_t)v23, (uint64_t *)&unk_1001370F0);
    sub_10001E288(v30, (uint64_t)v23, v32, v28);
    sub_100028B6C((uint64_t)v25, (uint64_t *)&unk_1001370F0);
    uint64_t v33 = type metadata accessor for Banner();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v28, 0, 1, v33);
  }
  else
  {
    uint64_t v31 = a3;
    uint64_t v34 = type metadata accessor for Banner();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v28, 1, 1, v34);
  }
  uint64_t v59 = a12;
  uint64_t v60 = a13;
  uint64_t v57 = a10;
  uint64_t v58 = a11;
  char v35 = sub_1000A0A0C(v65);
  id v36 = (id)NewsCoreUserDefaults();
  NSString v37 = sub_1000EA280();
  unsigned int v38 = [v36 BOOLForKey:v37];

  uint64_t v61 = v28;
  if (v38)
  {
    sub_1000E8C40();
    uint64_t v39 = sub_1000E8C50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v19, 0, 1, v39);
  }
  else
  {
    uint64_t v40 = sub_1000E8C50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v19, 1, 1, v40);
  }
  char v41 = v56;
  uint64_t v42 = v55;
  uint64_t v43 = sub_100020A28(a4, a4[3]);
  uint64_t v44 = a4;
  uint64_t v45 = v65;
  uint64_t v46 = sub_1000A5080(v31, *v43, v62, v35 & 1, (uint64_t)v19, v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100028B6C((uint64_t)v19, (uint64_t *)&unk_10013A350);
  uint64_t v47 = v63;
  sub_1000A0AFC(v63, v44, (uint64_t)v25);
  sub_100028B6C(v47, (uint64_t *)&unk_1001370F0);
  sub_100020AC0((uint64_t)v44);
  *a9 = v45;
  uint64_t v48 = (int *)type metadata accessor for TodayContent();
  sub_10002D5DC((uint64_t)v61, (uint64_t)a9 + v48[5], &qword_1001385E0);
  *(void *)((char *)a9 + v48[6]) = v46;
  *(void *)((char *)a9 + v48[7]) = v42;
  *((unsigned char *)a9 + v48[8]) = v41 & 1;
  uint64_t result = sub_10002D5DC((uint64_t)v25, (uint64_t)a9 + v48[9], (uint64_t *)&unk_1001370F0);
  *(void *)((char *)a9 + v48[10]) = v64;
  uint64_t v50 = (void *)((char *)a9 + v48[11]);
  uint64_t v51 = v58;
  *uint64_t v50 = v57;
  v50[1] = v51;
  uint64_t v52 = (void *)((char *)a9 + v48[12]);
  uint64_t v53 = v60;
  *uint64_t v52 = v59;
  v52[1] = v53;
  return result;
}

uint64_t sub_1000A02F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v6 = type metadata accessor for Section();
  unint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  unint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v39 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v39 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = (int *)type metadata accessor for TodayContent();
  unint64_t v20 = *(unint64_t *)((char *)v4 + v19[6]);
  uint64_t v21 = *(void *)(v20 + 16);
  swift_bridgeObjectRetain();
  if (!v21)
  {
    sub_1000EA610();
    sub_100022374(0, (unint64_t *)&qword_100138300);
    uint64_t v24 = (void *)sub_1000EA720();
    sub_1000E9220();

    goto LABEL_7;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v22 = *(void *)(v20 + 16);
    if (v22) {
      goto LABEL_4;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v20 = sub_1000A5028(v20);
  unint64_t v22 = *(void *)(v20 + 16);
  if (!v22) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v21 = (uint64_t)v10;
  unint64_t v23 = v22 - 1;
  unint64_t v40 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v39 = *(void *)(v7 + 72);
  sub_1000A5F70(v20 + v40 + v39 * (v22 - 1), (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Section);
  *(void *)(v20 + 16) = v23;
  sub_1000A5F70((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Section);
  sub_10002C2F8(v41, v42, (uint64_t)v13);
  sub_1000A5F08((uint64_t)v13, v21, (uint64_t (*)(void))type metadata accessor for Section);
  unint64_t v7 = *(void *)(v20 + 16);
  unint64_t v22 = *(void *)(v20 + 24);
  uint64_t v16 = (char *)(v7 + 1);
  if (v7 >= v22 >> 1) {
LABEL_10:
  }
    unint64_t v20 = sub_1000A4AB4(v22 > 1, (int64_t)v16, 1, v20, &qword_100139F80, (uint64_t (*)(void))type metadata accessor for Section, (uint64_t (*)(void))type metadata accessor for Section);
  *(void *)(v20 + 16) = v16;
  sub_1000A5F70(v21, v20 + v40 + v7 * v39, (uint64_t (*)(void))type metadata accessor for Section);
  sub_1000A5C40((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Section);
  sub_1000A5C40((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Section);
LABEL_7:
  uint64_t v25 = *v4;
  sub_10002DA34((uint64_t)v4 + v19[5], (uint64_t)a3 + v19[5], &qword_1001385E0);
  uint64_t v26 = *(uint64_t *)((char *)v4 + v19[7]);
  char v27 = *((unsigned char *)v4 + v19[8]);
  sub_10002DA34((uint64_t)v4 + v19[9], (uint64_t)a3 + v19[9], (uint64_t *)&unk_1001370F0);
  uint64_t v28 = *(uint64_t *)((char *)v4 + v19[10]);
  id v29 = (uint64_t *)((char *)v4 + v19[11]);
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v32 = (uint64_t *)((char *)v4 + v19[12]);
  *a3 = v25;
  *(void *)((char *)a3 + v19[6]) = v20;
  *(void *)((char *)a3 + v19[7]) = v26;
  *((unsigned char *)a3 + v19[8]) = v27;
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *(void *)((char *)a3 + v19[10]) = v28;
  char v35 = (void *)((char *)a3 + v19[11]);
  *char v35 = v30;
  v35[1] = v31;
  id v36 = (void *)((char *)a3 + v19[12]);
  *id v36 = v34;
  v36[1] = v33;
  swift_bridgeObjectRetain();
  id v37 = v25;
  swift_unknownObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

void *sub_1000A06C0()
{
  uint64_t v1 = type metadata accessor for Item(0);
  uint64_t v21 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Section();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + *(int *)(type metadata accessor for TodayContent() + 24));
  uint64_t v23 = *(void *)(v7 + 16);
  if (v23)
  {
    uint64_t v22 = v7 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t result = (void *)swift_bridgeObjectRetain();
    unint64_t v9 = 0;
    unint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v19 = v7;
    uint64_t v20 = v5;
    while (v9 < *(void *)(v7 + 16))
    {
      uint64_t v11 = v24;
      sub_1000A5F08(v22 + *(void *)(v5 + 72) * v9, v24, (uint64_t (*)(void))type metadata accessor for Section);
      uint64_t v12 = *(void *)(v11 + 16);
      swift_bridgeObjectRetain();
      sub_1000A5C40(v11, (uint64_t (*)(void))type metadata accessor for Section);
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        unint64_t v14 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        uint64_t v15 = v12 + v14;
        uint64_t v16 = *(void *)(v21 + 72);
        do
        {
          sub_1000A5F08(v15, (uint64_t)v3, type metadata accessor for Item);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v10 = (void *)sub_1000A4AB4(0, v10[2] + 1, 1, (unint64_t)v10, (uint64_t *)&unk_100139F88, type metadata accessor for Item, type metadata accessor for Item);
          }
          unint64_t v18 = v10[2];
          unint64_t v17 = v10[3];
          if (v18 >= v17 >> 1) {
            unint64_t v10 = (void *)sub_1000A4AB4(v17 > 1, v18 + 1, 1, (unint64_t)v10, (uint64_t *)&unk_100139F88, type metadata accessor for Item, type metadata accessor for Item);
          }
          void v10[2] = v18 + 1;
          sub_1000A5F70((uint64_t)v3, (uint64_t)v10 + v14 + v18 * v16, type metadata accessor for Item);
          v15 += v16;
          --v13;
        }
        while (v13);
        uint64_t result = (void *)swift_bridgeObjectRelease();
        uint64_t v7 = v19;
        uint64_t v5 = v20;
      }
      else
      {
        uint64_t result = (void *)swift_bridgeObjectRelease();
      }
      if (++v9 == v23)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1000A0A0C(void *a1)
{
  id v2 = [a1 banner];
  if (v2 && (v3 = v2, id v4 = [v2 imageMethod], v3, v4 == (id)1))
  {
    char v5 = 0;
  }
  else
  {
    id v6 = [a1 sourceIdentifier];
    uint64_t v7 = sub_1000EA2B0();
    uint64_t v9 = v8;

    if (v7 == sub_1000EA2B0() && v9 == v10) {
      char v5 = 1;
    }
    else {
      char v5 = sub_1000EAB20();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t sub_1000A0AFC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E8B60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002DA34(a1, (uint64_t)v8, (uint64_t *)&unk_1001370F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100028B6C((uint64_t)v8, (uint64_t *)&unk_1001370F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, 1, 1, v9);
  }
  else
  {
    unint64_t v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v14(v12, v8, v9);
    if (qword_100135D38 != -1) {
      swift_once();
    }
    sub_10001C4C8(v9, (uint64_t)qword_10014BBD8);
    sub_1000A5BE4((unint64_t *)&qword_100139F70, (void (*)(uint64_t))&type metadata accessor for URL);
    if (sub_1000EA240())
    {
      v14((char *)a3, v12, v9);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
    }
    else
    {
      uint64_t v15 = self;
      sub_1000E8AE0(v16);
      unint64_t v18 = v17;
      id v19 = [v15 engagementDescriptorWithTargetURL:v17];

      sub_100020A28(a2, a2[3]);
      sub_1000D0B14(v19, a3);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
}

unint64_t sub_1000A0DC8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72656E6E6162;
      break;
    case 2:
      unint64_t result = 0x736E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x666E496863746566;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x6F74537465737361;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000A0EE4()
{
  return sub_1000A0DC8(*v0);
}

uint64_t sub_1000A0EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A582C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000A0F14(uint64_t a1)
{
  unint64_t v2 = sub_1000A1B08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A0F50(uint64_t a1)
{
  unint64_t v2 = sub_1000A1B08();

  return CodingKey.debugDescription.getter(a1, v2);
}

void TodayContent.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_10001B38C((uint64_t *)&unk_1001370F0);
  __chkstk_darwin(v3);
  char v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001B38C(&qword_1001385E0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001B38C(&qword_100139DC0);
  uint64_t v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (int *)type metadata accessor for TodayContent();
  __chkstk_darwin(v44);
  uint64_t v45 = (id *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v42 = a1;
  sub_100020A28(a1, v13);
  sub_1000A1B08();
  uint64_t v14 = (uint64_t)v43;
  sub_1000EAC00();
  if (v14)
  {
    LODWORD(v15) = 0;
    char v16 = 0;
    unint64_t v17 = v45;
  }
  else
  {
    uint64_t v43 = v8;
    uint64_t v38 = v3;
    uint64_t v39 = v5;
    char v47 = 0;
    sub_100022164();
    sub_1000EAA70();
    long long v18 = v46;
    uint64_t v19 = sub_100022374(0, (unint64_t *)&unk_10013A600);
    sub_100022374(0, &qword_100139DD0);
    uint64_t v20 = (void *)sub_1000EA630();
    unint64_t v17 = v45;
    uint64_t v36 = v19;
    if (v20)
    {
      *uint64_t v45 = v20;
      char v47 = 3;
      id v37 = v20;
      sub_1000EAA70();
      unint64_t v35 = *((void *)&v18 + 1);
      long long v22 = v46;
      sub_100022374(0, &qword_100139DE0);
      uint64_t v23 = sub_1000EA630();
      uint64_t v36 = 0;
      uint64_t v15 = (void *)v23;
      uint64_t v34 = v22;
      if (v23)
      {
        unint64_t v33 = *((void *)&v22 + 1);
        *(id *)((char *)v17 + v44[7]) = (id)v23;
        LOBYTE(v46) = 1;
        sub_1000A1BB0();
        id v24 = v15;
        uint64_t v25 = v36;
        sub_1000EAA70();
        if (!v25)
        {
          uint64_t v28 = v44;
          char v27 = v45;
          sub_10002D5DC(*((uint64_t *)&v18 + 1), (uint64_t)v45 + v44[5], &qword_1001385E0);
          sub_10001B38C(&qword_100139DF8);
          char v47 = 2;
          sub_1000A1C54();
          sub_1000EAA70();
          uint64_t v43 = (char *)v18;
          *(id *)((char *)v27 + v28[6]) = (id)v46;
          LOBYTE(v46) = 4;
          id v29 = v28;
          *((unsigned char *)v27 + v28[8]) = sub_1000EAA40() & 1;
          LOBYTE(v46) = 5;
          sub_10002D494();
          uint64_t v30 = (uint64_t)v39;
          sub_1000EAA70();
          sub_10002D5DC(v30, (uint64_t)v27 + v29[9], (uint64_t *)&unk_1001370F0);
          type metadata accessor for TrackableWidgetState();
          char v47 = 6;
          sub_1000A5BE4((unint64_t *)&unk_100139E20, (void (*)(uint64_t))type metadata accessor for TrackableWidgetState);
          sub_1000EAA70();
          *(id *)((char *)v45 + v44[10]) = (id)v46;
          sub_10001B38C(&qword_10013A640);
          char v47 = 7;
          sub_100020E84(&qword_100139E30);
          sub_1000EAA70();
          *(_OWORD *)((char *)v45 + v44[11]) = v46;
          char v47 = 8;
          sub_1000EAA70();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
          sub_1000221B8((uint64_t)v43, v35);

          sub_1000221B8(v34, v33);
          uint64_t v31 = (uint64_t)v45;
          *(_OWORD *)((char *)v45 + v44[12]) = v46;
          sub_1000A5F08(v31, v40, (uint64_t (*)(void))type metadata accessor for TodayContent);
          sub_100020AC0((uint64_t)v42);
          sub_1000A5C40(v31, (uint64_t (*)(void))type metadata accessor for TodayContent);
          return;
        }
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
        sub_1000221B8(v18, v35);

        sub_1000221B8(v34, v33);
        char v16 = 9;
        LODWORD(v15) = 1;
        unint64_t v17 = v45;
      }
      else
      {
        sub_1000A1B5C();
        swift_allocError();
        char v16 = 1;
        unsigned char *v26 = 1;
        swift_willThrow();
        sub_1000221B8(v18, v35);
        sub_1000221B8(v34, *((unint64_t *)&v22 + 1));

        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
      }
    }
    else
    {
      sub_1000A1B5C();
      swift_allocError();
      unsigned char *v21 = 0;
      swift_willThrow();
      sub_1000221B8(v18, *((unint64_t *)&v18 + 1));
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
      LODWORD(v15) = 0;
      char v16 = 0;
    }
  }
  sub_100020AC0((uint64_t)v42);
  if (v16) {

  }
  if (v15) {
    swift_unknownObjectRelease();
  }
}

uint64_t type metadata accessor for TodayContent()
{
  uint64_t result = qword_100139EE0;
  if (!qword_100139EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000A1B08()
{
  unint64_t result = qword_100139DC8;
  if (!qword_100139DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139DC8);
  }
  return result;
}

unint64_t sub_1000A1B5C()
{
  unint64_t result = qword_100139DD8;
  if (!qword_100139DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139DD8);
  }
  return result;
}

unint64_t sub_1000A1BB0()
{
  unint64_t result = qword_100139DE8;
  if (!qword_100139DE8)
  {
    sub_10001B3D0(&qword_1001385E0);
    sub_1000A5BE4(&qword_100139DF0, (void (*)(uint64_t))type metadata accessor for Banner);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139DE8);
  }
  return result;
}

unint64_t sub_1000A1C54()
{
  unint64_t result = qword_100139E00;
  if (!qword_100139E00)
  {
    sub_10001B3D0(&qword_100139DF8);
    sub_1000A5BE4(&qword_100139E08, (void (*)(uint64_t))type metadata accessor for Section);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139E00);
  }
  return result;
}

uint64_t TodayContent.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_10001B38C(&qword_100139E38);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A28(a1, a1[3]);
  sub_1000A1B08();
  sub_1000EAC20();
  uint64_t v8 = self;
  uint64_t v9 = *v2;
  id v39 = 0;
  id v10 = [v8 archivedDataWithRootObject:v9 requiringSecureCoding:1 error:&v39];
  id v11 = v39;
  if (v10)
  {
    uint64_t v36 = v5;
    uint64_t v12 = (void *)sub_1000E8B90();
    unint64_t v14 = v13;

    id v39 = v12;
    unint64_t v40 = v14;
    char v38 = 0;
    sub_1000222B8();
    uint64_t v15 = v37;
    sub_1000EAAE0();
    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v4);
      return sub_1000221B8((uint64_t)v12, v14);
    }
    else
    {
      unint64_t v34 = 0;
      uint64_t v35 = (uint64_t)v12;
      uint64_t v37 = v4;
      long long v18 = (int *)type metadata accessor for TodayContent();
      uint64_t v19 = v2;
      uint64_t v20 = *(uint64_t *)((char *)v2 + v18[7]);
      id v39 = 0;
      id v21 = [v8 archivedDataWithRootObject:v20 requiringSecureCoding:1 error:&v39];
      id v22 = v39;
      if (v21)
      {
        uint64_t v23 = (void *)sub_1000E8B90();
        unint64_t v25 = v24;

        id v39 = v23;
        unint64_t v40 = v25;
        char v38 = 3;
        uint64_t v26 = v37;
        unint64_t v27 = v34;
        sub_1000EAAE0();
        if (v27)
        {
          (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v26);
          sub_1000221B8(v35, v14);
          return sub_1000221B8((uint64_t)v23, v25);
        }
        else
        {
          unint64_t v34 = v25;
          LOBYTE(v39) = 1;
          sub_10001B38C(&qword_1001385E0);
          sub_1000A23B4();
          sub_1000EAAE0();
          id v39 = *(id *)((char *)v2 + v18[6]);
          char v38 = 2;
          swift_bridgeObjectRetain();
          sub_10001B38C(&qword_100139DF8);
          sub_1000A2458();
          sub_1000EAAE0();
          swift_bridgeObjectRelease();
          LOBYTE(v39) = 4;
          sub_1000EAAB0();
          LOBYTE(v39) = 5;
          sub_10001B38C((uint64_t *)&unk_1001370F0);
          sub_10002D75C();
          sub_1000EAAE0();
          id v39 = *(id *)((char *)v2 + v18[10]);
          char v38 = 6;
          type metadata accessor for TrackableWidgetState();
          sub_1000A5BE4(&qword_100139E78, (void (*)(uint64_t))type metadata accessor for TrackableWidgetState);
          swift_retain();
          sub_1000EAAE0();
          swift_release();
          id v29 = (char *)v2 + v18[11];
          unint64_t v30 = *((void *)v29 + 1);
          id v39 = *(id *)v29;
          unint64_t v40 = v30;
          char v38 = 7;
          swift_bridgeObjectRetain();
          sub_10001B38C(&qword_10013A640);
          v33[1] = sub_100020E84((unint64_t *)&qword_100139E80);
          sub_1000EAAE0();
          swift_bridgeObjectRelease();
          uint64_t v31 = (char *)v19 + v18[12];
          unint64_t v32 = *((void *)v31 + 1);
          id v39 = *(id *)v31;
          unint64_t v40 = v32;
          char v38 = 8;
          swift_bridgeObjectRetain();
          sub_1000EAAE0();
          sub_1000221B8((uint64_t)v23, v34);
          sub_1000221B8(v35, v14);
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(void, uint64_t))(v36 + 8))(0, v26);
        }
      }
      else
      {
        uint64_t v28 = v22;
        sub_1000E8A40();

        swift_willThrow();
        sub_1000221B8(v35, v14);
        return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v37);
      }
    }
  }
  else
  {
    unint64_t v17 = v11;
    sub_1000E8A40();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

unint64_t sub_1000A23B4()
{
  unint64_t result = qword_100139E48;
  if (!qword_100139E48)
  {
    sub_10001B3D0(&qword_1001385E0);
    sub_1000A5BE4(&qword_100139E50, (void (*)(uint64_t))type metadata accessor for Banner);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139E48);
  }
  return result;
}

unint64_t sub_1000A2458()
{
  unint64_t result = qword_100139E58;
  if (!qword_100139E58)
  {
    sub_10001B3D0(&qword_100139DF8);
    sub_1000A5BE4((unint64_t *)&unk_100139E60, (void (*)(uint64_t))type metadata accessor for Section);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139E58);
  }
  return result;
}

void sub_1000A24FC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1000A2514(void *a1)
{
  return TodayContent.encode(to:)(a1);
}

void **initializeBufferWithCopyOfBuffer for TodayContent(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void **)((char *)a1 + v8);
    id v10 = (void **)((char *)a2 + v8);
    id v11 = (int *)type metadata accessor for Banner();
    uint64_t v12 = (void *)*((void *)v11 - 1);
    unint64_t v13 = (unsigned int (*)(void *, uint64_t, int *))v12[6];
    unint64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_10001B38C(&qword_1001385E0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      int v56 = v12;
      uint64_t v16 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v16;
      uint64_t v17 = v10[3];
      uint64_t v9[2] = v10[2];
      v9[3] = v17;
      uint64_t v18 = v10[5];
      void v9[4] = v10[4];
      v9[5] = v18;
      uint64_t v19 = v11[7];
      __dst = (char *)v9 + v19;
      uint64_t v55 = (char *)v10 + v19;
      uint64_t v20 = sub_1000E8B60();
      uint64_t v52 = *(void *)(v20 - 8);
      uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54(v55, 1, v21))
      {
        uint64_t v22 = sub_10001B38C((uint64_t *)&unk_1001370F0);
        memcpy(__dst, v55, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v55, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v21);
      }
      uint64_t v23 = v11[8];
      unint64_t v24 = (void *)((char *)v9 + v23);
      unint64_t v25 = (void *)((char *)v10 + v23);
      uint64_t v26 = v25[1];
      *unint64_t v24 = *v25;
      v24[1] = v26;
      uint64_t v27 = v11[9];
      uint64_t v28 = *(void **)((char *)v10 + v27);
      swift_bridgeObjectRetain();
      if (v28 != (void *)1) {
        id v29 = v28;
      }
      *(void *)((char *)v9 + v27) = v28;
      uint64_t v30 = v11[10];
      uint64_t v31 = (char *)v9 + v30;
      unint64_t v32 = (char *)v10 + v30;
      unint64_t v33 = *(void **)v32;
      unint64_t v34 = (void *)*((void *)v32 + 1);
      char v35 = v32[16];
      sub_10001D614(*(void **)v32, v34);
      *(void *)uint64_t v31 = v33;
      *((void *)v31 + 1) = v34;
      v31[16] = v35;
      (*((void (**)(void *, void, uint64_t, int *))v56 + 7))(v9, 0, 1, v11);
    }
    uint64_t v36 = a3[7];
    *(void **)((char *)v7 + a3[6]) = *(void **)((char *)a2 + a3[6]);
    *(void **)((char *)v7 + v36) = *(void **)((char *)a2 + v36);
    uint64_t v37 = a3[9];
    *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v57 = (char *)v7 + v37;
    char v38 = (char *)a2 + v37;
    uint64_t v39 = sub_1000E8B60();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v41(v38, 1, v39))
    {
      uint64_t v42 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(v57, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v57, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v57, 0, 1, v39);
    }
    uint64_t v43 = a3[11];
    *(void **)((char *)v7 + a3[10]) = *(void **)((char *)a2 + a3[10]);
    uint64_t v44 = (void **)((char *)v7 + v43);
    uint64_t v45 = (void **)((char *)a2 + v43);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = a3[12];
    uint64_t v48 = (void **)((char *)v7 + v47);
    uint64_t v49 = (void **)((char *)a2 + v47);
    uint64_t v50 = v49[1];
    void *v48 = *v49;
    v48[1] = v50;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for TodayContent(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = (int *)type metadata accessor for Banner();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = &v4[v5[7]];
    uint64_t v7 = sub_1000E8B60();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)&v4[v5[9]];
    if (v9 != (void *)1) {

    }
    sub_10001D758(*(void **)&v4[v5[10]], *(void **)&v4[v5[10] + 8]);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  id v10 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v11 = sub_1000E8B60();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void **initializeWithCopy for TodayContent(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (void **)((char *)a2 + v7);
  id v10 = (int *)type metadata accessor for Banner();
  uint64_t v11 = (void *)*((void *)v10 - 1);
  uint64_t v12 = (unsigned int (*)(void *, uint64_t, int *))v11[6];
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_10001B38C(&qword_1001385E0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v55 = v11;
    uint64_t v15 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v15;
    uint64_t v16 = v9[3];
    void v8[2] = v9[2];
    v8[3] = v16;
    uint64_t v17 = v9[5];
    v8[4] = v9[4];
    void v8[5] = v17;
    uint64_t v18 = v10[7];
    uint64_t v53 = (char *)v9 + v18;
    __dst = (char *)v8 + v18;
    uint64_t v19 = sub_1000E8B60();
    uint64_t v51 = *(void *)(v19 - 8);
    uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52(v53, 1, v20))
    {
      uint64_t v21 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v53, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dst, v53, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v20);
    }
    uint64_t v22 = v10[8];
    uint64_t v23 = (void *)((char *)v8 + v22);
    unint64_t v24 = (void *)((char *)v9 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v10[9];
    uint64_t v27 = *(void **)((char *)v9 + v26);
    swift_bridgeObjectRetain();
    if (v27 != (void *)1) {
      id v28 = v27;
    }
    *(void *)((char *)v8 + v26) = v27;
    uint64_t v29 = v10[10];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    unint64_t v32 = *(void **)v31;
    unint64_t v33 = (void *)*((void *)v31 + 1);
    char v34 = v31[16];
    sub_10001D614(*(void **)v31, v33);
    *(void *)uint64_t v30 = v32;
    *((void *)v30 + 1) = v33;
    v30[16] = v34;
    (*((void (**)(void *, void, uint64_t, int *))v55 + 7))(v8, 0, 1, v10);
  }
  uint64_t v35 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *(void **)((char *)a1 + v35) = *(void **)((char *)a2 + v35);
  uint64_t v36 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  int v56 = (char *)a1 + v36;
  uint64_t v37 = (char *)a2 + v36;
  uint64_t v38 = sub_1000E8B60();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v40(v37, 1, v38))
  {
    uint64_t v41 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v56, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v56, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v56, 0, 1, v38);
  }
  uint64_t v42 = a3[11];
  *(void **)((char *)a1 + a3[10]) = *(void **)((char *)a2 + a3[10]);
  uint64_t v43 = (void **)((char *)a1 + v42);
  uint64_t v44 = (void **)((char *)a2 + v42);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a3[12];
  uint64_t v47 = (void **)((char *)a1 + v46);
  uint64_t v48 = (void **)((char *)a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **assignWithCopy for TodayContent(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  id v10 = (void **)((char *)a1 + v9);
  uint64_t v11 = (void **)((char *)a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Banner();
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1000A5C40((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_7;
    }
    *id v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void v10[2] = v11[2];
    _OWORD v10[3] = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v10[4] = v11[4];
    v10[5] = v11[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = v12[7];
    uint64_t v23 = (char *)v10 + v22;
    int __dsta = (char *)v11 + v22;
    uint64_t v24 = sub_1000E8B60();
    uint64_t v77 = *(void *)(v24 - 8);
    uint64_t v78 = v23;
    uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    LODWORD(v23) = v25(v23, 1, v24);
    int v26 = v25(__dsta, 1, v24);
    if (v23)
    {
      if (v26)
      {
        size_t v27 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        id v28 = v78;
LABEL_17:
        memcpy(v28, __dsta, v27);
        goto LABEL_20;
      }
      (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v78, __dsta, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v24);
    }
    else
    {
      if (v26)
      {
        (*(void (**)(void *, uint64_t))(v77 + 8))(v78, v24);
        size_t v27 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        id v28 = v78;
        goto LABEL_17;
      }
      (*(void (**)(void *, char *, uint64_t))(v77 + 24))(v78, __dsta, v24);
    }
LABEL_20:
    uint64_t v41 = v12[8];
    uint64_t v42 = (void *)((char *)v10 + v41);
    uint64_t v43 = (void *)((char *)v11 + v41);
    *uint64_t v42 = *v43;
    v42[1] = v43[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v44 = v12[9];
    uint64_t v45 = (void *)((char *)v10 + v44);
    uint64_t v46 = *(void **)((char *)v10 + v44);
    uint64_t v47 = *(void **)((char *)v11 + v44);
    if (v46 == (void *)1)
    {
      if (v47 != (void *)1)
      {
        *uint64_t v45 = v47;
        id v48 = v47;
LABEL_27:
        uint64_t v50 = v12[10];
        uint64_t v51 = (char *)v10 + v50;
        uint64_t v52 = (char *)v11 + v50;
        uint64_t v53 = *(void **)v52;
        uint64_t v54 = (void *)*((void *)v52 + 1);
        char v55 = v52[16];
        sub_10001D614(*(void **)v52, v54);
        int v56 = *(void **)v51;
        uint64_t v57 = (void *)*((void *)v51 + 1);
        *(void *)uint64_t v51 = v53;
        *((void *)v51 + 1) = v54;
        v51[16] = v55;
        sub_10001D758(v56, v57);
        goto LABEL_28;
      }
    }
    else
    {
      if (v47 != (void *)1)
      {
        *uint64_t v45 = v47;
        id v49 = v47;

        goto LABEL_27;
      }
      sub_10001DBE4((id *)((char *)v10 + v44));
      uint64_t v47 = *(void **)((char *)v11 + v44);
    }
    *uint64_t v45 = v47;
    goto LABEL_27;
  }
  if (v16)
  {
LABEL_7:
    uint64_t v21 = sub_10001B38C(&qword_1001385E0);
    memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_28;
  }
  *id v10 = *v11;
  v10[1] = v11[1];
  void v10[2] = v11[2];
  _OWORD v10[3] = v11[3];
  v10[4] = v11[4];
  v10[5] = v11[5];
  uint64_t v17 = v12[7];
  __dst = (char *)v10 + v17;
  uint64_t v76 = (char *)v11 + v17;
  uint64_t v18 = sub_1000E8B60();
  uint64_t v74 = *(void *)(v18 - 8);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75(v76, 1, v19))
  {
    uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v76, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, v76, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v19);
  }
  uint64_t v29 = v12[8];
  uint64_t v30 = (void *)((char *)v10 + v29);
  uint64_t v31 = (void *)((char *)v11 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  uint64_t v32 = v12[9];
  unint64_t v33 = *(void **)((char *)v11 + v32);
  swift_bridgeObjectRetain();
  if (v33 != (void *)1) {
    id v34 = v33;
  }
  *(void *)((char *)v10 + v32) = v33;
  uint64_t v35 = v12[10];
  uint64_t v36 = (char *)v10 + v35;
  uint64_t v37 = (char *)v11 + v35;
  uint64_t v38 = *(void **)v37;
  uint64_t v39 = (void *)*((void *)v37 + 1);
  char v40 = v37[16];
  sub_10001D614(*(void **)v37, v39);
  *(void *)uint64_t v36 = v38;
  *((void *)v36 + 1) = v39;
  v36[16] = v40;
  (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_28:
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v58 = a3[9];
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  uint64_t v61 = sub_1000E8B60();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  int v64 = v63(v59, 1, v61);
  int v65 = v63(v60, 1, v61);
  if (!v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
    goto LABEL_33;
  }
  if (v65)
  {
LABEL_33:
    uint64_t v66 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v59, v60, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_34:
  *(void **)((char *)a1 + a3[10]) = *(void **)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v67 = a3[11];
  uint64_t v68 = (void **)((char *)a1 + v67);
  uint64_t v69 = (void **)((char *)a2 + v67);
  void *v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = a3[12];
  uint64_t v71 = (void **)((char *)a1 + v70);
  uint64_t v72 = (void **)((char *)a2 + v70);
  *uint64_t v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for TodayContent(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  id v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for Banner();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10001B38C(&qword_1001385E0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v7[2] = v8[2];
    uint64_t v13 = v9[7];
    __dst = (char *)v7 + v13;
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = sub_1000E8B60();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    uint64_t v18 = v9[10];
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)v8 + v18;
    v19[16] = v20[16];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v21 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v22 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1000E8B60();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)((char *)a2 + v28);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void **assignWithTake for TodayContent(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (void **)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Banner();
  uint64_t v11 = *((void *)v10 - 1);
  long long v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1000A5C40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Banner);
      goto LABEL_7;
    }
    uint64_t v22 = v9[1];
    *id v8 = *v9;
    v8[1] = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = v9[3];
    void v8[2] = v9[2];
    v8[3] = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = v9[5];
    v8[4] = v9[4];
    void v8[5] = v24;
    swift_bridgeObjectRelease();
    uint64_t v25 = v10[7];
    uint64_t v26 = (char *)v8 + v25;
    int __dsta = (char *)v9 + v25;
    uint64_t v27 = sub_1000E8B60();
    uint64_t v70 = *(void *)(v27 - 8);
    uint64_t v71 = v26;
    uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
    LODWORD(v26) = v28(v26, 1, v27);
    int v29 = v28(__dsta, 1, v27);
    if (v26)
    {
      if (v29)
      {
        size_t v30 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v31 = v71;
LABEL_15:
        memcpy(v31, __dsta, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, char *, uint64_t))(v70 + 32))(v71, __dsta, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v27);
    }
    else
    {
      if (v29)
      {
        (*(void (**)(void *, uint64_t))(v70 + 8))(v71, v27);
        size_t v30 = *(void *)(*(void *)(sub_10001B38C((uint64_t *)&unk_1001370F0) - 8) + 64);
        uint64_t v31 = v71;
        goto LABEL_15;
      }
      (*(void (**)(void *, char *, uint64_t))(v70 + 40))(v71, __dsta, v27);
    }
LABEL_18:
    uint64_t v35 = v10[8];
    uint64_t v36 = (void *)((char *)v8 + v35);
    uint64_t v37 = (void *)((char *)v9 + v35);
    uint64_t v39 = *v37;
    uint64_t v38 = v37[1];
    *uint64_t v36 = v39;
    v36[1] = v38;
    swift_bridgeObjectRelease();
    uint64_t v40 = v10[9];
    uint64_t v41 = (void *)((char *)v8 + v40);
    uint64_t v42 = *(void **)((char *)v8 + v40);
    uint64_t v43 = *(void *)((char *)v9 + v40);
    if (v42 != (void *)1)
    {
      if (v43 != 1)
      {
        void *v41 = v43;

        goto LABEL_23;
      }
      sub_10001DBE4((id *)((char *)v8 + v40));
      uint64_t v43 = *(void *)((char *)v9 + v40);
    }
    void *v41 = v43;
LABEL_23:
    uint64_t v44 = v10[10];
    uint64_t v45 = (char *)v8 + v44;
    uint64_t v46 = (char *)v9 + v44;
    char v47 = v46[16];
    id v48 = *(void **)v45;
    id v49 = (void *)*((void *)v45 + 1);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    v45[16] = v47;
    sub_10001D758(v48, v49);
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v21 = sub_10001B38C(&qword_1001385E0);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_24;
  }
  long long v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)id v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  uint64_t v16 = v10[7];
  __dst = (char *)v8 + v16;
  uint64_t v17 = (char *)v9 + v16;
  uint64_t v18 = sub_1000E8B60();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
  *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
  uint64_t v32 = v10[10];
  unint64_t v33 = (char *)v8 + v32;
  id v34 = (char *)v9 + v32;
  v33[16] = v34[16];
  *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
  (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_24:
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  swift_unknownObjectRelease();
  uint64_t v50 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = sub_1000E8B60();
  uint64_t v54 = *(void *)(v53 - 8);
  char v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  int v56 = v55(v51, 1, v53);
  int v57 = v55(v52, 1, v53);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v53);
    goto LABEL_29;
  }
  if (v57)
  {
LABEL_29:
    uint64_t v58 = sub_10001B38C((uint64_t *)&unk_1001370F0);
    memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_30:
  *(void **)((char *)a1 + a3[10]) = *(void **)((char *)a2 + a3[10]);
  swift_release();
  uint64_t v59 = a3[11];
  uint64_t v60 = (void **)((char *)a1 + v59);
  uint64_t v61 = (uint64_t *)((char *)a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *uint64_t v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[12];
  int v65 = (void **)((char *)a1 + v64);
  uint64_t v66 = (uint64_t *)((char *)a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *int v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A40AC);
}

uint64_t sub_1000A40AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10001B38C(&qword_1001385E0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for TodayContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A41F4);
}

void *sub_1000A41F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10001B38C(&qword_1001385E0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001B38C((uint64_t *)&unk_1001370F0);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000A4328()
{
  sub_1000A4470(319, qword_100139EF0, (void (*)(uint64_t))type metadata accessor for Banner);
  if (v0 <= 0x3F)
  {
    sub_1000A4470(319, (unint64_t *)&qword_1001368F8, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000A4470(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000EA730();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TodayContent.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A4590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayContent.Errors()
{
  return &type metadata for TodayContent.Errors;
}

unsigned char *storeEnumTagSinglePayload for TodayContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A4694);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayContent.CodingKeys()
{
  return &type metadata for TodayContent.CodingKeys;
}

unint64_t sub_1000A46D0()
{
  unint64_t result = qword_100139F48;
  if (!qword_100139F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139F48);
  }
  return result;
}

unint64_t sub_1000A4728()
{
  unint64_t result = qword_100139F50;
  if (!qword_100139F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139F50);
  }
  return result;
}

unint64_t sub_1000A4780()
{
  unint64_t result = qword_100139F58;
  if (!qword_100139F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139F58);
  }
  return result;
}

unint64_t sub_1000A47D8()
{
  unint64_t result = qword_100139F60;
  if (!qword_100139F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100139F60);
  }
  return result;
}

uint64_t sub_1000A482C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A4AB4(a1, a2, a3, a4, (uint64_t *)&unk_100139F88, type metadata accessor for Item, type metadata accessor for Item);
}

void *sub_1000A4860(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001B38C(&qword_100137388);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A5538(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A4970(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001B38C((uint64_t *)&unk_100139FD0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A562C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A4A80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A4AB4(a1, a2, a3, a4, &qword_100139F98, (uint64_t (*)(void))type metadata accessor for Session, (uint64_t (*)(void))type metadata accessor for Session);
}

uint64_t sub_1000A4AB4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10001B38C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000EA950();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000A5CA0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1000A4D34(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A4EA0(a1, a2, a3, a4, &qword_1001373D8, &qword_1001373E0);
}

void *sub_1000A4D48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001B38C(&qword_100139FA8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A5720(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A4E58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A4AB4(a1, a2, a3, a4, &qword_100139FA0, type metadata accessor for VisibleRectChangedEvent, type metadata accessor for VisibleRectChangedEvent);
}

void *sub_1000A4E8C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A4EA0(a1, a2, a3, a4, &qword_100139FB8, (uint64_t *)&unk_100139FC0);
}

void *sub_1000A4EA0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10001B38C(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000A5DFC(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A4FD0(unint64_t a1)
{
  return sub_1000A4AB4(0, *(void *)(a1 + 16), 0, a1, (uint64_t *)&unk_100139F88, type metadata accessor for Item, type metadata accessor for Item);
}

uint64_t sub_1000A5028(unint64_t a1)
{
  return sub_1000A4AB4(0, *(void *)(a1 + 16), 0, a1, &qword_100139F80, (uint64_t (*)(void))type metadata accessor for Section, (uint64_t (*)(void))type metadata accessor for Section);
}

void *sub_1000A5080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void v14[3] = type metadata accessor for EngagementURLProvider();
  v14[4] = &off_100127960;
  v14[0] = a2;
  swift_retain();
  id v8 = [a6 sections];
  id v9 = [v8 array];

  uint64_t v10 = sub_1000EA470();
  uint64_t v11 = sub_100084B00(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1000A51A4((unint64_t)v11, (void (*)(uint64_t, id *))sub_1000A5C2C);
  swift_bridgeObjectRelease();
  sub_100020AC0((uint64_t)v14);
  return v12;
}

void *sub_1000A51A4(unint64_t a1, void (*a2)(uint64_t, id *))
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  uint64_t v5 = sub_10001B38C(&qword_100139F78);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for Section();
  uint64_t v22 = *(void *)(v26 - 8);
  uint64_t v8 = __chkstk_darwin(v26);
  uint64_t v25 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v21 = (uint64_t)v20 - v10;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1000EA980())
  {
    v20[1] = v3;
    unint64_t v24 = a1 & 0xC000000000000001;
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    uint64_t v14 = 4;
    unint64_t v23 = (id *)a1;
    while (1)
    {
      uint64_t v15 = v24 ? (id *)sub_1000EA870() : (id *)*(id *)(a1 + 8 * v14);
      a1 = (unint64_t)v15;
      uint64_t v3 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      v27(v14 - 4, v15);

      if ((*v13)(v7, 1, v26) == 1)
      {
        sub_100028B6C((uint64_t)v7, &qword_100139F78);
      }
      else
      {
        uint64_t v16 = v21;
        sub_1000A5F70((uint64_t)v7, v21, (uint64_t (*)(void))type metadata accessor for Section);
        sub_1000A5F70(v16, v25, (uint64_t (*)(void))type metadata accessor for Section);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = (void *)sub_1000A4AB4(0, v12[2] + 1, 1, (unint64_t)v12, &qword_100139F80, (uint64_t (*)(void))type metadata accessor for Section, (uint64_t (*)(void))type metadata accessor for Section);
        }
        unint64_t v18 = v12[2];
        unint64_t v17 = v12[3];
        if (v18 >= v17 >> 1) {
          uint64_t v12 = (void *)sub_1000A4AB4(v17 > 1, v18 + 1, 1, (unint64_t)v12, &qword_100139F80, (uint64_t (*)(void))type metadata accessor for Section, (uint64_t (*)(void))type metadata accessor for Section);
        }
        void v12[2] = v18 + 1;
        sub_1000A5F70(v25, (uint64_t)v12+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v18, (uint64_t (*)(void))type metadata accessor for Section);
      }
      ++v14;
      a1 = (unint64_t)v23;
      if (v3 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000A5538(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_1000A562C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_1000A5720(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10001B38C(&qword_100139FB0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_1000A582C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001000FFD10 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656E6E6162 && a2 == 0xE600000000000000 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666E496863746566 && a2 == 0xED0000617461446FLL || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001000FFD30 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000FFD50 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001000FFD70 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F74537465737361 && a2 == 0xEC00000044496572 || (sub_1000EAB20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001000FFD90)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_1000EAB20();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1000A5BE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A5C2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100085210(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned char *)(v3 + 40), *(void *)(v3 + 48), a3);
}

uint64_t sub_1000A5C40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A5CA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_1000A5DFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_10001B38C(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t sub_1000A5F08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A5F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t Array.partitioned(using:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v34 = a1;
  uint64_t v35 = a2;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(a1);
  unint64_t v33 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v37 = (char *)&v26 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - v13;
  sub_1000EA530();
  uint64_t v40 = sub_1000EA1A0();
  uint64_t v15 = sub_1000EA1A0();
  uint64_t v39 = v15;
  swift_bridgeObjectRetain();
  if (sub_1000EA510())
  {
    uint64_t v27 = v9;
    uint64_t v28 = v14;
    uint64_t v15 = 0;
    uint64_t v36 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
    size_t v30 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v31 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v32 = a3;
    uint64_t v29 = v8;
    while (1)
    {
      BOOL v18 = sub_1000EA4E0();
      sub_1000EA4B0();
      if (v18)
      {
        unint64_t v19 = a3
            + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
            + *(void *)(v8 + 72) * v15;
        BOOL v20 = *(void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
        v20(v14, (uint64_t *)v19, a4);
        uint64_t v21 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t result = sub_1000EA860();
        if (v27 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v38 = result;
        BOOL v20 = *v36;
        (*v36)(v14, &v38, a4);
        swift_unknownObjectRelease();
        uint64_t v21 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_13:
          __break(1u);
          break;
        }
      }
      uint64_t v22 = v37;
      (*v30)(v37, v14, a4);
      char v23 = v34(v22);
      if (v5)
      {
        (*v31)(v37, a4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v23)
      {
        uint64_t v24 = v39;
        uint64_t v38 = v39;
        swift_getWitnessTable();
        if ((sub_1000EA5D0() & 1) == 0)
        {
          uint64_t v38 = v24;
          sub_1000EA530();
          swift_bridgeObjectRetain();
          sub_1000EA500();
          sub_1000EA520(0);
        }
      }
      uint64_t v16 = v37;
      v20(v33, (uint64_t *)v37, a4);
      sub_1000EA500();
      (*v31)(v16, a4);
      a3 = v32;
      uint64_t v17 = sub_1000EA510();
      ++v15;
      uint64_t v5 = 0;
      uint64_t v14 = v28;
      uint64_t v8 = v29;
      if (v21 == v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v39;
        goto LABEL_17;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v38 = v15;
  swift_getWitnessTable();
  if (sub_1000EA5D0())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v15;
    sub_1000EA530();
    sub_1000EA500();
  }
  return v40;
}

uint64_t sub_1000A63EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v54 = a3;
  uint64_t v48 = type metadata accessor for EngagementEvent(0);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001B38C(&qword_1001379B8);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DisappearanceEvent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001B38C(&qword_10013A080);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v53 = (uint64_t)&v45 - v16;
  uint64_t v17 = sub_10001B38C(&qword_10013A088);
  __chkstk_darwin(v17 - 8);
  unint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AppearanceEvent(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v52 = (uint64_t)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(v22 + 16);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    goto LABEL_6;
  }
  uint64_t v45 = v7;
  uint64_t v46 = v11;
  uint64_t v25 = v22 + 32;
  uint64_t v49 = v22;
  sub_10002D970(v22 + 32, (uint64_t)&v57);
  sub_10001B38C(&qword_1001373E0);
  int v26 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, v26 ^ 1u, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
LABEL_6:
    sub_100028B6C((uint64_t)v19, &qword_10013A088);
    sub_1000EA600();
    sub_100026434();
    uint64_t v31 = (void *)sub_1000EA720();
    sub_1000E9220();

LABEL_15:
    uint64_t v40 = type metadata accessor for Session();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v54, 1, 1, v40);
  }
  uint64_t v27 = v52;
  sub_1000A9838((uint64_t)v19, v52, type metadata accessor for AppearanceEvent);
  uint64_t v28 = v53;
  sub_1000A6C00(v49, v50, v51, v53);
  sub_10002DA34(v28, (uint64_t)v15, &qword_10013A080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    sub_100028B6C((uint64_t)v15, &qword_10013A080);
    sub_1000EA600();
    sub_100026434();
    uint64_t v29 = (void *)sub_1000EA720();
    sub_1000E9220();

    uint64_t v30 = v28;
LABEL_14:
    sub_100028B6C(v30, &qword_10013A080);
    sub_1000A9774(v27, type metadata accessor for AppearanceEvent);
    goto LABEL_15;
  }
  uint64_t v32 = (uint64_t)v46;
  sub_1000A9838((uint64_t)v15, (uint64_t)v46, type metadata accessor for DisappearanceEvent);
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_1000A6FEC(v33, v25, 1, (2 * v24) | 1, v27);
  if (!*(void *)(v34 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1000EA600();
    sub_100026434();
    uint64_t v39 = (void *)sub_1000EA720();
    sub_1000E9220();

    swift_bridgeObjectRelease();
    sub_1000A9774(v32, type metadata accessor for DisappearanceEvent);
    uint64_t v30 = v53;
    goto LABEL_14;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  uint64_t v37 = v48;
  while (1)
  {
    uint64_t v38 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      return result;
    }
    sub_10002D970(v25, (uint64_t)v56);
    sub_10002D970((uint64_t)v56, (uint64_t)v55);
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t result = sub_100020AC0((uint64_t)v56);
    ++v36;
    v25 += 40;
    if (v38 == v24)
    {
      swift_bridgeObjectRelease();
      uint64_t v59 = 0;
      long long v57 = 0u;
      long long v58 = 0u;
      goto LABEL_18;
    }
  }
  sub_1000A9774((uint64_t)v4, type metadata accessor for EngagementEvent);
  swift_bridgeObjectRelease();
  sub_1000A9708(v56, (uint64_t)&v57);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_100028B6C(v53, &qword_10013A080);
  if (*((void *)&v58 + 1))
  {
    uint64_t v41 = (uint64_t)v45;
    int v42 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v41, v42 ^ 1u, 1, v37);
  }
  else
  {
    sub_100028B6C((uint64_t)&v57, &qword_10013A090);
    uint64_t v41 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, 1, 1, v37);
  }
  uint64_t v43 = v54;
  sub_1000A9838(v52, v54, type metadata accessor for AppearanceEvent);
  uint64_t v44 = (int *)type metadata accessor for Session();
  sub_10002DA34(v41, v43 + v44[6], &qword_1001379B8);
  sub_1000A9838((uint64_t)v46, v43 + v44[7], type metadata accessor for DisappearanceEvent);
  *(void *)(v43 + v44[5]) = v34;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v44 - 1) + 56))(v43, 0, 1, v44);
  return sub_100028B6C(v41, &qword_1001379B8);
}

uint64_t sub_1000A6C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10001B38C(&qword_10013A080);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DisappearanceEvent(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v32 = a3;
    uint64_t v33 = a2;
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    uint64_t v36 = a4;
    swift_bridgeObjectRetain();
    uint64_t v16 = a1 + 32;
    uint64_t v17 = v15;
    do
    {
      sub_10002D970(v16, (uint64_t)v37);
      uint64_t v19 = v38;
      uint64_t v18 = v39;
      sub_100020A28(v37, v38);
      int v20 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18);
      sub_100020AC0((uint64_t)v37);
      if (v20 == 1)
      {
        swift_bridgeObjectRelease();
        sub_100026434();
        uint64_t v27 = (void *)sub_1000EA720();
        sub_1000EA620();
        sub_1000E9220();

        uint64_t v28 = v36;
        sub_1000E8C40();
        uint64_t v29 = v34;
        *(unsigned char *)(v28 + *(int *)(v35 + 20)) = 2;
        return (*(uint64_t (**)(uint64_t, void, uint64_t))(v29 + 56))(v28, 0, 1);
      }
      v16 += 40;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    sub_10002D970(a1 + 32 + 40 * v15 - 40, (uint64_t)v37);
    sub_10001B38C(&qword_1001373E0);
    uint64_t v11 = v35;
    int v21 = swift_dynamicCast();
    uint64_t v22 = v34;
    uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56);
    v23(v10, v21 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v11) == 1)
    {
      a4 = v36;
      a3 = v32;
      a2 = v33;
      goto LABEL_8;
    }
    sub_1000A9838((uint64_t)v10, (uint64_t)v14, type metadata accessor for DisappearanceEvent);
    uint64_t v31 = v36;
    sub_1000A9838((uint64_t)v14, v36, type metadata accessor for DisappearanceEvent);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v23)(v31, 0, 1, v11);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    v23(v10, 1, 1, v11);
LABEL_8:
    sub_100028B6C((uint64_t)v10, &qword_10013A080);
    if (*(void *)(a3 + 16) - 1 == a2)
    {
      sub_100026434();
      uint64_t v24 = (void *)sub_1000EA720();
      sub_1000EA620();
      sub_1000E9220();

      sub_1000E8C40();
      *(unsigned char *)(a4 + *(int *)(v11 + 20)) = 2;
      uint64_t v25 = a4;
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v25 = a4;
      uint64_t v26 = 1;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v25, v26, 1, v11);
  }
}

uint64_t sub_1000A6FEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10001B38C(&qword_10013A098);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VisibleRectChangedEvent(0);
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v50 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v48 - v17;
  __chkstk_darwin(v16);
  uint64_t v54 = (uint64_t)&v48 - v19;
  uint64_t v20 = type metadata accessor for AppearanceEvent(0);
  uint64_t result = __chkstk_darwin(v20);
  uint64_t v51 = result;
  uint64_t v52 = (uint64_t)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = (a4 >> 1) - a3;
  if (a4 >> 1 == a3)
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  else
  {
    if ((uint64_t)(a4 >> 1) <= a3)
    {
      __break(1u);
      return result;
    }
    uint64_t v49 = a5;
    uint64_t v25 = a1;
    uint64_t v26 = (void (**)(char *, void, uint64_t, uint64_t))(v55 + 56);
    uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    uint64_t v48 = v25;
    swift_unknownObjectRetain();
    uint64_t v28 = a2 + 40 * a3;
    uint64_t v24 = _swiftEmptyArrayStorage;
    uint64_t v53 = v18;
    do
    {
      sub_10002D970(v28, (uint64_t)v57);
      sub_10002D970((uint64_t)v57, (uint64_t)v56);
      sub_10001B38C(&qword_1001373E0);
      int v29 = swift_dynamicCast();
      (*v26)(v12, v29 ^ 1u, 1, v13);
      sub_100020AC0((uint64_t)v57);
      if ((*v27)(v12, 1, v13) == 1)
      {
        sub_100028B6C((uint64_t)v12, &qword_10013A098);
      }
      else
      {
        uint64_t v30 = v13;
        uint64_t v31 = v54;
        sub_1000A9838((uint64_t)v12, v54, type metadata accessor for VisibleRectChangedEvent);
        sub_1000A9838(v31, (uint64_t)v18, type metadata accessor for VisibleRectChangedEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v24 = (void *)sub_1000A4E58(0, v24[2] + 1, 1, (unint64_t)v24);
        }
        unint64_t v33 = v24[2];
        unint64_t v32 = v24[3];
        uint64_t v13 = v30;
        if (v33 >= v32 >> 1) {
          uint64_t v24 = (void *)sub_1000A4E58(v32 > 1, v33 + 1, 1, (unint64_t)v24);
        }
        void v24[2] = v33 + 1;
        uint64_t v34 = (uint64_t)v24
            + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))
            + *(void *)(v55 + 72) * v33;
        uint64_t v18 = v53;
        sub_1000A9838((uint64_t)v53, v34, type metadata accessor for VisibleRectChangedEvent);
      }
      v28 += 40;
      --v23;
    }
    while (v23);
    swift_unknownObjectRelease();
    a5 = v49;
  }
  uint64_t v35 = v24[2];
  uint64_t v36 = v52;
  sub_1000A97D4(a5, v52);
  if (v35)
  {
    sub_1000A9774(v36, type metadata accessor for AppearanceEvent);
  }
  else
  {
    int v37 = *(unsigned __int8 *)(v36 + *(int *)(v51 + 24));
    sub_1000A9774(v36, type metadata accessor for AppearanceEvent);
    if (v37 != 1)
    {
      swift_bridgeObjectRelease();
      sub_100026434();
      uint64_t v38 = (void *)sub_1000EA720();
      sub_1000EA620();
      sub_1000E9220();

      uint64_t v39 = sub_1000E8C50();
      uint64_t v40 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v50, a5, v39);
      uint64_t v41 = v40 + *(int *)(v13 + 20);
      *(void *)uint64_t v41 = 0;
      *(void *)(v41 + 8) = 0;
      __asm { FMOV            V0.2D, #1.0 }
      *(_OWORD *)(v41 + 16) = _Q0;
      sub_10001B38C(&qword_100139FA0);
      unint64_t v47 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v24 = (void *)swift_allocObject();
      *((_OWORD *)v24 + 1) = xmmword_1000F1610;
      sub_1000A9838(v40, (uint64_t)v24 + v47, type metadata accessor for VisibleRectChangedEvent);
    }
  }
  return (uint64_t)v24;
}

Swift::Int sub_1000A74F4(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_100032318(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1000A7560(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000A7560(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v167 = sub_1000E8C50();
  uint64_t v4 = *(void *)(v167 - 8);
  uint64_t v5 = __chkstk_darwin(v167);
  uint64_t v166 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unsigned __int8 v168 = (char *)&v156 - v7;
  v185 = a1;
  Swift::Int v8 = a1[1];
  Swift::Int result = sub_1000EAB00(v8);
  if (result >= v8)
  {
    if (v8 < 0) {
      goto LABEL_142;
    }
    if (v8) {
      return sub_1000A83E8(0, v8, 1, v185);
    }
    return result;
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_150;
  }
  Swift::Int v157 = result;
  if (v8 < 2)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v163 = (char *)&_swiftEmptyArrayStorage[4];
    if (v8 != 1)
    {
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      uint64_t v156 = _swiftEmptyArrayStorage;
      uint64_t v15 = (char *)_swiftEmptyArrayStorage;
LABEL_108:
      if (v17 >= 2)
      {
        uint64_t v149 = *v185;
        do
        {
          unint64_t v150 = v17 - 2;
          if (v17 < 2) {
            goto LABEL_137;
          }
          if (!v149) {
            goto LABEL_149;
          }
          uint64_t v151 = v15;
          uint64_t v152 = *(void *)&v15[16 * v150 + 32];
          uint64_t v153 = *(void *)&v15[16 * v17 + 24];
          sub_1000A87DC(v149 + 40 * v152, (char *)(v149 + 40 * *(void *)&v15[16 * v17 + 16]), (char *)(v149 + 40 * v153), v163);
          if (v2) {
            break;
          }
          if (v153 < v152) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v151 = sub_100031060((uint64_t)v151);
          }
          if (v150 >= *((void *)v151 + 2)) {
            goto LABEL_139;
          }
          uint64_t v154 = &v151[16 * v150 + 32];
          *(void *)uint64_t v154 = v152;
          *((void *)v154 + 1) = v153;
          unint64_t v155 = *((void *)v151 + 2);
          if (v17 > v155) {
            goto LABEL_140;
          }
          memmove(&v151[16 * v17 + 16], &v151[16 * v17 + 32], 16 * (v155 - v17));
          uint64_t v15 = v151;
          *((void *)v151 + 2) = v155 - 1;
          unint64_t v17 = v155 - 1;
        }
        while (v155 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      v156[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = v10 >> 1;
    sub_10001B38C(&qword_1001373E0);
    uint64_t v12 = (void *)sub_1000EA4D0();
    void v12[2] = v11;
    uint64_t v163 = (char *)(v12 + 4);
  }
  Swift::Int v13 = 0;
  uint64_t v14 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v15 = (char *)_swiftEmptyArrayStorage;
  uint64_t v156 = v12;
  uint64_t v16 = v168;
  uint64_t v165 = (void (**)(char *, uint64_t))(v4 + 8);
  while (1)
  {
    uint64_t v18 = v13;
    Swift::Int v19 = v13 + 1;
    uint64_t v160 = v15;
    Swift::Int v162 = v13;
    if (v13 + 1 < v8)
    {
      uint64_t v170 = (void *)v8;
      uint64_t v164 = v2;
      uint64_t v20 = *v185;
      Swift::Int v21 = v13;
      sub_10002D970(*v185 + 40 * v19, (uint64_t)&v182);
      uint64_t v158 = v20;
      sub_10002D970(v20 + 40 * v21, (uint64_t)v179);
      uint64_t v22 = v183;
      uint64_t v23 = v184;
      uint64_t v24 = sub_100020A28(&v182, v183);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      uint64_t v175 = (void (*)(uint64_t, void))v24;
      uint64_t v176 = v25;
      uint64_t v177 = v23;
      uint64_t v178 = v22;
      v25(v22, v23);
      uint64_t v26 = v180;
      uint64_t v27 = v181;
      uint64_t v28 = sub_100020A28(v179, v180);
      int v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      uint64_t v30 = v166;
      uint64_t v173 = v28;
      uint64_t v174 = v29;
      v29(v26, v27);
      sub_1000E8BC0();
      double v32 = fabs(v31);
      unint64_t v33 = *v14;
      uint64_t v34 = v167;
      (*v14)(v30, v167);
      v33(v16, v34);
      if (v32 <= 1.0)
      {
        uint64_t v35 = v183;
        uint64_t v36 = v184;
        sub_100020A28(&v182, v183);
        unsigned int v37 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
        uint64_t v38 = v180;
        uint64_t v39 = v181;
        sub_100020A28(v179, v180);
        LODWORD(v161) = v37 < (*(unsigned __int8 (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
      }
      else
      {
        v176(v178, v177);
        v174(v26, v27);
        LODWORD(v161) = sub_1000E8BE0();
        v33(v30, v34);
        v33(v16, v34);
      }
      sub_100020AC0((uint64_t)v179);
      sub_100020AC0((uint64_t)&v182);
      uint64_t v18 = v162;
      Swift::Int v19 = v162 + 2;
      Swift::Int v8 = (Swift::Int)v170;
      uint64_t v2 = v164;
      if (v162 + 2 < (uint64_t)v170)
      {
        long long v159 = v33;
        uint64_t v40 = v158 + 40 * v162 + 40;
        while (1)
        {
          Swift::Int v169 = v19;
          uint64_t v164 = v2;
          sub_10002D970(v40 + 40, (uint64_t)&v182);
          uint64_t v178 = v40;
          sub_10002D970(v40, (uint64_t)v179);
          uint64_t v41 = v183;
          uint64_t v42 = v184;
          uint64_t v43 = (void (*)(uint64_t, uint64_t))sub_100020A28(&v182, v183);
          uint64_t v44 = *(void (**)(uint64_t, void))(v42 + 8);
          uint64_t v45 = v168;
          uint64_t v174 = v43;
          uint64_t v175 = v44;
          uint64_t v176 = (void (*)(uint64_t, uint64_t))v42;
          uint64_t v177 = v41;
          v44(v41, v42);
          uint64_t v46 = v180;
          uint64_t v47 = v181;
          uint64_t v48 = sub_100020A28(v179, v180);
          uint64_t v49 = *(void (**)(void *, uint64_t))(v47 + 8);
          uint64_t v50 = v166;
          uint64_t v171 = (void (*)(void, uint64_t))v48;
          unint64_t v172 = v49;
          uint64_t v173 = (void *)v46;
          v49((void *)v46, v47);
          sub_1000E8BC0();
          double v52 = fabs(v51);
          uint64_t v53 = v167;
          uint64_t v54 = v159;
          v159(v50, v167);
          v54(v45, v53);
          if (v52 <= 1.0)
          {
            uint64_t v56 = v183;
            uint64_t v57 = v184;
            sub_100020A28(&v182, v183);
            unsigned int v58 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v57 + 16))(v56, v57);
            uint64_t v59 = v180;
            uint64_t v60 = v181;
            sub_100020A28(v179, v180);
            int v55 = v58 < (*(unsigned __int8 (**)(uint64_t, uint64_t))(v60 + 16))(v59, v60);
          }
          else
          {
            v175(v177, v176);
            v172(v173, v47);
            int v55 = sub_1000E8BE0();
            v54(v50, v53);
            v54(v45, v53);
          }
          sub_100020AC0((uint64_t)v179);
          sub_100020AC0((uint64_t)&v182);
          uint64_t v2 = v164;
          Swift::Int v19 = v169;
          Swift::Int v8 = (Swift::Int)v170;
          if ((v161 ^ v55)) {
            break;
          }
          Swift::Int v19 = v169 + 1;
          uint64_t v40 = v178 + 40;
          if (v170 == (void *)(v169 + 1))
          {
            Swift::Int v19 = (Swift::Int)v170;
            break;
          }
        }
        uint64_t v18 = v162;
      }
      if (v161)
      {
        if (v19 < v18) {
          goto LABEL_143;
        }
        if (v18 < v19)
        {
          uint64_t v61 = 40 * v19 - 40;
          uint64_t v62 = 40 * v18;
          Swift::Int v63 = v19;
          Swift::Int v64 = v18;
          do
          {
            if (v64 != --v19)
            {
              if (!v158) {
                goto LABEL_148;
              }
              uint64_t v65 = v158 + v62;
              uint64_t v66 = v158 + v61;
              sub_1000A9708((long long *)(v158 + v62), (uint64_t)&v182);
              uint64_t v67 = *(void *)(v66 + 32);
              long long v68 = *(_OWORD *)(v66 + 16);
              *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
              *(_OWORD *)(v65 + 16) = v68;
              *(void *)(v65 + 32) = v67;
              sub_1000A9708(&v182, v66);
              uint64_t v18 = v162;
            }
            ++v64;
            v61 -= 40;
            v62 += 40;
          }
          while (v64 < v19);
          Swift::Int v19 = v63;
        }
      }
    }
    if (v19 < v8)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_141;
      }
      if (v19 - v18 < v157) {
        break;
      }
    }
LABEL_57:
    if (v19 < v18) {
      goto LABEL_136;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v15 = v160;
    }
    else {
      uint64_t v15 = sub_100030D20(0, *((void *)v160 + 2) + 1, 1, v160);
    }
    unint64_t v99 = *((void *)v15 + 2);
    unint64_t v98 = *((void *)v15 + 3);
    unint64_t v17 = v99 + 1;
    Swift::Int v169 = v19;
    if (v99 >= v98 >> 1) {
      uint64_t v15 = sub_100030D20((char *)(v98 > 1), v99 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v17;
    uint64_t v100 = v15 + 32;
    uint64_t v101 = &v15[16 * v99 + 32];
    Swift::Int v102 = v169;
    *(void *)uint64_t v101 = v162;
    *((void *)v101 + 1) = v102;
    if (v99)
    {
      uint64_t v16 = v168;
      while (1)
      {
        unint64_t v103 = v17 - 1;
        if (v17 >= 4)
        {
          uint64_t v108 = &v100[16 * v17];
          uint64_t v109 = *((void *)v108 - 8);
          uint64_t v110 = *((void *)v108 - 7);
          BOOL v114 = __OFSUB__(v110, v109);
          uint64_t v111 = v110 - v109;
          if (v114) {
            goto LABEL_125;
          }
          uint64_t v113 = *((void *)v108 - 6);
          uint64_t v112 = *((void *)v108 - 5);
          BOOL v114 = __OFSUB__(v112, v113);
          uint64_t v106 = v112 - v113;
          char v107 = v114;
          if (v114) {
            goto LABEL_126;
          }
          unint64_t v115 = v17 - 2;
          uint64_t v116 = &v100[16 * v17 - 32];
          uint64_t v118 = *(void *)v116;
          uint64_t v117 = *((void *)v116 + 1);
          BOOL v114 = __OFSUB__(v117, v118);
          uint64_t v119 = v117 - v118;
          if (v114) {
            goto LABEL_128;
          }
          BOOL v114 = __OFADD__(v106, v119);
          uint64_t v120 = v106 + v119;
          if (v114) {
            goto LABEL_131;
          }
          if (v120 >= v111)
          {
            int v138 = &v100[16 * v103];
            uint64_t v140 = *(void *)v138;
            uint64_t v139 = *((void *)v138 + 1);
            BOOL v114 = __OFSUB__(v139, v140);
            uint64_t v141 = v139 - v140;
            if (v114) {
              goto LABEL_135;
            }
            BOOL v131 = v106 < v141;
            goto LABEL_95;
          }
        }
        else
        {
          if (v17 != 3)
          {
            uint64_t v132 = *((void *)v15 + 4);
            uint64_t v133 = *((void *)v15 + 5);
            BOOL v114 = __OFSUB__(v133, v132);
            uint64_t v125 = v133 - v132;
            char v126 = v114;
            goto LABEL_89;
          }
          uint64_t v105 = *((void *)v15 + 4);
          uint64_t v104 = *((void *)v15 + 5);
          BOOL v114 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          char v107 = v114;
        }
        if (v107) {
          goto LABEL_127;
        }
        unint64_t v115 = v17 - 2;
        uint64_t v121 = &v100[16 * v17 - 32];
        uint64_t v123 = *(void *)v121;
        uint64_t v122 = *((void *)v121 + 1);
        BOOL v124 = __OFSUB__(v122, v123);
        uint64_t v125 = v122 - v123;
        char v126 = v124;
        if (v124) {
          goto LABEL_130;
        }
        uint64_t v127 = &v100[16 * v103];
        uint64_t v129 = *(void *)v127;
        uint64_t v128 = *((void *)v127 + 1);
        BOOL v114 = __OFSUB__(v128, v129);
        uint64_t v130 = v128 - v129;
        if (v114) {
          goto LABEL_133;
        }
        if (__OFADD__(v125, v130)) {
          goto LABEL_134;
        }
        if (v125 + v130 >= v106)
        {
          BOOL v131 = v106 < v130;
LABEL_95:
          if (v131) {
            unint64_t v103 = v115;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v126) {
          goto LABEL_129;
        }
        id v134 = &v100[16 * v103];
        uint64_t v136 = *(void *)v134;
        uint64_t v135 = *((void *)v134 + 1);
        BOOL v114 = __OFSUB__(v135, v136);
        uint64_t v137 = v135 - v136;
        if (v114) {
          goto LABEL_132;
        }
        if (v137 < v125) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v142 = v103 - 1;
        if (v103 - 1 >= v17)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (!*v185) {
          goto LABEL_147;
        }
        uint64_t v143 = v15;
        uint64_t v144 = &v100[16 * v142];
        uint64_t v145 = *(void *)v144;
        uint64_t v146 = &v100[16 * v103];
        uint64_t v147 = *((void *)v146 + 1);
        sub_1000A87DC(*v185 + 40 * *(void *)v144, (char *)(*v185 + 40 * *(void *)v146), (char *)(*v185 + 40 * v147), v163);
        if (v2) {
          goto LABEL_119;
        }
        if (v147 < v145) {
          goto LABEL_122;
        }
        if (v103 > *((void *)v143 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v144 = v145;
        *(void *)&v100[16 * v142 + 8] = v147;
        unint64_t v148 = *((void *)v143 + 2);
        if (v103 >= v148) {
          goto LABEL_124;
        }
        unint64_t v17 = v148 - 1;
        memmove(&v100[16 * v103], v146 + 16, 16 * (v148 - 1 - v103));
        uint64_t v15 = v143;
        *((void *)v143 + 2) = v148 - 1;
        uint64_t v16 = v168;
        if (v148 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v17 = 1;
    uint64_t v16 = v168;
LABEL_14:
    Swift::Int v8 = v185[1];
    Swift::Int v13 = v169;
    uint64_t v14 = v165;
    if (v169 >= v8) {
      goto LABEL_108;
    }
  }
  if (__OFADD__(v18, v157)) {
    goto LABEL_144;
  }
  if (v18 + v157 >= v8) {
    uint64_t v69 = (void (*)(char *, uint64_t))v8;
  }
  else {
    uint64_t v69 = (void (*)(char *, uint64_t))(v18 + v157);
  }
  if ((uint64_t)v69 >= v18)
  {
    if ((void (*)(char *, uint64_t))v19 != v69)
    {
      uint64_t v164 = v2;
      uint64_t v70 = 40 * v19 - 40;
      long long v159 = v69;
      do
      {
        uint64_t v161 = v70;
        uint64_t v71 = v70;
        Swift::Int v169 = v19;
        do
        {
          uint64_t v177 = v71;
          uint64_t v178 = v18;
          uint64_t v72 = *v185 + v71;
          sub_10002D970(v72 + 40, (uint64_t)&v182);
          sub_10002D970(v72, (uint64_t)v179);
          uint64_t v73 = v183;
          uint64_t v74 = v184;
          uint64_t v75 = sub_100020A28(&v182, v183);
          uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
          uint64_t v77 = v168;
          uint64_t v173 = v75;
          uint64_t v174 = v76;
          uint64_t v175 = (void (*)(uint64_t, void))v74;
          uint64_t v176 = (void (*)(uint64_t, uint64_t))v73;
          v76(v73, v74);
          uint64_t v78 = v180;
          uint64_t v79 = v181;
          uint64_t v80 = sub_100020A28(v179, v180);
          uint64_t v81 = *(void (**)(void, uint64_t))(v79 + 8);
          uint64_t v82 = v166;
          uint64_t v170 = v80;
          uint64_t v171 = v81;
          unint64_t v172 = (void (*)(void *, uint64_t))v78;
          v81(v78, v79);
          sub_1000E8BC0();
          double v84 = fabs(v83);
          uint64_t v85 = *v165;
          uint64_t v86 = v167;
          (*v165)(v82, v167);
          v85(v77, v86);
          if (v84 <= 1.0)
          {
            uint64_t v88 = v183;
            uint64_t v89 = v184;
            sub_100020A28(&v182, v183);
            unsigned int v90 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v89 + 16))(v88, v89);
            uint64_t v91 = v180;
            uint64_t v92 = v181;
            sub_100020A28(v179, v180);
            char v87 = v90 < (*(unsigned __int8 (**)(uint64_t, uint64_t))(v92 + 16))(v91, v92);
          }
          else
          {
            v174((uint64_t)v176, (uint64_t)v175);
            v171(v172, v79);
            char v87 = sub_1000E8BE0();
            v85(v82, v86);
            v85(v77, v86);
          }
          sub_100020AC0((uint64_t)v179);
          sub_100020AC0((uint64_t)&v182);
          Swift::Int v93 = v169;
          if ((v87 & 1) == 0) {
            break;
          }
          uint64_t v94 = *v185;
          if (!*v185) {
            goto LABEL_146;
          }
          uint64_t v95 = v177;
          uint64_t v96 = v94 + v177;
          sub_1000A9708((long long *)(v94 + v177 + 40), (uint64_t)&v182);
          long long v97 = *(_OWORD *)(v96 + 16);
          *(_OWORD *)(v96 + 40) = *(_OWORD *)v96;
          *(_OWORD *)(v96 + 56) = v97;
          *(void *)(v96 + 72) = *(void *)(v96 + 32);
          sub_1000A9708(&v182, v96);
          uint64_t v71 = v95 - 40;
          uint64_t v18 = v178 + 1;
        }
        while (v93 != v178 + 1);
        Swift::Int v19 = v93 + 1;
        uint64_t v70 = v161 + 40;
        uint64_t v18 = v162;
      }
      while ((void (*)(char *, uint64_t))v19 != v159);
      Swift::Int v19 = (Swift::Int)v159;
      uint64_t v2 = v164;
    }
    goto LABEL_57;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_1000EA950();
  __break(1u);
  return result;
}

uint64_t sub_1000A83E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v57 = a4;
  uint64_t v44 = a1;
  uint64_t v49 = sub_1000E8C50();
  uint64_t v6 = __chkstk_darwin(v49);
  Swift::Int v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v50 = a3;
  uint64_t v43 = a2;
  if (a3 != a2)
  {
    Swift::Int v13 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v14 = 40 * v50 - 40;
    uint64_t v48 = v8;
    uint64_t v47 = (char *)&v42 - v11;
LABEL_5:
    uint64_t v58 = v44;
    uint64_t v45 = v14;
    uint64_t v15 = v14;
    while (1)
    {
      uint64_t v16 = *v57;
      uint64_t v65 = v15;
      uint64_t v17 = v16 + v15;
      sub_10002D970(v16 + v15 + 40, (uint64_t)&v62);
      sub_10002D970(v17, (uint64_t)v59);
      uint64_t v18 = v63;
      uint64_t v19 = v64;
      uint64_t v20 = sub_100020A28(&v62, v63);
      Swift::Int v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      uint64_t v53 = v20;
      uint64_t v54 = v21;
      uint64_t v55 = v19;
      uint64_t v56 = v18;
      v21(v18, v19);
      uint64_t v23 = v60;
      uint64_t v22 = v61;
      uint64_t v24 = sub_100020A28(v59, v60);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      double v51 = v24;
      double v52 = v25;
      v25(v23, v22);
      sub_1000E8BC0();
      double v27 = fabs(v26);
      uint64_t v28 = *v13;
      int v29 = v8;
      uint64_t v30 = v8;
      uint64_t v31 = v49;
      (*v13)(v29, v49);
      v28(v12, v31);
      if (v27 <= 1.0)
      {
        uint64_t v33 = v63;
        uint64_t v34 = v64;
        sub_100020A28(&v62, v63);
        unsigned int v35 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
        uint64_t v36 = v60;
        uint64_t v37 = v61;
        sub_100020A28(v59, v60);
        char v32 = v35 < (*(unsigned __int8 (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
        uint64_t v12 = v47;
      }
      else
      {
        uint64_t v12 = v47;
        uint64_t v46 = v22;
        v54(v56, v55);
        v52(v23, v46);
        char v32 = sub_1000E8BE0();
        v28(v30, v31);
        v28(v12, v31);
      }
      sub_100020AC0((uint64_t)v59);
      uint64_t result = sub_100020AC0((uint64_t)&v62);
      Swift::Int v8 = v48;
      uint64_t v38 = v65;
      if ((v32 & 1) == 0)
      {
LABEL_4:
        uint64_t v14 = v45 + 40;
        if (++v50 == v43) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v39 = *v57;
      if (!*v57) {
        break;
      }
      uint64_t v40 = v39 + v65;
      sub_1000A9708((long long *)(v39 + v65 + 40), (uint64_t)&v62);
      long long v41 = *(_OWORD *)(v40 + 16);
      *(_OWORD *)(v40 + 40) = *(_OWORD *)v40;
      *(_OWORD *)(v40 + 56) = v41;
      *(void *)(v40 + 72) = *(void *)(v40 + 32);
      uint64_t result = sub_1000A9708(&v62, v40);
      uint64_t v15 = v38 - 40;
      if (v50 == ++v58) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A87DC(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v95 = sub_1000E8C50();
  uint64_t v8 = *(void *)(v95 - 8);
  uint64_t v9 = __chkstk_darwin(v95);
  uint64_t v94 = &v81[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  Swift::Int v13 = &v81[-v12];
  uint64_t v14 = (uint64_t)&a2[-a1];
  uint64_t v15 = v14 / 40;
  uint64_t v85 = a3;
  uint64_t v16 = a3 - a2;
  uint64_t v17 = v16 / 40;
  uint64_t v105 = v11;
  uint64_t v104 = a4;
  if (v14 / 40 >= v16 / 40)
  {
    if (v16 >= -39)
    {
      if (a4 != a2 || &a2[40 * v17] <= a4)
      {
        uint64_t v46 = v11;
        memmove(a4, a2, 40 * v17);
        uint64_t v11 = v46;
      }
      uint64_t v47 = &a4[40 * v17];
      unint64_t v103 = v47;
      uint64_t v105 = a2;
      if (v16 >= 40 && v11 < a2)
      {
        uint64_t v48 = (void (**)(void, void))(v8 + 8);
        uint64_t v49 = v85 - 40;
        double v83 = a4;
        uint64_t v82 = v11;
        Swift::Int v93 = v13;
        uint64_t v50 = v95;
        while (1)
        {
          uint64_t v92 = (uint64_t)v49;
          sub_10002D970((uint64_t)(v47 - 40), (uint64_t)v100);
          uint64_t v96 = a2;
          uint64_t v91 = a2 - 40;
          sub_10002D970((uint64_t)(a2 - 40), (uint64_t)v97);
          uint64_t v53 = v101;
          uint64_t v54 = v102;
          uint64_t v55 = sub_100020A28(v100, v101);
          uint64_t v56 = (void (*)(void, void *))v54[1];
          char v87 = (void (*)(uint64_t, void))v55;
          unsigned int v90 = (void (*)(uint64_t, char *))v53;
          uint64_t v89 = v54;
          uint64_t v88 = v56;
          v56(v53, v54);
          uint64_t v57 = v98;
          uint64_t v58 = v99;
          uint64_t v59 = sub_100020A28(v97, v98);
          uint64_t v60 = *(char **)(v58 + 8);
          uint64_t v61 = v94;
          unint64_t v84 = (unint64_t)v59;
          uint64_t v86 = (void *)v57;
          uint64_t v85 = v60;
          ((void (*)(uint64_t, uint64_t))v60)(v57, v58);
          sub_1000E8BC0();
          double v63 = fabs(v62);
          uint64_t v64 = v48;
          uint64_t v65 = (void (*)(unsigned char *, uint64_t))*v48;
          v65(v61, v50);
          v65(v13, v50);
          if (v63 <= 1.0)
          {
            uint64_t v68 = v101;
            uint64_t v67 = v102;
            sub_100020A28(v100, v101);
            LODWORD(v68) = ((unsigned __int8 (*)(uint64_t, void *))v67[2])(v68, v67);
            uint64_t v70 = v98;
            uint64_t v69 = v99;
            sub_100020A28(v97, v98);
            char v66 = v68 < (*(unsigned __int8 (**)(uint64_t, uint64_t))(v69 + 16))(v70, v69);
            Swift::Int v13 = v93;
          }
          else
          {
            Swift::Int v13 = v93;
            v88(v90, v89);
            ((void (*)(void *, uint64_t))v85)(v86, v58);
            char v66 = sub_1000E8BE0();
            v65(v61, v50);
            v65(v13, v50);
          }
          uint64_t v48 = v64;
          unint64_t v71 = v92;
          uint64_t v72 = (char *)(v92 + 40);
          sub_100020AC0((uint64_t)v97);
          sub_100020AC0((uint64_t)v100);
          uint64_t v73 = v96;
          unint64_t v74 = (unint64_t)v83;
          if (v66)
          {
            uint64_t v75 = v82;
            uint64_t v76 = v91;
            if (v72 != v96 || v71 >= (unint64_t)v96)
            {
              long long v51 = *(_OWORD *)v91;
              long long v52 = *((_OWORD *)v91 + 1);
              *(void *)(v71 + 32) = *((void *)v91 + 4);
              *(_OWORD *)unint64_t v71 = v51;
              *(_OWORD *)(v71 + 16) = v52;
            }
            v105 -= 40;
            uint64_t v47 = v103;
            if ((unint64_t)v103 <= v74) {
              goto LABEL_47;
            }
          }
          else
          {
            uint64_t v77 = v103;
            uint64_t v47 = v103 - 40;
            v103 -= 40;
            uint64_t v75 = v82;
            if (v72 < v77 || v71 >= (unint64_t)v77 || v72 != v77)
            {
              long long v78 = *(_OWORD *)v47;
              long long v79 = *(_OWORD *)(v77 - 24);
              *(void *)(v71 + 32) = *((void *)v77 - 1);
              *(_OWORD *)unint64_t v71 = v78;
              *(_OWORD *)(v71 + 16) = v79;
            }
            uint64_t v76 = v73;
            if ((unint64_t)v47 <= v74) {
              goto LABEL_47;
            }
          }
          uint64_t v49 = (char *)(v71 - 40);
          a2 = v76;
          if (v76 <= v75) {
            goto LABEL_47;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else if (v14 >= -39)
  {
    if (a4 != v11 || &v11[40 * v15] <= a4) {
      memmove(a4, v11, 40 * v15);
    }
    unint64_t v84 = (unint64_t)&a4[40 * v15];
    unint64_t v103 = (char *)v84;
    if (v14 >= 40 && a2 < v85)
    {
      uint64_t v18 = (void (**)(void, void))(v8 + 8);
      Swift::Int v93 = v13;
      do
      {
        uint64_t v96 = a2;
        sub_10002D970((uint64_t)a2, (uint64_t)v100);
        sub_10002D970((uint64_t)a4, (uint64_t)v97);
        uint64_t v19 = v101;
        uint64_t v20 = (char *)v102;
        Swift::Int v21 = sub_100020A28(v100, v101);
        uint64_t v22 = (void (*)(uint64_t, char *))*((void *)v20 + 1);
        uint64_t v89 = v21;
        uint64_t v91 = v20;
        uint64_t v92 = v19;
        unsigned int v90 = v22;
        v22(v19, v20);
        uint64_t v24 = v98;
        uint64_t v23 = v99;
        uint64_t v25 = sub_100020A28(v97, v98);
        double v26 = *(void (**)(uint64_t, void))(v23 + 8);
        double v27 = v94;
        uint64_t v86 = v25;
        uint64_t v88 = (void (*)(void, void *))v23;
        char v87 = v26;
        v26(v24, v23);
        sub_1000E8BC0();
        double v29 = fabs(v28);
        uint64_t v30 = v18;
        uint64_t v31 = (void (*)(unsigned char *, uint64_t))*v18;
        uint64_t v32 = v95;
        v31(v27, v95);
        v31(v13, v32);
        if (v29 <= 1.0)
        {
          uint64_t v35 = v101;
          uint64_t v34 = v102;
          sub_100020A28(v100, v101);
          LODWORD(v35) = ((unsigned __int8 (*)(uint64_t, void *))v34[2])(v35, v34);
          uint64_t v37 = v98;
          uint64_t v36 = v99;
          sub_100020A28(v97, v98);
          char v33 = v35 < (*(unsigned __int8 (**)(uint64_t, uint64_t))(v36 + 16))(v37, v36);
          Swift::Int v13 = v93;
        }
        else
        {
          Swift::Int v13 = v93;
          v90(v92, v91);
          v87(v24, v88);
          char v33 = sub_1000E8BE0();
          v31(v27, v32);
          v31(v13, v32);
        }
        uint64_t v18 = v30;
        sub_100020AC0((uint64_t)v97);
        sub_100020AC0((uint64_t)v100);
        uint64_t v38 = v105;
        unint64_t v39 = (unint64_t)v96;
        if (v33)
        {
          unint64_t v40 = (unint64_t)(v96 + 40);
          if (v105 >= v96 && (unint64_t)v105 < v40 && v105 == v96)
          {
            uint64_t v38 = v96;
          }
          else
          {
            long long v41 = *(_OWORD *)v96;
            long long v42 = *((_OWORD *)v96 + 1);
            *((void *)v105 + 4) = *((void *)v96 + 4);
            *uint64_t v38 = v41;
            v38[1] = v42;
          }
        }
        else
        {
          uint64_t v43 = v104 + 40;
          if (v105 != v104 || v105 >= v43)
          {
            long long v44 = *(_OWORD *)v104;
            long long v45 = *((_OWORD *)v104 + 1);
            *((void *)v105 + 4) = *((void *)v104 + 4);
            *uint64_t v38 = v44;
            v38[1] = v45;
          }
          uint64_t v104 = v43;
          unint64_t v40 = v39;
        }
        uint64_t v105 = (char *)v38 + 40;
        a4 = v104;
        if ((unint64_t)v104 >= v84) {
          break;
        }
        a2 = (char *)v40;
      }
      while (v40 < (unint64_t)v85);
    }
LABEL_47:
    sub_100030ED8((void **)&v105, (const void **)&v104, &v103);
    return 1;
  }
  uint64_t result = sub_1000EA9C0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SessionAssembler()
{
  return self;
}

void *sub_1000A9038(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_10001B38C(&qword_10013A078);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Session();
  uint64_t v7 = __chkstk_darwin(v24);
  uint64_t v23 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  v20[1] = v2;
  uint64_t v21 = v9;
  Swift::Int v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v22 = a1;
  do
  {
    uint64_t v16 = *(void *)(a1 + 8 * v14 + 32);
    swift_bridgeObjectRetain();
    v25(v14, v16);
    swift_bridgeObjectRelease();
    if ((*v13)(v6, 1, v24) == 1)
    {
      sub_100028B6C((uint64_t)v6, &qword_10013A078);
    }
    else
    {
      sub_1000A9838((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Session);
      sub_1000A9838((uint64_t)v11, v23, (uint64_t (*)(void))type metadata accessor for Session);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = (void *)sub_1000A4A80(0, v15[2] + 1, 1, (unint64_t)v15);
      }
      unint64_t v18 = v15[2];
      unint64_t v17 = v15[3];
      if (v18 >= v17 >> 1) {
        uint64_t v15 = (void *)sub_1000A4A80(v17 > 1, v18 + 1, 1, (unint64_t)v15);
      }
      void v15[2] = v18 + 1;
      sub_1000A9838(v23, (uint64_t)v15+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18, (uint64_t (*)(void))type metadata accessor for Session);
      a1 = v22;
    }
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

void *sub_1000A9300(void *a1)
{
  uint64_t v2 = type metadata accessor for AppearanceEvent(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = a1;
  swift_bridgeObjectRetain();
  sub_1000A74F4(v24);
  uint64_t v5 = v24[0][2];
  if (v5)
  {
    v22[1] = v24[0];
    void v22[2] = 0;
    uint64_t v6 = v24[0] + 4;
    swift_retain();
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      sub_10002D970((uint64_t)v6, (uint64_t)v24);
      sub_10002D970((uint64_t)v24, (uint64_t)v23);
      sub_10001B38C(&qword_1001373E0);
      if (swift_dynamicCast())
      {
        sub_1000A9774((uint64_t)v4, type metadata accessor for AppearanceEvent);
        if (v8[2])
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v7 = sub_1000A4D48(0, v7[2] + 1, 1, v7);
          }
          unint64_t v10 = v7[2];
          unint64_t v9 = v7[3];
          if (v10 >= v9 >> 1) {
            uint64_t v7 = sub_1000A4D48((void *)(v9 > 1), v10 + 1, 1, v7);
          }
          uint64_t v7[2] = v10 + 1;
          v7[v10 + 4] = v8;
          swift_bridgeObjectRelease();
          uint64_t v8 = _swiftEmptyArrayStorage;
        }
      }
      sub_10002D970((uint64_t)v24, (uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1000A4D34(0, v8[2] + 1, 1, v8);
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1) {
        uint64_t v8 = sub_1000A4D34((void *)(v11 > 1), v12 + 1, 1, v8);
      }
      void v8[2] = v12 + 1;
      sub_1000A9708(v23, (uint64_t)&v8[5 * v12 + 4]);
      sub_100020AC0((uint64_t)v24);
      v6 += 5;
      --v5;
    }
    while (v5);
    swift_release();
    if (v8[2]) {
      goto LABEL_16;
    }
LABEL_22:
    swift_release();
    uint64_t v15 = swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_22;
  }
LABEL_16:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1000A4D48(0, v7[2] + 1, 1, v7);
  }
  unint64_t v14 = v7[2];
  unint64_t v13 = v7[3];
  if (v14 >= v13 >> 1) {
    uint64_t v7 = sub_1000A4D48((void *)(v13 > 1), v14 + 1, 1, v7);
  }
  uint64_t v7[2] = v14 + 1;
  v7[v14 + 4] = v8;
  uint64_t v15 = swift_release();
LABEL_23:
  __chkstk_darwin(v15);
  v22[-2] = v7;
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_1000A9038(v16, (void (*)(uint64_t, uint64_t))sub_1000A9720);
  swift_bridgeObjectRelease_n();
  sub_10001B38C(&qword_100137370);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1000F1610;
  uint64_t v19 = v17[2];
  *(void *)(v18 + 56) = &type metadata for Int;
  *(void *)(v18 + 64) = &protocol witness table for Int;
  *(void *)(v18 + 32) = v19;
  sub_100026434();
  uint64_t v20 = (void *)sub_1000EA720();
  sub_1000EA620();
  sub_1000E9220();
  swift_bridgeObjectRelease();

  return v17;
}

uint64_t sub_1000A9708(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000A9720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A63EC(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for Session()
{
  uint64_t result = qword_10013A0F8;
  if (!qword_10013A0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}