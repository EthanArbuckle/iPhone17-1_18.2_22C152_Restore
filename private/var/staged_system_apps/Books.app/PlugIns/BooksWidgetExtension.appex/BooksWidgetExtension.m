uint64_t sub_100004608()
{
  uint64_t v0;

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t variable initialization expression of WidgetBookInfo.coverURL()
{
  return 0;
}

uint64_t variable initialization expression of WidgetBookInfo.progress()
{
  return 0;
}

uint64_t variable initialization expression of WidgetBookInfo.cloudAssetType()
{
  return 0;
}

uint64_t type metadata accessor for BundleFinder()
{
  return self;
}

void type metadata accessor for BDSLibraryContentAssetType(uint64_t a1)
{
}

void type metadata accessor for BDSCloudAssetType(uint64_t a1)
{
}

uint64_t sub_100004684(uint64_t a1, uint64_t a2)
{
  return sub_100004C7C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000046AC(uint64_t a1, id *a2)
{
  uint64_t result = sub_1000A4320();
  *a2 = 0;
  return result;
}

uint64_t sub_100004724(uint64_t a1, id *a2)
{
  char v3 = sub_1000A4330();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1000047A4@<X0>(void *a1@<X8>)
{
  sub_1000A4340();
  NSString v2 = sub_1000A4300();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000047EC()
{
  uint64_t v0 = sub_1000A4340();
  uint64_t v2 = v1;
  if (v0 == sub_1000A4340() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1000A46A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100004878@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1000A4300();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000048C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A4340();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000048EC(uint64_t a1)
{
  uint64_t v2 = sub_100004A38(&qword_1000CC9B0, type metadata accessor for BDSCloudAssetType);
  uint64_t v3 = sub_100004A38(&qword_1000CC9B8, type metadata accessor for BDSCloudAssetType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000049A8()
{
  return sub_100004A38(&qword_1000CC970, type metadata accessor for BDSCloudAssetType);
}

uint64_t sub_1000049F0()
{
  return sub_100004A38(&qword_1000CC978, type metadata accessor for BDSCloudAssetType);
}

uint64_t sub_100004A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100004A80()
{
  return sub_100004A38(&qword_1000CC980, type metadata accessor for BDSCloudAssetType);
}

uint64_t sub_100004AC8(uint64_t a1)
{
  uint64_t v2 = sub_100004A38(&qword_1000CC9A0, type metadata accessor for BDSLibraryContentAssetType);
  uint64_t v3 = sub_100004A38(&qword_1000CC9A8, type metadata accessor for BDSLibraryContentAssetType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004B84(uint64_t a1, uint64_t a2)
{
  return sub_100004C7C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100004BA4()
{
  return sub_100004A38(&qword_1000CC988, type metadata accessor for BDSLibraryContentAssetType);
}

uint64_t sub_100004BEC()
{
  return sub_100004A38(&qword_1000CC990, type metadata accessor for BDSLibraryContentAssetType);
}

uint64_t sub_100004C34()
{
  return sub_100004A38(&qword_1000CC998, type metadata accessor for BDSLibraryContentAssetType);
}

uint64_t sub_100004C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1000A4340();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100004CC0()
{
  sub_1000A4340();
  sub_1000A4370();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100004D14()
{
  sub_1000A4340();
  sub_1000A4740();
  sub_1000A4370();
  Swift::Int v0 = sub_1000A4780();
  swift_bridgeObjectRelease();
  return v0;
}

__n128 initializeWithTake for NowPlayingInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100004D98(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100004DB8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_100004DF4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t *sub_100004E44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v11[16];
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
    uint64_t v13 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v13;
    v10[56] = v11[56];
    uint64_t v14 = *((void *)v11 + 9);
    *((void *)v10 + 8) = *((void *)v11 + 8);
    *((void *)v10 + 9) = v14;
    v15 = (void *)*((void *)v11 + 10);
    v16 = (void *)*((void *)v11 + 11);
    *((void *)v10 + 10) = v15;
    *((void *)v10 + 11) = v16;
    uint64_t v17 = *((void *)v11 + 13);
    *((void *)v10 + 12) = *((void *)v11 + 12);
    *((void *)v10 + 13) = v17;
    *((_WORD *)v10 + 56) = *((_WORD *)v11 + 56);
    uint64_t v18 = *((void *)v11 + 16);
    *((void *)v10 + 15) = *((void *)v11 + 15);
    *((void *)v10 + 16) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = v15;
    id v20 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100004FDC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100005020(uint64_t a1, uint64_t a2)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000050EC(void *a1, void *a2, uint64_t a3)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A38E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 1);
  *(void *)uint64_t v8 = *(void *)v9;
  *((void *)v8 + 1) = v10;
  v8[16] = v9[16];
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  uint64_t v11 = *((void *)v9 + 6);
  *((void *)v8 + 5) = *((void *)v9 + 5);
  *((void *)v8 + 6) = v11;
  v8[56] = v9[56];
  uint64_t v12 = *((void *)v9 + 9);
  *((void *)v8 + 8) = *((void *)v9 + 8);
  *((void *)v8 + 9) = v12;
  uint64_t v13 = (void *)*((void *)v9 + 10);
  uint64_t v14 = (void *)*((void *)v9 + 11);
  *((void *)v8 + 10) = v13;
  *((void *)v8 + 11) = v14;
  uint64_t v15 = *((void *)v9 + 13);
  *((void *)v8 + 12) = *((void *)v9 + 12);
  *((void *)v8 + 13) = v15;
  *((_WORD *)v8 + 56) = *((_WORD *)v9 + 56);
  uint64_t v16 = *((void *)v9 + 16);
  *((void *)v8 + 15) = *((void *)v9 + 15);
  *((void *)v8 + 16) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = v13;
  id v18 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100005234(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A38E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  v8[16] = v9[16];
  *((void *)v8 + 1) = v10;
  *((void *)v8 + 3) = *((void *)v9 + 3);
  *((void *)v8 + 4) = *((void *)v9 + 4);
  *((void *)v8 + 5) = *((void *)v9 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v9 + 6);
  v8[56] = v9[56];
  *((void *)v8 + 6) = v11;
  *((void *)v8 + 8) = *((void *)v9 + 8);
  *((void *)v8 + 9) = *((void *)v9 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)*((void *)v8 + 10);
  uint64_t v13 = (void *)*((void *)v9 + 10);
  *((void *)v8 + 10) = v13;
  id v14 = v13;

  uint64_t v15 = (void *)*((void *)v9 + 11);
  uint64_t v16 = (void *)*((void *)v8 + 11);
  *((void *)v8 + 11) = v15;
  id v17 = v15;

  *((void *)v8 + 12) = *((void *)v9 + 12);
  *((void *)v8 + 13) = *((void *)v9 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[112] = v9[112];
  v8[113] = v9[113];
  *((void *)v8 + 15) = *((void *)v9 + 15);
  *((void *)v8 + 16) = *((void *)v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100005400(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 7);
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  *((_OWORD *)v9 + 7) = v11;
  *((void *)v9 + 16) = *((void *)v10 + 16);
  long long v12 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v12;
  long long v13 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v13;
  long long v14 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v14;
  return a1;
}

char *sub_1000054FC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  v9[16] = v10[16];
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *((void *)v9 + 5) = *((void *)v10 + 5);
  swift_bridgeObjectRelease();
  *((void *)v9 + 6) = *((void *)v10 + 6);
  v9[56] = v10[56];
  uint64_t v11 = *((void *)v10 + 9);
  *((void *)v9 + 8) = *((void *)v10 + 8);
  *((void *)v9 + 9) = v11;
  swift_bridgeObjectRelease();
  long long v12 = (void *)*((void *)v9 + 10);
  *((void *)v9 + 10) = *((void *)v10 + 10);

  long long v13 = (void *)*((void *)v9 + 11);
  *((void *)v9 + 11) = *((void *)v10 + 11);

  uint64_t v14 = *((void *)v10 + 13);
  *((void *)v9 + 12) = *((void *)v10 + 12);
  *((void *)v9 + 13) = v14;
  swift_bridgeObjectRelease();
  v9[112] = v10[112];
  v9[113] = v10[113];
  uint64_t v15 = *((void *)v10 + 16);
  *((void *)v9 + 15) = *((void *)v10 + 15);
  *((void *)v9 + 16) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100005688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000569C);
}

uint64_t sub_10000569C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 72);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100005764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100005778);
}

uint64_t sub_100005778(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 72) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SmallWidgetView()
{
  uint64_t result = qword_1000CCA30;
  if (!qword_1000CCA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100005888()
{
  sub_10000591C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10000591C()
{
  if (!qword_1000CCA40)
  {
    sub_1000A38E0();
    unint64_t v0 = sub_1000A38F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CCA40);
    }
  }
}

uint64_t sub_100005974()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100005990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v5 = sub_1000A38E0();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  v44 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000A3CB0();
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004FDC(&qword_1000CCA70);
  __chkstk_darwin(v42);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = sub_100004FDC(&qword_1000CCA78);
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  long long v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004FDC(&qword_1000CCA80);
  __chkstk_darwin(v36);
  v37 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v11 = sub_1000A4070();
  v11[1] = v15;
  uint64_t v16 = sub_100004FDC(&qword_1000CCA88);
  sub_100005ED8(a2, a1, (uint64_t)v11 + *(int *)(v16 + 44));
  sub_1000A3CA0();
  uint64_t v47 = a2;
  sub_1000A4070();
  sub_100004FDC(&qword_1000CCA90);
  sub_10000B17C(&qword_1000CCA98, &qword_1000CCA70);
  sub_100008B5C();
  v38 = v13;
  sub_1000A3F20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v43);
  sub_10000A9C0((uint64_t)v11, &qword_1000CCA70);
  uint64_t v17 = a2 + *(int *)(type metadata accessor for SmallWidgetView() + 20);
  long long v18 = *(_OWORD *)(v17 + 80);
  long long v50 = *(_OWORD *)(v17 + 64);
  long long v51 = v18;
  long long v52 = *(_OWORD *)(v17 + 96);
  char v53 = *(unsigned char *)(v17 + 112);
  long long v19 = *(_OWORD *)(v17 + 48);
  long long v48 = *(_OWORD *)(v17 + 32);
  long long v49 = v19;
  if (sub_10001A23C())
  {
    uint64_t v21 = (uint64_t)v44;
    uint64_t v20 = v45;
    uint64_t v22 = v46;
    unint64_t v23 = *(void *)(v17 + 120);
    unint64_t v24 = *(void *)(v17 + 128);
    if (sub_10001A23C() & 1) != 0 && v24 && (__PAIR128__(v24, v23) == v50 || (sub_1000A46A0())) {
      (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v21, enum case for ColorScheme.light(_:), v22);
    }
    else {
      sub_100009DB8(&qword_1000CC9C8, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, v21);
    }
  }
  else
  {
    uint64_t v21 = (uint64_t)v44;
    uint64_t v20 = v45;
    uint64_t v22 = v46;
    (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, enum case for ColorScheme.light(_:), v46);
  }
  uint64_t v25 = v41;
  uint64_t v26 = v40;
  uint64_t v27 = v39;
  v28 = v38;
  uint64_t v29 = (uint64_t)v37;
  uint64_t v30 = v36;
  uint64_t KeyPath = swift_getKeyPath();
  v32 = (uint64_t *)(v29 + *(int *)(v30 + 36));
  uint64_t v33 = sub_100004FDC(&qword_1000CCAC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)v32 + *(int *)(v33 + 28), v21, v22);
  uint64_t *v32 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v29, v28, v26);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
  return sub_10000A95C(v29, v25, &qword_1000CCA80);
}

uint64_t sub_100005ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v210 = a2;
  uint64_t v226 = a3;
  uint64_t v224 = type metadata accessor for LogoView();
  uint64_t v4 = __chkstk_darwin(v224);
  v217 = (char *)&v180 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v225 = (char *)&v180 - v6;
  uint64_t v187 = sub_100004FDC(&qword_1000CCAE0);
  uint64_t v184 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  v183 = (char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_100004FDC(&qword_1000CCAE8);
  uint64_t v188 = *(void *)(v190 - 8);
  __chkstk_darwin(v190);
  v186 = (char *)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = sub_100004FDC(&qword_1000CCAF0);
  uint64_t v9 = __chkstk_darwin(v223);
  v185 = (char *)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v189 = (uint64_t)&v180 - v11;
  uint64_t v12 = sub_1000A3B90();
  uint64_t v203 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v202 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000A3C90();
  uint64_t v205 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v204 = (char *)&v180 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FDC(&qword_1000CCAF8);
  __chkstk_darwin(v16 - 8);
  long long v18 = (uint64_t *)((char *)&v180 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v211 = (int *)type metadata accessor for SmallEmptyStateView(0);
  __chkstk_darwin(v211);
  uint64_t v20 = (char *)&v180 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = sub_100004FDC(&qword_1000CCB00);
  uint64_t v193 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  v192 = (char *)&v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004FDC(&qword_1000CCB08);
  uint64_t v197 = *(void *)(v22 - 8);
  uint64_t v198 = v22;
  __chkstk_darwin(v22);
  v194 = (char *)&v180 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_100004FDC(&qword_1000CCB10);
  uint64_t v24 = __chkstk_darwin(v216);
  v196 = (char *)&v180 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  v200 = (char *)&v180 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v199 = (char *)&v180 - v29;
  __chkstk_darwin(v28);
  uint64_t v201 = (uint64_t)&v180 - v30;
  uint64_t v219 = sub_100004FDC(&qword_1000CCB18);
  __chkstk_darwin(v219);
  uint64_t v222 = (uint64_t)&v180 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_100004FDC(&qword_1000CCB20);
  __chkstk_darwin(v213);
  uint64_t v214 = (uint64_t)&v180 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_100004FDC(&qword_1000CCB28);
  __chkstk_darwin(v220);
  v215 = (char *)&v180 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v182 = (uint64_t)&v180 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v191 = (uint64_t)&v180 - v38;
  __chkstk_darwin(v37);
  uint64_t v207 = (uint64_t)&v180 - v39;
  uint64_t v40 = sub_1000A3930();
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v180 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = type metadata accessor for SmallReadingGoalView(0);
  __chkstk_darwin(v227);
  uint64_t v45 = (char *)&v180 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = sub_100004FDC(&qword_1000CCB38);
  uint64_t v209 = *(void *)(v212 - 8);
  uint64_t v46 = __chkstk_darwin(v212);
  v206 = (char *)&v180 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v208 = (char *)&v180 - v48;
  uint64_t v49 = sub_100004FDC(&qword_1000CCB40);
  uint64_t v50 = __chkstk_darwin(v49 - 8);
  v221 = (char *)&v180 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v218 = (char *)&v180 - v52;
  char v53 = (long long *)(a1 + *(int *)(type metadata accessor for SmallWidgetView() + 20));
  double v54 = *(double *)v53;
  uint64_t v55 = *((void *)v53 + 3);
  if (*(double *)v53 > 0.0 || v55 >= 1)
  {
    uint64_t v91 = *((void *)v53 + 1);
    char v92 = *((unsigned char *)v53 + 16);
    uint64_t v93 = *((void *)v53 + 6);
    char v94 = *((unsigned char *)v53 + 56);
    long long v95 = v53[4];
    uint64_t v96 = *((void *)v53 + 10);
    uint64_t v97 = *((void *)v53 + 11);
    char v98 = *((unsigned char *)v53 + 112);
    char v99 = *((unsigned char *)v53 + 113);
    *(void *)&long long v232 = *(void *)v53;
    *((void *)&v232 + 1) = v91;
    LOBYTE(v233) = v92;
    *((void *)&v233 + 1) = v55;
    long long v234 = v53[2];
    *(void *)&long long v235 = v93;
    BYTE8(v235) = v94;
    long long v236 = v95;
    *(void *)&long long v237 = v96;
    *((void *)&v237 + 1) = v97;
    long long v238 = v53[6];
    LOBYTE(v239[0]) = v98;
    BYTE1(v239[0]) = v99;
    *(_OWORD *)((char *)v239 + 8) = *(long long *)((char *)v53 + 120);
    v100 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    uint64_t v180 = v40;
    v181 = v43;
    v100(v43, v210, v40);
    uint64_t KeyPath = swift_getKeyPath();
    long long v102 = v236;
    *(_OWORD *)(v45 + 120) = v237;
    long long v103 = v239[0];
    *(_OWORD *)(v45 + 136) = v238;
    *(_OWORD *)(v45 + 152) = v103;
    long long v104 = v232;
    *(_OWORD *)(v45 + 56) = v233;
    long long v105 = v235;
    *(_OWORD *)(v45 + 72) = v234;
    *(_OWORD *)(v45 + 88) = v105;
    *(_OWORD *)(v45 + 104) = v102;
    v45[32] = 0;
    *(void *)uint64_t v45 = KeyPath;
    *((void *)v45 + 1) = 0;
    *((void *)v45 + 2) = 0;
    *((void *)v45 + 3) = 0;
    *((void *)v45 + 21) = *(void *)&v239[1];
    *(_OWORD *)(v45 + 40) = v104;
    uint64_t v106 = v227;
    v107 = &v45[*(int *)(v227 + 24)];
    uint64_t v108 = enum case for BlendMode.plusLighter(_:);
    uint64_t v109 = sub_1000A4090();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v109 - 8) + 104))(v107, v108, v109);
    v110 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
    *(void *)&v107[v110[5]] = 2;
    *(void *)&v107[v110[6]] = 0x4010000000000000;
    *(void *)&v107[v110[7]] = 0x4040000000000000;
    *(void *)&v107[v110[8]] = 0x4044000000000000;
    *(void *)&v107[v110[9]] = 0x4028000000000000;
    v111 = &v107[v110[10]];
    uint64_t v112 = sub_100004FDC(&qword_1000CCB90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v111, 1, 1, v112);
    uint64_t v113 = v110[11];
    sub_10000A32C((uint64_t)&v232);
    *(void *)&v107[v113] = sub_1000A3DE0();
    uint64_t v114 = v110[12];
    *(void *)&v107[v114] = sub_1000A3F70();
    uint64_t v115 = v110[13];
    sub_1000A3F70();
    uint64_t v116 = sub_1000A3F80();
    swift_release();
    *(void *)&v107[v115] = v116;
    *(void *)&v107[v110[14]] = 0x4008000000000000;
    *(void *)&v107[v110[15]] = 0x4028000000000000;
    *(void *)&v107[v110[16]] = 0x404E000000000000;
    *(void *)&v107[v110[17]] = 0x4036000000000000;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v45[*(int *)(v106 + 28)], v181, v180);
    long long v117 = v53[7];
    v242[4] = v53[6];
    v242[5] = v117;
    *(void *)&v242[6] = *((void *)v53 + 16);
    long long v118 = v53[3];
    v242[0] = v53[2];
    v242[1] = v118;
    long long v119 = v53[5];
    v242[2] = v53[4];
    v242[3] = v119;
    long long v120 = v53[1];
    long long v240 = *v53;
    long long v241 = v120;
    v245[0] = v242[0];
    v245[1] = v242[1];
    v245[3] = v119;
    v245[4] = v242[4];
    LOBYTE(v245[5]) = v242[5];
    v245[2] = v242[2];
    if (v242[2] == __PAIR128__(0x80000001000A5050, 0xD000000000000023) || (sub_1000A46A0() & 1) != 0)
    {
      sub_10000A32C((uint64_t)&v240);
      uint64_t v121 = v207;
      sub_100008CAC(v207);
      sub_10000A398((uint64_t)&v240);
    }
    else
    {
      uint64_t v121 = v207;
      sub_10000832C((uint64_t)v245, v207);
    }
    uint64_t v122 = (uint64_t)v217;
    v123 = v206;
    v217 = (char *)sub_1000A3490();
    (*(void (**)(uint64_t, void, uint64_t, char *))(*((void *)v217 - 1) + 56))(v121, 0, 1, v217);
    uint64_t v124 = sub_10000AA7C(&qword_1000CCB60, (void (*)(uint64_t))type metadata accessor for SmallReadingGoalView);
    uint64_t v125 = v227;
    sub_1000A3E80();
    sub_10000A9C0(v121, &qword_1000CCB30);
    sub_10000AA1C((uint64_t)v45, type metadata accessor for SmallReadingGoalView);
    v127 = v208;
    uint64_t v126 = v209;
    v128 = v123;
    uint64_t v129 = v212;
    (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v208, v128, v212);
    (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v214, v127, v129);
    swift_storeEnumTagMultiPayload();
    *(void *)&v261[0] = v125;
    *((void *)&v261[0] + 1) = v124;
    swift_getOpaqueTypeConformance2();
    sub_10000A634();
    uint64_t v130 = (uint64_t)v215;
    sub_1000A3C00();
    sub_10000B1C0(v130, v222, &qword_1000CCB28);
    swift_storeEnumTagMultiPayload();
    sub_10000A558();
    sub_10000A77C();
    uint64_t v131 = (uint64_t)v218;
    sub_1000A3C00();
    uint64_t v132 = v130;
    v133 = v217;
    sub_10000A9C0(v132, &qword_1000CCB28);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v129);
    uint64_t v134 = (uint64_t)v221;
    uint64_t v135 = v224;
    uint64_t v136 = (uint64_t)v225;
    uint64_t v137 = v226;
  }
  else
  {
    uint64_t v210 = v14;
    uint64_t v56 = *((void *)v53 + 1);
    char v57 = *((unsigned char *)v53 + 16);
    uint64_t v58 = *((void *)v53 + 6);
    char v59 = *((unsigned char *)v53 + 56);
    uint64_t v60 = *((void *)v53 + 8);
    uint64_t v61 = *((void *)v53 + 9);
    uint64_t v62 = *((void *)v53 + 10);
    uint64_t v63 = *((void *)v53 + 11);
    char v64 = *((unsigned char *)v53 + 112);
    char v65 = *((unsigned char *)v53 + 113);
    *(double *)&long long v247 = v54;
    *((void *)&v247 + 1) = v56;
    LOBYTE(v248) = v57;
    long long v249 = v53[2];
    *((void *)&v248 + 1) = v55;
    *(void *)&long long v250 = v58;
    BYTE8(v250) = v59;
    *(void *)&long long v251 = v60;
    *((void *)&v251 + 1) = v61;
    *(void *)&long long v252 = v62;
    *((void *)&v252 + 1) = v63;
    long long v253 = v53[6];
    v254[0] = v64;
    v254[1] = v65;
    *(_OWORD *)&v254[8] = *(long long *)((char *)v53 + 120);
    if (v60 == 0xD000000000000023 && v61 == 0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
    {
      uint64_t v209 = v12;
      *long long v18 = swift_getKeyPath();
      sub_100004FDC(&qword_1000CCAD8);
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = swift_getKeyPath();
      *((void *)v20 + 2) = 0;
      *((void *)v20 + 3) = 0;
      v20[32] = 0;
      *(void *)uint64_t v20 = v66;
      *((void *)v20 + 1) = 0;
      v67 = v211;
      sub_10000A95C((uint64_t)v18, (uint64_t)&v20[v211[5]], &qword_1000CCAF8);
      v68 = &v20[v67[6]];
      long long v69 = *(_OWORD *)v254;
      *((_OWORD *)v68 + 6) = v253;
      *((_OWORD *)v68 + 7) = v69;
      *((void *)v68 + 16) = *(void *)&v254[16];
      long long v70 = v250;
      *((_OWORD *)v68 + 2) = v249;
      *((_OWORD *)v68 + 3) = v70;
      long long v71 = v252;
      *((_OWORD *)v68 + 4) = v251;
      *((_OWORD *)v68 + 5) = v71;
      long long v72 = v248;
      *(_OWORD *)v68 = v247;
      *((_OWORD *)v68 + 1) = v72;
      v73 = &v20[v67[7]];
      uint64_t v74 = enum case for ColorScheme.dark(_:);
      uint64_t v75 = sub_1000A38E0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 104))(v73, v74, v75);
      v76 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
      v77 = &v73[v76[5]];
      uint64_t v78 = enum case for BlendMode.plusLighter(_:);
      uint64_t v79 = sub_1000A4090();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 104))(v77, v78, v79);
      *(void *)&v73[v76[6]] = 0x3FF0000000000000;
      uint64_t v80 = v76[7];
      sub_10000A32C((uint64_t)&v247);
      *(void *)&v73[v80] = sub_1000A3DF0();
      uint64_t v81 = v76[8];
      sub_1000A3DB0();
      *(void *)&v73[v81] = v82;
      uint64_t v83 = v76[9];
      *(_DWORD *)&v73[v83] = sub_1000A3C40();
      uint64_t v84 = v76[10];
      sub_1000A3F70();
      uint64_t v85 = sub_1000A3F80();
      swift_release();
      *(void *)&v73[v84] = v85;
      *(void *)&v73[v76[11]] = 0x4018000000000000;
      *(void *)&v73[v76[12]] = 0x4014000000000000;
      long long v86 = v53[1];
      long long v240 = *v53;
      long long v241 = v86;
      long long v87 = v53[7];
      v242[4] = v53[6];
      v242[5] = v87;
      *(void *)&v242[6] = *((void *)v53 + 16);
      long long v88 = v53[3];
      v242[0] = v53[2];
      v242[1] = v88;
      long long v89 = v53[5];
      v242[2] = v53[4];
      v242[3] = v89;
      long long v232 = v242[0];
      long long v233 = v88;
      long long v235 = v89;
      long long v236 = v242[4];
      LOBYTE(v237) = v242[5];
      long long v234 = v242[2];
      if (v242[2] == __PAIR128__(0x80000001000A5050, 0xD000000000000023) || (sub_1000A46A0() & 1) != 0)
      {
        sub_10000A32C((uint64_t)&v240);
        uint64_t v90 = v191;
        sub_100008CAC(v191);
        sub_10000A398((uint64_t)&v240);
      }
      else
      {
        uint64_t v90 = v191;
        sub_10000832C((uint64_t)&v232, v191);
      }
      uint64_t v122 = (uint64_t)v217;
      v145 = v204;
      v217 = (char *)sub_1000A3490();
      (*(void (**)(uint64_t, void, uint64_t, char *))(*((void *)v217 - 1) + 56))(v90, 0, 1, v217);
      uint64_t v146 = sub_10000AA7C(&qword_1000CCB70, (void (*)(uint64_t))type metadata accessor for SmallEmptyStateView);
      v147 = v192;
      v148 = v211;
      sub_1000A3E80();
      sub_10000A9C0(v90, &qword_1000CCB30);
      sub_10000AA1C((uint64_t)v20, type metadata accessor for SmallEmptyStateView);
      sub_1000A3C70();
      *(void *)&v245[0] = v148;
      *((void *)&v245[0] + 1) = v146;
      v211 = (int *)&opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      v151 = v194;
      uint64_t v150 = v195;
      sub_1000A3F30();
      (*(void (**)(char *, uint64_t))(v205 + 8))(v145, v210);
      (*(void (**)(char *, uint64_t))(v193 + 8))(v147, v150);
      *(void *)&v245[0] = sub_10000AAC4();
      *((void *)&v245[0] + 1) = v152;
      *(void *)&v261[0] = v150;
      *((void *)&v261[0] + 1) = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      sub_10000A504();
      uint64_t v153 = (uint64_t)v196;
      uint64_t v154 = v198;
      sub_1000A3F00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v197 + 8))(v151, v154);
      v155 = v202;
      sub_1000A3B80();
      v156 = v200;
      sub_1000A39C0();
      (*(void (**)(char *, uint64_t))(v203 + 8))(v155, v209);
      sub_10000A9C0(v153, &qword_1000CCB10);
      sub_10000AD44();
      v157 = v199;
      sub_1000A39D0();
      swift_bridgeObjectRelease();
      uint64_t v158 = (uint64_t)v156;
      v133 = v217;
      sub_10000A9C0(v158, &qword_1000CCB10);
      uint64_t v159 = (uint64_t)v157;
      uint64_t v160 = v201;
      sub_10000A95C(v159, v201, &qword_1000CCB10);
      sub_10000B1C0(v160, v214, &qword_1000CCB10);
      swift_storeEnumTagMultiPayload();
      uint64_t v161 = sub_10000AA7C(&qword_1000CCB60, (void (*)(uint64_t))type metadata accessor for SmallReadingGoalView);
      *(void *)&v245[0] = v227;
      *((void *)&v245[0] + 1) = v161;
      swift_getOpaqueTypeConformance2();
      sub_10000A634();
      uint64_t v162 = (uint64_t)v215;
      sub_1000A3C00();
      sub_10000B1C0(v162, v222, &qword_1000CCB28);
      swift_storeEnumTagMultiPayload();
      sub_10000A558();
      sub_10000A77C();
      uint64_t v131 = (uint64_t)v218;
      sub_1000A3C00();
      sub_10000A9C0(v162, &qword_1000CCB28);
      sub_10000A9C0(v160, &qword_1000CCB10);
      uint64_t v136 = (uint64_t)v225;
      uint64_t v137 = v226;
      uint64_t v135 = v224;
      uint64_t v134 = (uint64_t)v221;
    }
    else
    {
      uint64_t v227 = (uint64_t)(v53 + 2);
      uint64_t v138 = swift_getKeyPath();
      sub_10000A32C((uint64_t)&v247);
      uint64_t v139 = sub_1000A3DE0();
      *(_OWORD *)((char *)&v245[6] + 7) = v253;
      *(_OWORD *)((char *)&v245[5] + 7) = v252;
      *(_OWORD *)((char *)&v245[2] + 7) = v249;
      *(_OWORD *)((char *)&v245[1] + 7) = v248;
      *(_OWORD *)((char *)&v245[7] + 7) = *(_OWORD *)v254;
      *(void *)((char *)&v245[8] + 7) = *(void *)&v254[16];
      *(_OWORD *)((char *)&v245[3] + 7) = v250;
      *(_OWORD *)((char *)&v245[4] + 7) = v251;
      *(_OWORD *)((char *)v245 + 7) = v247;
      *(_OWORD *)((char *)&v242[5] + 1) = v245[5];
      *(_OWORD *)((char *)&v242[6] + 1) = v245[6];
      *(_OWORD *)((char *)&v242[7] + 1) = v245[7];
      *(_OWORD *)((char *)&v242[1] + 1) = v245[1];
      *(_OWORD *)((char *)&v242[2] + 1) = v245[2];
      char v246 = 0;
      long long v240 = (unint64_t)v138;
      long long v241 = 0uLL;
      LOBYTE(v242[0]) = 0;
      *(_OWORD *)((char *)&v242[3] + 1) = v245[3];
      *(_OWORD *)((char *)&v242[4] + 1) = v245[4];
      *(_OWORD *)((char *)v242 + 1) = v245[0];
      v242[8] = *(_OWORD *)((char *)&v245[7] + 15);
      long long v243 = xmmword_1000A8D40;
      *(void *)&long long v244 = v139;
      *((void *)&v244 + 1) = 0x4036000000000000;
      long long v140 = v53[7];
      long long v266 = v53[6];
      long long v267 = v140;
      uint64_t v268 = *((void *)v53 + 16);
      long long v141 = v53[3];
      long long v262 = v53[2];
      long long v263 = v141;
      long long v142 = v53[4];
      long long v265 = v53[5];
      long long v264 = v142;
      long long v143 = *v53;
      v261[1] = v53[1];
      v261[0] = v143;
      v269[0] = v262;
      v269[1] = v263;
      v269[3] = v265;
      v269[4] = v266;
      char v270 = v267;
      v269[2] = v142;
      if (v142 == __PAIR128__(0x80000001000A5050, 0xD000000000000023) || (sub_1000A46A0() & 1) != 0)
      {
        sub_10000A32C((uint64_t)v261);
        uint64_t v144 = v182;
        sub_100008CAC(v182);
        sub_10000A398((uint64_t)v261);
      }
      else
      {
        uint64_t v144 = v182;
        sub_10000832C((uint64_t)v269, v182);
      }
      uint64_t v122 = (uint64_t)v217;
      uint64_t v163 = sub_1000A3490();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v163 - 8) + 56))(v144, 0, 1, v163);
      unint64_t v164 = sub_10000A40C();
      v165 = v183;
      sub_1000A3E80();
      sub_10000A9C0(v144, &qword_1000CCB30);
      v239[3] = v242[8];
      v239[4] = v243;
      v239[5] = v244;
      long long v238 = v242[4];
      v239[0] = v242[5];
      v239[1] = v242[6];
      v239[2] = v242[7];
      long long v234 = v242[0];
      long long v235 = v242[1];
      long long v236 = v242[2];
      long long v237 = v242[3];
      long long v232 = v240;
      long long v233 = v241;
      sub_10000A460((uint64_t)&v232);
      v166 = v204;
      sub_1000A3C70();
      *(void *)&long long v255 = &type metadata for SmallBookProgressView;
      *((void *)&v255 + 1) = v164;
      uint64_t v167 = swift_getOpaqueTypeConformance2();
      v168 = v186;
      uint64_t v169 = v187;
      sub_1000A3F30();
      (*(void (**)(char *, uint64_t))(v205 + 8))(v166, v210);
      (*(void (**)(char *, uint64_t))(v184 + 8))(v165, v169);
      long long v170 = *(_OWORD *)(v227 + 48);
      long long v257 = *(_OWORD *)(v227 + 32);
      long long v258 = v170;
      long long v259 = *(_OWORD *)(v227 + 64);
      char v260 = *(unsigned char *)(v227 + 80);
      long long v171 = *(_OWORD *)(v227 + 16);
      long long v255 = *(_OWORD *)v227;
      long long v256 = v171;
      uint64_t v230 = sub_10006D98C(0);
      uint64_t v231 = v172;
      uint64_t v228 = v169;
      uint64_t v229 = v167;
      v133 = (char *)v163;
      swift_getOpaqueTypeConformance2();
      sub_10000A504();
      uint64_t v173 = (uint64_t)v185;
      uint64_t v174 = v190;
      sub_1000A3F00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v188 + 8))(v168, v174);
      uint64_t v175 = v189;
      sub_10000A95C(v173, v189, &qword_1000CCAF0);
      sub_10000B1C0(v175, v222, &qword_1000CCAF0);
      swift_storeEnumTagMultiPayload();
      sub_10000A558();
      sub_10000A77C();
      uint64_t v131 = (uint64_t)v218;
      sub_1000A3C00();
      sub_10000A9C0(v175, &qword_1000CCAF0);
      uint64_t v136 = (uint64_t)v225;
      uint64_t v137 = v226;
      uint64_t v134 = (uint64_t)v221;
      uint64_t v135 = v224;
    }
  }
  uint64_t v176 = swift_getKeyPath();
  *(void *)(v122 + 16) = 0;
  *(void *)(v122 + 24) = 0;
  *(unsigned char *)(v122 + 32) = 0;
  *(void *)uint64_t v122 = v176;
  *(void *)(v122 + 8) = 0;
  uint64_t v177 = v122 + *(int *)(v135 + 20);
  sub_1000A3490();
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(*((void *)v133 - 1) + 56))(v177, 1, 1, v133);
  sub_10000A888(v122, v136, (uint64_t (*)(void))type metadata accessor for LogoView);
  sub_10000B1C0(v131, v134, &qword_1000CCB40);
  sub_10000A8F0(v136, v122, (uint64_t (*)(void))type metadata accessor for LogoView);
  sub_10000B1C0(v134, v137, &qword_1000CCB40);
  uint64_t v178 = sub_100004FDC(&qword_1000CCB88);
  sub_10000A8F0(v122, v137 + *(int *)(v178 + 48), (uint64_t (*)(void))type metadata accessor for LogoView);
  sub_10000AA1C(v136, (uint64_t (*)(void))type metadata accessor for LogoView);
  sub_10000A9C0(v131, &qword_1000CCB40);
  sub_10000AA1C(v122, (uint64_t (*)(void))type metadata accessor for LogoView);
  return sub_10000A9C0(v134, &qword_1000CCB40);
}

uint64_t sub_100007964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v44 = sub_100004FDC(&qword_1000CCAC8);
  __chkstk_darwin(v44);
  uint64_t v47 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100004FDC(&qword_1000CCAD0);
  __chkstk_darwin(v40);
  uint64_t v41 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004FDC(&qword_1000CCAB0);
  __chkstk_darwin(v45);
  uint64_t v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for BackgroundView();
  __chkstk_darwin(v43);
  uint64_t v46 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = a1 + *(int *)(type metadata accessor for SmallWidgetView() + 20);
  long long v8 = *(_OWORD *)(v7 + 80);
  long long v68 = *(_OWORD *)(v7 + 64);
  long long v69 = v8;
  long long v70 = *(_OWORD *)(v7 + 96);
  char v9 = *(unsigned char *)(v7 + 112);
  char v71 = v9;
  long long v10 = *(_OWORD *)(v7 + 48);
  long long v66 = *(_OWORD *)(v7 + 32);
  long long v67 = v10;
  uint64_t v12 = *(void *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v13 = *(void *)(v7 + 48);
  char v14 = *(unsigned char *)(v7 + 56);
  uint64_t v15 = *(void *)(v7 + 64);
  uint64_t v39 = *(void *)(v7 + 72);
  uint64_t v38 = *(void *)(v7 + 80);
  uint64_t v37 = *(void *)(v7 + 88);
  uint64_t v36 = *(void *)(v7 + 96);
  uint64_t v35 = *(void *)(v7 + 104);
  uint64_t v17 = *(void *)(v7 + 120);
  unint64_t v16 = *(void *)(v7 + 128);
  if (sub_10001A23C() & 1) != 0 && v16 && (__PAIR128__(v16, v17) == v68 || (sub_1000A46A0()))
  {
    uint64_t v18 = *(void *)(v7 + 8);
    char v19 = *(unsigned char *)(v7 + 16);
    uint64_t v20 = *(void *)(v7 + 24);
    char v21 = *(unsigned char *)(v7 + 113);
    v49[0] = *(void *)v7;
    v49[1] = v18;
    char v50 = v19;
    uint64_t v51 = v20;
    uint64_t v52 = v12;
    uint64_t v53 = v11;
    uint64_t v54 = v13;
    char v55 = v14;
    uint64_t v56 = v15;
    uint64_t v57 = v39;
    uint64_t v58 = v38;
    uint64_t v59 = v37;
    uint64_t v60 = v36;
    uint64_t v61 = v35;
    char v62 = v9;
    char v63 = v21;
    uint64_t v64 = v17;
    unint64_t v65 = v16;
    sub_10000A32C((uint64_t)v49);
    uint64_t v22 = qword_1000CC680;
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    sub_10000A284(qword_1000D8058, qword_1000D8070);
    id v23 = sub_10005402C(v17, v16, 1);
    swift_bridgeObjectRelease();
    sub_10000A398((uint64_t)v49);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v25 = (uint64_t)v46;
    *uint64_t v46 = KeyPath;
    sub_100004FDC(&qword_1000CCAD8);
    swift_storeEnumTagMultiPayload();
    *(void *)(v25 + *(int *)(v43 + 20)) = v23;
    sub_10000A8F0(v25, v41, (uint64_t (*)(void))type metadata accessor for BackgroundView);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    sub_10000AA7C(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
    uint64_t v32 = (uint64_t)v42;
    sub_1000A3C00();
    sub_10000B1C0(v32, v47, &qword_1000CCAB0);
    swift_storeEnumTagMultiPayload();
    sub_100008C08();
    sub_1000A3C00();
    sub_10000A9C0(v32, &qword_1000CCAB0);
    uint64_t v28 = v25;
    return sub_10000AA1C(v28, (uint64_t (*)(void))type metadata accessor for BackgroundView);
  }
  if ((sub_10001A23C() & 1) == 0)
  {
    long long v29 = v68;
    if (qword_1000CC680 != -1) {
      swift_once();
    }
    sub_10000A284(qword_1000D8058, qword_1000D8070);
    id v30 = sub_10005402C(v29, *((unint64_t *)&v29 + 1), 1);
    uint64_t v31 = swift_getKeyPath();
    uint64_t v25 = (uint64_t)v46;
    *uint64_t v46 = v31;
    sub_100004FDC(&qword_1000CCAD8);
    swift_storeEnumTagMultiPayload();
    *(void *)(v25 + *(int *)(v43 + 20)) = v30;
    sub_10000A8F0(v25, v41, (uint64_t (*)(void))type metadata accessor for BackgroundView);
    goto LABEL_13;
  }
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = (uint64_t)v46;
  *uint64_t v46 = v26;
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  *(void *)(v27 + *(int *)(v43 + 20)) = 0;
  sub_10000A8F0(v27, v47, (uint64_t (*)(void))type metadata accessor for BackgroundView);
  swift_storeEnumTagMultiPayload();
  sub_100008C08();
  sub_10000AA7C(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
  sub_1000A3C00();
  uint64_t v28 = v27;
  return sub_10000AA1C(v28, (uint64_t (*)(void))type metadata accessor for BackgroundView);
}

uint64_t sub_100008030()
{
  return sub_1000A3EF0();
}

uint64_t sub_10000804C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10000A8F0(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SmallWidgetView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_10000A888((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for SmallWidgetView);
  *a2 = sub_1000082AC;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_100008160()
{
  uint64_t v1 = type metadata accessor for SmallWidgetView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000082AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SmallWidgetView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100005990(a1, v6, a2);
}

uint64_t sub_10000832C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void **)(a1 + 40);
  if (v10 == 0xD000000000000023 && v11 == (void *)0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
  {
    return sub_100008CAC(a2);
  }
  else
  {
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_1000A45E0(37);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD000000000000020;
    unint64_t v17 = 0x80000001000A51D0;
    v19._countAndFlagsBits = v10;
    v19._object = v11;
    sub_1000A4380(v19);
    v20._countAndFlagsBits = 63;
    v20._object = (void *)0xE100000000000000;
    sub_1000A4380(v20);
    v21._countAndFlagsBits = sub_1000092D0();
    sub_1000A4380(v21);
    swift_bridgeObjectRelease();
    sub_1000A3470();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1000A3490();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v9, 1, v13) == 1)
    {
      sub_1000A3470();
      uint64_t result = v15(v7, 1, v13);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v7, v13);
        return sub_10000A9C0((uint64_t)v9, &qword_1000CCB30);
      }
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v9, v13);
    }
  }
  return result;
}

uint64_t sub_1000085CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void **)(a1 + 40);
  if (v10 == 0xD000000000000023 && v11 == (void *)0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
  {
    return sub_100008EB8(a2);
  }
  else
  {
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_1000A45E0(37);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD000000000000020;
    unint64_t v17 = 0x80000001000A51D0;
    v19._countAndFlagsBits = v10;
    v19._object = v11;
    sub_1000A4380(v19);
    v20._countAndFlagsBits = 63;
    v20._object = (void *)0xE100000000000000;
    sub_1000A4380(v20);
    v21._countAndFlagsBits = sub_10000957C();
    sub_1000A4380(v21);
    swift_bridgeObjectRelease();
    sub_1000A3470();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1000A3490();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v9, 1, v13) == 1)
    {
      sub_1000A3470();
      uint64_t result = v15(v7, 1, v13);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v7, v13);
        return sub_10000A9C0((uint64_t)v9, &qword_1000CCB30);
      }
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v9, v13);
    }
  }
  return result;
}

uint64_t sub_10000886C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void **)(a1 + 40);
  if (v10 == 0xD000000000000023 && v11 == (void *)0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
  {
    return sub_1000090C4(a2);
  }
  else
  {
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_1000A45E0(37);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD000000000000020;
    unint64_t v17 = 0x80000001000A51D0;
    v19._countAndFlagsBits = v10;
    v19._object = v11;
    sub_1000A4380(v19);
    v20._countAndFlagsBits = 63;
    v20._object = (void *)0xE100000000000000;
    sub_1000A4380(v20);
    v21._countAndFlagsBits = sub_100009838();
    sub_1000A4380(v21);
    swift_bridgeObjectRelease();
    sub_1000A3470();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1000A3490();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v9, 1, v13) == 1)
    {
      sub_1000A3470();
      uint64_t result = v15(v7, 1, v13);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v7, v13);
        return sub_10000A9C0((uint64_t)v9, &qword_1000CCB30);
      }
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v9, v13);
    }
  }
  return result;
}

uint64_t sub_100008B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100007964(*(void *)(v1 + 16), a1);
}

uint64_t sub_100008B14(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100008B5C()
{
  unint64_t result = qword_1000CCAA0;
  if (!qword_1000CCAA0)
  {
    sub_100008B14(&qword_1000CCA90);
    sub_100008C08();
    sub_10000AA7C(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCAA0);
  }
  return result;
}

unint64_t sub_100008C08()
{
  unint64_t result = qword_1000CCAA8;
  if (!qword_1000CCAA8)
  {
    sub_100008B14(&qword_1000CCAB0);
    sub_10000AA7C(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCAA8);
  }
  return result;
}

uint64_t sub_100008CAC@<X0>(uint64_t a1@<X8>)
{
  sub_100004FDC(&qword_1000CCB30);
  uint64_t v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  unint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1000A45E0(38);
  swift_bridgeObjectRelease();
  unint64_t v11 = 0xD000000000000024;
  unint64_t v12 = 0x80000001000A5150;
  v13._countAndFlagsBits = sub_1000092D0();
  sub_1000A4380(v13);
  swift_bridgeObjectRelease();
  sub_1000A3470();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1000A3490();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  sub_1000A3470();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v9)(v4, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v4, v7);
    return sub_10000A9C0((uint64_t)v6, &qword_1000CCB30);
  }
  return result;
}

uint64_t sub_100008EB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1000A45E0(38);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000024;
  unint64_t v13 = 0x80000001000A5150;
  v14._countAndFlagsBits = sub_10000957C();
  sub_1000A4380(v14);
  swift_bridgeObjectRelease();
  sub_1000A3470();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v7, v8);
  }
  sub_1000A3470();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v5, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
  }
  return result;
}

uint64_t sub_1000090C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1000A45E0(38);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000024;
  unint64_t v13 = 0x80000001000A5150;
  v14._countAndFlagsBits = sub_100009838();
  sub_1000A4380(v14);
  swift_bridgeObjectRelease();
  sub_1000A3470();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v7, v8);
  }
  sub_1000A3470();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v5, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
  }
  return result;
}

uint64_t sub_1000092D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000A4160();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for WidgetFamily.systemSmall(_:), v2);
  sub_10000AA7C((unint64_t *)&qword_1000CCBA0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v6 = sub_1000A4690();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1000CC640 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1000D7FD0;
  uint64_t v10 = *(void **)algn_1000D7FD8;
  if (*(void *)(v1 + 64) == 0xD000000000000023 && *(void *)(v1 + 72) == 0x80000001000A5050
    || (sub_1000A46A0() & 1) != 0)
  {
    uint64_t v11 = 48;
  }
  else
  {
    uint64_t v11 = 49;
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1000A45E0(61);
  v14._countAndFlagsBits = 0x6146746567646977;
  v14._object = (void *)0xED00003D796C696DLL;
  sub_1000A4380(v14);
  v15._countAndFlagsBits = v6;
  v15._object = v8;
  sub_1000A4380(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x4B74656764697726;
  v16._object = (void *)0xEC0000003D646E69;
  sub_1000A4380(v16);
  v17._countAndFlagsBits = v9;
  v17._object = v10;
  sub_1000A4380(v17);
  v18._countAndFlagsBits = 0x6573734173616826;
  v18._object = (void *)0xEB000000003D7374;
  sub_1000A4380(v18);
  v19._countAndFlagsBits = v11;
  v19._object = (void *)0xE100000000000000;
  sub_1000A4380(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD000000000000011;
  v20._object = (void *)0x80000001000A51B0;
  sub_1000A4380(v20);
  v21._countAndFlagsBits = 48;
  v21._object = (void *)0xE100000000000000;
  sub_1000A4380(v21);
  return v13[0];
}

uint64_t sub_10000957C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000A4160();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for WidgetFamily.systemLarge(_:), v2);
  sub_10000AA7C((unint64_t *)&qword_1000CCBA0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v6 = sub_1000A4690();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1000CC640 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v10 = *(void **)(v1 + 48);
  if (v10[2])
  {
    uint64_t v11 = qword_1000D7FD0;
    unint64_t v12 = *(void **)algn_1000D7FD8;
    if (v10[8] == 0xD000000000000023 && v10[9] == 0x80000001000A5050 || (sub_1000A46A0() & 1) != 0) {
      uint64_t v13 = 48;
    }
    else {
      uint64_t v13 = 49;
    }
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_1000A45E0(61);
    v15._countAndFlagsBits = 0x6146746567646977;
    v15._object = (void *)0xED00003D796C696DLL;
    sub_1000A4380(v15);
    v16._countAndFlagsBits = v6;
    v16._object = v8;
    sub_1000A4380(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 0x4B74656764697726;
    v17._object = (void *)0xEC0000003D646E69;
    sub_1000A4380(v17);
    v18._countAndFlagsBits = v11;
    v18._object = v12;
    sub_1000A4380(v18);
    v19._countAndFlagsBits = 0x6573734173616826;
    v19._object = (void *)0xEB000000003D7374;
    sub_1000A4380(v19);
    v20._countAndFlagsBits = v13;
    v20._object = (void *)0xE100000000000000;
    sub_1000A4380(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 0xD000000000000011;
    v21._object = (void *)0x80000001000A51B0;
    sub_1000A4380(v21);
    v22._countAndFlagsBits = 49;
    v22._object = (void *)0xE100000000000000;
    sub_1000A4380(v22);
    return v14[0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100009838()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000A4160();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for WidgetFamily.systemMedium(_:), v2);
  sub_10000AA7C((unint64_t *)&qword_1000CCBA0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v6 = sub_1000A4690();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1000CC640 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v10 = *(void **)(v1 + 32);
  if (v10[2])
  {
    uint64_t v11 = qword_1000D7FD0;
    unint64_t v12 = *(void **)algn_1000D7FD8;
    if (v10[8] == 0xD000000000000023 && v10[9] == 0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
    {
      uint64_t v13 = 48;
      if ((sub_10007B3C0() & 1) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v13 = 49;
      if ((sub_10007B3C0() & 1) == 0) {
        goto LABEL_11;
      }
    }
    if (*(uint64_t *)(v1 + 24) > 1)
    {
      uint64_t v14 = 49;
      goto LABEL_13;
    }
LABEL_11:
    uint64_t v14 = 48;
LABEL_13:
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_1000A45E0(61);
    v16._countAndFlagsBits = 0x6146746567646977;
    v16._object = (void *)0xED00003D796C696DLL;
    sub_1000A4380(v16);
    v17._countAndFlagsBits = v6;
    v17._object = v8;
    sub_1000A4380(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 0x4B74656764697726;
    v18._object = (void *)0xEC0000003D646E69;
    sub_1000A4380(v18);
    v19._countAndFlagsBits = v11;
    v19._object = v12;
    sub_1000A4380(v19);
    v20._countAndFlagsBits = 0x6573734173616826;
    v20._object = (void *)0xEB000000003D7374;
    sub_1000A4380(v20);
    v21._countAndFlagsBits = v13;
    v21._object = (void *)0xE100000000000000;
    sub_1000A4380(v21);
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = 0xD000000000000011;
    v22._object = (void *)0x80000001000A51B0;
    sub_1000A4380(v22);
    v23._countAndFlagsBits = v14;
    v23._object = (void *)0xE100000000000000;
    sub_1000A4380(v23);
    swift_bridgeObjectRelease();
    return v15[0];
  }
  __break(1u);
  return result;
}

uint64_t sub_100009B24@<X0>(uint64_t a1@<X8>)
{
  return sub_100009DB8(&qword_1000CC9C8, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

double sub_100009B60()
{
  uint64_t v1 = sub_1000A3B30();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_1000A44C0();
  uint64_t v7 = sub_1000A3CD0();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v10[0] = v9 + 4;
    v10[1] = sub_10007A4B4(0x65736E4965676445, 0xEA00000000007374, &v11);
    sub_1000A4580();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000A3B20();
  swift_getAtKeyPath();
  sub_10000B108((uint64_t)v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return *(double *)&v11;
}

uint64_t sub_100009D80@<X0>(uint64_t a1@<X8>)
{
  return sub_100009DB8(&qword_1000CCAD8, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000A5200, a1);
}

uint64_t sub_100009DB8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1000A3B30();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004FDC(a1);
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B1C0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1000A44C0();
    Swift::String v21 = sub_1000A3CD0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      Swift::String v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)Swift::String v23 = 136315138;
      uint64_t v28 = sub_10007A4B4(v27, v25, &v29);
      sub_1000A4580();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000A3B20();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10000A070@<X0>(uint64_t a1@<X8>)
{
  return sub_100009DB8(&qword_1000CCBB8, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_10000A0B0()
{
  return sub_1000A3AE0();
}

uint64_t sub_10000A0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000A174(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10000A100()
{
  return sub_1000A3A50();
}

uint64_t sub_10000A124()
{
  return sub_1000A3A50();
}

uint64_t sub_10000A148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000A174(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10000A174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10000A244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000A174(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

void *sub_10000A284(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10000A2C8()
{
  return sub_1000A3AE0();
}

uint64_t sub_10000A2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000A174(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10000A32C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  uint64_t v3 = *(void **)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10000A398(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_10000A40C()
{
  unint64_t result = qword_1000CCB48;
  if (!qword_1000CCB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCB48);
  }
  return result;
}

uint64_t sub_10000A460(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 120);
  uint64_t v3 = *(void **)(a1 + 128);
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000A4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_10000A504()
{
  unint64_t result = qword_1000CCB50;
  if (!qword_1000CCB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCB50);
  }
  return result;
}

unint64_t sub_10000A558()
{
  unint64_t result = qword_1000CCB58;
  if (!qword_1000CCB58)
  {
    sub_100008B14(&qword_1000CCB28);
    type metadata accessor for SmallReadingGoalView(255);
    sub_10000AA7C(&qword_1000CCB60, (void (*)(uint64_t))type metadata accessor for SmallReadingGoalView);
    swift_getOpaqueTypeConformance2();
    sub_10000A634();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCB58);
  }
  return result;
}

unint64_t sub_10000A634()
{
  unint64_t result = qword_1000CCB68;
  if (!qword_1000CCB68)
  {
    sub_100008B14(&qword_1000CCB10);
    sub_100008B14(&qword_1000CCB00);
    type metadata accessor for SmallEmptyStateView(255);
    sub_10000AA7C(&qword_1000CCB70, (void (*)(uint64_t))type metadata accessor for SmallEmptyStateView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10000AA7C((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCB68);
  }
  return result;
}

unint64_t sub_10000A77C()
{
  unint64_t result = qword_1000CCB80;
  if (!qword_1000CCB80)
  {
    sub_100008B14(&qword_1000CCAF0);
    sub_100008B14(&qword_1000CCAE0);
    sub_10000A40C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10000AA7C((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCB80);
  }
  return result;
}

uint64_t sub_10000A888(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000A8F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000A95C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004FDC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000A9C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004FDC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000AA1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000AA7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000AAC4()
{
  uint64_t v0 = sub_1000A3600();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  os_log_type_t v6 = &v18[-v5];
  uint64_t v7 = sub_1000A42F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v18[-v12];
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_1000A4360();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v16;
}

uint64_t sub_10000AD44()
{
  uint64_t v39 = sub_1000A3600();
  uint64_t v0 = *(void *)(v39 - 8);
  uint64_t v1 = __chkstk_darwin(v39);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v30 - v4;
  uint64_t v6 = sub_1000A42F0();
  uint64_t v34 = v6;
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v7 = v40;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  sub_100004FDC(&qword_1000CCB98);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000A8D50;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  id v30 = v10;
  v38(v10, v12, v6);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v37 = ObjCClassFromMetadata;
  id v36 = self;
  id v15 = [v36 bundleForClass:ObjCClassFromMetadata];
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v0 + 16);
  uint64_t v31 = v3;
  uint64_t v16 = v39;
  v35(v3, v5, v39);
  uint64_t v17 = sub_1000A4360();
  uint64_t v19 = v18;
  os_log_type_t v20 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v32 = v0 + 8;
  uint64_t v33 = v20;
  v20(v5, v16);
  Swift::String v21 = *(void (**)(char *, uint64_t))(v40 + 8);
  v40 += 8;
  uint64_t v22 = v34;
  v21(v12, v34);
  *(void *)(v13 + 32) = v17;
  *(void *)(v13 + 40) = v19;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v23 = v22;
  v38(v30, v12, v22);
  id v24 = [v36 bundleForClass:v37];
  uint64_t v25 = v39;
  v35(v31, v5, v39);
  uint64_t v26 = sub_1000A4360();
  uint64_t v28 = v27;
  v33(v5, v25);
  v21(v12, v23);
  *(void *)(v13 + 48) = v26;
  *(void *)(v13 + 56) = v28;
  return v13;
}

uint64_t sub_10000B108(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000B140()
{
  return sub_10000B17C(&qword_1000CCBA8, &qword_1000CCBB0);
}

uint64_t sub_10000B17C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000B1C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004FDC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000B224()
{
  uint64_t v0 = sub_1000A3830();
  sub_100010E40(v0, qword_1000CCBC0);
  sub_100010B3C(v0, (uint64_t)qword_1000CCBC0);
  return sub_1000A3820();
}

id sub_10000B2A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000A4160();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000A4200();
  int v6 = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v6 == enum case for WidgetFamily.systemMedium(_:))
    {
      sub_1000A3550();
      sub_100004FDC(&qword_1000CCE38);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1000A8E80;
      uint64_t v7 = (void *)BDSCloudAssetTypeStoreEbook;
      uint64_t v8 = (void *)BDSLibraryContentAssetTypeUnknown;
      *(void *)(v9 + 40) = 0;
      *(void *)(v9 + 48) = 0;
      *(void *)(v9 + 32) = 0;
      *(unsigned char *)(v9 + 56) = 1;
      *(void *)(v9 + 64) = 0xD000000000000023;
      *(void *)(v9 + 72) = 0x80000001000A5050;
      *(void *)(v9 + 80) = v7;
      *(void *)(v9 + 88) = v8;
      *(void *)(v9 + 96) = 0;
      *(void *)(v9 + 104) = 0;
      *(unsigned char *)(v9 + 112) = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      char v18 = 0;
      *(void *)&long long v19 = 0;
      *((void *)&v19 + 1) = v9;
      LOBYTE(v20) = 0;
      *((void *)&v20 + 1) = 0;
      uint64_t v21 = 0;
      sub_10001113C((uint64_t)&v16);
      goto LABEL_5;
    }
    if (v6 == enum case for WidgetFamily.systemLarge(_:))
    {
      sub_1000A3550();
      sub_10005D178(v31);
      uint64_t v16 = v31[0];
      uint64_t v17 = v31[1];
      char v18 = v32;
      long long v19 = v33;
      long long v20 = v34;
      LOBYTE(v21) = v35;
      long long v22 = v36;
      sub_100011118((uint64_t)&v16);
      sub_100010414((uint64_t)&v16, (uint64_t)v30);
      WidgetReadingHistory.Day.readingTime.getter(v30);
      uint64_t v13 = type metadata accessor for WidgetEntry(0);
      return (id)sub_10001013C((uint64_t)v30, a1 + *(int *)(v13 + 20));
    }
    if (!&enum case for WidgetFamily.accessoryCorner(_:) || v6 != enum case for WidgetFamily.accessoryCorner(_:))
    {
      sub_1000A3550();
      sub_1000110E8((uint64_t)v30);
      uint64_t v14 = type metadata accessor for WidgetEntry(0);
      sub_10001013C((uint64_t)v30, a1 + *(int *)(v14 + 20));
      return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1000A3550();
  uint64_t v7 = (void *)BDSCloudAssetTypeStoreEbook;
  uint64_t v8 = (void *)BDSLibraryContentAssetTypeUnknown;
  LOBYTE(v31[0]) = 0;
  v15[8] = 1;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  char v18 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  LOBYTE(v21) = 1;
  *(void *)&long long v22 = 0xD000000000000023;
  *((void *)&v22 + 1) = 0x80000001000A5050;
  uint64_t v23 = BDSCloudAssetTypeStoreEbook;
  uint64_t v24 = BDSLibraryContentAssetTypeUnknown;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  __int16 v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  sub_100011160((uint64_t)&v16);
LABEL_5:
  sub_100010414((uint64_t)&v16, (uint64_t)v30);
  WidgetReadingHistory.Day.readingTime.getter(v30);
  uint64_t v10 = type metadata accessor for WidgetEntry(0);
  sub_10001013C((uint64_t)v30, a1 + *(int *)(v10 + 20));
  id v11 = v7;
  return v8;
}

uint64_t sub_10000B5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[24] = a5;
  v6[25] = a6;
  v6[23] = a4;
  v6[26] = type metadata accessor for WidgetEntry(0);
  v6[27] = swift_task_alloc();
  uint64_t v7 = sub_1000A4160();
  v6[28] = v7;
  v6[29] = *(void *)(v7 - 8);
  v6[30] = swift_task_alloc();
  return _swift_task_switch(sub_10000B6E0, 0, 0);
}

uint64_t sub_10000B6E0()
{
  type metadata accessor for WidgetDataController();
  uint64_t inited = swift_initStackObject();
  v0[31] = inited;
  *(void *)(inited + 16) = sub_1000744D8();
  *(void *)(inited + 24) = [objc_allocWithZone((Class)BDSReadingHistoryServiceClient) init];
  sub_100055D1C();
  sub_1000A4200();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10000B7E0;
  uint64_t v3 = v0[30];
  return sub_100074664((uint64_t)(v0 + 2), v3);
}

uint64_t sub_10000B7E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  uint64_t v2 = *(void *)(*(void *)v0 + 232);
  uint64_t v3 = *(void *)(*(void *)v0 + 224);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10000B938, 0, 0);
}

uint64_t sub_10000B938()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = (void (*)(uint64_t))v0[24];
  sub_1000A3550();
  sub_10001013C((uint64_t)(v0 + 2), v1 + *(int *)(v2 + 20));
  sub_100010D94(v0 + 2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010DF8);
  swift_retain();
  v3(v1);
  swift_release();
  swift_release();
  sub_100010D94(v0 + 2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
  sub_10001053C(v1, type metadata accessor for WidgetEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10000BA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4450();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1000A4440();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000A9C0(a1, &qword_1000CCDF0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000A4410();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10000BC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[24] = a5;
  v6[25] = a6;
  v6[23] = a4;
  sub_1000A41F0();
  v6[26] = swift_task_alloc();
  uint64_t v7 = sub_100004FDC(&qword_1000CCE18);
  v6[27] = v7;
  v6[28] = *(void *)(v7 - 8);
  v6[29] = swift_task_alloc();
  uint64_t v8 = sub_1000A36D0();
  v6[30] = v8;
  v6[31] = *(void *)(v8 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v9 = sub_1000A3560();
  v6[33] = v9;
  v6[34] = *(void *)(v9 - 8);
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for WidgetEntry(0);
  v6[39] = v10;
  v6[40] = *(void *)(v10 - 8);
  v6[41] = swift_task_alloc();
  uint64_t v11 = sub_1000A4160();
  v6[42] = v11;
  v6[43] = *(void *)(v11 - 8);
  v6[44] = swift_task_alloc();
  return _swift_task_switch(sub_10000BE90, 0, 0);
}

uint64_t sub_10000BE90()
{
  type metadata accessor for WidgetDataController();
  uint64_t inited = swift_initStackObject();
  v0[45] = inited;
  *(void *)(inited + 16) = sub_1000744D8();
  *(void *)(inited + 24) = [objc_allocWithZone((Class)BDSReadingHistoryServiceClient) init];
  sub_100055D1C();
  sub_1000A4200();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[46] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10000BF90;
  uint64_t v3 = v0[44];
  return sub_100074664((uint64_t)(v0 + 2), v3);
}

uint64_t sub_10000BF90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 352);
  uint64_t v2 = *(void *)(*(void *)v0 + 344);
  uint64_t v3 = *(void *)(*(void *)v0 + 336);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10000C0E8, 0, 0);
}

uint64_t sub_10000C0E8()
{
  uint64_t v19 = v0[41];
  uint64_t v20 = v0[40];
  uint64_t v1 = v0[39];
  uint64_t v17 = v0[38];
  uint64_t v2 = v0[36];
  uint64_t v25 = v0[37];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[35];
  uint64_t v6 = v0[32];
  uint64_t v5 = v0[33];
  uint64_t v7 = v0[31];
  uint64_t v16 = v0[30];
  uint64_t v21 = v0[29];
  uint64_t v23 = v0[28];
  uint64_t v24 = v0[27];
  long long v22 = (void (*)(uint64_t))v0[24];
  sub_1000A3550();
  sub_10001013C((uint64_t)(v0 + 2), v19 + *(int *)(v1 + 20));
  sub_100010D94(v0 + 2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010DF8);
  sub_1000A3690();
  sub_1000A3550();
  uint64_t v8 = v2;
  sub_1000A3620();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v10 = v5;
  uint64_t v18 = v5;
  v9(v4, v5);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v6, v16);
  sub_1000A3690();
  sub_1000A34C0();
  v11(v6, v16);
  v9(v8, v10);
  sub_1000A34E0();
  v9(v25, v10);
  sub_100004FDC(&qword_1000CCE20);
  unint64_t v12 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000A8E80;
  sub_1000104A4(v19, v13 + v12, type metadata accessor for WidgetEntry);
  sub_1000A41E0();
  sub_1000100D8(qword_1000CCD60, (void (*)(uint64_t))type metadata accessor for WidgetEntry);
  sub_1000A4220();
  swift_retain();
  v22(v21);
  swift_release();
  swift_release();
  sub_100010D94(v0 + 2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v24);
  v9(v17, v18);
  sub_10001053C(v19, type metadata accessor for WidgetEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10000C48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4210();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = sub_100004FDC(&qword_1000CCDF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = sub_1000A4450();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v16 = (uint64_t (**)())(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v16 = sub_100010EA4;
  v16[1] = (uint64_t (*)())v12;
  swift_retain();
  sub_10000BA58((uint64_t)v11, (uint64_t)&unk_1000CCE30, v15);
  return swift_release();
}

uint64_t sub_10000C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000C760;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10000C760()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10000C854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100011210;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t _s20BooksWidgetExtension0B14ReadingHistoryO8DayEntryV4date10Foundation4DateVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000A3560();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10000C974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v82 = type metadata accessor for LargeWidgetView();
  uint64_t v2 = __chkstk_darwin(v82);
  uint64_t v4 = (uint64_t *)((char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v76 = (uint64_t)&v70 - v5;
  uint64_t v79 = sub_100004FDC(&qword_1000CCD78);
  __chkstk_darwin(v79);
  uint64_t v81 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004FDC(&qword_1000CCD80);
  __chkstk_darwin(v87);
  uint64_t v83 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for MediumWidgetView();
  uint64_t v8 = __chkstk_darwin(v80);
  uint64_t v10 = (uint64_t *)((char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v75 = (uint64_t)&v70 - v11;
  *(void *)&long long v78 = type metadata accessor for SmallWidgetView();
  uint64_t v12 = __chkstk_darwin(v78);
  unint64_t v14 = (uint64_t *)((char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v74 = (uint64_t)&v70 - v15;
  uint64_t v16 = sub_100004FDC(&qword_1000CCD88);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100004FDC(&qword_1000CCD90);
  __chkstk_darwin(v84);
  uint64_t v86 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004FDC(&qword_1000CCD98);
  __chkstk_darwin(v20);
  long long v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100004FDC(&qword_1000CCDA0);
  __chkstk_darwin(v85);
  v77 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004FDC(&qword_1000CCDA8);
  __chkstk_darwin(v24);
  long long v88 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for WidgetEntry(0);
  sub_10001013C(v1 + *(int *)(v26 + 20), (uint64_t)v93);
  sub_10001013C((uint64_t)v93, (uint64_t)v94);
  if (sub_1000101A4((uint64_t)v94) == 1)
  {
    *(void *)uint64_t v18 = 0;
    v18[8] = 1;
    swift_storeEnumTagMultiPayload();
    sub_1000101BC();
    return sub_1000A3C00();
  }
  else
  {
    uint64_t v72 = v24;
    uint64_t v73 = v16;
    sub_100010414((uint64_t)v94, (uint64_t)v92);
    int v28 = sub_100010470((uint64_t)v92);
    char v71 = v18;
    switch(v28)
    {
      case 1:
        uint64_t v60 = sub_10001059C((uint64_t)v92);
        *unint64_t v14 = swift_getKeyPath();
        sub_100004FDC(&qword_1000CC9C8);
        swift_storeEnumTagMultiPayload();
        uint64_t v61 = (char *)v14 + *(int *)(v78 + 20);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v60;
        long long v62 = *(_OWORD *)(v60 + 16);
        long long v63 = *(_OWORD *)(v60 + 32);
        long long v64 = *(_OWORD *)(v60 + 64);
        *((_OWORD *)v61 + 3) = *(_OWORD *)(v60 + 48);
        *((_OWORD *)v61 + 4) = v64;
        *((_OWORD *)v61 + 1) = v62;
        *((_OWORD *)v61 + 2) = v63;
        long long v65 = *(_OWORD *)(v60 + 80);
        long long v66 = *(_OWORD *)(v60 + 96);
        long long v67 = *(_OWORD *)(v60 + 112);
        *((void *)v61 + 16) = *(void *)(v60 + 128);
        *((_OWORD *)v61 + 6) = v66;
        *((_OWORD *)v61 + 7) = v67;
        *((_OWORD *)v61 + 5) = v65;
        uint64_t v44 = v74;
        sub_1000105AC((uint64_t)v14, v74, (uint64_t (*)(void))type metadata accessor for SmallWidgetView);
        sub_1000104A4(v44, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for SmallWidgetView);
        swift_storeEnumTagMultiPayload();
        sub_10001013C((uint64_t)v93, (uint64_t)v90);
        sub_10001013C((uint64_t)v93, (uint64_t)v91);
        sub_100010D94(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10000E8B0);
        sub_100010D94(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10000E8B0);
        sub_1000102E4();
        sub_1000100D8(&qword_1000CCDD0, (void (*)(uint64_t))type metadata accessor for SmallWidgetView);
        uint64_t v68 = (uint64_t)v77;
        sub_1000A3C00();
        sub_10000B1C0(v68, v86, &qword_1000CCDA0);
        swift_storeEnumTagMultiPayload();
        sub_100010238();
        sub_100010338();
        uint64_t v69 = (uint64_t)v88;
        sub_1000A3C00();
        sub_10000A9C0(v68, &qword_1000CCDA0);
        sub_10000B1C0(v69, (uint64_t)v71, &qword_1000CCDA8);
        swift_storeEnumTagMultiPayload();
        sub_1000101BC();
        sub_1000A3C00();
        sub_100010D94(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
        sub_10000A9C0(v69, &qword_1000CCDA8);
        uint64_t v47 = type metadata accessor for SmallWidgetView;
        goto LABEL_8;
      case 2:
        uint64_t v32 = sub_10001059C((uint64_t)v92);
        uint64_t v33 = *(void *)v32;
        *(void *)&long long v78 = *(void *)(v32 + 8);
        char v34 = *(unsigned char *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 24);
        uint64_t v36 = *(void *)(v32 + 32);
        char v37 = *(unsigned char *)(v32 + 40);
        uint64_t v38 = *(void *)(v32 + 48);
        uint64_t v39 = *(void *)(v32 + 56);
        uint64_t *v10 = swift_getKeyPath();
        sub_100004FDC(&qword_1000CC9C8);
        swift_storeEnumTagMultiPayload();
        uint64_t v40 = v80;
        uint64_t v41 = (char *)v10 + *(int *)(v80 + 20);
        *(void *)uint64_t v41 = swift_getKeyPath();
        *((void *)v41 + 1) = 0;
        *((void *)v41 + 2) = 0;
        *((void *)v41 + 3) = 0;
        v41[32] = 0;
        uint64_t v42 = (char *)v10 + *(int *)(v40 + 24);
        *(void *)uint64_t v42 = v33;
        *((void *)v42 + 1) = v78;
        v42[16] = v34;
        *((void *)v42 + 3) = v35;
        *((void *)v42 + 4) = v36;
        v42[40] = v37;
        *((void *)v42 + 6) = v38;
        *((void *)v42 + 7) = v39;
        uint64_t v43 = (uint64_t *)((char *)v10 + *(int *)(v40 + 28));
        sub_10001013C((uint64_t)v93, (uint64_t)v91);
        sub_100010D94(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10000E8B0);
        *uint64_t v43 = sub_1000A3DE0();
        v43[1] = 0x4040000000000000;
        uint64_t v44 = v75;
        sub_1000105AC((uint64_t)v10, v75, (uint64_t (*)(void))type metadata accessor for MediumWidgetView);
        sub_1000104A4(v44, v81, (uint64_t (*)(void))type metadata accessor for MediumWidgetView);
        swift_storeEnumTagMultiPayload();
        sub_1000100D8(&qword_1000CCDE0, (void (*)(uint64_t))type metadata accessor for MediumWidgetView);
        sub_1000100D8(&qword_1000CCDE8, (void (*)(uint64_t))type metadata accessor for LargeWidgetView);
        uint64_t v45 = (uint64_t)v83;
        sub_1000A3C00();
        sub_10000B1C0(v45, v86, &qword_1000CCD80);
        swift_storeEnumTagMultiPayload();
        sub_100010238();
        sub_100010338();
        uint64_t v46 = (uint64_t)v88;
        sub_1000A3C00();
        sub_10000A9C0(v45, &qword_1000CCD80);
        sub_10000B1C0(v46, (uint64_t)v71, &qword_1000CCDA8);
        swift_storeEnumTagMultiPayload();
        sub_1000101BC();
        sub_1000A3C00();
        sub_10000A9C0(v46, &qword_1000CCDA8);
        uint64_t v47 = type metadata accessor for MediumWidgetView;
        goto LABEL_8;
      case 3:
        uint64_t v48 = sub_10001059C((uint64_t)v92);
        uint64_t v49 = *(void *)v48;
        uint64_t v50 = *(void *)(v48 + 8);
        char v51 = *(unsigned char *)(v48 + 16);
        long long v78 = *(_OWORD *)(v48 + 24);
        uint64_t v52 = *(void *)(v48 + 40);
        uint64_t v53 = *(void *)(v48 + 48);
        char v54 = *(unsigned char *)(v48 + 56);
        uint64_t v55 = *(void *)(v48 + 64);
        uint64_t v56 = *(void *)(v48 + 72);
        *uint64_t v4 = swift_getKeyPath();
        sub_100004FDC(&qword_1000CC9C8);
        swift_storeEnumTagMultiPayload();
        uint64_t v57 = (char *)v4 + *(int *)(v82 + 20);
        *(void *)uint64_t v57 = v49;
        *((void *)v57 + 1) = v50;
        v57[16] = v51;
        *(_OWORD *)(v57 + 24) = v78;
        *((void *)v57 + 5) = v52;
        *((void *)v57 + 6) = v53;
        v57[56] = v54;
        *((void *)v57 + 8) = v55;
        *((void *)v57 + 9) = v56;
        uint64_t v44 = v76;
        sub_1000105AC((uint64_t)v4, v76, (uint64_t (*)(void))type metadata accessor for LargeWidgetView);
        sub_1000104A4(v44, v81, (uint64_t (*)(void))type metadata accessor for LargeWidgetView);
        swift_storeEnumTagMultiPayload();
        sub_10001013C((uint64_t)v93, (uint64_t)v91);
        sub_100010D94(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10000E8B0);
        sub_1000100D8(&qword_1000CCDE0, (void (*)(uint64_t))type metadata accessor for MediumWidgetView);
        sub_1000100D8(&qword_1000CCDE8, (void (*)(uint64_t))type metadata accessor for LargeWidgetView);
        uint64_t v58 = (uint64_t)v83;
        sub_1000A3C00();
        sub_10000B1C0(v58, v86, &qword_1000CCD80);
        swift_storeEnumTagMultiPayload();
        sub_100010238();
        sub_100010338();
        uint64_t v59 = (uint64_t)v88;
        sub_1000A3C00();
        sub_10000A9C0(v58, &qword_1000CCD80);
        sub_10000B1C0(v59, (uint64_t)v71, &qword_1000CCDA8);
        swift_storeEnumTagMultiPayload();
        sub_1000101BC();
        sub_1000A3C00();
        sub_10000A9C0(v59, &qword_1000CCDA8);
        uint64_t v47 = type metadata accessor for LargeWidgetView;
LABEL_8:
        uint64_t result = sub_10001053C(v44, (uint64_t (*)(void))v47);
        break;
      default:
        uint64_t v29 = (const void *)sub_10001059C((uint64_t)v92);
        memmove(v22, v29, 0x88uLL);
        swift_storeEnumTagMultiPayload();
        sub_10001013C((uint64_t)v93, (uint64_t)v90);
        sub_10001013C((uint64_t)v93, (uint64_t)v91);
        sub_100010D94(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10000E8B0);
        sub_100010D94(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10000E8B0);
        sub_1000102E4();
        sub_1000100D8(&qword_1000CCDD0, (void (*)(uint64_t))type metadata accessor for SmallWidgetView);
        uint64_t v30 = (uint64_t)v77;
        sub_1000A3C00();
        sub_10000B1C0(v30, v86, &qword_1000CCDA0);
        swift_storeEnumTagMultiPayload();
        sub_100010238();
        sub_100010338();
        uint64_t v31 = (uint64_t)v88;
        sub_1000A3C00();
        sub_10000A9C0(v30, &qword_1000CCDA0);
        sub_10000B1C0(v31, (uint64_t)v71, &qword_1000CCDA8);
        swift_storeEnumTagMultiPayload();
        sub_1000101BC();
        sub_1000A3C00();
        sub_10000A9C0(v31, &qword_1000CCDA8);
        uint64_t result = (uint64_t)sub_100010D94(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
        break;
    }
  }
  return result;
}

void sub_10000D720()
{
  qword_1000D7FD0 = 0x646957736B6F6F42;
  *(void *)algn_1000D7FD8 = 0xEB00000000746567;
}

uint64_t sub_10000D74C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v91 = sub_1000A3600();
  uint64_t v82 = *(void *)(v91 - 8);
  uint64_t v1 = __chkstk_darwin(v91);
  uint64_t v83 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v69 - v3;
  uint64_t v90 = sub_1000A42F0();
  unint64_t v96 = *(void *)(v90 - 8);
  uint64_t v5 = __chkstk_darwin(v90);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v69 - v8;
  uint64_t v80 = sub_100004FDC(&qword_1000CCBE0);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004FDC(&qword_1000CCBE8);
  uint64_t v81 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v89 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100004FDC(&qword_1000CCBF0);
  uint64_t v84 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  char v92 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FDC(&qword_1000CCBF8);
  uint64_t v85 = *(void *)(v14 - 8);
  uint64_t v86 = v14;
  __chkstk_darwin(v14);
  char v94 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000CC640 != -1) {
    swift_once();
  }
  type metadata accessor for BooksWidgetEntryView(0);
  sub_1000100D8(&qword_1000CCC00, (void (*)(uint64_t))type metadata accessor for BooksWidgetEntryView);
  sub_10000E4D0();
  swift_bridgeObjectRetain();
  sub_1000A41D0();
  sub_1000A4280();
  sub_1000A35D0();
  long long v88 = v9;
  uint64_t v16 = v4;
  uint64_t v17 = v11;
  unint64_t v18 = v96;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  unint64_t v74 = v96 + 16;
  long long v78 = v19;
  char v71 = v7;
  v19(v7, v9, v90);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v77 = ObjCClassFromMetadata;
  id v76 = self;
  id v21 = [v76 bundleForClass:ObjCClassFromMetadata];
  uint64_t v22 = v82;
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  uint64_t v23 = v83;
  uint64_t v24 = v16;
  uint64_t v70 = v16;
  uint64_t v25 = v16;
  uint64_t v26 = v91;
  v75(v83, v25, v91);
  uint64_t v27 = sub_1000A4360();
  uint64_t v29 = v28;
  uint64_t v82 = *(void *)(v22 + 8);
  ((void (*)(char *, uint64_t))v82)(v24, v26);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v18 + 8);
  unint64_t v96 = v18 + 8;
  uint64_t v73 = v30;
  uint64_t v31 = v88;
  uint64_t v32 = v90;
  v30(v88, v90);
  uint64_t v97 = v27;
  char v98 = v29;
  uint64_t v72 = sub_10000B17C(&qword_1000CCC10, &qword_1000CCBE0);
  unint64_t v33 = sub_10000A504();
  uint64_t v34 = v80;
  sub_1000A3BF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v17, v34);
  sub_1000A4280();
  uint64_t v35 = v70;
  sub_1000A35D0();
  uint64_t v36 = v32;
  v78(v71, v31, v32);
  id v37 = [v76 bundleForClass:v77];
  uint64_t v38 = v91;
  v75(v23, v35, v91);
  uint64_t v39 = sub_1000A4360();
  uint64_t v41 = v40;
  ((void (*)(char *, uint64_t))v82)(v35, v38);
  v73(v88, v36);
  uint64_t v101 = v39;
  uint64_t v102 = v41;
  uint64_t v97 = v34;
  char v98 = &type metadata for String;
  uint64_t v99 = v72;
  unint64_t v100 = v33;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v93;
  unint64_t v96 = v33;
  uint64_t v44 = v89;
  sub_1000A3BC0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v43);
  sub_10000E524();
  sub_10000B17C(&qword_1000CCC20, &qword_1000CCC28);
  LOBYTE(v41) = sub_1000A43B0();
  sub_100004FDC(&qword_1000CCC30);
  uint64_t v45 = sub_1000A4160();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(void *)(v46 + 72);
  uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v50 = (void (**)(uint64_t))(v46 + 104);
  uint64_t v51 = 2 * v47;
  uint64_t v90 = v48 | 7;
  uint64_t v91 = 2 * v47;
  uint64_t v52 = swift_allocObject();
  if (v41)
  {
    *(_OWORD *)(v52 + 16) = xmmword_1000A8EA0;
    uint64_t v53 = v52 + v49;
    char v54 = *v50;
    ((void (*)(uint64_t, void, uint64_t))*v50)(v52 + v49, enum case for WidgetFamily.accessoryCircular(_:), v45);
    LODWORD(v89) = enum case for WidgetFamily.systemSmall(_:);
    v54(v53 + v47);
    LODWORD(v88) = enum case for WidgetFamily.systemMedium(_:);
    v54(v53 + v51);
    uint64_t v55 = v53 + 3 * v47;
  }
  else
  {
    *(_OWORD *)(v52 + 16) = xmmword_1000A8E90;
    uint64_t v56 = v52 + v49;
    char v54 = *v50;
    LODWORD(v89) = enum case for WidgetFamily.systemSmall(_:);
    v54(v52 + v49);
    LODWORD(v88) = enum case for WidgetFamily.systemMedium(_:);
    v54(v56 + v47);
    uint64_t v55 = v56 + v51;
  }
  uint64_t v57 = enum case for WidgetFamily.systemLarge(_:);
  ((void (*)(uint64_t, void, uint64_t))v54)(v55, enum case for WidgetFamily.systemLarge(_:), v45);
  uint64_t v97 = v93;
  char v98 = &type metadata for String;
  uint64_t v99 = OpaqueTypeConformance2;
  unint64_t v100 = v96;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  uint64_t v59 = v95;
  uint64_t v60 = v92;
  sub_1000A3BD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v60, v59);
  id v61 = [self currentDevice];
  id v62 = [v61 userInterfaceIdiom];

  sub_100004FDC(&qword_1000CCC38);
  sub_1000A4190();
  if (v62 == (id)1)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000A8D50;
    sub_1000A4170();
    sub_1000A4180();
  }
  else
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000A8E80;
    sub_1000A4170();
  }
  sub_100004FDC(&qword_1000CCC30);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_1000A8E90;
  uint64_t v64 = v63 + v49;
  long long v65 = *v50;
  ((void (*)(uint64_t, void, uint64_t))*v50)(v64, v89, v45);
  ((void (*)(uint64_t, void, uint64_t))v65)(v64 + v47, v88, v45);
  ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v64 + v91, v57, v45);
  uint64_t v97 = v95;
  char v98 = (void *)v58;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = v86;
  long long v67 = v94;
  sub_1000A3BE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v67, v66);
}

uint64_t sub_10000E3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000104A4(a1, a2, type metadata accessor for WidgetEntry);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_10000E430()
{
  unint64_t result = qword_1000CCBD8;
  if (!qword_1000CCBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCBD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksWidget()
{
  return &type metadata for BooksWidget;
}

uint64_t sub_10000E494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for BooksWidgetEntryView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CCD28);
}

unint64_t sub_10000E4D0()
{
  unint64_t result = qword_1000CCC08;
  if (!qword_1000CCC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCC08);
  }
  return result;
}

unint64_t sub_10000E524()
{
  unint64_t result = qword_1000CCC18;
  if (!qword_1000CCC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCC18);
  }
  return result;
}

uint64_t sub_10000E578@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000A3AF0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_10000E5A8(uint64_t a1)
{
  uint64_t v2 = sub_1000A38E0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000A3A60();
}

uint64_t type metadata accessor for WidgetEntry(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CCC98);
}

uint64_t sub_10000E690(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_10000E6C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A3560();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 2);
    unint64_t v12 = *((void *)v10 + 14);
    if (v11 >> 1 == 0xFFFFFFFF && (v12 & 0xFFFFFFFFFFFFFCFELL) == 0)
    {
      long long v21 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v21;
      *((void *)v9 + 16) = *((void *)v10 + 16);
      long long v22 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v22;
      long long v23 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v23;
      long long v24 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v24;
    }
    else
    {
      uint64_t v14 = *(void *)v10;
      uint64_t v15 = *((void *)v10 + 3);
      uint64_t v16 = *((void *)v10 + 4);
      uint64_t v17 = *((void *)v10 + 5);
      uint64_t v18 = *((void *)v10 + 6);
      uint64_t v19 = *((void *)v10 + 7);
      uint64_t v26 = *((void *)v10 + 1);
      uint64_t v27 = *((void *)v10 + 8);
      uint64_t v28 = *((void *)v10 + 9);
      uint64_t v29 = (void *)*((void *)v10 + 10);
      uint64_t v30 = (void *)*((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      uint64_t v32 = *((void *)v10 + 13);
      uint64_t v33 = *((void *)v10 + 15);
      uint64_t v34 = *((void *)v10 + 16);
      sub_10000E8B0(*(void *)v10, v26, v11, v15, v16, v17, v18, v19, v27, v28, v29, v30, v31, v32, v12);
      *(void *)uint64_t v9 = v14;
      *((void *)v9 + 1) = v26;
      *((void *)v9 + 2) = v11;
      *((void *)v9 + 3) = v15;
      *((void *)v9 + 4) = v16;
      *((void *)v9 + 5) = v17;
      *((void *)v9 + 6) = v18;
      *((void *)v9 + 7) = v19;
      *((void *)v9 + 8) = v27;
      *((void *)v9 + 9) = v28;
      *((void *)v9 + 10) = v29;
      *((void *)v9 + 11) = v30;
      *((void *)v9 + 12) = v31;
      *((void *)v9 + 13) = v32;
      *((void *)v9 + 14) = v12;
      *((void *)v9 + 15) = v33;
      *((void *)v9 + 16) = v34;
    }
  }
  return a1;
}

uint64_t sub_10000E8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  switch(a15 >> 62)
  {
    case 2uLL:
      swift_bridgeObjectRetain();
      break;
    case 3uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v15 = a11;
      id v16 = a12;
      break;
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10000E98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  unint64_t v7 = *(void *)(v6 + 16);
  unint64_t v8 = *(void *)(v6 + 112);
  if (v7 >> 1 != 0xFFFFFFFF || (v8 & 0xFFFFFFFFFFFFFCFELL) != 0) {
    return sub_10000EA48(*(void *)v6, *(void *)(v6 + 8), v7, *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void **)(v6 + 80), *(void **)(v6 + 88), *(void *)(v6 + 96), *(void *)(v6 + 104), v8);
  }
  return result;
}

uint64_t sub_10000EA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  switch(a15 >> 62)
  {
    case 2uLL:
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      break;
    default:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      break;
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000EB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[2];
  unint64_t v11 = v9[14];
  if (v10 >> 1 == 0xFFFFFFFF && (v11 & 0xFFFFFFFFFFFFFCFELL) == 0)
  {
    long long v19 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v19;
    *(void *)(v8 + 128) = v9[16];
    long long v20 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v20;
    long long v21 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v21;
    long long v22 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v22;
  }
  else
  {
    uint64_t v13 = *v9;
    uint64_t v14 = v9[3];
    uint64_t v15 = v9[4];
    uint64_t v16 = v9[5];
    uint64_t v17 = v9[6];
    uint64_t v18 = v9[7];
    uint64_t v24 = v9[1];
    uint64_t v25 = v9[8];
    uint64_t v26 = v9[9];
    uint64_t v27 = (void *)v9[10];
    uint64_t v28 = (void *)v9[11];
    uint64_t v29 = v9[12];
    uint64_t v30 = v9[13];
    uint64_t v31 = v9[15];
    uint64_t v32 = v9[16];
    sub_10000E8B0(*v9, v24, v10, v14, v15, v16, v17, v18, v25, v26, v27, v28, v29, v30, v11);
    *(void *)uint64_t v8 = v13;
    *(void *)(v8 + 8) = v24;
    *(void *)(v8 + 16) = v10;
    *(void *)(v8 + 24) = v14;
    *(void *)(v8 + 32) = v15;
    *(void *)(v8 + 40) = v16;
    *(void *)(v8 + 48) = v17;
    *(void *)(v8 + 56) = v18;
    *(void *)(v8 + 64) = v25;
    *(void *)(v8 + 72) = v26;
    *(void *)(v8 + 80) = v27;
    *(void *)(v8 + 88) = v28;
    *(void *)(v8 + 96) = v29;
    *(void *)(v8 + 104) = v30;
    *(void *)(v8 + 112) = v11;
    *(void *)(v8 + 120) = v31;
    *(void *)(v8 + 128) = v32;
  }
  return a1;
}

uint64_t sub_10000ECB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 16);
  unint64_t v11 = *(void *)(a1 + v7 + 112) & 0xFFFFFFFFFFFFFCFELL;
  unint64_t v12 = *(void *)(a2 + v7 + 16);
  unint64_t v13 = v9[14];
  BOOL v15 = (v13 & 0xFFFFFFFFFFFFFCFELL) == 0 && v12 >> 1 == 0xFFFFFFFF;
  if (v10 >> 1 == 0xFFFFFFFF && v11 == 0)
  {
    if (v15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      long long v23 = *((_OWORD *)v9 + 1);
      long long v24 = *((_OWORD *)v9 + 2);
      long long v25 = *((_OWORD *)v9 + 4);
      *(_OWORD *)(v8 + 48) = *((_OWORD *)v9 + 3);
      *(_OWORD *)(v8 + 64) = v25;
      *(_OWORD *)(v8 + 16) = v23;
      *(_OWORD *)(v8 + 32) = v24;
      long long v26 = *((_OWORD *)v9 + 5);
      long long v27 = *((_OWORD *)v9 + 6);
      long long v28 = *((_OWORD *)v9 + 7);
      *(void *)(v8 + 128) = v9[16];
      *(_OWORD *)(v8 + 96) = v27;
      *(_OWORD *)(v8 + 112) = v28;
      *(_OWORD *)(v8 + 80) = v26;
    }
    else
    {
      uint64_t v50 = *v9;
      uint64_t v49 = v9[1];
      uint64_t v51 = v9[4];
      uint64_t v52 = v9[5];
      uint64_t v53 = v9[6];
      uint64_t v54 = v9[7];
      uint64_t v59 = v49;
      uint64_t v61 = v9[8];
      uint64_t v63 = v9[9];
      long long v65 = (void *)v9[10];
      long long v67 = (void *)v9[11];
      uint64_t v69 = v9[12];
      uint64_t v71 = v9[13];
      uint64_t v73 = v9[15];
      uint64_t v75 = v9[16];
      uint64_t v55 = *v9;
      uint64_t v56 = v9[3];
      sub_10000E8B0(v55, v49, v12, v56, v51, v52, v53, v54, v61, v63, v65, v67, v69, v71, v13);
      *(void *)uint64_t v8 = v50;
      *(void *)(v8 + 8) = v59;
      *(void *)(v8 + 16) = v12;
      *(void *)(v8 + 24) = v56;
      *(void *)(v8 + 32) = v51;
      *(void *)(v8 + 40) = v52;
      *(void *)(v8 + 48) = v53;
      *(void *)(v8 + 56) = v54;
      *(void *)(v8 + 64) = v61;
      *(void *)(v8 + 72) = v63;
      *(void *)(v8 + 80) = v65;
      *(void *)(v8 + 88) = v67;
      *(void *)(v8 + 96) = v69;
      *(void *)(v8 + 104) = v71;
      *(void *)(v8 + 112) = v13;
      *(void *)(v8 + 120) = v73;
      *(void *)(v8 + 128) = v75;
    }
  }
  else if (v15)
  {
    sub_10000EF8C(v8);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    long long v17 = *((_OWORD *)v9 + 4);
    long long v19 = *((_OWORD *)v9 + 1);
    long long v18 = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 16) = v19;
    *(_OWORD *)(v8 + 32) = v18;
    long long v21 = *((_OWORD *)v9 + 6);
    long long v20 = *((_OWORD *)v9 + 7);
    long long v22 = *((_OWORD *)v9 + 5);
    *(void *)(v8 + 128) = v9[16];
    *(_OWORD *)(v8 + 96) = v21;
    *(_OWORD *)(v8 + 112) = v20;
    *(_OWORD *)(v8 + 80) = v22;
  }
  else
  {
    uint64_t v30 = *v9;
    uint64_t v29 = v9[1];
    uint64_t v31 = v9[4];
    uint64_t v32 = v9[5];
    uint64_t v33 = v9[6];
    uint64_t v34 = v9[7];
    uint64_t v58 = v29;
    uint64_t v60 = v9[8];
    uint64_t v62 = v9[9];
    uint64_t v64 = (void *)v9[10];
    uint64_t v66 = (void *)v9[11];
    uint64_t v68 = v9[12];
    uint64_t v70 = v9[13];
    uint64_t v72 = v9[15];
    uint64_t v74 = v9[16];
    uint64_t v35 = *v9;
    uint64_t v36 = v9[3];
    sub_10000E8B0(v35, v29, v12, v36, v31, v32, v33, v34, v60, v62, v64, v66, v68, v70, v13);
    uint64_t v37 = *(void *)v8;
    uint64_t v38 = *(void *)(v8 + 8);
    uint64_t v39 = *(void *)(v8 + 16);
    uint64_t v40 = *(void *)(v8 + 24);
    uint64_t v41 = *(void *)(v8 + 32);
    uint64_t v42 = *(void *)(v8 + 40);
    uint64_t v43 = *(void *)(v8 + 48);
    uint64_t v44 = *(void *)(v8 + 56);
    long long v45 = *(_OWORD *)(v8 + 64);
    long long v46 = *(_OWORD *)(v8 + 80);
    long long v47 = *(_OWORD *)(v8 + 96);
    long long v48 = *(_OWORD *)(v8 + 112);
    *(void *)uint64_t v8 = v30;
    *(void *)(v8 + 8) = v58;
    *(void *)(v8 + 16) = v12;
    *(void *)(v8 + 24) = v36;
    *(void *)(v8 + 32) = v31;
    *(void *)(v8 + 40) = v32;
    *(void *)(v8 + 48) = v33;
    *(void *)(v8 + 56) = v34;
    *(void *)(v8 + 64) = v60;
    *(void *)(v8 + 72) = v62;
    *(void *)(v8 + 80) = v64;
    *(void *)(v8 + 88) = v66;
    *(void *)(v8 + 96) = v68;
    *(void *)(v8 + 104) = v70;
    *(void *)(v8 + 112) = v13;
    *(void *)(v8 + 120) = v72;
    *(void *)(v8 + 128) = v74;
    sub_10000EA48(v37, v38, v39, v40, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), (void *)v46, *((void **)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48);
  }
  return a1;
}

uint64_t sub_10000EF8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000EFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v10;
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  long long v11 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v11;
  long long v12 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v12;
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  return a1;
}

uint64_t sub_10000F084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void *)(a1 + v7 + 16);
  unint64_t v11 = *(void *)(a1 + v7 + 112);
  if (v10 >> 1 == 0xFFFFFFFF && (v11 & 0xFFFFFFFFFFFFFCFELL) == 0) {
    goto LABEL_11;
  }
  unint64_t v13 = *(void *)(v9 + 16);
  uint64_t v14 = *(void *)(v9 + 112);
  if (v13 >> 1 == 0xFFFFFFFF && (v14 & 0xFFFFFFFFFFFFFCFELL) == 0)
  {
    sub_10000EF8C(v8);
LABEL_11:
    long long v28 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v28;
    *(void *)(v8 + 128) = *(void *)(v9 + 128);
    long long v29 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v29;
    long long v30 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v30;
    long long v31 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v31;
    return a1;
  }
  uint64_t v16 = *(void *)(v9 + 104);
  uint64_t v17 = *(void *)v8;
  uint64_t v18 = *(void *)(v8 + 8);
  uint64_t v19 = *(void *)(v8 + 24);
  uint64_t v20 = *(void *)(v8 + 32);
  uint64_t v21 = *(void *)(v8 + 40);
  uint64_t v22 = *(void *)(v8 + 48);
  uint64_t v23 = *(void *)(v8 + 56);
  long long v24 = *(_OWORD *)(v8 + 64);
  long long v25 = *(_OWORD *)(v8 + 80);
  uint64_t v26 = *(void *)(v8 + 96);
  uint64_t v27 = *(void *)(v8 + 104);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = v13;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(void *)(v8 + 104) = v16;
  *(void *)(v8 + 112) = v14;
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  sub_10000EA48(v17, v18, v10, v19, v20, v21, v22, v23, v24, *((uint64_t *)&v24 + 1), (void *)v25, *((void **)&v25 + 1), v26, v27, v11);
  return a1;
}

uint64_t sub_10000F1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000F200);
}

uint64_t sub_10000F200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16) >> 1;
    int v11 = -2 - v10;
    if (-2 - (int)v10 < 0) {
      int v11 = -1;
    }
    if (v10 > 0x80000000) {
      return (v11 + 1);
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10000F2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000F2E8);
}

double sub_10000F2E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000A3560();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    *(void *)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    *(void *)(v12 + 16) = 2 * ~a2;
    double result = 0.0;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_OWORD *)(v12 + 40) = 0u;
    *(_OWORD *)(v12 + 56) = 0u;
    *(_OWORD *)(v12 + 72) = 0u;
    *(_OWORD *)(v12 + 88) = 0u;
    *(_OWORD *)(v12 + 104) = 0u;
    *(_OWORD *)(v12 + 120) = 0u;
  }
  return result;
}

uint64_t sub_10000F3D0()
{
  uint64_t result = sub_1000A3560();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Provider()
{
  return &type metadata for Provider;
}

uint64_t *sub_10000F474(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WidgetEntry(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_1000A3560();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 2);
    unint64_t v12 = *((void *)v10 + 14);
    if (v11 >> 1 == 0xFFFFFFFF && (v12 & 0xFFFFFFFFFFFFFCFELL) == 0)
    {
      long long v21 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v21;
      *((void *)v9 + 16) = *((void *)v10 + 16);
      long long v22 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v22;
      long long v23 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v23;
      long long v24 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v24;
    }
    else
    {
      uint64_t v14 = *(void *)v10;
      uint64_t v15 = *((void *)v10 + 3);
      uint64_t v16 = *((void *)v10 + 4);
      uint64_t v17 = *((void *)v10 + 5);
      uint64_t v18 = *((void *)v10 + 6);
      uint64_t v19 = *((void *)v10 + 7);
      uint64_t v26 = *((void *)v10 + 1);
      uint64_t v27 = *((void *)v10 + 8);
      uint64_t v28 = *((void *)v10 + 9);
      long long v29 = (void *)*((void *)v10 + 10);
      long long v30 = (void *)*((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      uint64_t v32 = *((void *)v10 + 13);
      uint64_t v33 = *((void *)v10 + 15);
      uint64_t v34 = *((void *)v10 + 16);
      sub_10000E8B0(*(void *)v10, v26, v11, v15, v16, v17, v18, v19, v27, v28, v29, v30, v31, v32, v12);
      *(void *)uint64_t v9 = v14;
      *((void *)v9 + 1) = v26;
      *((void *)v9 + 2) = v11;
      *((void *)v9 + 3) = v15;
      *((void *)v9 + 4) = v16;
      *((void *)v9 + 5) = v17;
      *((void *)v9 + 6) = v18;
      *((void *)v9 + 7) = v19;
      *((void *)v9 + 8) = v27;
      *((void *)v9 + 9) = v28;
      *((void *)v9 + 10) = v29;
      *((void *)v9 + 11) = v30;
      *((void *)v9 + 12) = v31;
      *((void *)v9 + 13) = v32;
      *((void *)v9 + 14) = v12;
      *((void *)v9 + 15) = v33;
      *((void *)v9 + 16) = v34;
    }
  }
  return a1;
}

uint64_t sub_10000F664(uint64_t a1)
{
  uint64_t v2 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t result = type metadata accessor for WidgetEntry(0);
  uint64_t v4 = a1 + *(int *)(result + 20);
  unint64_t v5 = *(void *)(v4 + 16);
  unint64_t v6 = *(void *)(v4 + 112);
  if (v5 >> 1 != 0xFFFFFFFF || (v6 & 0xFFFFFFFFFFFFFCFELL) != 0) {
    return sub_10000EA48(*(void *)v4, *(void *)(v4 + 8), v5, *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void **)(v4 + 80), *(void **)(v4 + 88), *(void *)(v4 + 96), *(void *)(v4 + 104), v6);
  }
  return result;
}

uint64_t sub_10000F724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for WidgetEntry(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t *)(a2 + v5);
  unint64_t v8 = v7[2];
  unint64_t v9 = v7[14];
  if (v8 >> 1 == 0xFFFFFFFF && (v9 & 0xFFFFFFFFFFFFFCFELL) == 0)
  {
    long long v18 = *((_OWORD *)v7 + 7);
    *(_OWORD *)(v6 + 96) = *((_OWORD *)v7 + 6);
    *(_OWORD *)(v6 + 112) = v18;
    *(void *)(v6 + 128) = v7[16];
    long long v19 = *((_OWORD *)v7 + 3);
    *(_OWORD *)(v6 + 32) = *((_OWORD *)v7 + 2);
    *(_OWORD *)(v6 + 48) = v19;
    long long v20 = *((_OWORD *)v7 + 5);
    *(_OWORD *)(v6 + 64) = *((_OWORD *)v7 + 4);
    *(_OWORD *)(v6 + 80) = v20;
    long long v21 = *((_OWORD *)v7 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v21;
  }
  else
  {
    uint64_t v11 = *v7;
    uint64_t v12 = v7[3];
    uint64_t v13 = v7[4];
    uint64_t v14 = v7[5];
    uint64_t v15 = v7[6];
    uint64_t v16 = v7[7];
    uint64_t v23 = v7[8];
    uint64_t v24 = v7[9];
    long long v25 = (void *)v7[10];
    uint64_t v26 = (void *)v7[11];
    uint64_t v27 = v7[12];
    uint64_t v28 = v7[13];
    uint64_t v29 = v7[15];
    uint64_t v30 = v7[16];
    uint64_t v31 = a1;
    uint64_t v17 = v7[1];
    sub_10000E8B0(*v7, v17, v8, v12, v13, v14, v15, v16, v23, v24, v25, v26, v27, v28, v9);
    *(void *)uint64_t v6 = v11;
    *(void *)(v6 + 8) = v17;
    a1 = v31;
    *(void *)(v6 + 16) = v8;
    *(void *)(v6 + 24) = v12;
    *(void *)(v6 + 32) = v13;
    *(void *)(v6 + 40) = v14;
    *(void *)(v6 + 48) = v15;
    *(void *)(v6 + 56) = v16;
    *(void *)(v6 + 64) = v23;
    *(void *)(v6 + 72) = v24;
    *(void *)(v6 + 80) = v25;
    *(void *)(v6 + 88) = v26;
    *(void *)(v6 + 96) = v27;
    *(void *)(v6 + 104) = v28;
    *(void *)(v6 + 112) = v9;
    *(void *)(v6 + 120) = v29;
    *(void *)(v6 + 128) = v30;
  }
  return a1;
}

uint64_t sub_10000F8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for WidgetEntry(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t *)(a2 + v5);
  unint64_t v8 = *(void *)(a1 + v5 + 16);
  unint64_t v9 = *(void *)(a1 + v5 + 112) & 0xFFFFFFFFFFFFFCFELL;
  unint64_t v10 = *(void *)(a2 + v5 + 16);
  unint64_t v11 = v7[14];
  BOOL v13 = (v11 & 0xFFFFFFFFFFFFFCFELL) == 0 && v10 >> 1 == 0xFFFFFFFF;
  if (v8 >> 1 == 0xFFFFFFFF && v9 == 0)
  {
    if (v13)
    {
      *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
      long long v21 = *((_OWORD *)v7 + 1);
      long long v22 = *((_OWORD *)v7 + 2);
      long long v23 = *((_OWORD *)v7 + 4);
      *(_OWORD *)(v6 + 48) = *((_OWORD *)v7 + 3);
      *(_OWORD *)(v6 + 64) = v23;
      *(_OWORD *)(v6 + 16) = v21;
      *(_OWORD *)(v6 + 32) = v22;
      long long v24 = *((_OWORD *)v7 + 5);
      long long v25 = *((_OWORD *)v7 + 6);
      long long v26 = *((_OWORD *)v7 + 7);
      *(void *)(v6 + 128) = v7[16];
      *(_OWORD *)(v6 + 96) = v25;
      *(_OWORD *)(v6 + 112) = v26;
      *(_OWORD *)(v6 + 80) = v24;
    }
    else
    {
      uint64_t v48 = *v7;
      uint64_t v47 = v7[1];
      uint64_t v49 = v7[4];
      uint64_t v50 = v7[5];
      uint64_t v51 = v7[6];
      uint64_t v52 = v7[7];
      uint64_t v57 = v47;
      uint64_t v59 = v7[8];
      uint64_t v61 = v7[9];
      uint64_t v63 = (void *)v7[10];
      long long v65 = (void *)v7[11];
      uint64_t v67 = v7[12];
      uint64_t v69 = v7[13];
      uint64_t v71 = v7[15];
      uint64_t v73 = v7[16];
      uint64_t v53 = *v7;
      uint64_t v54 = v7[3];
      sub_10000E8B0(v53, v47, v10, v54, v49, v50, v51, v52, v59, v61, v63, v65, v67, v69, v11);
      *(void *)uint64_t v6 = v48;
      *(void *)(v6 + 8) = v57;
      *(void *)(v6 + 16) = v10;
      *(void *)(v6 + 24) = v54;
      *(void *)(v6 + 32) = v49;
      *(void *)(v6 + 40) = v50;
      *(void *)(v6 + 48) = v51;
      *(void *)(v6 + 56) = v52;
      *(void *)(v6 + 64) = v59;
      *(void *)(v6 + 72) = v61;
      *(void *)(v6 + 80) = v63;
      *(void *)(v6 + 88) = v65;
      *(void *)(v6 + 96) = v67;
      *(void *)(v6 + 104) = v69;
      *(void *)(v6 + 112) = v11;
      *(void *)(v6 + 120) = v71;
      *(void *)(v6 + 128) = v73;
    }
  }
  else if (v13)
  {
    sub_10000EF8C(v6);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    long long v15 = *((_OWORD *)v7 + 4);
    long long v17 = *((_OWORD *)v7 + 1);
    long long v16 = *((_OWORD *)v7 + 2);
    *(_OWORD *)(v6 + 48) = *((_OWORD *)v7 + 3);
    *(_OWORD *)(v6 + 64) = v15;
    *(_OWORD *)(v6 + 16) = v17;
    *(_OWORD *)(v6 + 32) = v16;
    long long v19 = *((_OWORD *)v7 + 6);
    long long v18 = *((_OWORD *)v7 + 7);
    long long v20 = *((_OWORD *)v7 + 5);
    *(void *)(v6 + 128) = v7[16];
    *(_OWORD *)(v6 + 96) = v19;
    *(_OWORD *)(v6 + 112) = v18;
    *(_OWORD *)(v6 + 80) = v20;
  }
  else
  {
    uint64_t v28 = *v7;
    uint64_t v27 = v7[1];
    uint64_t v29 = v7[4];
    uint64_t v30 = v7[5];
    uint64_t v31 = v7[6];
    uint64_t v32 = v7[7];
    uint64_t v56 = v27;
    uint64_t v58 = v7[8];
    uint64_t v60 = v7[9];
    uint64_t v62 = (void *)v7[10];
    uint64_t v64 = (void *)v7[11];
    uint64_t v66 = v7[12];
    uint64_t v68 = v7[13];
    uint64_t v70 = v7[15];
    uint64_t v72 = v7[16];
    uint64_t v33 = *v7;
    uint64_t v34 = v7[3];
    sub_10000E8B0(v33, v27, v10, v34, v29, v30, v31, v32, v58, v60, v62, v64, v66, v68, v11);
    uint64_t v35 = *(void *)v6;
    uint64_t v36 = *(void *)(v6 + 8);
    uint64_t v37 = *(void *)(v6 + 16);
    uint64_t v38 = *(void *)(v6 + 24);
    uint64_t v39 = *(void *)(v6 + 32);
    uint64_t v40 = *(void *)(v6 + 40);
    uint64_t v41 = *(void *)(v6 + 48);
    uint64_t v42 = *(void *)(v6 + 56);
    long long v43 = *(_OWORD *)(v6 + 64);
    long long v44 = *(_OWORD *)(v6 + 80);
    long long v45 = *(_OWORD *)(v6 + 96);
    long long v46 = *(_OWORD *)(v6 + 112);
    *(void *)uint64_t v6 = v28;
    *(void *)(v6 + 8) = v56;
    *(void *)(v6 + 16) = v10;
    *(void *)(v6 + 24) = v34;
    *(void *)(v6 + 32) = v29;
    *(void *)(v6 + 40) = v30;
    *(void *)(v6 + 48) = v31;
    *(void *)(v6 + 56) = v32;
    *(void *)(v6 + 64) = v58;
    *(void *)(v6 + 72) = v60;
    *(void *)(v6 + 80) = v62;
    *(void *)(v6 + 88) = v64;
    *(void *)(v6 + 96) = v66;
    *(void *)(v6 + 104) = v68;
    *(void *)(v6 + 112) = v11;
    *(void *)(v6 + 120) = v70;
    *(void *)(v6 + 128) = v72;
    sub_10000EA48(v35, v36, v37, v38, v39, v40, v41, v42, v43, *((uint64_t *)&v43 + 1), (void *)v44, *((void **)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46);
  }
  return a1;
}

uint64_t sub_10000FBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for WidgetEntry(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(v7 + 112);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(v7 + 96);
  *(_OWORD *)(v6 + 112) = v8;
  *(void *)(v6 + 128) = *(void *)(v7 + 128);
  long long v9 = *(_OWORD *)(v7 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
  *(_OWORD *)(v6 + 48) = v9;
  long long v10 = *(_OWORD *)(v7 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(v7 + 64);
  *(_OWORD *)(v6 + 80) = v10;
  long long v11 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_OWORD *)(v6 + 16) = v11;
  return a1;
}

uint64_t sub_10000FC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for WidgetEntry(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  unint64_t v8 = *(void *)(a1 + v5 + 16);
  unint64_t v9 = *(void *)(a1 + v5 + 112);
  if (v8 >> 1 == 0xFFFFFFFF && (v9 & 0xFFFFFFFFFFFFFCFELL) == 0) {
    goto LABEL_11;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  uint64_t v12 = *(void *)(v7 + 112);
  if (v11 >> 1 == 0xFFFFFFFF && (v12 & 0xFFFFFFFFFFFFFCFELL) == 0)
  {
    sub_10000EF8C(v6);
LABEL_11:
    long long v26 = *(_OWORD *)(v7 + 112);
    *(_OWORD *)(v6 + 96) = *(_OWORD *)(v7 + 96);
    *(_OWORD *)(v6 + 112) = v26;
    *(void *)(v6 + 128) = *(void *)(v7 + 128);
    long long v27 = *(_OWORD *)(v7 + 48);
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(v6 + 48) = v27;
    long long v28 = *(_OWORD *)(v7 + 80);
    *(_OWORD *)(v6 + 64) = *(_OWORD *)(v7 + 64);
    *(_OWORD *)(v6 + 80) = v28;
    long long v29 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v29;
    return a1;
  }
  uint64_t v14 = *(void *)(v7 + 104);
  uint64_t v15 = *(void *)v6;
  uint64_t v16 = *(void *)(v6 + 8);
  uint64_t v17 = *(void *)(v6 + 24);
  uint64_t v18 = *(void *)(v6 + 32);
  uint64_t v19 = *(void *)(v6 + 40);
  uint64_t v20 = *(void *)(v6 + 48);
  uint64_t v21 = *(void *)(v6 + 56);
  long long v22 = *(_OWORD *)(v6 + 64);
  long long v23 = *(_OWORD *)(v6 + 80);
  uint64_t v24 = *(void *)(v6 + 96);
  uint64_t v25 = *(void *)(v6 + 104);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(void *)(v6 + 16) = v11;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(v7 + 24);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(v7 + 40);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(v7 + 72);
  *(_OWORD *)(v6 + 88) = *(_OWORD *)(v7 + 88);
  *(void *)(v6 + 104) = v14;
  *(void *)(v6 + 112) = v12;
  *(_OWORD *)(v6 + 120) = *(_OWORD *)(v7 + 120);
  sub_10000EA48(v15, v16, v8, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), (void *)v23, *((void **)&v23 + 1), v24, v25, v9);
  return a1;
}

uint64_t sub_10000FDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000FDC4);
}

uint64_t sub_10000FDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10000FE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000FE44);
}

uint64_t sub_10000FE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10000FEB4()
{
  uint64_t result = type metadata accessor for WidgetEntry(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000FF40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100010090()
{
  return sub_1000100D8(qword_1000CCD60, (void (*)(uint64_t))type metadata accessor for WidgetEntry);
}

uint64_t sub_1000100D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100010120()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001013C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000101A4(uint64_t a1)
{
  if ((*(void *)(a1 + 16) >> 1) > 0x80000000) {
    return -(*(void *)(a1 + 16) >> 1);
  }
  else {
    return 0;
  }
}

unint64_t sub_1000101BC()
{
  unint64_t result = qword_1000CCDB8;
  if (!qword_1000CCDB8)
  {
    sub_100008B14(&qword_1000CCDA8);
    sub_100010238();
    sub_100010338();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCDB8);
  }
  return result;
}

unint64_t sub_100010238()
{
  unint64_t result = qword_1000CCDC0;
  if (!qword_1000CCDC0)
  {
    sub_100008B14(&qword_1000CCDA0);
    sub_1000102E4();
    sub_1000100D8(&qword_1000CCDD0, (void (*)(uint64_t))type metadata accessor for SmallWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCDC0);
  }
  return result;
}

unint64_t sub_1000102E4()
{
  unint64_t result = qword_1000CCDC8;
  if (!qword_1000CCDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCDC8);
  }
  return result;
}

unint64_t sub_100010338()
{
  unint64_t result = qword_1000CCDD8;
  if (!qword_1000CCDD8)
  {
    sub_100008B14(&qword_1000CCD80);
    sub_1000100D8(&qword_1000CCDE0, (void (*)(uint64_t))type metadata accessor for MediumWidgetView);
    sub_1000100D8(&qword_1000CCDE8, (void (*)(uint64_t))type metadata accessor for LargeWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCDD8);
  }
  return result;
}

uint64_t sub_100010414(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100010470(uint64_t a1)
{
  return *(void *)(a1 + 112) >> 62;
}

uint64_t sub_10001047C()
{
  return sub_1000A3A50();
}

uint64_t sub_1000104A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001050C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000A3AF0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_10001053C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001059C(uint64_t result)
{
  *(void *)(result + 112) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1000105AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100010614(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  if (a3 >> 1 != 0xFFFFFFFF || (a15 & 0xFFFFFFFFFFFFFCFELL) != 0) {
    return sub_10000EA48(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  return result;
}

uint64_t sub_10001065C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100010738;
  return v6(a1);
}

uint64_t sub_100010738()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100010830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4210();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FDC(&qword_1000CCDF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000CC638 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1000A3830();
  sub_100010B3C(v13, (uint64_t)qword_1000CCBC0);
  uint64_t v14 = sub_1000A3810();
  os_log_type_t v15 = sub_1000A44D0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = v8;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Widget was awoken to fetch view model data.", v16, 2u);
    uint64_t v8 = v24;
    swift_slowDealloc();
  }

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  uint64_t v18 = sub_1000A4450();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v9, v6);
  uint64_t v21 = (uint64_t (**)())(v20 + ((v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v21 = sub_10001120C;
  v21[1] = (uint64_t (*)())v17;
  swift_retain();
  sub_10000BA58((uint64_t)v12, (uint64_t)&unk_1000CCE00, v20);
  return swift_release();
}

uint64_t sub_100010B3C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100010B74()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100010BB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A4210() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  unint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100011210;
  return sub_10000BC04(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100010CDC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000C760;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000CCE08 + dword_1000CCE08);
  return v6(a1, v4);
}

void *sub_100010D94(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100010DF8(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  if (a3 >> 1 != 0xFFFFFFFF || (a15 & 0xFFFFFFFFFFFFFCFELL) != 0) {
    return sub_10000E8B0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  return result;
}

uint64_t *sub_100010E40(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100010EA4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100010ED0()
{
  uint64_t v1 = sub_1000A4210();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100010FBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A4210() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  unint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100011210;
  return sub_10000B5EC(a1, v6, v7, v8, v10, v11);
}

double sub_1000110E8(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0x1FFFFFFFELL;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  return result;
}

uint64_t sub_100011118(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 112) & 0x301 | 0xC000000000000000;
  *(void *)(result + 16) &= 1uLL;
  *(void *)(result + 112) = v1;
  return result;
}

uint64_t sub_10001113C(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 112) & 0x301 | 0x8000000000000000;
  *(void *)(result + 16) &= 1uLL;
  *(void *)(result + 112) = v1;
  return result;
}

uint64_t sub_100011160(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 112) & 0x301 | 0x4000000000000000;
  *(void *)(result + 16) &= 1uLL;
  *(void *)(result + 112) = v1;
  return result;
}

unint64_t sub_100011188()
{
  unint64_t result = qword_1000CCE40;
  if (!qword_1000CCE40)
  {
    sub_100008B14(&qword_1000CCE48);
    sub_1000101BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCE40);
  }
  return result;
}

uint64_t sub_100011214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for LargeTwoBookView(uint64_t a1)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LargeTwoBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LargeTwoBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_10000A4F8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

__n128 initializeWithTake for LargeTwoBookView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for LargeTwoBookView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v4;
  sub_10000A4F8(v5, v6, v7, v8, v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeTwoBookView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeTwoBookView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargeTwoBookView()
{
  return &type metadata for LargeTwoBookView;
}

uint64_t sub_100011654()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100011670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004FDC(&qword_1000CCE50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CCE58);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  char v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_1000A3BB0();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v10 = sub_100004FDC(&qword_1000CCE60);
  sub_1000118D0(v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  char v11 = sub_1000A3D40();
  long long v12 = *(_OWORD *)(v1 + 16);
  v33[0] = *(_OWORD *)v1;
  v33[1] = v12;
  char v34 = *(unsigned char *)(v1 + 32);
  sub_10000A95C((uint64_t)v33, (uint64_t)v35, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v35, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v33, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v9, &qword_1000CCE50);
  uint64_t v21 = &v9[*(int *)(v7 + 44)];
  *uint64_t v21 = v11;
  *((void *)v21 + 1) = v14;
  *((void *)v21 + 2) = v16;
  *((void *)v21 + 3) = v18;
  *((void *)v21 + 4) = v20;
  v21[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CCE50);
  char v22 = sub_1000A3D20();
  sub_100012D8C((uint64_t)v35, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v33, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_10000B1C0((uint64_t)v9, a1, &qword_1000CCE58);
  uint64_t v31 = a1 + *(int *)(sub_100004FDC(&qword_1000CCE70) + 36);
  *(unsigned char *)uint64_t v31 = v22;
  *(void *)(v31 + 8) = v24;
  *(void *)(v31 + 16) = v26;
  *(void *)(v31 + 24) = v28;
  *(void *)(v31 + 32) = v30;
  *(unsigned char *)(v31 + 40) = 0;
  return sub_10000A9C0((uint64_t)v9, &qword_1000CCE58);
}

uint64_t sub_1000118D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCE78);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CCE80);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v48 = (uint64_t)&v40 - v12;
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v50 = sub_10007363C(v11);
  uint64_t v49 = v14;
  sub_1000A3BA0();
  sub_1000A3B50();
  sub_1000A3910();
  uint64_t v47 = v52;
  int v46 = v53;
  uint64_t v45 = v54;
  int v44 = v55;
  uint64_t v43 = v56;
  uint64_t v42 = v57;
  int v41 = sub_1000A3D60();
  long long v15 = *(_OWORD *)(a1 + 16);
  v58[0] = *(_OWORD *)a1;
  v58[1] = v15;
  char v59 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v58, (uint64_t)v60, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v60, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v58, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_100012D8C((uint64_t)v60, (void (*)(void, void, void, void, void))sub_100011214);
  double v24 = sub_100009B60();
  sub_100012D8C((uint64_t)v58, (void (*)(void, void, void, void, void))sub_10000A4F8);
  *(void *)uint64_t v6 = sub_1000A3B60();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v40 = &v6[*(int *)(sub_100004FDC(&qword_1000CCE88) + 44)];
  uint64_t v61 = v13;
  uint64_t v51 = v13;
  swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  long long v26 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v25 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v25 + 160) = v26;
  *(void *)(v25 + 176) = *(void *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v25 + 96) = v27;
  long long v28 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v25 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v25 + 128) = v28;
  long long v29 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 32) = v29;
  long long v30 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v25 + 64) = v30;
  sub_100012E34((uint64_t)&v61);
  sub_100012E60(a1);
  sub_100004FDC(&qword_1000CCE90);
  sub_100004FDC(&qword_1000CCE98);
  sub_10000B17C(&qword_1000CCEA0, &qword_1000CCE90);
  sub_100012ED8();
  sub_1000A4050();
  uint64_t v31 = sub_1000A4070();
  sub_1000309B8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v31, v32);
  sub_10000A9C0((uint64_t)v6, &qword_1000CCE78);
  uint64_t v33 = v48;
  sub_10000A95C((uint64_t)v10, v48, &qword_1000CCE80);
  sub_100012D8C((uint64_t)v60, (void (*)(void, void, void, void, void))sub_100011214);
  double v34 = sub_100009B60();
  sub_100012D8C((uint64_t)v58, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_10000B1C0(v33, (uint64_t)v10, &qword_1000CCE80);
  uint64_t v35 = v49;
  *(void *)a2 = v50;
  *(void *)(a2 + 8) = v35;
  *(void *)(a2 + 16) = v47;
  *(unsigned char *)(a2 + 24) = v46;
  *(void *)(a2 + 32) = v45;
  *(unsigned char *)(a2 + 40) = v44;
  uint64_t v36 = v42;
  *(void *)(a2 + 48) = v43;
  *(void *)(a2 + 56) = v36;
  *(unsigned char *)(a2 + 64) = v41;
  *(void *)(a2 + 72) = v17;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v21;
  *(void *)(a2 + 96) = v23;
  *(unsigned char *)(a2 + 104) = 0;
  *(double *)(a2 + 112) = v24;
  *(unsigned char *)(a2 + 120) = 0;
  uint64_t v37 = sub_100004FDC(&qword_1000CCEE0);
  sub_10000B1C0((uint64_t)v10, a2 + *(int *)(v37 + 64), &qword_1000CCE80);
  uint64_t v38 = a2 + *(int *)(v37 + 80);
  *(double *)uint64_t v38 = v34;
  *(unsigned char *)(v38 + 8) = 0;
  swift_bridgeObjectRetain();
  sub_10000A9C0(v33, &qword_1000CCE80);
  sub_10000A9C0((uint64_t)v10, &qword_1000CCE80);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100011DFC@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v47 = sub_1000A3C90();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CCED8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FDC(&qword_1000CCEC8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004FDC(&qword_1000CCEB0);
  __chkstk_darwin(v43);
  long long v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100004FDC(&qword_1000CCEE8);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004FDC(&qword_1000CCE98);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v21 = a1[3];
  long long v58 = a1[2];
  long long v59 = v21;
  long long v60 = a1[4];
  char v61 = *((unsigned char *)a1 + 80);
  long long v22 = a1[1];
  long long v56 = *a1;
  long long v57 = v22;
  *(void *)uint64_t v9 = sub_1000A3B60();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v23 = sub_100004FDC(&qword_1000CCEF0);
  sub_100012360(a2, (uint64_t)&v56, (uint64_t)&v9[*(int *)(v23 + 44)]);
  LOBYTE(a1) = sub_1000A3D60();
  long long v24 = *(_OWORD *)(a2 + 16);
  v53[0] = *(_OWORD *)a2;
  v53[1] = v24;
  char v54 = *(unsigned char *)(a2 + 32);
  sub_10000A95C((uint64_t)v53, (uint64_t)v55, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v55, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v53, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_10000B1C0((uint64_t)v9, (uint64_t)v13, &qword_1000CCED8);
  uint64_t v33 = &v13[*(int *)(v11 + 44)];
  *uint64_t v33 = (char)a1;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_10000A9C0((uint64_t)v9, &qword_1000CCED8);
  uint64_t v34 = sub_1000A4080();
  sub_100030A28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v34, v35);
  sub_10000A9C0((uint64_t)v13, &qword_1000CCEC8);
  long long v64 = v58;
  long long v65 = v59;
  long long v66 = v60;
  char v67 = v61;
  long long v62 = v56;
  long long v63 = v57;
  if (sub_10001A23C()) {
    sub_1000A3C80();
  }
  else {
    sub_1000A3C70();
  }
  uint64_t v36 = sub_100013538(&qword_1000CCEB8, &qword_1000CCEB0, (void (*)(void))sub_100012FEC);
  uint64_t v37 = v43;
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v47);
  sub_10000A9C0((uint64_t)v15, &qword_1000CCEB0);
  if (sub_10001A23C())
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
  }
  else
  {
    uint64_t v38 = sub_10006D98C(1);
    unint64_t v39 = v40;
  }
  uint64_t v51 = v38;
  unint64_t v52 = v39;
  uint64_t v49 = v37;
  uint64_t v50 = v36;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  uint64_t v41 = v46;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v41);
  return sub_10000A95C((uint64_t)v20, v48, &qword_1000CCE98);
}

uint64_t sub_100012360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v95 = a3;
  uint64_t v5 = sub_100004FDC(&qword_1000CCEF8);
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = v5;
  __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CCF00);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v94 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v84 - v11;
  __chkstk_darwin(v10);
  uint64_t v91 = (uint64_t)&v84 - v12;
  uint64_t v13 = sub_1000A3490();
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v88 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v84 - v16;
  uint64_t v18 = (int *)type metadata accessor for BookCoverView();
  uint64_t v19 = __chkstk_darwin(v18);
  long long v21 = (uint64_t *)((char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v84 - v22;
  uint64_t v85 = sub_100004FDC(&qword_1000CCF08);
  uint64_t v24 = __chkstk_darwin(v85);
  uint64_t v89 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v84 - v27;
  __chkstk_darwin(v26);
  uint64_t v96 = (uint64_t)&v84 - v29;
  long long v30 = *(_OWORD *)(a1 + 56);
  long long v31 = *(_OWORD *)(a1 + 88);
  v106[2] = *(_OWORD *)(a1 + 72);
  v106[3] = v31;
  long long v107 = *(_OWORD *)(a1 + 104);
  v106[0] = *(_OWORD *)(a1 + 40);
  v106[1] = v30;
  sub_10001308C((uint64_t)v106);
  sub_1000085CC(a2, (uint64_t)v17);
  sub_1000130D8((uint64_t)v106);
  long long v32 = *(_OWORD *)(a2 + 48);
  long long v102 = *(_OWORD *)(a2 + 32);
  long long v103 = v32;
  long long v104 = *(_OWORD *)(a2 + 64);
  char v105 = *(unsigned char *)(a2 + 80);
  long long v33 = *(_OWORD *)(a2 + 16);
  long long v100 = *(_OWORD *)a2;
  long long v101 = v33;
  char v34 = sub_10001A23C();
  if (*((void *)&v107 + 1))
  {
    if (v107 == v102) {
      char v35 = 1;
    }
    else {
      char v35 = sub_1000A46A0();
    }
  }
  else
  {
    char v35 = 0;
  }
  *long long v21 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))((char *)v21 + v18[5], v17, v87);
  *((unsigned char *)v21 + v18[6]) = v34 & 1;
  uint64_t v36 = (char *)v21 + v18[7];
  long long v37 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v36 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v36 + 3) = v37;
  *((_OWORD *)v36 + 4) = *(_OWORD *)(a2 + 64);
  v36[80] = *(unsigned char *)(a2 + 80);
  long long v38 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)a2;
  *((_OWORD *)v36 + 1) = v38;
  *((unsigned char *)v21 + v18[8]) = v35 & 1;
  *((unsigned char *)v21 + v18[9]) = 0;
  sub_10001312C((uint64_t)v21, (uint64_t)v23);
  sub_100013190(a2);
  char v39 = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  sub_1000131F0((uint64_t)v23, (uint64_t)v28);
  uint64_t v48 = &v28[*(int *)(v85 + 36)];
  *uint64_t v48 = v39;
  *((void *)v48 + 1) = v41;
  *((void *)v48 + 2) = v43;
  *((void *)v48 + 3) = v45;
  *((void *)v48 + 4) = v47;
  v48[40] = 0;
  sub_100013254((uint64_t)v23);
  sub_10000A95C((uint64_t)v28, v96, &qword_1000CCF08);
  sub_10001308C((uint64_t)v106);
  sub_1000085CC(a2, v88);
  uint64_t v49 = sub_1000130D8((uint64_t)v106);
  __chkstk_darwin(v49);
  *(&v84 - 2) = a2;
  *(&v84 - 1) = a1;
  type metadata accessor for LabelView();
  sub_1000132B8((unint64_t *)&qword_1000CCF10, (void (*)(uint64_t))type metadata accessor for LabelView);
  sub_1000A3E10();
  sub_100004FDC(&qword_1000CCF18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A8D50;
  long long v51 = v100;
  *(_OWORD *)(inited + 32) = v100;
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_10006DB70(0);
  uint64_t v54 = v52;
  *(void *)(inited + 48) = v53;
  *(void *)(inited + 56) = v52;
  if (!*((void *)&v51 + 1))
  {
    unsigned __int8 v55 = (char *)_swiftEmptyArrayStorage;
    if (!v52) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unsigned __int8 v55 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v57 = *((void *)v55 + 2);
  unint64_t v56 = *((void *)v55 + 3);
  if (v57 >= v56 >> 1) {
    unsigned __int8 v55 = sub_100058E74((char *)(v56 > 1), v57 + 1, 1, v55);
  }
  *((void *)v55 + 2) = v57 + 1;
  *(_OWORD *)&v55[16 * v57 + 32] = v51;
  if (v54)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned __int8 v55 = sub_100058E74(0, *((void *)v55 + 2) + 1, 1, v55);
    }
    unint64_t v59 = *((void *)v55 + 2);
    unint64_t v58 = *((void *)v55 + 3);
    if (v59 >= v58 >> 1) {
      unsigned __int8 v55 = sub_100058E74((char *)(v58 > 1), v59 + 1, 1, v55);
    }
    *((void *)v55 + 2) = v59 + 1;
    long long v60 = &v55[16 * v59];
    *((void *)v60 + 4) = v53;
    *((void *)v60 + 5) = v54;
  }
LABEL_17:
  swift_release();
  uint64_t v61 = *((void *)v55 + 2);
  if (v61)
  {
    long long v62 = (uint64_t *)(v55 + 40);
    long long v63 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v68 = *(v62 - 1);
      uint64_t v67 = *v62;
      uint64_t v69 = HIBYTE(*v62) & 0xF;
      if ((*v62 & 0x2000000000000000) == 0) {
        uint64_t v69 = v68 & 0xFFFFFFFFFFFFLL;
      }
      if (v69)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v98 = v63;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10007AB8C(0, v63[2] + 1, 1);
          long long v63 = v98;
        }
        unint64_t v65 = v63[2];
        unint64_t v64 = v63[3];
        if (v65 >= v64 >> 1)
        {
          sub_10007AB8C(v64 > 1, v65 + 1, 1);
          long long v63 = v98;
        }
        v63[2] = v65 + 1;
        long long v66 = &v63[2 * v65];
        v66[4] = v68;
        v66[5] = v67;
      }
      v62 += 2;
      --v61;
    }
    while (v61);
  }
  else
  {
    long long v63 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  char v98 = v63;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v71 = sub_1000A4250();
  uint64_t v73 = v72;
  swift_release();
  char v98 = (void *)v71;
  uint64_t v99 = v73;
  sub_10000B17C(&qword_1000CCF30, &qword_1000CCEF8);
  sub_10000A504();
  uint64_t v74 = (uint64_t)v90;
  uint64_t v75 = v93;
  id v76 = v97;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v76, v75);
  uint64_t v77 = v91;
  sub_10000A95C(v74, v91, &qword_1000CCF00);
  uint64_t v78 = v96;
  uint64_t v79 = v89;
  sub_10000B1C0(v96, v89, &qword_1000CCF08);
  uint64_t v80 = v94;
  sub_10000B1C0(v77, v94, &qword_1000CCF00);
  uint64_t v81 = v95;
  sub_10000B1C0(v79, v95, &qword_1000CCF08);
  uint64_t v82 = sub_100004FDC(&qword_1000CCF38);
  sub_10000B1C0(v80, v81 + *(int *)(v82 + 48), &qword_1000CCF00);
  sub_10000A9C0(v77, &qword_1000CCF00);
  sub_10000A9C0(v78, &qword_1000CCF08);
  sub_10000A9C0(v80, &qword_1000CCF00);
  return sub_10000A9C0(v79, &qword_1000CCF08);
}

int *sub_100012C78@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10006DB70(1);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 144);
  swift_retain();
  uint64_t v9 = sub_1000A3C30();
  *a2 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  __n128 result = (int *)type metadata accessor for LabelView();
  uint64_t v11 = (uint64_t *)((char *)a2 + result[5]);
  uint64_t *v11 = v4;
  v11[1] = v6;
  *(uint64_t *)((char *)a2 + result[6]) = v8;
  uint64_t v12 = (char *)a2 + result[7];
  *(void *)uint64_t v12 = v9;
  *((void *)v12 + 1) = v7;
  *((_WORD *)v12 + 8) = 0;
  return result;
}

uint64_t sub_100012D30@<X0>(uint64_t a1@<X8>)
{
  return sub_100011670(a1);
}

uint64_t sub_100012D8C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100012DCC()
{
  sub_10000A4F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_100012E2C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100011DFC(a1, v2 + 16, a2);
}

uint64_t sub_100012E34(uint64_t a1)
{
  return a1;
}

uint64_t sub_100012E60(uint64_t a1)
{
  return a1;
}

unint64_t sub_100012ED8()
{
  unint64_t result = qword_1000CCEA8;
  if (!qword_1000CCEA8)
  {
    sub_100008B14(&qword_1000CCE98);
    sub_100008B14(&qword_1000CCEB0);
    sub_100013538(&qword_1000CCEB8, &qword_1000CCEB0, (void (*)(void))sub_100012FEC);
    swift_getOpaqueTypeConformance2();
    sub_1000132B8((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCEA8);
  }
  return result;
}

unint64_t sub_100012FEC()
{
  unint64_t result = qword_1000CCEC0;
  if (!qword_1000CCEC0)
  {
    sub_100008B14(&qword_1000CCEC8);
    sub_10000B17C(&qword_1000CCED0, &qword_1000CCED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCEC0);
  }
  return result;
}

uint64_t sub_10001308C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000130D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001312C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BookCoverView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013190(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  id v5 = v3;
  return a1;
}

uint64_t sub_1000131F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BookCoverView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BookCoverView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

int *sub_1000132B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100012C78(*(void *)(v1 + 24), a1);
}

uint64_t sub_1000132B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetBookInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for LargeTwoBookView.ViewConfiguration()
{
  return swift_release();
}

uint64_t initializeWithCopy for LargeTwoBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_retain();
  return a1;
}

void *assignWithCopy for LargeTwoBookView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 initializeWithTake for LargeTwoBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LargeTwoBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeTwoBookView.ViewConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeTwoBookView.ViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargeTwoBookView.ViewConfiguration()
{
  return &type metadata for LargeTwoBookView.ViewConfiguration;
}

uint64_t sub_1000134F4()
{
  return sub_100013538(&qword_1000CCF40, &qword_1000CCE70, (void (*)(void))sub_1000135B4);
}

uint64_t sub_100013538(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000135B4()
{
  unint64_t result = qword_1000CCF48;
  if (!qword_1000CCF48)
  {
    sub_100008B14(&qword_1000CCE58);
    sub_10000B17C(&qword_1000CCF50, &qword_1000CCE50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCF48);
  }
  return result;
}

uint64_t *sub_100013658(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v16 = a3[11];
    *(_DWORD *)((char *)v4 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000137C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_100013894(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000139AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100013AEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  return a1;
}

void *sub_100013BF0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_release();
  uint64_t v14 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + v14) = *(_DWORD *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100013D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013D24);
}

uint64_t sub_100013D24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1000A4090();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100013E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013E48);
}

uint64_t sub_100013E48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000A38E0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1000A4090();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for TodayReadingGoalView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CCFB0);
}

uint64_t sub_100013F74()
{
  uint64_t result = sub_1000A38E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A4090();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100014080(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v31 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_100011214(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v13;
    uint64_t v14 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v14;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v15;
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    *(void *)(a1 + v16) = *(void *)(a2 + v16);
    uint64_t v19 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
    uint64_t v20 = v19[5];
    uint64_t v33 = v18 + v20;
    uint64_t v34 = v17 + v20;
    uint64_t v21 = sub_1000A38E0();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v34, v33, v21);
    *(void *)(v17 + v19[6]) = *(void *)(v18 + v19[6]);
    uint64_t v23 = v19[7];
    uint64_t v24 = v17 + v23;
    uint64_t v25 = v18 + v23;
    uint64_t v26 = sub_1000A4090();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    *(void *)(v17 + v19[8]) = *(void *)(v18 + v19[8]);
    *(void *)(v17 + v19[9]) = *(void *)(v18 + v19[9]);
    *(_DWORD *)(v17 + v19[10]) = *(_DWORD *)(v18 + v19[10]);
    uint64_t v27 = v19[11];
    uint64_t v28 = (void *)(v17 + v27);
    uint64_t v29 = (void *)(v18 + v27);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000142A0(uint64_t a1, uint64_t a2)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + *(int *)(v5 + 28);
  uint64_t v9 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000143B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  uint64_t v13 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v19 = v18[5];
  uint64_t v31 = v17 + v19;
  uint64_t v32 = v16 + v19;
  uint64_t v20 = sub_1000A38E0();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v32, v31, v20);
  *(void *)(v16 + v18[6]) = *(void *)(v17 + v18[6]);
  uint64_t v22 = v18[7];
  uint64_t v23 = v16 + v22;
  uint64_t v24 = v17 + v22;
  uint64_t v25 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  *(void *)(v16 + v18[8]) = *(void *)(v17 + v18[8]);
  *(void *)(v16 + v18[9]) = *(void *)(v17 + v18[9]);
  *(_DWORD *)(v16 + v18[10]) = *(_DWORD *)(v17 + v18[10]);
  uint64_t v26 = v18[11];
  uint64_t v27 = (void *)(v16 + v26);
  uint64_t v28 = (void *)(v17 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100014584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_10000A4F8(v11, v12, v13, v14, v15);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = v18 + v21;
  uint64_t v23 = v19 + v21;
  uint64_t v24 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(void *)(v18 + v20[6]) = *(void *)(v19 + v20[6]);
  uint64_t v25 = v20[7];
  uint64_t v26 = v18 + v25;
  uint64_t v27 = v19 + v25;
  uint64_t v28 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  *(void *)(v18 + v20[8]) = *(void *)(v19 + v20[8]);
  swift_retain();
  swift_release();
  *(void *)(v18 + v20[9]) = *(void *)(v19 + v20[9]);
  *(_DWORD *)(v18 + v20[10]) = *(_DWORD *)(v19 + v20[10]);
  uint64_t v29 = v20[11];
  uint64_t v30 = (void *)(v18 + v29);
  uint64_t v31 = (void *)(v19 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000147A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)(v6 + v8[6]) = *(void *)(v7 + v8[6]);
  uint64_t v13 = v8[7];
  uint64_t v14 = v6 + v13;
  uint64_t v15 = v7 + v13;
  uint64_t v16 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)(v6 + v8[8]) = *(void *)(v7 + v8[8]);
  *(void *)(v6 + v8[9]) = *(void *)(v7 + v8[9]);
  *(_DWORD *)(v6 + v8[10]) = *(_DWORD *)(v7 + v8[10]);
  *(_OWORD *)(v6 + v8[11]) = *(_OWORD *)(v7 + v8[11]);
  return a1;
}

uint64_t sub_1000148FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_10000A4F8(v7, v8, v9, v10, v11);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v15 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = v17 + v20;
  uint64_t v22 = v18 + v20;
  uint64_t v23 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *(void *)(v17 + v19[6]) = *(void *)(v18 + v19[6]);
  uint64_t v24 = v19[7];
  uint64_t v25 = v17 + v24;
  uint64_t v26 = v18 + v24;
  uint64_t v27 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  *(void *)(v17 + v19[8]) = *(void *)(v18 + v19[8]);
  swift_release();
  *(void *)(v17 + v19[9]) = *(void *)(v18 + v19[9]);
  *(_DWORD *)(v17 + v19[10]) = *(_DWORD *)(v18 + v19[10]);
  uint64_t v28 = v19[11];
  uint64_t v29 = (void *)(v17 + v28);
  uint64_t v30 = (uint64_t *)(v18 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100014AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100014AC4);
}

uint64_t sub_100014AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100014B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100014B88);
}

uint64_t sub_100014B88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TodayReadingGoalView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CD058);
}

uint64_t sub_100014C50()
{
  uint64_t result = type metadata accessor for TodayReadingGoalView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100014CF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100014D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1000A4070();
  a3[1] = v6;
  uint64_t v7 = sub_100004FDC(&qword_1000CD098);
  return sub_100014D64(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_100014D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = a3;
  uint64_t v5 = sub_100004FDC(&qword_1000CD0A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CD0A8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004FDC(&qword_1000CD0B0) - 8;
  __chkstk_darwin(v76);
  uint64_t v75 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100004FDC(&qword_1000CD0B8) - 8;
  __chkstk_darwin(v78);
  uint64_t v77 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100004FDC(&qword_1000CD0C0) - 8;
  uint64_t v14 = __chkstk_darwin(v82);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v81 = (uint64_t)&v74 - v17;
  uint64_t v18 = sub_100004FDC(&qword_1000CD0C8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v80 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v74 - v21;
  uint64_t v79 = (uint64_t)&v74 - v21;
  sub_1000A3920();
  sub_1000153A0((uint64_t)v22, v23, v24);
  *(void *)uint64_t v7 = sub_1000A3BA0();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v25 = sub_100004FDC(&qword_1000CD0D0);
  sub_100015AAC(a1, a2, (uint64_t)&v7[*(int *)(v25 + 44)]);
  LOBYTE(v22) = sub_1000A3D40();
  long long v26 = *(_OWORD *)(a1 + 16);
  v90[0] = *(_OWORD *)a1;
  v90[1] = v26;
  char v91 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v90, (uint64_t)v92, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v92, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v90, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v11, &qword_1000CD0A0);
  char v35 = &v11[*(int *)(v9 + 44)];
  *char v35 = (char)v22;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  unsigned char v35[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CD0A0);
  LOBYTE(v22) = sub_1000A3D60();
  long long v36 = *(_OWORD *)(a1 + 16);
  v88[0] = *(_OWORD *)a1;
  v88[1] = v36;
  char v89 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v88, (uint64_t)v93, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v93, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v88, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v75;
  sub_10000B1C0((uint64_t)v11, v75, &qword_1000CD0A8);
  uint64_t v46 = v45 + *(int *)(v76 + 44);
  *(unsigned char *)uint64_t v46 = (_BYTE)v22;
  *(void *)(v46 + 8) = v38;
  *(void *)(v46 + 16) = v40;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 40) = 0;
  sub_10000A9C0((uint64_t)v11, &qword_1000CD0A8);
  LOBYTE(v22) = sub_1000A3D20();
  long long v47 = *(_OWORD *)(a1 + 16);
  v86[0] = *(_OWORD *)a1;
  v86[1] = v47;
  char v87 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v86, (uint64_t)v94, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v94, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v86, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v56 = v77;
  sub_10000B1C0(v45, v77, &qword_1000CD0B0);
  uint64_t v57 = v56 + *(int *)(v78 + 44);
  *(unsigned char *)uint64_t v57 = (_BYTE)v22;
  *(void *)(v57 + 8) = v49;
  *(void *)(v57 + 16) = v51;
  *(void *)(v57 + 24) = v53;
  *(void *)(v57 + 32) = v55;
  *(unsigned char *)(v57 + 40) = 0;
  sub_10000A9C0(v45, &qword_1000CD0B0);
  LOBYTE(v22) = sub_1000A3D30();
  long long v58 = *(_OWORD *)(a1 + 16);
  v84[0] = *(_OWORD *)a1;
  v84[1] = v58;
  char v85 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v84, (uint64_t)v95, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v95, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v84, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  sub_10000B1C0(v56, (uint64_t)v16, &qword_1000CD0B8);
  uint64_t v67 = &v16[*(int *)(v82 + 44)];
  char *v67 = (char)v22;
  *((void *)v67 + 1) = v60;
  *((void *)v67 + 2) = v62;
  *((void *)v67 + 3) = v64;
  *((void *)v67 + 4) = v66;
  v67[40] = 0;
  sub_10000A9C0(v56, &qword_1000CD0B8);
  uint64_t v68 = v81;
  sub_10000A95C((uint64_t)v16, v81, &qword_1000CD0C0);
  uint64_t v70 = v79;
  uint64_t v69 = v80;
  sub_10000B1C0(v79, v80, &qword_1000CD0C8);
  sub_10000B1C0(v68, (uint64_t)v16, &qword_1000CD0C0);
  uint64_t v71 = v83;
  sub_10000B1C0(v69, v83, &qword_1000CD0C8);
  uint64_t v72 = sub_100004FDC(&qword_1000CD0D8);
  sub_10000B1C0((uint64_t)v16, v71 + *(int *)(v72 + 48), &qword_1000CD0C0);
  sub_10000A9C0(v68, &qword_1000CD0C0);
  sub_10000A9C0(v70, &qword_1000CD0C8);
  sub_10000A9C0((uint64_t)v16, &qword_1000CD0C0);
  return sub_10000A9C0(v69, &qword_1000CD0C8);
}

uint64_t sub_1000153A0@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4 = v3;
  uint64_t v86 = a1;
  uint64_t v7 = sub_1000A3490();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004FDC(&qword_1000CD1C0);
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100004FDC(&qword_1000CD0C8);
  __chkstk_darwin(v85);
  uint64_t v88 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *(_OWORD *)(v3 + 56);
  long long v14 = *(_OWORD *)(v3 + 88);
  v93[2] = *(_OWORD *)(v3 + 72);
  v93[3] = v14;
  v93[4] = *(_OWORD *)(v3 + 104);
  v93[0] = *(_OWORD *)(v3 + 40);
  v93[1] = v13;
  sub_10001308C((uint64_t)v93);
  sub_100031660((uint64_t)v9);
  sub_1000130D8((uint64_t)v93);
  double v89 = a2;
  double v90 = a3;
  sub_100004FDC(&qword_1000CD1C8);
  sub_100017528();
  uint64_t v83 = v11;
  sub_1000A3E10();
  uint64_t v82 = sub_100004FDC(&qword_1000CCF18);
  uint64_t inited = swift_initStackObject();
  long long v81 = xmmword_1000A8E90;
  *(_OWORD *)(inited + 16) = xmmword_1000A8E90;
  long long v16 = *(_OWORD *)(v3 + 104);
  long long v17 = *(_OWORD *)(v3 + 72);
  v92[3] = *(_OWORD *)(v3 + 88);
  v92[4] = v16;
  long long v18 = *(_OWORD *)(v3 + 40);
  v92[1] = *(_OWORD *)(v3 + 56);
  v92[2] = v17;
  v92[0] = v18;
  uint64_t v19 = sub_100035E04();
  uint64_t v21 = v20;
  *(void *)(inited + 32) = v19;
  *(void *)(inited + 40) = v20;
  sub_10001308C((uint64_t)v92);
  uint64_t v22 = sub_100031330();
  uint64_t v24 = v23;
  sub_1000130D8((uint64_t)v92);
  uint64_t v79 = (long long *)v22;
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = v24;
  if (sub_10007B3C0()) {
    uint64_t v25 = sub_10006E38C();
  }
  else {
    uint64_t v25 = sub_100035E34();
  }
  uint64_t v27 = v26;
  unint64_t v80 = v25;
  *(void *)(inited + 64) = v25;
  *(void *)(inited + 72) = v26;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v30 = *((void *)v28 + 2);
  unint64_t v29 = *((void *)v28 + 3);
  unint64_t v31 = v30 + 1;
  if (v30 >= v29 >> 1) {
    uint64_t v28 = sub_100058E74((char *)(v29 > 1), v30 + 1, 1, v28);
  }
  *((void *)v28 + 2) = v31;
  uint64_t v32 = &v28[16 * v30];
  *((void *)v32 + 4) = v19;
  *((void *)v32 + 5) = v21;
  if (v24)
  {
    unint64_t v33 = *((void *)v28 + 3);
    swift_bridgeObjectRetain();
    if (v31 >= v33 >> 1) {
      uint64_t v28 = sub_100058E74((char *)(v33 > 1), v30 + 2, 1, v28);
    }
    *((void *)v28 + 2) = v30 + 2;
    uint64_t v34 = &v28[16 * v31];
    *((void *)v34 + 4) = v79;
    *((void *)v34 + 5) = v24;
  }
  if (v27)
  {
    unint64_t v35 = *((void *)v28 + 2);
    unint64_t v36 = *((void *)v28 + 3);
    swift_bridgeObjectRetain();
    if (v35 >= v36 >> 1) {
      uint64_t v28 = sub_100058E74((char *)(v36 > 1), v35 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v35 + 1;
    uint64_t v37 = &v28[16 * v35];
    *((void *)v37 + 4) = v80;
    *((void *)v37 + 5) = v27;
  }
  uint64_t v79 = (long long *)(v4 + 40);
  swift_release();
  uint64_t v38 = *((void *)v28 + 2);
  if (v38)
  {
    uint64_t v39 = (uint64_t *)(v28 + 40);
    uint64_t v40 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v45 = *(v39 - 1);
      uint64_t v44 = *v39;
      uint64_t v46 = HIBYTE(*v39) & 0xF;
      if ((*v39 & 0x2000000000000000) == 0) {
        uint64_t v46 = v45 & 0xFFFFFFFFFFFFLL;
      }
      if (v46)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v91[0] = v40;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10007AB8C(0, v40[2] + 1, 1);
          uint64_t v40 = *(void **)&v91[0];
        }
        unint64_t v42 = v40[2];
        unint64_t v41 = v40[3];
        if (v42 >= v41 >> 1)
        {
          sub_10007AB8C(v41 > 1, v42 + 1, 1);
          uint64_t v40 = *(void **)&v91[0];
        }
        v40[2] = v42 + 1;
        uint64_t v43 = &v40[2 * v42];
        v43[4] = v45;
        v43[5] = v44;
      }
      v39 += 2;
      --v38;
    }
    while (v38);
  }
  else
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  *(void *)&v91[0] = v40;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v48 = sub_1000A4250();
  uint64_t v50 = v49;
  swift_release();
  *(void *)&v91[0] = v48;
  *((void *)&v91[0] + 1) = v50;
  sub_10000B17C(&qword_1000CD1D8, &qword_1000CD1C0);
  unint64_t v51 = sub_10000A504();
  uint64_t v52 = v87;
  unint64_t v80 = v51;
  uint64_t v53 = v83;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v52);
  uint64_t v54 = swift_initStackObject();
  *(_OWORD *)(v54 + 16) = v81;
  long long v55 = v79[4];
  long long v56 = v79[2];
  v91[3] = v79[3];
  v91[4] = v55;
  long long v57 = *v79;
  v91[1] = v79[1];
  v91[2] = v56;
  v91[0] = v57;
  uint64_t v58 = sub_100035E04();
  uint64_t v60 = v59;
  *(void *)(v54 + 32) = v58;
  *(void *)(v54 + 40) = v59;
  sub_10001308C((uint64_t)v91);
  uint64_t v61 = sub_100031330();
  uint64_t v63 = v62;
  sub_1000130D8((uint64_t)v91);
  *(void *)(v54 + 48) = v61;
  *(void *)(v54 + 56) = v63;
  if (sub_10007B3C0()) {
    uint64_t v64 = sub_10006E38C();
  }
  else {
    uint64_t v64 = sub_100035E34();
  }
  uint64_t v87 = v64;
  uint64_t v66 = v65;
  *(void *)(v54 + 64) = v64;
  *(void *)(v54 + 72) = v65;
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v69 = *((void *)v67 + 2);
  unint64_t v68 = *((void *)v67 + 3);
  unint64_t v70 = v69 + 1;
  if (v69 >= v68 >> 1) {
    uint64_t v67 = sub_100058E74((char *)(v68 > 1), v69 + 1, 1, v67);
  }
  *((void *)v67 + 2) = v70;
  uint64_t v71 = &v67[16 * v69];
  *((void *)v71 + 4) = v58;
  *((void *)v71 + 5) = v60;
  if (v63)
  {
    unint64_t v72 = *((void *)v67 + 3);
    swift_bridgeObjectRetain();
    if (v70 >= v72 >> 1) {
      uint64_t v67 = sub_100058E74((char *)(v72 > 1), v69 + 2, 1, v67);
    }
    *((void *)v67 + 2) = v69 + 2;
    uint64_t v73 = &v67[16 * v70];
    *((void *)v73 + 4) = v61;
    *((void *)v73 + 5) = v63;
  }
  if (v66)
  {
    unint64_t v74 = *((void *)v67 + 2);
    unint64_t v75 = *((void *)v67 + 3);
    swift_bridgeObjectRetain();
    if (v74 >= v75 >> 1) {
      uint64_t v67 = sub_100058E74((char *)(v75 > 1), v74 + 1, 1, v67);
    }
    *((void *)v67 + 2) = v74 + 1;
    uint64_t v76 = &v67[16 * v74];
    *((void *)v76 + 4) = v87;
    *((void *)v76 + 5) = v66;
  }
  swift_release();
  uint64_t v77 = (uint64_t)v88;
  sub_1000A39D0();
  swift_bridgeObjectRelease();
  return sub_10000A9C0(v77, &qword_1000CD0C8);
}

uint64_t sub_100015AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v94 = a3;
  uint64_t v89 = type metadata accessor for LabelView();
  __chkstk_darwin(v89);
  uint64_t v84 = (uint64_t *)((char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v91 = sub_100004FDC(&qword_1000CD0E0);
  __chkstk_darwin(v91);
  uint64_t v90 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CD0E8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v93 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v88 = (char *)&v81 - v10;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v81 - v11;
  uint64_t v12 = sub_100004FDC(&qword_1000CCAF8);
  __chkstk_darwin(v12 - 8);
  long long v14 = (uint64_t *)((char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000A3930();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  long long v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ReadingGoalView(0);
  uint64_t v20 = (int *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)((char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v82 = (char *)&v81 - v24;
  uint64_t v25 = sub_100004FDC(&qword_1000CD0F0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v87 = (uint64_t)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v30 = (char *)&v81 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v81 - v31;
  *(void *)unint64_t v30 = sub_1000A3B60();
  *((void *)v30 + 1) = 0;
  v30[16] = 1;
  uint64_t v33 = sub_100004FDC(&qword_1000CD0F8);
  sub_1000162FC(a1, (uint64_t)&v30[*(int *)(v33 + 44)]);
  uint64_t v86 = v32;
  sub_10000A95C((uint64_t)v30, (uint64_t)v32, &qword_1000CD0F0);
  uint64_t v35 = *(void *)(a1 + 72);
  uint64_t v34 = *(void *)(a1 + 80);
  uint64_t v85 = a1;
  uint64_t v36 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v83, v15);
  *long long v14 = swift_getKeyPath();
  uint64_t v83 = sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v23 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CC9C8);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (char *)v23 + v20[7];
  *(void *)uint64_t v37 = swift_getKeyPath();
  *((void *)v37 + 1) = 0;
  *((void *)v37 + 2) = 0;
  *((void *)v37 + 3) = 0;
  v37[32] = 0;
  sub_10000A95C((uint64_t)v14, (uint64_t)v23 + v20[8], &qword_1000CCAF8);
  uint64_t v38 = (uint64_t *)((char *)v23 + v20[9]);
  void *v38 = v35;
  v38[1] = v34;
  uint64_t v39 = (char *)v23 + v20[10];
  uint64_t v40 = enum case for Font.TextStyle.callout(_:);
  uint64_t v41 = sub_1000A3E00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  unint64_t v42 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  uint64_t v43 = &v39[v42[5]];
  uint64_t v44 = enum case for Font.Design.rounded(_:);
  uint64_t v45 = sub_1000A3D80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104))(v43, v44, v45);
  uint64_t v46 = v42[6];
  swift_bridgeObjectRetain();
  sub_1000A3DB0();
  *(void *)&v39[v46] = v47;
  *(void *)&v39[v42[7]] = 0x4010000000000000;
  *(void *)&v39[v42[8]] = 0xC03A000000000000;
  *(void *)&v39[v42[9]] = 0;
  uint64_t v48 = (uint64_t)v82;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))((char *)v23 + v20[11], v18, v36);
  uint64_t v49 = v48;
  sub_1000170E0((uint64_t)v23, v48, type metadata accessor for ReadingGoalView);
  if (sub_10007B3C0())
  {
    uint64_t v50 = v85;
    long long v51 = *(_OWORD *)(v85 + 56);
    long long v52 = *(_OWORD *)(v85 + 88);
    long long v97 = *(_OWORD *)(v85 + 72);
    long long v98 = v52;
    long long v99 = *(_OWORD *)(v85 + 104);
    long long v95 = *(_OWORD *)(v85 + 40);
    long long v96 = v51;
    uint64_t v53 = sub_10006E38C();
    uint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = sub_100035E34();
    uint64_t v55 = v56;
    uint64_t v50 = v85;
  }
  long long v57 = (uint64_t *)(v50 + *(int *)(type metadata accessor for TodayReadingGoalView(0) + 24));
  uint64_t v58 = *(uint64_t *)((char *)v57 + *(int *)(type metadata accessor for TodayReadingGoalView.ViewConfiguration(0) + 32));
  swift_retain();
  unsigned int v59 = sub_1000A3C30();
  uint64_t v60 = *v57;
  uint64_t v61 = v59;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v63 = (uint64_t)v84;
  *uint64_t v84 = KeyPath;
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = v89;
  uint64_t v65 = (uint64_t *)(v63 + *(int *)(v89 + 20));
  *uint64_t v65 = v53;
  v65[1] = v55;
  *(void *)(v63 + *(int *)(v64 + 24)) = v58;
  uint64_t v66 = v63 + *(int *)(v64 + 28);
  *(void *)uint64_t v66 = v61;
  *(void *)(v66 + 8) = v60;
  *(_WORD *)(v66 + 16) = 0;
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = v90;
  sub_10001719C(v63, v90, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v69 = v68 + *(int *)(v91 + 36);
  *(void *)uint64_t v69 = v67;
  *(unsigned char *)(v69 + 8) = 1;
  sub_1000172FC(v63, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_100017204();
  uint64_t v70 = (uint64_t)v88;
  sub_1000A3F10();
  sub_10000A9C0(v68, &qword_1000CD0E0);
  uint64_t v71 = v92;
  sub_10000A95C(v70, v92, &qword_1000CD0E8);
  uint64_t v72 = (uint64_t)v86;
  uint64_t v73 = v87;
  sub_10000B1C0((uint64_t)v86, v87, &qword_1000CD0F0);
  uint64_t v74 = v49;
  sub_10001719C(v49, (uint64_t)v23, type metadata accessor for ReadingGoalView);
  uint64_t v75 = v93;
  sub_10000B1C0(v71, v93, &qword_1000CD0E8);
  uint64_t v76 = v94;
  sub_10000B1C0(v73, v94, &qword_1000CD0F0);
  uint64_t v77 = (int *)sub_100004FDC(&qword_1000CD118);
  uint64_t v78 = v76 + v77[12];
  *(void *)uint64_t v78 = 0;
  *(unsigned char *)(v78 + 8) = 1;
  sub_10001719C((uint64_t)v23, v76 + v77[16], type metadata accessor for ReadingGoalView);
  uint64_t v79 = v76 + v77[20];
  *(void *)uint64_t v79 = 0;
  *(unsigned char *)(v79 + 8) = 1;
  sub_10000B1C0(v75, v76 + v77[24], &qword_1000CD0E8);
  sub_10000A9C0(v71, &qword_1000CD0E8);
  sub_1000172FC(v74, type metadata accessor for ReadingGoalView);
  sub_10000A9C0(v72, &qword_1000CD0F0);
  sub_10000A9C0(v75, &qword_1000CD0E8);
  sub_1000172FC((uint64_t)v23, type metadata accessor for ReadingGoalView);
  return sub_10000A9C0(v73, &qword_1000CD0F0);
}

uint64_t sub_1000162FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_1000A3C90();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CD120);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000CD128);
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CD130);
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  __chkstk_darwin(v12);
  unint64_t v42 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FDC(&qword_1000CD138);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v18 = (char *)&v41 - v17;
  uint64_t v19 = sub_100004FDC(&qword_1000CD140);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v41 - v23;
  long long v25 = *(_OWORD *)(a1 + 56);
  long long v26 = *(_OWORD *)(a1 + 88);
  _OWORD v53[2] = *(_OWORD *)(a1 + 72);
  v53[3] = v26;
  v53[4] = *(_OWORD *)(a1 + 104);
  v53[0] = *(_OWORD *)(a1 + 40);
  v53[1] = v25;
  uint64_t v51 = sub_10006EEE0();
  uint64_t v52 = v27;
  sub_10001735C();
  sub_1000A3F10();
  swift_bridgeObjectRelease();
  sub_10001308C((uint64_t)v53);
  uint64_t v28 = sub_100031330();
  uint64_t v30 = v29;
  sub_1000130D8((uint64_t)v53);
  if (v30)
  {
    *(void *)uint64_t v8 = sub_1000A3B60();
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v31 = sub_100004FDC(&qword_1000CD158);
    sub_100016850(a1, v28, v30, (uint64_t)&v8[*(int *)(v31 + 44)]);
    swift_bridgeObjectRelease();
    sub_1000A3C60();
    uint64_t v32 = sub_10000B17C(&qword_1000CD160, &qword_1000CD120);
    sub_1000A3F30();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v46);
    sub_10000A9C0((uint64_t)v8, &qword_1000CD120);
    uint64_t v51 = v6;
    uint64_t v52 = v32;
    swift_getOpaqueTypeConformance2();
    uint64_t v33 = (uint64_t)v42;
    uint64_t v34 = v44;
    sub_1000A3F10();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v34);
    sub_10000A95C(v33, (uint64_t)v18, &qword_1000CD130);
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v18, v35, 1, v49);
  sub_10000B1C0((uint64_t)v24, (uint64_t)v22, &qword_1000CD140);
  uint64_t v36 = v47;
  sub_10000B1C0((uint64_t)v18, v47, &qword_1000CD138);
  uint64_t v37 = v50;
  sub_10000B1C0((uint64_t)v22, v50, &qword_1000CD140);
  uint64_t v38 = sub_100004FDC(&qword_1000CD150);
  uint64_t v39 = v37 + *(int *)(v38 + 48);
  *(void *)uint64_t v39 = 0;
  *(unsigned char *)(v39 + 8) = 1;
  sub_10000B1C0(v36, v37 + *(int *)(v38 + 64), &qword_1000CD138);
  sub_10000A9C0((uint64_t)v18, &qword_1000CD138);
  sub_10000A9C0((uint64_t)v24, &qword_1000CD140);
  sub_10000A9C0(v36, &qword_1000CD138);
  return sub_10000A9C0((uint64_t)v22, &qword_1000CD140);
}

uint64_t sub_100016850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v54 = type metadata accessor for LabelView() - 8;
  uint64_t v5 = __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v53 = (uint64_t *)((char *)&v52 - v7);
  uint64_t v8 = sub_100004FDC(&qword_1000CD168);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CD170);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v60 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v59 = (uint64_t)&v52 - v16;
  uint64_t v17 = a1 + *(int *)(type metadata accessor for TodayReadingGoalView(0) + 24);
  long long v18 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1000A3FB0();
  uint64_t v52 = v18[8];
  uint64_t v20 = sub_1000A3DD0();
  uint64_t KeyPath = swift_getKeyPath();
  int v22 = *(_DWORD *)(v17 + v18[10]);
  uint64_t v61 = v19;
  uint64_t v62 = KeyPath;
  uint64_t v63 = v20;
  int v64 = v22;
  sub_100004FDC(&qword_1000CD178);
  sub_1000173B8();
  sub_1000A3E70();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = v17 + v18[7];
  uint64_t v24 = &v11[*(int *)(v9 + 44)];
  uint64_t v25 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v23, v25);
  uint64_t v26 = v17 + v18[5];
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = v59;
  uint64_t v29 = (uint64_t *)(v59 + *(int *)(v13 + 44));
  uint64_t v30 = (char *)v29 + *(int *)(sub_100004FDC(&qword_1000CCAC0) + 28);
  uint64_t v31 = sub_1000A38E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v26, v31);
  *uint64_t v29 = v27;
  uint64_t v32 = v28;
  sub_10000A95C((uint64_t)v11, v28, &qword_1000CD168);
  uint64_t v33 = *(void *)(v17 + v52);
  uint64_t v34 = sub_1000A3E40();
  uint64_t v36 = v35;
  uint64_t v52 = v37;
  LOBYTE(v17) = v38 & 1;
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = (uint64_t)v53;
  *uint64_t v53 = v39;
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v54;
  unint64_t v42 = (void *)(v40 + *(int *)(v54 + 28));
  uint64_t v43 = v57;
  *unint64_t v42 = v56;
  v42[1] = v43;
  *(void *)(v40 + *(int *)(v41 + 32)) = v33;
  uint64_t v44 = v40 + *(int *)(v41 + 36);
  *(void *)uint64_t v44 = 0;
  *(void *)(v44 + 8) = 0;
  *(_WORD *)(v44 + 16) = 256;
  uint64_t v45 = v60;
  sub_10000B1C0(v32, v60, &qword_1000CD170);
  uint64_t v46 = v55;
  sub_10001719C(v40, v55, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v47 = v45;
  uint64_t v48 = v58;
  sub_10000B1C0(v47, v58, &qword_1000CD170);
  uint64_t v49 = sub_100004FDC(&qword_1000CD1B8);
  uint64_t v50 = v48 + *(int *)(v49 + 48);
  *(void *)uint64_t v50 = v34;
  *(void *)(v50 + 8) = v36;
  *(unsigned char *)(v50 + 16) = v17;
  *(void *)(v50 + 24) = v52;
  sub_10001719C(v46, v48 + *(int *)(v49 + 64), (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_100017500(v34, v36, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000172FC(v40, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_10000A9C0(v59, &qword_1000CD170);
  sub_1000172FC(v46, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_100017510(v34, v36, v17);
  swift_bridgeObjectRelease();
  return sub_10000A9C0(v60, &qword_1000CD170);
}

double sub_100016D18@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000A3F60();
  sub_1000A4070();
  sub_1000A3910();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(a1 + 40) = v8;
  return result;
}

uint64_t sub_100016DB4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10001719C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TodayReadingGoalView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_1000170E0((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for TodayReadingGoalView);
  *a2 = sub_10001704C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v7;
  return result;
}

uint64_t sub_100016EC8()
{
  unint64_t v1 = (int *)(type metadata accessor for TodayReadingGoalView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  sub_10000A4F8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + v3 + 24), *(unsigned char *)(v0 + v3 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v9 = v7 + *(int *)(v8 + 20);
  uint64_t v10 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + *(int *)(v8 + 28);
  uint64_t v12 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10001704C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TodayReadingGoalView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100014D0C(a1, v6, a2);
}

uint64_t sub_1000170E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100017148@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000A3AA0();
  *a1 = result;
  return result;
}

uint64_t sub_100017174()
{
  return sub_1000A3AB0();
}

uint64_t sub_10001719C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100017204()
{
  unint64_t result = qword_1000CD100;
  if (!qword_1000CD100)
  {
    sub_100008B14(&qword_1000CD0E0);
    sub_1000172A4();
    sub_10000B17C(&qword_1000CD108, &qword_1000CD110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD100);
  }
  return result;
}

unint64_t sub_1000172A4()
{
  unint64_t result = qword_1000CCF10;
  if (!qword_1000CCF10)
  {
    type metadata accessor for LabelView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCF10);
  }
  return result;
}

uint64_t sub_1000172FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10001735C()
{
  unint64_t result = qword_1000CD148;
  if (!qword_1000CD148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD148);
  }
  return result;
}

unint64_t sub_1000173B8()
{
  unint64_t result = qword_1000CD180;
  if (!qword_1000CD180)
  {
    sub_100008B14(&qword_1000CD178);
    sub_100017458();
    sub_10000B17C(&qword_1000CD1A8, &qword_1000CD1B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD180);
  }
  return result;
}

unint64_t sub_100017458()
{
  unint64_t result = qword_1000CD188;
  if (!qword_1000CD188)
  {
    sub_100008B14(&qword_1000CD190);
    sub_10000B17C(&qword_1000CD198, &qword_1000CD1A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD188);
  }
  return result;
}

uint64_t sub_100017500(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100017510(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

double sub_100017520@<D0>(uint64_t a1@<X8>)
{
  return sub_100016D18(a1);
}

unint64_t sub_100017528()
{
  unint64_t result = qword_1000CD1D0;
  if (!qword_1000CD1D0)
  {
    sub_100008B14(&qword_1000CD1C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD1D0);
  }
  return result;
}

uint64_t sub_10001759C()
{
  return sub_10000B17C(&qword_1000CD1E0, &qword_1000CD1E8);
}

uint64_t destroy for LargeThreeBookView(uint64_t a1)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LargeThreeBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LargeThreeBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_10000A4F8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

uint64_t assignWithTake for LargeThreeBookView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v4;
  sub_10000A4F8(v5, v6, v7, v8, v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

ValueMetadata *type metadata accessor for LargeThreeBookView()
{
  return &type metadata for LargeThreeBookView;
}

uint64_t sub_100017928()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100017944@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CD208);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v61[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100004FDC(&qword_1000CD210);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v68 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v73 = &v61[-v11];
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v13 = sub_10007363C(v10);
  uint64_t v69 = v14;
  uint64_t v70 = v13;
  sub_1000A3BA0();
  sub_1000A3B50();
  sub_1000A3910();
  unsigned __int8 v15 = v77;
  uint64_t v71 = v78;
  uint64_t v72 = v76;
  unsigned __int8 v16 = v79;
  uint64_t v66 = v81;
  uint64_t v67 = v80;
  int v75 = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v65 = v17;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  int v74 = sub_1000A3D30();
  long long v24 = *(_OWORD *)(a1 + 16);
  v82[0] = *(_OWORD *)a1;
  v82[1] = v24;
  char v83 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v82, (uint64_t)v84, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v84, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v82, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  unsigned __int8 v89 = v15;
  unsigned __int8 v88 = v16;
  char v87 = 0;
  unsigned __int8 v86 = 0;
  uint64_t v33 = sub_1000A3B40();
  sub_100012D8C((uint64_t)v84, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  uint64_t v35 = v34;
  sub_100012D8C((uint64_t)v82, (void (*)(void, void, void, void, void))sub_10000A4F8);
  *(void *)uint64_t v6 = v33;
  *((void *)v6 + 1) = v35;
  v6[16] = 0;
  sub_100004FDC(&qword_1000CD218);
  uint64_t v85 = v12;
  v99[0] = v12;
  swift_getKeyPath();
  uint64_t v36 = swift_allocObject();
  long long v37 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v36 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v36 + 160) = v37;
  *(void *)(v36 + 176) = *(void *)(a1 + 160);
  long long v38 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v36 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v36 + 96) = v38;
  long long v39 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v36 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v36 + 128) = v39;
  long long v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v36 + 32) = v40;
  long long v41 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v36 + 64) = v41;
  sub_100012E34((uint64_t)&v85);
  sub_100018F5C(a1);
  sub_100004FDC(&qword_1000CCE90);
  sub_100004FDC(&qword_1000CD220);
  sub_10000B17C(&qword_1000CCEA0, &qword_1000CCE90);
  sub_100018FD4();
  sub_1000A4050();
  uint64_t v42 = sub_1000A4070();
  uint64_t v43 = v68;
  sub_100030C7C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v68, 0.0, 1, 0.0, 1, v42, v44);
  sub_10000A9C0((uint64_t)v6, &qword_1000CD208);
  uint64_t v45 = v73;
  sub_10000A95C((uint64_t)v43, (uint64_t)v73, &qword_1000CD210);
  LOBYTE(v12) = v89;
  LOBYTE(a1) = v88;
  int v64 = v88;
  LOBYTE(v6) = v87;
  unsigned __int8 v46 = v86;
  int v62 = v89;
  int v63 = v86;
  sub_10000B1C0((uint64_t)v45, (uint64_t)v43, &qword_1000CD210);
  uint64_t v47 = v69;
  uint64_t v48 = v70;
  *(void *)&long long v90 = v70;
  *((void *)&v90 + 1) = v69;
  *(void *)&long long v91 = v72;
  BYTE8(v91) = v12;
  *(void *)&long long v92 = v71;
  BYTE8(v92) = a1;
  uint64_t v50 = v66;
  uint64_t v49 = v67;
  *(void *)&long long v93 = v67;
  *((void *)&v93 + 1) = v66;
  LOBYTE(v94) = v75;
  uint64_t v51 = v65;
  *((void *)&v94 + 1) = v65;
  *(void *)&long long v95 = v19;
  *((void *)&v95 + 1) = v21;
  *(void *)&long long v96 = v23;
  BYTE8(v96) = (_BYTE)v6;
  LOBYTE(v97) = v74;
  *((void *)&v97 + 1) = v26;
  *(void *)&v98[0] = v28;
  *((void *)&v98[0] + 1) = v30;
  *(void *)&v98[1] = v32;
  BYTE8(v98[1]) = v46;
  long long v52 = v98[0];
  long long v53 = v96;
  a2[7] = v97;
  a2[8] = v52;
  long long v54 = v91;
  *a2 = v90;
  a2[1] = v54;
  long long v55 = v92;
  long long v56 = v93;
  long long v57 = v94;
  a2[5] = v95;
  a2[6] = v53;
  a2[3] = v56;
  a2[4] = v57;
  a2[2] = v55;
  *(_OWORD *)((char *)a2 + 137) = *(_OWORD *)((char *)v98 + 9);
  uint64_t v58 = sub_100004FDC(&qword_1000CD240);
  sub_10000B1C0((uint64_t)v43, (uint64_t)a2 + *(int *)(v58 + 48), &qword_1000CD210);
  uint64_t v59 = (char *)a2 + *(int *)(v58 + 64);
  *(void *)uint64_t v59 = 0;
  v59[8] = 0;
  sub_1000190E0((uint64_t)&v90);
  sub_10000A9C0((uint64_t)v73, &qword_1000CD210);
  sub_10000A9C0((uint64_t)v43, &qword_1000CD210);
  v99[0] = v48;
  v99[1] = v47;
  v99[2] = v72;
  char v100 = v62;
  uint64_t v101 = v71;
  char v102 = v64;
  uint64_t v103 = v49;
  uint64_t v104 = v50;
  char v105 = v75;
  uint64_t v106 = v51;
  uint64_t v107 = v19;
  uint64_t v108 = v21;
  uint64_t v109 = v23;
  char v110 = (char)v6;
  char v111 = v74;
  uint64_t v112 = v26;
  uint64_t v113 = v28;
  uint64_t v114 = v30;
  uint64_t v115 = v32;
  char v116 = v63;
  return sub_10001910C((uint64_t)v99);
}

uint64_t sub_100017F04@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v27 = sub_1000A3C90();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CD230);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004FDC(&qword_1000CD248);
  uint64_t v11 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FDC(&qword_1000CD220);
  __chkstk_darwin(v14 - 8);
  unsigned __int8 v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = a1[3];
  long long v36 = a1[2];
  long long v37 = v17;
  long long v38 = a1[4];
  char v39 = *((unsigned char *)a1 + 80);
  long long v18 = a1[1];
  long long v34 = *a1;
  long long v35 = v18;
  *(void *)uint64_t v10 = sub_1000A3BA0();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v19 = sub_100004FDC(&qword_1000CD250);
  sub_1000182C8(a2, (uint64_t)&v34, (uint64_t)&v10[*(int *)(v19 + 44)]);
  long long v42 = v36;
  long long v43 = v37;
  long long v44 = v38;
  char v45 = v39;
  long long v40 = v34;
  long long v41 = v35;
  if (sub_10001A23C()) {
    sub_1000A3C80();
  }
  else {
    sub_1000A3C70();
  }
  uint64_t v20 = sub_10000B17C(&qword_1000CD238, &qword_1000CD230);
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v27);
  sub_10000A9C0((uint64_t)v10, &qword_1000CD230);
  if (sub_10001A23C())
  {
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  else
  {
    uint64_t v21 = sub_10006D98C(1);
    unint64_t v22 = v23;
  }
  uint64_t v32 = v21;
  unint64_t v33 = v22;
  uint64_t v30 = v8;
  uint64_t v31 = v20;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  uint64_t v24 = v28;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  return sub_10000A95C((uint64_t)v16, v29, &qword_1000CD220);
}

uint64_t sub_1000182C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v86 = a3;
  uint64_t v5 = sub_100004FDC(&qword_1000CD258);
  uint64_t v83 = *(void *)(v5 - 8);
  uint64_t v84 = v5;
  __chkstk_darwin(v5);
  unsigned __int8 v88 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CD260);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v85 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v77 - v11;
  __chkstk_darwin(v10);
  uint64_t v82 = (uint64_t)&v77 - v12;
  uint64_t v13 = sub_1000A3490();
  uint64_t v77 = *(void *)(v13 - 8);
  uint64_t v78 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v79 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v17 = (char *)&v77 - v16;
  long long v18 = (int *)type metadata accessor for BookCoverView();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v77 - v22;
  uint64_t v24 = sub_100004FDC(&qword_1000CD268);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v80 = (uint64_t)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v77 - v28;
  __chkstk_darwin(v27);
  uint64_t v87 = (uint64_t)&v77 - v30;
  long long v31 = *(_OWORD *)(a1 + 56);
  long long v32 = *(_OWORD *)(a1 + 88);
  v97[2] = *(_OWORD *)(a1 + 72);
  v97[3] = v32;
  long long v98 = *(_OWORD *)(a1 + 104);
  v97[0] = *(_OWORD *)(a1 + 40);
  v97[1] = v31;
  sub_10001308C((uint64_t)v97);
  sub_1000085CC(a2, (uint64_t)v17);
  sub_1000130D8((uint64_t)v97);
  long long v33 = *(_OWORD *)(a2 + 48);
  long long v93 = *(_OWORD *)(a2 + 32);
  long long v94 = v33;
  long long v95 = *(_OWORD *)(a2 + 64);
  char v96 = *(unsigned char *)(a2 + 80);
  long long v34 = *(_OWORD *)(a2 + 16);
  long long v91 = *(_OWORD *)a2;
  long long v92 = v34;
  char v35 = sub_10001A23C();
  if (*((void *)&v98 + 1))
  {
    if (v98 == v93) {
      char v36 = 1;
    }
    else {
      char v36 = sub_1000A46A0();
    }
  }
  else
  {
    char v36 = 0;
  }
  *uint64_t v21 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))((char *)v21 + v18[5], v17, v78);
  *((unsigned char *)v21 + v18[6]) = v35 & 1;
  long long v37 = (char *)v21 + v18[7];
  long long v38 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v37 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v37 + 3) = v38;
  *((_OWORD *)v37 + 4) = *(_OWORD *)(a2 + 64);
  v37[80] = *(unsigned char *)(a2 + 80);
  long long v39 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)long long v37 = *(_OWORD *)a2;
  *((_OWORD *)v37 + 1) = v39;
  *((unsigned char *)v21 + v18[8]) = v36 & 1;
  *((unsigned char *)v21 + v18[9]) = 0;
  sub_10001312C((uint64_t)v21, (uint64_t)v23);
  sub_100013190(a2);
  uint64_t v40 = sub_1000A4070();
  sub_100030CEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v29, 0.0, 1, 0.0, 1, v40, v41);
  sub_100019258((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  sub_10000A95C((uint64_t)v29, v87, &qword_1000CD268);
  sub_10001308C((uint64_t)v97);
  sub_1000085CC(a2, v79);
  uint64_t v42 = sub_1000130D8((uint64_t)v97);
  __chkstk_darwin(v42);
  sub_100004FDC(&qword_1000CD270);
  sub_100019148();
  sub_1000A3E10();
  sub_100004FDC(&qword_1000CCF18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A8D50;
  long long v44 = v91;
  *(_OWORD *)(inited + 32) = v91;
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_10006DB70(0);
  uint64_t v47 = v45;
  *(void *)(inited + 48) = v46;
  *(void *)(inited + 56) = v45;
  if (!*((void *)&v44 + 1))
  {
    uint64_t v48 = (char *)_swiftEmptyArrayStorage;
    if (!v45) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v50 = *((void *)v48 + 2);
  unint64_t v49 = *((void *)v48 + 3);
  if (v50 >= v49 >> 1) {
    uint64_t v48 = sub_100058E74((char *)(v49 > 1), v50 + 1, 1, v48);
  }
  *((void *)v48 + 2) = v50 + 1;
  *(_OWORD *)&v48[16 * v50 + 32] = v44;
  if (v47)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v48 = sub_100058E74(0, *((void *)v48 + 2) + 1, 1, v48);
    }
    unint64_t v52 = *((void *)v48 + 2);
    unint64_t v51 = *((void *)v48 + 3);
    if (v52 >= v51 >> 1) {
      uint64_t v48 = sub_100058E74((char *)(v51 > 1), v52 + 1, 1, v48);
    }
    *((void *)v48 + 2) = v52 + 1;
    long long v53 = &v48[16 * v52];
    *((void *)v53 + 4) = v46;
    *((void *)v53 + 5) = v47;
  }
LABEL_17:
  swift_release();
  uint64_t v54 = *((void *)v48 + 2);
  if (v54)
  {
    long long v55 = (uint64_t *)(v48 + 40);
    long long v56 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v61 = *(v55 - 1);
      uint64_t v60 = *v55;
      uint64_t v62 = HIBYTE(*v55) & 0xF;
      if ((*v55 & 0x2000000000000000) == 0) {
        uint64_t v62 = v61 & 0xFFFFFFFFFFFFLL;
      }
      if (v62)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unsigned __int8 v89 = v56;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10007AB8C(0, v56[2] + 1, 1);
          long long v56 = v89;
        }
        unint64_t v58 = v56[2];
        unint64_t v57 = v56[3];
        if (v58 >= v57 >> 1)
        {
          sub_10007AB8C(v57 > 1, v58 + 1, 1);
          long long v56 = v89;
        }
        v56[2] = v58 + 1;
        uint64_t v59 = &v56[2 * v58];
        v59[4] = v61;
        v59[5] = v60;
      }
      v55 += 2;
      --v54;
    }
    while (v54);
  }
  else
  {
    long long v56 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v89 = v56;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v64 = sub_1000A4250();
  uint64_t v66 = v65;
  swift_release();
  unsigned __int8 v89 = (void *)v64;
  uint64_t v90 = v66;
  sub_10000B17C(&qword_1000CD280, &qword_1000CD258);
  sub_10000A504();
  uint64_t v67 = (uint64_t)v81;
  uint64_t v68 = v84;
  uint64_t v69 = v88;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v69, v68);
  uint64_t v70 = v82;
  sub_10000A95C(v67, v82, &qword_1000CD260);
  uint64_t v71 = v87;
  uint64_t v72 = v80;
  sub_10000B1C0(v87, v80, &qword_1000CD268);
  uint64_t v73 = v85;
  sub_10000B1C0(v70, v85, &qword_1000CD260);
  uint64_t v74 = v86;
  sub_10000B1C0(v72, v86, &qword_1000CD268);
  uint64_t v75 = sub_100004FDC(&qword_1000CD288);
  sub_10000B1C0(v73, v74 + *(int *)(v75 + 48), &qword_1000CD260);
  sub_10000A9C0(v70, &qword_1000CD260);
  sub_10000A9C0(v71, &qword_1000CD268);
  sub_10000A9C0(v73, &qword_1000CD260);
  return sub_10000A9C0(v72, &qword_1000CD268);
}

uint64_t sub_100018BB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LabelView();
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10006DB70(1);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 136);
  swift_retain();
  uint64_t v13 = sub_1000A3C30();
  *uint64_t v7 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (uint64_t *)((char *)v7 + v5[7]);
  *uint64_t v14 = v8;
  v14[1] = v10;
  *(uint64_t *)((char *)v7 + v5[8]) = v12;
  uint64_t v15 = (char *)v7 + v5[9];
  *(void *)uint64_t v15 = v13;
  *((void *)v15 + 1) = v11;
  *((_WORD *)v15 + 8) = 0;
  sub_1000A3BA0();
  sub_1000A3B50();
  sub_1000A3910();
  sub_1000191F4((uint64_t)v7, a2);
  uint64_t v16 = (_OWORD *)(a2 + *(int *)(sub_100004FDC(&qword_1000CD270) + 36));
  long long v17 = v19[1];
  _OWORD *v16 = v19[0];
  v16[1] = v17;
  v16[2] = v19[2];
  return sub_100019258((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LabelView);
}

uint64_t sub_100018D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004FDC(&qword_1000CD1F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v1[9];
  long long v32 = v1[8];
  long long v33 = v6;
  uint64_t v34 = *((void *)v1 + 20);
  long long v7 = v1[5];
  long long v28 = v1[4];
  long long v29 = v7;
  long long v8 = v1[7];
  long long v30 = v1[6];
  long long v31 = v8;
  long long v9 = v1[1];
  long long v24 = *v1;
  long long v25 = v9;
  long long v10 = v1[3];
  long long v26 = v1[2];
  long long v27 = v10;
  *(void *)uint64_t v5 = sub_1000A3BB0();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v11 = sub_100004FDC(&qword_1000CD1F8);
  sub_100017944((uint64_t)&v24, &v5[*(int *)(v11 + 44)]);
  v35[0] = v24;
  v35[1] = v25;
  char v36 = v26;
  v22[0] = v24;
  v22[1] = v25;
  char v23 = v26;
  sub_10000A95C((uint64_t)v35, (uint64_t)v37, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v37, (void (*)(void, void, void, void, void))sub_100011214);
  double v12 = sub_100009B60();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  sub_100012D8C((uint64_t)v35, (void (*)(void, void, void, void, void))sub_10000A4F8);
  char v19 = sub_1000A3D10();
  sub_10000B1C0((uint64_t)v5, a1, &qword_1000CD1F0);
  uint64_t v20 = a1 + *(int *)(sub_100004FDC(&qword_1000CD200) + 36);
  *(unsigned char *)uint64_t v20 = v19;
  *(double *)(v20 + 8) = v12;
  *(void *)(v20 + 16) = v14;
  *(void *)(v20 + 24) = v16;
  *(void *)(v20 + 32) = v18;
  *(unsigned char *)(v20 + 40) = 0;
  return sub_10000A9C0((uint64_t)v5, &qword_1000CD1F0);
}

uint64_t sub_100018EF4()
{
  sub_10000A4F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_100018F54@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100017F04(a1, v2 + 16, a2);
}

uint64_t sub_100018F5C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100018FD4()
{
  unint64_t result = qword_1000CD228;
  if (!qword_1000CD228)
  {
    sub_100008B14(&qword_1000CD220);
    sub_100008B14(&qword_1000CD230);
    sub_10000B17C(&qword_1000CD238, &qword_1000CD230);
    swift_getOpaqueTypeConformance2();
    sub_1000132B8((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD228);
  }
  return result;
}

uint64_t sub_1000190E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001910C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100019140@<X0>(uint64_t a1@<X8>)
{
  return sub_100018BB8(*(void *)(v1 + 24), a1);
}

unint64_t sub_100019148()
{
  unint64_t result = qword_1000CD278;
  if (!qword_1000CD278)
  {
    sub_100008B14(&qword_1000CD270);
    sub_1000132B8((unint64_t *)&qword_1000CCF10, (void (*)(uint64_t))type metadata accessor for LabelView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD278);
  }
  return result;
}

uint64_t sub_1000191F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LabelView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100019258(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for LargeThreeBookView.ViewConfiguration()
{
  return swift_release();
}

uint64_t initializeWithCopy for LargeThreeBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

void *assignWithCopy for LargeThreeBookView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for LargeThreeBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeThreeBookView.ViewConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeThreeBookView.ViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargeThreeBookView.ViewConfiguration()
{
  return &type metadata for LargeThreeBookView.ViewConfiguration;
}

unint64_t sub_100019470()
{
  unint64_t result = qword_1000CD290;
  if (!qword_1000CD290)
  {
    sub_100008B14(&qword_1000CD200);
    sub_10000B17C(&qword_1000CD298, &qword_1000CD1F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD290);
  }
  return result;
}

ValueMetadata *_s11BooksWidgetOMa()
{
  return &_s11BooksWidgetON;
}

uint64_t getEnumTagSinglePayload for FeatureFlags.BooksWidget(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlags.BooksWidget(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100019610);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100019638()
{
  return 0;
}

ValueMetadata *type metadata accessor for FeatureFlags.BooksWidget()
{
  return &type metadata for FeatureFlags.BooksWidget;
}

uint64_t sub_100019650()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CCC28);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unsigned int v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  long long v6 = (char *)&v10 - v5;
  sub_100019A24();
  sub_1000A3700();
  sub_1000A3700();
  sub_100019C18(&qword_1000CD2B0);
  char v7 = sub_1000A4270();
  long long v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

Swift::Int sub_1000197DC()
{
  return sub_1000A4780();
}

void sub_100019820()
{
}

Swift::Int sub_100019848()
{
  return sub_1000A4780();
}

BOOL sub_100019888@<W0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100019A78(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000198B4()
{
  sub_100019A24();

  return sub_1000A3700();
}

uint64_t sub_100019908(uint64_t a1, uint64_t a2)
{
  return sub_100019938(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))&RawRepresentable<>.domain.getter);
}

uint64_t sub_100019920(uint64_t a1, uint64_t a2)
{
  return sub_100019938(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))&RawRepresentable<>.feature.getter);
}

uint64_t sub_100019938(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  unint64_t v4 = sub_10000E524();
  uint64_t v5 = sub_100019C18(&qword_1000CCC20);

  return a3(a1, v4, v5);
}

unint64_t sub_1000199BC()
{
  unint64_t result = qword_1000CD2A0;
  if (!qword_1000CD2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2A0);
  }
  return result;
}

const char *sub_100019A10()
{
  return "BooksWidget";
}

unint64_t sub_100019A24()
{
  unint64_t result = qword_1000CD2A8;
  if (!qword_1000CD2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2A8);
  }
  return result;
}

BOOL sub_100019A78(char *a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCC28);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v8 = (char *)&v12 - v7;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)&v12 - v7, a1, v2);
  sub_100019A24();
  sub_1000A3700();
  sub_100019C18(&qword_1000CD2B0);
  char v9 = sub_1000A4270();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(a1, v2);
  v10(v6, v2);
  v10(v8, v2);
  return (v9 & 1) == 0;
}

uint64_t sub_100019C18(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(&qword_1000CCC28);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t WidgetBookInfo.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetBookInfo.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetBookInfo.title.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t WidgetBookInfo.progress.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t WidgetBookInfo.progress.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*WidgetBookInfo.progress.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t WidgetBookInfo.assetID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetBookInfo.assetID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*WidgetBookInfo.assetID.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

void *WidgetBookInfo.cloudAssetType.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void WidgetBookInfo.cloudAssetType.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

uint64_t (*WidgetBookInfo.cloudAssetType.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

id WidgetBookInfo.assetType.getter()
{
  return *(id *)(v0 + 56);
}

void WidgetBookInfo.assetType.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
}

uint64_t (*WidgetBookInfo.assetType.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t WidgetBookInfo.coverURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetBookInfo.coverURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*WidgetBookInfo.coverURL.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t WidgetBookInfo.isRTL.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t WidgetBookInfo.isRTL.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*WidgetBookInfo.isRTL.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t destroy for WidgetBookInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void **)(a2 + 48);
  long long v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v5;
  id v9 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 48);
  long long v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  id v7 = v6;

  id v8 = *(void **)(a2 + 56);
  id v9 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v8;
  id v10 = v8;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  long long v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetBookInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetBookInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBookInfo()
{
  return &type metadata for WidgetBookInfo;
}

uint64_t sub_10001A23C()
{
  id v14 = *(id *)(v0 + 56);
  uint64_t v1 = sub_1000A4340();
  uint64_t v3 = v2;
  if (v1 == sub_1000A4340() && v3 == v4)
  {
    sub_10001A4C0(&v14);
    swift_bridgeObjectRelease_n();
    sub_10001A4EC(&v14);
    goto LABEL_13;
  }
  char v6 = sub_1000A46A0();
  sub_10001A4C0(&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001A4EC(&v14);
  if (v6)
  {
LABEL_13:
    char v12 = 1;
    return v12 & 1;
  }
  if (*(void *)(v0 + 48))
  {
    uint64_t v7 = sub_1000A4340();
    uint64_t v9 = v8;
    if (v7 == sub_1000A4340() && v9 == v10) {
      char v12 = 1;
    }
    else {
      char v12 = sub_1000A46A0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_10001A37C()
{
  id v14 = *(id *)(v0 + 56);
  uint64_t v1 = sub_1000A4340();
  uint64_t v3 = v2;
  if (v1 == sub_1000A4340() && v3 == v4)
  {
    sub_10001A4C0(&v14);
    swift_bridgeObjectRelease_n();
    sub_10001A4EC(&v14);
    if (*(void *)(v0 + 48)) {
      goto LABEL_7;
    }
LABEL_13:
    char v7 = 0;
    return v7 & 1;
  }
  char v6 = sub_1000A46A0();
  sub_10001A4C0(&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001A4EC(&v14);
  char v7 = 0;
  if ((v6 & 1) == 0) {
    return v7 & 1;
  }
  if (!*(void *)(v0 + 48)) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v8 = sub_1000A4340();
  uint64_t v10 = v9;
  if (v8 == sub_1000A4340() && v10 == v11) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000A46A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

id *sub_10001A4C0(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_10001A4EC(id *a1)
{
  return a1;
}

uint64_t sub_10001A518()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  long long v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D7FE0);
  sub_100010B3C(v10, (uint64_t)qword_1000D7FE0);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

unint64_t sub_10001A7F0()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v0 - 8);
  uint64_t v41 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000A3390();
  uint64_t v4 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  long long v37 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000A33A0();
  uint64_t v31 = v10;
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  long long v39 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v30[0] = (char *)v30 - v13;
  sub_100004FDC(&qword_1000CD558);
  id v14 = (int *)(sub_100004FDC(&qword_1000CD560) - 8);
  uint64_t v15 = *(void *)v14;
  char v36 = *(unsigned char **)(*(void *)v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v38 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1000A8D50;
  unint64_t v18 = v17 + v16;
  *(unsigned char *)(v17 + v16) = 0;
  unint64_t v19 = v17 + v16 + v14[14];
  v30[1] = v9;
  v30[2] = v19;
  sub_1000A4280();
  sub_1000A35D0();
  unsigned int v32 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v20 = *(void (**)(void))(v4 + 104);
  uint64_t v33 = v4 + 104;
  char v35 = (void (*)(char *, void, uint64_t))v20;
  uint64_t v21 = v37;
  v20(v37);
  uint64_t v22 = v21;
  sub_1000A33B0();
  char v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v42 += 56;
  long long v24 = v40;
  v23(v40, 1, 1, v10);
  uint64_t v25 = sub_1000A30D0();
  long long v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  long long v27 = v41;
  v26(v41, 1, 1, v25);
  sub_1000A3100();
  long long v28 = &v36[v18];
  unsigned char *v28 = 1;
  char v36 = &v28[v14[14]];
  sub_1000A4280();
  sub_1000A35D0();
  v35(v22, v32, v34);
  sub_1000A33B0();
  v23(v24, 1, 1, v31);
  v26(v27, 1, 1, v25);
  sub_1000A3100();
  unint64_t result = sub_10007D238(v38);
  qword_1000D7FF8 = result;
  return result;
}

uint64_t sub_10001AD3C(char a1)
{
  if (a1) {
    return 0x6369666963657073;
  }
  else {
    return 0x6563655274736F6DLL;
  }
}

uint64_t sub_10001AD78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10007D0F4(*a1, *a2);
}

unint64_t sub_10001AD88()
{
  unint64_t result = qword_1000CD2B8;
  if (!qword_1000CD2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2B8);
  }
  return result;
}

uint64_t sub_10001ADDC()
{
  return sub_10007DAE4(*v0);
}

uint64_t sub_10001ADE4(uint64_t a1)
{
  return sub_100056764(a1, *v1);
}

uint64_t sub_10001ADEC(uint64_t a1)
{
  return sub_1000568FC(a1, *v1);
}

uint64_t sub_10001ADF4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_10001DE5C(a1, (Swift::OpaquePointer)&off_1000C6A78, a2);
}

uint64_t sub_10001AE00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001AD3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10001AE30()
{
  unint64_t result = qword_1000CD2C0;
  if (!qword_1000CD2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2C0);
  }
  return result;
}

unint64_t sub_10001AE88()
{
  unint64_t result = qword_1000CD2C8;
  if (!qword_1000CD2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2C8);
  }
  return result;
}

unint64_t sub_10001AEE0()
{
  unint64_t result = qword_1000CD2D0;
  if (!qword_1000CD2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2D0);
  }
  return result;
}

void *sub_10001AF34()
{
  return &protocol witness table for String;
}

unint64_t sub_10001AF44()
{
  unint64_t result = qword_1000CD2D8;
  if (!qword_1000CD2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2D8);
  }
  return result;
}

unint64_t sub_10001AF9C()
{
  unint64_t result = qword_1000CD2E0;
  if (!qword_1000CD2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2E0);
  }
  return result;
}

unint64_t sub_10001AFF4()
{
  unint64_t result = qword_1000CD2E8;
  if (!qword_1000CD2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2E8);
  }
  return result;
}

unint64_t sub_10001B04C()
{
  unint64_t result = qword_1000CD2F0;
  if (!qword_1000CD2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2F0);
  }
  return result;
}

uint64_t sub_10001B0A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10001E188(&qword_1000CC648, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D7FE0, a1);
}

uint64_t sub_10001B0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001E244(a1, a2, a3, (void (*)(void))sub_10001B0F4);
}

unint64_t sub_10001B0F4()
{
  unint64_t result = qword_1000CD2F8;
  if (!qword_1000CD2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD2F8);
  }
  return result;
}

uint64_t sub_10001B148(uint64_t a1)
{
  unint64_t v2 = sub_10001B0F4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10001B198()
{
  unint64_t result = qword_1000CD300;
  if (!qword_1000CD300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD300);
  }
  return result;
}

unint64_t sub_10001B1F0()
{
  unint64_t result = qword_1000CD308;
  if (!qword_1000CD308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD308);
  }
  return result;
}

unint64_t sub_10001B248()
{
  unint64_t result = qword_1000CD310;
  if (!qword_1000CD310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD310);
  }
  return result;
}

uint64_t sub_10001B29C(uint64_t a1, uint64_t a2)
{
  return sub_10001E464(a1, a2, &qword_1000CC650);
}

uint64_t sub_10001B2C0(uint64_t a1)
{
  unint64_t v2 = sub_10001B04C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10001B30C()
{
  return sub_10000B17C(&qword_1000CD318, &qword_1000CD320);
}

void sub_10001B348(void *a1@<X8>)
{
  *a1 = &off_1000C6AC8;
}

unint64_t sub_10001B35C()
{
  unint64_t result = qword_1000CD328;
  if (!qword_1000CD328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD328);
  }
  return result;
}

unint64_t sub_10001B3B4()
{
  unint64_t result = qword_1000CD330;
  if (!qword_1000CD330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD330);
  }
  return result;
}

uint64_t sub_10001B408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001B424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001B440()
{
  uint64_t v0 = sub_1000A3390();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A3600();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000A42F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000A33A0();
  sub_100010E40(v6, qword_1000D8000);
  sub_100010B3C(v6, (uint64_t)qword_1000D8000);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000A33B0();
}

uint64_t sub_10001B620()
{
  return sub_1000A2ED0();
}

uint64_t sub_10001B644()
{
  return sub_1000A2ED0();
}

uint64_t sub_10001B668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CD508);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  long long v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)v22 - v5;
  uint64_t v6 = sub_100004FDC(&qword_1000CD510);
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v22 - v11;
  __chkstk_darwin(v10);
  char v23 = (char *)v22 - v13;
  char v33 = 0;
  uint64_t v30 = sub_100004FDC(&qword_1000CD518);
  v22[0] = sub_10001F338();
  unint64_t v29 = sub_10001AFF4();
  v22[1] = sub_10000B17C(&qword_1000CD520, &qword_1000CD518);
  sub_1000A3310();
  sub_10000B17C(&qword_1000CD528, &qword_1000CD510);
  sub_1000A32F0();
  uint64_t v14 = v31 + 8;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v31 + 8);
  v15(v12, v6);
  uint64_t v31 = v14;
  char v32 = 1;
  sub_1000A3310();
  sub_1000A32F0();
  v15(v9, v6);
  unint64_t v16 = v24;
  sub_1000A3350();
  sub_10000B17C(&qword_1000CD530, &qword_1000CD508);
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  sub_1000A32F0();
  unint64_t v19 = *(void (**)(char *, uint64_t))(v27 + 8);
  v19(v16, v18);
  uint64_t v20 = v23;
  sub_1000A32E0();
  v19(v17, v18);
  v15(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v20, v6);
}

uint64_t sub_10001BB04@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CD538);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100004FDC(&qword_1000CD540);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100004FDC(&qword_1000CD518);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_10001F338();
  sub_1000A3190();
  v13._countAndFlagsBits = 0x206E65704FLL;
  v13._object = (void *)0xE500000000000000;
  sub_1000A3180(v13);
  swift_getKeyPath();
  sub_100004FDC(&qword_1000CD548);
  sub_1000A3170();
  swift_release();
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  sub_1000A3180(v14);
  swift_getKeyPath();
  sub_100004FDC(&qword_1000CD550);
  sub_1000A3170();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_1000A3180(v15);
  sub_1000A31A0();
  sub_1000A3160();
  sub_10000B17C(&qword_1000CD520, &qword_1000CD518);
  sub_1000A31F0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1000A31E0();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_10001BE10@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CD538);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100004FDC(&qword_1000CD540);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100004FDC(&qword_1000CD518);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_10001F338();
  sub_1000A3190();
  v13._countAndFlagsBits = 0x206E65704FLL;
  v13._object = (void *)0xE500000000000000;
  sub_1000A3180(v13);
  swift_getKeyPath();
  sub_100004FDC(&qword_1000CD548);
  sub_1000A3170();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  sub_1000A3180(v14);
  sub_1000A31A0();
  sub_1000A3160();
  sub_10000B17C(&qword_1000CD520, &qword_1000CD518);
  sub_1000A31F0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1000A31E0();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_10001C0D8@<X0>(uint64_t a1@<X8>)
{
  return sub_10001E188(&qword_1000CC658, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000D8000, a1);
}

uint64_t sub_10001C110()
{
  return 1;
}

uint64_t sub_10001C120(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_100004FDC(&qword_1000CD4F8);
  uint64_t v5 = sub_10000B17C(&qword_1000CD500, &qword_1000CD4F8);

  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_10001B668, 0, v4, a2, v5);
}

uint64_t sub_10001C1DC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000A4430();
  *(void *)(v1 + 24) = sub_1000A4420();
  uint64_t v3 = sub_1000A4410();
  return _swift_task_switch(sub_10001C274, v3, v2);
}

uint64_t sub_10001C274()
{
  swift_release();
  sub_1000A2E00();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001C2E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001F38C();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_10001C30C(uint64_t a1)
{
  unint64_t v2 = sub_10001F338();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10001C34C()
{
  unint64_t result = qword_1000CD340;
  if (!qword_1000CD340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD340);
  }
  return result;
}

uint64_t sub_10001C3A0()
{
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  sub_1000A2CE0();
  uint64_t result = sub_1000A2CB0();
  qword_1000D8018 = result;
  return result;
}

uint64_t sub_10001C408()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D8020);
  sub_100010B3C(v10, (uint64_t)qword_1000D8020);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

uint64_t sub_10001C6D4@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FDC(&qword_1000CD4A0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_1000A33A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)v21 - v15;
  sub_1000A2E20();
  if (!v22) {
    swift_bridgeObjectRetain();
  }
  sub_1000A3380();
  sub_1000A2E20();
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v19 = 1;
    goto LABEL_7;
  }
  uint64_t result = sub_1000A2E20();
  if (v22)
  {
    sub_1000A3380();
    uint64_t v19 = 0;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_10001F208((uint64_t)v9, (uint64_t)v7);
    uint64_t v20 = sub_1000A30D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
    sub_1000A3100();
    sub_10001F270((uint64_t)v9);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  __break(1u);
  return result;
}

unint64_t sub_10001C9B4()
{
  unint64_t result = qword_1000CD348;
  if (!qword_1000CD348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD348);
  }
  return result;
}

uint64_t sub_10001CA08()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4C8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FDC(&qword_1000CD4D0);
  __chkstk_darwin(v4);
  sub_10001C34C();
  sub_1000A3270();
  v7._object = (void *)0x80000001000A5410;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  sub_1000A3260(v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  sub_1000A3250();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1000A3260(v8);
  return sub_1000A3280();
}

unint64_t sub_10001CBC8()
{
  unint64_t result = qword_1000CD350;
  if (!qword_1000CD350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD350);
  }
  return result;
}

unint64_t sub_10001CC20()
{
  unint64_t result = qword_1000CD358;
  if (!qword_1000CD358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD358);
  }
  return result;
}

unint64_t sub_10001CC78()
{
  unint64_t result = qword_1000CD360;
  if (!qword_1000CD360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD360);
  }
  return result;
}

unint64_t sub_10001CCD0()
{
  unint64_t result = qword_1000CD368;
  if (!qword_1000CD368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD368);
  }
  return result;
}

void *sub_10001CD24()
{
  return &protocol witness table for String;
}

uint64_t sub_10001CD30@<X0>(void *a1@<X8>)
{
  if (qword_1000CC660 != -1) {
    swift_once();
  }
  *a1 = qword_1000D8018;

  return swift_retain();
}

uint64_t sub_10001CD9C()
{
  sub_10001F2D0();
  uint64_t v2 = sub_1000A3200();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001F324(v3, v0, v2, v1);
}

unint64_t sub_10001CE34()
{
  unint64_t result = qword_1000CD378;
  if (!qword_1000CD378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD378);
  }
  return result;
}

unint64_t sub_10001CE8C()
{
  unint64_t result = qword_1000CD380;
  if (!qword_1000CD380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD380);
  }
  return result;
}

unint64_t sub_10001CEE4()
{
  unint64_t result = qword_1000CD388;
  if (!qword_1000CD388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD388);
  }
  return result;
}

unint64_t sub_10001CF3C()
{
  unint64_t result = qword_1000CD390;
  if (!qword_1000CD390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD390);
  }
  return result;
}

void *sub_10001CF90()
{
  return &protocol witness table for String;
}

uint64_t sub_10001CF9C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001CFA8@<X0>(uint64_t a1@<X8>)
{
  return sub_10001E188(&qword_1000CC668, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D8020, a1);
}

uint64_t sub_10001CFE0()
{
  return sub_10000B17C(&qword_1000CD398, &qword_1000CD3A0);
}

uint64_t sub_10001D01C(uint64_t a1)
{
  unint64_t v2 = sub_10001C34C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10001D06C()
{
  unint64_t result = qword_1000CD3A8;
  if (!qword_1000CD3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD3A8);
  }
  return result;
}

uint64_t sub_10001D0C4(uint64_t a1)
{
  unint64_t v2 = sub_10001CF3C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10001D110(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100020E84, 0, 0);
}

unint64_t sub_10001D138()
{
  unint64_t result = qword_1000CD3B8;
  if (!qword_1000CD3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD3B8);
  }
  return result;
}

unint64_t sub_10001D190()
{
  unint64_t result = qword_1000CD3C0[0];
  if (!qword_1000CD3C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000CD3C0);
  }
  return result;
}

uint64_t sub_10001D1E4@<X0>(uint64_t *a1@<X8>)
{
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  sub_1000A2CE0();
  uint64_t result = sub_1000A2CB0();
  *a1 = result;
  return result;
}

uint64_t sub_10001D254()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_10001D278, 0, 0);
}

uint64_t sub_10001D278()
{
  sub_1000A2CA0();
  uint64_t v1 = *(uint64_t (**)(void *))(v0 + 8);
  return v1(_swiftEmptyArrayStorage);
}

uint64_t sub_10001D2E4(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10001D308, 0, 0);
}

uint64_t sub_10001D308()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1000A2CA0();
  *uint64_t v1 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_10001D37C()
{
  unint64_t result = qword_1000CD3D8;
  if (!qword_1000CD3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD3D8);
  }
  return result;
}

unint64_t sub_10001D3D4()
{
  unint64_t result = qword_1000CD3E0;
  if (!qword_1000CD3E0)
  {
    sub_100008B14(qword_1000CD3E8);
    sub_10001CEE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD3E0);
  }
  return result;
}

uint64_t sub_10001D448(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001CCD0();
  *uint64_t v5 = v2;
  v5[1] = sub_10000C760;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10001D4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *Swift::String v7 = v3;
  v7[1] = sub_10000C760;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_10001D5B4()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D8038);
  sub_100010B3C(v10, (uint64_t)qword_1000D8038);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

unint64_t sub_10001D890()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v0 - 8);
  uint64_t v38 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v2 - 8);
  long long v37 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000A3390();
  uint64_t v4 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A3600();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A42F0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000A33A0();
  uint64_t v28 = v9;
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  char v36 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v27[1] = (char *)v27 - v12;
  sub_100004FDC(&qword_1000CD4A8);
  uint64_t v13 = (int *)(sub_100004FDC(&qword_1000CD4B0) - 8);
  uint64_t v14 = *(void *)v13;
  uint64_t v34 = *(unsigned char **)(*(void *)v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v35 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1000A8D50;
  unint64_t v17 = v16 + v15;
  *(unsigned char *)(v16 + v15) = 0;
  v27[2] = v16 + v15 + v13[14];
  sub_1000A4280();
  sub_1000A35D0();
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  char v33 = (void (*)(char *, void, uint64_t))v18;
  v18(v6);
  uint64_t v19 = v6;
  sub_1000A33B0();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v39 += 56;
  unint64_t v29 = v20;
  uint64_t v21 = v37;
  v20(v37, 1, 1, v9);
  uint64_t v22 = sub_1000A30D0();
  char v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  long long v24 = v38;
  v23(v38, 1, 1, v22);
  sub_1000A3100();
  uint64_t v25 = &v34[v17];
  *uint64_t v25 = 1;
  uint64_t v34 = &v25[v13[14]];
  sub_1000A4280();
  sub_1000A35D0();
  v33(v19, v30, v32);
  sub_1000A33B0();
  v29(v21, 1, 1, v28);
  v23(v24, 1, 1, v22);
  sub_1000A3100();
  unint64_t result = sub_10007D260(v35);
  qword_1000D8050 = result;
  return result;
}

uint64_t sub_10001DDAC(char a1)
{
  if (a1) {
    return 6710384;
  }
  else {
    return 1802465122;
  }
}

uint64_t sub_10001DDD4(char *a1, char *a2)
{
  return sub_10007D060(*a1, *a2);
}

unint64_t sub_10001DDE4()
{
  unint64_t result = qword_1000CD400;
  if (!qword_1000CD400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD400);
  }
  return result;
}

Swift::Int sub_10001DE38()
{
  return sub_10007DAE8();
}

uint64_t sub_10001DE40()
{
  return sub_100056708();
}

Swift::Int sub_10001DE48()
{
  return sub_100056984();
}

uint64_t sub_10001DE50@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_10001DE5C(a1, (Swift::OpaquePointer)&off_1000C6B40, a2);
}

uint64_t sub_10001DE5C@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, char *a3@<X8>)
{
  v9._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v9._object = v4;
  Swift::Int v6 = sub_1000A4680(a2, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_10001DEB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001DDAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10001DEE8()
{
  unint64_t result = qword_1000CD408;
  if (!qword_1000CD408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD408);
  }
  return result;
}

unint64_t sub_10001DF40()
{
  unint64_t result = qword_1000CD410;
  if (!qword_1000CD410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD410);
  }
  return result;
}

unint64_t sub_10001DF98()
{
  unint64_t result = qword_1000CD418;
  if (!qword_1000CD418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD418);
  }
  return result;
}

unint64_t sub_10001DFF0()
{
  unint64_t result = qword_1000CD420;
  if (!qword_1000CD420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD420);
  }
  return result;
}

unint64_t sub_10001E048()
{
  unint64_t result = qword_1000CD428;
  if (!qword_1000CD428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD428);
  }
  return result;
}

unint64_t sub_10001E0A0()
{
  unint64_t result = qword_1000CD430;
  if (!qword_1000CD430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD430);
  }
  return result;
}

unint64_t sub_10001E0F8()
{
  unint64_t result = qword_1000CD438;
  if (!qword_1000CD438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD438);
  }
  return result;
}

uint64_t sub_10001E150@<X0>(uint64_t a1@<X8>)
{
  return sub_10001E188(&qword_1000CC670, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D8038, a1);
}

uint64_t sub_10001E188@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100010B3C(v7, a3);
  Swift::String v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10001E22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001E244(a1, a2, a3, (void (*)(void))sub_10001E298);
}

uint64_t sub_10001E244(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10001E298()
{
  unint64_t result = qword_1000CD440;
  if (!qword_1000CD440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD440);
  }
  return result;
}

uint64_t sub_10001E2EC(uint64_t a1)
{
  unint64_t v2 = sub_10001E298();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10001E33C()
{
  unint64_t result = qword_1000CD448;
  if (!qword_1000CD448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD448);
  }
  return result;
}

unint64_t sub_10001E394()
{
  unint64_t result = qword_1000CD450;
  if (!qword_1000CD450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD450);
  }
  return result;
}

unint64_t sub_10001E3EC()
{
  unint64_t result = qword_1000CD458;
  if (!qword_1000CD458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD458);
  }
  return result;
}

uint64_t sub_10001E440(uint64_t a1, uint64_t a2)
{
  return sub_10001E464(a1, a2, &qword_1000CC678);
}

uint64_t sub_10001E464(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10001E4B4(uint64_t a1)
{
  unint64_t v2 = sub_10001E0F8();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10001E500()
{
  return sub_10000B17C(&qword_1000CD460, &qword_1000CD468);
}

void sub_10001E53C(void *a1@<X8>)
{
  *a1 = &off_1000C6B90;
}

unint64_t sub_10001E550()
{
  unint64_t result = qword_1000CD470;
  if (!qword_1000CD470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD470);
  }
  return result;
}

void sub_10001E5A4()
{
  swift_bridgeObjectRetain();
  sub_1000A4370();
  swift_bridgeObjectRelease();
  sub_1000A2E20();
  if (v0)
  {
    sub_1000A4760(1u);
    swift_bridgeObjectRetain();
    sub_1000A4370();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1000A4760(0);
  }
  sub_1000A2E20();
  if (v0)
  {
    sub_1000A4760(1u);
    swift_bridgeObjectRetain();
    sub_1000A4370();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1000A4760(0);
  }
}

Swift::Int sub_10001E6B8()
{
  return sub_1000A4780();
}

Swift::Int sub_10001E6FC()
{
  return sub_1000A4780();
}

uint64_t sub_10001E738(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  void v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_10001F07C(v9, v10) & 1;
}

unsigned char *initializeBufferWithCopyOfBuffer for WidgetRelevance(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for BookAppEntityContentType()
{
  return &type metadata for BookAppEntityContentType;
}

ValueMetadata *type metadata accessor for BookEntityStringQuery()
{
  return &type metadata for BookEntityStringQuery;
}

uint64_t destroy for BookAppEntity()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BookAppEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BookAppEntity(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookAppEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookAppEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookAppEntity()
{
  return &type metadata for BookAppEntity;
}

uint64_t destroy for OpenBookIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s20BooksWidgetExtension14OpenBookIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for OpenBookIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for OpenBookIntent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for OpenBookIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenBookIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenBookIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenBookIntent()
{
  return &type metadata for OpenBookIntent;
}

uint64_t getEnumTagSinglePayload for PlaybackMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20BooksWidgetExtension24BookAppEntityContentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001EEF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10001EF20(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10001EF28(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OpenBookIntent.OpenMode()
{
  return &type metadata for OpenBookIntent.OpenMode;
}

uint64_t sub_10001EF44()
{
  return sub_10000B17C(&qword_1000CD478, &qword_1000CD480);
}

uint64_t sub_10001EF80()
{
  return sub_10000B17C((unint64_t *)&qword_1000CD488, &qword_1000CD490);
}

uint64_t sub_10001EFBC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001EFDC, 0, 0);
}

uint64_t sub_10001EFDC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1000A3490();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  int v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10001F07C(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = 0, (sub_1000A46A0() & 1) != 0))
  {
    sub_1000A2E20();
    sub_1000A2E20();
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1000A2E20();
    sub_1000A2E20();
    if (v5)
    {
      swift_bridgeObjectRelease();
      char v3 = 1;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = 1;
    }
  }
  return v3 & 1;
}

uint64_t sub_10001F208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CD4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001F270(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CD4A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10001F2D0()
{
  unint64_t result = qword_1000CD4C0;
  if (!qword_1000CD4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD4C0);
  }
  return result;
}

uint64_t sub_10001F324(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_10001F338()
{
  unint64_t result = qword_1000CD4D8;
  if (!qword_1000CD4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD4D8);
  }
  return result;
}

uint64_t sub_10001F38C()
{
  uint64_t v0 = sub_1000A31D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v56 = v0;
  uint64_t v57 = v1;
  __chkstk_darwin(v0);
  long long v55 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v54 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  long long v53 = &v36[-v6];
  uint64_t v7 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v45 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000A3390();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000A3600();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1000A42F0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000A33A0();
  uint64_t v43 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v51 = &v36[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v52 = &v36[-v20];
  __chkstk_darwin(v19);
  uint64_t v50 = sub_100004FDC(&qword_1000CD4E8);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v38 = v9;
  v22(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v39 = v22;
  uint64_t v40 = v10 + 104;
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v22(v12, v21, v9);
  char v23 = v45;
  sub_1000A33B0();
  long long v24 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v42 = v16 + 56;
  long long v44 = v24;
  v24(v23, 0, 1, v15);
  LOBYTE(v58) = 0;
  uint64_t v25 = sub_1000A2DD0();
  uint64_t v41 = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v47 = v27;
  uint64_t v48 = v26 + 56;
  v27(v53, 1, 1, v25);
  v27(v54, 1, 1, v25);
  unsigned int v49 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v28 = *(void (**)(unsigned char *))(v57 + 104);
  v57 += 104;
  v28(v55);
  sub_10001B0F4();
  uint64_t v50 = sub_1000A2EE0();
  uint64_t v46 = sub_100004FDC(&qword_1000CD4F0);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v39(v12, v37, v38);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v31(v12, v29, v30);
  sub_1000A33B0();
  v44(v23, 0, 1, v43);
  long long v62 = 0u;
  long long v63 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  sub_1000A4280();
  sub_1000A35D0();
  v31(v12, v29, v30);
  sub_1000A33B0();
  uint64_t v32 = v53;
  sub_1000A2DE0();
  uint64_t v33 = v41;
  uint64_t v34 = v47;
  v47(v32, 0, 1, v41);
  v34(v54, 1, 1, v33);
  ((void (*)(unsigned char *, void, uint64_t))v28)(v55, v49, v56);
  sub_10001C34C();
  sub_1000A2EF0();
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  long long v58 = 0u;
  long long v59 = 0u;
  *(void *)&long long v60 = 0;
  sub_1000A2CE0();
  sub_1000A2CB0();
  return v50;
}

uint64_t sub_10001FBC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A2ED0();
  *a1 = result;
  return result;
}

uint64_t sub_10001FBF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A2ED0();
  *a1 = result;
  return result;
}

uint64_t sub_10001FC1C(int a1, uint64_t a2)
{
  long long v55 = (void *)a2;
  int v54 = a1;
  uint64_t v2 = sub_1000A31D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  uint64_t v62 = v3;
  __chkstk_darwin(v2);
  long long v60 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  long long v59 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  long long v58 = &v40[-v8];
  uint64_t v9 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v56 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000A3390();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1000A3600();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000A42F0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_1000A33A0();
  uint64_t v46 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  long long v53 = &v40[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v57 = &v40[-v22];
  __chkstk_darwin(v21);
  uint64_t v48 = sub_100004FDC(&qword_1000CD4E8);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  long long v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v41 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v42 = v11;
  v24(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  uint64_t v43 = v24;
  uint64_t v44 = v12 + 104;
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v24(v14, v23, v11);
  uint64_t v25 = v56;
  sub_1000A33B0();
  uint64_t v26 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v45 = v18 + 56;
  uint64_t v47 = v26;
  v26(v25, 0, 1, v17);
  LOBYTE(v63) = 0;
  uint64_t v27 = sub_1000A2DD0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  unsigned int v49 = v29;
  uint64_t v50 = v28 + 56;
  v29(v58, 1, 1, v27);
  v29(v59, 1, 1, v27);
  unsigned int v51 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v30 = *(void (**)(void))(v62 + 104);
  v62 += 104;
  unint64_t v52 = (void (*)(unsigned char *, void, uint64_t))v30;
  v30(v60);
  sub_10001B0F4();
  uint64_t v31 = sub_1000A2EE0();
  v54 &= 1u;
  uint64_t v48 = sub_100004FDC(&qword_1000CD4F0);
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v32 = v41;
  uint64_t v33 = v42;
  uint64_t v34 = v43;
  v43(v14, v41, v42);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v34(v14, v32, v33);
  uint64_t v35 = v56;
  sub_1000A33B0();
  v47(v35, 0, 1, v46);
  long long v67 = 0u;
  long long v68 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  sub_1000A4280();
  sub_1000A35D0();
  v34(v14, v32, v33);
  sub_1000A33B0();
  char v36 = v58;
  sub_1000A2DE0();
  unsigned int v37 = v49;
  v49(v36, 0, 1, v27);
  v37(v59, 1, 1, v27);
  v52(v60, v51, v61);
  sub_10001C34C();
  sub_1000A2EF0();
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)&long long v65 = 0;
  swift_retain();
  sub_1000A2CE0();
  sub_1000A2CB0();
  LOBYTE(v63) = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2EC0();
  swift_release();
  swift_release();
  uint64_t v38 = v55;
  sub_100020560((uint64_t)v55, (uint64_t)&v63);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100020674(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1000205C8);
  sub_1000A2EC0();
  sub_100020674(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1000206D0);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return v31;
}

uint64_t sub_100020560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CD568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000205C8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_100020674(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000206D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10002077C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v42 = a6;
  uint64_t v43 = a8;
  uint64_t v46 = a1;
  uint64_t v47 = a7;
  uint64_t v40 = a2;
  uint64_t v41 = a5;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v44 = a9;
  int v45 = a10;
  uint64_t v10 = sub_1000A3390();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000A3600();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000A42F0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000A33A0();
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v34[1] = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  __chkstk_darwin(v19);
  sub_100004FDC(&qword_1000CD570);
  uint64_t v37 = sub_1000A2E90();
  swift_retain();
  uint64_t v36 = sub_1000A2E90();
  swift_retain();
  uint64_t v35 = sub_1000A2E90();
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v21(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000A33B0();
  v34[0] = sub_1000A2E80();
  sub_100004FDC(&qword_1000CD578);
  swift_retain();
  uint64_t v22 = sub_1000A2E70();
  sub_100004FDC(&qword_1000CD580);
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  v21(v13, v20, v10);
  sub_1000A33B0();
  sub_10001E298();
  uint64_t v23 = sub_1000A2E40();
  sub_100004FDC(&qword_1000CD588);
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  v21(v13, v20, v10);
  sub_1000A33B0();
  sub_10000B17C(&qword_1000CD598, &qword_1000CD5A0);
  uint64_t v24 = sub_1000A2E50();
  uint64_t v48 = v38;
  uint64_t v49 = v39;
  swift_retain_n();
  uint64_t v25 = v40;
  swift_bridgeObjectRetain_n();
  uint64_t v26 = v37;
  swift_retain();
  uint64_t v27 = v36;
  swift_retain();
  uint64_t v28 = v35;
  swift_retain();
  uint64_t v29 = v34[0];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2E30();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = v41;
  uint64_t v49 = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2E30();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v48) = 0;
  uint64_t v30 = v43;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2E30();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v32 = v44;
  void *v44 = v46;
  v32[1] = v25;
  *((unsigned char *)v32 + 16) = v45;
  v32[3] = v26;
  v32[4] = v27;
  v32[5] = v28;
  v32[6] = v29;
  v32[7] = v22;
  v32[8] = v23;
  uint64_t v33 = v47;
  v32[9] = v24;
  v32[10] = v33;
  v32[11] = v30;
  return result;
}

uint64_t sub_100020E8C()
{
  uint64_t v0 = type metadata accessor for WidgetDataCacheManager();
  uint64_t result = swift_allocObject();
  qword_1000D8070 = v0;
  unk_1000D8078 = &off_1000C7C00;
  qword_1000D8058 = result;
  return result;
}

void sub_100020ED8()
{
  id v0 = [self mainScreen];
  [v0 scale];
  uint64_t v2 = v1;

  qword_1000D8080 = v2;
}

BOOL sub_100020F3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100020F50()
{
  Swift::UInt v1 = *v0;
  sub_1000A4740();
  sub_1000A4750(v1);
  return sub_1000A4780();
}

void sub_100020F98()
{
  sub_1000A4750(*v0);
}

Swift::Int sub_100020FC4()
{
  Swift::UInt v1 = *v0;
  sub_1000A4740();
  sub_1000A4750(v1);
  return sub_1000A4780();
}

void sub_100021018(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_100021064(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100004FDC(&qword_1000CD6A8);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

uint64_t sub_100021124(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_10000A95C((uint64_t)&v6, v3, &qword_1000CD6B0);
  return swift_continuation_resume();
}

uint64_t type metadata accessor for WidgetImageManager()
{
  return self;
}

uint64_t sub_1000211AC()
{
  uint64_t v0 = sub_1000A3830();
  sub_100010E40(v0, qword_1000CD5A8);
  sub_100010B3C(v0, (uint64_t)qword_1000CD5A8);
  return sub_1000A3820();
}

uint64_t sub_10002122C()
{
  uint64_t v0 = sub_1000A3830();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A37B0();
  sub_100010E40(v4, qword_1000CD5C0);
  sub_100010B3C(v4, (uint64_t)qword_1000CD5C0);
  if (qword_1000CC690 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100010B3C(v0, (uint64_t)qword_1000CD5A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1000A3790();
}

uint64_t sub_100021368(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  *(double *)(v5 + 184) = a4;
  *(double *)(v5 + 192) = a5;
  *(void *)(v5 + 168) = a2;
  *(void *)(v5 + 176) = a3;
  *(void *)(v5 + 160) = a1;
  uint64_t v6 = sub_1000A3490();
  *(void *)(v5 + 200) = v6;
  *(void *)(v5 + 208) = *(void *)(v6 - 8);
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = swift_task_alloc();
  return _swift_task_switch(sub_100021440, 0, 0);
}

uint64_t sub_100021440()
{
  uint64_t v32 = v0;
  if (qword_1000CC690 != -1) {
    swift_once();
  }
  uint64_t v1 = *((void *)v0 + 20);
  uint64_t v2 = *((void *)v0 + 28);
  uint64_t v3 = *((void *)v0 + 25);
  uint64_t v4 = *((void *)v0 + 26);
  uint64_t v5 = sub_1000A3830();
  *((void *)v0 + 29) = sub_100010B3C(v5, (uint64_t)qword_1000CD5A8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *((void *)v0 + 30) = v6;
  *((void *)v0 + 31) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1000A3810();
  os_log_type_t v8 = sub_1000A44D0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *((void *)v0 + 28);
  uint64_t v11 = *((void *)v0 + 25);
  uint64_t v12 = *((void *)v0 + 26);
  unint64_t v13 = *((void *)v0 + 22);
  if (v9)
  {
    uint64_t v30 = *((void *)v0 + 25);
    uint64_t v14 = *((void *)v0 + 21);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    *((void *)v0 + 18) = sub_10007A4B4(v14, v13, &v31);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v16 = sub_1000A3420();
    *((void *)v0 + 19) = sub_10007A4B4(v16, v17, &v31);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v10, v30);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Generating a thumbnail from QuickLook for assetID: %s, url: %s.", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v10, v11);
  }

  *((void *)v0 + 32) = v18;
  if (qword_1000CC688 != -1) {
    swift_once();
  }
  double v20 = v0[23];
  double v19 = v0[24];
  double v21 = *(double *)&qword_1000D8080;
  id v22 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  sub_1000A3430(v23);
  uint64_t v25 = v24;
  id v26 = [v22 initWithFileAtURL:v24 size:-1 scale:v20 representationTypes:v19];
  *((void *)v0 + 33) = v26;

  id v27 = [self sharedGenerator];
  *((void *)v0 + 34) = v27;
  *((void *)v0 + 2) = v0;
  *((void *)v0 + 7) = v0 + 15;
  *((void *)v0 + 3) = sub_100021844;
  uint64_t v28 = swift_continuation_init();
  *((void *)v0 + 10) = _NSConcreteStackBlock;
  *((void *)v0 + 11) = 0x40000000;
  *((void *)v0 + 12) = sub_100021064;
  *((void *)v0 + 13) = &unk_1000C77A0;
  *((void *)v0 + 14) = v28;
  [v27 generateBestRepresentationForRequest:v26 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100021844()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v1;
  if (v1) {
    uint64_t v2 = sub_100021A28;
  }
  else {
    uint64_t v2 = sub_100021954;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100021954()
{
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 120);

  id v3 = [v2 UIImage];
  id v4 = [v2 type];

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(id, BOOL))(v0 + 8);
  return v5(v3, v4 == 0);
}

uint64_t sub_100021A28()
{
  uint64_t v24 = v0;
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = (void *)v0[33];
  id v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[30];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[20];
  swift_willThrow();

  v3(v4, v6, v5);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1000A3810();
  os_log_type_t v8 = sub_1000A44B0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[27];
    uint64_t v21 = v0[25];
    id v22 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v11 = v0[21];
    unint64_t v10 = v0[22];
    uint64_t v12 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    v0[16] = sub_10007A4B4(v11, v10, v23);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v13 = sub_1000A3420();
    v0[17] = sub_10007A4B4(v13, v14, v23);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    v22(v9, v21);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to download a thumbnail from QuickLook for assetID: %s, url: %s.", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v16 = v0[27];
    uint64_t v17 = v0[25];
    swift_bridgeObjectRelease_n();
    v15(v16, v17);
  }

  sub_100027710();
  swift_allocError();
  *uint64_t v18 = 3;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  double v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_100021CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  *(double *)(v6 + 264) = a5;
  *(double *)(v6 + 272) = a6;
  *(void *)(v6 + 248) = a3;
  *(void *)(v6 + 256) = a4;
  *(void *)(v6 + 232) = a1;
  *(void *)(v6 + 240) = a2;
  sub_100004FDC(&qword_1000CCB30);
  *(void *)(v6 + 280) = swift_task_alloc();
  uint64_t v7 = sub_1000A3490();
  *(void *)(v6 + 288) = v7;
  *(void *)(v6 + 296) = *(void *)(v7 - 8);
  *(void *)(v6 + 304) = swift_task_alloc();
  return _swift_task_switch(sub_100021DD8, 0, 0);
}

uint64_t sub_100021DD8()
{
  uint64_t v43 = v1;
  if (qword_1000CC688 != -1) {
    swift_once();
  }
  uint64_t v3 = v1[29];
  uint64_t v4 = v1[30];
  sub_1000A4520();
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = 8222587;
  v1[5] = 0xE300000000000000;
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  double v7 = v6;
  if (v5 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v1[21] = (uint64_t)v5;
  v1[8] = sub_1000A4690();
  v1[9] = v8;
  uint64_t v2 = sub_10000A504();
  uint64_t v0 = &type metadata for String;
  uint64_t v9 = sub_1000A45A0();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v1[10] = v9;
  v1[11] = v11;
  v1[12] = 8218747;
  v1[13] = 0xE300000000000000;
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v12 = v1[37];
  uint64_t v41 = v1[36];
  uint64_t v40 = v1[35];
  v1[20] = (uint64_t)v7;
  v1[16] = sub_1000A4690();
  v1[17] = v13;
  uint64_t v14 = sub_1000A45A0();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[18] = v14;
  v1[19] = v16;
  v1[14] = 8218235;
  v1[15] = 0xE300000000000000;
  v1[6] = 6778986;
  v1[7] = 0xE300000000000000;
  uint64_t v38 = v2;
  uint64_t v39 = v2;
  uint64_t v37 = v2;
  uint64_t v2 = sub_1000A45A0();
  uint64_t v0 = v17;
  swift_bridgeObjectRelease();
  v1[39] = v2;
  v1[40] = v0;
  sub_1000A3470();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v40, 1, v41) == 1)
  {
    sub_10000A9C0(v1[35], &qword_1000CCB30);
    if (qword_1000CC690 == -1)
    {
LABEL_11:
      uint64_t v18 = sub_1000A3830();
      sub_100010B3C(v18, (uint64_t)qword_1000CD5A8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      double v19 = sub_1000A3810();
      os_log_type_t v20 = sub_1000A44B0();
      BOOL v21 = os_log_type_enabled(v19, v20);
      unint64_t v22 = v1[32];
      if (v21)
      {
        uint64_t v23 = v1[31];
        uint64_t v24 = swift_slowAlloc();
        v42[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315394;
        swift_bridgeObjectRetain();
        v1[22] = sub_10007A4B4(v23, v22, v42);
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        swift_bridgeObjectRetain();
        v1[23] = sub_10007A4B4(v2, (unint64_t)v0, v42);
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Invalid cover URL for assetID: %s, url: %s.", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      sub_100027710();
      swift_allocError();
      unsigned char *v32 = 0;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v33 = (uint64_t (*)(void))v1[1];
      return v33();
    }
LABEL_31:
    swift_once();
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(v1[37] + 32))(v1[38], v1[35], v1[36]);
  if (qword_1000CC690 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1000A3830();
  v1[41] = sub_100010B3C(v25, (uint64_t)qword_1000CD5A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v26 = sub_1000A3810();
  os_log_type_t v27 = sub_1000A44D0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  unint64_t v29 = v1[32];
  if (v28)
  {
    uint64_t v30 = v1[31];
    uint64_t v31 = swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315394;
    swift_bridgeObjectRetain();
    v1[27] = sub_10007A4B4(v30, v29, v42);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    v1[28] = sub_10007A4B4(v2, (unint64_t)v0, v42);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Downloading cover image for asset '%s' from url %s.", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v1[42] = [self sharedSession:v37, v38, v39];
  uint64_t v35 = (void *)swift_task_alloc();
  v1[43] = v35;
  *uint64_t v35 = v1;
  v35[1] = sub_1000225C8;
  uint64_t v36 = v1[38];
  return NSURLSession.data(from:delegate:)(v36, 0);
}

uint64_t sub_1000225C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = (void *)*v4;
  double v6 = (void *)*v4;
  v6[44] = a1;
  v6[45] = a2;
  v6[46] = a3;
  v6[47] = v3;
  swift_task_dealloc();

  if (v3)
  {
    swift_bridgeObjectRelease();
    double v7 = sub_100022C58;
  }
  else
  {
    double v7 = sub_100022718;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100022718()
{
  uint64_t v39 = v0;
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
LABEL_8:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000A3810();
    os_log_type_t v16 = sub_1000A44B0();
    BOOL v17 = os_log_type_enabled(v15, v16);
    unint64_t v18 = *(void *)(v0 + 320);
    if (v17)
    {
      uint64_t v37 = *(void *)(v0 + 312);
      uint64_t v20 = *(void *)(v0 + 248);
      unint64_t v19 = *(void *)(v0 + 256);
      uint64_t v21 = swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 192) = sub_10007A4B4(v20, v19, v38);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 200) = sub_10007A4B4(v37, v18, v38);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Cover httpResponse status code is not 200 for assetID: %s, url: %s.", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v22 = *(void *)(v0 + 360);
    uint64_t v23 = *(void **)(v0 + 368);
    uint64_t v24 = *(void *)(v0 + 352);
    uint64_t v26 = *(void *)(v0 + 296);
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v27 = *(void *)(v0 + 288);
    sub_100027710();
    swift_allocError();
    unsigned char *v28 = 2;
    swift_willThrow();
    goto LABEL_12;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 368);
  if ([v2 statusCode] != (id)200)
  {

    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(v0 + 352);
  unint64_t v4 = *(void *)(v0 + 360);
  swift_bridgeObjectRelease();
  double v6 = *(double *)&qword_1000D8080;
  id v7 = objc_allocWithZone((Class)UIImage);
  sub_1000277BC(v5, v4);
  Class isa = sub_1000A34B0().super.isa;
  id v9 = [v7 initWithData:isa scale:v6];
  sub_100027764(v5, v4);

  if (v9)
  {
    unint64_t v10 = *(void *)(v0 + 360);
    uint64_t v11 = *(void **)(v0 + 368);
    uint64_t v12 = *(void *)(v0 + 352);
    (*(void (**)(void, void))(*(void *)(v0 + 296) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 288));

    sub_100027764(v12, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(id))(v0 + 8);
    return v13(v9);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1000A3810();
  os_log_type_t v31 = sub_1000A44B0();
  BOOL v32 = os_log_type_enabled(v30, v31);
  unint64_t v33 = *(void *)(v0 + 256);
  if (v32)
  {
    uint64_t v34 = *(void *)(v0 + 248);
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 208) = sub_10007A4B4(v34, v33, v38);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to create UIImage from downloaded image data for assetID %s.", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v22 = *(void *)(v0 + 360);
  uint64_t v23 = *(void **)(v0 + 368);
  uint64_t v24 = *(void *)(v0 + 352);
  uint64_t v26 = *(void *)(v0 + 296);
  uint64_t v25 = *(void *)(v0 + 304);
  uint64_t v27 = *(void *)(v0 + 288);
  sub_100027710();
  swift_allocError();
  *uint64_t v36 = 5;
  swift_willThrow();

LABEL_12:
  sub_100027764(v24, v22);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100022C58()
{
  (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100022CE0(uint64_t a1, double a2, double a3)
{
  *(double *)(v3 + 112) = a2;
  *(double *)(v3 + 120) = a3;
  *(void *)(v3 + 104) = a1;
  return _swift_task_switch(sub_100022D04, 0, 0);
}

uint64_t sub_100022D04()
{
  uint64_t v61 = v0;
  uint64_t v1 = *(uint64_t **)(v0 + 104);
  uint64_t v3 = v1[4];
  uint64_t v2 = (double *)v1[5];
  if (v1[1])
  {
    uint64_t v4 = *v1;
    uint64_t v5 = (void *)v1[1];
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = (void *)0xE000000000000000;
  }
  double v6 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v7 = sub_1000A4300();
  NSString v8 = sub_1000A4300();
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)[v6 bk_queryWithStoreID:v7 albumTitle:v8 isCloudItem:1];

  if (!isEscapingClosureAtFileLocation)
  {
    if (qword_1000CC690 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1000A3830();
    sub_100010B3C(v15, (uint64_t)qword_1000CD5A8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_log_type_t v16 = sub_1000A3810();
    os_log_type_t v17 = sub_1000A44B0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_10007A4B4(v3, (unint64_t)v2, v60);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_10007A4B4(v4, (unint64_t)v5, v60);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Nil MPMediaQuery for audiobook with assetID: %s title: %s.", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    sub_100027710();
    swift_allocError();
    *unint64_t v19 = 6;
    swift_willThrow();
    goto LABEL_52;
  }
  swift_bridgeObjectRelease();
  id v10 = [(id)isEscapingClosureAtFileLocation items];
  if (!v10) {
    goto LABEL_45;
  }
  uint64_t v11 = v10;
  sub_1000278C8(0, &qword_1000CD6B8);
  unint64_t v12 = sub_1000A43D0();

  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1000A4630();
  swift_bridgeObjectRelease();
  if (!v49)
  {
LABEL_44:
    swift_bridgeObjectRelease();
LABEL_45:
    if (qword_1000CC690 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1000A3830();
    sub_100010B3C(v50, (uint64_t)qword_1000CD5A8);
    swift_bridgeObjectRetain();
    unsigned int v51 = sub_1000A3810();
    os_log_type_t v52 = sub_1000A44B0();
    if (os_log_type_enabled(v51, v52))
    {
      long long v53 = (uint8_t *)swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)long long v53 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_10007A4B4(v3, (unint64_t)v2, v60);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Nil MPMediaItem for audiobook with assetID: %s.", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_100027710();
    swift_allocError();
    *int v54 = 7;
    swift_willThrow();
    goto LABEL_51;
  }
LABEL_8:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v13 = (id)sub_1000A4600();
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_57;
    }
    id v13 = *(id *)(v12 + 32);
  }
  uint64_t v5 = v13;
  id v14 = (id)(v0 + 64);
  swift_bridgeObjectRelease();
  if ([v5 valueForProperty:MPMediaItemPropertyArtwork])
  {
    sub_1000A45B0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_10000A95C(v0 + 16, v0 + 64, &qword_1000CD6C0);
  if (!*(void *)(v0 + 88)) {
    goto LABEL_27;
  }
  sub_1000278C8(0, &qword_1000CD6C8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v20 = *(void **)(v0 + 96);
  id v21 = [v20 imageWithSize:*(double *)(v0 + 112), *(double *)(v0 + 120)];
  if (!v21)
  {
    if (qword_1000CC690 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1000A3830();
    sub_100010B3C(v38, (uint64_t)qword_1000CD5A8);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1000A3810();
    os_log_type_t v40 = sub_1000A44B0();
    if (os_log_type_enabled(v39, v40))
    {
      os_log_type_t type = v40;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315650;
      v60[0] = v56;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_10007A4B4(v3, (unint64_t)v2, v60);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2080;
      uint64_t v42 = sub_1000A4470();
      *(void *)(v0 + 16) = sub_10007A4B4(v42, v43, v60);
      sub_1000A4580();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2080;
      uint64_t v44 = sub_1000A4470();
      *(void *)(v0 + 16) = sub_10007A4B4(v44, v45, v60);
      sub_1000A4580();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, type, "Nil image for store audiobook with assetID: %s width: %s height: %s.", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_100027710();
    swift_allocError();
    *uint64_t v46 = 8;
    swift_willThrow();

    goto LABEL_51;
  }
  id v14 = v21;
  double v22 = *(double *)(v0 + 120);
  swift_bridgeObjectRelease();
  [v14 size];
  if (v23 <= v22 && (double v24 = *(double *)(v0 + 112), [v14 size], v25 <= v24))
  {
  }
  else
  {
    [v14 size];
    sub_1000A4530();
    double v27 = v26;
    double v29 = v28;
    id v59 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v26, v28];
    uint64_t v2 = (double *)swift_allocObject();
    *((void *)v2 + 2) = v14;
    v2[3] = v27;
    v2[4] = v29;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_10002793C;
    *(void *)(v3 + 24) = v2;
    *(void *)(v0 + 48) = sub_100027968;
    *(void *)(v0 + 56) = v3;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_100021018;
    *(void *)(v0 + 40) = &unk_1000C7820;
    uint64_t v30 = _Block_copy((const void *)(v0 + 16));
    os_log_type_t v31 = v20;
    id v32 = v14;
    swift_retain();
    swift_release();
    id v14 = [v59 imageWithActions:v30];

    _Block_release(v30);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
LABEL_27:
      sub_10000A9C0((uint64_t)v14, &qword_1000CD6C0);
LABEL_28:
      if (qword_1000CC690 == -1)
      {
LABEL_29:
        uint64_t v33 = sub_1000A3830();
        sub_100010B3C(v33, (uint64_t)qword_1000CD5A8);
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1000A3810();
        os_log_type_t v35 = sub_1000A44B0();
        if (os_log_type_enabled(v34, v35))
        {
          long long v58 = v5;
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          v60[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 16) = sub_10007A4B4(v3, (unint64_t)v2, v60);
          sub_1000A4580();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "Nil media artwork for audiobook with assetID: %s.", v36, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v5 = v58;
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_100027710();
        swift_allocError();
        unsigned char *v37 = 8;
        swift_willThrow();

LABEL_51:
LABEL_52:
        long long v55 = *(uint64_t (**)(void))(v0 + 8);
        return v55();
      }
LABEL_57:
      swift_once();
      goto LABEL_29;
    }
  }
  uint64_t v47 = *(uint64_t (**)(id))(v0 + 8);
  return v47(v14);
}

uint64_t sub_100023960(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 168) = a2;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = a3;
  return _swift_task_switch(sub_100023984, 0, 0);
}

uint64_t sub_100023984()
{
  uint64_t v59 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)(v0 + 144) = v2;
  unint64_t v3 = *(void *)(v1 + 40);
  *(void *)(v0 + 152) = v3;
  uint64_t v4 = qword_1000CC680;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  sub_10000A284(qword_1000D8058, qword_1000D8070);
  if (sub_100053A80(v2, v3, 0))
  {
    if (qword_1000CC690 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1000A3830();
    sub_100010B3C(v5, (uint64_t)qword_1000CD5A8);
    swift_bridgeObjectRetain();
    double v6 = sub_1000A3810();
    os_log_type_t v7 = sub_1000A44D0();
    if (os_log_type_enabled(v6, v7))
    {
      NSString v8 = (uint8_t *)swift_slowAlloc();
      v58[0] = swift_slowAlloc();
      *(_DWORD *)NSString v8 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_10007A4B4(v2, v3, v58);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Found cached untreated thumbnail image for asset: %s.", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_14;
  }
  if (qword_1000CC690 != -1) {
    swift_once();
  }
  uint64_t v57 = v2;
  uint64_t v9 = sub_1000A3830();
  *(void *)(v0 + 160) = sub_100010B3C(v9, (uint64_t)qword_1000CD5A8);
  swift_bridgeObjectRetain_n();
  id v10 = sub_1000A3810();
  os_log_type_t v11 = sub_1000A44D0();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_10007A4B4(v2, v3, v58);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Generating untreated thumbnail image for asset: %s.", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  [*(id *)(v0 + 128) size];
  if (v15 <= 160.0)
  {
    [*(id *)(v0 + 128) size];
    if (v16 <= 160.0)
    {
      id v29 = *(id *)(v0 + 128);
      swift_bridgeObjectRetain_n();
      id v30 = v29;
      os_log_type_t v31 = sub_1000A3810();
      os_log_type_t v32 = sub_1000A44D0();
      if (os_log_type_enabled(v31, v32))
      {
        int v56 = *(unsigned __int8 *)(v0 + 168);
        uint64_t v33 = *(void **)(v0 + 128);
        uint64_t v34 = swift_slowAlloc();
        v58[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136315906;
        os_log_type_t type = v32;
        [v33 size];
        uint64_t v35 = sub_1000A4510();
        *(void *)(v0 + 80) = sub_10007A4B4(v35, v36, v58);
        sub_1000A4580();
        swift_bridgeObjectRelease();

        *(_WORD *)(v34 + 12) = 2080;
        [v33 scale];
        uint64_t v37 = sub_1000A4470();
        *(void *)(v0 + 80) = sub_10007A4B4(v37, v38, v58);
        sub_1000A4580();
        swift_bridgeObjectRelease();

        *(_WORD *)(v34 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 80) = sub_10007A4B4(v57, v3, v58);
        uint64_t v39 = (void *)(v0 + 80);
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 32) = 1024;
        *(_DWORD *)(v0 + 80) = v56;
        sub_1000A4580();
        _os_log_impl((void *)&_mh_execute_header, v31, type, "Using the raw untreated cover. Its current size is %s and scale is %s for asset: %s isAppIconCover: %{BOOL}d.", (uint8_t *)v34, 0x26u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        os_log_type_t v40 = *(void **)(v0 + 128);

        swift_bridgeObjectRelease_n();
        uint64_t v39 = (void *)(v0 + 80);
      }
      uint64_t v41 = (CGImage *)*(id *)(v0 + 128);
      swift_bridgeObjectRetain_n();
      uint64_t v42 = sub_1000A3810();
      os_log_type_t v43 = sub_1000A44D0();
      BOOL v44 = os_log_type_enabled(v42, v43);
      unint64_t v45 = *(void *)(v0 + 152);
      if (v44)
      {
        uint64_t v46 = *(void *)(v0 + 144);
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        v58[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 80) = sub_10007A4B4(v46, v45, v58);
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Caching untreated thumbnail for asset: %s.", v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v48 = *(NSObject **)(v0 + 144);
      unint64_t v49 = *(void *)(v0 + 152);
      int v50 = *(unsigned __int8 *)(v0 + 168);
      sub_100027814((uint64_t)qword_1000D8058, (uint64_t)v39);
      unsigned int v51 = (void (**)(char *, char *))*sub_10000A284(v39, *(void *)(v0 + 104));
      if (v50) {
        uint64_t v53 = 2;
      }
      else {
        uint64_t v53 = 0;
      }
      sub_100054C68(v48, v49, v53, v41, v51);

      swift_bridgeObjectRelease();
      sub_100027878((uint64_t)v39);
LABEL_14:
      id v13 = *(uint64_t (**)(void))(v0 + 8);
      return v13();
    }
  }
  os_log_type_t v17 = *(void **)(v0 + 128);
  swift_bridgeObjectRetain_n();
  id v18 = v17;
  unint64_t v19 = sub_1000A3810();
  os_log_type_t v20 = sub_1000A44D0();
  if (os_log_type_enabled(v19, v20))
  {
    int v55 = *(unsigned __int8 *)(v0 + 168);
    id v21 = *(void **)(v0 + 128);
    uint64_t v22 = swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315650;
    [v21 size];
    uint64_t v23 = sub_1000A4510();
    *(void *)(v0 + 80) = sub_10007A4B4(v23, v24, v58);
    uint64_t v25 = v0 + 80;
    sub_1000A4580();
    swift_bridgeObjectRelease();

    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_10007A4B4(v57, v3, v58);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 1024;
    *(_DWORD *)(v0 + 80) = v55;
    sub_1000A4580();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "About to resize the untreated cover because its current size: %s is larger than the specified size for asset: %s isAppIconCover: %{BOOL}d.", (uint8_t *)v22, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    double v26 = *(void **)(v0 + 128);

    swift_bridgeObjectRelease_n();
    uint64_t v25 = v0 + 80;
  }
  double v27 = *(void **)(v0 + 128);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_1000243E8;
  uint64_t v28 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_100021124;
  *(void *)(v0 + 104) = &unk_1000C77B8;
  *(void *)(v0 + 112) = v28;
  [v27 prepareThumbnailOfSize:v25 completionHandler:160.0, 160.0];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1000243E8()
{
  return _swift_task_switch(sub_1000244C8, 0, 0);
}

uint64_t sub_1000244C8()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = (void *)(v0 + 80);
    id v3 = v1;
    swift_bridgeObjectRetain_n();
    id v4 = v3;
    uint64_t v5 = sub_1000A3810();
    os_log_type_t v6 = sub_1000A44D0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    unint64_t v8 = *(void *)(v0 + 152);
    if (v7)
    {
      uint64_t v30 = *(void *)(v0 + 144);
      int v31 = *(unsigned __int8 *)(v0 + 168);
      uint64_t v9 = swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315906;
      [v4 size];
      uint64_t v10 = sub_1000A4510();
      *(void *)(v0 + 80) = sub_10007A4B4(v10, v11, v33);
      sub_1000A4580();
      swift_bridgeObjectRelease();

      *(_WORD *)(v9 + 12) = 2080;
      [v4 scale];
      uint64_t v12 = sub_1000A4470();
      *(void *)(v0 + 80) = sub_10007A4B4(v12, v13, v33);
      sub_1000A4580();
      swift_bridgeObjectRelease();

      *(_WORD *)(v9 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_10007A4B4(v30, v8, v33);
      uint64_t v2 = (void *)(v0 + 80);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 32) = 1024;
      *(_DWORD *)(v0 + 80) = v31;
      sub_1000A4580();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Done resizing the untreated cover. Its current size is %s and scale is %s for asset: %s isAppIconCover: %{BOOL}d.", (uint8_t *)v9, 0x26u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    double v15 = sub_1000A3810();
    os_log_type_t v16 = sub_1000A44D0();
    BOOL v17 = os_log_type_enabled(v15, v16);
    unint64_t v18 = *(void *)(v0 + 152);
    if (v17)
    {
      os_log_type_t v32 = v2;
      uint64_t v19 = *(void *)(v0 + 144);
      os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v20 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v21 = v19;
      uint64_t v2 = v32;
      *(void *)(v0 + 80) = sub_10007A4B4(v21, v18, v33);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Caching untreated thumbnail for asset: %s.", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v22 = *(NSObject **)(v0 + 144);
    unint64_t v23 = *(void *)(v0 + 152);
    int v24 = *(unsigned __int8 *)(v0 + 168);
    sub_100027814((uint64_t)qword_1000D8058, (uint64_t)v2);
    uint64_t v25 = (void (**)(char *, char *))*sub_10000A284(v2, *(void *)(v0 + 104));
    if (v24) {
      uint64_t v27 = 2;
    }
    else {
      uint64_t v27 = 0;
    }
    sub_100054C68(v22, v23, v27, (CGImage *)v4, v25);

    swift_bridgeObjectRelease();
    sub_100027878((uint64_t)v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100027710();
    swift_allocError();
    *id v14 = 1;
    swift_willThrow();
  }
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_10002495C(uint64_t a1)
{
  v1[19] = a1;
  uint64_t v2 = sub_1000A37C0();
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  sub_100004FDC(&qword_1000CCB30);
  v1[28] = swift_task_alloc();
  uint64_t v3 = sub_1000A3490();
  v1[29] = v3;
  v1[30] = *(void *)(v3 - 8);
  v1[31] = swift_task_alloc();
  uint64_t v4 = sub_1000A3780();
  v1[32] = v4;
  v1[33] = *(void *)(v4 - 8);
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  return _swift_task_switch(sub_100024B9C, 0, 0);
}

uint64_t sub_100024B9C()
{
  long long v95 = v0;
  if (qword_1000CC698 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000A37B0();
  v0[42] = sub_100010B3C(v1, (uint64_t)qword_1000CD5C0);
  sub_1000A3770();
  uint64_t v2 = sub_1000A37A0();
  os_signpost_type_t v3 = sub_1000A4500();
  if (sub_1000A4540())
  {
    uint64_t v4 = v0[40];
    uint64_t v6 = v0[32];
    uint64_t v5 = v0[33];
    BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v8 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, v0[41], v6);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_1000A3760();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v3, v10, "Raw Cover Fetching", "", v9, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    uint64_t v11 = v0[33];

    BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v13 = v0 + 19;
  uint64_t v12 = v0[19];
  uint64_t v15 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[32];
  uint64_t v17 = v0[33];
  v0[43] = v7;
  v0[44] = v8;
  v7(v15, v14, v16);
  sub_1000A37F0();
  swift_allocObject();
  v0[45] = sub_1000A37E0();
  unint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v0[46] = v18;
  v0[47] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  long long v91 = v18;
  v18(v14, v16);
  uint64_t v19 = *(void *)(v12 + 32);
  v0[48] = v19;
  unint64_t v20 = *(void *)(v12 + 40);
  v0[49] = v20;
  uint64_t v21 = qword_1000CC690;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = v0;
  unint64_t v23 = v0 + 18;
  uint64_t v24 = sub_1000A3830();
  uint64_t v92 = (uint64_t)v22;
  v22[50] = sub_100010B3C(v24, (uint64_t)qword_1000CD5A8);
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_1000A3810();
  os_log_type_t v26 = sub_1000A44D0();
  uint64_t v93 = v19;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v94[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    swift_bridgeObjectRetain();
    *unint64_t v23 = sub_10007A4B4(v19, v20, v94);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Fetching raw cover for assetID: %s.", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v28 = v13 + 21;
  if (qword_1000CC680 != -1) {
    swift_once();
  }
  sub_10000A284(qword_1000D8058, qword_1000D8070);
  if (sub_100053A80(v93, v20, 0))
  {
    swift_bridgeObjectRetain();
    id v29 = sub_1000A3810();
    os_log_type_t v30 = sub_1000A44D0();
    unsigned __int8 v89 = v13 + 21;
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = v20;
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v32 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v92 + 136) = sub_10007A4B4(v93, v31, v94);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Found cached raw cover for assetID: %s.", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    os_log_type_t v40 = sub_1000A37A0();
    sub_1000A37D0();
    os_signpost_type_t v41 = sub_1000A44F0();
    if (sub_1000A4540())
    {
      uint64_t v42 = *(void *)(v92 + 200);
      uint64_t v43 = *(void *)(v92 + 160);
      uint64_t v44 = *(void *)(v92 + 168);
      swift_retain();
      sub_1000A3800();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v44 + 88))(v42, v43) == enum case for OSSignpostError.doubleEnd(_:))
      {
        unint64_t v45 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v92 + 168) + 8))(*(void *)(v92 + 200), *(void *)(v92 + 160));
        unint64_t v45 = "";
      }
      uint64_t v59 = *(void *)(v92 + 272);
      uint64_t v60 = *(void *)(v92 + 256);
      v7(*(void *)(v92 + 320), v59, v60);
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      os_signpost_id_t v62 = sub_1000A3760();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v40, v41, v62, "Raw Cover Fetching", v45, v61, 2u);
      swift_slowDealloc();

      v91(v59, v60);
      uint64_t v46 = v89;
    }
    else
    {
      uint64_t v46 = (void *)(v92 + 272);
    }
LABEL_35:
    (*(void (**)(void, void))(v92 + 368))(*v46, *(void *)(v92 + 256));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v63 = *(uint64_t (**)(void))(v92 + 8);
    return v63();
  }
  uint64_t v33 = *v13;
  unint64_t v34 = *(void *)(*v13 + 72);
  if (v34)
  {
    uint64_t v35 = *(void *)(v33 + 64);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v36 = sub_1000A3810();
    os_log_type_t v37 = sub_1000A44D0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v92 + 120) = sub_10007A4B4(v35, v34, v94);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = v35;
      *(void *)(v92 + 128) = sub_10007A4B4(v93, v20, v94);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Fetching a raw cover for url string: %s, assetID: %s.", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      uint64_t v39 = v35;
    }
    uint64_t v51 = *(void *)(v92 + 232);
    uint64_t v52 = *(void *)(v92 + 240);
    uint64_t v53 = *(void *)(v92 + 224);
    sub_1000A3470();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v53, 1, v51) == 1)
    {
      uint64_t v54 = v39;
      sub_10000A9C0(*(void *)(v92 + 224), &qword_1000CCB30);
      uint64_t v55 = v93;
LABEL_41:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v69 = sub_1000A3810();
      unint64_t v70 = v20;
      os_log_type_t v71 = sub_1000A44D0();
      if (os_log_type_enabled(v69, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        v94[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v92 + 96) = sub_10007A4B4(v93, v70, v94);
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v72 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v92 + 104) = sub_10007A4B4(v54, v34, v94);
        uint64_t v55 = v93;
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v69, v71, "Not a file URL for assetID: %s, url: %s. Now using URLSession to download the book cover.", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v73 = (void *)swift_task_alloc();
      *(void *)(v92 + 432) = v73;
      void *v73 = v92;
      v73[1] = sub_1000263A0;
      return sub_100021CE0(v54, v34, v55, v70, 160.0, 160.0);
    }
    (*(void (**)(void, void, void))(*(void *)(v92 + 240) + 32))(*(void *)(v92 + 248), *(void *)(v92 + 224), *(void *)(v92 + 232));
    uint64_t v55 = v93;
    if ((sub_1000A3400() & 1) == 0)
    {
      uint64_t v54 = v39;
      (*(void (**)(void, void))(*(void *)(v92 + 240) + 8))(*(void *)(v92 + 248), *(void *)(v92 + 232));
      goto LABEL_41;
    }
    swift_bridgeObjectRetain_n();
    int v56 = sub_1000A3810();
    os_log_type_t v57 = sub_1000A44D0();
    if (os_log_type_enabled(v56, v57))
    {
      long long v58 = (uint8_t *)swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      *(_DWORD *)long long v58 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v92 + 112) = sub_10007A4B4(v93, v20, v94);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Using QuickLook to generate a thumbnail with assetID: %s.", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v83 = (void *)swift_task_alloc();
    *(void *)(v92 + 408) = v83;
    *uint64_t v83 = v92;
    v83[1] = sub_100025E94;
    uint64_t v84 = *(void *)(v92 + 248);
    return sub_100021368(v84, v93, v20, 160.0, 160.0);
  }
  else
  {
    char v47 = sub_10001A37C();
    swift_bridgeObjectRetain();
    if ((v47 & 1) == 0)
    {
      long long v65 = sub_1000A3810();
      os_log_type_t v66 = sub_1000A44B0();
      uint64_t v90 = v28;
      if (os_log_type_enabled(v65, v66))
      {
        unint64_t v67 = v20;
        long long v68 = (uint8_t *)swift_slowAlloc();
        v94[0] = swift_slowAlloc();
        *(_DWORD *)long long v68 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v92 + 40) = sub_10007A4B4(v93, v67, v94);
        sub_1000A4580();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "nil cover URL for assetID: %s.", v68, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_100027710();
      swift_allocError();
      unsigned char *v76 = 0;
      swift_willThrow();
      uint64_t v77 = sub_1000A37A0();
      sub_1000A37D0();
      os_signpost_type_t v78 = sub_1000A44F0();
      if (sub_1000A4540())
      {
        uint64_t v79 = *(void *)(v92 + 216);
        uint64_t v81 = *(void *)(v92 + 160);
        uint64_t v80 = *(void *)(v92 + 168);
        swift_retain();
        sub_1000A3800();
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v80 + 88))(v79, v81) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v82 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(void, void))(*(void *)(v92 + 168) + 8))(*(void *)(v92 + 216), *(void *)(v92 + 160));
          uint64_t v82 = "";
        }
        uint64_t v85 = *(void *)(v92 + 288);
        uint64_t v86 = *(void *)(v92 + 256);
        v7(*(void *)(v92 + 320), v85, v86);
        uint64_t v87 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v87 = 0;
        os_signpost_id_t v88 = sub_1000A3760();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v77, v78, v88, "Raw Cover Fetching", v82, v87, 2u);
        swift_slowDealloc();

        v91(v85, v86);
        uint64_t v46 = v90;
      }
      else
      {
        uint64_t v46 = (void *)(v92 + 288);
      }
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1000A3810();
    os_log_type_t v49 = sub_1000A44D0();
    if (os_log_type_enabled(v48, v49))
    {
      int v50 = (uint8_t *)swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      *(_DWORD *)int v50 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v92 + 88) = sub_10007A4B4(v93, v20, v94);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Attempting to fetch raw store audiobook cover from MediaLibrary for assetID: %s.", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v74 = (int64x2_t *)swift_task_alloc();
    *(void *)(v92 + 456) = v74;
    v74->i64[0] = v92;
    v74->i64[1] = (uint64_t)sub_100026860;
    uint64_t v75 = *(void *)(v92 + 152);
    v74[7] = vdupq_n_s64(0x4064000000000000uLL);
    v74[6].i64[1] = v75;
    return _swift_task_switch(sub_100022D04, 0, 0);
  }
}

uint64_t sub_100025E94(uint64_t a1, char a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 416) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    BOOL v7 = sub_1000260E0;
  }
  else
  {
    *(unsigned char *)(v6 + 504) = a2 & 1;
    *(void *)(v6 + 424) = a1;
    BOOL v7 = sub_100025FD8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100025FD8()
{
  uint64_t v1 = *(void *)(v0 + 424);
  (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
  *(void *)(v0 + 48) = v1;
  char v2 = *(unsigned char *)(v0 + 504);
  swift_beginAccess();
  os_signpost_type_t v3 = *(void **)(v0 + 48);
  *(void *)(v0 + 480) = v3;
  unint64_t v8 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_1000CD688 + dword_1000CD688);
  id v4 = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100026EA8;
  uint64_t v6 = *(void *)(v0 + 152);
  return v8((uint64_t)v4, v2, v6);
}

uint64_t sub_1000260E0()
{
  (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
  uint64_t v1 = sub_1000A37A0();
  sub_1000A37D0();
  os_signpost_type_t v2 = sub_1000A44F0();
  if (sub_1000A4540())
  {
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 168);
    swift_retain();
    sub_1000A3800();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 160));
      uint64_t v6 = "";
    }
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    BOOL v7 = (void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 256);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 344))(*(void *)(v0 + 320), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_1000A3760();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v12, "Raw Cover Fetching", v6, v11, 2u);
    swift_slowDealloc();

    v8(v9, v10);
  }
  else
  {
    BOOL v7 = (void *)(v0 + 312);
  }
  (*(void (**)(void, void))(v0 + 368))(*v7, *(void *)(v0 + 256));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1000263A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1000265B4;
  }
  else
  {
    *(void *)(v4 + 448) = a1;
    uint64_t v5 = sub_1000264D0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000264D0()
{
  v0[6] = v0[56];
  swift_beginAccess();
  uint64_t v1 = (void *)v0[6];
  v0[60] = v1;
  uint64_t v6 = (char *)&dword_1000CD688 + dword_1000CD688;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[61] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100026EA8;
  uint64_t v4 = v0[19];
  return ((uint64_t (*)(id, void, uint64_t))v6)(v2, 0, v4);
}

uint64_t sub_1000265B4()
{
  uint64_t v1 = sub_1000A37A0();
  sub_1000A37D0();
  os_signpost_type_t v2 = sub_1000A44F0();
  if (sub_1000A4540())
  {
    uint64_t v3 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 168);
    swift_retain();
    sub_1000A3800();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 160));
      uint64_t v6 = "";
    }
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v7 = (void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 304);
    uint64_t v10 = *(void *)(v0 + 256);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 344))(*(void *)(v0 + 320), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_1000A3760();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v12, "Raw Cover Fetching", v6, v11, 2u);
    swift_slowDealloc();

    v8(v9, v10);
  }
  else
  {
    uint64_t v7 = (void *)(v0 + 304);
  }
  (*(void (**)(void, void))(v0 + 368))(*v7, *(void *)(v0 + 256));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100026860(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 464) = a1;
  *(void *)(v3 + 472) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100026BFC;
  }
  else
  {
    uint64_t v4 = sub_10002697C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10002697C()
{
  uint64_t v19 = v0;
  uint64_t v1 = (void *)v0[58];
  v0[6] = v1;
  swift_bridgeObjectRetain_n();
  id v2 = v1;
  uint64_t v3 = sub_1000A3810();
  os_log_type_t v4 = sub_1000A44D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (void *)v0[58];
    uint64_t v7 = v0[48];
    unint64_t v6 = v0[49];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[9] = sub_10007A4B4(v7, v6, &v18);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    [v5 size];
    uint64_t v9 = sub_1000A4510();
    v0[10] = sub_10007A4B4(v9, v10, &v18);
    sub_1000A4580();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received raw store audiobook cover for %s of size %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = (void *)v0[58];
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  os_signpost_id_t v12 = (void *)v0[6];
  v0[60] = v12;
  uint64_t v17 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_1000CD688 + dword_1000CD688);
  id v13 = v12;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[61] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100026EA8;
  uint64_t v15 = v0[19];
  return v17((uint64_t)v13, 0, v15);
}

uint64_t sub_100026BFC()
{
  uint64_t v1 = sub_1000A37A0();
  sub_1000A37D0();
  os_signpost_type_t v2 = sub_1000A44F0();
  if (sub_1000A4540())
  {
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 160);
    swift_retain();
    sub_1000A3800();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == enum case for OSSignpostError.doubleEnd(_:))
    {
      unint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
      unint64_t v6 = "";
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v7 = (void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 256);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 344))(*(void *)(v0 + 320), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_1000A3760();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v12, "Raw Cover Fetching", v6, v11, 2u);
    swift_slowDealloc();

    v8(v9, v10);
  }
  else
  {
    uint64_t v7 = (void *)(v0 + 296);
  }
  (*(void (**)(void, void))(v0 + 368))(*v7, *(void *)(v0 + 256));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100026EA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100027278;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 480);
    swift_bridgeObjectRelease();

    uint64_t v3 = sub_100026FCC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100026FCC()
{
  uint64_t v1 = sub_1000A37A0();
  sub_1000A37D0();
  os_signpost_type_t v2 = sub_1000A44F0();
  if (sub_1000A4540())
  {
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 168);
    swift_retain();
    sub_1000A3800();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 160));
      uint64_t v6 = "";
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v7 = (void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 256);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 344))(*(void *)(v0 + 320), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_1000A3760();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v12, "Raw Cover Fetching", v6, v11, 2u);
    swift_slowDealloc();

    v8(v9, v10);
  }
  else
  {
    uint64_t v7 = (void *)(v0 + 280);
  }
  (*(void (**)(void, void))(v0 + 368))(*v7, *(void *)(v0 + 256));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100027278()
{
  uint64_t v23 = v0;

  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A3810();
  os_log_type_t v2 = sub_1000A44D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 384);
    unint64_t v4 = *(void *)(v0 + 392);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_10007A4B4(v3, v4, &v22);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v7;
    sub_1000A4580();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to cache untreated cover for asset: %s, error: %@", (uint8_t *)v5, 0x16u);
    sub_100004FDC(&qword_1000CD690);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
  }

  uint64_t v8 = sub_1000A37A0();
  sub_1000A37D0();
  os_signpost_type_t v9 = sub_1000A44F0();
  if (sub_1000A4540())
  {
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 168);
    swift_retain();
    sub_1000A3800();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v10, v11) == enum case for OSSignpostError.doubleEnd(_:))
    {
      id v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 160));
      id v13 = "";
    }
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v14 = (void *)(v0 + 320);
    uint64_t v16 = *(void *)(v0 + 280);
    uint64_t v17 = *(void *)(v0 + 256);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 344))(*(void *)(v0 + 320), v16, v17);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    os_signpost_id_t v19 = sub_1000A3760();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, v9, v19, "Raw Cover Fetching", v13, v18, 2u);
    swift_slowDealloc();

    v15(v16, v17);
  }
  else
  {
    uint64_t v14 = (void *)(v0 + 280);
  }
  (*(void (**)(void, void))(v0 + 368))(*v14, *(void *)(v0 + 256));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

unint64_t sub_100027710()
{
  unint64_t result = qword_1000CD678;
  if (!qword_1000CD678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000CD678);
  }
  return result;
}

uint64_t sub_100027764(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000277BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100027814(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100027878(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000278C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100027904()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_10002793C()
{
  return [*(id *)(v0 + 16) drawInRect:0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32)];
}

uint64_t sub_100027958()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100027968()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100027990(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000279A0()
{
  return swift_release();
}

uint64_t getEnumTagSinglePayload for WidgetImageManager.FetchError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetImageManager.FetchError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100027B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

unsigned char *sub_100027B2C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetImageManager.FetchError()
{
  return &type metadata for WidgetImageManager.FetchError;
}

unint64_t sub_100027B48()
{
  unint64_t result = qword_1000CD6D0;
  if (!qword_1000CD6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD6D0);
  }
  return result;
}

uint64_t destroy for AudioPlayButton()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioPlayButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioPlayButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AudioPlayButton(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudioPlayButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioPlayButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioPlayButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioPlayButton()
{
  return &type metadata for AudioPlayButton;
}

uint64_t sub_100027DB4()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_100027DD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100027DE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = sub_1000A3B90();
  uint64_t v89 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v121 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3C90();
  uint64_t v119 = *(void *)(v5 - 8);
  uint64_t v120 = v5;
  __chkstk_darwin(v5);
  long long v118 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000A3960();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  char v110 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CD6E0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v80 - v12;
  uint64_t v14 = sub_1000A3560();
  uint64_t v15 = *(void **)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v80 - v19;
  uint64_t v86 = sub_100004FDC(&qword_1000CD6E8);
  uint64_t v21 = __chkstk_darwin(v86);
  uint64_t v87 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v91 = (uint64_t)&v80 - v23;
  uint64_t v95 = sub_1000A3970();
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v92 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100004FDC(&qword_1000CD6F0);
  uint64_t v96 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  long long v94 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100004FDC(&qword_1000CD6F8);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  long long v97 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004FDC(&qword_1000CD700);
  uint64_t v27 = __chkstk_darwin(v113);
  uint64_t v117 = (uint64_t)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v101 = (char *)&v80 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v112 = (char *)&v80 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  char v111 = (char *)&v80 - v34;
  __chkstk_darwin(v33);
  uint64_t v116 = (uint64_t)&v80 - v35;
  sub_1000A3F50();
  uint64_t v115 = sub_1000A3F80();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v109 = v126;
  int v108 = v127;
  uint64_t v107 = v128;
  int v106 = v129;
  uint64_t v105 = v130;
  uint64_t v104 = v131;
  uint64_t v88 = a1;
  sub_100028B14(&v122);
  uint64_t v84 = v125;
  uint64_t v85 = v124;
  uint64_t v83 = sub_10000A284(&v122, v124);
  sub_1000A3510();
  sub_1000A3510();
  sub_100028D34(&qword_1000CD708, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_1000A4260();
  if (result)
  {
    uint64_t v37 = *(int *)(v8 + 48);
    uint64_t v81 = v8;
    uint64_t v38 = v20;
    uint64_t v39 = v18;
    os_log_type_t v40 = &v13[v37];
    uint64_t v82 = v3;
    os_signpost_type_t v41 = (void (*)(char *, char *, uint64_t))v15[4];
    v41(v13, v38, v14);
    uint64_t v80 = v40;
    v41(v40, v39, v14);
    uint64_t v42 = &v11[*(int *)(v8 + 48)];
    uint64_t v43 = (void (*)(char *, char *, uint64_t))v15[2];
    v43(v11, v13, v14);
    v43(v42, v40, v14);
    uint64_t v44 = (uint64_t)v87;
    v41(v87, v11, v14);
    unint64_t v45 = (void (*)(char *, uint64_t))v15[1];
    v45(v42, v14);
    uint64_t v46 = &v11[*(int *)(v81 + 48)];
    v41(v11, v13, v14);
    v41(v46, v80, v14);
    v41((char *)(v44 + *(int *)(v86 + 36)), v46, v14);
    v45(v11, v14);
    sub_10000A95C(v44, v91, &qword_1000CD6E8);
    char v47 = (unsigned int *)&enum case for PlaybackButton.State.playing(_:);
    uint64_t v48 = v88;
    uint64_t v49 = *(unsigned char *)(v88 + 16) & 1;
    if ((*(unsigned char *)(v88 + 16) & 1) == 0) {
      char v47 = (unsigned int *)&enum case for PlaybackButton.State.unplayed(_:);
    }
    uint64_t v50 = (*(uint64_t (**)(char *, void, uint64_t))(v98 + 104))(v110, *v47, v100);
    uint64_t v51 = v85;
    __chkstk_darwin(v50);
    (*(void (**)(char *, void *, uint64_t))(v53 + 16))((char *)&v80 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0), v83, v51);
    uint64_t v54 = v92;
    sub_1000A3950();
    uint64_t v55 = sub_100028D34(&qword_1000CD710, (void (*)(uint64_t))&type metadata accessor for PlaybackButton);
    int v56 = v94;
    uint64_t v57 = v95;
    sub_1000A3E70();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v54, v57);
    sub_100027878((uint64_t)&v122);
    long long v58 = v118;
    sub_1000A3C60();
    uint64_t v122 = v57;
    uint64_t v123 = v55;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v60 = v97;
    uint64_t v61 = v99;
    sub_1000A3F30();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v58, v120);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v56, v61);
    os_signpost_id_t v62 = v121;
    sub_1000A3B80();
    uint64_t v122 = v61;
    uint64_t v123 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v63 = (uint64_t)v101;
    uint64_t v64 = v103;
    sub_1000A3F40();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v62, v82);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v60, v64);
    uint64_t v65 = *(void *)(v48 + 24);
    uint64_t v66 = *(void *)(v48 + 32);
    uint64_t v122 = sub_1000290AC(v49, v65, v66);
    uint64_t v123 = v67;
    sub_10000A504();
    uint64_t v68 = (uint64_t)v112;
    sub_1000A39A0();
    swift_bridgeObjectRelease();
    sub_1000294A4(v63);
    sub_100004FDC(&qword_1000CCB98);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_1000A8D50;
    *(void *)(v69 + 32) = sub_100028D7C();
    *(void *)(v69 + 40) = v70;
    *(void *)(v69 + 48) = sub_1000290AC(v49, v65, v66);
    *(void *)(v69 + 56) = v71;
    uint64_t v72 = (uint64_t)v111;
    sub_1000A39D0();
    swift_bridgeObjectRelease();
    sub_1000294A4(v68);
    uint64_t v73 = v116;
    sub_10000A95C(v72, v116, &qword_1000CD700);
    uint64_t v74 = v117;
    sub_100029504(v73, v117);
    uint64_t v75 = v115;
    uint64_t v76 = v90;
    *uint64_t v90 = KeyPath;
    v76[1] = v75;
    v76[2] = v109;
    *((unsigned char *)v76 + 24) = v108;
    v76[4] = v107;
    *((unsigned char *)v76 + 40) = v106;
    uint64_t v77 = v104;
    v76[6] = v105;
    v76[7] = v77;
    os_signpost_type_t v78 = v76;
    uint64_t v79 = sub_100004FDC(&qword_1000CD718);
    sub_100029504(v74, (uint64_t)v78 + *(int *)(v79 + 48));
    swift_retain();
    swift_retain();
    sub_1000294A4(v73);
    sub_1000294A4(v74);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100028B14@<X0>(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 16))
  {
    sub_100004FDC(&qword_1000CD4B8);
    sub_1000A2CF0();
    memset(v23, 0, 40);
    sub_1000A2CE0();
    uint64_t v13 = sub_1000A2CB0();
    a1[3] = (uint64_t)&type metadata for PauseCurrentAudiobookIntent;
    unint64_t result = sub_10002972C();
    a1[4] = result;
    *a1 = v13;
  }
  else
  {
    if (*(unsigned char *)(v1 + 17) == 1)
    {
      uint64_t v3 = *(void *)v1;
      uint64_t v4 = *(void *)(v1 + 8);
      uint64_t v6 = *(void *)(v1 + 24);
      uint64_t v5 = *(void *)(v1 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100061A44(v3, v4, v6, v5, 0, 0, 0, 0, &v16, 1u);
      *(void *)&v23[0] = v16;
      *(_OWORD *)((char *)v23 + 8) = v17;
      *(_OWORD *)((char *)&v23[1] + 8) = v18;
      *(_OWORD *)((char *)&v23[2] + 8) = v19;
      *((void *)&v23[3] + 1) = v20;
      long long v24 = v21;
      char v25 = v22;
      sub_100029614((uint64_t)&v16);
      uint64_t v7 = sub_100062204(1, (uint64_t)v23);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      a1[3] = (uint64_t)&type metadata for PlayAudiobookIntent;
      a1[4] = sub_1000295C0();
      unint64_t result = sub_1000296A0((uint64_t)&v16);
    }
    else
    {
      char v25 = 0;
      long long v24 = 0u;
      memset(v23, 0, sizeof(v23));
      uint64_t v7 = sub_100062204(0, (uint64_t)v23);
      uint64_t v9 = v14;
      uint64_t v11 = v15;
      a1[3] = (uint64_t)&type metadata for PlayAudiobookIntent;
      unint64_t result = sub_1000295C0();
      a1[4] = result;
    }
    *a1 = v7;
    a1[1] = v9;
    a1[2] = v11;
  }
  return result;
}

uint64_t sub_100028CD0@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v7[0] = *(_OWORD *)v1;
  v7[1] = v3;
  uint64_t v8 = *(void *)(v1 + 32);
  *a1 = sub_1000A4070();
  a1[1] = v4;
  uint64_t v5 = sub_100004FDC(&qword_1000CD6D8);
  return sub_100027DE8((uint64_t)v7, (uint64_t *)((char *)a1 + *(int *)(v5 + 44)));
}

uint64_t sub_100028D34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100028D7C()
{
  v17[0] = sub_1000A3600();
  uint64_t v0 = *(void *)(v17[0] - 8);
  uint64_t v1 = __chkstk_darwin(v17[0]);
  long long v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)v17 - v4;
  uint64_t v6 = sub_1000A42F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v17 - v11;
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v14 = v17[0];
  (*(void (**)(char *, char *, void))(v0 + 16))(v3, v5, v17[0]);
  uint64_t v15 = sub_1000A4360();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v5, v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v15;
}

uint64_t sub_1000290AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = sub_1000A3600();
  uint64_t v5 = *(void *)(v26 - 8);
  uint64_t v6 = __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_1000A42F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v24 - v16;
  if (a3)
  {
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    swift_bridgeObjectRetain();
    sub_1000A4280();
    sub_1000A35D0();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v19 = v26;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v26);
    sub_1000A4360();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v19);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    sub_100004FDC(&qword_1000CD720);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1000A8E80;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_10002956C();
    uint64_t v21 = v25;
    *(void *)(v20 + 32) = v24;
    *(void *)(v20 + 40) = v21;
    uint64_t v22 = sub_1000A4310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    return sub_100028D7C();
  }
}

uint64_t sub_1000294A4(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CD700);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100029504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CD700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10002956C()
{
  unint64_t result = qword_1000CD728;
  if (!qword_1000CD728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD728);
  }
  return result;
}

unint64_t sub_1000295C0()
{
  unint64_t result = qword_1000CD730;
  if (!qword_1000CD730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD730);
  }
  return result;
}

uint64_t sub_100029614(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000296A0(uint64_t a1)
{
  return a1;
}

unint64_t sub_10002972C()
{
  unint64_t result = qword_1000CD738;
  if (!qword_1000CD738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD738);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaybackMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002984CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackMode()
{
  return &type metadata for PlaybackMode;
}

unint64_t sub_100029888()
{
  unint64_t result = qword_1000CD740;
  if (!qword_1000CD740)
  {
    sub_100008B14(&qword_1000CD748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD740);
  }
  return result;
}

unint64_t sub_1000298E8()
{
  unint64_t result = qword_1000CD750;
  if (!qword_1000CD750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD750);
  }
  return result;
}

uint64_t *sub_10002993C(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000A38E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(_DWORD *)((char *)v4 + v13) = *(_DWORD *)((char *)a2 + v13);
    uint64_t v14 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100029A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_release();
}

uint64_t sub_100029B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100029C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100029DAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100029EB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_release();
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_100029FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100029FE0);
}

uint64_t sub_100029FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A38E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000A4090();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10002A0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002A108);
}

uint64_t sub_10002A108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000A38E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1000A4090();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SmallEmptyStateView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CD7B0);
}

uint64_t sub_10002A238()
{
  uint64_t result = sub_1000A38E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A4090();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10002A330(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_100011214(*(void *)a2, v8, v9, v10, v11);
    *uint64_t v4 = v7;
    v4[1] = v8;
    v4[2] = v9;
    v4[3] = v10;
    *((unsigned char *)v4 + 32) = v11;
    uint64_t v12 = a3[5];
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)v4 + v17;
    uint64_t v20 = a2 + v17;
    uint64_t v21 = *(void *)(v20 + 8);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    v19[16] = *(unsigned char *)(v20 + 16);
    *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
    uint64_t v22 = *(void *)(v20 + 48);
    *((void *)v19 + 5) = *(void *)(v20 + 40);
    *((void *)v19 + 6) = v22;
    v19[56] = *(unsigned char *)(v20 + 56);
    uint64_t v23 = *(void *)(v20 + 72);
    *((void *)v19 + 8) = *(void *)(v20 + 64);
    *((void *)v19 + 9) = v23;
    uint64_t v24 = *(void **)(v20 + 80);
    uint64_t v25 = *(void **)(v20 + 88);
    *((void *)v19 + 10) = v24;
    *((void *)v19 + 11) = v25;
    uint64_t v26 = *(void *)(v20 + 104);
    *((void *)v19 + 12) = *(void *)(v20 + 96);
    *((void *)v19 + 13) = v26;
    *((_WORD *)v19 + 56) = *(_WORD *)(v20 + 112);
    uint64_t v27 = *(void *)(v20 + 128);
    uint64_t v28 = a2 + v18;
    uint64_t v29 = (char *)v4 + v18;
    *((void *)v19 + 15) = *(void *)(v20 + 120);
    *((void *)v19 + 16) = v27;
    uint64_t v30 = sub_1000A38E0();
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v24;
    id v32 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39(v29, v28, v30);
    uint64_t v33 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
    uint64_t v34 = v33[5];
    uint64_t v35 = &v29[v34];
    uint64_t v36 = v28 + v34;
    uint64_t v37 = sub_1000A4090();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    *(void *)&v29[v33[6]] = *(void *)(v28 + v33[6]);
    *(void *)&v29[v33[7]] = *(void *)(v28 + v33[7]);
    *(void *)&v29[v33[8]] = *(void *)(v28 + v33[8]);
    *(_DWORD *)&v29[v33[9]] = *(_DWORD *)(v28 + v33[9]);
    *(void *)&v29[v33[10]] = *(void *)(v28 + v33[10]);
    *(void *)&v29[v33[11]] = *(void *)(v28 + v33[11]);
    *(void *)&v29[v33[12]] = *(void *)(v28 + v33[12]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10002A614(uint64_t a1, int *a2)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + a2[5];
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for SmallEmptyStateView.ViewConfiguration(0) + 20);
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return swift_release();
}

uint64_t sub_10002A7A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = a3[5];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
  uint64_t v20 = *(void *)(v18 + 48);
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  *(void *)(v17 + 48) = v20;
  *(unsigned char *)(v17 + 56) = *(unsigned char *)(v18 + 56);
  uint64_t v21 = *(void *)(v18 + 72);
  *(void *)(v17 + 64) = *(void *)(v18 + 64);
  *(void *)(v17 + 72) = v21;
  uint64_t v22 = *(void **)(v18 + 80);
  uint64_t v23 = *(void **)(v18 + 88);
  *(void *)(v17 + 80) = v22;
  *(void *)(v17 + 88) = v23;
  uint64_t v24 = *(void *)(v18 + 104);
  *(void *)(v17 + 96) = *(void *)(v18 + 96);
  *(void *)(v17 + 104) = v24;
  *(_WORD *)(v17 + 112) = *(_WORD *)(v18 + 112);
  uint64_t v25 = *(void *)(v18 + 128);
  uint64_t v26 = a2 + v16;
  uint64_t v27 = a1 + v16;
  *(void *)(v17 + 120) = *(void *)(v18 + 120);
  *(void *)(v17 + 128) = v25;
  uint64_t v28 = sub_1000A38E0();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v29 = v22;
  id v30 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37(v27, v26, v28);
  id v31 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = v27 + v32;
  uint64_t v34 = v26 + v32;
  uint64_t v35 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  *(void *)(v27 + v31[6]) = *(void *)(v26 + v31[6]);
  *(void *)(v27 + v31[7]) = *(void *)(v26 + v31[7]);
  *(void *)(v27 + v31[8]) = *(void *)(v26 + v31[8]);
  *(_DWORD *)(v27 + v31[9]) = *(_DWORD *)(v26 + v31[9]);
  *(void *)(v27 + v31[10]) = *(void *)(v26 + v31[10]);
  *(void *)(v27 + v31[11]) = *(void *)(v26 + v31[11]);
  *(void *)(v27 + v31[12]) = *(void *)(v26 + v31[12]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10002AA44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_10000A4F8(v11, v12, v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[5];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_10000A9C0(a1 + v16, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)(a2 + v20);
  uint64_t v23 = *(void *)(a2 + v20 + 8);
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  *(void *)(v21 + 8) = v23;
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  *(void *)(v21 + 40) = *(void *)(v22 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v22 + 48);
  *(unsigned char *)(v21 + 56) = *(unsigned char *)(v22 + 56);
  *(void *)(v21 + 48) = v24;
  *(void *)(v21 + 64) = *(void *)(v22 + 64);
  *(void *)(v21 + 72) = *(void *)(v22 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void **)(v21 + 80);
  uint64_t v26 = *(void **)(v22 + 80);
  *(void *)(v21 + 80) = v26;
  id v27 = v26;

  uint64_t v28 = *(void **)(v22 + 88);
  id v29 = *(void **)(v21 + 88);
  *(void *)(v21 + 88) = v28;
  id v30 = v28;

  *(void *)(v21 + 96) = *(void *)(v22 + 96);
  *(void *)(v21 + 104) = *(void *)(v22 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v21 + 112) = *(unsigned char *)(v22 + 112);
  *(unsigned char *)(v21 + 113) = *(unsigned char *)(v22 + 113);
  *(void *)(v21 + 120) = *(void *)(v22 + 120);
  *(void *)(v21 + 128) = *(void *)(v22 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
  uint64_t v36 = v35[5];
  uint64_t v37 = v32 + v36;
  uint64_t v38 = v33 + v36;
  uint64_t v39 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  *(void *)(v32 + v35[6]) = *(void *)(v33 + v35[6]);
  *(void *)(v32 + v35[7]) = *(void *)(v33 + v35[7]);
  swift_retain();
  swift_release();
  *(void *)(v32 + v35[8]) = *(void *)(v33 + v35[8]);
  *(_DWORD *)(v32 + v35[9]) = *(_DWORD *)(v33 + v35[9]);
  *(void *)(v32 + v35[10]) = *(void *)(v33 + v35[10]);
  swift_retain();
  swift_release();
  *(void *)(v32 + v35[11]) = *(void *)(v33 + v35[11]);
  *(void *)(v32 + v35[12]) = *(void *)(v33 + v35[12]);
  return a1;
}

uint64_t sub_10002AD74(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000A4130();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 112);
  *(_OWORD *)(v14 + 96) = *(_OWORD *)(v15 + 96);
  *(_OWORD *)(v14 + 112) = v16;
  *(void *)(v14 + 128) = *(void *)(v15 + 128);
  long long v17 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v17;
  long long v18 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(v14 + 80) = v18;
  long long v19 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v19;
  uint64_t v20 = a1 + v13;
  uint64_t v21 = a2 + v13;
  uint64_t v22 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
  uint64_t v24 = v23[5];
  uint64_t v25 = v20 + v24;
  uint64_t v26 = v21 + v24;
  uint64_t v27 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  *(void *)(v20 + v23[6]) = *(void *)(v21 + v23[6]);
  *(void *)(v20 + v23[7]) = *(void *)(v21 + v23[7]);
  *(void *)(v20 + v23[8]) = *(void *)(v21 + v23[8]);
  *(_DWORD *)(v20 + v23[9]) = *(_DWORD *)(v21 + v23[9]);
  *(void *)(v20 + v23[10]) = *(void *)(v21 + v23[10]);
  *(void *)(v20 + v23[11]) = *(void *)(v21 + v23[11]);
  *(void *)(v20 + v23[12]) = *(void *)(v21 + v23[12]);
  return a1;
}

uint64_t sub_10002AF80(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_10000A4F8(v7, v8, v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v13 = a3[5];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_10000A9C0(a1 + v13, &qword_1000CCAD8);
    uint64_t v16 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000A4130();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(a2 + v18 + 16);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(a2 + v18 + 24);
  *(void *)(v19 + 40) = *(void *)(a2 + v18 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  *(unsigned char *)(v19 + 56) = *(unsigned char *)(v20 + 56);
  uint64_t v21 = *(void *)(v20 + 72);
  *(void *)(v19 + 64) = *(void *)(v20 + 64);
  *(void *)(v19 + 72) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void **)(v19 + 80);
  *(void *)(v19 + 80) = *(void *)(v20 + 80);

  uint64_t v23 = *(void **)(v19 + 88);
  *(void *)(v19 + 88) = *(void *)(v20 + 88);

  uint64_t v24 = *(void *)(v20 + 104);
  *(void *)(v19 + 96) = *(void *)(v20 + 96);
  *(void *)(v19 + 104) = v24;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 112) = *(unsigned char *)(v20 + 112);
  *(unsigned char *)(v19 + 113) = *(unsigned char *)(v20 + 113);
  uint64_t v25 = *(void *)(v20 + 128);
  *(void *)(v19 + 120) = *(void *)(v20 + 120);
  *(void *)(v19 + 128) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  id v30 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = v27 + v31;
  uint64_t v33 = v28 + v31;
  uint64_t v34 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  *(void *)(v27 + v30[6]) = *(void *)(v28 + v30[6]);
  *(void *)(v27 + v30[7]) = *(void *)(v28 + v30[7]);
  swift_release();
  *(void *)(v27 + v30[8]) = *(void *)(v28 + v30[8]);
  *(_DWORD *)(v27 + v30[9]) = *(_DWORD *)(v28 + v30[9]);
  *(void *)(v27 + v30[10]) = *(void *)(v28 + v30[10]);
  swift_release();
  *(void *)(v27 + v30[11]) = *(void *)(v28 + v30[11]);
  *(void *)(v27 + v30[12]) = *(void *)(v28 + v30[12]);
  return a1;
}

uint64_t sub_10002B244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002B258);
}

uint64_t sub_10002B258(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 72);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_10002B390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002B3A4);
}

uint64_t sub_10002B3A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t type metadata accessor for SmallEmptyStateView(uint64_t a1)
{
  return sub_10000E690(a1, (uint64_t *)&unk_1000CD860);
}

void sub_10002B4FC()
{
  sub_10002B5D8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SmallEmptyStateView.ViewConfiguration(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10002B5D8()
{
  if (!qword_1000CD870)
  {
    sub_1000A4130();
    unint64_t v0 = sub_1000A38F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CD870);
    }
  }
}

uint64_t sub_10002B630()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002B64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v2 = sub_100004FDC(&qword_1000CD8A8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v57 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v55 = (uint64_t *)((char *)&v53 - v5);
  uint64_t v6 = sub_100004FDC(&qword_1000CD8B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v60 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_100004FDC(&qword_1000CD8B8);
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000A4130();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = sub_1000A4090();
  uint64_t v53 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SmallEmptyStateView(0);
  uint64_t v62 = v1;
  sub_100009D80((uint64_t)v15);
  sub_1000A4120();
  char v20 = sub_1000A40F0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v13, v9);
  v21(v15, v9);
  uint64_t v54 = v19;
  if (v20)
  {
    uint64_t v22 = v62 + *(int *)(v19 + 28);
    uint64_t v23 = type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
    uint64_t v24 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v18, v22 + *(int *)(v23 + 20), v16);
  }
  else
  {
    uint64_t v24 = v53;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))(v18, enum case for BlendMode.normal(_:), v16);
  }
  sub_100009D80((uint64_t)v15);
  sub_1000A4120();
  char v25 = sub_1000A40F0();
  v21(v13, v9);
  v21(v15, v9);
  uint64_t v56 = v16;
  uint64_t v26 = v24;
  if (v25)
  {
    uint64_t v27 = v54;
    uint64_t v28 = v62;
    uint64_t v29 = v62 + *(int *)(v54 + 28);
    int v30 = *(_DWORD *)(v29 + *(int *)(type metadata accessor for SmallEmptyStateView.ViewConfiguration(0) + 36));
  }
  else
  {
    int v30 = sub_1000A3C30();
    uint64_t v28 = v62;
    uint64_t v27 = v54;
  }
  uint64_t v31 = sub_1000A3B60();
  uint64_t v32 = (uint64_t)v60;
  *uint64_t v60 = v31;
  *(void *)(v32 + 8) = 0;
  *(unsigned char *)(v32 + 16) = 1;
  uint64_t v33 = v32 + *(int *)(sub_100004FDC(&qword_1000CD8C0) + 44);
  uint64_t v34 = sub_1000A3BB0();
  uint64_t v35 = v28 + *(int *)(v27 + 28);
  uint64_t v36 = *(void *)(v35 + *(int *)(type metadata accessor for SmallEmptyStateView.ViewConfiguration(0) + 48));
  uint64_t v37 = (uint64_t)v55;
  *uint64_t v55 = v34;
  *(void *)(v37 + 8) = v36;
  *(unsigned char *)(v37 + 16) = 0;
  uint64_t v38 = sub_100004FDC(&qword_1000CD8C8);
  sub_10002BC10(v28, v30, (uint64_t)v18, v37 + *(int *)(v38 + 44));
  uint64_t v39 = v57;
  sub_10000B1C0(v37, v57, &qword_1000CD8A8);
  sub_10000B1C0(v39, v33, &qword_1000CD8A8);
  uint64_t v40 = v33 + *(int *)(sub_100004FDC(&qword_1000CD8D0) + 48);
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 1;
  sub_10000A9C0(v37, &qword_1000CD8A8);
  sub_10000A9C0(v39, &qword_1000CD8A8);
  long long v41 = *(_OWORD *)(v28 + 16);
  v63[0] = *(_OWORD *)v28;
  v63[1] = v41;
  char v64 = *(unsigned char *)(v28 + 32);
  sub_10000A95C((uint64_t)v63, (uint64_t)v65, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_100011214);
  double v42 = sub_100009B60();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_100012D8C((uint64_t)v63, (void (*)(void, void, void, void, void))sub_10000A4F8);
  char v49 = sub_1000A3D10();
  uint64_t v50 = v59;
  sub_10000B1C0(v32, v59, &qword_1000CD8B0);
  uint64_t v51 = v50 + *(int *)(v58 + 36);
  *(unsigned char *)uint64_t v51 = v49;
  *(double *)(v51 + 8) = v42;
  *(void *)(v51 + 16) = v44;
  *(void *)(v51 + 24) = v46;
  *(void *)(v51 + 32) = v48;
  *(unsigned char *)(v51 + 40) = 0;
  sub_10000A9C0(v32, &qword_1000CD8B0);
  sub_10000A95C(v50, v61, &qword_1000CD8B8);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v18, v56);
}

uint64_t sub_10002BC10@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v70 = a3;
  int v76 = a2;
  uint64_t v65 = a1;
  uint64_t v77 = a4;
  uint64_t v5 = sub_1000A3A20();
  __chkstk_darwin(v5 - 8);
  uint64_t v69 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004FDC(&qword_1000CD8D8) - 8;
  __chkstk_darwin(v68);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004FDC(&qword_1000CD8E0) - 8;
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004FDC(&qword_1000CD8E8) - 8;
  uint64_t v10 = __chkstk_darwin(v75);
  uint64_t v73 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v74 = (uint64_t)&v53 - v12;
  uint64_t v66 = sub_100004FDC(&qword_1000CD8F0) - 8;
  __chkstk_darwin(v66);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000A3A10();
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_100004FDC(&qword_1000CD8F8);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v79 = (uint64_t)&v53 - v24;
  uint64_t v25 = a1 + *(int *)(type metadata accessor for SmallEmptyStateView(0) + 28);
  uint64_t v26 = (int *)type metadata accessor for SmallEmptyStateView.ViewConfiguration(0);
  uint64_t v64 = *(void *)(v25 + v26[6]);
  uint64_t v27 = *(void *)(v25 + v26[10]);
  uint64_t v78 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = *(void *)(v25 + v26[11]);
  int v30 = (char *)v18 + *(int *)(v16 + 28);
  uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v32 = sub_1000A3B70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  *uint64_t v18 = v29;
  v18[1] = v29;
  sub_10002C858((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v14[*(int *)(v66 + 44)] = 256;
  sub_10000B1C0((uint64_t)v14, (uint64_t)&v23[*(int *)(v20 + 44)], &qword_1000CD8F0);
  *(void *)uint64_t v23 = v64;
  *((_WORD *)v23 + 4) = 0;
  *((void *)v23 + 2) = KeyPath;
  *((void *)v23 + 3) = v27;
  uint64_t v67 = v23;
  swift_retain_n();
  swift_retain();
  sub_10000A9C0((uint64_t)v14, &qword_1000CD8F0);
  sub_10002C8C0((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  swift_release();
  sub_10000A95C((uint64_t)v23, v79, &qword_1000CD8F8);
  LOBYTE(v14) = sub_1000A3D00();
  sub_10002C55C((uint64_t)&v80);
  long long v33 = v80;
  LOBYTE(v30) = v81;
  uint64_t v56 = *((void *)&v81 + 1);
  int v55 = v82;
  int v54 = BYTE1(v82);
  uint64_t v59 = *((void *)&v82 + 1);
  uint64_t v58 = v83;
  LOBYTE(v31) = v84;
  uint64_t v63 = v85;
  int v62 = v86;
  int v61 = v87;
  uint64_t v65 = v88;
  uint64_t v64 = v89;
  LOBYTE(KeyPath) = v90;
  uint64_t v66 = v91;
  uint64_t v60 = sub_1000A3DD0();
  uint64_t v57 = swift_getKeyPath();
  char v101 = (char)v30;
  char v97 = v31;
  char v93 = KeyPath;
  v110[0] = *(_DWORD *)v102;
  *(_DWORD *)((char *)v110 + 3) = *(_DWORD *)&v102[3];
  v109[0] = *(_DWORD *)v100;
  *(_DWORD *)((char *)v109 + 3) = *(_DWORD *)&v100[3];
  int v107 = v98;
  __int16 v108 = v99;
  *(_DWORD *)((char *)v106 + 3) = *(_DWORD *)&v96[3];
  v106[0] = *(_DWORD *)v96;
  __int16 v105 = v95;
  int v104 = v94;
  *(_DWORD *)((char *)v103 + 3) = *(_DWORD *)&v92[3];
  v103[0] = *(_DWORD *)v92;
  uint64_t v34 = sub_1000A4090();
  uint64_t v35 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v69, v70, v34);
  sub_10002C858(v35, (uint64_t)&v8[*(int *)(v68 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *uint64_t v8 = (char)v14;
  *(_DWORD *)(v8 + 1) = v110[0];
  *((_DWORD *)v8 + 1) = *(_DWORD *)((char *)v110 + 3);
  *(_OWORD *)(v8 + 8) = v33;
  v8[24] = (char)v30;
  *(_DWORD *)(v8 + 25) = v109[0];
  *((_DWORD *)v8 + 7) = *(_DWORD *)((char *)v109 + 3);
  *((void *)v8 + 4) = v56;
  v8[40] = v55;
  v8[41] = v54;
  *(_DWORD *)(v8 + 42) = v107;
  *((_WORD *)v8 + 23) = v108;
  uint64_t v36 = v58;
  *((void *)v8 + 6) = v59;
  *((void *)v8 + 7) = v36;
  v8[64] = v31;
  *((_DWORD *)v8 + 17) = *(_DWORD *)((char *)v106 + 3);
  *(_DWORD *)(v8 + 65) = v106[0];
  *((void *)v8 + 9) = v63;
  v8[80] = v62;
  v8[81] = v61;
  *(_DWORD *)(v8 + 82) = v104;
  *((_WORD *)v8 + 43) = v105;
  uint64_t v37 = v64;
  *((void *)v8 + 11) = v65;
  *((void *)v8 + 12) = v37;
  v8[104] = KeyPath;
  LODWORD(v37) = v103[0];
  *((_DWORD *)v8 + 27) = *(_DWORD *)((char *)v103 + 3);
  *(_DWORD *)(v8 + 105) = v37;
  uint64_t v38 = v57;
  *((void *)v8 + 14) = v66;
  *((void *)v8 + 15) = v38;
  *((void *)v8 + 16) = v60;
  *((_DWORD *)v8 + 34) = v76;
  sub_10002C8C0(v35, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = (uint64_t)v71;
  long long v41 = (uint64_t *)&v71[*(int *)(v72 + 44)];
  double v42 = (char *)v41 + *(int *)(sub_100004FDC(&qword_1000CCAC0) + 28);
  uint64_t v43 = sub_1000A38E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v42, v78, v43);
  *long long v41 = v39;
  sub_10000A95C((uint64_t)v8, v40, &qword_1000CD8D8);
  sub_1000A3BA0();
  sub_1000A3B40();
  sub_1000A3910();
  uint64_t v44 = v73;
  sub_10000B1C0(v40, v73, &qword_1000CD8E0);
  uint64_t v45 = (_OWORD *)(v44 + *(int *)(v75 + 44));
  long long v46 = v81;
  *uint64_t v45 = v80;
  v45[1] = v46;
  v45[2] = v82;
  sub_10000A9C0(v40, &qword_1000CD8E0);
  uint64_t v47 = v74;
  sub_10000A95C(v44, v74, &qword_1000CD8E8);
  uint64_t v48 = v79;
  uint64_t v49 = (uint64_t)v67;
  sub_10000B1C0(v79, (uint64_t)v67, &qword_1000CD8F8);
  sub_10000B1C0(v47, v44, &qword_1000CD8E8);
  uint64_t v50 = v77;
  sub_10000B1C0(v49, v77, &qword_1000CD8F8);
  uint64_t v51 = sub_100004FDC(&qword_1000CD900);
  sub_10000B1C0(v44, v50 + *(int *)(v51 + 48), &qword_1000CD8E8);
  sub_10000A9C0(v47, &qword_1000CD8E8);
  sub_10000A9C0(v48, &qword_1000CD8F8);
  sub_10000A9C0(v44, &qword_1000CD8E8);
  return sub_10000A9C0(v49, &qword_1000CD8F8);
}

uint64_t sub_10002C55C@<X0>(uint64_t a1@<X8>)
{
  sub_10000A958();
  sub_10000A504();
  uint64_t v2 = sub_1000A3E50();
  uint64_t v22 = v3;
  uint64_t v23 = v2;
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_10006F15C();
  uint64_t v20 = sub_1000A3E50();
  uint64_t v21 = v8;
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_10006F184();
  uint64_t v13 = sub_1000A3E50();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  *(void *)a1 = v23;
  *(void *)(a1 + 8) = v22;
  *(unsigned char *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = 256;
  *(void *)(a1 + 40) = v20;
  *(void *)(a1 + 48) = v21;
  *(unsigned char *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v10;
  *(_WORD *)(a1 + 72) = 256;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(unsigned char *)(a1 + 96) = v16 & 1;
  *(void *)(a1 + 104) = v18;
  sub_100017500(v23, v22, v7);
  swift_bridgeObjectRetain();
  sub_100017500(v20, v21, v12);
  swift_bridgeObjectRetain();
  sub_100017500(v13, v15, v17);
  swift_bridgeObjectRetain();
  sub_100017510(v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_100017510(v20, v21, v12);
  swift_bridgeObjectRelease();
  sub_100017510(v23, v22, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002C6F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A3AC0();
  *a1 = result;
  return result;
}

uint64_t sub_10002C724()
{
  return sub_1000A3AD0();
}

uint64_t sub_10002C750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A3A70();
  *a1 = result;
  return result;
}

uint64_t sub_10002C77C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A3A70();
  *a1 = result;
  return result;
}

uint64_t sub_10002C7A8()
{
  return sub_1000A3A80();
}

uint64_t sub_10002C7D4()
{
  return sub_1000A3A80();
}

uint64_t sub_10002C800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A3AC0();
  *a1 = result;
  return result;
}

uint64_t sub_10002C82C()
{
  return sub_1000A3AD0();
}

uint64_t sub_10002C858(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002C8C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10002C92C()
{
  unint64_t result = qword_1000CD908;
  if (!qword_1000CD908)
  {
    sub_100008B14(&qword_1000CD8B8);
    sub_10002C9A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD908);
  }
  return result;
}

unint64_t sub_10002C9A8()
{
  unint64_t result = qword_1000CD910;
  if (!qword_1000CD910)
  {
    sub_100008B14(&qword_1000CD8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD910);
  }
  return result;
}

unint64_t sub_10002CA04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_100011214(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    uint64_t v15 = sub_1000A3490();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100004FDC(&qword_1000CCB30);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t sub_10002CBA0(uint64_t a1, uint64_t a2)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000A3490();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_10002CC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_1000A3490();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100004FDC(&qword_1000CCB30);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_10002CDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_10000A4F8(v11, v12, v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_1000A3490();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v7) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (!v7)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = sub_100004FDC(&qword_1000CCB30);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_10002CF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_100004FDC(&qword_1000CCB30);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_10002D09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_10000A4F8(v7, v8, v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_1000A3490();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_100004FDC(&qword_1000CCB30);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_10002D238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002D24C);
}

uint64_t sub_10002D24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100004FDC(&qword_1000CCB30);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10002D2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002D30C);
}

uint64_t sub_10002D30C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_100004FDC(&qword_1000CCB30);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LogoView()
{
  uint64_t result = qword_1000CD988;
  if (!qword_1000CD988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002D400()
{
  sub_10002D498();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10002D498()
{
  if (!qword_1000CD998)
  {
    sub_1000A3490();
    unint64_t v0 = sub_1000A4570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CD998);
    }
  }
}

uint64_t sub_10002D4F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002D50C()
{
  uint64_t v1 = sub_100004FDC(&qword_1000CD9C8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  char v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_100004FDC(&qword_1000CD9D0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_1000A3BA0();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v10 = (uint64_t)&v9[*(int *)(sub_100004FDC(&qword_1000CD9D8) + 44)];
  *(void *)char v6 = sub_1000A3B60();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v11 = sub_100004FDC(&qword_1000CD9E0);
  sub_10002D6FC(v0, &v6[*(int *)(v11 + 44)]);
  sub_10000B1C0((uint64_t)v6, (uint64_t)v4, &qword_1000CD9C8);
  sub_10000B1C0((uint64_t)v4, v10, &qword_1000CD9C8);
  uint64_t v12 = v10 + *(int *)(sub_100004FDC(&qword_1000CD9E8) + 48);
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  sub_10000A9C0((uint64_t)v6, &qword_1000CD9C8);
  sub_10000A9C0((uint64_t)v4, &qword_1000CD9C8);
  sub_10000B17C(&qword_1000CD9F0, &qword_1000CD9D0);
  sub_1000A3EE0();
  return sub_10000A9C0((uint64_t)v9, &qword_1000CD9D0);
}

uint64_t sub_10002D6FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v100 = sub_100004FDC(&qword_1000CD9F8);
  uint64_t v87 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  unsigned __int8 v86 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004FDC(&qword_1000CDA00);
  __chkstk_darwin(v98);
  __int16 v99 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CDA08);
  __chkstk_darwin(v5 - 8);
  uint64_t v85 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100004FDC(&qword_1000CDA10);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  char v101 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100004FDC(&qword_1000CDA18);
  __chkstk_darwin(v88);
  uint64_t v92 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100004FDC(&qword_1000CDA20);
  __chkstk_darwin(v91);
  uint64_t v94 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FDC(&qword_1000CDA28);
  __chkstk_darwin(v10);
  uint64_t v95 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CDA30);
  uint64_t v97 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  char v93 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v84 - v15;
  uint64_t v16 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000A3490();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v84 - v24;
  uint64_t v26 = sub_100004FDC(&qword_1000CDA38);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v102 = (uint64_t)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  int v30 = (char *)&v84 - v29;
  uint64_t v31 = type metadata accessor for LogoView();
  sub_10000B1C0(a1 + *(int *)(v31 + 20), (uint64_t)v18, &qword_1000CCB30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v84 = a1;
    unsigned __int8 v86 = v30;
    uint64_t v87 = v12;
    uint64_t v32 = v99;
    sub_10000A9C0((uint64_t)v18, &qword_1000CCB30);
    sub_1000A4020();
    uint64_t v33 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v34 = sub_1000A3FE0();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v85, v33, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    uint64_t v37 = sub_1000A3FD0();
    swift_release();
    sub_10000A9C0(v36, &qword_1000CDA08);
    if (qword_1000CC6B0 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_1000CD928;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&long long v106 = v37;
    *((void *)&v106 + 1) = KeyPath;
    *(void *)&long long v107 = v38;
    swift_retain();
    sub_100004FDC(&qword_1000CDA40);
    sub_10002ECF8();
    sub_1000A3E70();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1000CC6A0 != -1) {
      swift_once();
    }
    uint64_t v40 = v84;
    if (qword_1000CC6A8 != -1) {
      swift_once();
    }
    sub_1000A4070();
    sub_1000A3910();
    uint64_t v41 = v89;
    uint64_t v42 = (uint64_t)v92;
    uint64_t v43 = v101;
    uint64_t v44 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v92, v101, v90);
    uint64_t v45 = (_OWORD *)(v42 + *(int *)(v88 + 36));
    long long v46 = v107;
    *uint64_t v45 = v106;
    v45[1] = v46;
    v45[2] = v108;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v44);
    LOBYTE(v43) = sub_1000A3D20();
    long long v47 = *(_OWORD *)(v40 + 16);
    v111[0] = *(_OWORD *)v40;
    v111[1] = v47;
    char v112 = *(unsigned char *)(v40 + 32);
    sub_10002ED98((uint64_t)v111, (uint64_t)v113);
    sub_100012D8C((uint64_t)v113, (void (*)(void, void, void, void, void))sub_100011214);
    sub_100009B60();
    sub_100012D8C((uint64_t)v111, (void (*)(void, void, void, void, void))sub_10000A4F8);
    sub_1000A38C0();
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    uint64_t v56 = v94;
    sub_10000B1C0(v42, v94, &qword_1000CDA18);
    uint64_t v57 = v56 + *(int *)(v91 + 36);
    *(unsigned char *)uint64_t v57 = (_BYTE)v43;
    *(void *)(v57 + 8) = v49;
    *(void *)(v57 + 16) = v51;
    *(void *)(v57 + 24) = v53;
    *(void *)(v57 + 32) = v55;
    *(unsigned char *)(v57 + 40) = 0;
    sub_10000A9C0(v42, &qword_1000CDA18);
    LOBYTE(v43) = sub_1000A3D60();
    long long v58 = *(_OWORD *)(v40 + 16);
    v109[0] = *(_OWORD *)v40;
    v109[1] = v58;
    char v110 = *(unsigned char *)(v40 + 32);
    sub_10002ED98((uint64_t)v109, (uint64_t)v114);
    sub_100012D8C((uint64_t)v114, (void (*)(void, void, void, void, void))sub_100011214);
    sub_100009B60();
    sub_100012D8C((uint64_t)v109, (void (*)(void, void, void, void, void))sub_10000A4F8);
    sub_1000A38C0();
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v67 = v95;
    sub_10000B1C0(v56, v95, &qword_1000CDA20);
    uint64_t v68 = v67 + *(int *)(v10 + 36);
    *(unsigned char *)uint64_t v68 = (_BYTE)v43;
    *(void *)(v68 + 8) = v60;
    *(void *)(v68 + 16) = v62;
    *(void *)(v68 + 24) = v64;
    *(void *)(v68 + 32) = v66;
    *(unsigned char *)(v68 + 40) = 0;
    sub_10000A9C0(v56, &qword_1000CDA20);
    uint64_t v69 = sub_10002EE28(&qword_1000CDA60, &qword_1000CDA28, (void (*)(void))sub_10002EE00);
    uint64_t v70 = v93;
    sub_1000A3EC0();
    sub_10000A9C0(v67, &qword_1000CDA28);
    uint64_t v71 = v97;
    uint64_t v72 = v96;
    uint64_t v73 = v87;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v70, v87);
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v32, v72, v73);
    swift_storeEnumTagMultiPayload();
    sub_10000B17C(&qword_1000CDA78, &qword_1000CD9F8);
    uint64_t v104 = v10;
    uint64_t v105 = v69;
    swift_getOpaqueTypeConformance2();
    uint64_t v74 = (uint64_t)v86;
    sub_1000A3C00();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    uint64_t v75 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 16))(v23, v25, v19);
    __chkstk_darwin(v75);
    *(&v84 - 2) = a1;
    uint64_t v76 = sub_10002EE28(&qword_1000CDA60, &qword_1000CDA28, (void (*)(void))sub_10002EE00);
    *(void *)&long long v106 = v10;
    *((void *)&v106 + 1) = v76;
    swift_getOpaqueTypeConformance2();
    uint64_t v77 = v86;
    sub_1000A3E10();
    uint64_t v78 = v87;
    uint64_t v79 = v100;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v99, v77, v100);
    swift_storeEnumTagMultiPayload();
    sub_10000B17C(&qword_1000CDA78, &qword_1000CD9F8);
    sub_1000A3C00();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
    uint64_t v74 = (uint64_t)v30;
  }
  uint64_t v80 = v102;
  sub_10000B1C0(v74, v102, &qword_1000CDA38);
  long long v81 = v103;
  *uint64_t v103 = 0;
  *((unsigned char *)v81 + 8) = 1;
  uint64_t v82 = sub_100004FDC(&qword_1000CDA80);
  sub_10000B1C0(v80, (uint64_t)v81 + *(int *)(v82 + 48), &qword_1000CDA38);
  sub_10000A9C0(v74, &qword_1000CDA38);
  return sub_10000A9C0(v80, &qword_1000CDA38);
}

uint64_t sub_10002E47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000CDA08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004FDC(&qword_1000CDA10);
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004FDC(&qword_1000CDA18);
  __chkstk_darwin(v47);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004FDC(&qword_1000CDA20);
  __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100004FDC(&qword_1000CDA28);
  __chkstk_darwin(v51);
  uint64_t v50 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4020();
  uint64_t v14 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v15 = sub_1000A3FE0();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v5, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v5, 0, 1, v15);
  uint64_t v17 = sub_1000A3FD0();
  swift_release();
  sub_10000A9C0((uint64_t)v5, &qword_1000CDA08);
  if (qword_1000CC6B0 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_1000CD928;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v53 = v17;
  *((void *)&v53 + 1) = KeyPath;
  *(void *)&long long v54 = v18;
  swift_retain();
  sub_100004FDC(&qword_1000CDA40);
  sub_10002ECF8();
  sub_1000A3E70();
  swift_release();
  swift_release();
  swift_release();
  if (qword_1000CC6A0 != -1) {
    swift_once();
  }
  if (qword_1000CC6A8 != -1) {
    swift_once();
  }
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v20 = v48;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v48);
  uint64_t v21 = &v10[*(int *)(v47 + 36)];
  long long v22 = v54;
  *(_OWORD *)uint64_t v21 = v53;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v55;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  char v23 = sub_1000A3D20();
  long long v24 = *(_OWORD *)(a1 + 16);
  v58[0] = *(_OWORD *)a1;
  v58[1] = v24;
  char v59 = *(unsigned char *)(a1 + 32);
  sub_10002ED98((uint64_t)v58, (uint64_t)v60);
  sub_100012D8C((uint64_t)v60, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v58, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_10000B1C0((uint64_t)v10, (uint64_t)v12, &qword_1000CDA18);
  uint64_t v33 = &v12[*(int *)(v49 + 36)];
  *uint64_t v33 = v23;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_10000A9C0((uint64_t)v10, &qword_1000CDA18);
  char v34 = sub_1000A3D60();
  long long v35 = *(_OWORD *)(a1 + 16);
  v56[0] = *(_OWORD *)a1;
  v56[1] = v35;
  char v57 = *(unsigned char *)(a1 + 32);
  sub_10002ED98((uint64_t)v56, (uint64_t)v61);
  sub_100012D8C((uint64_t)v61, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v56, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = v50;
  sub_10000B1C0((uint64_t)v12, v50, &qword_1000CDA20);
  uint64_t v45 = v44 + *(int *)(v51 + 36);
  *(unsigned char *)uint64_t v45 = v34;
  *(void *)(v45 + 8) = v37;
  *(void *)(v45 + 16) = v39;
  *(void *)(v45 + 24) = v41;
  *(void *)(v45 + 32) = v43;
  *(unsigned char *)(v45 + 40) = 0;
  sub_10000A9C0((uint64_t)v12, &qword_1000CDA20);
  sub_10002EE28(&qword_1000CDA60, &qword_1000CDA28, (void (*)(void))sub_10002EE00);
  sub_1000A3EC0();
  return sub_10000A9C0(v44, &qword_1000CDA28);
}

void sub_10002EB04()
{
  qword_1000CD918 = 0x4036000000000000;
}

void sub_10002EB14()
{
  qword_1000CD920 = 0x4031000000000000;
}

uint64_t sub_10002EB24()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_10002EBF4;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10002EC88;
  v3[3] = &unk_1000C79F0;
  uint64_t v1 = _Block_copy(v3);
  [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  swift_release();
  uint64_t result = sub_1000A3F90();
  qword_1000CD928 = result;
  return result;
}

id sub_10002EBF4(void *a1)
{
  if ([a1 userInterfaceStyle] == (id)2)
  {
    id v1 = objc_allocWithZone((Class)UIColor);
    return [v1 initWithRed:1.0 green:0.596078431 blue:0.0 alpha:1.0];
  }
  else
  {
    id v3 = [self whiteColor];
    return v3;
  }
}

id sub_10002EC88(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

unint64_t sub_10002ECF8()
{
  unint64_t result = qword_1000CDA48;
  if (!qword_1000CDA48)
  {
    sub_100008B14(&qword_1000CDA40);
    sub_10000B17C(&qword_1000CDA50, &qword_1000CDA58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDA48);
  }
  return result;
}

uint64_t sub_10002ED98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCE68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002EE00()
{
  return sub_10002EE28(&qword_1000CDA68, &qword_1000CDA20, (void (*)(void))sub_10002EEA8);
}

uint64_t sub_10002EE28(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002EEA8()
{
  unint64_t result = qword_1000CDA70;
  if (!qword_1000CDA70)
  {
    sub_100008B14(&qword_1000CDA18);
    sub_100008B14(&qword_1000CDA40);
    sub_10002ECF8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDA70);
  }
  return result;
}

uint64_t sub_10002EF58@<X0>(uint64_t a1@<X8>)
{
  return sub_10002E47C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10002EF60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002EF70()
{
  return swift_release();
}

unint64_t sub_10002EF7C()
{
  unint64_t result = qword_1000CDA88;
  if (!qword_1000CDA88)
  {
    sub_100008B14(&qword_1000CDA90);
    sub_10000B17C(&qword_1000CD9F0, &qword_1000CD9D0);
    sub_10002F01C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDA88);
  }
  return result;
}

unint64_t sub_10002F01C()
{
  unint64_t result = qword_1000CCB78;
  if (!qword_1000CCB78)
  {
    sub_1000A3CC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCB78);
  }
  return result;
}

uint64_t *sub_10002F074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    id v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000A38E0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v13 = v12[5];
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v16 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
    *(void *)&v8[v12[7]] = *(void *)&v9[v12[7]];
    *(_DWORD *)&v8[v12[8]] = *(_DWORD *)&v9[v12[8]];
    *(void *)&v8[v12[9]] = *(void *)&v9[v12[9]];
    *(void *)&v8[v12[10]] = *(void *)&v9[v12[10]];
    *(void *)&v8[v12[11]] = *(void *)&v9[v12[11]];
    *(void *)&v8[v12[12]] = *(void *)&v9[v12[12]];
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_10002F21C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for EmptyStateView.ViewConfiguration(0) + 20);
  uint64_t v7 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return swift_release();
}

void *sub_10002F308(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
  *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
  *(_DWORD *)&v7[v11[8]] = *(_DWORD *)&v8[v11[8]];
  *(void *)&v7[v11[9]] = *(void *)&v8[v11[9]];
  *(void *)&v7[v11[10]] = *(void *)&v8[v11[10]];
  *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
  *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10002F464(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  *(_DWORD *)&v7[v10[8]] = *(_DWORD *)&v8[v10[8]];
  *(void *)&v7[v10[9]] = *(void *)&v8[v10[9]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[10]] = *(void *)&v8[v10[10]];
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  *(void *)&v7[v10[12]] = *(void *)&v8[v10[12]];
  return a1;
}

_OWORD *sub_10002F5F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)&v6[v9[6]] = *(void *)&v7[v9[6]];
  *(void *)&v6[v9[7]] = *(void *)&v7[v9[7]];
  *(_DWORD *)&v6[v9[8]] = *(_DWORD *)&v7[v9[8]];
  *(void *)&v6[v9[9]] = *(void *)&v7[v9[9]];
  *(void *)&v6[v9[10]] = *(void *)&v7[v9[10]];
  *(void *)&v6[v9[11]] = *(void *)&v7[v9[11]];
  *(void *)&v6[v9[12]] = *(void *)&v7[v9[12]];
  return a1;
}

void *sub_10002F71C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
  swift_release();
  *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
  *(_DWORD *)&v9[v12[8]] = *(_DWORD *)&v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  swift_release();
  *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
  *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
  *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
  return a1;
}

uint64_t sub_10002F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002F88C);
}

uint64_t sub_10002F88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10002F93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002F950);
}

uint64_t sub_10002F950(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LargeEmptyStateView()
{
  uint64_t result = qword_1000CDAF0;
  if (!qword_1000CDAF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002FA44()
{
  uint64_t result = type metadata accessor for EmptyStateView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10002FADC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002FAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004FDC(&qword_1000CCAF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EmptyStateView(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v15 = v1[3];
  uint64_t v17 = type metadata accessor for LargeEmptyStateView();
  sub_10002FCFC((uint64_t)v1 + *(int *)(v17 + 24), (uint64_t)v8);
  *uint64_t v5 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  v12[32] = 0;
  *(void *)uint64_t v12 = KeyPath;
  *((void *)v12 + 1) = 0;
  sub_10002FD6C((uint64_t)v5, (uint64_t)&v12[v10[7]]);
  uint64_t v19 = &v12[v10[8]];
  *(void *)uint64_t v19 = v14;
  *((void *)v19 + 1) = v13;
  uint64_t v20 = &v12[v10[9]];
  *(void *)uint64_t v20 = v16;
  *((void *)v20 + 1) = v15;
  *((void *)v20 + 2) = 0x401C000000000000;
  sub_10002FDD4((uint64_t)v8, (uint64_t)&v12[v10[10]], type metadata accessor for EmptyStateView.ViewConfiguration);
  sub_10002FDD4((uint64_t)v12, a1, type metadata accessor for EmptyStateView);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002FCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCAF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FDD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10002FE40()
{
  unint64_t result = qword_1000CDB30;
  if (!qword_1000CDB30)
  {
    type metadata accessor for EmptyStateView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDB30);
  }
  return result;
}

uint64_t *sub_10002FE98(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    uint64_t v14 = *((void *)v11 + 2);
    uint64_t v15 = *((void *)v11 + 3);
    char v16 = v11[32];
    sub_100011214(*(void *)v11, v13, v14, v15, v16);
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    *((void *)v10 + 2) = v14;
    *((void *)v10 + 3) = v15;
    v10[32] = v16;
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)v4 + v17;
    uint64_t v20 = (char *)a2 + v17;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    v19[16] = v20[16];
    uint64_t v22 = *((void *)v20 + 4);
    *((void *)v19 + 3) = *((void *)v20 + 3);
    *((void *)v19 + 4) = v22;
    v19[40] = v20[40];
    uint64_t v23 = *((void *)v20 + 7);
    *((void *)v19 + 6) = *((void *)v20 + 6);
    *((void *)v19 + 7) = v23;
    long long v24 = (uint64_t *)((char *)v4 + v18);
    uint64_t v25 = (uint64_t *)((char *)a2 + v18);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    *long long v24 = v27;
    v24[1] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100030050(uint64_t a1, uint64_t a2)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_10000A4F8(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_100030128(void *a1, void *a2, int *a3)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A38E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  char v14 = v9[32];
  sub_100011214(*(void *)v9, v11, v12, v13, v14);
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  *((void *)v8 + 2) = v12;
  *((void *)v8 + 3) = v13;
  v8[32] = v14;
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  v17[16] = v18[16];
  uint64_t v20 = *((void *)v18 + 4);
  *((void *)v17 + 3) = *((void *)v18 + 3);
  *((void *)v17 + 4) = v20;
  v17[40] = v18[40];
  uint64_t v21 = *((void *)v18 + 7);
  *((void *)v17 + 6) = *((void *)v18 + 6);
  *((void *)v17 + 7) = v21;
  uint64_t v22 = (void *)((char *)a1 + v16);
  uint64_t v23 = (void *)((char *)a2 + v16);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100030294(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A38E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  char v14 = v9[32];
  sub_100011214(*(void *)v9, v11, v12, v13, v14);
  uint64_t v15 = *(void *)v8;
  uint64_t v16 = *((void *)v8 + 1);
  uint64_t v17 = *((void *)v8 + 2);
  uint64_t v18 = *((void *)v8 + 3);
  char v19 = v8[32];
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  *((void *)v8 + 2) = v12;
  *((void *)v8 + 3) = v13;
  v8[32] = v14;
  sub_10000A4F8(v15, v16, v17, v18, v19);
  uint64_t v20 = a3[6];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)uint64_t v21 = *(void *)((char *)a2 + v20);
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  v21[16] = v22[16];
  *((void *)v21 + 1) = v23;
  *((void *)v21 + 3) = *((void *)v22 + 3);
  *((void *)v21 + 4) = *((void *)v22 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[40] = v22[40];
  *((void *)v21 + 6) = *((void *)v22 + 6);
  *((void *)v21 + 7) = *((void *)v22 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_retain();
  swift_release();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  return a1;
}

char *sub_100030468(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *(_OWORD *)v11;
  long long v13 = *((_OWORD *)v11 + 1);
  v10[32] = v11[32];
  *(_OWORD *)uint64_t v10 = v12;
  *((_OWORD *)v10 + 1) = v13;
  char v14 = &a1[v9];
  uint64_t v15 = &a2[v9];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)char v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  long long v17 = *((_OWORD *)v15 + 3);
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *((_OWORD *)v14 + 3) = v17;
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_100030570(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[32];
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *((void *)v9 + 1);
  uint64_t v14 = *((void *)v9 + 2);
  uint64_t v15 = *((void *)v9 + 3);
  char v16 = v9[32];
  long long v17 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v17;
  v9[32] = v11;
  sub_10000A4F8(v12, v13, v14, v15, v16);
  uint64_t v18 = a3[6];
  char v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)char v19 = *(void *)&a2[v18];
  *((void *)v19 + 1) = *(void *)&a2[v18 + 8];
  v19[16] = a2[v18 + 16];
  uint64_t v21 = *(void *)&a2[v18 + 32];
  *((void *)v19 + 3) = *(void *)&a2[v18 + 24];
  *((void *)v19 + 4) = v21;
  swift_bridgeObjectRelease();
  v19[40] = v20[40];
  uint64_t v22 = *((void *)v20 + 7);
  *((void *)v19 + 6) = *((void *)v20 + 6);
  *((void *)v19 + 7) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)&a1[v23] = *(void *)v25;
  swift_release();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  return a1;
}

uint64_t sub_1000306F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100030708);
}

uint64_t sub_100030708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 32);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000307D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000307E4);
}

uint64_t sub_1000307E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 32) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MediumWidgetView()
{
  uint64_t result = qword_1000CDB90;
  if (!qword_1000CDB90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000308F4()
{
  sub_10000591C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10003099C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000309B8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1000CCE78, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CCE80).n128_u64[0];
  return result;
}

double sub_100030A28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_1000CCEC8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CCEB0).n128_u64[0];
  return result;
}

__n128 sub_100030A98@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v20 = a17;
  uint64_t v21 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v24 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v24) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000A44C0();
    uint64_t v31 = (void *)sub_1000A3CD0();
    sub_1000A3750();

    uint64_t v21 = a18;
    uint64_t v20 = a17;
  }
  sub_1000A3A30();
  v20(v18, a9, a16);
  uint64_t v32 = (_OWORD *)(a9 + *(int *)(sub_100004FDC(v21) + 36));
  v32[4] = v38;
  v32[5] = v39;
  v32[6] = v40;
  _OWORD *v32 = v34;
  v32[1] = v35;
  __n128 result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

double sub_100030C7C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1000CD208, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CD210).n128_u64[0];
  return result;
}

double sub_100030CEC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for BookCoverView, (void (*)(uint64_t, uint64_t, uint64_t))sub_10003685C, &qword_1000CD268).n128_u64[0];
  return result;
}

__n128 sub_100030D64@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000A44C0();
    uint64_t v23 = (void *)sub_1000A3CD0();
    sub_1000A3750();
  }
  sub_1000A3A30();
  uint64_t v24 = sub_100004FDC(&qword_1000CDC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_100004FDC(&qword_1000CDC60) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

double sub_100030F50@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1000CDD90, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CDD98).n128_u64[0];
  return result;
}

double sub_100030FC0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1000CDDA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CDDA8).n128_u64[0];
  return result;
}

double sub_100031030@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1000CDDB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CDDB8).n128_u64[0];
  return result;
}

double sub_1000310A0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1000CDDC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000B1C0, &qword_1000CDDC8).n128_u64[0];
  return result;
}

double sub_100031110@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100030A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for TodayReadingGoalView, (void (*)(uint64_t, uint64_t, uint64_t))sub_10003685C, &qword_1000CDD78).n128_u64[0];
  return result;
}

double sub_100031188@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, int a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000A44C0();
    uint64_t v25 = (void *)sub_1000A3CD0();
    sub_1000A3750();
  }
  sub_1000A3A30();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  double result = *(double *)&v27;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(_DWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;
  return result;
}

uint64_t sub_100031330()
{
  uint64_t v1 = sub_1000A3600();
  uint64_t v20 = *(void *)(v1 - 8);
  uint64_t v21 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v19 = sub_1000A42F0();
  uint64_t v5 = *(void *)(v19 - 8);
  uint64_t v6 = __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = sub_1000A42D0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = 0;
  uint64_t v13 = *(void *)(v0 + 24);
  if (v13 >= 2)
  {
    sub_1000A42C0();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    sub_1000A42B0(v23);
    uint64_t v22 = v13;
    sub_1000A42A0();
    v24._countAndFlagsBits = 0x727473207961642DLL;
    v24._object = (void *)0xEB000000006B6165;
    sub_1000A42B0(v24);
    sub_1000A42E0();
    sub_1000A35D0();
    uint64_t v14 = v19;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v19);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = [self bundleForClass:ObjCClassFromMetadata];
    sub_1000A35D0();
    uint64_t v12 = sub_1000A4350();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v14);
  }
  return v12;
}

uint64_t sub_100031660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  if (sub_10007B3C0())
  {
    return sub_100035478(a1);
  }
  else
  {
    sub_1000A3470();
    uint64_t v9 = sub_1000A3490();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v7, 1, v9) == 1)
    {
      sub_1000A3470();
      uint64_t result = v11(v5, 1, v9);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v5, v9);
        return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
      }
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v7, v9);
    }
  }
  return result;
}

uint64_t sub_100031850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  if (sub_10007B3C0())
  {
    return sub_100035684(a1);
  }
  else
  {
    sub_1000A3470();
    uint64_t v9 = sub_1000A3490();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v7, 1, v9) == 1)
    {
      sub_1000A3470();
      uint64_t result = v11(v5, 1, v9);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v5, v9);
        return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
      }
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v7, v9);
    }
  }
  return result;
}

uint64_t sub_100031A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  if (sub_10007B3C0())
  {
    return sub_100035890(a1);
  }
  else
  {
    sub_1000A3470();
    uint64_t v9 = sub_1000A3490();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v7, 1, v9) == 1)
    {
      sub_1000A3470();
      uint64_t result = v11(v5, 1, v9);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v5, v9);
        return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
      }
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v7, v9);
    }
  }
  return result;
}

uint64_t sub_100031C30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v3 = sub_1000A38E0();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3);
  uint64_t v60 = (uint64_t)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000A3CB0();
  uint64_t v5 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004FDC(&qword_1000CDBD0);
  __chkstk_darwin(v69);
  uint64_t v9 = (void *)((char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100004FDC(&qword_1000CDBD8);
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004FDC(&qword_1000CDBE0);
  __chkstk_darwin(v55);
  uint64_t v56 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v9 = sub_1000A4070();
  v9[1] = v14;
  uint64_t v15 = sub_100004FDC(&qword_1000CDBE8);
  sub_1000322B0(v2, (char *)v9 + *(int *)(v15 + 44));
  sub_1000A3CA0();
  uint64_t v71 = v2;
  sub_1000A4070();
  sub_100004FDC(&qword_1000CCAB0);
  sub_10000B17C(&qword_1000CDBF0, &qword_1000CDBD0);
  sub_100008C08();
  char v57 = v12;
  sub_1000A3F20();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v70);
  sub_10000A9C0((uint64_t)v9, &qword_1000CDBD0);
  uint64_t v16 = *(int *)(type metadata accessor for MediumWidgetView() + 24);
  v54[1] = v2;
  long long v17 = (void *)(v2 + v16);
  uint64_t v18 = *(void *)(v17[4] + 16);
  if (!v18)
  {
LABEL_23:
    uint64_t v43 = v60;
    sub_100009B24(v60);
    uint64_t v45 = v61;
    uint64_t v44 = v62;
    goto LABEL_26;
  }
  uint64_t v20 = v17[6];
  uint64_t v19 = v17[7];
  uint64_t v65 = v20;
  uint64_t v68 = v19;
  uint64_t v21 = (void *)BDSLibraryContentAssetTypeAudiobook;
  uint64_t v64 = BDSCloudAssetTypeStoreAudiobook;
  v54[0] = swift_bridgeObjectRetain();
  uint64_t v22 = (uint64_t *)(v54[0] + 64);
  uint64_t v66 = v21;
  while (1)
  {
    uint64_t v23 = *(v22 - 3);
    uint64_t v25 = *v22;
    uint64_t v24 = v22[1];
    long long v27 = (void *)v22[2];
    uint64_t v26 = (void *)v22[3];
    uint64_t v69 = v22[5];
    uint64_t v70 = v23;
    uint64_t v28 = sub_1000A4340();
    uint64_t v30 = v29;
    BOOL v32 = v28 == sub_1000A4340() && v30 == v31;
    uint64_t v67 = v25;
    if (v32) {
      char v33 = 1;
    }
    else {
      char v33 = sub_1000A46A0();
    }
    swift_bridgeObjectRetain();
    id v34 = v26;
    id v35 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = v27;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      if (!v27) {
        goto LABEL_3;
      }
      uint64_t v37 = sub_1000A4340();
      uint64_t v39 = v38;
      if (v37 == sub_1000A4340() && v39 == v40)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v41 = sub_1000A46A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    if (!v68)
    {
LABEL_3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v67 == v65 && v68 == v24) {
      break;
    }
    char v42 = sub_1000A46A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v42) {
      goto LABEL_25;
    }
LABEL_4:
    v22 += 11;
    --v18;
    uint64_t v21 = v66;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v43 = v60;
  uint64_t v45 = v61;
  uint64_t v44 = v62;
  (*(void (**)(uint64_t, void, uint64_t))(v61 + 104))(v60, enum case for ColorScheme.light(_:), v62);
LABEL_26:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = (uint64_t)v56;
  uint64_t v48 = (uint64_t *)&v56[*(int *)(v55 + 36)];
  uint64_t v49 = sub_100004FDC(&qword_1000CCAC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))((char *)v48 + *(int *)(v49 + 28), v43, v44);
  *uint64_t v48 = KeyPath;
  uint64_t v51 = v57;
  uint64_t v50 = v58;
  uint64_t v52 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v47, v57, v59);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  return sub_10000A95C(v47, v63, &qword_1000CDBE0);
}

uint64_t sub_1000322B0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v41 = type metadata accessor for LogoView();
  uint64_t v3 = __chkstk_darwin(v41);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v42 = (uint64_t)&v37 - v6;
  uint64_t v7 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004FDC(&qword_1000CDBF8);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100004FDC(&qword_1000CDC00);
  uint64_t v12 = *(void *)(v40 - 8);
  uint64_t v13 = __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  uint64_t v44 = (char *)&v37 - v18;
  if (sub_10007B3C0()) {
    uint64_t v19 = sub_1000A3BB0();
  }
  else {
    uint64_t v19 = sub_1000A3BA0();
  }
  *(void *)uint64_t v11 = v19;
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v20 = sub_100004FDC(&qword_1000CDC08);
  sub_10003279C(a1, (uint64_t)&v11[*(int *)(v20 + 44)]);
  uint64_t v21 = (_OWORD *)(a1 + *(int *)(type metadata accessor for MediumWidgetView() + 24));
  long long v22 = v21[3];
  v46[2] = v21[2];
  v46[3] = v22;
  long long v23 = v21[1];
  v46[0] = *v21;
  v46[1] = v23;
  sub_100035AB4((uint64_t)v46);
  sub_1000090C4((uint64_t)v9);
  sub_100035AEC((uint64_t)v46);
  uint64_t v24 = sub_1000A3490();
  uint64_t v37 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v37(v9, 0, 1, v24);
  sub_10000B17C(&qword_1000CDC10, &qword_1000CDBF8);
  sub_1000A3E80();
  sub_10000A9C0((uint64_t)v9, &qword_1000CCB30);
  sub_10000A9C0((uint64_t)v11, &qword_1000CDBF8);
  uint64_t v25 = v40;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v44, v17, v40);
  long long v26 = v21[1];
  v45[0] = *v21;
  v45[1] = v26;
  long long v27 = v21[3];
  v45[2] = v21[2];
  v45[3] = v27;
  sub_100035AB4((uint64_t)v45);
  sub_1000090C4((uint64_t)v9);
  sub_100035AEC((uint64_t)v45);
  v37(v9, 0, 1, v24);
  uint64_t KeyPath = swift_getKeyPath();
  *((void *)v5 + 2) = 0;
  *((void *)v5 + 3) = 0;
  v5[32] = 0;
  *(void *)uint64_t v5 = KeyPath;
  *((void *)v5 + 1) = 0;
  sub_10000A95C((uint64_t)v9, (uint64_t)&v5[*(int *)(v41 + 20)], &qword_1000CCB30);
  uint64_t v29 = v42;
  sub_100035B28((uint64_t)v5, v42);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v31 = v39;
  BOOL v32 = v44;
  v30(v39, v44, v25);
  sub_10003685C(v29, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LogoView);
  char v33 = v43;
  v30(v43, v31, v25);
  uint64_t v34 = sub_100004FDC(&qword_1000CDC18);
  sub_10003685C((uint64_t)v5, (uint64_t)&v33[*(int *)(v34 + 48)], (uint64_t (*)(void))type metadata accessor for LogoView);
  sub_100036490(v29, (uint64_t (*)(void))type metadata accessor for LogoView);
  id v35 = *(void (**)(char *, uint64_t))(v12 + 8);
  v35(v32, v25);
  sub_100036490((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LogoView);
  return ((uint64_t (*)(char *, uint64_t))v35)(v31, v25);
}

uint64_t sub_10003279C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v138 = a1;
  uint64_t v117 = a2;
  uint64_t v3 = sub_1000A3C90();
  uint64_t v132 = *(void *)(v3 - 8);
  uint64_t v133 = v3;
  __chkstk_darwin(v3);
  uint64_t v131 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3490();
  __chkstk_darwin(v5 - 8);
  uint64_t v121 = (uint64_t)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CDC20);
  uint64_t v125 = *(void *)(v7 - 8);
  uint64_t v126 = v7;
  __chkstk_darwin(v7);
  uint64_t v122 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100004FDC(&qword_1000CDC28) - 8;
  __chkstk_darwin(v124);
  uint64_t v123 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100004FDC(&qword_1000CDC30) - 8;
  __chkstk_darwin(v128);
  uint64_t v127 = (uint64_t)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100004FDC(&qword_1000CDC38);
  __chkstk_darwin(v130);
  uint64_t v129 = (uint64_t)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CDC40);
  uint64_t v112 = *(void *)(v12 - 8);
  uint64_t v113 = v12;
  __chkstk_darwin(v12);
  uint64_t v139 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100004FDC(&qword_1000CDC48);
  uint64_t v14 = __chkstk_darwin(v114);
  uint64_t v116 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  long long v140 = (char *)&v111 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v137 = (char *)&v111 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v136 = (char *)&v111 - v21;
  __chkstk_darwin(v20);
  uint64_t v115 = (char *)&v111 - v22;
  uint64_t v135 = (char *)sub_1000A3CB0();
  uint64_t v120 = *((void *)v135 - 1);
  __chkstk_darwin(v135);
  uint64_t v24 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100004FDC(&qword_1000CDC50);
  __chkstk_darwin(v118);
  long long v26 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = (char *)sub_100004FDC(&qword_1000CDC58);
  uint64_t v119 = *((void *)v134 - 1);
  __chkstk_darwin(v134);
  uint64_t v28 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004FDC(&qword_1000CDC60);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  BOOL v32 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v111 - v33;
  *(void *)long long v26 = sub_1000A3B60();
  *((void *)v26 + 1) = 0;
  v26[16] = 1;
  uint64_t v35 = sub_100004FDC(&qword_1000CDC68);
  sub_100033510(a1, (uint64_t)&v26[*(int *)(v35 + 44)]);
  sub_1000A3CA0();
  sub_1000A4070();
  sub_10000B17C(&qword_1000CDC70, &qword_1000CDC50);
  sub_100035B8C();
  sub_1000A3F20();
  (*(void (**)(char *, char *))(v120 + 8))(v24, v135);
  sub_10000A9C0((uint64_t)v26, &qword_1000CDC50);
  sub_1000A4070();
  __n128 v36 = sub_100030D64(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v32, 0.0, 1, INFINITY, 0);
  (*(void (**)(char *, char *, __n128))(v119 + 8))(v28, v134, v36);
  uint64_t v134 = v34;
  uint64_t v135 = v32;
  sub_10000A95C((uint64_t)v32, (uint64_t)v34, &qword_1000CDC60);
  uint64_t v37 = type metadata accessor for MediumWidgetView();
  uint64_t v38 = *(int *)(v37 + 24);
  uint64_t v39 = v37;
  uint64_t v120 = v37;
  uint64_t v40 = v138;
  uint64_t v41 = (_OWORD *)(v138 + v38);
  long long v42 = *(_OWORD *)(v138 + v38 + 48);
  v153[2] = *(_OWORD *)(v138 + v38 + 32);
  v153[3] = v42;
  long long v43 = *(_OWORD *)(v138 + v38 + 16);
  v153[0] = *(_OWORD *)(v138 + v38);
  v153[1] = v43;
  sub_100035AB4((uint64_t)v153);
  sub_100031850(v121);
  sub_100035AEC((uint64_t)v153);
  uint64_t v141 = v40;
  uint64_t v44 = v40;
  sub_100004FDC(&qword_1000CDC80);
  sub_100035BE8();
  uint64_t v45 = v122;
  sub_1000A3E10();
  LOBYTE(v40) = sub_1000A3D40();
  uint64_t v46 = v44 + *(int *)(v39 + 20);
  char v152 = *(unsigned char *)(v46 + 32);
  long long v47 = *(_OWORD *)(v46 + 16);
  v151[0] = *(_OWORD *)v46;
  v151[1] = v47;
  sub_10000A95C((uint64_t)v151, (uint64_t)v154, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v154, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v151, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v125;
  uint64_t v56 = v126;
  uint64_t v58 = (uint64_t)v123;
  (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v123, v45, v126);
  uint64_t v59 = v58 + *(int *)(v124 + 44);
  *(unsigned char *)uint64_t v59 = v40;
  *(void *)(v59 + 8) = v49;
  *(void *)(v59 + 16) = v51;
  *(void *)(v59 + 24) = v53;
  *(void *)(v59 + 32) = v55;
  *(unsigned char *)(v59 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v56);
  LOBYTE(v45) = sub_1000A3D60();
  long long v60 = *(_OWORD *)(v46 + 16);
  v149[0] = *(_OWORD *)v46;
  v149[1] = v60;
  char v150 = *(unsigned char *)(v46 + 32);
  sub_10000A95C((uint64_t)v149, (uint64_t)v155, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v155, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v149, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v69 = v127;
  sub_10000B1C0(v58, v127, &qword_1000CDC28);
  uint64_t v70 = v69 + *(int *)(v128 + 44);
  *(unsigned char *)uint64_t v70 = (_BYTE)v45;
  *(void *)(v70 + 8) = v62;
  *(void *)(v70 + 16) = v64;
  *(void *)(v70 + 24) = v66;
  *(void *)(v70 + 32) = v68;
  *(unsigned char *)(v70 + 40) = 0;
  sub_10000A9C0(v58, &qword_1000CDC28);
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v71 = v129;
  sub_10000B1C0(v69, v129, &qword_1000CDC30);
  uint64_t v72 = v130;
  uint64_t v73 = (_OWORD *)(v71 + *(int *)(v130 + 36));
  long long v74 = v145;
  _OWORD *v73 = v144;
  v73[1] = v74;
  v73[2] = v146;
  sub_10000A9C0(v69, &qword_1000CDC30);
  uint64_t v75 = v131;
  sub_1000A3C70();
  uint64_t v76 = sub_100035CE8(&qword_1000CDCA8, &qword_1000CDC38, (void (*)(void))sub_100035CB8);
  uint64_t v77 = v72;
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v75, v133);
  sub_10000A9C0(v71, &qword_1000CDC38);
  long long v78 = v41[1];
  v148[0] = *v41;
  v148[1] = v78;
  long long v79 = v41[3];
  v148[2] = v41[2];
  v148[3] = v79;
  uint64_t v80 = sub_10006EA38();
  if (v81)
  {
    uint64_t v82 = v80;
    unint64_t v83 = v81;
    sub_100035AB4((uint64_t)v148);
    uint64_t v84 = sub_100031330();
    unsigned __int8 v86 = v85;
    sub_100035AEC((uint64_t)v148);
    if (v86)
    {
      *(void *)&v147[0] = v82;
      *((void *)&v147[0] + 1) = v83;
      swift_bridgeObjectRetain();
      v156._countAndFlagsBits = 8236;
      v156._object = (void *)0xE200000000000000;
      sub_1000A4380(v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v157._countAndFlagsBits = v84;
      v157._object = v86;
      sub_1000A4380(v157);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v83 = *((void *)&v147[0] + 1);
      uint64_t v82 = *(void *)&v147[0];
    }
  }
  else
  {
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
  }
  uint64_t v87 = (uint64_t)v115;
  uint64_t v89 = v112;
  uint64_t v88 = v113;
  *(void *)&v147[0] = v82;
  *((void *)&v147[0] + 1) = v83;
  uint64_t v142 = v77;
  unint64_t v143 = v76;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  uint64_t v90 = v139;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v88);
  sub_100004FDC(&qword_1000CCB98);
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_1000A8D50;
  long long v92 = v41[1];
  v147[0] = *v41;
  v147[1] = v92;
  long long v93 = v41[3];
  v147[2] = v41[2];
  v147[3] = v93;
  *(void *)(v91 + 32) = sub_100035E5C(0x2073277961646F54, 0xEF676E6964616552, (uint64_t)"Today's Reading section title accessibility string (apostrophe is vertical)", 75);
  *(void *)(v91 + 40) = v94;
  uint64_t v95 = sub_10006EA38();
  if (v96)
  {
    uint64_t v97 = v95;
    unint64_t v98 = v96;
    sub_100035AB4((uint64_t)v147);
    uint64_t v99 = sub_100031330();
    char v101 = v100;
    sub_100035AEC((uint64_t)v147);
    if (v101)
    {
      uint64_t v142 = v97;
      unint64_t v143 = v98;
      swift_bridgeObjectRetain();
      v158._countAndFlagsBits = 8236;
      v158._object = (void *)0xE200000000000000;
      sub_1000A4380(v158);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v159._countAndFlagsBits = v99;
      v159._object = v101;
      sub_1000A4380(v159);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v97 = v142;
      unint64_t v98 = v143;
    }
  }
  else
  {
    uint64_t v97 = 0;
    unint64_t v98 = 0xE000000000000000;
  }
  uint64_t v103 = (uint64_t)v116;
  uint64_t v102 = v117;
  *(void *)(v91 + 48) = v97;
  *(void *)(v91 + 56) = v98;
  uint64_t v104 = (uint64_t)v137;
  uint64_t v105 = (uint64_t)v140;
  sub_1000A39D0();
  swift_bridgeObjectRelease();
  sub_10000A9C0(v105, &qword_1000CDC48);
  sub_1000A40C0();
  uint64_t v106 = (uint64_t)v136;
  sub_1000A39E0();
  sub_10000A9C0(v104, &qword_1000CDC48);
  sub_10000A95C(v106, v87, &qword_1000CDC48);
  uint64_t v108 = (uint64_t)v134;
  uint64_t v107 = (uint64_t)v135;
  sub_10000B1C0((uint64_t)v134, (uint64_t)v135, &qword_1000CDC60);
  sub_10000B1C0(v87, v103, &qword_1000CDC48);
  sub_10000B1C0(v107, v102, &qword_1000CDC60);
  uint64_t v109 = sub_100004FDC(&qword_1000CDCC8);
  sub_10000B1C0(v103, v102 + *(int *)(v109 + 48), &qword_1000CDC48);
  sub_10000A9C0(v87, &qword_1000CDC48);
  sub_10000A9C0(v108, &qword_1000CDC60);
  sub_10000A9C0(v103, &qword_1000CDC48);
  return sub_10000A9C0(v107, &qword_1000CDC60);
}

uint64_t sub_100033510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v142 = a2;
  uint64_t v3 = sub_1000A3B90();
  uint64_t v135 = *(void *)(v3 - 8);
  uint64_t v136 = v3;
  __chkstk_darwin(v3);
  uint64_t v134 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1000A3C90();
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v124 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for MediumEmptyStateView();
  __chkstk_darwin(v123);
  uint64_t v7 = (uint64_t *)((char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004FDC(&qword_1000CDCF0);
  uint64_t v129 = *(void *)(v8 - 8);
  uint64_t v130 = v8;
  __chkstk_darwin(v8);
  uint64_t v126 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FDC(&qword_1000CDCF8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v128 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v132 = (char *)&v110 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v131 = (char *)&v110 - v16;
  __chkstk_darwin(v15);
  uint64_t v133 = (char *)&v110 - v17;
  uint64_t v18 = sub_1000A3490();
  __chkstk_darwin(v18 - 8);
  uint64_t v112 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100004FDC(&qword_1000CDD00);
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100004FDC(&qword_1000CDD08);
  uint64_t v21 = __chkstk_darwin(v121);
  uint64_t v113 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v116 = (uint64_t)&v110 - v23;
  uint64_t v118 = sub_100004FDC(&qword_1000CDD10);
  __chkstk_darwin(v118);
  uint64_t v120 = (uint64_t)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for MediumOneBookView(0);
  __chkstk_darwin(v119);
  long long v26 = (char *)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100004FDC(&qword_1000CDD18);
  __chkstk_darwin(v137);
  uint64_t v122 = (char *)&v110 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100004FDC(&qword_1000CDD20);
  __chkstk_darwin(v138);
  uint64_t v29 = (char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100004FDC(&qword_1000CDD28);
  __chkstk_darwin(v30);
  BOOL v32 = (char *)&v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100004FDC(&qword_1000CDD30);
  __chkstk_darwin(v139);
  uint64_t v34 = (char *)&v110 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for MediumWidgetView();
  uint64_t v36 = a1;
  uint64_t v37 = (uint64_t *)(a1 + *(int *)(result + 24));
  uint64_t v38 = v37[4];
  unint64_t v39 = *(void *)(v38 + 16);
  long long v140 = v29;
  uint64_t v141 = v10;
  if (v39 < 2)
  {
    uint64_t v110 = v30;
    uint64_t v111 = v34;
    if (v39)
    {
      uint64_t v62 = *(void *)(v38 + 64);
      uint64_t v61 = *(void *)(v38 + 72);
      if (v62 == 0xD000000000000023 && v61 == 0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
      {
        *uint64_t v7 = sub_10000A958();
        v7[1] = v63;
        uint64_t v64 = v123;
        uint64_t v65 = (char *)v7 + *(int *)(v123 + 20);
        uint64_t v66 = sub_1000A3D70();
        sub_1000A3D90();
        uint64_t v68 = v67;
        int v69 = sub_1000A3C40();
        sub_1000A3F70();
        uint64_t v70 = sub_1000A3F80();
        swift_release();
        uint64_t v71 = enum case for ColorScheme.dark(_:);
        uint64_t v72 = sub_1000A38E0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104))(v65, v71, v72);
        uint64_t v73 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
        long long v74 = &v65[v73[5]];
        uint64_t v75 = enum case for BlendMode.plusLighter(_:);
        uint64_t v76 = sub_1000A4090();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 104))(v74, v75, v76);
        *(void *)&v65[v73[6]] = v66;
        *(void *)&v65[v73[7]] = v68;
        *(_DWORD *)&v65[v73[8]] = v69;
        *(void *)&v65[v73[9]] = v70;
        *(void *)&v65[v73[10]] = 0x3FE570A3D70A3D71;
        *(void *)&v65[v73[11]] = 0x4018000000000000;
        *(void *)&v65[v73[12]] = 0x4030000000000000;
        uint64_t v77 = v124;
        sub_1000A3C70();
        uint64_t v78 = sub_100036448(&qword_1000CDD70, (void (*)(uint64_t))type metadata accessor for MediumEmptyStateView);
        long long v79 = v126;
        sub_1000A3F30();
        (*(void (**)(char *, uint64_t))(v125 + 8))(v77, v127);
        sub_100036490((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MediumEmptyStateView);
        *(void *)&long long v143 = sub_10000A958();
        *((void *)&v143 + 1) = v80;
        uint64_t v157 = v64;
        uint64_t v158 = v78;
        swift_getOpaqueTypeConformance2();
        sub_10000A504();
        uint64_t v81 = (uint64_t)v128;
        uint64_t v82 = v130;
        sub_1000A3F00();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v129 + 8))(v79, v82);
        unint64_t v83 = v134;
        sub_1000A3B80();
        uint64_t v84 = (uint64_t)v132;
        sub_1000A39C0();
        (*(void (**)(char *, uint64_t))(v135 + 8))(v83, v136);
        uint64_t v85 = sub_10000A9C0(v81, &qword_1000CDCF8);
        sub_10000AD40(v85);
        uint64_t v86 = (uint64_t)v131;
        sub_1000A39D0();
        swift_bridgeObjectRelease();
        sub_10000A9C0(v84, &qword_1000CDCF8);
        uint64_t v87 = (uint64_t)v133;
        sub_10000A95C(v86, (uint64_t)v133, &qword_1000CDCF8);
        sub_10000B1C0(v87, (uint64_t)v140, &qword_1000CDCF8);
        swift_storeEnumTagMultiPayload();
        sub_1000362C0();
        sub_10003633C();
        sub_1000A3C00();
        uint64_t v88 = v87;
        uint64_t v89 = &qword_1000CDCF8;
      }
      else
      {
        uint64_t v90 = *(void *)(v38 + 40);
        uint64_t v91 = *(void *)(v38 + 48);
        char v92 = *(unsigned char *)(v38 + 56);
        long long v93 = *(void **)(v38 + 80);
        uint64_t v94 = *(void **)(v38 + 88);
        uint64_t v95 = *(void *)(v38 + 96);
        uint64_t v96 = *(void *)(v38 + 104);
        char v97 = *(unsigned char *)(v38 + 112);
        uint64_t v157 = *(void *)(v38 + 32);
        uint64_t v158 = v90;
        uint64_t v159 = v91;
        char v160 = v92;
        uint64_t v161 = v62;
        uint64_t v162 = v61;
        uint64_t v163 = v93;
        unint64_t v164 = v94;
        uint64_t v165 = v95;
        uint64_t v166 = v96;
        char v167 = v97;
        *(void *)&long long v143 = v157;
        *((void *)&v143 + 1) = v90;
        *(void *)&long long v144 = v91;
        BYTE8(v144) = v92;
        *(void *)&long long v145 = v62;
        *((void *)&v145 + 1) = v61;
        *(void *)&long long v146 = v93;
        *((void *)&v146 + 1) = v94;
        *(void *)&long long v147 = v95;
        *((void *)&v147 + 1) = v96;
        LOBYTE(v148) = v97;
        uint64_t v135 = v90;
        swift_bridgeObjectRetain();
        uint64_t v136 = v61;
        swift_bridgeObjectRetain();
        unint64_t v98 = v93;
        uint64_t v134 = v94;
        swift_bridgeObjectRetain();
        if (sub_10001A23C())
        {
          sub_1000344E8((uint64_t)v26);
          sub_10003685C((uint64_t)v26, v120, type metadata accessor for MediumOneBookView);
          swift_storeEnumTagMultiPayload();
          sub_100036448(&qword_1000CDD38, (void (*)(uint64_t))type metadata accessor for MediumOneBookView);
          sub_1000360F0();
          uint64_t v99 = (uint64_t)v122;
          sub_1000A3C00();
          sub_100036490((uint64_t)v26, type metadata accessor for MediumOneBookView);
        }
        else
        {
          uint64_t v100 = sub_1000346AC(v112);
          __chkstk_darwin(v100);
          *(&v110 - 2) = v36;
          sub_100036448(&qword_1000CDD38, (void (*)(uint64_t))type metadata accessor for MediumOneBookView);
          uint64_t v133 = v98;
          char v101 = v114;
          sub_1000A3E10();
          uint64_t v155 = sub_10006D98C(0);
          uint64_t v156 = v102;
          sub_10000B17C(&qword_1000CDD40, &qword_1000CDD00);
          sub_10000A504();
          uint64_t v103 = v113;
          uint64_t v104 = v117;
          sub_1000A3F00();
          swift_bridgeObjectRelease();
          uint64_t v105 = v101;
          unint64_t v98 = v133;
          (*(void (**)(char *, uint64_t))(v115 + 8))(v105, v104);
          uint64_t v106 = (uint64_t)v103;
          uint64_t v107 = v116;
          sub_10000A95C(v106, v116, &qword_1000CDD08);
          sub_10000B1C0(v107, v120, &qword_1000CDD08);
          swift_storeEnumTagMultiPayload();
          sub_1000360F0();
          uint64_t v99 = (uint64_t)v122;
          sub_1000A3C00();
          sub_10000A9C0(v107, &qword_1000CDD08);
        }
        sub_10000B1C0(v99, (uint64_t)v32, &qword_1000CDD18);
        swift_storeEnumTagMultiPayload();
        sub_1000361C0();
        sub_100036214();
        uint64_t v108 = v99;
        uint64_t v109 = (uint64_t)v111;
        sub_1000A3C00();
        sub_10000B1C0(v109, (uint64_t)v140, &qword_1000CDD30);
        swift_storeEnumTagMultiPayload();
        sub_1000362C0();
        sub_10003633C();
        sub_1000A3C00();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10000A9C0(v109, &qword_1000CDD30);
        uint64_t v88 = v108;
        uint64_t v89 = &qword_1000CDD18;
      }
      return sub_10000A9C0(v88, v89);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v40 = *v37;
    uint64_t v41 = (char *)v37[1];
    char v42 = *((unsigned char *)v37 + 16);
    uint64_t v43 = v37[3];
    LODWORD(v136) = *((unsigned __int8 *)v37 + 40);
    uint64_t v44 = v37[6];
    uint64_t v45 = v37[7];
    uint64_t v134 = v41;
    uint64_t v135 = v44;
    uint64_t KeyPath = swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1000A3F70();
    sub_1000A3DB0();
    uint64_t v49 = v48;
    uint64_t v50 = sub_1000A3DE0();
    long long v143 = (unint64_t)KeyPath;
    long long v144 = 0uLL;
    LOBYTE(v145) = 0;
    *((void *)&v145 + 1) = v40;
    *(void *)&long long v146 = v134;
    BYTE8(v146) = v42;
    *(void *)&long long v147 = v43;
    *((void *)&v147 + 1) = v38;
    LOBYTE(v148) = v136;
    *((void *)&v148 + 1) = v135;
    *(void *)&v149[0] = v45;
    *(_OWORD *)((char *)v149 + 8) = xmmword_1000AA540;
    *(_OWORD *)((char *)&v149[1] + 8) = xmmword_1000AA550;
    *((void *)&v149[2] + 1) = v47;
    *(void *)&long long v150 = v49;
    *((void *)&v150 + 1) = 3;
    long long v151 = xmmword_1000AA560;
    long long v152 = xmmword_1000AA570;
    long long v153 = xmmword_1000AA580;
    uint64_t v154 = v50;
    long long v51 = v145;
    long long v52 = v146;
    long long v53 = v148;
    *((_OWORD *)v32 + 4) = v147;
    *((_OWORD *)v32 + 5) = v53;
    *((_OWORD *)v32 + 2) = v51;
    *((_OWORD *)v32 + 3) = v52;
    long long v54 = v149[0];
    long long v55 = v149[1];
    long long v56 = v150;
    *((_OWORD *)v32 + 8) = v149[2];
    *((_OWORD *)v32 + 9) = v56;
    *((_OWORD *)v32 + 6) = v54;
    *((_OWORD *)v32 + 7) = v55;
    long long v57 = v151;
    long long v58 = v152;
    long long v59 = v153;
    *((void *)v32 + 26) = v50;
    *((_OWORD *)v32 + 11) = v58;
    *((_OWORD *)v32 + 12) = v59;
    *((_OWORD *)v32 + 10) = v57;
    long long v60 = v144;
    *(_OWORD *)BOOL v32 = v143;
    *((_OWORD *)v32 + 1) = v60;
    swift_storeEnumTagMultiPayload();
    sub_1000364F0((uint64_t)&v143);
    sub_1000361C0();
    sub_100036214();
    sub_1000A3C00();
    sub_10000B1C0((uint64_t)v34, (uint64_t)v140, &qword_1000CDD30);
    swift_storeEnumTagMultiPayload();
    sub_1000362C0();
    sub_10003633C();
    sub_1000A3C00();
    sub_10000A9C0((uint64_t)v34, &qword_1000CDD30);
    return sub_100036568((uint64_t)&v143);
  }
  return result;
}

uint64_t sub_1000344E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediumWidgetView() + 24));
  uint64_t v4 = *v3;
  uint64_t v26 = v3[1];
  char v25 = *((unsigned char *)v3 + 16);
  uint64_t v5 = v3[4];
  uint64_t v24 = v3[3];
  char v23 = *((unsigned char *)v3 + 40);
  uint64_t v6 = v3[7];
  uint64_t v22 = v3[6];
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = *(void *)(v5 + 40);
    uint64_t v20 = *(void *)(v5 + 48);
    uint64_t v21 = *(void *)(v5 + 32);
    char v8 = *(unsigned char *)(v5 + 56);
    unint64_t v10 = *(void *)(v5 + 64);
    unint64_t v9 = *(void *)(v5 + 72);
    uint64_t v12 = *(void **)(v5 + 80);
    uint64_t v11 = *(void **)(v5 + 88);
    uint64_t v13 = *(void *)(v5 + 104);
    uint64_t v19 = *(void *)(v5 + 96);
    char v18 = *(unsigned char *)(v5 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v7 = 0;
    uint64_t v19 = 0;
    uint64_t v13 = 0;
    char v18 = 0;
    uint64_t v12 = (void *)BDSCloudAssetTypeStoreEbook;
    uint64_t v11 = (void *)BDSLibraryContentAssetTypeUnknown;
    unint64_t v9 = 0x80000001000A5050;
    unint64_t v10 = 0xD000000000000023;
    char v8 = 1;
  }
  id v14 = v12;
  id v15 = v11;
  *(void *)a1 = swift_getKeyPath();
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v26;
  *(unsigned char *)(a1 + 56) = v25;
  *(void *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = v23;
  *(void *)(a1 + 88) = v22;
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = v21;
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v20;
  *(unsigned char *)(a1 + 128) = v8;
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = v9;
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v15;
  *(void *)(a1 + 168) = v19;
  *(void *)(a1 + 176) = v13;
  *(unsigned char *)(a1 + 184) = v18;
  uint64_t v16 = (_OWORD *)(a1 + *(int *)(type metadata accessor for MediumOneBookView(0) + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1000925C8(v16);
}

uint64_t sub_1000346AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (_OWORD *)(v1 + *(int *)(type metadata accessor for MediumWidgetView() + 24));
  long long v3 = v2[3];
  long long v31 = v2[2];
  long long v32 = v3;
  long long v4 = v2[1];
  v30[0] = *v2;
  v30[1] = v4;
  if (*(void *)(v31 + 16))
  {
    uint64_t v5 = *(void *)(v31 + 32);
    char v6 = *(unsigned char *)(v31 + 56);
    unint64_t v7 = *(void *)(v31 + 64);
    unint64_t v8 = *(void *)(v31 + 72);
    unint64_t v10 = *(void **)(v31 + 80);
    unint64_t v9 = *(void **)(v31 + 88);
    uint64_t v12 = *(void *)(v31 + 96);
    uint64_t v11 = *(void *)(v31 + 104);
    char v13 = *(unsigned char *)(v31 + 112);
    long long v19 = *(_OWORD *)(v31 + 40);
    swift_bridgeObjectRetain();
    uint64_t v14 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    unint64_t v10 = (void *)BDSCloudAssetTypeStoreEbook;
    unint64_t v9 = (void *)BDSLibraryContentAssetTypeUnknown;
    unint64_t v8 = 0x80000001000A5050;
    long long v19 = 0u;
    unint64_t v7 = 0xD000000000000023;
    char v6 = 1;
  }
  id v15 = v10;
  id v16 = v9;
  uint64_t v20 = v14;
  long long v21 = v19;
  char v22 = v6;
  unint64_t v23 = v7;
  unint64_t v24 = v8;
  char v25 = v10;
  id v26 = v16;
  uint64_t v27 = v12;
  uint64_t v28 = v11;
  char v29 = v13;
  sub_100035AB4((uint64_t)v30);
  sub_10000886C((uint64_t)&v20, a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_100035AEC((uint64_t)v30);
}

uint64_t sub_100034824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CDCA0);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)v30 - v8;
  uint64_t v10 = sub_100004FDC(&qword_1000CDCD0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MediumReadingGoalView(0);
  __chkstk_darwin(v13);
  id v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10007B3C0())
  {
    uint64_t v16 = a1 + *(int *)(type metadata accessor for MediumWidgetView() + 24);
    uint64_t v17 = *(void *)(v16 + 8);
    char v18 = *(unsigned char *)(v16 + 16);
    uint64_t v19 = *(void *)(v16 + 24);
    uint64_t v20 = *(void *)(v16 + 32);
    char v21 = *(unsigned char *)(v16 + 40);
    uint64_t v23 = *(void *)(v16 + 48);
    uint64_t v22 = *(void *)(v16 + 56);
    *(void *)id v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    unsigned char v15[16] = v18;
    *((void *)v15 + 3) = v19;
    *((void *)v15 + 4) = v20;
    v15[40] = v21;
    *((void *)v15 + 6) = v23;
    *((void *)v15 + 7) = v22;
    uint64_t v24 = (uint64_t)&v15[*(int *)(v13 + 20)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10003E6B0(v24);
    sub_10003685C((uint64_t)v15, (uint64_t)v12, type metadata accessor for MediumReadingGoalView);
    swift_storeEnumTagMultiPayload();
    sub_100036448(&qword_1000CDC90, (void (*)(uint64_t))type metadata accessor for MediumReadingGoalView);
    sub_10000B17C(&qword_1000CDC98, &qword_1000CDCA0);
    sub_1000A3C00();
    return sub_100036490((uint64_t)v15, type metadata accessor for MediumReadingGoalView);
  }
  else
  {
    v30[1] = a2;
    unsigned __int8 v26 = sub_1000A3CE0();
    unsigned __int8 v27 = sub_1000A3D00();
    char v28 = sub_1000A3CF0();
    sub_1000A3CF0();
    if (sub_1000A3CF0() != v26) {
      char v28 = sub_1000A3CF0();
    }
    sub_1000A3CF0();
    if (sub_1000A3CF0() != v27) {
      char v28 = sub_1000A3CF0();
    }
    *unint64_t v7 = v28;
    uint64_t v29 = sub_100004FDC(&qword_1000CDCD8);
    sub_100034BF4(a1, (uint64_t)&v7[*(int *)(v29 + 44)]);
    sub_10000A95C((uint64_t)v7, (uint64_t)v9, &qword_1000CDCA0);
    sub_10000B1C0((uint64_t)v9, (uint64_t)v12, &qword_1000CDCA0);
    swift_storeEnumTagMultiPayload();
    sub_100036448(&qword_1000CDC90, (void (*)(uint64_t))type metadata accessor for MediumReadingGoalView);
    sub_10000B17C(&qword_1000CDC98, &qword_1000CDCA0);
    sub_1000A3C00();
    return sub_10000A9C0((uint64_t)v9, &qword_1000CDCA0);
  }
}

uint64_t sub_100034BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for LabelView();
  uint64_t v4 = (int *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v31 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v31 - v7);
  uint64_t v9 = sub_100004FDC(&qword_1000CDCE0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v31 - v14;
  uint64_t v16 = sub_100035E5C(0xD000000000000029, 0x80000001000A5B20, (uint64_t)"Turn on Reading Goals instruction", 33);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(a1 + *(int *)(type metadata accessor for MediumWidgetView() + 28));
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)((char *)v8 + v4[7]);
  *uint64_t v20 = v16;
  v20[1] = v18;
  *(uint64_t *)((char *)v8 + v4[8]) = v19;
  char v21 = (char *)v8 + v4[9];
  *(void *)char v21 = 0;
  *((void *)v21 + 1) = 0;
  *((_WORD *)v21 + 8) = 256;
  sub_10003685C((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LabelView);
  *(_WORD *)&v13[*(int *)(v10 + 44)] = 257;
  swift_retain();
  sub_100036490((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_10000A95C((uint64_t)v13, (uint64_t)v15, &qword_1000CDCE0);
  uint64_t v22 = sub_100035E5C(0xD000000000000021, 0x80000001000A5AB0, (uint64_t)"Turn on Reading Goals instruction - shorter version", 51);
  uint64_t v24 = v23;
  *uint64_t v8 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  char v25 = (uint64_t *)((char *)v8 + v4[7]);
  *char v25 = v22;
  v25[1] = v24;
  *(uint64_t *)((char *)v8 + v4[8]) = v19;
  unsigned __int8 v26 = (char *)v8 + v4[9];
  *(void *)unsigned __int8 v26 = 0;
  *((void *)v26 + 1) = 0;
  *((_WORD *)v26 + 8) = 256;
  sub_10000B1C0((uint64_t)v15, (uint64_t)v13, &qword_1000CDCE0);
  uint64_t v27 = v31;
  sub_10003685C((uint64_t)v8, v31, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v28 = v32;
  sub_10000B1C0((uint64_t)v13, v32, &qword_1000CDCE0);
  uint64_t v29 = sub_100004FDC(&qword_1000CDCE8);
  sub_10003685C(v27, v28 + *(int *)(v29 + 48), (uint64_t (*)(void))type metadata accessor for LabelView);
  swift_retain();
  sub_100036490((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_10000A9C0((uint64_t)v15, &qword_1000CDCE0);
  sub_100036490(v27, (uint64_t (*)(void))type metadata accessor for LabelView);
  return sub_10000A9C0((uint64_t)v13, &qword_1000CDCE0);
}

uint64_t sub_100034F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCAD0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BackgroundView();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)(a1 + *(int *)(type metadata accessor for MediumWidgetView() + 24));
  uint64_t v11 = *(void *)(v10[4] + 16);
  if (!v11)
  {
LABEL_25:
    *uint64_t v9 = swift_getKeyPath();
    sub_100004FDC(&qword_1000CCAD8);
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)v9 + *(int *)(v7 + 20)) = 0;
    sub_10003685C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BackgroundView);
    swift_storeEnumTagMultiPayload();
    sub_100036448(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
    goto LABEL_30;
  }
  uint64_t v42 = v4;
  uint64_t v43 = v7;
  uint64_t v44 = v9;
  uint64_t v45 = v6;
  uint64_t v46 = a2;
  unint64_t v12 = v10[7];
  uint64_t v50 = v10[6];
  uint64_t v13 = (void *)BDSLibraryContentAssetTypeAudiobook;
  uint64_t v47 = BDSCloudAssetTypeStoreAudiobook;
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v14 = (uint64_t *)(v41 + 64);
  unint64_t v48 = v12;
  uint64_t v49 = v13;
  while (1)
  {
    uint64_t v15 = *(v14 - 3);
    uint64_t v16 = v14[1];
    uint64_t v51 = *v14;
    uint64_t v18 = (void *)v14[2];
    uint64_t v17 = (void *)v14[3];
    uint64_t v52 = v14[5];
    uint64_t v53 = v15;
    uint64_t v19 = sub_1000A4340();
    uint64_t v21 = v20;
    if (v19 == sub_1000A4340() && v21 == v22) {
      char v24 = 1;
    }
    else {
      char v24 = sub_1000A46A0();
    }
    swift_bridgeObjectRetain();
    id v25 = v17;
    id v26 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v18;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_16;
    }
    if (!v18) {
      goto LABEL_3;
    }
    uint64_t v28 = sub_1000A4340();
    uint64_t v30 = v29;
    if (v28 == sub_1000A4340() && v30 == v31)
    {
      swift_bridgeObjectRelease_n();
LABEL_16:
      unint64_t v32 = v48;
      if (!v48) {
        goto LABEL_3;
      }
      goto LABEL_17;
    }
    char v34 = sub_1000A46A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v32 = v48;
    if ((v34 & 1) == 0 || !v48)
    {
LABEL_3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_17:
    if (v51 == v50 && v32 == v16) {
      break;
    }
    char v33 = sub_1000A46A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_27;
    }
LABEL_4:
    v14 += 11;
    --v11;
    uint64_t v13 = v49;
    if (!v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v45;
      uint64_t v7 = v43;
      uint64_t v9 = v44;
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v35 = qword_1000CC680;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = v44;
  uint64_t v36 = (uint64_t)v45;
  uint64_t v37 = v43;
  if (v35 != -1) {
    swift_once();
  }
  sub_10000A284(qword_1000D8058, qword_1000D8070);
  id v38 = sub_10005402C(v50, v32, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *uint64_t v9 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v9 + *(int *)(v37 + 20)) = (uint64_t)v38;
  sub_10003685C((uint64_t)v9, v36, (uint64_t (*)(void))type metadata accessor for BackgroundView);
  swift_storeEnumTagMultiPayload();
  sub_100036448(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
LABEL_30:
  sub_1000A3C00();
  return sub_100036490((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BackgroundView);
}

uint64_t sub_100035478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1000A45E0(40);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000026;
  unint64_t v13 = 0x80000001000A5BB0;
  v14._countAndFlagsBits = sub_10000957C();
  sub_1000A4380(v14);
  swift_bridgeObjectRelease();
  sub_1000A3470();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v7, v8);
  }
  sub_1000A3470();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v5, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
  }
  return result;
}

uint64_t sub_100035684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1000A45E0(40);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000026;
  unint64_t v13 = 0x80000001000A5BB0;
  v14._countAndFlagsBits = sub_100009838();
  sub_1000A4380(v14);
  swift_bridgeObjectRelease();
  sub_1000A3470();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v7, v8);
  }
  sub_1000A3470();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v5, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
  }
  return result;
}

uint64_t sub_100035890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1000A45E0(40);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000026;
  unint64_t v13 = 0x80000001000A5BB0;
  v14._countAndFlagsBits = sub_1000092D0();
  sub_1000A4380(v14);
  swift_bridgeObjectRelease();
  sub_1000A3470();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v7, v8);
  }
  sub_1000A3470();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v5, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_10000A9C0((uint64_t)v7, &qword_1000CCB30);
  }
  return result;
}

uint64_t sub_100035A9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100034F30(*(void *)(v1 + 16), a1);
}

uint64_t sub_100035AB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100035AEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100035B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogoView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100035B8C()
{
  unint64_t result = qword_1000CDC78;
  if (!qword_1000CDC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDC78);
  }
  return result;
}

uint64_t sub_100035BE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100034824(*(void *)(v1 + 16), a1);
}

unint64_t sub_100035BE8()
{
  unint64_t result = qword_1000CDC88;
  if (!qword_1000CDC88)
  {
    sub_100008B14(&qword_1000CDC80);
    sub_100036448(&qword_1000CDC90, (void (*)(uint64_t))type metadata accessor for MediumReadingGoalView);
    sub_10000B17C(&qword_1000CDC98, &qword_1000CDCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDC88);
  }
  return result;
}

uint64_t sub_100035CB8()
{
  return sub_100035CE8(&qword_1000CDCB0, &qword_1000CDC30, (void (*)(void))sub_100035D64);
}

uint64_t sub_100035CE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100035D64()
{
  unint64_t result = qword_1000CDCB8;
  if (!qword_1000CDCB8)
  {
    sub_100008B14(&qword_1000CDC28);
    sub_10000B17C(&qword_1000CDCC0, &qword_1000CDC20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDCB8);
  }
  return result;
}

uint64_t sub_100035E04()
{
  return sub_100035E5C(0x2073277961646F54, 0xEF676E6964616552, (uint64_t)"Today's Reading section title accessibility string (apostrophe is vertical)", 75);
}

uint64_t sub_100035E34()
{
  return sub_100035E5C(0xD000000000000029, 0x80000001000A5B20, (uint64_t)"Turn on Reading Goals instruction", 33);
}

uint64_t sub_100035E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a3;
  void v22[2] = a4;
  uint64_t v4 = sub_1000A3600();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = sub_1000A42F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v22 - v16;
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v20 = sub_1000A4360();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v20;
}

uint64_t sub_1000360CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000344E8(a1);
}

unint64_t sub_1000360F0()
{
  unint64_t result = qword_1000CDD48;
  if (!qword_1000CDD48)
  {
    sub_100008B14(&qword_1000CDD08);
    sub_10000B17C(&qword_1000CDD40, &qword_1000CDD00);
    sub_100036448((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDD48);
  }
  return result;
}

unint64_t sub_1000361C0()
{
  unint64_t result = qword_1000CDD50;
  if (!qword_1000CDD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDD50);
  }
  return result;
}

unint64_t sub_100036214()
{
  unint64_t result = qword_1000CDD58;
  if (!qword_1000CDD58)
  {
    sub_100008B14(&qword_1000CDD18);
    sub_100036448(&qword_1000CDD38, (void (*)(uint64_t))type metadata accessor for MediumOneBookView);
    sub_1000360F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDD58);
  }
  return result;
}

unint64_t sub_1000362C0()
{
  unint64_t result = qword_1000CDD60;
  if (!qword_1000CDD60)
  {
    sub_100008B14(&qword_1000CDD30);
    sub_1000361C0();
    sub_100036214();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDD60);
  }
  return result;
}

unint64_t sub_10003633C()
{
  unint64_t result = qword_1000CDD68;
  if (!qword_1000CDD68)
  {
    sub_100008B14(&qword_1000CDCF8);
    type metadata accessor for MediumEmptyStateView();
    sub_100036448(&qword_1000CDD70, (void (*)(uint64_t))type metadata accessor for MediumEmptyStateView);
    swift_getOpaqueTypeConformance2();
    sub_100036448((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDD68);
  }
  return result;
}

uint64_t sub_100036448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100036490(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000364F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100036568(uint64_t a1)
{
  return a1;
}

void *initializeBufferWithCopyOfBuffer for MediumWidgetView.ViewConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for MediumWidgetView.ViewConfiguration()
{
  return swift_release();
}

void *assignWithCopy for MediumWidgetView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for MediumWidgetView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyReadingGoalsViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyReadingGoalsViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumWidgetView.ViewConfiguration()
{
  return &type metadata for MediumWidgetView.ViewConfiguration;
}

unint64_t sub_100036740()
{
  unint64_t result = qword_1000CDD80;
  if (!qword_1000CDD80)
  {
    sub_100008B14(&qword_1000CDBE0);
    sub_100008B14(&qword_1000CDBD0);
    sub_100008B14(&qword_1000CCAB0);
    sub_10000B17C(&qword_1000CDBF0, &qword_1000CDBD0);
    sub_100008C08();
    swift_getOpaqueTypeConformance2();
    sub_10000B17C(&qword_1000CDD88, &qword_1000CCAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDD80);
  }
  return result;
}

uint64_t sub_10003685C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1000368C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000A4090();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v10 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v15 = *((void *)v14 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      id v38 = (void (*)(char *, char *, uint64_t))v8;
      uint64_t v39 = v15;
      uint64_t v18 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v18;
      uint64_t v19 = v14[12];
      uint64_t v40 = (char *)v12 + v19;
      uint64_t v20 = (char *)v13 + v19;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v40 = *(void *)v20;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v20;
        uint64_t v21 = sub_100004FDC(&qword_1000CDDD0);
        v38(&v40[*(int *)(v21 + 48)], &v20[*(int *)(v21 + 48)], v7);
        uint64_t v22 = *(int *)(v21 + 64);
        uint64_t v23 = &v40[v22];
        char v24 = &v20[v22];
        uint64_t v25 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = v14[16];
      id v27 = (char *)v12 + v26;
      uint64_t v28 = (char *)v13 + v26;
      uint64_t v29 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v14[20];
      uint64_t v31 = (char *)v12 + v30;
      unint64_t v32 = (char *)v13 + v30;
      uint64_t v33 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)((char *)v12 + v14[24]) = *(void *)((char *)v13 + v14[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v39 + 56))(v12, 0, 1, v14);
    }
    uint64_t v34 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v34) = *(uint64_t *)((char *)a2 + v34);
    uint64_t v35 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v35) = *(uint64_t *)((char *)a2 + v35);
    uint64_t v36 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v36) = *(uint64_t *)((char *)a2 + v36);
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100036C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A4090();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = (int *)sub_100004FDC(&qword_1000CCB90);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v9 = sub_100004FDC(&qword_1000CDDD0);
      v5(v8 + *(int *)(v9 + 48), v4);
      uint64_t v10 = v8 + *(int *)(v9 + 64);
      uint64_t v11 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v6 + v7[16];
    uint64_t v13 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v6 + v7[20];
    uint64_t v15 = sub_1000A3D80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100036EAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v36 = (void (*)(char *, char *, uint64_t))v7;
    uint64_t v37 = v14;
    uint64_t v16 = v12[1];
    void *v11 = *v12;
    v11[1] = v16;
    uint64_t v17 = v13[12];
    id v38 = (char *)v11 + v17;
    uint64_t v18 = (char *)v12 + v17;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)id v38 = *(void *)v18;
      swift_retain();
    }
    else
    {
      *(_DWORD *)id v38 = *(_DWORD *)v18;
      uint64_t v19 = sub_100004FDC(&qword_1000CDDD0);
      v36(&v38[*(int *)(v19 + 48)], &v18[*(int *)(v19 + 48)], v6);
      uint64_t v20 = *(int *)(v19 + 64);
      uint64_t v21 = &v38[v20];
      uint64_t v22 = &v18[v20];
      uint64_t v23 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = v13[16];
    uint64_t v25 = (char *)v11 + v24;
    uint64_t v26 = (char *)v12 + v24;
    uint64_t v27 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = v13[20];
    uint64_t v29 = (char *)v11 + v28;
    uint64_t v30 = (char *)v12 + v28;
    uint64_t v31 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(void *)((char *)v11 + v13[24]) = *(void *)((char *)v12 + v13[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v37 + 56))(v11, 0, 1, v13);
  }
  uint64_t v32 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  uint64_t v33 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  uint64_t v34 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100037224(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v48 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v49 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v49 + 48);
  uint64_t v12 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v8)
  {
    if (!v13)
    {
      *uint64_t v12 = *v9;
      v12[1] = v9[1];
      uint64_t v14 = v10[12];
      uint64_t v15 = (char *)v12 + v14;
      uint64_t v16 = (char *)v9 + v14;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v15 = *(void *)v16;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
        uint64_t v21 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(&v15[*(int *)(v21 + 48)], &v16[*(int *)(v21 + 48)], v6);
        uint64_t v22 = *(int *)(v21 + 64);
        uint64_t v23 = &v15[v22];
        uint64_t v24 = &v16[v22];
        uint64_t v25 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = v10[16];
      uint64_t v27 = (char *)v12 + v26;
      uint64_t v28 = (char *)v9 + v26;
      uint64_t v29 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v10[20];
      uint64_t v31 = (char *)v12 + v30;
      uint64_t v32 = (char *)v9 + v30;
      uint64_t v33 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)((char *)v12 + v10[24]) = *(void *)((char *)v9 + v10[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v49 + 56))(v12, 0, 1, v10);
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v17 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v12, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
    sub_10000A9C0((uint64_t)v12, &qword_1000CCB90);
    goto LABEL_7;
  }
  *uint64_t v12 = *v9;
  v12[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v18 = v10[12];
    uint64_t v19 = (char *)v12 + v18;
    uint64_t v20 = (char *)v9 + v18;
    sub_10003E614((uint64_t)v12 + v18, type metadata accessor for CircularProgressView.ColorStyle);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      uint64_t v34 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(&v19[*(int *)(v34 + 48)], &v20[*(int *)(v34 + 48)], v6);
      uint64_t v35 = *(int *)(v34 + 64);
      uint64_t v36 = &v19[v35];
      uint64_t v37 = &v20[v35];
      uint64_t v38 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v39 = v10[16];
  uint64_t v40 = (char *)v12 + v39;
  uint64_t v41 = (char *)v9 + v39;
  uint64_t v42 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = v10[20];
  uint64_t v44 = (char *)v12 + v43;
  uint64_t v45 = (char *)v9 + v43;
  uint64_t v46 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  *(void *)((char *)v12 + v10[24]) = *(void *)((char *)v9 + v10[24]);
LABEL_16:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_1000377F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  int v13 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v36 = (void (*)(char *, char *, uint64_t))v7;
    uint64_t v37 = v14;
    _OWORD *v11 = *v12;
    uint64_t v16 = v13[12];
    __dst = (_DWORD *)((char *)v11 + v16);
    uint64_t v17 = (_DWORD *)((char *)v12 + v16);
    uint64_t v18 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      _DWORD *__dst = *v17;
      uint64_t v35 = sub_100004FDC(&qword_1000CDDD0);
      v36((char *)__dst + *(int *)(v35 + 48), (char *)v17 + *(int *)(v35 + 48), v6);
      uint64_t v19 = *(int *)(v35 + 64);
      uint64_t v20 = (char *)__dst + v19;
      uint64_t v21 = (char *)v17 + v19;
      uint64_t v22 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v23 = v13[16];
    uint64_t v24 = (char *)v11 + v23;
    uint64_t v25 = (char *)v12 + v23;
    uint64_t v26 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    uint64_t v27 = v13[20];
    uint64_t v28 = (char *)v11 + v27;
    uint64_t v29 = (char *)v12 + v27;
    uint64_t v30 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    *(void *)((char *)v11 + v13[24]) = *(void *)((char *)v12 + v13[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v37 + 56))(v11, 0, 1, v13);
  }
  uint64_t v31 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  uint64_t v33 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_100037B50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  (*(void (**)(uint64_t, uint64_t))(v58 + 40))(a1, a2);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v60 = *((void *)v12 - 1);
  int v13 = *(uint64_t (**)(void *, uint64_t, int *))(v60 + 48);
  uint64_t v14 = v10;
  LODWORD(v10) = v13(v10, 1, v12);
  uint64_t v15 = v11;
  int v16 = v13(v11, 1, v12);
  if (v10)
  {
    if (!v16)
    {
      uint64_t v17 = v14;
      *(_OWORD *)uint64_t v14 = *v15;
      uint64_t v18 = v12[12];
      uint64_t v19 = (_DWORD *)((char *)v14 + v18);
      uint64_t v20 = (_DWORD *)((char *)v15 + v18);
      uint64_t v21 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        *uint64_t v19 = *v20;
        uint64_t v29 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))((char *)v19 + *(int *)(v29 + 48), (char *)v20 + *(int *)(v29 + 48), v59);
        uint64_t v30 = *(int *)(v29 + 64);
        uint64_t v31 = (char *)v19 + v30;
        uint64_t v32 = (char *)v20 + v30;
        uint64_t v33 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v34 = v12[16];
      uint64_t v35 = (char *)v17 + v34;
      uint64_t v36 = (char *)v15 + v34;
      uint64_t v37 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      uint64_t v38 = v12[20];
      uint64_t v39 = (char *)v17 + v38;
      uint64_t v40 = (char *)v15 + v38;
      uint64_t v41 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      *(void *)((char *)v17 + v12[24]) = *(void *)((char *)v15 + v12[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v60 + 56))(v17, 0, 1, v12);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v22 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v14, v11, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_15;
  }
  if (v16)
  {
    sub_10000A9C0((uint64_t)v14, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v23 = v11[1];
  uint64_t v24 = v14;
  *uint64_t v14 = *v11;
  v14[1] = v23;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v25 = v12[12];
    uint64_t v26 = (_DWORD *)((char *)v14 + v25);
    uint64_t v27 = (_DWORD *)((char *)v11 + v25);
    sub_10003E614((uint64_t)v14 + v25, type metadata accessor for CircularProgressView.ColorStyle);
    uint64_t v28 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      *uint64_t v26 = *v27;
      uint64_t v42 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))((char *)v26 + *(int *)(v42 + 48), (char *)v27 + *(int *)(v42 + 48), v59);
      uint64_t v43 = *(int *)(v42 + 64);
      uint64_t v44 = (char *)v26 + v43;
      uint64_t v45 = (char *)v27 + v43;
      uint64_t v46 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v47 = v12[16];
  uint64_t v48 = (char *)v24 + v47;
  uint64_t v49 = (char *)v11 + v47;
  uint64_t v50 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = v12[20];
  uint64_t v52 = (char *)v24 + v51;
  uint64_t v53 = (char *)v11 + v51;
  uint64_t v54 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  *(void *)((char *)v24 + v12[24]) = *(void *)((char *)v11 + v12[24]);
LABEL_15:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_release();
  uint64_t v55 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  uint64_t v56 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v56) = *(void *)(a2 + v56);
  return a1;
}

uint64_t sub_1000380D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000380EC);
}

uint64_t sub_1000380EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for CircularProgressView.Content(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 40);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 44));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100038200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100038214);
}

uint64_t sub_100038214(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000A4090();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for CircularProgressView.Content(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 40);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SmallReadingGoalView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CDE30);
}

uint64_t sub_100038344()
{
  uint64_t result = sub_1000A4090();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CircularProgressView.Content(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100038438(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v31 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    char v10 = *(unsigned char *)(a2 + 32);
    sub_100011214(*(void *)a2, v7, v8, v9, v10);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v10;
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    uint64_t v13 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v13;
    uint64_t v14 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v14;
    uint64_t v56 = a3;
    long long v57 = *(void **)(a2 + 120);
    uint64_t v60 = *(void **)(a2 + 128);
    *(void *)(a1 + 120) = v57;
    *(void *)(a1 + 128) = v60;
    uint64_t v15 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v15;
    *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
    uint64_t v16 = *(void *)(a2 + 168);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (char *)(a1 + v17);
    uint64_t v19 = (char *)(a2 + v17);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v16;
    uint64_t v20 = sub_1000A4090();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v57;
    id v23 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v59 = v21;
    uint64_t v61 = v20;
    v21(v18, v19, v20);
    uint64_t v24 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
    *(void *)&v18[v24[5]] = *(void *)&v19[v24[5]];
    *(void *)&v18[v24[6]] = *(void *)&v19[v24[6]];
    *(void *)&v18[v24[7]] = *(void *)&v19[v24[7]];
    *(void *)&v18[v24[8]] = *(void *)&v19[v24[8]];
    *(void *)&v18[v24[9]] = *(void *)&v19[v24[9]];
    uint64_t v25 = v24[10];
    uint64_t v26 = &v18[v25];
    uint64_t v27 = &v19[v25];
    uint64_t v28 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v29 = *((void *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v54 = v26;
      uint64_t v55 = v29;
      uint64_t v32 = *((void *)v27 + 1);
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = v32;
      uint64_t v33 = v28[12];
      uint64_t v58 = &v26[v33];
      uint64_t v34 = &v27[v33];
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v58 = *(void *)v34;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v58 = *(_DWORD *)v34;
        uint64_t v35 = sub_100004FDC(&qword_1000CDDD0);
        v59(&v58[*(int *)(v35 + 48)], &v34[*(int *)(v35 + 48)], v61);
        uint64_t v36 = *(int *)(v35 + 64);
        uint64_t v37 = &v58[v36];
        uint64_t v38 = &v34[v36];
        uint64_t v39 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v28[16];
      uint64_t v41 = (char *)v54 + v40;
      uint64_t v42 = &v27[v40];
      uint64_t v43 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      uint64_t v44 = v28[20];
      uint64_t v45 = (char *)v54 + v44;
      uint64_t v46 = &v27[v44];
      uint64_t v47 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      *(void *)((char *)v54 + v28[24]) = *(void *)&v27[v28[24]];
      (*(void (**)(void *, void, uint64_t, int *))(v55 + 56))(v54, 0, 1, v28);
    }
    *(void *)&v18[v24[11]] = *(void *)&v19[v24[11]];
    *(void *)&v18[v24[12]] = *(void *)&v19[v24[12]];
    *(void *)&v18[v24[13]] = *(void *)&v19[v24[13]];
    *(void *)&v18[v24[14]] = *(void *)&v19[v24[14]];
    *(void *)&v18[v24[15]] = *(void *)&v19[v24[15]];
    *(void *)&v18[v24[16]] = *(void *)&v19[v24[16]];
    *(void *)&v18[v24[17]] = *(void *)&v19[v24[17]];
    uint64_t v48 = *(int *)(v56 + 28);
    uint64_t v49 = a1 + v48;
    uint64_t v50 = a2 + v48;
    uint64_t v51 = sub_1000A3930();
    uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v52(v49, v50, v51);
  }
  return a1;
}

uint64_t sub_100038944(uint64_t a1, uint64_t a2)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000A4090();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v4 + *(int *)(type metadata accessor for SmallReadingGoalView.ViewConfiguration(0) + 40);
  uint64_t v8 = (int *)sub_100004FDC(&qword_1000CCB90);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v22 = a2;
      uint64_t v10 = sub_100004FDC(&qword_1000CDDD0);
      v6(v9 + *(int *)(v10 + 48), v5);
      uint64_t v11 = *(int *)(v10 + 64);
      a2 = v22;
      uint64_t v12 = v9 + v11;
      uint64_t v13 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v7 + v8[16];
    uint64_t v15 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v7 + v8[20];
    uint64_t v17 = sub_1000A3D80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = a1 + *(int *)(a2 + 28);
  uint64_t v19 = sub_1000A3930();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);

  return v20(v18, v19);
}

uint64_t sub_100038C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  uint64_t v55 = a3;
  uint64_t v56 = *(void **)(a2 + 120);
  uint64_t v58 = *(void **)(a2 + 128);
  *(void *)(a1 + 120) = v56;
  *(void *)(a1 + 128) = v58;
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  uint64_t v15 = *(void *)(a2 + 168);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v15;
  uint64_t v19 = sub_1000A4090();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = v56;
  id v22 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = v20;
  v20(v17, v18, v19);
  id v23 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  *(void *)&v17[v23[5]] = *(void *)&v18[v23[5]];
  *(void *)&v17[v23[6]] = *(void *)&v18[v23[6]];
  *(void *)&v17[v23[7]] = *(void *)&v18[v23[7]];
  *(void *)&v17[v23[8]] = *(void *)&v18[v23[8]];
  *(void *)&v17[v23[9]] = *(void *)&v18[v23[9]];
  uint64_t v24 = v23[10];
  uint64_t v25 = &v17[v24];
  uint64_t v26 = &v18[v24];
  uint64_t v27 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v52 = v19;
    uint64_t v53 = v25;
    uint64_t v54 = v28;
    uint64_t v30 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v30;
    uint64_t v31 = v27[12];
    long long v57 = &v25[v31];
    uint64_t v32 = &v26[v31];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)long long v57 = *(void *)v32;
      swift_retain();
    }
    else
    {
      *(_DWORD *)long long v57 = *(_DWORD *)v32;
      uint64_t v33 = sub_100004FDC(&qword_1000CDDD0);
      v59(&v57[*(int *)(v33 + 48)], &v32[*(int *)(v33 + 48)], v52);
      uint64_t v34 = *(int *)(v33 + 64);
      uint64_t v35 = &v57[v34];
      uint64_t v36 = &v32[v34];
      uint64_t v37 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v27[16];
    uint64_t v39 = (char *)v53 + v38;
    uint64_t v40 = &v26[v38];
    uint64_t v41 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    uint64_t v42 = v27[20];
    uint64_t v43 = (char *)v53 + v42;
    uint64_t v44 = &v26[v42];
    uint64_t v45 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    *(void *)((char *)v53 + v27[24]) = *(void *)&v26[v27[24]];
    (*(void (**)(void *, void, uint64_t, int *))(v54 + 56))(v53, 0, 1, v27);
  }
  *(void *)&v17[v23[11]] = *(void *)&v18[v23[11]];
  *(void *)&v17[v23[12]] = *(void *)&v18[v23[12]];
  *(void *)&v17[v23[13]] = *(void *)&v18[v23[13]];
  *(void *)&v17[v23[14]] = *(void *)&v18[v23[14]];
  *(void *)&v17[v23[15]] = *(void *)&v18[v23[15]];
  *(void *)&v17[v23[16]] = *(void *)&v18[v23[16]];
  *(void *)&v17[v23[17]] = *(void *)&v18[v23[17]];
  uint64_t v46 = *(int *)(v55 + 28);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = sub_1000A3930();
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v50(v47, v48, v49);
  return a1;
}

uint64_t sub_1000390C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_10000A4F8(v11, v12, v13, v14, v15);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v17;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)(a1 + 120);
  uint64_t v19 = *(void **)(a2 + 120);
  *(void *)(a1 + 120) = v19;
  id v20 = v19;

  id v21 = *(void **)(a2 + 128);
  id v22 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v21;
  id v23 = v21;

  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v78 = a3;
  uint64_t v24 = *(int *)(a3 + 24);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_1000A4090();
  uint64_t v74 = *(void *)(v27 - 8);
  uint64_t v75 = v27;
  (*(void (**)(uint64_t, uint64_t))(v74 + 24))(v25, v26);
  uint64_t v28 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  *(void *)(v25 + v28[5]) = *(void *)(v26 + v28[5]);
  *(void *)(v25 + v28[6]) = *(void *)(v26 + v28[6]);
  *(void *)(v25 + v28[7]) = *(void *)(v26 + v28[7]);
  *(void *)(v25 + v28[8]) = *(void *)(v26 + v28[8]);
  *(void *)(v25 + v28[9]) = *(void *)(v26 + v28[9]);
  uint64_t v29 = v28[10];
  uint64_t v30 = (void *)(v25 + v29);
  uint64_t v31 = (void *)(v26 + v29);
  uint64_t v32 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v76 = *((void *)v32 - 1);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, int *))(v76 + 48);
  long long v79 = v30;
  LODWORD(v30) = v33(v30, 1, v32);
  __src = v31;
  int v34 = v33(v31, 1, v32);
  if (v30)
  {
    if (v34)
    {
      size_t v35 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v36 = v79;
LABEL_6:
      memcpy(v36, v31, v35);
      goto LABEL_17;
    }
    *long long v79 = *v31;
    v79[1] = v31[1];
    uint64_t v37 = v32[12];
    uint64_t v38 = (char *)v79 + v37;
    uint64_t v39 = (char *)v31 + v37;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v38 = *(void *)v39;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      uint64_t v44 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(&v38[*(int *)(v44 + 48)], &v39[*(int *)(v44 + 48)], v75);
      uint64_t v45 = *(int *)(v44 + 64);
      uint64_t v46 = &v38[v45];
      uint64_t v47 = &v39[v45];
      uint64_t v48 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v32[16];
    uint64_t v50 = (char *)v79 + v49;
    uint64_t v51 = (char *)v31 + v49;
    uint64_t v52 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    uint64_t v53 = v32[20];
    uint64_t v54 = (char *)v79 + v53;
    uint64_t v55 = (char *)v31 + v53;
    uint64_t v56 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    *(void *)((char *)v79 + v32[24]) = *(void *)((char *)v31 + v32[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v76 + 56))(v79, 0, 1, v32);
  }
  else
  {
    if (v34)
    {
      sub_10000A9C0((uint64_t)v79, &qword_1000CCB90);
      size_t v35 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v36 = v79;
      goto LABEL_6;
    }
    uint64_t v40 = v31;
    *long long v79 = *v31;
    v79[1] = v31[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (a1 != a2)
    {
      uint64_t v41 = v32[12];
      uint64_t v42 = (char *)v31 + v41;
      uint64_t v43 = (char *)v79 + v41;
      sub_10003E614((uint64_t)v79 + v41, type metadata accessor for CircularProgressView.ColorStyle);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v43 = *(void *)v42;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v42;
        uint64_t v77 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(&v43[*(int *)(v77 + 48)], &v42[*(int *)(v77 + 48)], v75);
        uint64_t v57 = *(int *)(v77 + 64);
        uint64_t v58 = &v43[v57];
        uint64_t v59 = &v42[v57];
        uint64_t v60 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = __src;
    }
    uint64_t v61 = v32[16];
    uint64_t v62 = (char *)v79 + v61;
    uint64_t v63 = (char *)v40 + v61;
    uint64_t v64 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 24))(v62, v63, v64);
    uint64_t v65 = v32[20];
    uint64_t v66 = (char *)v79 + v65;
    uint64_t v67 = (char *)v40 + v65;
    uint64_t v68 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 24))(v66, v67, v68);
    *(void *)((char *)v79 + v32[24]) = *(void *)((char *)v40 + v32[24]);
  }
LABEL_17:
  *(void *)(v25 + v28[11]) = *(void *)(v26 + v28[11]);
  swift_retain();
  swift_release();
  *(void *)(v25 + v28[12]) = *(void *)(v26 + v28[12]);
  swift_retain();
  swift_release();
  *(void *)(v25 + v28[13]) = *(void *)(v26 + v28[13]);
  swift_retain();
  swift_release();
  *(void *)(v25 + v28[14]) = *(void *)(v26 + v28[14]);
  *(void *)(v25 + v28[15]) = *(void *)(v26 + v28[15]);
  *(void *)(v25 + v28[16]) = *(void *)(v26 + v28[16]);
  *(void *)(v25 + v28[17]) = *(void *)(v26 + v28[17]);
  uint64_t v69 = *(int *)(v78 + 28);
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  uint64_t v72 = sub_1000A3930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
  return a1;
}

uint64_t sub_100039834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v9 = sub_1000A4090();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v43(v7, v8, v9);
  char v10 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  *(void *)(v7 + v10[9]) = *(void *)(v8 + v10[9]);
  uint64_t v11 = v10[10];
  uint64_t v12 = (_OWORD *)(v7 + v11);
  uint64_t v13 = (_OWORD *)(v8 + v11);
  uint64_t v14 = sub_100004FDC(&qword_1000CCB90);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v41 = v13;
    uint64_t v42 = v15;
    *uint64_t v12 = *v13;
    uint64_t v39 = v12;
    uint64_t v40 = (int *)v14;
    uint64_t v17 = *(int *)(v14 + 48);
    uint64_t v18 = (_DWORD *)((char *)v12 + v17);
    uint64_t v19 = (_DWORD *)((char *)v13 + v17);
    uint64_t v20 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v21 = sub_100004FDC(&qword_1000CDDD0);
      v43((uint64_t)v18 + *(int *)(v21 + 48), (uint64_t)v19 + *(int *)(v21 + 48), v9);
      uint64_t v22 = *(int *)(v21 + 64);
      id v23 = (char *)v18 + v22;
      uint64_t v24 = (char *)v19 + v22;
      uint64_t v25 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v26 = v40[16];
    uint64_t v27 = (char *)v39 + v26;
    uint64_t v28 = (char *)v41 + v26;
    uint64_t v29 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    uint64_t v30 = v40[20];
    uint64_t v31 = (char *)v39 + v30;
    uint64_t v32 = (char *)v41 + v30;
    uint64_t v33 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    *(void *)((char *)v39 + v40[24]) = *(void *)((char *)v41 + v40[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v42 + 56))(v39, 0, 1, v40);
  }
  *(void *)(v7 + v10[11]) = *(void *)(v8 + v10[11]);
  *(void *)(v7 + v10[12]) = *(void *)(v8 + v10[12]);
  *(void *)(v7 + v10[13]) = *(void *)(v8 + v10[13]);
  *(void *)(v7 + v10[14]) = *(void *)(v8 + v10[14]);
  *(void *)(v7 + v10[15]) = *(void *)(v8 + v10[15]);
  *(void *)(v7 + v10[16]) = *(void *)(v8 + v10[16]);
  *(void *)(v7 + v10[17]) = *(void *)(v8 + v10[17]);
  uint64_t v34 = *(int *)(a3 + 28);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_1000A3930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  return a1;
}

uint64_t sub_100039C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_10000A4F8(v7, v8, v9, v10, v11);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  uint64_t v15 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v17;
  swift_bridgeObjectRelease();
  uint64_t v76 = a3;
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1000A4090();
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v69 = v21;
  (*(void (**)(uint64_t, uint64_t))(v68 + 40))(v19, v20);
  uint64_t v22 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  *(void *)(v19 + v22[5]) = *(void *)(v20 + v22[5]);
  *(void *)(v19 + v22[6]) = *(void *)(v20 + v22[6]);
  *(void *)(v19 + v22[7]) = *(void *)(v20 + v22[7]);
  *(void *)(v19 + v22[8]) = *(void *)(v20 + v22[8]);
  *(void *)(v19 + v22[9]) = *(void *)(v20 + v22[9]);
  uint64_t v23 = v22[10];
  uint64_t v24 = v19 + v23;
  uint64_t v25 = (char *)(v20 + v23);
  uint64_t v26 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v72 = (void *)*((void *)v26 - 1);
  uint64_t v74 = v24;
  uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, int *))v72[6];
  LODWORD(v24) = v27(v24, 1, v26);
  __src = v25;
  int v28 = v27((uint64_t)v25, 1, v26);
  if (v24)
  {
    if (v28)
    {
      size_t v29 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v30 = (void *)v74;
LABEL_6:
      memcpy(v30, v25, v29);
      goto LABEL_16;
    }
    *(_OWORD *)uint64_t v74 = *(_OWORD *)v25;
    uint64_t v31 = v26[12];
    uint64_t v32 = (_DWORD *)(v74 + v31);
    uint64_t v33 = &__src[v31];
    __dst = (void *)type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v32, v33, *(void *)(*(__dst - 1) + 64));
    }
    else
    {
      _DWORD *v32 = *(_DWORD *)v33;
      uint64_t v64 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))((char *)v32 + *(int *)(v64 + 48), &v33[*(int *)(v64 + 48)], v69);
      uint64_t v38 = *(int *)(v64 + 64);
      uint64_t v70 = (char *)v32 + v38;
      uint64_t v39 = &v33[v38];
      uint64_t v40 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v70, v39, v40);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v41 = v26[16];
    uint64_t v42 = v74 + v41;
    uint64_t v43 = &__src[v41];
    uint64_t v44 = sub_1000A3E00();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
    uint64_t v45 = v26[20];
    uint64_t v46 = v74 + v45;
    uint64_t v47 = &__src[v45];
    uint64_t v48 = sub_1000A3D80();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    *(void *)(v74 + v26[24]) = *(void *)&__src[v26[24]];
    ((void (*)(uint64_t, void, uint64_t, int *))v72[7])(v74, 0, 1, v26);
  }
  else
  {
    if (v28)
    {
      sub_10000A9C0(v74, &qword_1000CCB90);
      size_t v29 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v30 = (void *)v74;
      goto LABEL_6;
    }
    uint64_t v34 = *((void *)v25 + 1);
    *(void *)uint64_t v74 = *(void *)v25;
    *(void *)(v74 + 8) = v34;
    swift_bridgeObjectRelease();
    if (a1 != a2)
    {
      uint64_t v35 = v26[12];
      uint64_t v36 = &v25[v35];
      __dsta = (_DWORD *)(v74 + v35);
      sub_10003E614(v74 + v35, type metadata accessor for CircularProgressView.ColorStyle);
      uint64_t v37 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dsta, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        _DWORD *__dsta = *(_DWORD *)v36;
        uint64_t v65 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))((char *)__dsta + *(int *)(v65 + 48), &v36[*(int *)(v65 + 48)], v69);
        uint64_t v49 = *(int *)(v65 + 64);
        uint64_t v71 = (char *)__dsta + v49;
        uint64_t v73 = &v36[v49];
        uint64_t v50 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v71, v73, v50);
        swift_storeEnumTagMultiPayload();
      }
    }
    uint64_t v51 = v26[16];
    uint64_t v52 = v74 + v51;
    uint64_t v53 = &__src[v51];
    uint64_t v54 = sub_1000A3E00();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
    uint64_t v55 = v26[20];
    uint64_t v56 = v74 + v55;
    uint64_t v57 = &__src[v55];
    uint64_t v58 = sub_1000A3D80();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
    *(void *)(v74 + v26[24]) = *(void *)&__src[v26[24]];
  }
LABEL_16:
  *(void *)(v19 + v22[11]) = *(void *)(v20 + v22[11]);
  swift_release();
  *(void *)(v19 + v22[12]) = *(void *)(v20 + v22[12]);
  swift_release();
  *(void *)(v19 + v22[13]) = *(void *)(v20 + v22[13]);
  swift_release();
  *(void *)(v19 + v22[14]) = *(void *)(v20 + v22[14]);
  *(void *)(v19 + v22[15]) = *(void *)(v20 + v22[15]);
  *(void *)(v19 + v22[16]) = *(void *)(v20 + v22[16]);
  *(void *)(v19 + v22[17]) = *(void *)(v20 + v22[17]);
  uint64_t v59 = *(int *)(v76 + 28);
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_1000A3930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  return a1;
}

uint64_t sub_10003A360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003A374);
}

uint64_t sub_10003A374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000A3930();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10003A4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003A4B4);
}

uint64_t sub_10003A4B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 112) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000A3930();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SmallReadingGoalView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CDEF0);
}

uint64_t sub_10003A600()
{
  uint64_t result = type metadata accessor for SmallReadingGoalView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A3930();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10003A6DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003A6F8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = sub_1000A3490();
  __chkstk_darwin(v3 - 8);
  uint64_t v63 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004FDC(&qword_1000CDF38);
  uint64_t v69 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CDF40);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v58 - v10;
  __chkstk_darwin(v9);
  uint64_t v66 = (uint64_t)&v58 - v11;
  uint64_t v12 = sub_1000A3CB0();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004FDC(&qword_1000CDD90);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100004FDC(&qword_1000CDD98);
  __chkstk_darwin(v59);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004FDC(&qword_1000CDF48);
  uint64_t v20 = *(void *)(v71 - 8);
  uint64_t v21 = __chkstk_darwin(v71);
  uint64_t v62 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v58 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v58 - v26;
  *(void *)uint64_t v17 = sub_1000A3B60();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v28 = sub_100004FDC(&qword_1000CDF50);
  sub_10003AE30(a1, (uint64_t)&v17[*(int *)(v28 + 44)]);
  uint64_t v29 = sub_1000A4070();
  sub_100030F50(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v19, 0.0, 1, INFINITY, 0, v29, v30);
  sub_10000A9C0((uint64_t)v17, &qword_1000CDD90);
  sub_1000A3CA0();
  sub_1000A4070();
  sub_10003E2B8();
  sub_100035B8C();
  sub_1000A3F20();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v61);
  sub_10000A9C0((uint64_t)v19, &qword_1000CDD98);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v25, v71);
  long long v31 = *(_OWORD *)(a1 + 120);
  long long v32 = *(_OWORD *)(a1 + 152);
  v84[6] = *(_OWORD *)(a1 + 136);
  v84[7] = v32;
  uint64_t v85 = *(void *)(a1 + 168);
  long long v33 = *(_OWORD *)(a1 + 56);
  long long v34 = *(_OWORD *)(a1 + 88);
  _OWORD v84[2] = *(_OWORD *)(a1 + 72);
  v84[3] = v34;
  v84[4] = *(_OWORD *)(a1 + 104);
  v84[5] = v31;
  v84[0] = *(_OWORD *)(a1 + 40);
  v84[1] = v33;
  sub_10000A32C((uint64_t)v84);
  sub_100031A40(v63);
  sub_10000A398((uint64_t)v84);
  uint64_t v72 = a1;
  sub_100004FDC(&qword_1000CDF68);
  sub_10003E390(&qword_1000CDF70, &qword_1000CDF68, (void (*)(void))sub_10003E360);
  uint64_t v35 = v64;
  sub_1000A3E10();
  long long v36 = *(_OWORD *)(a1 + 120);
  long long v37 = *(_OWORD *)(a1 + 152);
  long long v81 = *(_OWORD *)(a1 + 136);
  long long v82 = v37;
  uint64_t v83 = *(void *)(a1 + 168);
  long long v38 = *(_OWORD *)(a1 + 56);
  long long v39 = *(_OWORD *)(a1 + 88);
  long long v77 = *(_OWORD *)(a1 + 72);
  long long v78 = v39;
  long long v79 = *(_OWORD *)(a1 + 104);
  long long v80 = v36;
  long long v75 = *(_OWORD *)(a1 + 40);
  long long v76 = v38;
  uint64_t v40 = sub_10006E6E0();
  if (v41) {
    uint64_t v42 = v40;
  }
  else {
    uint64_t v42 = 0;
  }
  if (v41) {
    unint64_t v43 = v41;
  }
  else {
    unint64_t v43 = 0xE000000000000000;
  }
  uint64_t v73 = v42;
  unint64_t v74 = v43;
  sub_10000B17C(&qword_1000CDFB8, &qword_1000CDF38);
  sub_10000A504();
  uint64_t v44 = (uint64_t)v65;
  uint64_t v45 = v67;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v45);
  uint64_t v46 = v66;
  sub_10000A95C(v44, v66, &qword_1000CDF40);
  uint64_t v47 = v20;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v49 = v62;
  uint64_t v50 = v27;
  uint64_t v51 = v27;
  uint64_t v52 = v71;
  v48(v62, v51, v71);
  uint64_t v53 = v68;
  sub_10000B1C0(v46, v68, &qword_1000CDF40);
  uint64_t v54 = v70;
  v48(v70, v49, v52);
  uint64_t v55 = sub_100004FDC(&qword_1000CDFC0);
  sub_10000B1C0(v53, (uint64_t)&v54[*(int *)(v55 + 48)], &qword_1000CDF40);
  sub_10000A9C0(v46, &qword_1000CDF40);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v47 + 8);
  v56(v50, v52);
  sub_10000A9C0(v53, &qword_1000CDF40);
  return ((uint64_t (*)(char *, uint64_t))v56)(v49, v52);
}

uint64_t sub_10003AE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000CE018);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CE020);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100004FDC(&qword_1000CE028) - 8;
  __chkstk_darwin(v56);
  uint64_t v55 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004FDC(&qword_1000CE030) - 8;
  uint64_t v11 = __chkstk_darwin(v58);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v57 = (uint64_t)&v54 - v14;
  *(void *)uint64_t v5 = sub_1000A3BA0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v15 = sub_100004FDC(&qword_1000CE038);
  sub_10003B2A8(a1, (uint64_t)&v5[*(int *)(v15 + 44)]);
  char v16 = sub_1000A3D40();
  long long v17 = *(_OWORD *)(a1 + 16);
  v64[0] = *(_OWORD *)a1;
  v64[1] = v17;
  char v65 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v64, (uint64_t)v66, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v66, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v64, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v9, &qword_1000CE018);
  uint64_t v26 = &v9[*(int *)(v7 + 44)];
  *uint64_t v26 = v16;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CE018);
  char v27 = sub_1000A3D60();
  long long v28 = *(_OWORD *)(a1 + 16);
  v62[0] = *(_OWORD *)a1;
  v62[1] = v28;
  char v63 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v62, (uint64_t)v67, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v67, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v62, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v55;
  sub_10000B1C0((uint64_t)v9, v55, &qword_1000CE020);
  uint64_t v38 = v37 + *(int *)(v56 + 44);
  *(unsigned char *)uint64_t v38 = v27;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v34;
  *(void *)(v38 + 32) = v36;
  *(unsigned char *)(v38 + 40) = 0;
  sub_10000A9C0((uint64_t)v9, &qword_1000CE020);
  char v39 = sub_1000A3D20();
  long long v40 = *(_OWORD *)(a1 + 16);
  v60[0] = *(_OWORD *)a1;
  v60[1] = v40;
  char v61 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v60, (uint64_t)v68, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v68, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v60, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_10000B1C0(v37, (uint64_t)v13, &qword_1000CE028);
  uint64_t v49 = &v13[*(int *)(v58 + 44)];
  *uint64_t v49 = v39;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_10000A9C0(v37, &qword_1000CE028);
  uint64_t v50 = v57;
  sub_10000A95C((uint64_t)v13, v57, &qword_1000CE030);
  sub_10000B1C0(v50, (uint64_t)v13, &qword_1000CE030);
  uint64_t v51 = v59;
  sub_10000B1C0((uint64_t)v13, v59, &qword_1000CE030);
  uint64_t v52 = v51 + *(int *)(sub_100004FDC(&qword_1000CE040) + 48);
  *(void *)uint64_t v52 = 0;
  *(unsigned char *)(v52 + 8) = 1;
  sub_10000A9C0(v50, &qword_1000CE030);
  return sub_10000A9C0((uint64_t)v13, &qword_1000CE030);
}

uint64_t sub_10003B2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_1000A3490();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for BookCoverView();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v58 - v10;
  uint64_t v63 = sub_100004FDC(&qword_1000CCF08);
  __chkstk_darwin(v63);
  uint64_t v59 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100004FDC(&qword_1000CE048);
  uint64_t v12 = __chkstk_darwin(v65);
  uint64_t v68 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v64 = (uint64_t)&v58 - v15;
  __chkstk_darwin(v14);
  uint64_t v67 = (uint64_t)&v58 - v16;
  long long v17 = *(_OWORD *)(a1 + 152);
  long long v89 = *(_OWORD *)(a1 + 136);
  long long v90 = v17;
  long long v18 = *(_OWORD *)(a1 + 120);
  unint64_t v91 = *(void *)(a1 + 168);
  long long v19 = *(_OWORD *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 88);
  long long v85 = *(_OWORD *)(a1 + 72);
  long long v86 = v20;
  long long v87 = *(_OWORD *)(a1 + 104);
  long long v88 = v18;
  v84[0] = *(_OWORD *)(a1 + 40);
  v84[1] = v19;
  v92[2] = v87;
  v92[3] = v18;
  v92[4] = v89;
  v92[0] = v85;
  v92[1] = v20;
  char v93 = v90;
  long long v80 = v87;
  long long v81 = v18;
  long long v82 = v89;
  long long v78 = v85;
  long long v79 = v20;
  char v83 = v90;
  unint64_t v21 = *((void *)&v90 + 1);
  unint64_t v22 = v91;
  long long v72 = v85;
  long long v73 = v20;
  long long v23 = v87;
  char v77 = v90;
  long long v75 = v18;
  long long v76 = v89;
  long long v74 = v87;
  sub_10000A32C((uint64_t)v84);
  uint64_t v60 = v5;
  sub_10000832C((uint64_t)&v78, (uint64_t)v5);
  sub_10000A398((uint64_t)v84);
  char v24 = sub_10001A23C();
  if (v22)
  {
    if (__PAIR128__(v22, v21) == v23) {
      char v25 = 1;
    }
    else {
      char v25 = sub_1000A46A0();
    }
  }
  else
  {
    char v25 = 0;
  }
  *uint64_t v9 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))((char *)v9 + v6[5], v60, v62);
  *((unsigned char *)v9 + v6[6]) = v24 & 1;
  uint64_t v26 = (char *)v9 + v6[7];
  long long v27 = v81;
  *((_OWORD *)v26 + 2) = v80;
  *((_OWORD *)v26 + 3) = v27;
  *((_OWORD *)v26 + 4) = v82;
  v26[80] = v83;
  long long v28 = v79;
  *(_OWORD *)uint64_t v26 = v78;
  *((_OWORD *)v26 + 1) = v28;
  *((unsigned char *)v9 + v6[8]) = v25 & 1;
  *((unsigned char *)v9 + v6[9]) = 1;
  uint64_t v29 = v66;
  sub_10001312C((uint64_t)v9, v66);
  sub_100013190((uint64_t)v92);
  char v30 = sub_1000A3D60();
  long long v31 = *(_OWORD *)(a1 + 16);
  v70[0] = *(_OWORD *)a1;
  v70[1] = v31;
  char v71 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v70, (uint64_t)v94, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v94, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v70, (void (*)(void, void, void, void, void))sub_10000A4F8);
  type metadata accessor for SmallReadingGoalView(0);
  type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  sub_1000A38C0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = v59;
  sub_10003E5AC(v29, v59, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  uint64_t v41 = v40 + *(int *)(v63 + 36);
  *(unsigned char *)uint64_t v41 = v30;
  *(void *)(v41 + 8) = v33;
  *(void *)(v41 + 16) = v35;
  *(void *)(v41 + 24) = v37;
  *(void *)(v41 + 32) = v39;
  *(unsigned char *)(v41 + 40) = 0;
  sub_10003E614(v29, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  char v42 = sub_1000A3D30();
  sub_1000A38C0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v64;
  sub_10000B1C0(v40, v64, &qword_1000CCF08);
  uint64_t v52 = v51 + *(int *)(v65 + 36);
  *(unsigned char *)uint64_t v52 = v42;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  sub_10000A9C0(v40, &qword_1000CCF08);
  uint64_t v53 = v67;
  sub_10000A95C(v51, v67, &qword_1000CE048);
  uint64_t v54 = v68;
  sub_10000B1C0(v53, v68, &qword_1000CE048);
  uint64_t v55 = v69;
  sub_10000B1C0(v54, v69, &qword_1000CE048);
  uint64_t v56 = v55 + *(int *)(sub_100004FDC(&qword_1000CE050) + 48);
  *(void *)uint64_t v56 = 0;
  *(unsigned char *)(v56 + 8) = 0;
  sub_10000A9C0(v53, &qword_1000CE048);
  return sub_10000A9C0(v54, &qword_1000CE048);
}

uint64_t sub_10003B864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000CDFB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004FDC(&qword_1000CDFA0);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004FDC(&qword_1000CDF90);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004FDC(&qword_1000CDF80);
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004FDC(&qword_1000CDF68);
  __chkstk_darwin(v47);
  uint64_t v46 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v13 = sub_1000A3CE0();
  unsigned __int8 v14 = sub_1000A3D00();
  char v15 = sub_1000A3CF0();
  sub_1000A3CF0();
  if (sub_1000A3CF0() != v13) {
    char v15 = sub_1000A3CF0();
  }
  sub_1000A3CF0();
  if (sub_1000A3CF0() != v14) {
    char v15 = sub_1000A3CF0();
  }
  *uint64_t v5 = v15;
  uint64_t v16 = sub_100004FDC(&qword_1000CDFC8);
  sub_10003BDC0(a1, (uint64_t)&v5[*(int *)(v16 + 44)]);
  unsigned __int8 v17 = sub_1000A3D20();
  unsigned __int8 v18 = sub_1000A3D30();
  char v19 = sub_1000A3D50();
  sub_1000A3D50();
  if (sub_1000A3D50() != v17) {
    char v19 = sub_1000A3D50();
  }
  sub_1000A3D50();
  if (sub_1000A3D50() != v18) {
    char v19 = sub_1000A3D50();
  }
  uint64_t v20 = a1 + *(int *)(type metadata accessor for SmallReadingGoalView(0) + 24);
  uint64_t v21 = type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  sub_1000A38C0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFB0);
  char v30 = &v7[*(int *)(v43 + 36)];
  *char v30 = v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFB0);
  sub_1000A3920();
  sub_1000A4080();
  sub_1000A3910();
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFA0);
  long long v31 = &v9[*(int *)(v44 + 36)];
  long long v32 = v50;
  *(_OWORD *)long long v31 = v49;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v51;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFA0);
  double v33 = *(double *)(v20 + *(int *)(v21 + 28));
  double v34 = *(double *)(v20 + *(int *)(v21 + 32));
  sub_1000A4070();
  if (v33 > v34)
  {
    sub_1000A44C0();
    uint64_t v35 = (void *)sub_1000A3CD0();
    sub_1000A3750();
  }
  sub_1000A3A30();
  sub_10000B1C0((uint64_t)v9, (uint64_t)v11, &qword_1000CDF90);
  uint64_t v36 = &v11[*(int *)(v45 + 36)];
  long long v37 = v57;
  *((_OWORD *)v36 + 4) = v56;
  *((_OWORD *)v36 + 5) = v37;
  *((_OWORD *)v36 + 6) = v58;
  long long v38 = v53;
  *(_OWORD *)uint64_t v36 = v52;
  *((_OWORD *)v36 + 1) = v38;
  long long v39 = v55;
  *((_OWORD *)v36 + 2) = v54;
  *((_OWORD *)v36 + 3) = v39;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDF90);
  uint64_t v40 = v46;
  sub_10000B1C0((uint64_t)v11, v46, &qword_1000CDF80);
  *(_WORD *)(v40 + *(int *)(v47 + 36)) = 256;
  sub_10000A9C0((uint64_t)v11, &qword_1000CDF80);
  return sub_10000A95C(v40, v48, &qword_1000CDF68);
}

uint64_t sub_10003BDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v193 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000CDFD0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v187 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_100004FDC(&qword_1000CDFD8) - 8;
  __chkstk_darwin(v205);
  uint64_t v7 = (char *)&v187 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_100004FDC(&qword_1000CDFE0) - 8;
  __chkstk_darwin(v204);
  uint64_t v9 = (char *)&v187 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_100004FDC(&qword_1000CDFE8) - 8;
  uint64_t v10 = __chkstk_darwin(v206);
  uint64_t v192 = (uint64_t)&v187 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v191 = (uint64_t)&v187 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v190 = (uint64_t)&v187 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v189 = (uint64_t)&v187 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v188 = (uint64_t)&v187 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v195 = (uint64_t)&v187 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v199 = (uint64_t)&v187 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v197 = (uint64_t)&v187 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v201 = (uint64_t)&v187 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v202 = (uint64_t)&v187 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v203 = (uint64_t)&v187 - v31;
  __chkstk_darwin(v30);
  uint64_t v198 = (uint64_t)&v187 - v32;
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v200 = sub_100004FDC(&qword_1000CDFF0);
  sub_10003CD30(a1, (uint64_t)&v5[*(int *)(v200 + 44)]);
  char v33 = sub_1000A3D40();
  long long v34 = *(_OWORD *)(a1 + 16);
  v229[0] = *(_OWORD *)a1;
  v229[1] = v34;
  char v230 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v229, (uint64_t)v231, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v231, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v229, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFD0);
  uint64_t v43 = &v7[*(int *)(v205 + 44)];
  *uint64_t v43 = v33;
  *((void *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFD0);
  char v44 = sub_1000A3D60();
  long long v45 = *(_OWORD *)(a1 + 16);
  v227[0] = *(_OWORD *)a1;
  v227[1] = v45;
  char v228 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v227, (uint64_t)v232, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v232, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v227, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFD8);
  long long v54 = &v9[*(int *)(v204 + 44)];
  *long long v54 = v44;
  *((void *)v54 + 1) = v47;
  *((void *)v54 + 2) = v49;
  *((void *)v54 + 3) = v51;
  *((void *)v54 + 4) = v53;
  v54[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFD8);
  uint64_t v55 = v203;
  sub_10000B1C0((uint64_t)v9, v203, &qword_1000CDFE0);
  *(_WORD *)(v55 + *(int *)(v206 + 44)) = 257;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDFE0);
  sub_10000A95C(v55, v198, &qword_1000CDFE8);
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_10003D278(a1, (uint64_t)&v5[*(int *)(v200 + 44)]);
  char v56 = sub_1000A3D40();
  long long v57 = *(_OWORD *)(a1 + 16);
  v225[0] = *(_OWORD *)a1;
  v225[1] = v57;
  char v226 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v225, (uint64_t)v233, &qword_1000CCE68);
  v196 = sub_100011214;
  sub_100012D8C((uint64_t)v233, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v225, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFD0);
  uint64_t v66 = &v7[*(int *)(v205 + 44)];
  *uint64_t v66 = v56;
  *((void *)v66 + 1) = v59;
  *((void *)v66 + 2) = v61;
  *((void *)v66 + 3) = v63;
  *((void *)v66 + 4) = v65;
  unsigned char v66[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFD0);
  char v67 = sub_1000A3D60();
  long long v68 = *(_OWORD *)(a1 + 16);
  v223[0] = *(_OWORD *)a1;
  v223[1] = v68;
  char v224 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v223, (uint64_t)v234, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v234, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v223, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFD8);
  char v77 = &v9[*(int *)(v204 + 44)];
  char *v77 = v67;
  *((void *)v77 + 1) = v70;
  *((void *)v77 + 2) = v72;
  *((void *)v77 + 3) = v74;
  *((void *)v77 + 4) = v76;
  v77[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFD8);
  uint64_t v78 = v202;
  sub_10000B1C0((uint64_t)v9, v202, &qword_1000CDFE0);
  *(_WORD *)(v78 + *(int *)(v206 + 44)) = 257;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDFE0);
  sub_10000A95C(v78, v203, &qword_1000CDFE8);
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v79 = v200;
  sub_10003D7C8(a1, (uint64_t)&v5[*(int *)(v200 + 44)]);
  char v80 = sub_1000A3D40();
  long long v81 = *(_OWORD *)(a1 + 16);
  v221[0] = *(_OWORD *)a1;
  v221[1] = v81;
  char v222 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v221, (uint64_t)v235, &qword_1000CCE68);
  long long v82 = v196;
  sub_100012D8C((uint64_t)v235, (void (*)(void, void, void, void, void))v196);
  sub_100009B60();
  sub_100012D8C((uint64_t)v221, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFD0);
  unint64_t v91 = &v7[*(int *)(v205 + 44)];
  *unint64_t v91 = v80;
  *((void *)v91 + 1) = v84;
  *((void *)v91 + 2) = v86;
  *((void *)v91 + 3) = v88;
  *((void *)v91 + 4) = v90;
  v91[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFD0);
  char v92 = sub_1000A3D60();
  long long v93 = *(_OWORD *)(a1 + 16);
  v219[0] = *(_OWORD *)a1;
  v219[1] = v93;
  char v220 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v219, (uint64_t)v236, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v236, (void (*)(void, void, void, void, void))v82);
  sub_100009B60();
  sub_100012D8C((uint64_t)v219, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v95 = v94;
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v101 = v100;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFD8);
  uint64_t v102 = &v9[*(int *)(v204 + 44)];
  *uint64_t v102 = v92;
  *((void *)v102 + 1) = v95;
  *((void *)v102 + 2) = v97;
  *((void *)v102 + 3) = v99;
  *((void *)v102 + 4) = v101;
  v102[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFD8);
  uint64_t v103 = v201;
  sub_10000B1C0((uint64_t)v9, v201, &qword_1000CDFE0);
  *(_WORD *)(v103 + *(int *)(v206 + 44)) = 257;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDFE0);
  sub_10000A95C(v103, v202, &qword_1000CDFE8);
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_10003DD18(a1, (uint64_t)&v5[*(int *)(v79 + 44)]);
  char v104 = sub_1000A3D40();
  long long v105 = *(_OWORD *)(a1 + 16);
  v217[0] = *(_OWORD *)a1;
  v217[1] = v105;
  char v218 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v217, (uint64_t)v237, &qword_1000CCE68);
  uint64_t v106 = v196;
  sub_100012D8C((uint64_t)v237, (void (*)(void, void, void, void, void))v196);
  sub_100009B60();
  v194 = sub_10000A4F8;
  sub_100012D8C((uint64_t)v217, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFD0);
  uint64_t v115 = &v7[*(int *)(v205 + 44)];
  *uint64_t v115 = v104;
  *((void *)v115 + 1) = v108;
  *((void *)v115 + 2) = v110;
  *((void *)v115 + 3) = v112;
  *((void *)v115 + 4) = v114;
  v115[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFD0);
  char v116 = sub_1000A3D60();
  long long v117 = *(_OWORD *)(a1 + 16);
  v215[0] = *(_OWORD *)a1;
  v215[1] = v117;
  char v216 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v215, (uint64_t)v238, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v238, (void (*)(void, void, void, void, void))v106);
  sub_100009B60();
  sub_100012D8C((uint64_t)v215, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v119 = v118;
  uint64_t v121 = v120;
  uint64_t v123 = v122;
  uint64_t v125 = v124;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFD8);
  uint64_t v126 = &v9[*(int *)(v204 + 44)];
  *uint64_t v126 = v116;
  *((void *)v126 + 1) = v119;
  *((void *)v126 + 2) = v121;
  *((void *)v126 + 3) = v123;
  *((void *)v126 + 4) = v125;
  v126[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFD8);
  uint64_t v127 = v197;
  sub_10000B1C0((uint64_t)v9, v197, &qword_1000CDFE0);
  *(_WORD *)(v127 + *(int *)(v206 + 44)) = 257;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDFE0);
  sub_10000A95C(v127, v201, &qword_1000CDFE8);
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_10003D7C8(a1, (uint64_t)&v5[*(int *)(v200 + 44)]);
  char v128 = sub_1000A3D40();
  long long v129 = *(_OWORD *)(a1 + 16);
  v213[0] = *(_OWORD *)a1;
  v213[1] = v129;
  char v214 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v213, (uint64_t)v239, &qword_1000CCE68);
  uint64_t v130 = v196;
  sub_100012D8C((uint64_t)v239, (void (*)(void, void, void, void, void))v196);
  sub_100009B60();
  uint64_t v131 = v194;
  sub_100012D8C((uint64_t)v213, (void (*)(void, void, void, void, void))v194);
  sub_1000A38C0();
  uint64_t v133 = v132;
  uint64_t v135 = v134;
  uint64_t v137 = v136;
  uint64_t v139 = v138;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFD0);
  long long v140 = &v7[*(int *)(v205 + 44)];
  *long long v140 = v128;
  *((void *)v140 + 1) = v133;
  *((void *)v140 + 2) = v135;
  *((void *)v140 + 3) = v137;
  *((void *)v140 + 4) = v139;
  v140[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFD0);
  char v141 = sub_1000A3D60();
  long long v142 = *(_OWORD *)(a1 + 16);
  v211[0] = *(_OWORD *)a1;
  v211[1] = v142;
  char v212 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v211, (uint64_t)v240, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v240, (void (*)(void, void, void, void, void))v130);
  sub_100009B60();
  sub_100012D8C((uint64_t)v211, (void (*)(void, void, void, void, void))v131);
  sub_1000A38C0();
  uint64_t v144 = v143;
  uint64_t v146 = v145;
  uint64_t v148 = v147;
  uint64_t v150 = v149;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFD8);
  long long v151 = &v9[*(int *)(v204 + 44)];
  char *v151 = v141;
  *((void *)v151 + 1) = v144;
  *((void *)v151 + 2) = v146;
  *((void *)v151 + 3) = v148;
  *((void *)v151 + 4) = v150;
  v151[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFD8);
  uint64_t v152 = v199;
  sub_10000B1C0((uint64_t)v9, v199, &qword_1000CDFE0);
  *(_WORD *)(v152 + *(int *)(v206 + 44)) = 257;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDFE0);
  sub_10000A95C(v152, v197, &qword_1000CDFE8);
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_10003DD18(a1, (uint64_t)&v5[*(int *)(v200 + 44)]);
  char v153 = sub_1000A3D40();
  long long v154 = *(_OWORD *)(a1 + 16);
  v209[0] = *(_OWORD *)a1;
  v209[1] = v154;
  char v210 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v209, (uint64_t)v241, &qword_1000CCE68);
  uint64_t v155 = v130;
  sub_100012D8C((uint64_t)v241, (void (*)(void, void, void, void, void))v130);
  sub_100009B60();
  uint64_t v156 = v194;
  sub_100012D8C((uint64_t)v209, (void (*)(void, void, void, void, void))v194);
  sub_1000A38C0();
  uint64_t v158 = v157;
  uint64_t v160 = v159;
  uint64_t v162 = v161;
  uint64_t v164 = v163;
  sub_10000B1C0((uint64_t)v5, (uint64_t)v7, &qword_1000CDFD0);
  uint64_t v165 = &v7[*(int *)(v205 + 44)];
  char *v165 = v153;
  *((void *)v165 + 1) = v158;
  *((void *)v165 + 2) = v160;
  *((void *)v165 + 3) = v162;
  *((void *)v165 + 4) = v164;
  v165[40] = 0;
  sub_10000A9C0((uint64_t)v5, &qword_1000CDFD0);
  LOBYTE(v5) = sub_1000A3D60();
  long long v166 = *(_OWORD *)(a1 + 16);
  v207[0] = *(_OWORD *)a1;
  v207[1] = v166;
  char v208 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v207, (uint64_t)v242, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v242, (void (*)(void, void, void, void, void))v155);
  sub_100009B60();
  sub_100012D8C((uint64_t)v207, (void (*)(void, void, void, void, void))v156);
  sub_1000A38C0();
  uint64_t v168 = v167;
  uint64_t v170 = v169;
  uint64_t v172 = v171;
  uint64_t v174 = v173;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v9, &qword_1000CDFD8);
  uint64_t v175 = &v9[*(int *)(v204 + 44)];
  *uint64_t v175 = (char)v5;
  *((void *)v175 + 1) = v168;
  *((void *)v175 + 2) = v170;
  *((void *)v175 + 3) = v172;
  *((void *)v175 + 4) = v174;
  v175[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CDFD8);
  uint64_t v176 = v195;
  sub_10000B1C0((uint64_t)v9, v195, &qword_1000CDFE0);
  *(_WORD *)(v176 + *(int *)(v206 + 44)) = 257;
  sub_10000A9C0((uint64_t)v9, &qword_1000CDFE0);
  uint64_t v177 = v199;
  sub_10000A95C(v176, v199, &qword_1000CDFE8);
  sub_10000B1C0(v198, v176, &qword_1000CDFE8);
  uint64_t v178 = v188;
  sub_10000B1C0(v203, v188, &qword_1000CDFE8);
  uint64_t v179 = v189;
  sub_10000B1C0(v202, v189, &qword_1000CDFE8);
  uint64_t v180 = v190;
  sub_10000B1C0(v201, v190, &qword_1000CDFE8);
  uint64_t v181 = v197;
  uint64_t v182 = v191;
  sub_10000B1C0(v197, v191, &qword_1000CDFE8);
  uint64_t v183 = v192;
  sub_10000B1C0(v177, v192, &qword_1000CDFE8);
  uint64_t v184 = v193;
  sub_10000B1C0(v176, v193, &qword_1000CDFE8);
  v185 = (int *)sub_100004FDC(&qword_1000CDFF8);
  sub_10000B1C0(v178, v184 + v185[12], &qword_1000CDFE8);
  sub_10000B1C0(v179, v184 + v185[16], &qword_1000CDFE8);
  sub_10000B1C0(v180, v184 + v185[20], &qword_1000CDFE8);
  sub_10000B1C0(v182, v184 + v185[24], &qword_1000CDFE8);
  sub_10000B1C0(v183, v184 + v185[28], &qword_1000CDFE8);
  sub_10000A9C0(v199, &qword_1000CDFE8);
  sub_10000A9C0(v181, &qword_1000CDFE8);
  sub_10000A9C0(v201, &qword_1000CDFE8);
  sub_10000A9C0(v202, &qword_1000CDFE8);
  sub_10000A9C0(v203, &qword_1000CDFE8);
  sub_10000A9C0(v198, &qword_1000CDFE8);
  sub_10000A9C0(v183, &qword_1000CDFE8);
  sub_10000A9C0(v182, &qword_1000CDFE8);
  sub_10000A9C0(v180, &qword_1000CDFE8);
  sub_10000A9C0(v179, &qword_1000CDFE8);
  sub_10000A9C0(v178, &qword_1000CDFE8);
  return sub_10000A9C0(v195, &qword_1000CDFE8);
}

uint64_t sub_10003CD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v61 = type metadata accessor for LabelView() - 8;
  __chkstk_darwin(v61);
  uint64_t v4 = (uint64_t *)((char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_100004FDC(&qword_1000CE000) - 8;
  uint64_t v5 = __chkstk_darwin(v63);
  uint64_t v60 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v62 = (uint64_t)&v57 - v7;
  uint64_t v8 = type metadata accessor for ReadingProgressIconView(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100004FDC(&qword_1000CE008);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v58 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v57 - v15;
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for SmallReadingGoalView(0) + 24);
  uint64_t v18 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  uint64_t v19 = *(void *)(v17 + v18[12]);
  uint64_t v20 = *(void *)(v17 + v18[13]);
  uint64_t v21 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v22 = (char *)v10 + v21[7];
  uint64_t v23 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v17, v23);
  uint64_t v24 = *(void *)(v17 + v18[14]);
  uint64_t v25 = *(void *)(v17 + v18[15]);
  sub_10003E5AC(v17 + v18[10], (uint64_t)v10 + v21[10], type metadata accessor for CircularProgressView.Content);
  void *v10 = v16;
  v10[1] = v19;
  void v10[2] = v20;
  *(void *)((char *)v10 + v21[8]) = v24;
  *(void *)((char *)v10 + v21[9]) = v25;
  *((unsigned char *)v10 + v21[11]) = 0;
  swift_retain();
  swift_retain();
  LOBYTE(v19) = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v58;
  sub_10003E5AC((uint64_t)v10, v58, type metadata accessor for ReadingProgressIconView);
  uint64_t v35 = v34 + *(int *)(v12 + 44);
  *(unsigned char *)uint64_t v35 = v19;
  *(void *)(v35 + 8) = v27;
  *(void *)(v35 + 16) = v29;
  *(void *)(v35 + 24) = v31;
  *(void *)(v35 + 32) = v33;
  *(unsigned char *)(v35 + 40) = 0;
  sub_10003E614((uint64_t)v10, type metadata accessor for ReadingProgressIconView);
  uint64_t v36 = v59;
  sub_10000A95C(v34, v59, &qword_1000CE008);
  long long v37 = *(_OWORD *)(a1 + 120);
  long long v38 = *(_OWORD *)(a1 + 152);
  long long v71 = *(_OWORD *)(a1 + 136);
  long long v72 = v38;
  uint64_t v73 = *(void *)(a1 + 168);
  long long v39 = *(_OWORD *)(a1 + 56);
  long long v40 = *(_OWORD *)(a1 + 88);
  long long v67 = *(_OWORD *)(a1 + 72);
  long long v68 = v40;
  long long v69 = *(_OWORD *)(a1 + 104);
  long long v70 = v37;
  long long v65 = *(_OWORD *)(a1 + 40);
  long long v66 = v39;
  uint64_t v41 = sub_10006E6E0();
  uint64_t v43 = v42;
  uint64_t v44 = *(void *)(v17 + v18[11]);
  swift_retain();
  uint64_t v45 = sub_1000A3C30();
  *uint64_t v4 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v61;
  uint64_t v47 = (uint64_t *)((char *)v4 + *(int *)(v61 + 28));
  *uint64_t v47 = v41;
  v47[1] = v43;
  *(uint64_t *)((char *)v4 + *(int *)(v46 + 32)) = v44;
  uint64_t v48 = (char *)v4 + *(int *)(v46 + 36);
  *(void *)uint64_t v48 = v45;
  *((void *)v48 + 1) = 0;
  *((_WORD *)v48 + 8) = 1;
  uint64_t v49 = *(void *)(v17 + v18[5]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = v60;
  sub_10003E5AC((uint64_t)v4, v60, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v52 = v51 + *(int *)(v63 + 44);
  *(void *)uint64_t v52 = KeyPath;
  *(void *)(v52 + 8) = v49;
  *(unsigned char *)(v52 + 16) = 0;
  sub_10003E614((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v53 = v62;
  sub_10000A95C(v51, v62, &qword_1000CE000);
  sub_10000B1C0(v36, v34, &qword_1000CE008);
  sub_10000B1C0(v53, v51, &qword_1000CE000);
  uint64_t v54 = v64;
  sub_10000B1C0(v34, v64, &qword_1000CE008);
  uint64_t v55 = sub_100004FDC(&qword_1000CE010);
  sub_10000B1C0(v51, v54 + *(int *)(v55 + 48), &qword_1000CE000);
  sub_10000A9C0(v53, &qword_1000CE000);
  sub_10000A9C0(v36, &qword_1000CE008);
  sub_10000A9C0(v51, &qword_1000CE000);
  return sub_10000A9C0(v34, &qword_1000CE008);
}

uint64_t sub_10003D278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v61 = type metadata accessor for LabelView() - 8;
  __chkstk_darwin(v61);
  uint64_t v4 = (uint64_t *)((char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_100004FDC(&qword_1000CE000) - 8;
  uint64_t v5 = __chkstk_darwin(v63);
  uint64_t v60 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v62 = (uint64_t)&v57 - v7;
  uint64_t v8 = type metadata accessor for ReadingProgressIconView(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100004FDC(&qword_1000CE008);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v58 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v57 - v15;
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for SmallReadingGoalView(0) + 24);
  uint64_t v18 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  uint64_t v19 = *(void *)(v17 + v18[12]);
  uint64_t v20 = *(void *)(v17 + v18[13]);
  uint64_t v21 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v22 = (char *)v10 + v21[7];
  uint64_t v23 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v17, v23);
  uint64_t v24 = *(void *)(v17 + v18[14]);
  uint64_t v25 = *(void *)(v17 + v18[15]);
  sub_10003E5AC(v17 + v18[10], (uint64_t)v10 + v21[10], type metadata accessor for CircularProgressView.Content);
  void *v10 = v16;
  v10[1] = v19;
  void v10[2] = v20;
  *(void *)((char *)v10 + v21[8]) = v24;
  *(void *)((char *)v10 + v21[9]) = v25;
  *((unsigned char *)v10 + v21[11]) = 0;
  swift_retain();
  swift_retain();
  LOBYTE(v19) = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v58;
  sub_10003E5AC((uint64_t)v10, v58, type metadata accessor for ReadingProgressIconView);
  uint64_t v35 = v34 + *(int *)(v12 + 44);
  *(unsigned char *)uint64_t v35 = v19;
  *(void *)(v35 + 8) = v27;
  *(void *)(v35 + 16) = v29;
  *(void *)(v35 + 24) = v31;
  *(void *)(v35 + 32) = v33;
  *(unsigned char *)(v35 + 40) = 0;
  sub_10003E614((uint64_t)v10, type metadata accessor for ReadingProgressIconView);
  uint64_t v36 = v59;
  sub_10000A95C(v34, v59, &qword_1000CE008);
  long long v37 = *(_OWORD *)(a1 + 120);
  long long v38 = *(_OWORD *)(a1 + 152);
  long long v71 = *(_OWORD *)(a1 + 136);
  long long v72 = v38;
  uint64_t v73 = *(void *)(a1 + 168);
  long long v39 = *(_OWORD *)(a1 + 56);
  long long v40 = *(_OWORD *)(a1 + 88);
  long long v67 = *(_OWORD *)(a1 + 72);
  long long v68 = v40;
  long long v69 = *(_OWORD *)(a1 + 104);
  long long v70 = v37;
  long long v65 = *(_OWORD *)(a1 + 40);
  long long v66 = v39;
  uint64_t v41 = sub_10006E6E0();
  uint64_t v43 = v42;
  uint64_t v44 = *(void *)(v17 + v18[11]);
  swift_retain();
  uint64_t v45 = sub_1000A3C30();
  *uint64_t v4 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v61;
  uint64_t v47 = (uint64_t *)((char *)v4 + *(int *)(v61 + 28));
  *uint64_t v47 = v41;
  v47[1] = v43;
  *(uint64_t *)((char *)v4 + *(int *)(v46 + 32)) = v44;
  uint64_t v48 = (char *)v4 + *(int *)(v46 + 36);
  *(void *)uint64_t v48 = v45;
  *((void *)v48 + 1) = 0;
  *((_WORD *)v48 + 8) = 1;
  uint64_t v49 = *(void *)(v17 + v18[5]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = v60;
  sub_10003E5AC((uint64_t)v4, v60, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v52 = v51 + *(int *)(v63 + 44);
  *(void *)uint64_t v52 = KeyPath;
  *(void *)(v52 + 8) = v49;
  *(unsigned char *)(v52 + 16) = 0;
  sub_10003E614((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v53 = v62;
  sub_10000A95C(v51, v62, &qword_1000CE000);
  sub_10000B1C0(v36, v34, &qword_1000CE008);
  sub_10000B1C0(v53, v51, &qword_1000CE000);
  uint64_t v54 = v64;
  sub_10000B1C0(v34, v64, &qword_1000CE008);
  uint64_t v55 = sub_100004FDC(&qword_1000CE010);
  sub_10000B1C0(v51, v54 + *(int *)(v55 + 48), &qword_1000CE000);
  sub_10000A9C0(v53, &qword_1000CE000);
  sub_10000A9C0(v36, &qword_1000CE008);
  sub_10000A9C0(v51, &qword_1000CE000);
  return sub_10000A9C0(v34, &qword_1000CE008);
}

uint64_t sub_10003D7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v62 = type metadata accessor for LabelView() - 8;
  __chkstk_darwin(v62);
  uint64_t v4 = (uint64_t *)((char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_100004FDC(&qword_1000CE000) - 8;
  uint64_t v5 = __chkstk_darwin(v64);
  uint64_t v61 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v63 = (uint64_t)&v58 - v7;
  uint64_t v8 = type metadata accessor for ReadingProgressIconView(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100004FDC(&qword_1000CE008);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v59 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v60 = (uint64_t)&v58 - v15;
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for SmallReadingGoalView(0) + 24);
  uint64_t v18 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  uint64_t v19 = *(void *)(v17 + v18[12]);
  uint64_t v20 = *(void *)(v17 + v18[13]);
  uint64_t v21 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v22 = (char *)v10 + v21[7];
  uint64_t v23 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v17, v23);
  uint64_t v24 = *(void *)(v17 + v18[14]);
  uint64_t v25 = *(void *)(v17 + v18[15]);
  sub_10003E5AC(v17 + v18[10], (uint64_t)v10 + v21[10], type metadata accessor for CircularProgressView.Content);
  void *v10 = v16;
  v10[1] = v19;
  void v10[2] = v20;
  *(void *)((char *)v10 + v21[8]) = v24;
  *(void *)((char *)v10 + v21[9]) = v25;
  *((unsigned char *)v10 + v21[11]) = 1;
  swift_retain();
  swift_retain();
  LOBYTE(v19) = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v59;
  sub_10003E5AC((uint64_t)v10, v59, type metadata accessor for ReadingProgressIconView);
  uint64_t v35 = v34 + *(int *)(v12 + 44);
  uint64_t v36 = v34;
  *(unsigned char *)uint64_t v35 = v19;
  *(void *)(v35 + 8) = v27;
  *(void *)(v35 + 16) = v29;
  *(void *)(v35 + 24) = v31;
  *(void *)(v35 + 32) = v33;
  *(unsigned char *)(v35 + 40) = 0;
  sub_10003E614((uint64_t)v10, type metadata accessor for ReadingProgressIconView);
  uint64_t v37 = v60;
  sub_10000A95C(v34, v60, &qword_1000CE008);
  long long v38 = *(_OWORD *)(a1 + 120);
  long long v39 = *(_OWORD *)(a1 + 152);
  long long v72 = *(_OWORD *)(a1 + 136);
  long long v73 = v39;
  uint64_t v74 = *(void *)(a1 + 168);
  long long v40 = *(_OWORD *)(a1 + 56);
  long long v41 = *(_OWORD *)(a1 + 88);
  long long v68 = *(_OWORD *)(a1 + 72);
  long long v69 = v41;
  long long v70 = *(_OWORD *)(a1 + 104);
  long long v71 = v38;
  long long v66 = *(_OWORD *)(a1 + 40);
  long long v67 = v40;
  uint64_t v42 = sub_10006E6E0();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v17 + v18[11]);
  swift_retain();
  uint64_t v46 = sub_1000A3C30();
  *uint64_t v4 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = v62;
  uint64_t v48 = (uint64_t *)((char *)v4 + *(int *)(v62 + 28));
  *uint64_t v48 = v42;
  v48[1] = v44;
  *(uint64_t *)((char *)v4 + *(int *)(v47 + 32)) = v45;
  uint64_t v49 = (char *)v4 + *(int *)(v47 + 36);
  *(void *)uint64_t v49 = v46;
  *((void *)v49 + 1) = 0;
  *((_WORD *)v49 + 8) = 1;
  uint64_t v50 = *(void *)(v17 + v18[5]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v61;
  sub_10003E5AC((uint64_t)v4, v61, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v53 = v52 + *(int *)(v64 + 44);
  *(void *)uint64_t v53 = KeyPath;
  *(void *)(v53 + 8) = v50;
  *(unsigned char *)(v53 + 16) = 0;
  sub_10003E614((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v54 = v63;
  sub_10000A95C(v52, v63, &qword_1000CE000);
  sub_10000B1C0(v37, v36, &qword_1000CE008);
  sub_10000B1C0(v54, v52, &qword_1000CE000);
  uint64_t v55 = v65;
  sub_10000B1C0(v36, v65, &qword_1000CE008);
  uint64_t v56 = sub_100004FDC(&qword_1000CE010);
  sub_10000B1C0(v52, v55 + *(int *)(v56 + 48), &qword_1000CE000);
  sub_10000A9C0(v54, &qword_1000CE000);
  sub_10000A9C0(v37, &qword_1000CE008);
  sub_10000A9C0(v52, &qword_1000CE000);
  return sub_10000A9C0(v36, &qword_1000CE008);
}

uint64_t sub_10003DD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v62 = type metadata accessor for LabelView() - 8;
  __chkstk_darwin(v62);
  uint64_t v4 = (uint64_t *)((char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_100004FDC(&qword_1000CE000) - 8;
  uint64_t v5 = __chkstk_darwin(v64);
  uint64_t v61 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v63 = (uint64_t)&v58 - v7;
  uint64_t v8 = type metadata accessor for ReadingProgressIconView(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100004FDC(&qword_1000CE008);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v59 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v60 = (uint64_t)&v58 - v15;
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for SmallReadingGoalView(0) + 24);
  uint64_t v18 = (int *)type metadata accessor for SmallReadingGoalView.ViewConfiguration(0);
  uint64_t v19 = *(void *)(v17 + v18[12]);
  uint64_t v20 = *(void *)(v17 + v18[13]);
  uint64_t v21 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v22 = (char *)v10 + v21[7];
  uint64_t v23 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v17, v23);
  uint64_t v24 = *(void *)(v17 + v18[14]);
  uint64_t v25 = *(void *)(v17 + v18[15]);
  sub_10003E5AC(v17 + v18[10], (uint64_t)v10 + v21[10], type metadata accessor for CircularProgressView.Content);
  void *v10 = v16;
  v10[1] = v19;
  void v10[2] = v20;
  *(void *)((char *)v10 + v21[8]) = v24;
  *(void *)((char *)v10 + v21[9]) = v25;
  *((unsigned char *)v10 + v21[11]) = 1;
  swift_retain();
  swift_retain();
  LOBYTE(v19) = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v59;
  sub_10003E5AC((uint64_t)v10, v59, type metadata accessor for ReadingProgressIconView);
  uint64_t v35 = v34 + *(int *)(v12 + 44);
  uint64_t v36 = v34;
  *(unsigned char *)uint64_t v35 = v19;
  *(void *)(v35 + 8) = v27;
  *(void *)(v35 + 16) = v29;
  *(void *)(v35 + 24) = v31;
  *(void *)(v35 + 32) = v33;
  *(unsigned char *)(v35 + 40) = 0;
  sub_10003E614((uint64_t)v10, type metadata accessor for ReadingProgressIconView);
  uint64_t v37 = v60;
  sub_10000A95C(v34, v60, &qword_1000CE008);
  long long v38 = *(_OWORD *)(a1 + 120);
  long long v39 = *(_OWORD *)(a1 + 152);
  long long v72 = *(_OWORD *)(a1 + 136);
  long long v73 = v39;
  uint64_t v74 = *(void *)(a1 + 168);
  long long v40 = *(_OWORD *)(a1 + 56);
  long long v41 = *(_OWORD *)(a1 + 88);
  long long v68 = *(_OWORD *)(a1 + 72);
  long long v69 = v41;
  long long v70 = *(_OWORD *)(a1 + 104);
  long long v71 = v38;
  long long v66 = *(_OWORD *)(a1 + 40);
  long long v67 = v40;
  uint64_t v42 = sub_10006E6E0();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v17 + v18[11]);
  swift_retain();
  uint64_t v46 = sub_1000A3C30();
  *uint64_t v4 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = v62;
  uint64_t v48 = (uint64_t *)((char *)v4 + *(int *)(v62 + 28));
  *uint64_t v48 = v42;
  v48[1] = v44;
  *(uint64_t *)((char *)v4 + *(int *)(v47 + 32)) = v45;
  uint64_t v49 = (char *)v4 + *(int *)(v47 + 36);
  *(void *)uint64_t v49 = v46;
  *((void *)v49 + 1) = 0;
  *((_WORD *)v49 + 8) = 1;
  uint64_t v50 = *(void *)(v17 + v18[5]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v61;
  sub_10003E5AC((uint64_t)v4, v61, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v53 = v52 + *(int *)(v64 + 44);
  *(void *)uint64_t v53 = KeyPath;
  *(void *)(v53 + 8) = v50;
  *(unsigned char *)(v53 + 16) = 0;
  sub_10003E614((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v54 = v63;
  sub_10000A95C(v52, v63, &qword_1000CE000);
  sub_10000B1C0(v37, v36, &qword_1000CE008);
  sub_10000B1C0(v54, v52, &qword_1000CE000);
  uint64_t v55 = v65;
  sub_10000B1C0(v36, v65, &qword_1000CE008);
  uint64_t v56 = sub_100004FDC(&qword_1000CE010);
  sub_10000B1C0(v52, v55 + *(int *)(v56 + 48), &qword_1000CE000);
  sub_10000A9C0(v54, &qword_1000CE000);
  sub_10000A9C0(v37, &qword_1000CE008);
  sub_10000A9C0(v52, &qword_1000CE000);
  return sub_10000A9C0(v36, &qword_1000CE008);
}

uint64_t sub_10003E270@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1000A3BB0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100004FDC(&qword_1000CDF30);
  return sub_10003A6F8(v1, (char *)(a1 + *(int *)(v3 + 44)));
}

unint64_t sub_10003E2B8()
{
  unint64_t result = qword_1000CDF58;
  if (!qword_1000CDF58)
  {
    sub_100008B14(&qword_1000CDD98);
    sub_10000B17C(&qword_1000CDF60, &qword_1000CDD90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDF58);
  }
  return result;
}

uint64_t sub_10003E358@<X0>(uint64_t a1@<X8>)
{
  return sub_10003B864(*(void *)(v1 + 16), a1);
}

uint64_t sub_10003E360()
{
  return sub_10003E390(&qword_1000CDF78, &qword_1000CDF80, (void (*)(void))sub_10003E40C);
}

uint64_t sub_10003E390(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003E40C()
{
  return sub_10003E390(&qword_1000CDF88, &qword_1000CDF90, (void (*)(void))sub_10003E43C);
}

unint64_t sub_10003E43C()
{
  unint64_t result = qword_1000CDF98;
  if (!qword_1000CDF98)
  {
    sub_100008B14(&qword_1000CDFA0);
    sub_10000B17C(&qword_1000CDFA8, &qword_1000CDFB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CDF98);
  }
  return result;
}

uint64_t sub_10003E4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000A3B00();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10003E518@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000A3B00();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10003E54C()
{
  return sub_1000A3B10();
}

uint64_t sub_10003E57C()
{
  return sub_1000A3B10();
}

uint64_t sub_10003E5AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003E614(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003E674()
{
  return sub_10000B17C(&qword_1000CE058, &qword_1000CE060);
}

uint64_t sub_10003E6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for BlendMode.plusLighter(_:);
  uint64_t v3 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  *(void *)(a1 + v4[5]) = 0x4040000000000000;
  *(void *)(a1 + v4[6]) = 1;
  *(void *)(a1 + v4[7]) = 0x4010000000000000;
  uint64_t v5 = (void *)(a1 + v4[8]);
  *uint64_t v5 = 0x69662E656D616C66;
  v5[1] = 0xEA00000000006C6CLL;
  uint64_t v6 = v4[9];
  *(void *)(a1 + v6) = sub_1000A3F70();
  uint64_t v7 = v4[10];
  *(void *)(a1 + v7) = sub_1000A3DE0();
  uint64_t v8 = v4[11];
  sub_1000A3DB0();
  *(void *)(a1 + v8) = v9;
  *(void *)(a1 + v4[12]) = 0x4008000000000000;
  *(void *)(a1 + v4[13]) = 0x4008000000000000;
  uint64_t v10 = v4[14];
  *(void *)(a1 + v10) = sub_1000A3DE0();
  uint64_t v11 = v4[15];
  *(void *)(a1 + v11) = sub_1000A3F70();
  uint64_t v12 = v4[16];
  sub_1000A3F70();
  uint64_t v13 = sub_1000A3F80();
  swift_release();
  *(void *)(a1 + v12) = v13;
  *(void *)(a1 + v4[17]) = 0x4008000000000000;
  *(void *)(a1 + v4[18]) = 0x4028000000000000;
  uint64_t v14 = (void *)(a1 + v4[19]);
  *uint64_t v14 = 0xD000000000000015;
  v14[1] = 0x80000001000A5C10;
  uint64_t v15 = a1 + v4[20];
  uint64_t v16 = sub_100004FDC(&qword_1000CCB90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)(a1 + v4[21]) = 0x4062C00000000000;
  return result;
}

uint64_t type metadata accessor for MediumReadingGoalView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CE0C0);
}

uint64_t *sub_10003E8A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A4090();
    uint64_t v46 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16);
    uint64_t v47 = v7;
    v46(a1, a2);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[14];
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v16 = a3[16];
    *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[18];
    *(uint64_t *)((char *)a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[19];
    uint64_t v19 = a3[20];
    uint64_t v20 = (uint64_t *)((char *)a1 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    __dst = (uint64_t *)((char *)a1 + v19);
    uint64_t v23 = (uint64_t *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v24 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v25 = *((void *)v24 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v23[1];
      void *__dst = *v23;
      __dst[1] = v28;
      uint64_t v29 = v24[12];
      uint64_t v30 = (void *)((char *)__dst + v29);
      uint64_t v31 = (void *)((char *)v23 + v29);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v30 = *v31;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
        uint64_t v32 = sub_100004FDC(&qword_1000CDDD0);
        ((void (*)(char *, char *, uint64_t))v46)((char *)v30 + *(int *)(v32 + 48), (char *)v31 + *(int *)(v32 + 48), v47);
        uint64_t v33 = *(int *)(v32 + 64);
        uint64_t v34 = (char *)v30 + v33;
        uint64_t v35 = (char *)v31 + v33;
        uint64_t v36 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v24[16];
      long long v38 = (char *)__dst + v37;
      long long v39 = (char *)v23 + v37;
      uint64_t v40 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      uint64_t v41 = v24[20];
      uint64_t v42 = (char *)__dst + v41;
      uint64_t v43 = (char *)v23 + v41;
      uint64_t v44 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      *(void *)((char *)__dst + v24[24]) = *(void *)((char *)v23 + v24[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v25 + 56))(__dst, 0, 1, v24);
    }
    *(uint64_t *)((char *)a1 + a3[21]) = *(uint64_t *)((char *)a2 + a3[21]);
  }
  return a1;
}

uint64_t sub_10003ECC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A4090();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 80);
  uint64_t v7 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + v7[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v10 = sub_100004FDC(&qword_1000CDDD0);
      v5(v9 + *(int *)(v10 + 48), v4);
      uint64_t v11 = v9 + *(int *)(v10 + 64);
      uint64_t v12 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v6 + v7[16];
    uint64_t v14 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = v6 + v7[20];
    uint64_t v16 = sub_1000A3D80();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    return v17(v15, v16);
  }
  return result;
}

uint64_t sub_10003EF28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v45 = v6;
  v44(a1, a2);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[19];
  uint64_t v18 = a3[20];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  __dst = (void *)(a1 + v18);
  uint64_t v22 = (void *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v23 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v22[1];
    void *__dst = *v22;
    __dst[1] = v26;
    uint64_t v27 = v23[12];
    uint64_t v28 = (void *)((char *)__dst + v27);
    uint64_t v29 = (void *)((char *)v22 + v27);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v28 = *v29;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      uint64_t v30 = sub_100004FDC(&qword_1000CDDD0);
      ((void (*)(char *, char *, uint64_t))v44)((char *)v28 + *(int *)(v30 + 48), (char *)v29 + *(int *)(v30 + 48), v45);
      uint64_t v31 = *(int *)(v30 + 64);
      uint64_t v32 = (char *)v28 + v31;
      uint64_t v33 = (char *)v29 + v31;
      uint64_t v34 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v23[16];
    uint64_t v36 = (char *)__dst + v35;
    uint64_t v37 = (char *)v22 + v35;
    uint64_t v38 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = v23[20];
    uint64_t v40 = (char *)__dst + v39;
    uint64_t v41 = (char *)v22 + v39;
    uint64_t v42 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    *(void *)((char *)__dst + v23[24]) = *(void *)((char *)v22 + v23[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_10003F2F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  (*(void (**)(uint64_t, uint64_t))(v54 + 24))(a1, a2);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v10 = a3[19];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[20];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      uint64_t v21 = v16[12];
      uint64_t v53 = (char *)v14 + v21;
      uint64_t v22 = (char *)v15 + v21;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v53 = *(void *)v22;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v22;
        uint64_t v27 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(&v53[*(int *)(v27 + 48)], &v22[*(int *)(v27 + 48)], v55);
        uint64_t v28 = *(int *)(v27 + 64);
        uint64_t v56 = &v53[v28];
        uint64_t v29 = &v22[v28];
        uint64_t v30 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v56, v29, v30);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = v16[16];
      uint64_t v32 = (char *)v14 + v31;
      uint64_t v33 = (char *)v15 + v31;
      uint64_t v34 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      uint64_t v35 = v16[20];
      uint64_t v36 = (char *)v14 + v35;
      uint64_t v37 = (char *)v15 + v35;
      uint64_t v38 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      *(void *)((char *)v14 + v16[24]) = *(void *)((char *)v15 + v16[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v23 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v14, v15, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_16;
  }
  if (v20)
  {
    sub_10000A9C0((uint64_t)v14, &qword_1000CCB90);
    goto LABEL_7;
  }
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v24 = v16[12];
    uint64_t v25 = (char *)v14 + v24;
    uint64_t v26 = (char *)v15 + v24;
    sub_1000434B4((uint64_t)v14 + v24, type metadata accessor for CircularProgressView.ColorStyle);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v25 = *(void *)v26;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
      uint64_t v39 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(&v25[*(int *)(v39 + 48)], &v26[*(int *)(v39 + 48)], v55);
      uint64_t v40 = *(int *)(v39 + 64);
      uint64_t v41 = &v25[v40];
      uint64_t v42 = &v26[v40];
      uint64_t v43 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v44 = v16[16];
  uint64_t v45 = (char *)v14 + v44;
  uint64_t v46 = (char *)v15 + v44;
  uint64_t v47 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  uint64_t v48 = v16[20];
  uint64_t v49 = (char *)v14 + v48;
  uint64_t v50 = (char *)v15 + v48;
  uint64_t v51 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  *(void *)((char *)v14 + v16[24]) = *(void *)((char *)v15 + v16[24]);
LABEL_16:
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_10003F940(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  uint64_t v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (_OWORD *)(a2 + v15);
  uint64_t v18 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v38 = (void (*)(char *, char *, uint64_t))v7;
    uint64_t v39 = v19;
    _OWORD *v16 = *v17;
    uint64_t v21 = v18[12];
    __dst = (_DWORD *)((char *)v16 + v21);
    uint64_t v22 = (_DWORD *)((char *)v17 + v21);
    uint64_t v23 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(__dst, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      _DWORD *__dst = *v22;
      uint64_t v37 = sub_100004FDC(&qword_1000CDDD0);
      v38((char *)__dst + *(int *)(v37 + 48), (char *)v22 + *(int *)(v37 + 48), v6);
      uint64_t v24 = *(int *)(v37 + 64);
      uint64_t v25 = (char *)__dst + v24;
      uint64_t v26 = (char *)v22 + v24;
      uint64_t v27 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v28 = v18[16];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = (char *)v17 + v28;
    uint64_t v31 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    uint64_t v32 = v18[20];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v17 + v32;
    uint64_t v35 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    *(void *)((char *)v16 + v18[24]) = *(void *)((char *)v17 + v18[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v39 + 56))(v16, 0, 1, v18);
  }
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_10003FCC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  (*(void (**)(uint64_t, uint64_t))(v65 + 40))(a1, a2);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_release();
  uint64_t v15 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[19];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[20];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      uint64_t v29 = v24[12];
      uint64_t v30 = (_DWORD *)((char *)v22 + v29);
      uint64_t v31 = (_DWORD *)((char *)v23 + v29);
      uint64_t v32 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        *uint64_t v30 = *v31;
        uint64_t v64 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))((char *)v30 + *(int *)(v64 + 48), (char *)v31 + *(int *)(v64 + 48), v66);
        uint64_t v39 = *(int *)(v64 + 64);
        long long v67 = (char *)v30 + v39;
        uint64_t v40 = (char *)v31 + v39;
        uint64_t v41 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v67, v40, v41);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v42 = v24[16];
      uint64_t v43 = (char *)v22 + v42;
      uint64_t v44 = (char *)v23 + v42;
      uint64_t v45 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      uint64_t v46 = v24[20];
      uint64_t v47 = (char *)v22 + v46;
      uint64_t v48 = (char *)v23 + v46;
      uint64_t v49 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      *(void *)((char *)v22 + v24[24]) = *(void *)((char *)v23 + v24[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v33 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v22, v23, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_15;
  }
  if (v28)
  {
    sub_10000A9C0((uint64_t)v22, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v34 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v34;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v35 = v24[12];
    uint64_t v36 = (_DWORD *)((char *)v22 + v35);
    uint64_t v37 = (_DWORD *)((char *)v23 + v35);
    sub_1000434B4((uint64_t)v22 + v35, type metadata accessor for CircularProgressView.ColorStyle);
    uint64_t v38 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      *uint64_t v36 = *v37;
      uint64_t v50 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))((char *)v36 + *(int *)(v50 + 48), (char *)v37 + *(int *)(v50 + 48), v66);
      uint64_t v51 = *(int *)(v50 + 64);
      uint64_t v52 = (char *)v36 + v51;
      uint64_t v53 = (char *)v37 + v51;
      uint64_t v54 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v55 = v24[16];
  uint64_t v56 = (char *)v22 + v55;
  uint64_t v57 = (char *)v23 + v55;
  uint64_t v58 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = v24[20];
  uint64_t v60 = (char *)v22 + v59;
  uint64_t v61 = (char *)v23 + v59;
  uint64_t v62 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  *(void *)((char *)v22 + v24[24]) = *(void *)((char *)v23 + v24[24]);
LABEL_15:
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1000402A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000402B4);
}

uint64_t sub_1000402B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for CircularProgressView.Content(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 80);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1000403E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000403F8);
}

uint64_t sub_1000403F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000A4090();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for CircularProgressView.Content(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 80);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_100040528()
{
  uint64_t result = sub_1000A4090();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CircularProgressView.Content(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_10004062C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v26 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a2 + v8;
    unint64_t v10 = (char *)(a1 + v8);
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v11 = sub_1000A4090();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = v12;
    uint64_t v47 = v11;
    v12(v10, v9, v11);
    uint64_t v13 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
    *(void *)&v10[v13[5]] = *(void *)&v9[v13[5]];
    *(void *)&v10[v13[6]] = *(void *)&v9[v13[6]];
    *(void *)&v10[v13[7]] = *(void *)&v9[v13[7]];
    uint64_t v14 = v13[8];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v9[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    *(void *)&v10[v13[9]] = *(void *)&v9[v13[9]];
    *(void *)&v10[v13[10]] = *(void *)&v9[v13[10]];
    *(void *)&v10[v13[11]] = *(void *)&v9[v13[11]];
    *(void *)&v10[v13[12]] = *(void *)&v9[v13[12]];
    *(void *)&v10[v13[13]] = *(void *)&v9[v13[13]];
    *(void *)&v10[v13[14]] = *(void *)&v9[v13[14]];
    *(void *)&v10[v13[15]] = *(void *)&v9[v13[15]];
    *(void *)&v10[v13[16]] = *(void *)&v9[v13[16]];
    *(void *)&v10[v13[17]] = *(void *)&v9[v13[17]];
    *(void *)&v10[v13[18]] = *(void *)&v9[v13[18]];
    uint64_t v18 = v13[19];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v9[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v13[20];
    __dst = &v10[v22];
    uint64_t v49 = &v9[v22];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v23 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v24 = *((void *)v23 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v49, 1, v23))
    {
      uint64_t v25 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(__dst, v49, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v27 = *((void *)v49 + 1);
      int v28 = __dst;
      *(void *)__dst = *(void *)v49;
      *((void *)__dst + 1) = v27;
      uint64_t v29 = v23[12];
      uint64_t v45 = &__dst[v29];
      uint64_t v30 = &v49[v29];
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v45 = *(void *)v30;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v45 = *(_DWORD *)v30;
        uint64_t v31 = sub_100004FDC(&qword_1000CDDD0);
        v46(&v45[*(int *)(v31 + 48)], &v30[*(int *)(v31 + 48)], v47);
        uint64_t v32 = *(int *)(v31 + 64);
        uint64_t v33 = &v45[v32];
        uint64_t v34 = &v30[v32];
        uint64_t v35 = sub_1000A38E0();
        int v28 = __dst;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = v23[16];
      uint64_t v37 = (char *)v28 + v36;
      uint64_t v38 = &v49[v36];
      uint64_t v39 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      uint64_t v40 = v23[20];
      uint64_t v41 = (char *)v28 + v40;
      uint64_t v42 = &v49[v40];
      uint64_t v43 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      *(void *)((char *)v28 + v23[24]) = *(void *)&v49[v23[24]];
      (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v28, 0, 1, v23);
    }
    *(void *)&v10[v13[21]] = *(void *)&v9[v13[21]];
  }
  return v3;
}

uint64_t sub_100040AC0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000A4090();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + *(int *)(v7 + 80);
  uint64_t v9 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + v9[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v12 = sub_100004FDC(&qword_1000CDDD0);
      v6(v11 + *(int *)(v12 + 48), v5);
      uint64_t v13 = v11 + *(int *)(v12 + 64);
      uint64_t v14 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v8 + v9[16];
    uint64_t v16 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v8 + v9[20];
    uint64_t v18 = sub_1000A3D80();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    return v19(v17, v18);
  }
  return result;
}

uint64_t sub_100040D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)(a2 + v6);
  uint64_t v8 = (char *)(a1 + v6);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v9 = sub_1000A4090();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v9;
  uint64_t v47 = v10;
  v10(v8, v7, v9);
  uint64_t v11 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  *(void *)&v8[v11[5]] = *(void *)&v7[v11[5]];
  *(void *)&v8[v11[6]] = *(void *)&v7[v11[6]];
  *(void *)&v8[v11[7]] = *(void *)&v7[v11[7]];
  uint64_t v12 = v11[8];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v7[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  *(void *)&v8[v11[9]] = *(void *)&v7[v11[9]];
  *(void *)&v8[v11[10]] = *(void *)&v7[v11[10]];
  *(void *)&v8[v11[11]] = *(void *)&v7[v11[11]];
  *(void *)&v8[v11[12]] = *(void *)&v7[v11[12]];
  *(void *)&v8[v11[13]] = *(void *)&v7[v11[13]];
  *(void *)&v8[v11[14]] = *(void *)&v7[v11[14]];
  *(void *)&v8[v11[15]] = *(void *)&v7[v11[15]];
  *(void *)&v8[v11[16]] = *(void *)&v7[v11[16]];
  *(void *)&v8[v11[17]] = *(void *)&v7[v11[17]];
  *(void *)&v8[v11[18]] = *(void *)&v7[v11[18]];
  uint64_t v16 = v11[19];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v7[v16];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = v11[20];
  __dst = &v8[v20];
  uint64_t v21 = &v7[v20];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = v21;
  swift_bridgeObjectRetain();
  uint64_t v23 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v21, 1, v23))
  {
    uint64_t v25 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = *((void *)v21 + 1);
    uint64_t v27 = __dst;
    *(void *)__dst = *v22;
    *((void *)__dst + 1) = v26;
    uint64_t v28 = v23[12];
    uint64_t v29 = &__dst[v28];
    uint64_t v45 = v22;
    uint64_t v30 = (char *)v22 + v28;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      uint64_t v31 = sub_100004FDC(&qword_1000CDDD0);
      v47(&v29[*(int *)(v31 + 48)], &v30[*(int *)(v31 + 48)], v46);
      uint64_t v32 = *(int *)(v31 + 64);
      uint64_t v33 = &v29[v32];
      uint64_t v34 = &v30[v32];
      uint64_t v35 = sub_1000A38E0();
      uint64_t v27 = __dst;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v23[16];
    uint64_t v37 = (char *)v27 + v36;
    uint64_t v38 = (char *)v45 + v36;
    uint64_t v39 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v23[20];
    uint64_t v41 = (char *)v27 + v40;
    uint64_t v42 = (char *)v45 + v40;
    uint64_t v43 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    *(void *)((char *)v27 + v23[24]) = *(void *)((char *)v45 + v23[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v27, 0, 1, v23);
  }
  uint64_t result = a1;
  *(void *)&v8[v11[21]] = *(void *)&v7[v11[21]];
  return result;
}

uint64_t sub_10004118C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v65 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  (*(void (**)(uint64_t, uint64_t))(v60 + 24))(v8, v9);
  uint64_t v11 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  uint64_t v12 = v11[8];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[11]) = *(void *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  *(void *)(v8 + v11[13]) = *(void *)(v9 + v11[13]);
  *(void *)(v8 + v11[14]) = *(void *)(v9 + v11[14]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[15]) = *(void *)(v9 + v11[15]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[16]) = *(void *)(v9 + v11[16]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[17]) = *(void *)(v9 + v11[17]);
  *(void *)(v8 + v11[18]) = *(void *)(v9 + v11[18]);
  uint64_t v15 = v11[19];
  uint64_t v16 = (void *)(v8 + v15);
  uint64_t v17 = (void *)(v9 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11[20];
  uint64_t v19 = (void *)(v8 + v18);
  uint64_t v20 = (char *)(v9 + v18);
  uint64_t v21 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v63 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, int *))(v63 + 48);
  uint64_t v23 = v19;
  LODWORD(v19) = v22((char *)v19, 1, v21);
  __src = v20;
  uint64_t v64 = v21;
  int v24 = v22(v20, 1, v21);
  if (v19)
  {
    if (!v24)
    {
      *uint64_t v23 = *(void *)v20;
      v23[1] = *((void *)v20 + 1);
      uint64_t v25 = v21[12];
      uint64_t v26 = (char *)v23 + v25;
      uint64_t v27 = &v20[v25];
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v26 = *(void *)v27;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
        uint64_t v34 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(&v26[*(int *)(v34 + 48)], &v27[*(int *)(v34 + 48)], v61);
        uint64_t v35 = *(int *)(v34 + 64);
        uint64_t v62 = &v26[v35];
        uint64_t v36 = &v27[v35];
        uint64_t v37 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v62, v36, v37);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v64[16];
      uint64_t v39 = (char *)v23 + v38;
      uint64_t v40 = &v20[v38];
      uint64_t v41 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      uint64_t v42 = v64[20];
      uint64_t v43 = (char *)v23 + v42;
      uint64_t v44 = &v20[v42];
      uint64_t v45 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      *(void *)((char *)v23 + v64[24]) = *(void *)&v20[v64[24]];
      (*(void (**)(void *, void, uint64_t, int *))(v63 + 56))(v23, 0, 1, v64);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v28 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v23, v20, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_13:
    uint64_t v30 = v65;
    goto LABEL_14;
  }
  if (v24)
  {
    sub_10000A9C0((uint64_t)v23, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v29 = v20;
  *uint64_t v23 = *(void *)v20;
  v23[1] = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v65;
  if (v65 != a2)
  {
    uint64_t v31 = v21[12];
    uint64_t v32 = (char *)v23 + v31;
    uint64_t v33 = &__src[v31];
    sub_1000434B4((uint64_t)v23 + v31, type metadata accessor for CircularProgressView.ColorStyle);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v32 = *(void *)v33;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      uint64_t v47 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(&v32[*(int *)(v47 + 48)], &v33[*(int *)(v47 + 48)], v61);
      uint64_t v48 = *(int *)(v47 + 64);
      uint64_t v49 = &v32[v48];
      uint64_t v50 = &v33[v48];
      uint64_t v51 = sub_1000A38E0();
      uint64_t v29 = __src;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v52 = v21[16];
  uint64_t v53 = (char *)v23 + v52;
  uint64_t v54 = &v29[v52];
  uint64_t v55 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  uint64_t v56 = v21[20];
  uint64_t v57 = (char *)v23 + v56;
  uint64_t v58 = &v29[v56];
  uint64_t v59 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
  *(void *)((char *)v23 + v21[24]) = *(void *)&v29[v21[24]];
LABEL_14:
  *(void *)(v8 + v11[21]) = *(void *)(v9 + v11[21]);
  return v30;
}

_OWORD *sub_10004185C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  uint64_t v39 = *v10;
  (*v10)(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  *(void *)&v7[v11[5]] = *(void *)&v8[v11[5]];
  *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
  *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
  *(_OWORD *)&v7[v11[8]] = *(_OWORD *)&v8[v11[8]];
  *(void *)&v7[v11[9]] = *(void *)&v8[v11[9]];
  *(void *)&v7[v11[10]] = *(void *)&v8[v11[10]];
  *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
  *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
  *(void *)&v7[v11[13]] = *(void *)&v8[v11[13]];
  *(void *)&v7[v11[14]] = *(void *)&v8[v11[14]];
  *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
  *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
  *(void *)&v7[v11[17]] = *(void *)&v8[v11[17]];
  *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
  *(_OWORD *)&v7[v11[19]] = *(_OWORD *)&v8[v11[19]];
  uint64_t v12 = v11[20];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v9;
    uint64_t v37 = v13;
    uint64_t v38 = v16;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    uint64_t v18 = v15[12];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    uint64_t v21 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      uint64_t v22 = sub_100004FDC(&qword_1000CDDD0);
      v39(&v19[*(int *)(v22 + 48)], &v20[*(int *)(v22 + 48)], v36);
      uint64_t v23 = *(int *)(v22 + 64);
      int v24 = &v19[v23];
      uint64_t v25 = &v20[v23];
      uint64_t v26 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v27 = v15[16];
    uint64_t v28 = (char *)v37 + v27;
    uint64_t v29 = &v14[v27];
    uint64_t v30 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v15[20];
    uint64_t v32 = (char *)v37 + v31;
    uint64_t v33 = &v14[v31];
    uint64_t v34 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    *(void *)((char *)v37 + v15[24]) = *(void *)&v14[v15[24]];
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v38 + 56))(v37, 0, 1, v15);
  }
  *(void *)&v7[v11[21]] = *(void *)&v8[v11[21]];
  return a1;
}

uint64_t sub_100041C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v75 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1000A4090();
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  (*(void (**)(uint64_t, uint64_t))(v72 + 40))(v9, v10);
  uint64_t v12 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  *(void *)(v9 + v12[5]) = *(void *)(v10 + v12[5]);
  *(void *)(v9 + v12[6]) = *(void *)(v10 + v12[6]);
  *(void *)(v9 + v12[7]) = *(void *)(v10 + v12[7]);
  uint64_t v13 = v12[8];
  uint64_t v14 = (void *)(v9 + v13);
  uint64_t v15 = (uint64_t *)(v10 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(void *)(v9 + v12[9]) = *(void *)(v10 + v12[9]);
  swift_release();
  *(void *)(v9 + v12[10]) = *(void *)(v10 + v12[10]);
  swift_release();
  *(void *)(v9 + v12[11]) = *(void *)(v10 + v12[11]);
  *(void *)(v9 + v12[12]) = *(void *)(v10 + v12[12]);
  *(void *)(v9 + v12[13]) = *(void *)(v10 + v12[13]);
  *(void *)(v9 + v12[14]) = *(void *)(v10 + v12[14]);
  swift_release();
  *(void *)(v9 + v12[15]) = *(void *)(v10 + v12[15]);
  swift_release();
  *(void *)(v9 + v12[16]) = *(void *)(v10 + v12[16]);
  swift_release();
  *(void *)(v9 + v12[17]) = *(void *)(v10 + v12[17]);
  *(void *)(v9 + v12[18]) = *(void *)(v10 + v12[18]);
  uint64_t v18 = v12[19];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (uint64_t *)(v10 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v12[20];
  int v24 = (void *)(v9 + v23);
  uint64_t v25 = (void *)(v10 + v23);
  uint64_t v26 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v74 = *((void *)v26 - 1);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, int *))(v74 + 48);
  uint64_t v28 = v24;
  LODWORD(v24) = v27(v24, 1, v26);
  __src = v25;
  uint64_t v29 = v25;
  uint64_t v30 = v26;
  int v31 = v27(v29, 1, v26);
  if (v24)
  {
    if (!v31)
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)__src;
      uint64_t v32 = v26[12];
      uint64_t v33 = (_DWORD *)((char *)v28 + v32);
      uint64_t v34 = (_DWORD *)((char *)__src + v32);
      uint64_t v35 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        *uint64_t v33 = *v34;
        uint64_t v44 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))((char *)v33 + *(int *)(v44 + 48), (char *)v34 + *(int *)(v44 + 48), v73);
        uint64_t v45 = *(int *)(v44 + 64);
        uint64_t v46 = (char *)v33 + v45;
        uint64_t v47 = (char *)v34 + v45;
        uint64_t v48 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v49 = v26[16];
      uint64_t v50 = (char *)v28 + v49;
      uint64_t v51 = (char *)__src + v49;
      uint64_t v52 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      uint64_t v53 = v26[20];
      uint64_t v54 = (char *)v28 + v53;
      uint64_t v55 = (char *)__src + v53;
      uint64_t v56 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      *(void *)((char *)v28 + v26[24]) = *(void *)((char *)__src + v26[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v74 + 56))(v28, 0, 1, v26);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v36 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v28, __src, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_13:
    uint64_t v39 = v75;
    goto LABEL_14;
  }
  if (v31)
  {
    sub_10000A9C0((uint64_t)v28, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v37 = __src;
  uint64_t v38 = __src[1];
  void *v28 = *__src;
  v28[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = v75;
  if (v75 != a2)
  {
    uint64_t v40 = v30[12];
    uint64_t v41 = (_DWORD *)((char *)v28 + v40);
    uint64_t v42 = (_DWORD *)((char *)__src + v40);
    sub_1000434B4((uint64_t)v28 + v40, type metadata accessor for CircularProgressView.ColorStyle);
    uint64_t v43 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      *uint64_t v41 = *v42;
      uint64_t v58 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))((char *)v41 + *(int *)(v58 + 48), (char *)v42 + *(int *)(v58 + 48), v73);
      uint64_t v59 = *(int *)(v58 + 64);
      uint64_t v60 = (char *)v41 + v59;
      uint64_t v61 = (char *)v42 + v59;
      uint64_t v62 = sub_1000A38E0();
      uint64_t v63 = v60;
      uint64_t v37 = __src;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v63, v61, v62);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v64 = v30[16];
  uint64_t v65 = (char *)v28 + v64;
  uint64_t v66 = (char *)v37 + v64;
  uint64_t v67 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  uint64_t v68 = v30[20];
  long long v69 = (char *)v28 + v68;
  long long v70 = (char *)v37 + v68;
  uint64_t v71 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 40))(v69, v70, v71);
  *(void *)((char *)v28 + v30[24]) = *(void *)((char *)v37 + v30[24]);
LABEL_14:
  *(void *)(v9 + v12[21]) = *(void *)(v10 + v12[21]);
  return v39;
}

uint64_t sub_100042274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100042288);
}

uint64_t sub_100042288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100042338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004234C);
}

uint64_t sub_10004234C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MediumReadingGoalView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CE190);
}

uint64_t sub_100042414()
{
  uint64_t result = type metadata accessor for MediumReadingGoalView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000424AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000424C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v148 = sub_100004FDC(&qword_1000CE1D0);
  uint64_t v147 = *(void *)(v148 - 8);
  uint64_t v3 = __chkstk_darwin(v148);
  uint64_t v146 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v157 = (char *)&v140 - v5;
  uint64_t v144 = sub_100004FDC(&qword_1000CE1D8);
  uint64_t v6 = __chkstk_darwin(v144);
  uint64_t v158 = (uint64_t)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v143 = (uint64_t)&v140 - v9;
  __chkstk_darwin(v8);
  uint64_t v161 = (uint64_t)&v140 - v10;
  uint64_t v11 = sub_100004FDC(&qword_1000CE1E0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v154 = (uint64_t)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v153 = (uint64_t)&v140 - v14;
  uint64_t v160 = type metadata accessor for LabelView();
  uint64_t v15 = __chkstk_darwin(v160);
  long long v142 = (uint64_t *)((char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v140 - v17);
  uint64_t v159 = sub_100004FDC(&qword_1000CE000);
  uint64_t v19 = __chkstk_darwin(v159);
  uint64_t v145 = (uint64_t)&v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v164 = (uint64_t)&v140 - v22;
  __chkstk_darwin(v21);
  uint64_t v163 = (uint64_t)&v140 - v23;
  long long v151 = (void *)type metadata accessor for ReadingProgressIconView(0);
  __chkstk_darwin(v151);
  uint64_t v25 = (uint64_t *)((char *)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v156 = sub_100004FDC(&qword_1000CE1E8);
  uint64_t v152 = *(char **)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v149 = (char *)&v140 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100004FDC(&qword_1000CE1F0);
  uint64_t v28 = v27 - 8;
  uint64_t v29 = __chkstk_darwin(v27);
  int v31 = (char *)&v140 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v162 = (uint64_t)&v140 - v32;
  uint64_t v150 = a1;
  uint64_t v33 = *a1;
  uint64_t v34 = (char *)a1 + *(int *)(type metadata accessor for MediumReadingGoalView(0) + 20);
  uint64_t v35 = (int *)type metadata accessor for MediumReadingGoalView.ViewConfiguration(0);
  uint64_t v36 = *(void *)&v34[v35[15]];
  uint64_t v37 = *(void *)&v34[v35[16]];
  uint64_t v38 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v39 = (char *)v25 + v38[7];
  uint64_t v40 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v39, v34, v40);
  uint64_t v41 = *(void *)&v34[v35[17]];
  uint64_t v42 = *(void *)&v34[v35[18]];
  sub_10004344C((uint64_t)&v34[v35[20]], (uint64_t)v25 + v38[10], type metadata accessor for CircularProgressView.Content);
  *uint64_t v25 = v33;
  v25[1] = v36;
  v25[2] = v37;
  *(void *)((char *)v25 + v38[8]) = v41;
  *(void *)((char *)v25 + v38[9]) = v42;
  *((unsigned char *)v25 + v38[11]) = 0;
  sub_1000433E4();
  swift_retain();
  swift_retain();
  uint64_t v43 = v149;
  sub_1000A3E70();
  sub_1000434B4((uint64_t)v25, type metadata accessor for ReadingProgressIconView);
  LOBYTE(v38) = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = (uint64_t)v152;
  uint64_t v53 = v156;
  (*((void (**)(char *, char *, uint64_t))v152 + 2))(v31, v43, v156);
  uint64_t v54 = &v31[*(int *)(v28 + 44)];
  *uint64_t v54 = (char)v38;
  *((void *)v54 + 1) = v45;
  *((void *)v54 + 2) = v47;
  *((void *)v54 + 3) = v49;
  *((void *)v54 + 4) = v51;
  v54[40] = 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v53);
  uint64_t v152 = v31;
  sub_10000A95C((uint64_t)v31, v162, &qword_1000CE1F0);
  uint64_t v55 = v150;
  long long v56 = v150[1];
  v176[4] = *v150;
  v176[5] = v56;
  long long v57 = v150[3];
  v176[6] = v150[2];
  v176[7] = v57;
  uint64_t v58 = sub_10006EA38();
  uint64_t v60 = v59;
  uint64_t v156 = v35[14];
  uint64_t v61 = *(void *)&v34[v156];
  swift_retain();
  unsigned int v62 = sub_1000A3C30();
  uint64_t v63 = *(void *)&v34[v35[21]];
  uint64_t v64 = v62;
  *uint64_t v18 = swift_getKeyPath();
  uint64_t v65 = sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v66 = (int *)v160;
  uint64_t v67 = (uint64_t *)((char *)v18 + *(int *)(v160 + 20));
  uint64_t *v67 = v58;
  v67[1] = v60;
  *(uint64_t *)((char *)v18 + v66[6]) = v61;
  uint64_t v68 = v66;
  long long v69 = (char *)v18 + v66[7];
  *(void *)long long v69 = v64;
  *((void *)v69 + 1) = v63;
  *((_WORD *)v69 + 8) = 0;
  long long v70 = (_OWORD *)v35[6];
  uint64_t v71 = *(void *)((char *)v70 + (void)v34);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v73 = v164;
  sub_10004344C((uint64_t)v18, v164, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v74 = v73 + *(int *)(v159 + 36);
  *(void *)uint64_t v74 = KeyPath;
  *(void *)(v74 + 8) = v71;
  *(unsigned char *)(v74 + 16) = 0;
  long long v151 = v18;
  sub_1000434B4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_10000A95C(v73, v163, &qword_1000CE000);
  long long v75 = v55[1];
  v176[0] = *v55;
  v176[1] = v75;
  long long v76 = v55[3];
  v176[2] = v55[2];
  v176[3] = v76;
  sub_100035AB4((uint64_t)v176);
  uint64_t v77 = sub_100031330();
  uint64_t v79 = v78;
  sub_100035AEC((uint64_t)v176);
  if (v79)
  {
    uint64_t v140 = v79;
    uint64_t v141 = v77;
    uint64_t v150 = v70;
    uint64_t v80 = *(void *)&v34[v156];
    uint64_t v81 = swift_getKeyPath();
    uint64_t v82 = (uint64_t)v142;
    *long long v142 = v81;
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)(v82 + v68[5]) = xmmword_1000AA810;
    *(void *)(v82 + v68[6]) = v80;
    uint64_t v83 = v82 + v68[7];
    *(void *)uint64_t v83 = 0;
    *(void *)(v83 + 8) = 0;
    *(_WORD *)(v83 + 16) = 256;
    swift_retain();
    unsigned __int8 v84 = sub_1000A3D40();
    char v85 = sub_1000A3D60();
    char v86 = sub_1000A3D50();
    sub_1000A3D50();
    if (sub_1000A3D50() != v84) {
      char v86 = sub_1000A3D50();
    }
    sub_1000A3D50();
    char v87 = sub_1000A3D50();
    uint64_t v149 = (char *)v65;
    if (v87 != v85) {
      char v86 = sub_1000A3D50();
    }
    sub_1000A38C0();
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    uint64_t v93 = v92;
    uint64_t v95 = v94;
    uint64_t v96 = v143;
    sub_10004344C(v82, v143, (uint64_t (*)(void))type metadata accessor for LabelView);
    uint64_t v97 = v96 + *(int *)(v144 + 36);
    *(unsigned char *)uint64_t v97 = v86;
    *(void *)(v97 + 8) = v89;
    *(void *)(v97 + 16) = v91;
    *(void *)(v97 + 24) = v93;
    *(void *)(v97 + 32) = v95;
    *(unsigned char *)(v97 + 40) = 0;
    sub_1000434B4(v82, (uint64_t (*)(void))type metadata accessor for LabelView);
    sub_10000A95C(v96, v161, &qword_1000CE1D8);
    swift_bridgeObjectRetain();
    uint64_t v98 = sub_1000A3FB0();
    uint64_t v99 = *(void *)&v34[v35[9]];
    uint64_t v100 = swift_getKeyPath();
    swift_retain();
    uint64_t v101 = sub_1000A3DD0();
    uint64_t v102 = swift_getKeyPath();
    char v103 = sub_1000A3D60();
    sub_1000A38C0();
    uint64_t v165 = v98;
    uint64_t v166 = v100;
    uint64_t v167 = v99;
    uint64_t v168 = v102;
    uint64_t v169 = v101;
    char v170 = v103;
    uint64_t v171 = v104;
    uint64_t v172 = v105;
    uint64_t v173 = v106;
    uint64_t v174 = v107;
    char v175 = 0;
    sub_100004FDC(&qword_1000CE210);
    sub_100043524();
    sub_1000A3E70();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v108 = *(void *)&v34[v156];
    uint64_t v109 = swift_getKeyPath();
    uint64_t v110 = (uint64_t)v151;
    void *v151 = v109;
    swift_storeEnumTagMultiPayload();
    uint64_t v111 = v160;
    uint64_t v112 = (uint64_t *)(v110 + *(int *)(v160 + 20));
    uint64_t v113 = v140;
    *uint64_t v112 = v141;
    v112[1] = v113;
    *(void *)(v110 + *(int *)(v111 + 24)) = v108;
    uint64_t v114 = v110 + *(int *)(v111 + 28);
    *(void *)uint64_t v114 = 0;
    *(void *)(v114 + 8) = 0;
    *(_WORD *)(v114 + 16) = 256;
    uint64_t v115 = *(void *)((char *)v150 + (void)v34);
    uint64_t v116 = swift_getKeyPath();
    uint64_t v117 = v145;
    sub_10004344C(v110, v145, (uint64_t (*)(void))type metadata accessor for LabelView);
    uint64_t v118 = v117 + *(int *)(v159 + 36);
    *(void *)uint64_t v118 = v116;
    *(void *)(v118 + 8) = v115;
    *(unsigned char *)(v118 + 16) = 0;
    swift_retain();
    sub_1000434B4(v110, (uint64_t (*)(void))type metadata accessor for LabelView);
    uint64_t v119 = v164;
    sub_10000A95C(v117, v164, &qword_1000CE000);
    uint64_t v120 = v158;
    sub_10000B1C0(v161, v158, &qword_1000CE1D8);
    uint64_t v121 = v147;
    uint64_t v122 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
    uint64_t v123 = v146;
    uint64_t v124 = v157;
    uint64_t v125 = v148;
    v122(v146, v157, v148);
    sub_10000B1C0(v119, v117, &qword_1000CE000);
    uint64_t v126 = v120;
    uint64_t v127 = v154;
    sub_10000B1C0(v126, v154, &qword_1000CE1D8);
    uint64_t v128 = sub_100004FDC(&qword_1000CE230);
    v122((char *)(v127 + *(int *)(v128 + 48)), v123, v125);
    sub_10000B1C0(v117, v127 + *(int *)(v128 + 64), &qword_1000CE000);
    sub_10000A9C0(v119, &qword_1000CE000);
    long long v129 = *(void (**)(char *, uint64_t))(v121 + 8);
    v129(v124, v125);
    sub_10000A9C0(v161, &qword_1000CE1D8);
    sub_10000A9C0(v117, &qword_1000CE000);
    v129(v123, v125);
    sub_10000A9C0(v158, &qword_1000CE1D8);
    uint64_t v130 = sub_100004FDC(&qword_1000CE200);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v127, 0, 1, v130);
    uint64_t v131 = v153;
    sub_10000A95C(v127, v153, &qword_1000CE1E0);
  }
  else
  {
    uint64_t v132 = sub_100004FDC(&qword_1000CE200);
    uint64_t v131 = v153;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v153, 1, 1, v132);
    uint64_t v127 = v154;
    uint64_t v119 = v164;
  }
  uint64_t v133 = v162;
  uint64_t v134 = (uint64_t)v152;
  sub_10000B1C0(v162, (uint64_t)v152, &qword_1000CE1F0);
  uint64_t v135 = v163;
  sub_10000B1C0(v163, v119, &qword_1000CE000);
  sub_10000B1C0(v131, v127, &qword_1000CE1E0);
  uint64_t v136 = v155;
  sub_10000B1C0(v134, v155, &qword_1000CE1F0);
  uint64_t v137 = (int *)sub_100004FDC(&qword_1000CE208);
  sub_10000B1C0(v119, v136 + v137[12], &qword_1000CE000);
  sub_10000B1C0(v127, v136 + v137[16], &qword_1000CE1E0);
  uint64_t v138 = v136 + v137[20];
  *(void *)uint64_t v138 = 0;
  *(unsigned char *)(v138 + 8) = 1;
  sub_10000A9C0(v131, &qword_1000CE1E0);
  sub_10000A9C0(v135, &qword_1000CE000);
  sub_10000A9C0(v133, &qword_1000CE1F0);
  sub_10000A9C0(v127, &qword_1000CE1E0);
  sub_10000A9C0(v119, &qword_1000CE000);
  return sub_10000A9C0(v134, &qword_1000CE1F0);
}

uint64_t sub_10004339C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1000A3B60();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100004FDC(&qword_1000CE1C8);
  return sub_1000424C8(v1, a1 + *(int *)(v3 + 44));
}

unint64_t sub_1000433E4()
{
  unint64_t result = qword_1000CE1F8;
  if (!qword_1000CE1F8)
  {
    type metadata accessor for ReadingProgressIconView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE1F8);
  }
  return result;
}

uint64_t sub_10004344C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000434B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100043524()
{
  unint64_t result = qword_1000CE218;
  if (!qword_1000CE218)
  {
    sub_100008B14(&qword_1000CE210);
    sub_1000435A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE218);
  }
  return result;
}

unint64_t sub_1000435A0()
{
  unint64_t result = qword_1000CE220;
  if (!qword_1000CE220)
  {
    sub_100008B14(&qword_1000CE228);
    sub_10002ECF8();
    sub_10000B17C(&qword_1000CD198, &qword_1000CD1A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE220);
  }
  return result;
}

uint64_t sub_100043640()
{
  return sub_10000B17C(&qword_1000CE238, &qword_1000CE240);
}

uint64_t destroy for LargeOneBookView(uint64_t a1)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LargeOneBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void **)(a2 + 168);
  uint64_t v16 = *(void **)(a2 + 176);
  *(void *)(a1 + 168) = v15;
  *(void *)(a1 + 176) = v16;
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  long long v19 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v15;
  id v21 = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LargeOneBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_10000A4F8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v15;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(a1 + 168);
  uint64_t v17 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v17;
  id v18 = v17;

  long long v19 = *(void **)(a2 + 176);
  id v20 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v19;
  id v21 = v19;

  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_retain();
  swift_release();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  return a1;
}

void *initializeWithTake for LargeOneBookView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for LargeOneBookView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v4;
  sub_10000A4F8(v5, v6, v7, v8, v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void **)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);

  uint64_t v16 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_release();
  long long v18 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v18;
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeOneBookView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 272)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeOneBookView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 272) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargeOneBookView()
{
  return &type metadata for LargeOneBookView;
}

uint64_t sub_100043C38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100043C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v75 = a1;
  uint64_t v3 = sub_1000A3C90();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CE248);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CE250);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CE258);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v65 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004FDC(&qword_1000CE260);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FDC(&qword_1000CE268);
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  __chkstk_darwin(v16);
  long long v69 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004FDC(&qword_1000CE270);
  __chkstk_darwin(v18 - 8);
  uint64_t v67 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_1000A3B60();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v20 = sub_100004FDC(&qword_1000CE278);
  sub_1000442D4(v1, (uint64_t)&v7[*(int *)(v20 + 44)]);
  char v21 = sub_1000A3D40();
  long long v22 = *(_OWORD *)(v1 + 16);
  v92[0] = *(_OWORD *)v1;
  v92[1] = v22;
  char v93 = *(unsigned char *)(v1 + 32);
  sub_10000A95C((uint64_t)v92, (uint64_t)v94, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v94, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v92, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_10000B1C0((uint64_t)v7, (uint64_t)v11, &qword_1000CE248);
  int v31 = &v11[*(int *)(v9 + 44)];
  *int v31 = v21;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10000A9C0((uint64_t)v7, &qword_1000CE248);
  LOBYTE(v7) = sub_1000A3D60();
  sub_100012D8C((uint64_t)v94, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  uint64_t v32 = (uint64_t)v65;
  sub_100012D8C((uint64_t)v92, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_10000B1C0((uint64_t)v11, v32, &qword_1000CE250);
  uint64_t v41 = v32 + *(int *)(v13 + 44);
  *(unsigned char *)uint64_t v41 = (_BYTE)v7;
  *(void *)(v41 + 8) = v34;
  *(void *)(v41 + 16) = v36;
  *(void *)(v41 + 24) = v38;
  *(void *)(v41 + 32) = v40;
  *(unsigned char *)(v41 + 40) = 0;
  sub_10000A9C0((uint64_t)v11, &qword_1000CE250);
  LOBYTE(v11) = sub_1000A3D20();
  unsigned __int8 v42 = sub_1000A3D30();
  char v43 = sub_1000A3D50();
  sub_1000A3D50();
  if (sub_1000A3D50() != v11) {
    char v43 = sub_1000A3D50();
  }
  sub_1000A3D50();
  if (sub_1000A3D50() != v42) {
    char v43 = sub_1000A3D50();
  }
  uint64_t v44 = v72;
  uint64_t v45 = v68;
  uint64_t v46 = (uint64_t)v66;
  sub_1000A38C0();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  sub_10000B1C0(v32, v46, &qword_1000CE258);
  uint64_t v55 = v46 + *(int *)(v45 + 36);
  *(unsigned char *)uint64_t v55 = v43;
  *(void *)(v55 + 8) = v48;
  *(void *)(v55 + 16) = v50;
  *(void *)(v55 + 24) = v52;
  *(void *)(v55 + 32) = v54;
  *(unsigned char *)(v55 + 40) = 0;
  sub_10000A9C0(v32, &qword_1000CE258);
  long long v56 = *(_OWORD *)(v2 + 168);
  long long v82 = *(_OWORD *)(v2 + 152);
  long long v83 = v56;
  long long v84 = *(_OWORD *)(v2 + 184);
  char v85 = *(unsigned char *)(v2 + 200);
  long long v57 = *(_OWORD *)(v2 + 136);
  long long v80 = *(_OWORD *)(v2 + 120);
  long long v81 = v57;
  long long v88 = v82;
  long long v89 = v56;
  long long v90 = v84;
  char v91 = v85;
  long long v86 = v80;
  long long v87 = v57;
  if (sub_10001A23C()) {
    sub_1000A3C80();
  }
  else {
    sub_1000A3C70();
  }
  uint64_t v58 = sub_100045138(&qword_1000CE280, &qword_1000CE260, (void (*)(void))sub_100045110);
  uint64_t v59 = v69;
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v44, v74);
  sub_10000A9C0(v46, &qword_1000CE260);
  uint64_t v78 = sub_10006D98C(0);
  uint64_t v79 = v60;
  uint64_t v76 = v45;
  uint64_t v77 = v58;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  uint64_t v61 = (uint64_t)v67;
  uint64_t v62 = v71;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v62);
  return sub_10000A95C(v61, v75, &qword_1000CE270);
}

uint64_t sub_1000442D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000CE2A0);
  uint64_t v101 = *(void *)(v3 - 8);
  uint64_t v102 = v3;
  __chkstk_darwin(v3);
  uint64_t v107 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CE2A8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v104 = (uint64_t)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v100 = (char *)&v92 - v9;
  __chkstk_darwin(v8);
  uint64_t v103 = (uint64_t)&v92 - v10;
  uint64_t v96 = sub_1000A3490();
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v11 = __chkstk_darwin(v96);
  uint64_t v98 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v92 - v13;
  uint64_t v15 = (int *)type metadata accessor for BookCoverView();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v92 - v19;
  uint64_t v21 = sub_100004FDC(&qword_1000CD268);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100004FDC(&qword_1000CE2B0);
  __chkstk_darwin(v95);
  uint64_t v25 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100004FDC(&qword_1000CE2B8);
  uint64_t v26 = __chkstk_darwin(v97);
  uint64_t v99 = (uint64_t)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v93 = (uint64_t)&v92 - v29;
  __chkstk_darwin(v28);
  uint64_t v106 = (uint64_t)&v92 - v30;
  long long v31 = *(_OWORD *)(a1 + 56);
  long long v32 = *(_OWORD *)(a1 + 88);
  v125[2] = *(_OWORD *)(a1 + 72);
  v125[3] = v32;
  long long v126 = *(_OWORD *)(a1 + 104);
  v125[0] = *(_OWORD *)(a1 + 40);
  v125[1] = v31;
  long long v33 = *(_OWORD *)(a1 + 168);
  long long v115 = *(_OWORD *)(a1 + 152);
  long long v116 = v33;
  long long v117 = *(_OWORD *)(a1 + 184);
  char v118 = *(unsigned char *)(a1 + 200);
  long long v34 = *(_OWORD *)(a1 + 136);
  long long v113 = *(_OWORD *)(a1 + 120);
  long long v114 = v34;
  sub_10001308C((uint64_t)v125);
  uint64_t v35 = v14;
  sub_1000085CC((uint64_t)&v113, (uint64_t)v14);
  sub_1000130D8((uint64_t)v125);
  long long v121 = v115;
  long long v122 = v116;
  long long v123 = v117;
  char v124 = v118;
  long long v119 = v113;
  long long v120 = v114;
  char v36 = sub_10001A23C();
  if (*((void *)&v126 + 1))
  {
    if (v126 == v121) {
      char v37 = 1;
    }
    else {
      char v37 = sub_1000A46A0();
    }
  }
  else
  {
    char v37 = 0;
  }
  *uint64_t v18 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))((char *)v18 + v15[5], v35, v96);
  *((unsigned char *)v18 + v15[6]) = v36 & 1;
  uint64_t v38 = (char *)v18 + v15[7];
  long long v39 = v116;
  *((_OWORD *)v38 + 2) = v115;
  *((_OWORD *)v38 + 3) = v39;
  *((_OWORD *)v38 + 4) = v117;
  v38[80] = v118;
  long long v40 = v114;
  *(_OWORD *)uint64_t v38 = v113;
  *((_OWORD *)v38 + 1) = v40;
  *((unsigned char *)v18 + v15[8]) = v37 & 1;
  *((unsigned char *)v18 + v15[9]) = 0;
  sub_10001312C((uint64_t)v18, (uint64_t)v20);
  double v41 = *(double *)(a1 + 208);
  sub_100013190((uint64_t)&v113);
  uint64_t v42 = sub_1000A4080();
  sub_100030CEC(0.0, 1, 0.0, 1, v41, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, 0.0, 1, v42, v43);
  sub_100019258((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  sub_10000B1C0((uint64_t)v23, (uint64_t)v25, &qword_1000CD268);
  *(_WORD *)&v25[*(int *)(v95 + 36)] = 1;
  sub_10000A9C0((uint64_t)v23, &qword_1000CD268);
  char v44 = sub_1000A3D60();
  long long v45 = *(_OWORD *)(a1 + 16);
  v110[0] = *(_OWORD *)a1;
  v110[1] = v45;
  char v111 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v110, (uint64_t)v112, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v112, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v110, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v54 = v93;
  sub_10000B1C0((uint64_t)v25, v93, &qword_1000CE2B0);
  uint64_t v55 = v54 + *(int *)(v97 + 36);
  *(unsigned char *)uint64_t v55 = v44;
  *(void *)(v55 + 8) = v47;
  *(void *)(v55 + 16) = v49;
  *(void *)(v55 + 24) = v51;
  *(void *)(v55 + 32) = v53;
  *(unsigned char *)(v55 + 40) = 0;
  sub_10000A9C0((uint64_t)v25, &qword_1000CE2B0);
  sub_10000A95C(v54, v106, &qword_1000CE2B8);
  sub_10001308C((uint64_t)v125);
  sub_1000085CC((uint64_t)&v113, v98);
  uint64_t v56 = sub_1000130D8((uint64_t)v125);
  __chkstk_darwin(v56);
  sub_100004FDC(&qword_1000CE2C0);
  sub_10000B17C(&qword_1000CE2C8, &qword_1000CE2C0);
  sub_1000A3E10();
  sub_100004FDC(&qword_1000CCF18);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1000A8D50;
  long long v58 = v119;
  *(_OWORD *)(v57 + 32) = v119;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_10006DB70(0);
  uint64_t v61 = v59;
  *(void *)(v57 + 48) = v60;
  *(void *)(v57 + 56) = v59;
  if (!*((void *)&v58 + 1))
  {
    uint64_t v62 = (char *)_swiftEmptyArrayStorage;
    if (!v59) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v64 = *((void *)v62 + 2);
  unint64_t v63 = *((void *)v62 + 3);
  if (v64 >= v63 >> 1) {
    uint64_t v62 = sub_100058E74((char *)(v63 > 1), v64 + 1, 1, v62);
  }
  *((void *)v62 + 2) = v64 + 1;
  *(_OWORD *)&v62[16 * v64 + 32] = v58;
  if (v61)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v62 = sub_100058E74(0, *((void *)v62 + 2) + 1, 1, v62);
    }
    unint64_t v66 = *((void *)v62 + 2);
    unint64_t v65 = *((void *)v62 + 3);
    if (v66 >= v65 >> 1) {
      uint64_t v62 = sub_100058E74((char *)(v65 > 1), v66 + 1, 1, v62);
    }
    *((void *)v62 + 2) = v66 + 1;
    uint64_t v67 = &v62[16 * v66];
    *((void *)v67 + 4) = v60;
    *((void *)v67 + 5) = v61;
  }
LABEL_17:
  swift_release();
  uint64_t v68 = *((void *)v62 + 2);
  if (v68)
  {
    long long v69 = (uint64_t *)(v62 + 40);
    uint64_t v70 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v75 = *(v69 - 1);
      uint64_t v74 = *v69;
      uint64_t v76 = HIBYTE(*v69) & 0xF;
      if ((*v69 & 0x2000000000000000) == 0) {
        uint64_t v76 = v75 & 0xFFFFFFFFFFFFLL;
      }
      if (v76)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v108 = v70;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10007AB8C(0, v70[2] + 1, 1);
          uint64_t v70 = v108;
        }
        unint64_t v72 = v70[2];
        unint64_t v71 = v70[3];
        if (v72 >= v71 >> 1)
        {
          sub_10007AB8C(v71 > 1, v72 + 1, 1);
          uint64_t v70 = v108;
        }
        _OWORD v70[2] = v72 + 1;
        uint64_t v73 = &v70[2 * v72];
        v73[4] = v75;
        v73[5] = v74;
      }
      v69 += 2;
      --v68;
    }
    while (v68);
  }
  else
  {
    uint64_t v70 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v108 = v70;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v78 = sub_1000A4250();
  uint64_t v80 = v79;
  swift_release();
  uint64_t v108 = (void *)v78;
  uint64_t v109 = v80;
  sub_10000B17C(&qword_1000CE2D0, &qword_1000CE2A0);
  sub_10000A504();
  uint64_t v81 = (uint64_t)v100;
  uint64_t v82 = v102;
  long long v83 = v107;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v83, v82);
  uint64_t v84 = v103;
  sub_10000A95C(v81, v103, &qword_1000CE2A8);
  uint64_t v85 = v106;
  uint64_t v86 = v99;
  sub_10000B1C0(v106, v99, &qword_1000CE2B8);
  uint64_t v87 = v104;
  sub_10000B1C0(v84, v104, &qword_1000CE2A8);
  uint64_t v88 = v105;
  sub_10000B1C0(v86, v105, &qword_1000CE2B8);
  uint64_t v89 = sub_100004FDC(&qword_1000CE2D8);
  sub_10000B1C0(v87, v88 + *(int *)(v89 + 48), &qword_1000CE2A8);
  uint64_t v90 = v88 + *(int *)(v89 + 64);
  *(void *)uint64_t v90 = 0;
  *(unsigned char *)(v90 + 8) = 1;
  sub_10000A9C0(v84, &qword_1000CE2A8);
  sub_10000A9C0(v85, &qword_1000CE2B8);
  sub_10000A9C0(v87, &qword_1000CE2A8);
  return sub_10000A9C0(v86, &qword_1000CE2B8);
}

uint64_t sub_100044DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1000A3BB0();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_100004FDC(&qword_1000CE2E0);
  return sub_100044E34(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100044E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LabelView();
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v44 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v39 - v8);
  long long v10 = *(_OWORD *)(a1 + 168);
  long long v50 = *(_OWORD *)(a1 + 152);
  long long v51 = v10;
  long long v52 = *(_OWORD *)(a1 + 184);
  char v53 = *(unsigned char *)(a1 + 200);
  long long v11 = *(_OWORD *)(a1 + 136);
  long long v48 = *(_OWORD *)(a1 + 120);
  long long v49 = v11;
  char v59 = v53;
  long long v56 = v50;
  long long v57 = v10;
  long long v58 = v52;
  long long v54 = v48;
  long long v55 = v11;
  uint64_t v42 = *((void *)&v48 + 1);
  uint64_t v43 = v48;
  swift_bridgeObjectRetain();
  int v41 = sub_1000A3D30();
  long long v12 = *(_OWORD *)(a1 + 224);
  long long v45 = *(_OWORD *)(a1 + 208);
  long long v46 = v12;
  long long v13 = *(_OWORD *)(a1 + 256);
  v47[0] = *(_OWORD *)(a1 + 240);
  v47[1] = v13;
  sub_1000A38C0();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v22 = sub_10001A23C();
  uint64_t v23 = (uint64_t *)v47 + 1;
  if ((v22 & 1) == 0) {
    uint64_t v23 = (uint64_t *)v47;
  }
  uint64_t v40 = *v23;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = sub_10006DB70(0);
  uint64_t v27 = v26;
  uint64_t v28 = *((void *)&v46 + 1);
  sub_100045270((uint64_t)&v45);
  unsigned int v29 = sub_1000A3C50();
  uint64_t v30 = *((void *)&v45 + 1);
  uint64_t v31 = v29;
  *uint64_t v9 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  long long v32 = (uint64_t *)((char *)v9 + v5[7]);
  uint64_t *v32 = v25;
  v32[1] = v27;
  *(uint64_t *)((char *)v9 + v5[8]) = v28;
  long long v33 = (char *)v9 + v5[9];
  *(void *)long long v33 = v31;
  *((void *)v33 + 1) = v30;
  *((_WORD *)v33 + 8) = 0;
  uint64_t v34 = v44;
  sub_1000191F4((uint64_t)v9, v44);
  uint64_t v35 = v42;
  *(void *)a2 = v43;
  *(void *)(a2 + 8) = v35;
  *(unsigned char *)(a2 + 16) = v41;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v21;
  *(unsigned char *)(a2 + 56) = 0;
  uint64_t v36 = v40;
  *(void *)(a2 + 64) = KeyPath;
  *(void *)(a2 + 72) = v36;
  *(unsigned char *)(a2 + 80) = 0;
  uint64_t v37 = sub_100004FDC(&qword_1000CE2E8);
  sub_1000191F4(v34, a2 + *(int *)(v37 + 48));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100019258((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_100019258(v34, (uint64_t (*)(void))type metadata accessor for LabelView);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000450C4@<X0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100043C54(a1);
}

uint64_t sub_100045110()
{
  return sub_100045138(&qword_1000CE288, &qword_1000CE258, (void (*)(void))sub_1000451B8);
}

uint64_t sub_100045138(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000451B8()
{
  unint64_t result = qword_1000CE290;
  if (!qword_1000CE290)
  {
    sub_100008B14(&qword_1000CE250);
    sub_10000B17C(&qword_1000CE298, &qword_1000CE248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE290);
  }
  return result;
}

uint64_t sub_100045260@<X0>(uint64_t a1@<X8>)
{
  return sub_100044DE8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100045270(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for LargeOneBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for LargeOneBookView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 initializeWithTake for MediumWidgetViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LargeOneBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeOneBookView.ViewConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeOneBookView.ViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargeOneBookView.ViewConfiguration()
{
  return &type metadata for LargeOneBookView.ViewConfiguration;
}

unint64_t sub_10004546C()
{
  unint64_t result = qword_1000CE2F0;
  if (!qword_1000CE2F0)
  {
    sub_100008B14(&qword_1000CE270);
    sub_100008B14(&qword_1000CE260);
    sub_100045138(&qword_1000CE280, &qword_1000CE260, (void (*)(void))sub_100045110);
    swift_getOpaqueTypeConformance2();
    sub_10002F01C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE2F0);
  }
  return result;
}

uint64_t *sub_100045548(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = v7[12];
      long long v12 = (uint64_t *)((char *)a1 + v11);
      long long v13 = (uint64_t *)((char *)a2 + v11);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *long long v12 = *v13;
        swift_retain();
      }
      else
      {
        *(_DWORD *)long long v12 = *(_DWORD *)v13;
        uint64_t v14 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v15 = *(int *)(v14 + 48);
        uint64_t v16 = (char *)v12 + v15;
        uint64_t v17 = (char *)v13 + v15;
        uint64_t v18 = sub_1000A4090();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        uint64_t v19 = *(int *)(v14 + 64);
        uint64_t v20 = (char *)v12 + v19;
        uint64_t v21 = (char *)v13 + v19;
        uint64_t v22 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = v7[16];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      uint64_t v27 = v7[20];
      uint64_t v28 = (char *)a1 + v27;
      unsigned int v29 = (char *)a2 + v27;
      uint64_t v30 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(uint64_t *)((char *)a1 + v7[24]) = *(uint64_t *)((char *)a2 + v7[24]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for CircularProgressView.ColorStyle(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CE4B0);
}

uint64_t sub_10004584C(uint64_t a1)
{
  unint64_t v2 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v5 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v6 = v4 + *(int *)(v5 + 48);
      uint64_t v7 = sub_1000A4090();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = v4 + *(int *)(v5 + 64);
      uint64_t v9 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    uint64_t v10 = a1 + v2[16];
    uint64_t v11 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = a1 + v2[20];
    uint64_t v13 = sub_1000A3D80();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v14(v12, v13);
  }
  return result;
}

void *sub_100045A2C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = v6[12];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v10 = *v11;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
      uint64_t v12 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      uint64_t v17 = *(int *)(v12 + 64);
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      uint64_t v20 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = v6[16];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = v6[20];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    *(void *)((char *)a1 + v6[24]) = *(void *)((char *)a2 + v6[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100045CD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v11 = v6[12];
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v12 = *v13;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
        uint64_t v17 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v18 = *(int *)(v17 + 48);
        uint64_t v19 = (char *)v12 + v18;
        uint64_t v20 = (char *)v13 + v18;
        uint64_t v21 = sub_1000A4090();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = *(int *)(v17 + 64);
        uint64_t v23 = (char *)v12 + v22;
        uint64_t v24 = (char *)v13 + v22;
        uint64_t v25 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = v6[16];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v6[20];
      uint64_t v31 = (char *)a1 + v30;
      long long v32 = (char *)a2 + v30;
      uint64_t v33 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)((char *)a1 + v6[24]) = *(void *)((char *)a2 + v6[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCB90);
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v14 = v6[12];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_100046180((uint64_t)a1 + v14);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v15 = *v16;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
      uint64_t v34 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v35 = *(int *)(v34 + 48);
      uint64_t v36 = (char *)v15 + v35;
      uint64_t v37 = (char *)v16 + v35;
      uint64_t v38 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = *(int *)(v34 + 64);
      uint64_t v40 = (char *)v15 + v39;
      int v41 = (char *)v16 + v39;
      uint64_t v42 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v43 = v6[16];
  uint64_t v44 = (char *)a1 + v43;
  long long v45 = (char *)a2 + v43;
  uint64_t v46 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = v6[20];
  long long v48 = (char *)a1 + v47;
  long long v49 = (char *)a2 + v47;
  uint64_t v50 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  *(void *)((char *)a1 + v6[24]) = *(void *)((char *)a2 + v6[24]);
  return a1;
}

uint64_t sub_100046180(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CircularProgressView.ColorStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1000461DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = v6[12];
    int v9 = (_DWORD *)((char *)a1 + v8);
    int v10 = (_DWORD *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *int v9 = *v10;
      uint64_t v12 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = (char *)v9 + v13;
      uint64_t v15 = (char *)v10 + v13;
      uint64_t v16 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      uint64_t v17 = *(int *)(v12 + 64);
      uint64_t v18 = (char *)v9 + v17;
      uint64_t v19 = (char *)v10 + v17;
      uint64_t v20 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v21 = v6[16];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    uint64_t v25 = v6[20];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    *(void *)((char *)a1 + v6[24]) = *(void *)((char *)a2 + v6[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100046488(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v11 = v6[12];
      uint64_t v12 = (_DWORD *)((char *)a1 + v11);
      uint64_t v13 = (_DWORD *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        *uint64_t v12 = *v13;
        uint64_t v20 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v21 = *(int *)(v20 + 48);
        uint64_t v22 = (char *)v12 + v21;
        uint64_t v23 = (char *)v13 + v21;
        uint64_t v24 = sub_1000A4090();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        uint64_t v25 = *(int *)(v20 + 64);
        uint64_t v26 = (char *)v12 + v25;
        uint64_t v27 = (char *)v13 + v25;
        uint64_t v28 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v29 = v6[16];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      uint64_t v33 = v6[20];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(void *)((char *)a1 + v6[24]) = *(void *)((char *)a2 + v6[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v15 = a2[1];
  *a1 = *a2;
  a1[1] = v15;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v16 = v6[12];
    uint64_t v17 = (_DWORD *)((char *)a1 + v16);
    uint64_t v18 = (_DWORD *)((char *)a2 + v16);
    sub_100046180((uint64_t)a1 + v16);
    uint64_t v19 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      *uint64_t v17 = *v18;
      uint64_t v37 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v38 = *(int *)(v37 + 48);
      uint64_t v39 = (char *)v17 + v38;
      uint64_t v40 = (char *)v18 + v38;
      uint64_t v41 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      uint64_t v42 = *(int *)(v37 + 64);
      uint64_t v43 = (char *)v17 + v42;
      uint64_t v44 = (char *)v18 + v42;
      uint64_t v45 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v46 = v6[16];
  uint64_t v47 = (char *)a1 + v46;
  long long v48 = (char *)a2 + v46;
  uint64_t v49 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
  uint64_t v50 = v6[20];
  long long v51 = (char *)a1 + v50;
  long long v52 = (char *)a2 + v50;
  uint64_t v53 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  *(void *)((char *)a1 + v6[24]) = *(void *)((char *)a2 + v6[24]);
  return a1;
}

uint64_t sub_10004692C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100046940);
}

uint64_t sub_100046940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCB90);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000469B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000469C4);
}

uint64_t sub_1000469C4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100004FDC(&qword_1000CCB90);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100046A48(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CCB90);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_100046AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCB90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for CircularProgressView.Content(uint64_t a1)
{
  return sub_10000E690(a1, (uint64_t *)&unk_1000CE368);
}

uint64_t sub_100046B48()
{
  uint64_t result = type metadata accessor for CircularProgressView.ColorStyle(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A3E00();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1000A3D80();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout();
        swift_initEnumMetadataSinglePayload();
        return 0;
      }
    }
  }
  return result;
}

void *sub_100046C74(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FDC(&qword_1000CCBB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A3990();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    int v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v48 = v17;
      uint64_t v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      uint64_t v20 = v16[12];
      uint64_t v21 = (void *)((char *)v14 + v20);
      uint64_t v22 = (void *)((char *)v15 + v20);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v21 = *v22;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
        uint64_t v23 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v24 = *(int *)(v23 + 48);
        uint64_t v46 = (char *)v22 + v24;
        uint64_t v47 = (char *)v21 + v24;
        uint64_t v25 = sub_1000A4090();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v47, v46, v25);
        uint64_t v26 = *(int *)(v23 + 64);
        uint64_t v27 = (char *)v21 + v26;
        uint64_t v28 = (char *)v22 + v26;
        uint64_t v29 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = v16[16];
      uint64_t v31 = (char *)v14 + v30;
      uint64_t v32 = (char *)v15 + v30;
      uint64_t v33 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v16[20];
      uint64_t v35 = (char *)v14 + v34;
      uint64_t v36 = (char *)v15 + v34;
      uint64_t v37 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      *(void *)((char *)v14 + v16[24]) = *(void *)((char *)v15 + v16[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v48 + 56))(v14, 0, 1, v16);
    }
    uint64_t v38 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
    uint64_t v39 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_1000A4090();
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_retain();
    swift_retain();
    v43(v40, v41, v42);
    uint64_t v44 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);
    *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  }
  return a1;
}

uint64_t sub_100047140(uint64_t a1, int *a2)
{
  sub_100004FDC(&qword_1000CCBB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000A3990();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = (int *)sub_100004FDC(&qword_1000CCB90);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v10 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v11 = v9 + *(int *)(v10 + 48);
      uint64_t v12 = sub_1000A4090();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      uint64_t v13 = v9 + *(int *)(v10 + 64);
      uint64_t v14 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v7 + v8[16];
    uint64_t v16 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v7 + v8[20];
    uint64_t v18 = sub_1000A3D80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  swift_release();
  swift_release();
  uint64_t v19 = a1 + a2[11];
  uint64_t v20 = sub_1000A4090();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

void *sub_100047448(void *a1, void *a2, int *a3)
{
  sub_100004FDC(&qword_1000CCBB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A3990();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v46 = v15;
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v18 = v14[12];
    uint64_t v19 = (void *)((char *)v12 + v18);
    uint64_t v20 = (void *)((char *)v13 + v18);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      uint64_t v21 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v22 = *(int *)(v21 + 48);
      uint64_t v44 = (char *)v20 + v22;
      uint64_t v45 = (char *)v19 + v22;
      uint64_t v23 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v45, v44, v23);
      uint64_t v24 = *(int *)(v21 + 64);
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v26 = (char *)v20 + v24;
      uint64_t v27 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = v14[16];
    uint64_t v29 = (char *)v12 + v28;
    uint64_t v30 = (char *)v13 + v28;
    uint64_t v31 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v14[20];
    uint64_t v33 = (char *)v12 + v32;
    uint64_t v34 = (char *)v13 + v32;
    uint64_t v35 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    *(void *)((char *)v12 + v14[24]) = *(void *)((char *)v13 + v14[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v46 + 56))(v12, 0, 1, v14);
  }
  uint64_t v36 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  uint64_t v37 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = sub_1000A4090();
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
  swift_retain();
  swift_retain();
  v41(v38, v39, v40);
  uint64_t v42 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  return a1;
}

void *sub_1000478C4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCBB8);
    sub_100004FDC(&qword_1000CCBB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A3990();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_10000A9C0((uint64_t)a1 + v7, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      uint64_t v19 = v14[12];
      uint64_t v62 = (void *)((char *)v12 + v19);
      uint64_t v20 = (void *)((char *)v13 + v19);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v62 = *v20;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v62 = *(_DWORD *)v20;
        uint64_t v25 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v26 = *(int *)(v25 + 48);
        uint64_t v60 = (char *)v20 + v26;
        uint64_t v61 = (char *)v62 + v26;
        uint64_t v27 = sub_1000A4090();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v61, v60, v27);
        uint64_t v28 = *(int *)(v25 + 64);
        uint64_t v29 = (char *)v62 + v28;
        uint64_t v30 = (char *)v20 + v28;
        uint64_t v31 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v14[16];
      uint64_t v33 = (char *)v12 + v32;
      uint64_t v34 = (char *)v13 + v32;
      uint64_t v35 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      uint64_t v36 = v14[20];
      uint64_t v37 = (char *)v12 + v36;
      uint64_t v38 = (char *)v13 + v36;
      uint64_t v39 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      *(void *)((char *)v12 + v14[24]) = *(void *)((char *)v13 + v14[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_24;
    }
LABEL_15:
    uint64_t v21 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_24;
  }
  if (v18)
  {
    sub_10000A9C0((uint64_t)v12, &qword_1000CCB90);
    goto LABEL_15;
  }
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v22 = v14[12];
    uint64_t v23 = (void *)((char *)v12 + v22);
    uint64_t v24 = (void *)((char *)v13 + v22);
    sub_100046180((uint64_t)v12 + v22);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      uint64_t v40 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v41 = *(int *)(v40 + 48);
      unint64_t v63 = (char *)v24 + v41;
      unint64_t v64 = (char *)v23 + v41;
      uint64_t v42 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v64, v63, v42);
      uint64_t v43 = *(int *)(v40 + 64);
      uint64_t v44 = (char *)v23 + v43;
      uint64_t v45 = (char *)v24 + v43;
      uint64_t v46 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v47 = v14[16];
  uint64_t v48 = (char *)v12 + v47;
  uint64_t v49 = (char *)v13 + v47;
  uint64_t v50 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = v14[20];
  long long v52 = (char *)v12 + v51;
  uint64_t v53 = (char *)v13 + v51;
  uint64_t v54 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  *(void *)((char *)v12 + v14[24]) = *(void *)((char *)v13 + v14[24]);
LABEL_24:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v55 = a3[11];
  long long v56 = (char *)a1 + v55;
  long long v57 = (char *)a2 + v55;
  uint64_t v58 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  return a1;
}

char *sub_100047F90(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCBB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A3990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000A4130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    uint64_t v19 = v16[12];
    uint64_t v20 = &v14[v19];
    uint64_t v21 = &v15[v19];
    uint64_t v22 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      uint64_t v23 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v45 = &v20[v24];
      uint64_t v46 = v23;
      uint64_t v44 = &v21[v24];
      uint64_t v25 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v45, v44, v25);
      uint64_t v26 = *(int *)(v46 + 64);
      uint64_t v47 = &v20[v26];
      uint64_t v27 = &v21[v26];
      uint64_t v28 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v47, v27, v28);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v29 = v16[16];
    uint64_t v30 = &v14[v29];
    uint64_t v31 = &v15[v29];
    uint64_t v32 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    uint64_t v33 = v16[20];
    uint64_t v34 = &v14[v33];
    uint64_t v35 = &v15[v33];
    uint64_t v36 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    *(void *)&v14[v16[24]] = *(void *)&v15[v16[24]];
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v37 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v37] = *(void *)&a2[v37];
  uint64_t v38 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  uint64_t v42 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v42] = *(void *)&a2[v42];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  return a1;
}

char *sub_10004840C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCBB8);
    uint64_t v6 = sub_100004FDC(&qword_1000CCBB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A3990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_10000A9C0((uint64_t)&a1[v8], &qword_1000CCAD8);
    uint64_t v11 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000A4130();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v21 = v16[12];
      uint64_t v22 = &v14[v21];
      uint64_t v23 = &v15[v21];
      uint64_t v24 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
        uint64_t v31 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v32 = *(int *)(v31 + 48);
        uint64_t v68 = &v22[v32];
        uint64_t v70 = v31;
        uint64_t v67 = &v23[v32];
        uint64_t v33 = sub_1000A4090();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v68, v67, v33);
        uint64_t v34 = *(int *)(v70 + 64);
        unint64_t v71 = &v22[v34];
        uint64_t v35 = &v23[v34];
        uint64_t v36 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v71, v35, v36);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v37 = v16[16];
      uint64_t v38 = &v14[v37];
      uint64_t v39 = &v15[v37];
      uint64_t v40 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = v16[20];
      uint64_t v42 = &v14[v41];
      uint64_t v43 = &v15[v41];
      uint64_t v44 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      *(void *)&v14[v16[24]] = *(void *)&v15[v16[24]];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_22;
    }
LABEL_14:
    uint64_t v25 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v14, v15, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_22;
  }
  if (v20)
  {
    sub_10000A9C0((uint64_t)v14, &qword_1000CCB90);
    goto LABEL_14;
  }
  uint64_t v26 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v26;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v27 = v16[12];
    uint64_t v28 = &v14[v27];
    uint64_t v29 = &v15[v27];
    sub_100046180((uint64_t)&v14[v27]);
    uint64_t v30 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      uint64_t v45 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v46 = *(int *)(v45 + 48);
      long long v69 = &v29[v46];
      unint64_t v72 = &v28[v46];
      uint64_t v47 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v72, v69, v47);
      uint64_t v48 = *(int *)(v45 + 64);
      uint64_t v49 = &v28[v48];
      uint64_t v50 = &v29[v48];
      uint64_t v51 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v52 = v16[16];
  uint64_t v53 = &v14[v52];
  uint64_t v54 = &v15[v52];
  uint64_t v55 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 40))(v53, v54, v55);
  uint64_t v56 = v16[20];
  long long v57 = &v14[v56];
  uint64_t v58 = &v15[v56];
  uint64_t v59 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
  *(void *)&v14[v16[24]] = *(void *)&v15[v16[24]];
LABEL_22:
  uint64_t v60 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v60] = *(void *)&a2[v60];
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_release();
  uint64_t v61 = a3[11];
  uint64_t v62 = &a1[v61];
  unint64_t v63 = &a2[v61];
  uint64_t v64 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  uint64_t v65 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v65] = *(void *)&a2[v65];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  return a1;
}

uint64_t sub_100048ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048AD0);
}

uint64_t sub_100048AD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CE378);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FDC(&qword_1000CCAF8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for CircularProgressView.Content(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(a1 + a3[9]);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = sub_1000A4090();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[11];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_100048CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048CB8);
}

uint64_t sub_100048CB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FDC(&qword_1000CE378);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100004FDC(&qword_1000CCAF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = type metadata accessor for CircularProgressView.Content(0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[7];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9]) = (a2 - 1);
  }
  else
  {
    uint64_t v17 = sub_1000A4090();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[11];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

uint64_t type metadata accessor for CircularProgressView(uint64_t a1)
{
  return sub_10000E690(a1, (uint64_t *)&unk_1000CE3D8);
}

void sub_100048EAC()
{
  sub_100049050(319, (unint64_t *)&unk_1000CE3E8, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F)
  {
    sub_100049050(319, (unint64_t *)&qword_1000CD870, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CircularProgressView.Content(319);
      if (v2 <= 0x3F)
      {
        sub_1000A4090();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100049050(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000A38F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_1000490A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v7 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      uint64_t v12 = *(int *)(v7 + 64);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100049218(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v3 = sub_100004FDC(&qword_1000CDDD0);
    uint64_t v4 = a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_1000A4090();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = a1 + *(int *)(v3 + 64);
    uint64_t v7 = sub_1000A38E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
}

void *sub_10004930C(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v4 = sub_100004FDC(&qword_1000CDDD0);
    uint64_t v5 = *(int *)(v4 + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    uint64_t v9 = *(int *)(v4 + 64);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100049428(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100046180((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v4 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v5 = *(int *)(v4 + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      uint64_t v9 = *(int *)(v4 + 64);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_100049554(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = sub_100004FDC(&qword_1000CDDD0);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    uint64_t v11 = *(int *)(v6 + 64);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_10004967C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100046180((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1000A4090();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      uint64_t v11 = *(int *)(v6 + 64);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000497B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1000497DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100049808()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100049818()
{
  uint64_t result = sub_1000A4090();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A38E0();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v3[4] = v3;
      v3[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100049900()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004991C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = sub_100004FDC(&qword_1000CE4E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004FDC(&qword_1000CE4F0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CircularProgressView(0);
  uint64_t v14 = *(void *)(v1 + *(int *)(v13 + 40));
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1 + *(int *)(v13 + 44), v9);
  *uint64_t v4 = sub_1000A4070();
  v4[1] = v15;
  uint64_t v16 = sub_100004FDC(&qword_1000CE4F8);
  sub_100049B68(v14, v1, (uint64_t)v12, (uint64_t)v4 + *(int *)(v16 + 44));
  sub_1000A4070();
  sub_1000A3910();
  sub_10000B1C0((uint64_t)v4, (uint64_t)v8, &qword_1000CE4E8);
  uint64_t v17 = &v8[*(int *)(v6 + 44)];
  long long v18 = v23;
  *(_OWORD *)uint64_t v17 = v22;
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v24;
  sub_10000A9C0((uint64_t)v4, &qword_1000CE4E8);
  sub_10000A95C((uint64_t)v8, v21, &qword_1000CE4F0);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100049B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v228 = a4;
  uint64_t v229 = a3;
  uint64_t v235 = a2;
  uint64_t v226 = sub_100004FDC(&qword_1000CE500);
  __chkstk_darwin(v226);
  uint64_t v227 = (uint64_t)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_100004FDC(&qword_1000CE508);
  __chkstk_darwin(v201);
  uint64_t v202 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_1000A4130();
  uint64_t v184 = *(void *)(v186 - 8);
  uint64_t v8 = __chkstk_darwin(v186);
  uint64_t v183 = (char *)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v182 = (uint64_t)&v177 - v10;
  uint64_t v11 = sub_100004FDC(&qword_1000CE510);
  __chkstk_darwin(v11 - 8);
  v194 = (char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_100004FDC(&qword_1000CE518);
  uint64_t v198 = *(void *)(v203 - 8);
  uint64_t v13 = __chkstk_darwin(v203);
  uint64_t v181 = (char *)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v188 = (char *)&v177 - v15;
  uint64_t v185 = sub_100004FDC(&qword_1000CE520);
  __chkstk_darwin(v185);
  uint64_t v189 = (char *)&v177 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_100004FDC(&qword_1000CE528);
  uint64_t v17 = __chkstk_darwin(v199);
  uint64_t v187 = (char *)&v177 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v190 = (uint64_t)&v177 - v19;
  uint64_t v20 = sub_1000A38E0();
  uint64_t v196 = *(void *)(v20 - 8);
  uint64_t v197 = v20;
  __chkstk_darwin(v20);
  uint64_t v195 = (char *)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_100004FDC(&qword_1000CE530);
  __chkstk_darwin(v225);
  uint64_t v200 = (char *)&v177 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000A3D80();
  uint64_t v222 = *(void *)(v23 - 8);
  uint64_t v223 = v23;
  __chkstk_darwin(v23);
  char v220 = (char *)&v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_1000A3E00();
  uint64_t v218 = *(void *)(v221 - 8);
  __chkstk_darwin(v221);
  v217 = (char *)&v177 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = type metadata accessor for CircularProgressView.ColorStyle(0);
  uint64_t v26 = __chkstk_darwin(v192);
  uint64_t v193 = (uint64_t *)((char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  uint64_t v215 = (uint64_t)&v177 - v28;
  uint64_t v29 = type metadata accessor for CircularProgressView.Content(0);
  __chkstk_darwin(v29 - 8);
  char v214 = (double *)((char *)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_100004FDC(&qword_1000CE538);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v224 = (uint64_t)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v219 = (char *)&v177 - v34;
  uint64_t v35 = sub_1000A3990();
  uint64_t v211 = *(void *)(v35 - 8);
  uint64_t v212 = v35;
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v177 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v177 - v39;
  uint64_t v41 = sub_100004FDC(&qword_1000CE540);
  uint64_t v233 = *(void *)(v41 - 8);
  uint64_t v234 = v41;
  uint64_t v42 = __chkstk_darwin(v41);
  char v216 = (char *)&v177 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v213 = (char *)&v177 - v45;
  __chkstk_darwin(v44);
  long long v236 = (char *)&v177 - v46;
  uint64_t v47 = sub_100004FDC(&qword_1000CE548);
  uint64_t v48 = v47 - 8;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v232 = (uint64_t)&v177 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v177 - v51;
  uint64_t v53 = (int *)type metadata accessor for CircularProgressView(0);
  double v54 = *(double *)(a2 + v53[12]);
  sub_1000A3900();
  double v55 = v258;
  uint64_t v56 = v260;
  uint64_t v57 = v261;
  uint64_t v58 = v262;
  swift_retain();
  uint64_t v59 = sub_1000A4070();
  double v237 = v55 * 0.5;
  double v238 = v55;
  uint64_t v239 = v259;
  uint64_t v240 = v56;
  uint64_t v241 = v57;
  uint64_t v242 = v58;
  uint64_t v243 = a1;
  LOWORD(v244) = 256;
  uint64_t v245 = v59;
  uint64_t v246 = v60;
  sub_100004FDC(&qword_1000CE550);
  sub_10000B17C(&qword_1000CE558, &qword_1000CE550);
  sub_1000A3E70();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = *(int *)(v48 + 44);
  uint64_t v231 = v52;
  uint64_t v62 = &v52[v61];
  uint64_t v63 = sub_1000A4090();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  uint64_t v191 = v63;
  uint64_t v180 = v64 + 16;
  uint64_t v178 = v64;
  uint64_t v179 = v65;
  ((void (*)(char *, uint64_t))v65)(v62, v229);
  char v230 = v53;
  uint64_t v208 = *(void *)(v235 + v53[6]);
  double v209 = v54 * 0.5;
  uint64_t v210 = *(void *)(v235 + v53[9]);
  swift_retain();
  sub_1000A3900();
  uint64_t v66 = v263;
  uint64_t v67 = v265;
  uint64_t v207 = v266;
  uint64_t v68 = v267;
  uint64_t v69 = sub_1000A4070();
  uint64_t v205 = v70;
  uint64_t v206 = v69;
  sub_10000A070((uint64_t)v40);
  uint64_t v71 = enum case for LayoutDirection.leftToRight(_:);
  uint64_t v73 = v211;
  uint64_t v72 = v212;
  uint64_t v204 = *(void (**)(char *, void, uint64_t))(v211 + 104);
  uint64_t v74 = v264;
  v204(v38, enum case for LayoutDirection.leftToRight(_:), v212);
  LOBYTE(v62) = sub_1000A3980();
  uint64_t v75 = *(void (**)(char *, uint64_t))(v73 + 8);
  v75(v38, v72);
  v75(v40, v72);
  if (v62) {
    double v76 = -1.57079633;
  }
  else {
    double v76 = -4.71238898;
  }
  sub_1000A40C0();
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  sub_10000A070((uint64_t)v40);
  v204(v38, v71, v72);
  char v81 = sub_1000A3980();
  v75(v38, v72);
  v75(v40, v72);
  uint64_t v82 = v214;
  if (v81) {
    double v83 = 0.0;
  }
  else {
    double v83 = 3.14159265;
  }
  sub_1000A40C0();
  double v237 = v209;
  double v238 = 0.0;
  uint64_t v239 = v208;
  uint64_t v240 = v66;
  uint64_t v241 = v74;
  uint64_t v242 = v67;
  uint64_t v243 = v207;
  uint64_t v244 = v68;
  uint64_t v245 = v210;
  LOWORD(v246) = 256;
  uint64_t v247 = v206;
  uint64_t v248 = v205;
  double v249 = v76;
  uint64_t v250 = v78;
  uint64_t v251 = v80;
  double v252 = v83;
  long long v253 = xmmword_1000AAA90;
  uint64_t v254 = 0;
  uint64_t v255 = v84;
  uint64_t v256 = v85;
  long long v257 = xmmword_1000AAA90;
  sub_100004FDC(&qword_1000CE560);
  sub_10004B108();
  uint64_t v86 = v213;
  sub_1000A3E70();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v233 + 32))(v236, v86, v234);
  sub_10004B480(v235 + v230[7], (uint64_t)v82, type metadata accessor for CircularProgressView.Content);
  uint64_t v87 = (int *)sub_100004FDC(&qword_1000CCB90);
  if ((*(unsigned int (**)(double *, uint64_t, int *))(*((void *)v87 - 1) + 48))(v82, 1, v87) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_10004B224();
    uint64_t v88 = (uint64_t)v219;
    sub_1000A3C00();
  }
  else
  {
    double v90 = *v82;
    double v89 = v82[1];
    uint64_t v91 = (uint64_t)v82 + v87[12];
    uint64_t v92 = (char *)v82 + v87[16];
    uint64_t v93 = (char *)v82 + v87[20];
    uint64_t v94 = v215;
    sub_10004B41C(v91, v215);
    (*(void (**)(char *, char *, uint64_t))(v218 + 32))(v217, v92, v221);
    uint64_t v96 = v222;
    uint64_t v95 = v223;
    uint64_t v97 = v220;
    (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v220, v93, v223);
    uint64_t v98 = v94;
    uint64_t v99 = v193;
    sub_10004B480(v98, (uint64_t)v193, type metadata accessor for CircularProgressView.ColorStyle);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v229 = *v99;
      double v237 = v90;
      double v238 = v89;
      sub_10000A504();
      uint64_t v100 = sub_1000A3E50();
      uint64_t v102 = v101;
      char v104 = v103 & 1;
      uint64_t v105 = (uint64_t)v194;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v194, v97, v95);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v105, 0, 1, v95);
      sub_1000A3DC0();
      sub_10000A9C0(v105, &qword_1000CE510);
      sub_1000A3DD0();
      swift_release();
      uint64_t v106 = sub_1000A3E40();
      uint64_t v108 = v107;
      char v110 = v109;
      swift_release();
      sub_100017510(v100, v102, v104);
      swift_bridgeObjectRelease();
      swift_retain();
      double v111 = COERCE_DOUBLE(sub_1000A3E20());
      uint64_t v113 = v112;
      char v115 = v114;
      uint64_t v117 = v116;
      swift_release();
      sub_100017510(v106, v108, v110 & 1);
      swift_bridgeObjectRelease();
      double v237 = v111;
      double v238 = *(double *)&v113;
      LOBYTE(v239) = v115 & 1;
      uint64_t v240 = v117;
      char v118 = v181;
      sub_1000A3E70();
      uint64_t v119 = v222;
      sub_100017510(*(uint64_t *)&v111, v113, v115 & 1);
      swift_bridgeObjectRelease();
      uint64_t v120 = v198;
      uint64_t v121 = v203;
      (*(void (**)(uint64_t, char *, uint64_t))(v198 + 16))(v202, v118, v203);
      swift_storeEnumTagMultiPayload();
      sub_10004B2D0();
      double v237 = COERCE_DOUBLE(&type metadata for Text);
      double v238 = COERCE_DOUBLE(&protocol witness table for Text);
      swift_getOpaqueTypeConformance2();
      uint64_t v122 = (uint64_t)v200;
      long long v123 = v217;
      sub_1000A3C00();
      swift_release();
      uint64_t v124 = v121;
      uint64_t v125 = v223;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v118, v124);
    }
    else
    {
      LODWORD(v214) = *(_DWORD *)v99;
      uint64_t v126 = sub_100004FDC(&qword_1000CDDD0);
      uint64_t v127 = (char *)v99 + *(int *)(v126 + 48);
      uint64_t v128 = (char *)v99 + *(int *)(v126 + 64);
      (*(void (**)(char *, uint64_t))(v178 + 8))(v127, v191);
      (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v195, v128, v197);
      double v237 = v90;
      double v238 = v89;
      sub_10000A504();
      uint64_t v129 = sub_1000A3E50();
      uint64_t v130 = v97;
      uint64_t v131 = v129;
      uint64_t v133 = v132;
      char v135 = v134 & 1;
      uint64_t v136 = (uint64_t)v194;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v194, v130, v95);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v136, 0, 1, v95);
      sub_1000A3DC0();
      sub_10000A9C0(v136, &qword_1000CE510);
      sub_1000A3DD0();
      swift_release();
      uint64_t v137 = sub_1000A3E40();
      uint64_t v139 = v138;
      char v141 = v140;
      swift_release();
      sub_100017510(v131, v133, v135);
      swift_bridgeObjectRelease();
      uint64_t v142 = v182;
      sub_100009D80(v182);
      uint64_t v143 = v183;
      sub_1000A4110();
      LOBYTE(v128) = sub_1000A40F0();
      uint64_t v144 = *(void (**)(char *, uint64_t))(v184 + 8);
      uint64_t v145 = v143;
      uint64_t v146 = v186;
      v144(v145, v186);
      v144((char *)v142, v146);
      if (v128) {
        int v147 = sub_1000A3C30();
      }
      else {
        int v147 = (int)v214;
      }
      LODWORD(v237) = v147;
      char v148 = v141 & 1;
      double v149 = COERCE_DOUBLE(sub_1000A3E30());
      uint64_t v151 = v150;
      uint64_t v153 = v152;
      char v155 = v154 & 1;
      sub_100017510(v137, v139, v148);
      swift_bridgeObjectRelease();
      double v237 = v149;
      double v238 = *(double *)&v151;
      LOBYTE(v239) = v155;
      uint64_t v240 = v153;
      uint64_t v156 = v188;
      sub_1000A3E70();
      sub_100017510(*(uint64_t *)&v149, v151, v155);
      swift_bridgeObjectRelease();
      uint64_t v157 = (uint64_t)v189;
      v179(&v189[*(int *)(v185 + 36)], v229, v191);
      (*(void (**)(uint64_t, char *, uint64_t))(v198 + 32))(v157, v156, v203);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v159 = (uint64_t)v187;
      uint64_t v160 = (uint64_t *)&v187[*(int *)(v199 + 36)];
      uint64_t v161 = sub_100004FDC(&qword_1000CCAC0);
      uint64_t v163 = v195;
      uint64_t v162 = v196;
      uint64_t v164 = v197;
      (*(void (**)(char *, char *, uint64_t))(v196 + 16))((char *)v160 + *(int *)(v161 + 28), v195, v197);
      *uint64_t v160 = KeyPath;
      sub_10000A95C(v157, v159, &qword_1000CE520);
      uint64_t v165 = v190;
      sub_10000A95C(v159, v190, &qword_1000CE528);
      sub_10000B1C0(v165, v202, &qword_1000CE528);
      swift_storeEnumTagMultiPayload();
      sub_10004B2D0();
      double v237 = COERCE_DOUBLE(&type metadata for Text);
      double v238 = COERCE_DOUBLE(&protocol witness table for Text);
      swift_getOpaqueTypeConformance2();
      uint64_t v122 = (uint64_t)v200;
      sub_1000A3C00();
      sub_10000A9C0(v165, &qword_1000CE528);
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v164);
      uint64_t v119 = v222;
      uint64_t v125 = v223;
      long long v123 = v217;
    }
    sub_10000B1C0(v122, v227, &qword_1000CE530);
    swift_storeEnumTagMultiPayload();
    sub_10004B224();
    uint64_t v88 = (uint64_t)v219;
    sub_1000A3C00();
    sub_10000A9C0(v122, &qword_1000CE530);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v220, v125);
    (*(void (**)(char *, uint64_t))(v218 + 8))(v123, v221);
    sub_100046180(v215);
  }
  uint64_t v166 = v232;
  sub_10000B1C0((uint64_t)v231, v232, &qword_1000CE548);
  uint64_t v167 = v233;
  uint64_t v168 = v234;
  uint64_t v169 = *(void (**)(char *, char *, uint64_t))(v233 + 16);
  char v170 = v216;
  v169(v216, v236, v234);
  uint64_t v171 = v88;
  uint64_t v172 = v224;
  sub_10000B1C0(v88, v224, &qword_1000CE538);
  uint64_t v173 = v228;
  sub_10000B1C0(v166, v228, &qword_1000CE548);
  uint64_t v174 = sub_100004FDC(&qword_1000CE5A8);
  v169((char *)(v173 + *(int *)(v174 + 48)), v170, v168);
  sub_10000B1C0(v172, v173 + *(int *)(v174 + 64), &qword_1000CE538);
  sub_10000A9C0(v171, &qword_1000CE538);
  char v175 = *(void (**)(char *, uint64_t))(v167 + 8);
  v175(v236, v168);
  sub_10000A9C0((uint64_t)v231, &qword_1000CE548);
  sub_10000A9C0(v172, &qword_1000CE538);
  v175(v170, v168);
  return sub_10000A9C0(v232, &qword_1000CE548);
}

unint64_t sub_10004B108()
{
  unint64_t result = qword_1000CE568;
  if (!qword_1000CE568)
  {
    sub_100008B14(&qword_1000CE560);
    sub_10004B184();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE568);
  }
  return result;
}

unint64_t sub_10004B184()
{
  unint64_t result = qword_1000CE570;
  if (!qword_1000CE570)
  {
    sub_100008B14(&qword_1000CE578);
    sub_10000B17C(&qword_1000CE580, &qword_1000CE588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE570);
  }
  return result;
}

unint64_t sub_10004B224()
{
  unint64_t result = qword_1000CE590;
  if (!qword_1000CE590)
  {
    sub_100008B14(&qword_1000CE530);
    sub_10004B2D0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE590);
  }
  return result;
}

unint64_t sub_10004B2D0()
{
  unint64_t result = qword_1000CE598;
  if (!qword_1000CE598)
  {
    sub_100008B14(&qword_1000CE528);
    sub_10004B370();
    sub_10000B17C(&qword_1000CDD88, &qword_1000CCAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE598);
  }
  return result;
}

unint64_t sub_10004B370()
{
  unint64_t result = qword_1000CE5A0;
  if (!qword_1000CE5A0)
  {
    sub_100008B14(&qword_1000CE520);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE5A0);
  }
  return result;
}

uint64_t sub_10004B41C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CircularProgressView.ColorStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004B480(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10004B4F4()
{
  unint64_t result = qword_1000CE5B0;
  if (!qword_1000CE5B0)
  {
    sub_100008B14(&qword_1000CE4F0);
    sub_10000B17C(&qword_1000CE5B8, &qword_1000CE4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE5B0);
  }
  return result;
}

uint64_t *sub_10004B594(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A3E00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  }
  return a1;
}

uint64_t sub_10004B6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000A3D80();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_10004B774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A3D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10004B85C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A3D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10004B94C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A3D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10004BA34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A3D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10004BB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004BB30);
}

uint64_t sub_10004BB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3E00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1000A3D80();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10004BC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004BC3C);
}

uint64_t sub_10004BC3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000A3E00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1000A3D80();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for ReadingGoalView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CE618);
}

uint64_t sub_10004BD60()
{
  uint64_t result = sub_1000A3E00();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A3D80();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10004BE3C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    uint64_t v14 = *((void *)v11 + 2);
    uint64_t v15 = *((void *)v11 + 3);
    char v16 = v11[32];
    sub_100011214(*(void *)v11, v13, v14, v15, v16);
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    *((void *)v10 + 2) = v14;
    *((void *)v10 + 3) = v15;
    v10[32] = v16;
    uint64_t v17 = a3[6];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[7];
    uint64_t v22 = a3[8];
    uint64_t v23 = (uint64_t *)((char *)a1 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    *uint64_t v23 = v26;
    v23[1] = v25;
    uint64_t v27 = (char *)a1 + v22;
    uint64_t v28 = (char *)a2 + v22;
    uint64_t v29 = sub_1000A3E00();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v27, v28, v29);
    uint64_t v31 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
    uint64_t v32 = v31[5];
    uint64_t v33 = &v27[v32];
    uint64_t v34 = &v28[v32];
    uint64_t v35 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    *(void *)&v27[v31[6]] = *(void *)&v28[v31[6]];
    *(void *)&v27[v31[7]] = *(void *)&v28[v31[7]];
    *(void *)&v27[v31[8]] = *(void *)&v28[v31[8]];
    *(void *)&v27[v31[9]] = *(void *)&v28[v31[9]];
    uint64_t v36 = a3[9];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = sub_1000A3930();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t sub_10004C160(uint64_t a1, int *a2)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10000A4F8(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  uint64_t v6 = a1 + a2[6];
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v8 + *(int *)(type metadata accessor for ReadingGoalView.ViewConfiguration(0) + 20);
  uint64_t v11 = sub_1000A3D80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = sub_1000A3930();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

void *sub_10004C354(void *a1, void *a2, int *a3)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A38E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  char v14 = v9[32];
  sub_100011214(*(void *)v9, v11, v12, v13, v14);
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  *((void *)v8 + 2) = v12;
  *((void *)v8 + 3) = v13;
  v8[32] = v14;
  uint64_t v15 = a3[6];
  char v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    void *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  uint64_t v25 = (char *)a1 + v20;
  uint64_t v26 = (char *)a2 + v20;
  uint64_t v27 = sub_1000A3E00();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v25, v26, v27);
  uint64_t v29 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  uint64_t v30 = v29[5];
  uint64_t v31 = &v25[v30];
  uint64_t v32 = &v26[v30];
  uint64_t v33 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  *(void *)&v25[v29[6]] = *(void *)&v26[v29[6]];
  *(void *)&v25[v29[7]] = *(void *)&v26[v29[7]];
  *(void *)&v25[v29[8]] = *(void *)&v26[v29[8]];
  *(void *)&v25[v29[9]] = *(void *)&v26[v29[9]];
  uint64_t v34 = a3[9];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_1000A3930();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

void *sub_10004C628(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A38E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  char v14 = v9[32];
  sub_100011214(*(void *)v9, v11, v12, v13, v14);
  uint64_t v15 = *(void *)v8;
  uint64_t v16 = *((void *)v8 + 1);
  uint64_t v17 = *((void *)v8 + 2);
  uint64_t v18 = *((void *)v8 + 3);
  char v19 = v8[32];
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  *((void *)v8 + 2) = v12;
  *((void *)v8 + 3) = v13;
  v8[32] = v14;
  sub_10000A4F8(v15, v16, v17, v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = a3[6];
    uint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    sub_10000A9C0((uint64_t)a1 + v20, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = &v28[v32];
  uint64_t v34 = &v29[v32];
  uint64_t v35 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  *(void *)&v28[v31[6]] = *(void *)&v29[v31[6]];
  *(void *)&v28[v31[7]] = *(void *)&v29[v31[7]];
  *(void *)&v28[v31[8]] = *(void *)&v29[v31[8]];
  *(void *)&v28[v31[9]] = *(void *)&v29[v31[9]];
  uint64_t v36 = a3[9];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_1000A3930();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

char *sub_10004C94C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  v10[32] = v11[32];
  uint64_t v13 = &a1[v9];
  char v14 = &a2[v9];
  uint64_t v15 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1000A4130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v18 = &a1[v17];
  char v19 = &a2[v17];
  uint64_t v20 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  uint64_t v22 = v21[5];
  uint64_t v23 = &v18[v22];
  uint64_t v24 = &v19[v22];
  uint64_t v25 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(void *)&v18[v21[6]] = *(void *)&v19[v21[6]];
  *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
  *(void *)&v18[v21[8]] = *(void *)&v19[v21[8]];
  *(void *)&v18[v21[9]] = *(void *)&v19[v21[9]];
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_1000A3930();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

char *sub_10004CBF8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[32];
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *((void *)v9 + 1);
  uint64_t v14 = *((void *)v9 + 2);
  uint64_t v15 = *((void *)v9 + 3);
  char v16 = v9[32];
  long long v17 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v17;
  v9[32] = v11;
  sub_10000A4F8(v12, v13, v14, v15, v16);
  if (a1 != a2)
  {
    uint64_t v18 = a3[6];
    char v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    sub_10000A9C0((uint64_t)&a1[v18], &qword_1000CCAD8);
    uint64_t v21 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1000A4130();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  swift_bridgeObjectRelease();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  uint64_t v26 = a3[8];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = &v27[v31];
  uint64_t v33 = &v28[v31];
  uint64_t v34 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  *(void *)&v27[v30[6]] = *(void *)&v28[v30[6]];
  *(void *)&v27[v30[7]] = *(void *)&v28[v30[7]];
  *(void *)&v27[v30[8]] = *(void *)&v28[v30[8]];
  *(void *)&v27[v30[9]] = *(void *)&v28[v30[9]];
  uint64_t v35 = a3[9];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = sub_1000A3930();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t sub_10004CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004CF18);
}

uint64_t sub_10004CF18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FDC(&qword_1000CCAF8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[6];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = type metadata accessor for ReadingGoalView.ViewConfiguration(0);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[8];
      goto LABEL_11;
    }
    uint64_t v17 = sub_1000A3930();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[9];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_10004D0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004D100);
}

uint64_t sub_10004D100(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_100004FDC(&qword_1000CCAF8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[6];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7]) = (a2 - 1);
    return result;
  }
  uint64_t v16 = type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_9;
  }
  uint64_t v17 = sub_1000A3930();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[9];

  return v18(v20, a2, a2, v19);
}

uint64_t type metadata accessor for ReadingGoalView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CE6B8);
}

void sub_10004D2F4()
{
  sub_10004D47C(319, (unint64_t *)&qword_1000CCA40, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_10004D47C(319, (unint64_t *)&qword_1000CD870, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ReadingGoalView.ViewConfiguration(319);
      if (v2 <= 0x3F)
      {
        sub_1000A3930();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10004D47C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000A38F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10004D4D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004D4EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReadingGoalView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  sub_1000A3920();
  if (v7 >= 297.0) {
    double v8 = 36.0;
  }
  else {
    double v8 = 30.0;
  }
  *(void *)a1 = sub_1000A3B60();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_100004FDC(&qword_1000CE700);
  uint64_t v9 = *(void *)(*(void *)(v1 + *(int *)(v4 + 36)) + 16);
  v13[0] = 0;
  v13[1] = v9;
  swift_getKeyPath();
  sub_100052AE0(v1, (uint64_t)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReadingGoalView);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  sub_100052F6C((uint64_t)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for ReadingGoalView);
  *(double *)(v11 + ((v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  sub_100004FDC(&qword_1000CE708);
  sub_100004FDC(&qword_1000CE710);
  sub_10005294C();
  sub_100052A1C();
  return sub_1000A4050();
}

uint64_t sub_10004D6FC(unint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CE748);
  __chkstk_darwin(v6);
  double v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100004FDC(&qword_1000CE750);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CE738);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *a1;
  if (v15)
  {
    *(void *)uint64_t v14 = sub_1000A3B60();
    *((void *)v14 + 1) = 0;
    v14[16] = 0;
    uint64_t v16 = sub_100004FDC(&qword_1000CE758);
    sub_10004D9E8(a2, v15, (uint64_t)&v14[*(int *)(v16 + 44)], a3);
    sub_10000B1C0((uint64_t)v14, (uint64_t)v11, &qword_1000CE738);
    swift_storeEnumTagMultiPayload();
    sub_10000B17C(&qword_1000CE730, &qword_1000CE738);
    sub_10000B17C(&qword_1000CE740, &qword_1000CE748);
    sub_1000A3C00();
    uint64_t v17 = (uint64_t)v14;
    uint64_t v18 = &qword_1000CE738;
  }
  else
  {
    *double v8 = sub_1000A4070();
    v8[1] = v19;
    uint64_t v20 = sub_100004FDC(&qword_1000CE760);
    sub_10005144C(a2, 0, (uint64_t)v8 + *(int *)(v20 + 44), a3);
    sub_10000B1C0((uint64_t)v8, (uint64_t)v11, &qword_1000CE748);
    swift_storeEnumTagMultiPayload();
    sub_10000B17C(&qword_1000CE730, &qword_1000CE738);
    sub_10000B17C(&qword_1000CE740, &qword_1000CE748);
    sub_1000A3C00();
    uint64_t v17 = (uint64_t)v8;
    uint64_t v18 = &qword_1000CE748;
  }
  return sub_10000A9C0(v17, v18);
}

uint64_t sub_10004D9E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v66 = a3;
  uint64_t v7 = sub_100004FDC(&qword_1000CE768);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v13 = sub_1000A3A20();
  __chkstk_darwin(v13 - 8);
  uint64_t v69 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000A4090();
  uint64_t v15 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004FDC(&qword_1000CE770);
  __chkstk_darwin(v67);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004FDC(&qword_1000CE778);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t result = type metadata accessor for ReadingGoalView(0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v27 = *(int *)(result + 28);
  uint64_t v28 = *(void *)(a1 + v27);
  if (*(void *)(v28 + 16) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v58 = v12;
  uint64_t v59 = v10;
  uint64_t v57 = 48 * a2;
  uint64_t v60 = result;
  char v29 = *(unsigned char *)(v28 + 48 * a2 + 73);
  uint64_t v72 = a1;
  uint64_t v63 = v27;
  double v30 = sub_10004E008(v29, (uint64_t)&v73);
  uint64_t v31 = v73;
  uint64_t v65 = v23;
  unint64_t v32 = *((void *)&v73 + 1);
  uint64_t v71 = v74;
  uint64_t v64 = v25;
  unint64_t v62 = a2;
  uint64_t v34 = *((void *)&v74 + 1);
  uint64_t v33 = v75;
  uint64_t v61 = v20;
  uint64_t v35 = DWORD2(v75);
  int v70 = BYTE12(v75);
  uint64_t v36 = v15;
  uint64_t v37 = *(void (**)(char *, void, uint64_t, double))(v15 + 104);
  uint64_t v38 = v68;
  v37(v17, enum case for BlendMode.plusLighter(_:), v68, v30);
  uint64_t v39 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v69, v17, v38);
  sub_100052AE0(v39, (uint64_t)&v19[*(int *)(v67 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v19 = v31;
  *((void *)v19 + 1) = v32;
  uint64_t v40 = v71;
  *((void *)v19 + 2) = v71;
  *((void *)v19 + 3) = v34;
  *((void *)v19 + 4) = v33;
  *((_DWORD *)v19 + 10) = v35;
  char v41 = v70;
  v19[44] = v70;
  sub_100052B48(v31, v32, v40, v34, v33, v35, v41);
  sub_100052FD4(v39, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v38);
  unint64_t v42 = v32;
  uint64_t v43 = (uint64_t)v65;
  uint64_t v44 = v72;
  uint64_t v45 = v34;
  uint64_t v46 = (uint64_t)v64;
  sub_100052BB0(v31, v42, v71, v45, v33, v35, v70);
  type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  sub_1000A4070();
  sub_1000A3910();
  sub_10000B1C0((uint64_t)v19, v43, &qword_1000CE770);
  uint64_t v47 = (_OWORD *)(v43 + *(int *)(v61 + 36));
  long long v48 = v74;
  *uint64_t v47 = v73;
  v47[1] = v48;
  _OWORD v47[2] = v75;
  sub_10000A9C0((uint64_t)v19, &qword_1000CE770);
  uint64_t result = sub_10000A95C(v43, v46, &qword_1000CE778);
  uint64_t v49 = *(void *)(v44 + v63);
  if (*(void *)(v49 + 16) > v62)
  {
    uint64_t v50 = v49 + v57;
    long long v51 = *(_OWORD *)(v50 + 48);
    long long v76 = *(_OWORD *)(v50 + 32);
    v77[0] = v51;
    *(_OWORD *)((char *)v77 + 10) = *(_OWORD *)(v50 + 58);
    v77[2] = v76;
    v77[3] = v51;
    long long v78 = v51;
    long long v79 = v76;
    int v52 = *(unsigned __int8 *)(v50 + 73);
    sub_1000190E0((uint64_t)&v79);
    sub_1000190E0((uint64_t)&v78);
    uint64_t v53 = (uint64_t)v58;
    sub_10004E730((uint64_t)&v76, v52, (uint64_t)v58, a4);
    sub_10001910C((uint64_t)&v79);
    sub_10001910C((uint64_t)&v78);
    sub_10000B1C0(v46, v43, &qword_1000CE778);
    uint64_t v54 = (uint64_t)v59;
    sub_10000B1C0(v53, (uint64_t)v59, &qword_1000CE768);
    uint64_t v55 = v66;
    sub_10000B1C0(v43, v66, &qword_1000CE778);
    uint64_t v56 = sub_100004FDC(&qword_1000CE880);
    sub_10000B1C0(v54, v55 + *(int *)(v56 + 48), &qword_1000CE768);
    sub_10000A9C0(v53, &qword_1000CE768);
    sub_10000A9C0(v46, &qword_1000CE778);
    sub_10000A9C0(v54, &qword_1000CE768);
    return sub_10000A9C0(v43, &qword_1000CE778);
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_10004E008@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 2:
    case 3:
      sub_100004FDC(&qword_1000CE878);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1000A8D50;
      sub_1000A3F70();
      uint64_t v5 = sub_1000A3F80();
      swift_release();
      *(void *)(v4 + 32) = v5;
      sub_1000A3F70();
      uint64_t v6 = sub_1000A3F80();
      swift_release();
      *(void *)(v4 + 40) = v6;
      sub_1000A43E0();
      sub_1000A40D0();
      sub_1000A40E0();
      sub_1000A4060();
      sub_1000A3940();
      sub_100004FDC(&qword_1000CE870);
      sub_10000B17C(&qword_1000CE868, &qword_1000CE870);
      sub_1000A3C00();
      long long v13 = v8;
      *(_OWORD *)uint64_t v14 = v9;
      *(void *)&v14[16] = v10;
      LOWORD(v15) = v11;
      BYTE2(v15) = v12 != 0;
      HIBYTE(v15) = 1;
      sub_100004FDC(&qword_1000CE848);
      sub_100004FDC(&qword_1000CE860);
      sub_100053144(&qword_1000CE840, &qword_1000CE848, &qword_1000CE850, &qword_1000CE830);
      sub_100053144(&qword_1000CE858, &qword_1000CE860, &qword_1000CE868, &qword_1000CE870);
      sub_1000A3C00();
      sub_100004FDC(&qword_1000CE828);
      sub_100004FDC(&qword_1000CE830);
      sub_100053088();
      sub_10000B17C(&qword_1000CE850, &qword_1000CE830);
      goto LABEL_7;
    case 4:
      sub_1000A3F60();
      sub_100004FDC(&qword_1000CE828);
      sub_100004FDC(&qword_1000CE830);
      sub_100053088();
      sub_10000B17C(&qword_1000CE850, &qword_1000CE830);
LABEL_7:
      sub_1000A3C00();
      break;
    default:
      sub_1000A3F70();
      sub_1000A3F80();
      swift_release();
      swift_retain();
      sub_100004FDC(&qword_1000CE830);
      sub_10000B17C(&qword_1000CE850, &qword_1000CE830);
      sub_1000A3C00();
      uint64_t v3 = 0x10000;
      if (!BYTE10(v13)) {
        uint64_t v3 = 0;
      }
      *((void *)&v13 + 1) = v3 | WORD4(v13);
      memset(v14, 0, sizeof(v14));
      int v15 = 0;
      sub_100004FDC(&qword_1000CE848);
      sub_100004FDC(&qword_1000CE860);
      sub_100053144(&qword_1000CE840, &qword_1000CE848, &qword_1000CE850, &qword_1000CE830);
      sub_100053144(&qword_1000CE858, &qword_1000CE860, &qword_1000CE868, &qword_1000CE870);
      sub_1000A3C00();
      sub_100004FDC(&qword_1000CE828);
      sub_100053088();
      sub_1000A3C00();
      swift_release();
      break;
  }
  double result = *(double *)&v13;
  *(_OWORD *)a2 = v13;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)v14;
  *(void *)(a2 + 32) = *(void *)&v14[16];
  *(_DWORD *)(a2 + 40) = v15;
  *(unsigned char *)(a2 + 44) = v16;
  return result;
}

uint64_t sub_10004E730@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v359 = a2;
  uint64_t v367 = a1;
  uint64_t v365 = a3;
  uint64_t v331 = sub_100004FDC(&qword_1000CE790);
  __chkstk_darwin(v331);
  uint64_t v332 = (uint64_t)&v298 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v364 = sub_100004FDC(&qword_1000CE798);
  __chkstk_darwin(v364);
  v333 = (char *)&v298 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CE378);
  __chkstk_darwin(v8 - 8);
  v344 = (uint64_t *)((char *)&v298 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CircularProgressView.Content(0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v316 = (uint64_t *)((char *)&v298 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v337 = (uint64_t *)((char *)&v298 - v13);
  uint64_t v345 = type metadata accessor for CircularProgressView(0);
  uint64_t v14 = __chkstk_darwin(v345);
  v317 = (char *)&v298 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v341 = (char *)&v298 - v16;
  uint64_t v349 = sub_100004FDC(&qword_1000CE7A0);
  uint64_t v348 = *(void *)(v349 - 8);
  uint64_t v17 = __chkstk_darwin(v349);
  v318 = (char *)&v298 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v342 = (char *)&v298 - v19;
  uint64_t v361 = sub_100004FDC(&qword_1000CE7A8);
  uint64_t v20 = __chkstk_darwin(v361);
  v319 = (char *)&v298 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v321 = (char *)&v298 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v320 = (char *)&v298 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v322 = (uint64_t)&v298 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v338 = (char *)&v298 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v340 = (char *)&v298 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v339 = (char *)&v298 - v33;
  __chkstk_darwin(v32);
  uint64_t v343 = (uint64_t)&v298 - v34;
  uint64_t v360 = sub_100004FDC(&qword_1000CE7B0);
  __chkstk_darwin(v360);
  uint64_t v363 = (uint64_t)&v298 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_100004FDC(&qword_1000CE7B8);
  __chkstk_darwin(v346);
  uint64_t v347 = (uint64_t)&v298 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v362 = sub_100004FDC(&qword_1000CE7C0);
  __chkstk_darwin(v362);
  v350 = (char *)&v298 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = sub_1000A3C90();
  uint64_t v355 = *(void *)(v356 - 8);
  __chkstk_darwin(v356);
  v354 = (char *)&v298 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = type metadata accessor for FilledCircleWithLabel();
  uint64_t v39 = __chkstk_darwin(v326);
  v306 = (uint64_t *)((char *)&v298 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v39);
  v302 = (uint64_t *)((char *)&v298 - v41);
  uint64_t v328 = sub_100004FDC(&qword_1000CE7C8);
  uint64_t v327 = *(void *)(v328 - 8);
  uint64_t v42 = __chkstk_darwin(v328);
  v308 = (char *)&v298 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v307 = (char *)&v298 - v44;
  uint64_t v330 = sub_100004FDC(&qword_1000CE7D0);
  uint64_t v329 = *(void *)(v330 - 8);
  uint64_t v45 = __chkstk_darwin(v330);
  v310 = (char *)&v298 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v309 = (char *)&v298 - v47;
  uint64_t v358 = sub_100004FDC(&qword_1000CE7D8);
  uint64_t v48 = __chkstk_darwin(v358);
  v311 = (char *)&v298 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  v313 = (char *)&v298 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v312 = (char *)&v298 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v315 = (uint64_t)&v298 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v303 = (char *)&v298 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v305 = (char *)&v298 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v304 = (char *)&v298 - v61;
  __chkstk_darwin(v60);
  uint64_t v314 = (uint64_t)&v298 - v62;
  uint64_t v368 = sub_1000A4090();
  uint64_t v375 = *(void *)(v368 - 8);
  uint64_t v63 = __chkstk_darwin(v368);
  v300 = (char *)&v298 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __chkstk_darwin(v63);
  v325 = (char *)&v298 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  v301 = (char *)&v298 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v336 = (char *)&v298 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  v299 = (char *)&v298 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v324 = (char *)&v298 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  v376 = (char *)&v298 - v76;
  __chkstk_darwin(v75);
  v377 = (char *)&v298 - v77;
  uint64_t v78 = sub_1000A38E0();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v378 = v78;
  uint64_t v379 = v79;
  uint64_t v80 = __chkstk_darwin(v78);
  v371 = (char *)&v298 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v84 = (char *)&v298 - v83;
  __chkstk_darwin(v82);
  uint64_t v86 = (char *)&v298 - v85;
  uint64_t v87 = sub_1000A4130();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v91 = (char *)&v298 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v89);
  uint64_t v93 = (char *)&v298 - v92;
  uint64_t v353 = type metadata accessor for ReadingGoalView(0);
  uint64_t v369 = v4 + *(int *)(v353 + 24);
  sub_100009D80((uint64_t)v93);
  sub_1000A4110();
  char v94 = sub_1000A40F0();
  uint64_t v95 = *(void (**)(char *, uint64_t))(v88 + 8);
  v95(v91, v87);
  v372 = (uint64_t (*)(char *, uint64_t))(v88 + 8);
  uint64_t v373 = v87;
  v370 = (uint64_t *)v95;
  v95(v93, v87);
  uint64_t v96 = v378;
  uint64_t v374 = v4;
  v352 = v86;
  uint64_t v351 = (uint64_t)v84;
  if (v94)
  {
    uint64_t v97 = v377;
    sub_1000A3F70();
    uint64_t v357 = sub_1000A3F80();
    uint64_t v98 = v96;
  }
  else
  {
    uint64_t v99 = (uint64_t)v86;
    uint64_t v100 = v379;
    uint64_t v101 = v377;
    sub_100009B24(v99);
    (*(void (**)(char *, void, uint64_t))(v100 + 104))(v84, enum case for ColorScheme.light(_:), v96);
    char v102 = sub_1000A38D0();
    char v103 = *(void (**)(char *, uint64_t))(v100 + 8);
    v103(v84, v96);
    v103((char *)v99, v96);
    if (v102) {
      sub_1000A3F50();
    }
    else {
      sub_1000A3F70();
    }
    uint64_t v357 = sub_1000A3F80();
    uint64_t v98 = v378;
    uint64_t v97 = v101;
    uint64_t v86 = v352;
  }
  swift_release();
  sub_100009D80((uint64_t)v93);
  sub_1000A4110();
  char v104 = sub_1000A40F0();
  uint64_t v105 = v373;
  uint64_t v106 = v370;
  ((void (*)(char *, uint64_t))v370)(v91, v373);
  ((void (*)(char *, uint64_t))v106)(v93, v105);
  if (v104)
  {
    uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v379 + 104);
    unsigned int v335 = enum case for ColorScheme.light(_:);
    v334 = v107;
    ((void (*)(char *))v107)(v371);
    uint64_t v108 = v375;
    char v109 = v97;
  }
  else
  {
    sub_100009B24((uint64_t)v86);
    uint64_t v110 = enum case for ColorScheme.light(_:);
    uint64_t v111 = v351;
    uint64_t v112 = v379;
    uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v379 + 104);
    v113(v351, enum case for ColorScheme.light(_:), v98);
    LODWORD(v366) = sub_1000A38D0();
    char v114 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
    v114(v111, v98);
    v114((uint64_t)v86, v98);
    unsigned int v335 = v110;
    v334 = v113;
    if (v366)
    {
      uint64_t v115 = enum case for ColorScheme.dark(_:);
      uint64_t v116 = v371;
    }
    else
    {
      uint64_t v116 = v371;
      uint64_t v115 = v110;
    }
    v113((uint64_t)v116, v115, v98);
    uint64_t v108 = v375;
    char v109 = v377;
  }
  sub_100009D80((uint64_t)v93);
  sub_1000A4110();
  char v117 = sub_1000A40F0();
  uint64_t v118 = v373;
  uint64_t v119 = v370;
  ((void (*)(char *, uint64_t))v370)(v91, v373);
  ((void (*)(char *, uint64_t))v119)(v93, v118);
  uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 104);
  uint64_t v121 = (char *)(v108 + 104);
  uint64_t v120 = v122;
  LODWORD(v366) = enum case for BlendMode.normal(_:);
  if (v117) {
    uint64_t v123 = enum case for BlendMode.normal(_:);
  }
  else {
    uint64_t v123 = enum case for BlendMode.plusDarker(_:);
  }
  uint64_t v124 = v109;
  uint64_t v125 = v368;
  v120(v124, v123, v368);
  sub_100009D80((uint64_t)v93);
  sub_1000A4110();
  char v126 = sub_1000A40F0();
  uint64_t v369 = (uint64_t)v91;
  uint64_t v127 = v91;
  uint64_t v128 = (uint64_t)v93;
  ((void (*)(char *, uint64_t))v119)(v127, v118);
  ((void (*)(char *, uint64_t))v119)(v93, v118);
  if (v126) {
    uint64_t v129 = v366;
  }
  else {
    uint64_t v129 = enum case for BlendMode.plusLighter(_:);
  }
  v366 = v121;
  v323 = v120;
  v120(v376, v129, v125);
  uint64_t v130 = v367;
  uint64_t v131 = *(void *)(v367 + 32);
  if (*(unsigned char *)(v367 + 40) == 1)
  {
    uint64_t v132 = v369;
    if (v131)
    {
      uint64_t v133 = v335;
      if (v131 == 1)
      {
        uint64_t v134 = (uint64_t)v352;
        uint64_t v135 = v367;
        sub_100009B24((uint64_t)v352);
        uint64_t v136 = v379;
        v350 = (char *)(v379 + 104);
        uint64_t v137 = v351;
        uint64_t v138 = v378;
        v334(v351, v133, v378);
        char v139 = sub_1000A38D0();
        char v140 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
        v140(v137, v138);
        v140(v134, v138);
        if (v139) {
          char v141 = v377;
        }
        else {
          char v141 = v376;
        }
        (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v325, v141, v125);
        uint64_t v142 = *(void *)(v135 + 8);
        v370 = *(uint64_t **)v135;
        uint64_t v369 = v142;
        long long v383 = *(_OWORD *)(v135 + 16);
        swift_bridgeObjectRetain();
        LODWORD(v367) = sub_1000A3C40();
        uint64_t v143 = v374;
        sub_100009B24(v134);
        v334(v137, v133, v138);
        char v144 = sub_1000A38D0();
        v372 = (uint64_t (*)(char *, uint64_t))v140;
        uint64_t v373 = v136 + 8;
        v140(v137, v138);
        uint64_t v145 = v134;
        uint64_t v146 = v138;
        v140(v145, v138);
        int v147 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
        if (v144) {
          int v147 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
        }
        char v148 = v300;
        v323(v300, *v147, v125);
        double v149 = (int *)v326;
        uint64_t v150 = v306;
        uint64_t v151 = (char *)v306 + *(int *)(v326 + 40);
        (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v151, v371, v146);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v151, 0, 1, v146);
        uint64_t v152 = v143 + *(int *)(v353 + 32);
        uint64_t v153 = (char *)v150 + v149[11];
        uint64_t v154 = sub_1000A3E00();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(v153, v152, v154);
        uint64_t v155 = type metadata accessor for ReadingGoalView.ViewConfiguration(0);
        uint64_t v156 = v152 + *(int *)(v155 + 20);
        uint64_t v157 = (char *)v150 + v149[12];
        uint64_t v158 = sub_1000A3D80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v158 - 8) + 16))(v157, v156, v158);
        uint64_t v159 = *(void *)(v152 + *(int *)(v155 + 24));
        *uint64_t v150 = v357;
        uint64_t v160 = v125;
        uint64_t v161 = v375;
        uint64_t v162 = *(void (**)(char *, char *, uint64_t))(v375 + 32);
        v162((char *)v150 + v149[5], v325, v125);
        *(double *)((char *)v150 + v149[6]) = a4;
        uint64_t v163 = (uint64_t **)((char *)v150 + v149[7]);
        uint64_t v164 = v369;
        *uint64_t v163 = v370;
        v163[1] = (uint64_t *)v164;
        *(_DWORD *)((char *)v150 + v149[8]) = v367;
        v162((char *)v150 + v149[9], v148, v125);
        *(uint64_t *)((char *)v150 + v149[13]) = v159;
        uint64_t v165 = sub_100052D44(&qword_1000CE7E0, (void (*)(uint64_t))type metadata accessor for FilledCircleWithLabel);
        swift_retain();
        uint64_t v166 = v308;
        sub_1000A3E70();
        sub_100052FD4((uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FilledCircleWithLabel);
        uint64_t v167 = v354;
        sub_1000A3C60();
        *(void *)&long long v382 = v149;
        *((void *)&v382 + 1) = v165;
        uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        uint64_t v169 = v310;
        uint64_t v170 = v328;
        sub_1000A3F30();
        (*(void (**)(char *, uint64_t))(v355 + 8))(v167, v356);
        (*(void (**)(char *, uint64_t))(v327 + 8))(v166, v170);
        long long v382 = v383;
        v380 = (int *)v170;
        uint64_t v381 = OpaqueTypeConformance2;
        swift_getOpaqueTypeConformance2();
        sub_10000A504();
        uint64_t v171 = (uint64_t)v311;
        uint64_t v172 = v330;
        sub_1000A3F00();
        (*(void (**)(char *, uint64_t))(v329 + 8))(v169, v172);
        *(void *)&long long v382 = sub_100051BC8((char *)1, 1, v359);
        *((void *)&v382 + 1) = v173;
        uint64_t v174 = (uint64_t)v313;
        sub_1000A39B0();
        swift_bridgeObjectRelease();
        sub_10000A9C0(v171, &qword_1000CE7D8);
        uint64_t v175 = (uint64_t)v312;
        sub_1000A39F0();
        sub_10000A9C0(v174, &qword_1000CE7D8);
        uint64_t v176 = v315;
        sub_10000A95C(v175, v315, &qword_1000CE7D8);
        sub_10000B1C0(v176, v332, &qword_1000CE7D8);
        swift_storeEnumTagMultiPayload();
        sub_100052C38();
        sub_100052D8C();
        uint64_t v177 = (uint64_t)v333;
        sub_1000A3C00();
        sub_10000B1C0(v177, v363, &qword_1000CE798);
        swift_storeEnumTagMultiPayload();
        sub_100052ED4(&qword_1000CE800, &qword_1000CE7C0, (void (*)(void))sub_100052D8C, (void (*)(void))sub_100052C38);
        sub_100052ED4(&qword_1000CE808, &qword_1000CE798, (void (*)(void))sub_100052C38, (void (*)(void))sub_100052D8C);
        sub_1000A3C00();
        swift_release();
        sub_10000A9C0(v177, &qword_1000CE798);
        sub_10000A9C0(v176, &qword_1000CE7D8);
        uint64_t v178 = *(void (**)(char *, uint64_t))(v161 + 8);
        v178(v376, v160);
        v178(v377, v160);
        return v372(v371, v378);
      }
      else
      {
        uint64_t v258 = v374 + *(int *)(v353 + 32);
        uint64_t v369 = type metadata accessor for ReadingGoalView.ViewConfiguration(0);
        uint64_t v259 = *(void *)(v258 + *(int *)(v369 + 36));
        uint64_t v260 = (int *)sub_100004FDC(&qword_1000CCB90);
        uint64_t v261 = (uint64_t)v316;
        uint64_t v262 = (_DWORD *)((char *)v316 + v260[12]);
        v366 = (char *)v316 + v260[16];
        v370 = (uint64_t *)((char *)v316 + v260[20]);
        uint64_t v373 = v260[24];
        uint64_t v263 = *(void *)v130;
        uint64_t v264 = *(void *)(v130 + 8);
        long long v383 = *(_OWORD *)(v130 + 16);
        uint64_t *v316 = v263;
        *(void *)(v261 + 8) = v264;
        uint64_t v265 = sub_100004FDC(&qword_1000CDDD0);
        uint64_t v266 = (char *)v262 + *(int *)(v265 + 48);
        uint64_t v267 = (uint64_t)v262 + *(int *)(v265 + 64);
        swift_bridgeObjectRetain();
        *uint64_t v262 = sub_1000A3C40();
        v372 = *(uint64_t (**)(char *, uint64_t))(v375 + 16);
        ((void (*)(char *, char *, uint64_t))v372)(v266, v377, v125);
        sub_100009B24(v267);
        type metadata accessor for CircularProgressView.ColorStyle(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v268 = sub_1000A3E00();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v268 - 8) + 16))(v366, v258, v268);
        uint64_t v269 = v369;
        uint64_t v270 = v258 + *(int *)(v369 + 20);
        uint64_t v271 = sub_1000A3D80();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v271 - 8) + 16))(v370, v270, v271);
        *(void *)(v261 + v373) = *(void *)(v258 + *(int *)(v269 + 24));
        (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v260 - 1) + 56))(v261, 0, 1, v260);
        v370 = (uint64_t *)sub_1000A3F60();
        uint64_t v272 = (uint64_t)v352;
        sub_100009B24((uint64_t)v352);
        uint64_t v273 = v378;
        uint64_t v274 = v379;
        uint64_t v275 = v351;
        (*(void (**)(uint64_t, void, uint64_t))(v379 + 104))(v351, enum case for ColorScheme.light(_:), v378);
        LOBYTE(v264) = sub_1000A38D0();
        v276 = *(void (**)(uint64_t, uint64_t))(v274 + 8);
        uint64_t v379 = v274 + 8;
        uint64_t v373 = (uint64_t)v276;
        v276(v275, v273);
        v276(v272, v273);
        if (v264) {
          v277 = v377;
        }
        else {
          v277 = v376;
        }
        v278 = v301;
        ((void (*)(char *, char *, uint64_t))v372)(v301, v277, v125);
        uint64_t v279 = *(void *)(v258 + *(int *)(v269 + 28));
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v281 = (uint64_t)v344;
        uint64_t *v344 = KeyPath;
        sub_100004FDC(&qword_1000CCBB8);
        swift_storeEnumTagMultiPayload();
        uint64_t v282 = swift_getKeyPath();
        v283 = (int *)v345;
        uint64_t v284 = (uint64_t)v317;
        *(void *)&v317[*(int *)(v345 + 20)] = v282;
        sub_100004FDC(&qword_1000CCAD8);
        swift_storeEnumTagMultiPayload();
        sub_10000A95C(v281, v284, &qword_1000CE378);
        *(void *)(v284 + v283[6]) = v259;
        sub_100052F6C(v261, v284 + v283[7], type metadata accessor for CircularProgressView.Content);
        *(unsigned char *)(v284 + v283[8]) = 1;
        *(void *)(v284 + v283[9]) = v370;
        *(void *)(v284 + v283[10]) = v357;
        v285 = v278;
        uint64_t v286 = v125;
        (*(void (**)(uint64_t, char *, uint64_t))(v375 + 32))(v284 + v283[11], v285, v125);
        *(void *)(v284 + v283[12]) = v279;
        *(double *)(v284 + v283[13]) = a4;
        *(double *)(v284 + v283[14]) = a4;
        swift_retain();
        v287 = v354;
        sub_1000A3C60();
        uint64_t v288 = sub_100052D44(&qword_1000CE7F0, (void (*)(uint64_t))type metadata accessor for CircularProgressView);
        v289 = v318;
        sub_1000A3F30();
        (*(void (**)(char *, uint64_t))(v355 + 8))(v287, v356);
        sub_100052FD4(v284, type metadata accessor for CircularProgressView);
        long long v382 = v383;
        v380 = v283;
        uint64_t v381 = v288;
        swift_getOpaqueTypeConformance2();
        sub_10000A504();
        uint64_t v290 = (uint64_t)v319;
        uint64_t v291 = v349;
        sub_1000A3F00();
        (*(void (**)(char *, uint64_t))(v348 + 8))(v289, v291);
        *(void *)&long long v382 = sub_100051BC8((char *)2, 1, v359);
        *((void *)&v382 + 1) = v292;
        uint64_t v293 = (uint64_t)v321;
        sub_1000A39B0();
        swift_bridgeObjectRelease();
        sub_10000A9C0(v290, &qword_1000CE7A8);
        uint64_t v294 = (uint64_t)v320;
        sub_1000A39F0();
        sub_10000A9C0(v293, &qword_1000CE7A8);
        uint64_t v295 = v322;
        sub_10000A95C(v294, v322, &qword_1000CE7A8);
        sub_10000B1C0(v295, v332, &qword_1000CE7A8);
        swift_storeEnumTagMultiPayload();
        sub_100052C38();
        sub_100052D8C();
        uint64_t v296 = (uint64_t)v333;
        sub_1000A3C00();
        sub_10000B1C0(v296, v363, &qword_1000CE798);
        swift_storeEnumTagMultiPayload();
        sub_100052ED4(&qword_1000CE800, &qword_1000CE7C0, (void (*)(void))sub_100052D8C, (void (*)(void))sub_100052C38);
        sub_100052ED4(&qword_1000CE808, &qword_1000CE798, (void (*)(void))sub_100052C38, (void (*)(void))sub_100052D8C);
        sub_1000A3C00();
        swift_release();
        sub_10000A9C0(v296, &qword_1000CE798);
        sub_10000A9C0(v295, &qword_1000CE7A8);
        v297 = *(void (**)(char *, uint64_t))(v375 + 8);
        v297(v376, v286);
        v297(v377, v286);
        return ((uint64_t (*)(char *, uint64_t))v373)(v371, v378);
      }
    }
    else
    {
      sub_100009D80((uint64_t)v93);
      sub_1000A4110();
      sub_1000A40F0();
      uint64_t v221 = v373;
      ((void (*)(uint64_t, uint64_t))v119)(v132, v373);
      ((void (*)(char *, uint64_t))v119)(v93, v221);
      sub_1000A3F70();
      uint64_t v222 = v125;
      uint64_t v351 = sub_1000A3F80();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v324, v376, v125);
      uint64_t v223 = *(void *)(v130 + 8);
      v352 = *(char **)v130;
      uint64_t v349 = v223;
      long long v383 = *(_OWORD *)(v130 + 16);
      swift_bridgeObjectRetain();
      LODWORD(v367) = sub_1000A3C50();
      sub_100009D80(v128);
      sub_1000A4110();
      char v224 = sub_1000A40F0();
      ((void (*)(uint64_t, uint64_t))v119)(v132, v221);
      ((void (*)(uint64_t, uint64_t))v119)(v128, v221);
      uint64_t v225 = (unsigned int *)&enum case for BlendMode.destinationOut(_:);
      if ((v224 & 1) == 0) {
        uint64_t v225 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
      }
      uint64_t v226 = v299;
      v323(v299, *v225, v222);
      uint64_t v227 = (int *)v326;
      uint64_t v228 = v302;
      uint64_t v229 = (char *)v302 + *(int *)(v326 + 40);
      uint64_t v230 = v378;
      uint64_t v231 = v379;
      v334((uint64_t)v229, v335, v378);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v231 + 56))(v229, 0, 1, v230);
      uint64_t v232 = v374 + *(int *)(v353 + 32);
      uint64_t v233 = (char *)v228 + v227[11];
      uint64_t v234 = sub_1000A3E00();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v234 - 8) + 16))(v233, v232, v234);
      uint64_t v235 = type metadata accessor for ReadingGoalView.ViewConfiguration(0);
      uint64_t v236 = v232 + *(int *)(v235 + 20);
      double v237 = (char *)v228 + v227[12];
      uint64_t v238 = sub_1000A3D80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v238 - 8) + 16))(v237, v236, v238);
      uint64_t v239 = *(void *)(v232 + *(int *)(v235 + 24));
      *uint64_t v228 = v351;
      uint64_t v240 = *(void (**)(char *, char *, uint64_t))(v375 + 32);
      v240((char *)v228 + v227[5], v324, v222);
      *(double *)((char *)v228 + v227[6]) = a4;
      uint64_t v241 = (uint64_t *)((char *)v228 + v227[7]);
      uint64_t v242 = v349;
      *uint64_t v241 = v352;
      v241[1] = v242;
      *(_DWORD *)((char *)v228 + v227[8]) = v367;
      v240((char *)v228 + v227[9], v226, v222);
      *(uint64_t *)((char *)v228 + v227[13]) = v239;
      uint64_t v243 = sub_100052D44(&qword_1000CE7E0, (void (*)(uint64_t))type metadata accessor for FilledCircleWithLabel);
      uint64_t v244 = v307;
      sub_1000A3E70();
      sub_100052FD4((uint64_t)v228, (uint64_t (*)(void))type metadata accessor for FilledCircleWithLabel);
      uint64_t v245 = v354;
      sub_1000A3C60();
      *(void *)&long long v382 = v227;
      *((void *)&v382 + 1) = v243;
      uint64_t v246 = swift_getOpaqueTypeConformance2();
      uint64_t v247 = v309;
      uint64_t v248 = v328;
      sub_1000A3F30();
      (*(void (**)(char *, uint64_t))(v355 + 8))(v245, v356);
      (*(void (**)(char *, uint64_t))(v327 + 8))(v244, v248);
      long long v382 = v383;
      v380 = (int *)v248;
      uint64_t v381 = v246;
      swift_getOpaqueTypeConformance2();
      sub_10000A504();
      uint64_t v249 = (uint64_t)v303;
      uint64_t v250 = v330;
      sub_1000A3F00();
      (*(void (**)(char *, uint64_t))(v329 + 8))(v247, v250);
      *(void *)&long long v382 = sub_100051BC8(0, 1, v359);
      *((void *)&v382 + 1) = v251;
      uint64_t v252 = (uint64_t)v305;
      sub_1000A39B0();
      swift_bridgeObjectRelease();
      sub_10000A9C0(v249, &qword_1000CE7D8);
      uint64_t v253 = (uint64_t)v304;
      sub_1000A39F0();
      sub_10000A9C0(v252, &qword_1000CE7D8);
      uint64_t v254 = v314;
      sub_10000A95C(v253, v314, &qword_1000CE7D8);
      sub_10000B1C0(v254, v347, &qword_1000CE7D8);
      swift_storeEnumTagMultiPayload();
      sub_100052D8C();
      sub_100052C38();
      uint64_t v255 = (uint64_t)v350;
      sub_1000A3C00();
      sub_10000B1C0(v255, v363, &qword_1000CE7C0);
      swift_storeEnumTagMultiPayload();
      sub_100052ED4(&qword_1000CE800, &qword_1000CE7C0, (void (*)(void))sub_100052D8C, (void (*)(void))sub_100052C38);
      sub_100052ED4(&qword_1000CE808, &qword_1000CE798, (void (*)(void))sub_100052C38, (void (*)(void))sub_100052D8C);
      sub_1000A3C00();
      swift_release();
      sub_10000A9C0(v255, &qword_1000CE7C0);
      sub_10000A9C0(v254, &qword_1000CE7D8);
      uint64_t v256 = *(void (**)(char *, uint64_t))(v375 + 8);
      uint64_t v257 = v368;
      v256(v376, v368);
      v256(v377, v257);
      return (*(uint64_t (**)(char *, uint64_t))(v231 + 8))(v371, v378);
    }
  }
  else
  {
    v366 = *(char **)(v367 + 32);
    uint64_t v180 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v181 = v130;
    uint64_t v182 = v180;
    uint64_t v183 = v119;
    uint64_t v184 = (uint64_t)v337;
    uint64_t v185 = (void *)((char *)v337 + v180[12]);
    uint64_t v186 = (char *)v337 + v180[16];
    uint64_t v187 = (char *)v337 + v180[20];
    uint64_t v188 = v180[24];
    uint64_t v190 = *(void *)v181;
    uint64_t v189 = *(void *)(v181 + 8);
    long long v383 = *(_OWORD *)(v181 + 16);
    void *v337 = v190;
    *(void *)(v184 + 8) = v189;
    swift_bridgeObjectRetain();
    uint64_t *v185 = sub_1000A3F70();
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v191 = v374 + *(int *)(v353 + 32);
    uint64_t v192 = sub_1000A3E00();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v192 - 8) + 16))(v186, v191, v192);
    uint64_t v193 = (int *)type metadata accessor for ReadingGoalView.ViewConfiguration(0);
    uint64_t v194 = v191 + v193[5];
    uint64_t v195 = sub_1000A3D80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v195 - 8) + 16))(v187, v194, v195);
    *(void *)(v184 + v188) = *(void *)(v191 + v193[6]);
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v182 - 1) + 56))(v184, 0, 1, v182);
    uint64_t v367 = sub_1000A3F70();
    sub_100009D80(v128);
    uint64_t v196 = v369;
    sub_1000A4110();
    sub_1000A40F0();
    uint64_t v197 = v196;
    uint64_t v198 = v373;
    ((void (*)(uint64_t, uint64_t))v183)(v197, v373);
    ((void (*)(uint64_t, uint64_t))v183)(v128, v198);
    sub_1000A3F70();
    uint64_t v373 = sub_1000A3F80();
    swift_release();
    uint64_t v199 = v375;
    uint64_t v200 = v336;
    uint64_t v201 = v368;
    (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v336, v376, v368);
    uint64_t v202 = *(void *)(v191 + v193[7]);
    uint64_t v203 = swift_getKeyPath();
    uint64_t v204 = (uint64_t)v344;
    uint64_t *v344 = v203;
    sub_100004FDC(&qword_1000CCBB8);
    swift_storeEnumTagMultiPayload();
    uint64_t v205 = swift_getKeyPath();
    uint64_t v206 = (int *)v345;
    uint64_t v207 = (uint64_t)v341;
    *(void *)&v341[*(int *)(v345 + 20)] = v205;
    sub_100004FDC(&qword_1000CCAD8);
    swift_storeEnumTagMultiPayload();
    sub_10000A95C(v204, v207, &qword_1000CE378);
    uint64_t v208 = v366;
    *(void *)(v207 + v206[6]) = v366;
    sub_100052F6C(v184, v207 + v206[7], type metadata accessor for CircularProgressView.Content);
    *(unsigned char *)(v207 + v206[8]) = 0;
    *(void *)(v207 + v206[9]) = v367;
    *(void *)(v207 + v206[10]) = v373;
    uint64_t v209 = v199;
    (*(void (**)(uint64_t, char *, uint64_t))(v199 + 32))(v207 + v206[11], v200, v201);
    *(void *)(v207 + v206[12]) = v202;
    *(double *)(v207 + v206[13]) = a4;
    *(double *)(v207 + v206[14]) = a4;
    uint64_t v210 = v354;
    sub_1000A3C60();
    uint64_t v211 = sub_100052D44(&qword_1000CE7F0, (void (*)(uint64_t))type metadata accessor for CircularProgressView);
    uint64_t v212 = v342;
    sub_1000A3F30();
    (*(void (**)(char *, uint64_t))(v355 + 8))(v210, v356);
    sub_100052FD4(v207, type metadata accessor for CircularProgressView);
    long long v382 = v383;
    v380 = v206;
    uint64_t v381 = v211;
    swift_getOpaqueTypeConformance2();
    sub_10000A504();
    uint64_t v213 = (uint64_t)v338;
    uint64_t v214 = v349;
    sub_1000A3F00();
    (*(void (**)(char *, uint64_t))(v348 + 8))(v212, v214);
    *(void *)&long long v382 = sub_100051BC8(v208, 0, v359);
    *((void *)&v382 + 1) = v215;
    uint64_t v216 = (uint64_t)v340;
    sub_1000A39B0();
    swift_bridgeObjectRelease();
    sub_10000A9C0(v213, &qword_1000CE7A8);
    uint64_t v217 = (uint64_t)v339;
    sub_1000A39F0();
    sub_10000A9C0(v216, &qword_1000CE7A8);
    uint64_t v218 = v343;
    sub_10000A95C(v217, v343, &qword_1000CE7A8);
    sub_10000B1C0(v218, v347, &qword_1000CE7A8);
    swift_storeEnumTagMultiPayload();
    sub_100052D8C();
    sub_100052C38();
    uint64_t v219 = (uint64_t)v350;
    sub_1000A3C00();
    sub_10000B1C0(v219, v363, &qword_1000CE7C0);
    swift_storeEnumTagMultiPayload();
    sub_100052ED4(&qword_1000CE800, &qword_1000CE7C0, (void (*)(void))sub_100052D8C, (void (*)(void))sub_100052C38);
    sub_100052ED4(&qword_1000CE808, &qword_1000CE798, (void (*)(void))sub_100052C38, (void (*)(void))sub_100052D8C);
    sub_1000A3C00();
    swift_release();
    sub_10000A9C0(v219, &qword_1000CE7C0);
    sub_10000A9C0(v218, &qword_1000CE7A8);
    char v220 = *(void (**)(char *, uint64_t))(v209 + 8);
    v220(v376, v201);
    v220(v377, v201);
    return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v371, v378);
  }
}

uint64_t sub_10005144C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_100004FDC(&qword_1000CE768);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v63 - v12;
  uint64_t v14 = sub_1000A3A20();
  __chkstk_darwin(v14 - 8);
  uint64_t v73 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000A4090();
  uint64_t v16 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004FDC(&qword_1000CE770);
  __chkstk_darwin(v71);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004FDC(&qword_1000CE778);
  __chkstk_darwin(v74);
  uint64_t v76 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004FDC(&qword_1000CE780);
  uint64_t v22 = __chkstk_darwin(v75);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v77 = (uint64_t)&v63 - v25;
  uint64_t v80 = type metadata accessor for ReadingGoalView(0);
  uint64_t v26 = a1 + *(int *)(v80 + 20);
  char v87 = *(unsigned char *)(v26 + 32);
  long long v27 = *(_OWORD *)(v26 + 16);
  v86[0] = *(_OWORD *)v26;
  v86[1] = v27;
  sub_10000A95C((uint64_t)v86, (uint64_t)v88, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v88, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  double v29 = v28;
  uint64_t result = sub_100012D8C((uint64_t)v86, (void (*)(void, void, void, void, void))sub_10000A4F8);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v31 = *(int *)(v80 + 28);
  uint64_t v32 = *(void *)(a1 + v31);
  if (*(void *)(v32 + 16) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v64 = v13;
  uint64_t v65 = a3;
  uint64_t v66 = v11;
  uint64_t v63 = 48 * a2;
  char v33 = *(unsigned char *)(v32 + 48 * a2 + 73);
  uint64_t v68 = v31;
  double v34 = sub_10004E008(v33, (uint64_t)&v81);
  uint64_t v79 = v81;
  uint64_t v70 = a1;
  unint64_t v67 = a2;
  unint64_t v35 = *((void *)&v81 + 1);
  long long v36 = v82;
  uint64_t v37 = v83;
  unsigned int v78 = DWORD2(v83);
  uint64_t v69 = v24;
  char v38 = BYTE12(v83);
  uint64_t v39 = v16;
  uint64_t v40 = v18;
  uint64_t v41 = v18;
  uint64_t v42 = v72;
  (*(void (**)(char *, void, uint64_t, double))(v16 + 104))(v41, enum case for BlendMode.plusLighter(_:), v72, v34);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v44 = (uint64_t)v73;
  v43(v73, v40, v42);
  sub_100052AE0(v44, (uint64_t)&v20[*(int *)(v71 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v45 = v79;
  *(void *)uint64_t v20 = v79;
  *((void *)v20 + 1) = v35;
  *((_OWORD *)v20 + 1) = v36;
  *((void *)v20 + 4) = v37;
  uint64_t v46 = v78;
  *((_DWORD *)v20 + 10) = v78;
  v20[44] = v38;
  sub_100052B48(v45, v35, v36, *((uint64_t *)&v36 + 1), v37, v46, v38);
  sub_100052FD4(v44, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v42);
  unint64_t v47 = v35;
  uint64_t v48 = v70;
  uint64_t v49 = (uint64_t)v69;
  sub_100052BB0(v79, v47, v36, *((uint64_t *)&v36 + 1), v37, v78, v38);
  type metadata accessor for ReadingGoalView.ViewConfiguration(0);
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v50 = v76;
  sub_10000B1C0((uint64_t)v20, v76, &qword_1000CE770);
  uint64_t v51 = (_OWORD *)(v50 + *(int *)(v74 + 36));
  long long v52 = v82;
  *uint64_t v51 = v81;
  v51[1] = v52;
  v51[2] = v83;
  sub_10000A9C0((uint64_t)v20, &qword_1000CE770);
  sub_10000B1C0(v50, v49, &qword_1000CE778);
  uint64_t v53 = v49 + *(int *)(v75 + 36);
  *(double *)uint64_t v53 = (v29 + a4) * -0.5;
  *(void *)(v53 + 8) = 0;
  sub_10000A9C0(v50, &qword_1000CE778);
  uint64_t v54 = v77;
  uint64_t result = sub_10000A95C(v49, v77, &qword_1000CE780);
  uint64_t v55 = *(void *)(v48 + v68);
  if (*(void *)(v55 + 16) > v67)
  {
    uint64_t v56 = v55 + v63;
    long long v57 = *(_OWORD *)(v56 + 48);
    long long v84 = *(_OWORD *)(v56 + 32);
    v85[0] = v57;
    *(_OWORD *)((char *)v85 + 10) = *(_OWORD *)(v56 + 58);
    long long v89 = v84;
    long long v90 = v57;
    long long v91 = v57;
    long long v92 = v84;
    int v58 = *(unsigned __int8 *)(v56 + 73);
    sub_1000190E0((uint64_t)&v92);
    sub_1000190E0((uint64_t)&v91);
    uint64_t v59 = (uint64_t)v64;
    sub_10004E730((uint64_t)&v84, v58, (uint64_t)v64, a4);
    sub_10001910C((uint64_t)&v92);
    sub_10001910C((uint64_t)&v91);
    sub_10000B1C0(v54, v49, &qword_1000CE780);
    uint64_t v60 = (uint64_t)v66;
    sub_10000B1C0(v59, (uint64_t)v66, &qword_1000CE768);
    uint64_t v61 = v65;
    sub_10000B1C0(v49, v65, &qword_1000CE780);
    uint64_t v62 = sub_100004FDC(&qword_1000CE788);
    sub_10000B1C0(v60, v61 + *(int *)(v62 + 48), &qword_1000CE768);
    sub_10000A9C0(v59, &qword_1000CE768);
    sub_10000A9C0(v54, &qword_1000CE780);
    sub_10000A9C0(v60, &qword_1000CE768);
    return sub_10000A9C0(v49, &qword_1000CE780);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100051BC8(char *a1, char a2, int a3)
{
  int v85 = a3;
  uint64_t v5 = sub_1000A33F0();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CE810);
  long long v84 = *(char **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v80 - v12;
  uint64_t v14 = sub_1000A42D0();
  __chkstk_darwin(v14 - 8);
  uint64_t v88 = sub_1000A3600();
  uint64_t v86 = *(void *)(v88 - 8);
  uint64_t v15 = __chkstk_darwin(v88);
  char v87 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = sub_1000A42F0();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v26 = (char *)&v80 - v24;
  if (a2)
  {
    uint64_t v40 = v25;
    uint64_t v35 = v86;
    uint64_t v41 = v87;
    uint64_t v42 = v23;
    uint64_t v43 = v88;
    if (!a1)
    {
      sub_1000A4280();
      sub_1000A35D0();
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      uint64_t v55 = v42;
      uint64_t v81 = v42;
      uint64_t v36 = v40;
      v54(v22, v26, v55);
      type metadata accessor for BundleFinder();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v57 = [self bundleForClass:ObjCClassFromMetadata];
      int v58 = v41;
      uint64_t v59 = v43;
      uint64_t v37 = v26;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v58, v18, v59);
      long long v84 = v22;
      uint64_t v60 = sub_1000A4360();
      uint64_t v34 = v61;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v59);
      uint64_t v39 = v81;
      (*(void (**)(char *))(v36 + 8))(v37);
      uint64_t v77 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v63 = *((void *)v77 + 2);
      unint64_t v62 = *((void *)v77 + 3);
      if (v63 >= v62 >> 1) {
        uint64_t v77 = sub_100058E74((char *)(v62 > 1), v63 + 1, 1, v77);
      }
      unsigned __int8 v78 = v85;
      *((void *)v77 + 2) = v63 + 1;
      uint64_t v64 = &v77[16 * v63];
      *((void *)v64 + 4) = v60;
      uint64_t v53 = v64 + 32;
      goto LABEL_13;
    }
    BOOL v44 = a1 == (char *)1;
    uint64_t v45 = v23;
    if (!v44)
    {
      uint64_t v39 = v23;
      uint64_t v77 = (char *)_swiftEmptyArrayStorage;
      unsigned __int8 v78 = v85;
      uint64_t v36 = v25;
      uint64_t v37 = (char *)&v80 - v24;
      uint64_t v79 = v22;
      goto LABEL_14;
    }
    uint64_t v46 = v88;
    uint64_t v37 = (char *)&v80 - v24;
    sub_1000A4280();
    sub_1000A35D0();
    uint64_t v36 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v22, v37, v45);
    type metadata accessor for BundleFinder();
    uint64_t v47 = swift_getObjCClassFromMetadata();
    id v48 = [self bundleForClass:v47];
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v41, v18, v46);
    long long v84 = v22;
    uint64_t v32 = sub_1000A4360();
    uint64_t v34 = v49;
    (*(void (**)(void))(v35 + 8))();
    uint64_t v39 = v45;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v45);
  }
  else
  {
    uint64_t v80 = v25;
    uint64_t v81 = v23;
    sub_1000A42C0();
    v90._countAndFlagsBits = 0;
    v90._object = (void *)0xE000000000000000;
    sub_1000A42B0(v90);
    long long v89 = a1;
    sub_1000A35C0();
    sub_100053034();
    sub_1000A33C0();
    sub_1000A33E0();
    sub_1000A33D0();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v7, v83);
    long long v27 = (void (*)(char *, uint64_t))*((void *)v84 + 1);
    v27(v11, v8);
    sub_10000B17C(&qword_1000CE820, &qword_1000CE810);
    sub_10000A504();
    sub_1000A4290();
    v27(v13, v8);
    v91._countAndFlagsBits = 0x74656C706D6F6320;
    v91._object = (void *)0xE900000000000065;
    sub_1000A42B0(v91);
    sub_1000A42E0();
    sub_1000A35D0();
    uint64_t v29 = v80;
    uint64_t v28 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v22, v26, v81);
    type metadata accessor for BundleFinder();
    uint64_t v30 = swift_getObjCClassFromMetadata();
    id v31 = [self bundleForClass:v30];
    sub_1000A35D0();
    long long v84 = v22;
    uint64_t v32 = sub_1000A4350();
    uint64_t v34 = v33;
    uint64_t v35 = v86;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v18, v88);
    uint64_t v36 = v29;
    uint64_t v37 = v26;
    char v38 = v26;
    uint64_t v39 = v28;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
  }
  uint64_t v77 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v51 = *((void *)v77 + 2);
  unint64_t v50 = *((void *)v77 + 3);
  if (v51 >= v50 >> 1) {
    uint64_t v77 = sub_100058E74((char *)(v50 > 1), v51 + 1, 1, v77);
  }
  *((void *)v77 + 2) = v51 + 1;
  long long v52 = &v77[16 * v51];
  *((void *)v52 + 4) = v32;
  uint64_t v53 = v52 + 32;
  unsigned __int8 v78 = v85;
LABEL_13:
  uint64_t v79 = v84;
  *((void *)v53 + 1) = v34;
LABEL_14:
  if (v78 <= 3u)
  {
    sub_1000A4280();
    sub_1000A35D0();
    uint64_t v65 = v39;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v79, v37, v39);
    type metadata accessor for BundleFinder();
    uint64_t v66 = swift_getObjCClassFromMetadata();
    id v67 = [self bundleForClass:v66];
    uint64_t v68 = v88;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v87, v18, v88);
    uint64_t v69 = sub_1000A4360();
    uint64_t v71 = v70;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v68);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v65);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v77 = sub_100058E74(0, *((void *)v77 + 2) + 1, 1, v77);
    }
    unint64_t v73 = *((void *)v77 + 2);
    unint64_t v72 = *((void *)v77 + 3);
    if (v73 >= v72 >> 1) {
      uint64_t v77 = sub_100058E74((char *)(v72 > 1), v73 + 1, 1, v77);
    }
    *((void *)v77 + 2) = v73 + 1;
    uint64_t v74 = &v77[16 * v73];
    *((void *)v74 + 4) = v69;
    *((void *)v74 + 5) = v71;
  }
  long long v89 = v77;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v75 = sub_1000A4250();
  swift_bridgeObjectRelease();
  return v75;
}

uint64_t sub_100052620()
{
  uint64_t v1 = (int *)type metadata accessor for ReadingGoalView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_10000A4F8(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(unsigned char *)(v7 + 32));
  uint64_t v8 = v5 + v1[6];
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  unint64_t v10 = ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5 + v1[8];
  uint64_t v12 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + *(int *)(type metadata accessor for ReadingGoalView.ViewConfiguration(0) + 20);
  uint64_t v14 = sub_1000A3D80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v5 + v1[9];
  uint64_t v16 = sub_1000A3930();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);

  return _swift_deallocObject(v0, v10, v2 | 7);
}

uint64_t sub_1000528A0(unint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ReadingGoalView(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  double v5 = *(double *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10004D6FC(a1, v1 + v4, v5);
}

unint64_t sub_10005294C()
{
  unint64_t result = qword_1000CE718;
  if (!qword_1000CE718)
  {
    sub_100008B14(&qword_1000CE708);
    sub_1000529C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE718);
  }
  return result;
}

unint64_t sub_1000529C8()
{
  unint64_t result = qword_1000CE720;
  if (!qword_1000CE720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE720);
  }
  return result;
}

unint64_t sub_100052A1C()
{
  unint64_t result = qword_1000CE728;
  if (!qword_1000CE728)
  {
    sub_100008B14(&qword_1000CE710);
    sub_10000B17C(&qword_1000CE730, &qword_1000CE738);
    sub_10000B17C(&qword_1000CE740, &qword_1000CE748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE728);
  }
  return result;
}

uint64_t sub_100052AE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052B48(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    return sub_100052C10(a1, a2, a3, a4, a5, a6, BYTE3(a6) & 1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))j__swift_retain, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))j__swift_bridgeObjectRetain);
  }
  return swift_retain();
}

uint64_t sub_100052BB0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    return sub_100052C10(a1, a2, a3, a4, a5, a6, BYTE3(a6) & 1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))j__swift_release, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))j__swift_bridgeObjectRelease);
  }
  return swift_release();
}

uint64_t sub_100052C10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t (*a8)(uint64_t, unint64_t, uint64_t), uint64_t (*a9)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  if (a7) {
    return a9(a1, a2, a3, a4, a5, a6, WORD1(a6) & 1);
  }
  else {
    return a8(a1, a2, (a2 >> 16) & 1);
  }
}

unint64_t sub_100052C38()
{
  unint64_t result = qword_1000CE7E8;
  if (!qword_1000CE7E8)
  {
    sub_100008B14(&qword_1000CE7A8);
    type metadata accessor for CircularProgressView(255);
    sub_100052D44(&qword_1000CE7F0, (void (*)(uint64_t))type metadata accessor for CircularProgressView);
    swift_getOpaqueTypeConformance2();
    sub_100052D44((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE7E8);
  }
  return result;
}

uint64_t sub_100052D44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100052D8C()
{
  unint64_t result = qword_1000CE7F8;
  if (!qword_1000CE7F8)
  {
    sub_100008B14(&qword_1000CE7D8);
    sub_100008B14(&qword_1000CE7C8);
    type metadata accessor for FilledCircleWithLabel();
    sub_100052D44(&qword_1000CE7E0, (void (*)(uint64_t))type metadata accessor for FilledCircleWithLabel);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100052D44((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE7F8);
  }
  return result;
}

uint64_t sub_100052ED4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100052F6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052FD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100053034()
{
  unint64_t result = qword_1000CE818;
  if (!qword_1000CE818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE818);
  }
  return result;
}

unint64_t sub_100053088()
{
  unint64_t result = qword_1000CE838;
  if (!qword_1000CE838)
  {
    sub_100008B14(&qword_1000CE828);
    sub_100053144(&qword_1000CE840, &qword_1000CE848, &qword_1000CE850, &qword_1000CE830);
    sub_100053144(&qword_1000CE858, &qword_1000CE860, &qword_1000CE868, &qword_1000CE870);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE838);
  }
  return result;
}

uint64_t sub_100053144(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    sub_10000B17C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000531D8()
{
  return sub_10000B17C(&qword_1000CE888, &qword_1000CE890);
}

void sub_100053214(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v8 = sub_1000A3740();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[2] = a1;
  v16[3] = a2;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = 45;
  v17._object = (void *)0xE100000000000000;
  sub_1000A4380(v17);
  uint64_t v12 = 8 * a3;
  v18._countAndFlagsBits = *(void *)&aUntreatebackdr[v12];
  v18._object = *(void **)&aUntreatebackdr[v12 + 24];
  sub_1000A4380(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 64;
  v19._object = (void *)0xE100000000000000;
  sub_1000A4380(v19);
  if ((~*(void *)&a4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a4 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a4 < 9.22337204e18)
  {
    v16[1] = (uint64_t)a4;
    v20._countAndFlagsBits = sub_1000A4690();
    sub_1000A4380(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 120;
    v21._object = (void *)0xE100000000000000;
    sub_1000A4380(v21);
    NSString v13 = sub_1000A4300();
    swift_bridgeObjectRelease();
    sub_1000A3730();
    Class isa = sub_1000A3720().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v15 = [v13 stringByAppendingPathExtensionForType:isa];

    sub_1000A4340();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_100053434()
{
  uint64_t v0 = sub_1000A3490();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010E40(v2, qword_1000CE898);
  sub_100010B3C(v0, (uint64_t)qword_1000CE898);
  id v5 = [self books];
  id v6 = [v5 containerURL];

  sub_1000A3450();
  sub_1000A3440();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_100053590()
{
  uint64_t v0 = sub_1000A3490();
  sub_100010E40(v0, qword_1000CE8B0);
  sub_100010B3C(v0, (uint64_t)qword_1000CE8B0);
  if (qword_1000CC6B8 != -1) {
    swift_once();
  }
  sub_100010B3C(v0, (uint64_t)qword_1000CE898);
  return sub_1000A3440();
}

uint64_t sub_100053648@<X0>(uint64_t a1@<X8>)
{
  char v27 = 1;
  uint64_t v2 = self;
  id v3 = [v2 defaultManager];
  if (qword_1000CC6C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1000A3490();
  uint64_t v5 = sub_100010B3C(v4, (uint64_t)qword_1000CE8B0);
  sub_1000A3460();
  NSString v6 = sub_1000A4300();
  swift_bridgeObjectRelease();
  unsigned __int8 v7 = [v3 fileExistsAtPath:v6 isDirectory:&v27];

  if (v7) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v5, v4);
  }
  id v26 = v2;
  if (qword_1000CC6D0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1000A3830();
  sub_100010B3C(v8, (uint64_t)qword_1000CE8D0);
  uint64_t v9 = sub_1000A3810();
  os_log_type_t v10 = sub_1000A44D0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v28 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_100055AD8();
    uint64_t v12 = sub_1000A4690();
    sub_10007A4B4(v12, v13, (uint64_t *)&v28);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Creating caches directory for cover at %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v14 = [v26 defaultManager];
  sub_1000A3430(v15);
  Swift::String v17 = v16;
  id v28 = 0;
  unsigned int v18 = [v14 createDirectoryAtURL:v16 withIntermediateDirectories:1 attributes:0 error:&v28];

  if (v18)
  {
    id v19 = v28;
    id v20 = [v26 defaultManager];
    sub_1000A3460();
    NSString v21 = sub_1000A4300();
    swift_bridgeObjectRelease();
    unsigned __int8 v22 = [v20 fileExistsAtPath:v21 isDirectory:&v27];

    if (v22) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v5, v4);
    }
    sub_100055A84();
    swift_allocError();
    *uint64_t v25 = 0;
  }
  else
  {
    id v24 = v28;
    sub_1000A3370();
  }
  return swift_willThrow();
}

void sub_100053A1C()
{
  id v0 = [self mainScreen];
  [v0 scale];
  uint64_t v2 = v1;

  qword_1000CE8C8 = v2;
}

id sub_100053A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3830();
  _OWORD v23[4] = *(void *)(v6 - 8);
  v23[5] = v6;
  __chkstk_darwin(v6);
  v23[6] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A3490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)v23 - v14;
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)v23 - v16;
  if (qword_1000CC6C8 != -1) {
    swift_once();
  }
  uint64_t v23[2] = a1;
  v23[3] = a3;
  sub_100053214(a1, a2, a3, *(double *)&qword_1000CE8C8);
  sub_100053648((uint64_t)v12);
  sub_1000A3440();
  swift_bridgeObjectRelease();
  unsigned int v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v8);
  id v19 = [self defaultManager];
  sub_1000A3460();
  NSString v20 = sub_1000A4300();
  swift_bridgeObjectRelease();
  id v21 = [v19 fileExistsAtPath:v20];

  v18(v17, v8);
  return v21;
}

id sub_10005402C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v65 = a1;
  uint64_t v66 = a3;
  unint64_t v63 = *v3;
  uint64_t v58 = sub_1000A3490();
  uint64_t v56 = *(void *)(v58 - 8);
  uint64_t v5 = __chkstk_darwin(v58);
  uint64_t v64 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v51 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = sub_1000A3830();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v62 = (void (*)(uint64_t, uint64_t))((char *)&v51 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v54 = (char *)&v51 - v18;
  __chkstk_darwin(v17);
  NSString v20 = (char *)&v51 - v19;
  if (qword_1000CC6D0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100010B3C(v11, (uint64_t)qword_1000CE8D0);
  unsigned __int8 v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v59 = v21;
  uint64_t v60 = v22;
  uint64_t v61 = v12 + 16;
  ((void (*)(char *))v22)(v20);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_1000A3810();
  os_log_type_t v24 = sub_1000A44D0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  id v57 = v10;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_10007A4B4(v65, a2, v68);
    uint64_t v52 = v12;
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    uint64_t v27 = 8 * (char)v66;
    uint64_t v28 = *(void *)&aUntreatebackdr[v27];
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v67 = sub_10007A4B4(v28, *(void *)&aUntreatebackdr[v27 + 24], v68);
    uint64_t v12 = v52;
    sub_1000A4580();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Getting cached image. (assetID: '%s', type: %s)", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v20, v11);
  uint64_t v30 = (uint64_t)v64;
  if (qword_1000CC6C8 != -1) {
    swift_once();
  }
  sub_100053214(v65, a2, v66, *(double *)&qword_1000CE8C8);
  sub_100053648(v30);
  unint64_t v63 = (void (*)(char *, char *))v29;
  id v31 = v55;
  sub_1000A3440();
  swift_bridgeObjectRelease();
  uint64_t v32 = v56;
  uint64_t v33 = v58;
  unint64_t v62 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v62(v30, v58);
  uint64_t v34 = v57;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v57, v31, v33);
  id v35 = [self defaultManager];
  sub_1000A3460();
  NSString v36 = sub_1000A4300();
  swift_bridgeObjectRelease();
  LODWORD(v32) = [v35 fileExistsAtPath:v36];

  if (v32)
  {
    uint64_t v43 = sub_1000A34A0();
    unint64_t v45 = v44;
    double v46 = *(double *)&qword_1000CE8C8;
    id v47 = objc_allocWithZone((Class)UIImage);
    sub_1000277BC(v43, v45);
    Class isa = sub_1000A34B0().super.isa;
    id v49 = [v47 initWithData:isa scale:v46];
    sub_100027764(v43, v45);

    sub_100027764(v43, v45);
    v62((uint64_t)v34, v58);
  }
  else
  {
    uint64_t v37 = v54;
    v60(v54, v59, v11);
    swift_bridgeObjectRetain_n();
    char v38 = sub_1000A3810();
    os_log_type_t v39 = sub_1000A44D0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_10007A4B4(v65, a2, v68);
      uint64_t v64 = (char *)v11;
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      uint64_t v41 = 8 * (char)v66;
      uint64_t v42 = *(void *)&aUntreatebackdr[v41];
      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v67 = sub_10007A4B4(v42, *(void *)&aUntreatebackdr[v41 + 24], v68);
      sub_1000A4580();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "No cached image found. (assetID: '%s', type: %s)", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v63(v54, v64);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v63(v37, (char *)v11);
    }
    v62((uint64_t)v34, v58);
    return 0;
  }
  return v49;
}

void sub_100054C68(NSObject *a1, unint64_t a2, uint64_t a3, CGImage *a4, void (**a5)(char *, char *))
{
  CGImageRef v124 = a4;
  uint64_t v120 = *a5;
  os_log_t v121 = v5;
  uint64_t v9 = sub_1000A3740();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v111 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A3490();
  uint64_t v109 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v107 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v125 = (char *)&v106 - v16;
  __chkstk_darwin(v15);
  uint64_t v118 = (char *)&v106 - v17;
  uint64_t v18 = sub_1000A3830();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v108 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v119 = (char *)&v106 - v23;
  __chkstk_darwin(v22);
  BOOL v25 = (char *)&v106 - v24;
  if (qword_1000CC6D0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_100010B3C(v18, (uint64_t)qword_1000CE8D0);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v117 = v26;
  char v114 = v27;
  uint64_t v115 = v19 + 16;
  ((void (*)(char *))v27)(v25);
  swift_bridgeObjectRetain_n();
  uint64_t v123 = v25;
  uint64_t v28 = sub_1000A3810();
  os_log_type_t v29 = sub_1000A44D0();
  LODWORD(v116) = v29;
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v122 = v19;
  uint64_t v110 = v9;
  uint64_t v113 = v10;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v106 = swift_slowAlloc();
    uint64_t v127 = v106;
    *(_DWORD *)uint64_t v31 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v126 = sub_10007A4B4((uint64_t)a1, a2, &v127);
    uint64_t v112 = v18;
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    uint64_t v32 = 8 * (char)a3;
    uint64_t v33 = *(void *)&aUntreatebackdr[v32];
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v34 = a1;
    id v35 = v28;
    uint64_t v36 = a3;
    uint64_t v37 = v34;
    uint64_t v126 = sub_10007A4B4(v33, *(void *)&aUntreatebackdr[v32 + 24], &v127);
    uint64_t v18 = v112;
    char v38 = v37;
    a3 = v36;
    sub_1000A4580();
    uint64_t v19 = v122;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v116, "Saving cached image. (assetID: '%s', type: %s)", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v38;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v39 = *(void (**)(char *, uint64_t))(v19 + 8);
  v39(v123, v18);
  uint64_t v40 = (CGImage *)[(CGImage *)v124 CGImage];
  uint64_t v41 = (uint64_t)v125;
  if (v40)
  {
    uint64_t v123 = (char *)v12;
    CGImageRef v124 = v40;
    uint64_t v116 = v39;
    if (qword_1000CC6C8 != -1) {
      swift_once();
    }
    sub_100053214((uint64_t)a1, a2, a3, *(double *)&qword_1000CE8C8);
    os_log_t v42 = v121;
    sub_100053648(v41);
    if (v42)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v106 = a3;
      os_log_t v121 = a1;
      uint64_t v119 = (char *)a2;
      uint64_t v112 = v18;
      sub_1000A3440();
      swift_bridgeObjectRelease();
      uint64_t v53 = v109;
      uint64_t v54 = *(void (**)(char *, char *))(v109 + 8);
      uint64_t v55 = v123;
      uint64_t v125 = (char *)(v109 + 8);
      uint64_t v120 = v54;
      v54((char *)v41, v123);
      sub_1000A3430(v56);
      CFURLRef v58 = v57;
      uint64_t v59 = v111;
      sub_1000A3730();
      sub_1000A3710();
      uint64_t v61 = v113 + 8;
      uint64_t v60 = *(void (**)(char *, uint64_t))(v113 + 8);
      unint64_t v62 = v59;
      uint64_t v63 = v110;
      v60(v62, v110);
      uint64_t v64 = (__CFString *)sub_1000A4300();
      swift_bridgeObjectRelease();
      uint64_t v65 = v55;
      uint64_t v66 = CGImageDestinationCreateWithURL(v58, v64, 1uLL, 0);

      if (v66)
      {
        CGImageRef v67 = v124;
        CGImageDestinationAddImage(v66, v124, 0);
        BOOL v68 = CGImageDestinationFinalize(v66);
        os_log_t v69 = v121;
        if (v68)
        {
          v120(v118, v123);
        }
        else
        {
          Swift::String v90 = v108;
          uint64_t v91 = v112;
          v114(v108, v117, v112);
          unint64_t v92 = (unint64_t)v119;
          swift_bridgeObjectRetain_n();
          uint64_t v93 = sub_1000A3810();
          os_log_type_t v94 = sub_1000A44B0();
          int v95 = v94;
          if (os_log_type_enabled(v93, v94))
          {
            uint64_t v96 = swift_slowAlloc();
            LODWORD(v115) = v95;
            uint64_t v97 = v96;
            uint64_t v117 = swift_slowAlloc();
            uint64_t v127 = v117;
            *(_DWORD *)uint64_t v97 = 136315394;
            swift_bridgeObjectRetain();
            uint64_t v126 = sub_10007A4B4((uint64_t)v69, v92, &v127);
            sub_1000A4580();
            swift_bridgeObjectRelease_n();
            uint64_t v98 = 8 * (char)v106;
            uint64_t v99 = *(void *)&aUntreatebackdr[v98];
            *(_WORD *)(v97 + 12) = 2080;
            uint64_t v126 = sub_10007A4B4(v99, *(void *)&aUntreatebackdr[v98 + 24], &v127);
            sub_1000A4580();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v115, "Failed to write cached image file. (assetID: '%s', type: %s)", (uint8_t *)v97, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v100 = v108;
            uint64_t v101 = v112;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            uint64_t v100 = v90;
            uint64_t v101 = v91;
          }
          v116(v100, v101);
          char v104 = v120;
          sub_100055A84();
          swift_allocError();
          *uint64_t v105 = 3;
          swift_willThrow();

          v104(v118, v123);
        }
      }
      else
      {
        uint64_t v113 = v61;
        uint64_t v71 = *(void (**)(char *, char *, char *))(v53 + 16);
        unint64_t v72 = v107;
        v71(v107, v118, v65);
        unint64_t v73 = v119;
        swift_bridgeObjectRetain_n();
        uint64_t v74 = sub_1000A3810();
        os_log_type_t v75 = sub_1000A44B0();
        int v76 = v75;
        BOOL v77 = os_log_type_enabled(v74, v75);
        os_log_t v78 = v121;
        if (v77)
        {
          unint64_t v79 = (unint64_t)v73;
          uint64_t v80 = swift_slowAlloc();
          uint64_t v122 = swift_slowAlloc();
          uint64_t v127 = v122;
          *(_DWORD *)uint64_t v80 = 136315650;
          LODWORD(v117) = v76;
          swift_bridgeObjectRetain();
          uint64_t v126 = sub_10007A4B4((uint64_t)v78, v79, &v127);
          os_log_t v121 = v74;
          sub_1000A4580();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v80 + 12) = 2080;
          uint64_t v81 = v111;
          sub_1000A3730();
          uint64_t v82 = sub_1000A3710();
          unint64_t v84 = v83;
          v60(v81, v63);
          uint64_t v126 = sub_10007A4B4(v82, v84, &v127);
          sub_1000A4580();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 22) = 2080;
          sub_100055AD8();
          uint64_t v85 = sub_1000A4690();
          uint64_t v126 = sub_10007A4B4(v85, v86, &v127);
          char v87 = v123;
          sub_1000A4580();
          swift_bridgeObjectRelease();
          uint64_t v88 = v120;
          v120(v72, v87);
          os_log_t v89 = v121;
          _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v117, "Failed to create destination in CGImageDestinationCreateWithURL. (assetID: '%s', type: %s, url: %s", (uint8_t *)v80, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          char v87 = v65;
          swift_bridgeObjectRelease_n();
          char v102 = v65;
          uint64_t v88 = v120;
          v120(v72, v102);
        }
        sub_100055A84();
        swift_allocError();
        *char v103 = 2;
        swift_willThrow();

        v88(v118, v87);
      }
    }
  }
  else
  {
    char v43 = a3;
    unint64_t v44 = v119;
    v114(v119, v117, v18);
    swift_bridgeObjectRetain_n();
    unint64_t v45 = sub_1000A3810();
    os_log_type_t v46 = sub_1000A44B0();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = a2;
      uint64_t v48 = (uint64_t)a1;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v116 = v39;
      uint64_t v127 = v50;
      *(_DWORD *)uint64_t v49 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_10007A4B4(v48, v47, &v127);
      sub_1000A4580();
      swift_bridgeObjectRelease_n();
      uint64_t v51 = 8 * v43;
      uint64_t v52 = *(void *)&aUntreatebackdr[v51];
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v126 = sub_10007A4B4(v52, *(void *)&aUntreatebackdr[v51 + 24], &v127);
      sub_1000A4580();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Can't save cached image without cgImage. (assetID: '%s', type: %s)", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v116(v119, v18);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v39(v44, v18);
    }
    sub_100055A84();
    swift_allocError();
    *uint64_t v70 = 1;
    swift_willThrow();
  }
}

uint64_t type metadata accessor for WidgetDataCacheManager()
{
  return self;
}

uint64_t sub_100055A04()
{
  uint64_t v0 = sub_1000A3830();
  sub_100010E40(v0, qword_1000CE8D0);
  sub_100010B3C(v0, (uint64_t)qword_1000CE8D0);
  return sub_1000A3820();
}

unint64_t sub_100055A84()
{
  unint64_t result = qword_1000CE9A8;
  if (!qword_1000CE9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE9A8);
  }
  return result;
}

unint64_t sub_100055AD8()
{
  unint64_t result = qword_1000CE9B0;
  if (!qword_1000CE9B0)
  {
    sub_1000A3490();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE9B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetRelevance(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetDataCacheManager.CacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100055C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetDataCacheManager.CacheError()
{
  return &type metadata for WidgetDataCacheManager.CacheError;
}

unint64_t sub_100055CC8()
{
  unint64_t result = qword_1000CE9B8;
  if (!qword_1000CE9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CE9B8);
  }
  return result;
}

void sub_100055D1C()
{
  uint64_t v0 = sub_1000A3490();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v4 = self;
  id v39 = [v4 bu_groupUserDefaults];
  NSString v5 = sub_1000A4300();
  id v6 = [v39 integerForKey:v5];

  if (!v6)
  {
    id v7 = [v4 standardUserDefaults];
    NSString v8 = sub_1000A4300();
    [v7 integerForKey:v8];

    Class isa = sub_1000A4490().super.super.isa;
    NSString v10 = sub_1000A4300();
    [v39 setValue:isa forKey:v10];
  }
  NSString v11 = sub_1000A4300();
  uint64_t v12 = (uint64_t)[v39 integerForKey:v11];

  if (v12 > 3)
  {
    id v30 = v39;
  }
  else
  {
    if (qword_1000CC6C0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100010B3C(v0, (uint64_t)qword_1000CE8B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v13, v0);
    LOBYTE(v40) = 1;
    uint64_t v14 = self;
    id v15 = [v14 defaultManager];
    sub_1000A3460();
    NSString v16 = sub_1000A4300();
    swift_bridgeObjectRelease();
    unsigned int v17 = [v15 fileExistsAtPath:v16 isDirectory:&v40];

    if (v17)
    {
      id v18 = [v14 defaultManager];
      sub_1000A3430(v19);
      uint64_t v21 = v20;
      uint64_t v41 = 0;
      unsigned int v22 = [v18 removeItemAtURL:v20 error:&v41];

      if (v22)
      {
        id v23 = (id)v41;
        Class v24 = sub_1000A4490().super.super.isa;
        NSString v25 = sub_1000A4300();
        [v39 setValue:v24 forKey:v25];

        if (qword_1000CC6D0 != -1) {
          swift_once();
        }
        uint64_t v26 = sub_1000A3830();
        sub_100010B3C(v26, (uint64_t)qword_1000CE8D0);
        uint64_t v27 = sub_1000A3810();
        os_log_type_t v28 = sub_1000A44D0();
        if (os_log_type_enabled(v27, v28))
        {
          os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)os_log_type_t v29 = 134217984;
          uint64_t v41 = 4;
          sub_1000A4580();
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "Successfully deleted previous image cache folder. Updated current cache folder version to %ld.", v29, 0xCu);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      }
      else
      {
        id v31 = (id)v41;
        sub_1000A3370();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        if (qword_1000CC6D0 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1000A3830();
        sub_100010B3C(v32, (uint64_t)qword_1000CE8D0);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v33 = sub_1000A3810();
        os_log_type_t v34 = sub_1000A44B0();
        if (os_log_type_enabled(v33, v34))
        {
          id v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v41 = swift_slowAlloc();
          *(_DWORD *)id v35 = 136315138;
          swift_getErrorValue();
          uint64_t v36 = sub_1000A46F0();
          uint64_t v40 = sub_10007A4B4(v36, v37, &v41);
          sub_1000A4580();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to delete previous image cache folder: %s", v35, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
}

void *sub_1000563E8(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100004FDC(&qword_1000CEAA0);
  __chkstk_darwin(v9 - 8);
  NSString v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A3560();
  uint64_t v28 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  id v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (void *)__chkstk_darwin(v13);
  uint64_t v27 = (char *)&v23 - v17;
  if (a3 == a4)
  {
    return _swiftEmptyArrayStorage;
  }
  else
  {
    if (a4 >= a3)
    {
      os_log_type_t v29 = (void (**)(char *, char *, uint64_t))(v28 + 32);
      id v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      id v18 = _swiftEmptyArrayStorage;
      uint64_t v25 = a2;
      uint64_t v26 = a4;
      id v23 = a1;
      Class v24 = v15;
      while (a3 < a4)
      {
        uint64_t v31 = a3;
        a1(&v31);
        if (v4)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
        if ((*v30)(v11, 1, v12) == 1)
        {
          unint64_t result = (void *)sub_10000A9C0((uint64_t)v11, &qword_1000CEAA0);
        }
        else
        {
          uint64_t v19 = *v29;
          uint64_t v20 = v27;
          (*v29)(v27, v11, v12);
          v19(v15, v20, v12);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v18 = (void *)sub_1000590AC(0, v18[2] + 1, 1, (unint64_t)v18, &qword_1000CEAC0, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
          }
          unint64_t v22 = v18[2];
          unint64_t v21 = v18[3];
          if (v22 >= v21 >> 1) {
            id v18 = (void *)sub_1000590AC(v21 > 1, v22 + 1, 1, (unint64_t)v18, &qword_1000CEAC0, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
          }
          v18[2] = v22 + 1;
          id v15 = v24;
          unint64_t result = (void *)((uint64_t (*)(char *, char *, uint64_t))v19)((char *)v18+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v22, v24, v12);
          a4 = v26;
          a1 = v23;
        }
        if (a4 == ++a3) {
          return v18;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100056708()
{
  sub_1000A4370();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100056768()
{
  sub_1000A4370();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000567D8()
{
  sub_1000A4370();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100056838()
{
  return sub_1000A4780();
}

Swift::Int sub_1000568AC(uint64_t a1, char a2)
{
  return sub_1000A4780();
}

Swift::Int sub_100056900()
{
  return sub_1000A4780();
}

Swift::Int sub_100056984()
{
  return sub_1000A4780();
}

uint64_t sub_1000569F4()
{
  uint64_t v0 = sub_1000A3560();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FDC(&qword_1000CEA98);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A36F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A36D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  sub_1000A3610();
  sub_1000A36E0();
  sub_1000A36A0();
  sub_1000A35C0();
  uint64_t v15 = sub_1000A3600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 0, 1, v15);
  sub_1000A3680();
  sub_1000A3660();
  sub_1000A3630();
  NSString v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  sub_1000A3640();
  sub_1000A3550();
  sub_1000A3620();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
}

uint64_t sub_100056CB8()
{
  v27[0] = sub_1000A3560();
  uint64_t v0 = *(void *)(v27[0] - 8);
  __chkstk_darwin(v27[0]);
  uint64_t v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004FDC(&qword_1000CEA98);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A36F0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A36D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v27 - v12;
  sub_1000A3610();
  sub_1000A36E0();
  sub_1000A36A0();
  sub_1000A35C0();
  uint64_t v14 = sub_1000A3600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 0, 1, v14);
  sub_1000A3680();
  sub_1000A3660();
  sub_1000A3630();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  sub_1000A3640();
  sub_1000A3620();
  uint64_t v16 = sub_1000583EC();
  uint64_t v17 = sub_1000A3630();
  uint64_t v18 = v17 - v16;
  if (__OFSUB__(v17, v16))
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  if (v18 <= 0) {
    uint64_t v19 = v17 - v16;
  }
  else {
    uint64_t v19 = v18 - 7;
  }
  if (v19 > 0x7FFFFFFFFFFFFFF8) {
    goto LABEL_13;
  }
  __chkstk_darwin(v17);
  v27[-2] = v13;
  v27[-1] = v2;
  uint64_t v16 = (uint64_t)sub_1000563E8((void (*)(void))sub_10005E9A4, (uint64_t)&v27[-4], v20, v21);
  if (*(void *)(v16 + 16) == 7) {
    goto LABEL_11;
  }
  if (qword_1000CC6D8 != -1) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v22 = sub_1000A3830();
  sub_100010B3C(v22, (uint64_t)qword_1000CE9C0);
  id v23 = sub_1000A3810();
  os_log_type_t v24 = sub_1000A44C0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unexpected: a week should have 7 days", v25, 2u);
    swift_slowDealloc();
  }

LABEL_11:
  (*(void (**)(char *, void))(v0 + 8))(v2, v27[0]);
  v15(v13, v7);
  return v16;
}

uint64_t sub_1000570C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v54 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100004FDC(&qword_1000CEAA8);
  uint64_t v5 = __chkstk_darwin(v52);
  uint64_t v56 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v51 = (uint64_t)&v46 - v8;
  __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v46 - v9;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  CFURLRef v57 = &_swiftEmptyDictionarySingleton;
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  if (-v11 < 64) {
    uint64_t v12 = ~(-1 << -(char)v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  uint64_t v46 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v48 = (unint64_t)(63 - v11) >> 6;
  uint64_t v53 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v47 = v3;
  if (v13) {
    goto LABEL_38;
  }
LABEL_7:
  int64_t v15 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v15 < v48)
    {
      unint64_t v16 = *(void *)(v49 + 8 * v15);
      int64_t v17 = i + 1;
      if (v16) {
        goto LABEL_22;
      }
      int64_t v17 = i + 2;
      if (i + 2 >= v48) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v49 + 8 * v17);
      if (v16) {
        goto LABEL_22;
      }
      int64_t v17 = i + 3;
      if (i + 3 >= v48) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v49 + 8 * v17);
      if (v16) {
        goto LABEL_22;
      }
      int64_t v17 = i + 4;
      if (i + 4 >= v48) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v49 + 8 * v17);
      if (v16)
      {
LABEL_22:
        unint64_t v13 = (v16 - 1) & v16;
        unint64_t v19 = __clz(__rbit64(v16)) + (v17 << 6);
        for (i = v17; ; unint64_t v19 = v45 | (i << 6))
        {
          uint64_t v20 = v53;
          uint64_t v21 = *(void *)(v53 + 48);
          uint64_t v22 = sub_1000A3560();
          uint64_t v23 = *(void *)(v22 - 8);
          uint64_t v24 = v23;
          uint64_t v25 = *(void *)(v23 + 72);
          uint64_t v26 = v50;
          (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v50, v21 + v25 * v19, v22);
          uint64_t v27 = v52;
          *(void *)&v26[*(int *)(v52 + 48)] = *(void *)(*(void *)(v20 + 56) + 8 * v19);
          uint64_t v28 = (uint64_t)v26;
          uint64_t v29 = v51;
          sub_10000A95C(v28, v51, &qword_1000CEAA8);
          uint64_t v30 = *(void *)(v29 + *(int *)(v27 + 48));
          if (*(void *)(v30 + 16))
          {
            uint64_t v31 = v30 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
            uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
            v32(v56, v29, v22);
            sub_10005E778(v31, v54);
            uint64_t v33 = v57;
            unint64_t v34 = v57[2];
            if (v57[3] <= v34)
            {
              uint64_t v35 = v34 + 1;
              swift_bridgeObjectRetain();
              sub_10005A46C(v35, 1);
              uint64_t v33 = v57;
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            sub_10005E95C(&qword_1000CEA88, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t result = sub_1000A4240();
            uint64_t v36 = v33 + 8;
            uint64_t v37 = -1 << *((unsigned char *)v33 + 32);
            unint64_t v38 = result & ~v37;
            unint64_t v39 = v38 >> 6;
            if (((-1 << v38) & ~v33[(v38 >> 6) + 8]) != 0)
            {
              unint64_t v40 = __clz(__rbit64((-1 << v38) & ~v33[(v38 >> 6) + 8])) | v38 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v41 = 0;
              unint64_t v42 = (unint64_t)(63 - v37) >> 6;
              do
              {
                if (++v39 == v42 && (v41 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_40;
                }
                BOOL v43 = v39 == v42;
                if (v39 == v42) {
                  unint64_t v39 = 0;
                }
                v41 |= v43;
                uint64_t v44 = v36[v39];
              }
              while (v44 == -1);
              unint64_t v40 = __clz(__rbit64(~v44)) + (v39 << 6);
            }
            *(void *)((char *)v36 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
            v32((char *)(v33[6] + v40 * v25), (uint64_t)v56, v22);
            uint64_t v3 = v47;
            sub_10005E7DC(v54, v33[7] + *(void *)(v47 + 72) * v40);
            ++v33[2];
            uint64_t result = swift_bridgeObjectRelease();
            if (!v13) {
              goto LABEL_7;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t result = sub_10000A9C0(v29, &qword_1000CEAA8);
            if (!v13) {
              goto LABEL_7;
            }
          }
LABEL_38:
          unint64_t v45 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
        }
      }
      int64_t v18 = i + 5;
      if (i + 5 < v48)
      {
        unint64_t v16 = *(void *)(v49 + 8 * v18);
        if (v16)
        {
          int64_t v17 = i + 5;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v17 = v18 + 1;
          if (__OFADD__(v18, 1)) {
            goto LABEL_41;
          }
          if (v17 >= v48) {
            break;
          }
          unint64_t v16 = *(void *)(v49 + 8 * v17);
          ++v18;
          if (v16) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_39:
    sub_10005E954();
    return (uint64_t)v57;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100057650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X8>)
{
  uint64_t v58 = a3;
  double v56 = a4;
  uint64_t v61 = sub_1000A3560();
  uint64_t v6 = *(void *)(v61 - 8);
  uint64_t v7 = __chkstk_darwin(v61);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = sub_100004FDC(&qword_1000CEA90);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v60 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = a2;
  uint64_t v18 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v17 + 16);
  uint64_t v62 = a1;
  CFURLRef v57 = v9;
  uint64_t v59 = v17;
  if (v22)
  {
    uint64_t v55 = v6;
    unint64_t v23 = sub_1000594A0(a1);
    if (v24)
    {
      sub_10005E778(*(void *)(v17 + 56) + *(void *)(v19 + 72) * v23, (uint64_t)v16);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      uint64_t v26 = v16;
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      uint64_t v26 = v16;
      uint64_t v27 = 1;
    }
    uint64_t v54 = v25;
    v25(v26, v27, 1, v18);
    uint64_t v6 = v55;
  }
  else
  {
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v54(v16, 1, 1, v18);
  }
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v29 = v6;
  uint64_t v30 = v61;
  v28(v11, v62, v61);
  uint64_t v55 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    v28(v21, (uint64_t)v11, v30);
    uint64_t v31 = &v21[*(int *)(v18 + 20)];
    *(void *)uint64_t v31 = 0;
    *((void *)v31 + 1) = 0;
    v31[16] = 0;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
    v32(v11, v30);
    sub_10000A9C0((uint64_t)v16, &qword_1000CEA90);
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
    v32(v11, v30);
    sub_10005E7DC((uint64_t)v16, (uint64_t)v21);
  }
  uint64_t v33 = (uint64_t)v57;
  uint64_t v34 = v58;
  double v35 = v56;
  if (sub_1000A3500())
  {
    *(void *)&double v56 = (v21[*(int *)(v18 + 20) + 16] & 1) == 0;
LABEL_19:
    LODWORD(v58) = 1;
    goto LABEL_20;
  }
  if (sub_1000A3520())
  {
    uint64_t v36 = (uint64_t *)&v21[*(int *)(v18 + 20)];
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    if (v38 >= v37) {
      uint64_t v38 = v37;
    }
    if ((double)v38 / (double)v37 >= 1.0)
    {
      double v56 = 0.0;
      goto LABEL_19;
    }
    LODWORD(v58) = 0;
    double v56 = (double)v38 / (double)v37;
  }
  else
  {
    LODWORD(v58) = 1;
    *(void *)&double v56 = 2;
  }
LABEL_20:
  sub_100057B68(v33);
  uint64_t v39 = v59;
  if (*(void *)(v59 + 16) && (unint64_t v40 = sub_1000594A0(v33), (v41 & 1) != 0))
  {
    sub_10005E778(*(void *)(v39 + 56) + *(void *)(v55 + 72) * v40, (uint64_t)v60);
    uint64_t v42 = 0;
    uint64_t v43 = v61;
  }
  else
  {
    uint64_t v42 = 1;
    uint64_t v43 = v61;
  }
  uint64_t v44 = (uint64_t)v60;
  v54(v60, v42, 1, v18);
  v32((char *)v33, v43);
  char v45 = sub_100057F24(v34, v44);
  sub_10000A9C0(v44, &qword_1000CEA90);
  uint64_t v46 = sub_100058800((uint64_t (*)(uint64_t))sub_10005BF40);
  uint64_t v48 = v47;
  uint64_t v49 = sub_100058800((uint64_t (*)(uint64_t))sub_10005C6CC);
  uint64_t v51 = v50;
  uint64_t result = sub_10005E890((uint64_t)v21);
  **(void **)&double v35 = v46;
  *(void *)(*(void *)&v35 + 8) = v48;
  *(void *)(*(void *)&v35 + 16) = v49;
  *(void *)(*(void *)&v35 + 24) = v51;
  *(double *)(*(void *)&v35 + 32) = v56;
  *(unsigned char *)(*(void *)&v35 + 40) = v58;
  *(unsigned char *)(*(void *)&v35 + 41) = v45;
  return result;
}

uint64_t sub_100057B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_1000A36B0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CEA98);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A36F0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000A36D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = sub_100004FDC(&qword_1000CEAA0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A3610();
  sub_1000A36E0();
  sub_1000A36A0();
  sub_1000A35C0();
  uint64_t v19 = sub_1000A3600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
  sub_1000A3680();
  sub_1000A3660();
  sub_1000A3630();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
  sub_1000A3640();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Calendar.Component.day(_:), v1);
  sub_1000A3670();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v20(v15, v9);
  uint64_t v21 = sub_1000A3560();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v18, 1, v21);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v18, v21);
  }
  __break(1u);
  return result;
}

uint64_t sub_100057F24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000A3560();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FDC(&qword_1000CEA90);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005E8EC(a2, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_10000A9C0((uint64_t)v15, &qword_1000CEA90);
    sub_10005E778(v2, (uint64_t)v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  }
  else
  {
    int v16 = v15[*(int *)(v9 + 20) + 16];
    sub_10005E890((uint64_t)v15);
    sub_10005E778(v2, (uint64_t)v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    if (v16 == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_10005E890((uint64_t)v12);
      goto LABEL_6;
    }
  }
  char v17 = sub_1000A34F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10005E890((uint64_t)v12);
  if ((v17 & 1) == 0) {
    return 4;
  }
LABEL_6:
  uint64_t v18 = sub_1000583EC();
  char v19 = sub_1000A3520();
  uint64_t v20 = v2 + *(int *)(v9 + 20);
  if ((v19 & 1) == 0)
  {
    if (*(unsigned char *)(v20 + 16) == 1) {
      return 2 * (v18 == 1);
    }
    return 4;
  }
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *(void *)(v20 + 8);
  if (v22 >= v21) {
    uint64_t v22 = v21;
  }
  if ((double)v22 / (double)v21 >= 1.0) {
    return 2 * (v18 == 1);
  }
  if (v18 == 1) {
    return 3;
  }
  else {
    return 1;
  }
}

void *sub_100058228(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v33 = _swiftEmptyArrayStorage;
    sub_10007AB2C(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v8 = *(void *)(sub_1000A3560() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v26 = *(void *)(v8 + 72);
    while (1)
    {
      a1(v28, v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v28[0];
      uint64_t v11 = v28[1];
      uint64_t v13 = v28[2];
      uint64_t v12 = v29;
      uint64_t v14 = v30;
      char v15 = v31;
      char v16 = v32;
      uint64_t v33 = v6;
      unint64_t v18 = v6[2];
      unint64_t v17 = v6[3];
      if (v18 >= v17 >> 1)
      {
        uint64_t v20 = v28[0];
        uint64_t v24 = v30;
        uint64_t v25 = v29;
        char v22 = v32;
        char v23 = v31;
        sub_10007AB2C(v17 > 1, v18 + 1, 1);
        char v16 = v22;
        char v15 = v23;
        uint64_t v14 = v24;
        uint64_t v12 = v25;
        uint64_t v10 = v20;
        uint64_t v6 = v33;
      }
      v6[2] = v18 + 1;
      char v19 = &v6[6 * v18];
      v19[4] = v10;
      v19[5] = v11;
      v19[6] = v13;
      v19[7] = v12;
      v19[8] = v14;
      *((unsigned char *)v19 + 72) = v15;
      *((unsigned char *)v19 + 73) = v16;
      v9 += v26;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t type metadata accessor for ViewModelFactory()
{
  return self;
}

uint64_t sub_1000583EC()
{
  uint64_t v0 = sub_1000A36B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FDC(&qword_1000CEA98);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A36F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A36D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - v13;
  sub_1000A3610();
  sub_1000A36E0();
  sub_1000A36A0();
  sub_1000A35C0();
  uint64_t v15 = sub_1000A3600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 0, 1, v15);
  sub_1000A3680();
  sub_1000A3660();
  sub_1000A3630();
  char v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  sub_1000A3640();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.weekday(_:), v0);
  uint64_t v17 = sub_1000A36C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v16(v14, v8);
  return v17;
}

uint64_t sub_1000586D8()
{
  uint64_t v0 = sub_1000A36B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.day(_:), v0);
  sub_1000A3670();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100058800(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_100004FDC(&qword_1000CEA98);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A36F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000A36D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = sub_1000583EC();
  sub_1000A3610();
  sub_1000A36E0();
  sub_1000A36A0();
  sub_1000A35C0();
  uint64_t v14 = sub_1000A3600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 0, 1, v14);
  sub_1000A3680();
  sub_1000A3660();
  sub_1000A3630();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  sub_1000A3640();
  uint64_t v16 = sub_1000A3630();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
  uint64_t v18 = v13 - v16;
  if (__OFSUB__(v13, v16))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v18 >= 0) {
    unint64_t v19 = v13 - v16;
  }
  else {
    unint64_t v19 = v18 + 7;
  }
  uint64_t result = a1(result);
  if ((v19 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v19 < *(void *)(result + 16))
  {
    uint64_t v20 = *(void *)(result + 16 * v19 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v20;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_100058A8C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  sub_10007AB0C(0, v6, 0);
  int64_t v27 = v6;
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  int64_t v31 = v5;
  unint64_t v28 = v4;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(a2 + 40);
    uint64_t v9 = (uint64_t *)(a1 + 40);
    unint64_t v10 = v4;
    while (v10)
    {
      if (!v5) {
        goto LABEL_26;
      }
      uint64_t v11 = *v9;
      uint64_t v12 = *v8;
      uint64_t v33 = *(v9 - 1);
      uint64_t v35 = *(v8 - 1);
      unint64_t v14 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v13 = *((void *)&_swiftEmptyArrayStorage + 3);
      int64_t v37 = v14 + 1;
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        uint64_t result = (void *)sub_10007AB0C(v13 > 1, v37, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v37;
      uint64_t v15 = (void *)((char *)&_swiftEmptyArrayStorage + 32 * v14);
      v15[4] = v33;
      v15[5] = v11;
      --v5;
      v15[6] = v35;
      v15[7] = v12;
      --v10;
      v8 += 2;
      v9 += 2;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
LABEL_13:
    if (v28 <= v31)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return &_swiftEmptyArrayStorage;
    }
    if (v27 <= v31) {
      int64_t v16 = v31;
    }
    else {
      int64_t v16 = v27;
    }
    int64_t v17 = v16 - v27;
    unint64_t v18 = v28 - v27;
    int64_t v19 = v31 - v27;
    uint64_t v32 = 16 * v27;
    uint64_t v21 = v29;
    uint64_t v20 = v30;
    while (v18)
    {
      if (!v19) {
        goto LABEL_24;
      }
      if (!v17) {
        goto LABEL_28;
      }
      uint64_t v22 = *(void *)(v20 + v32 + 40);
      uint64_t v23 = *(void *)(v21 + v32 + 40);
      uint64_t v34 = *(void *)(v20 + v32 + 32);
      uint64_t v36 = *(void *)(v21 + v32 + 32);
      unint64_t v25 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v24 = *((void *)&_swiftEmptyArrayStorage + 3);
      int64_t v38 = v25 + 1;
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v25 >= v24 >> 1) {
        uint64_t result = (void *)sub_10007AB0C(v24 > 1, v38, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v38;
      uint64_t v26 = (void *)((char *)&_swiftEmptyArrayStorage + 32 * v25);
      v26[4] = v34;
      v26[5] = v22;
      --v17;
      v26[6] = v36;
      v26[7] = v23;
      --v19;
      v20 += 16;
      v21 += 16;
      if (!--v18) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100058CE4(uint64_t a1)
{
  sub_10007AB2C(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v3 - 3);
      uint64_t v4 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v7 = *v3;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_10007AB2C(v8 > 1, v9 + 1, 1);
      }
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      unint64_t v10 = &_swiftEmptyArrayStorage[6 * v9];
      v10[4] = v5;
      v10[5] = v4;
      _OWORD v10[6] = v6;
      v10[7] = v7;
      v10[8] = 1;
      *((_WORD *)v10 + 36) = 1025;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100058DF4()
{
  uint64_t v0 = sub_1000A3830();
  sub_100010E40(v0, qword_1000CE9C0);
  sub_100010B3C(v0, (uint64_t)qword_1000CE9C0);
  return sub_1000A3820();
}

char *sub_100058E74(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004FDC(&qword_1000CCB98);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      unint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10005B734(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100058F84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004FDC(&qword_1000CCE38);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10005D45C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000590AC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004FDC(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000A4620();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10005D550(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_10005932C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_100004FDC(&qword_1000CCB98);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)sub_1000A4660();
  __break(1u);
  return result;
}

unint64_t sub_1000594A0(uint64_t a1)
{
  sub_1000A3560();
  sub_10005E95C(&qword_1000CEA88, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = sub_1000A4240();

  return sub_100059818(a1, v2);
}

unint64_t sub_10005953C(char a1)
{
  sub_1000A4740();
  sub_1000A4370();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000A4780();

  return sub_1000599D8(a1 & 1, v2);
}

unint64_t sub_1000595D4(char a1)
{
  sub_1000A4740();
  sub_1000A4370();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000A4780();
  return sub_100059B04(a1 & 1, v2);
}

unint64_t sub_10005967C(char a1)
{
  sub_1000A4740();
  sub_10006AF34(a1);
  sub_1000A4370();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000A4780();

  return sub_100059C4C(a1, v2);
}

unint64_t sub_100059704(char a1)
{
  sub_1000A4740();
  sub_1000A4370();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000A4780();

  return sub_10005A254(a1 & 1, v2);
}

unint64_t sub_1000597A0(uint64_t a1, uint64_t a2)
{
  sub_1000A4740();
  sub_1000A4370();
  Swift::Int v4 = sub_1000A4780();

  return sub_10005A388(a1, a2, v4);
}

unint64_t sub_100059818(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1000A3560();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_10005E95C(&qword_1000CEAB8, (void (*)(uint64_t))&type metadata accessor for Date);
      char v15 = sub_1000A4270();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1000599D8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 6710384;
    }
    else {
      uint64_t v6 = 1802465122;
    }
    if (a1) {
      unint64_t v7 = 0xE300000000000000;
    }
    else {
      unint64_t v7 = 0xE400000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 6710384 : 1802465122;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE300000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1000A46A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_100059B04(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x6369666963657073;
    }
    else {
      uint64_t v6 = 0x6563655274736F6DLL;
    }
    if (a1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xEA0000000000746ELL;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x6369666963657073 : 0x6563655274736F6DLL;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xEA0000000000746ELL;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1000A46A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_100059C4C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD000000000000015;
      unint64_t v8 = 0x80000001000A4F10;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x6D49747265766E69;
          unint64_t v8 = 0xEC00000073656761;
          break;
        case 2:
          unint64_t v8 = 0xEA00000000007466;
          unint64_t v7 = 0x654C6E4F756E656DLL;
          break;
        case 3:
          unint64_t v7 = 0x47676E6964616572;
          unint64_t v8 = 0xEC000000736C616FLL;
          break;
        case 4:
          break;
        case 5:
          unint64_t v7 = 0xD000000000000012;
          unint64_t v8 = 0x80000001000A4F30;
          break;
        case 6:
          unint64_t v8 = 0xE700000000000000;
          unint64_t v7 = 0x676E69636E7973;
          break;
        case 7:
          unint64_t v8 = 0xE900000000000067;
          unint64_t v7 = 0x6E69686372616573;
          break;
        case 8:
          unint64_t v7 = 0x6F6F626F69647561;
          unint64_t v8 = 0xEA0000000000736BLL;
          break;
        case 9:
          unint64_t v7 = 0x77726F4670696B73;
          unint64_t v8 = 0xEB00000000647261;
          break;
        case 0xA:
          unint64_t v7 = 0x6B63614270696B73;
          unint64_t v8 = 0xEC00000064726177;
          break;
        case 0xB:
          unint64_t v9 = "skipForward";
          goto LABEL_21;
        case 0xC:
          unint64_t v8 = 0xE700000000000000;
          unint64_t v7 = 0x79636176697270;
          break;
        case 0xD:
          unint64_t v8 = 0xE400000000000000;
          unint64_t v7 = 1701670760;
          break;
        case 0xE:
          unint64_t v7 = 0x74616E6568707968;
          unint64_t v8 = 0xEB000000006E6F69;
          break;
        case 0xF:
          unint64_t v7 = 0xD000000000000012;
          unint64_t v8 = 0x80000001000A4FB0;
          break;
        case 0x10:
          unint64_t v7 = 0x726F74536B6F6F62;
          unint64_t v8 = 0xE900000000000065;
          break;
        case 0x11:
          unint64_t v9 = "bothMarginsAdvance";
LABEL_21:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v7 = 0xD000000000000010;
          break;
        case 0x12:
          unint64_t v7 = 0x6564497465736572;
          unint64_t v8 = 0xEF7265696669746ELL;
          break;
        default:
          unint64_t v8 = 0xE400000000000000;
          unint64_t v7 = 1953460082;
          break;
      }
      unint64_t v10 = 0xD000000000000015;
      unint64_t v11 = 0x80000001000A4F10;
      switch(v6)
      {
        case 1:
          uint64_t v12 = 0x6D49747265766E69;
          uint64_t v13 = 1936025441;
          goto LABEL_39;
        case 2:
          unint64_t v11 = 0xEA00000000007466;
          if (v7 != 0x654C6E4F756E656DLL) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 3:
          uint64_t v12 = 0x47676E6964616572;
          uint64_t v13 = 1936482671;
          goto LABEL_39;
        case 4:
          goto LABEL_56;
        case 5:
          uint64_t v14 = "clearReadingGoalsData";
          goto LABEL_50;
        case 6:
          unint64_t v11 = 0xE700000000000000;
          if (v7 != 0x676E69636E7973) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 7:
          unint64_t v11 = 0xE900000000000067;
          if (v7 != 0x6E69686372616573) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 8:
          unint64_t v11 = 0xEA0000000000736BLL;
          if (v7 != 0x6F6F626F69647561) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 9:
          uint64_t v15 = 0x77726F4670696B73;
          uint64_t v16 = 6582881;
          goto LABEL_47;
        case 10:
          uint64_t v12 = 0x6B63614270696B73;
          uint64_t v13 = 1685217655;
LABEL_39:
          unint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v7 != v12) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 11:
          uint64_t v17 = "skipForward";
          goto LABEL_55;
        case 12:
          unint64_t v11 = 0xE700000000000000;
          if (v7 != 0x79636176697270) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 13:
          unint64_t v11 = 0xE400000000000000;
          if (v7 != 1701670760) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 14:
          uint64_t v15 = 0x74616E6568707968;
          uint64_t v16 = 7237481;
LABEL_47:
          unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          if (v7 != v15) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 15:
          uint64_t v14 = "";
LABEL_50:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          if (v7 != 0xD000000000000012) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 16:
          unint64_t v11 = 0xE900000000000065;
          if (v7 != 0x726F74536B6F6F62) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 17:
          uint64_t v17 = "bothMarginsAdvance";
LABEL_55:
          unint64_t v11 = (unint64_t)v17 | 0x8000000000000000;
          unint64_t v10 = 0xD000000000000010;
LABEL_56:
          if (v7 == v10) {
            goto LABEL_57;
          }
          goto LABEL_58;
        case 18:
          unint64_t v11 = 0xEF7265696669746ELL;
          if (v7 != 0x6564497465736572) {
            goto LABEL_58;
          }
          goto LABEL_57;
        default:
          unint64_t v11 = 0xE400000000000000;
          if (v7 != 1953460082) {
            goto LABEL_58;
          }
LABEL_57:
          if (v8 == v11)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v4;
          }
LABEL_58:
          char v18 = sub_1000A46A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10005A254(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x7468676972;
    }
    else {
      uint64_t v6 = 1952867692;
    }
    if (a1) {
      unint64_t v7 = 0xE500000000000000;
    }
    else {
      unint64_t v7 = 0xE400000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x7468676972 : 1952867692;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE500000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1000A46A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_10005A388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000A46A0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000A46A0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10005A46C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A3560();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100004FDC(&qword_1000CEAB0);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1000A4640();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  uint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    uint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    uint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10005E7DC(v32 + v33 * v24, v54);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10005E778(v34 + v33 * v24, v54);
    }
    sub_10005E95C(&qword_1000CEA88, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_1000A4240();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_10005E7DC(v54, *(void *)(v13 + 56) + v33 * v22);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_10005A948(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1000A3560();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100004FDC(&qword_1000CEA80);
  int v46 = a2;
  uint64_t v10 = sub_1000A4640();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_10005E95C(&qword_1000CEA88, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_1000A4240();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_10005AD6C(uint64_t result)
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = v3 >> 1;
  if ((v3 & 1) == 0 || (uint64_t result = swift_isUniquelyReferenced_nonNull(), *(void *)v1 = v4, (result & 1) == 0))
  {
    uint64_t v9 = v4;
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v8 = *(void *)(v1 + 8);
  sub_1000A46B0();
  swift_unknownObjectRetain();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v9 = *(void **)(result + 16);
  if (v8 + 16 * v6 + 16 * v7 == result + 16 * (void)v9 + 32) {
    goto LABEL_31;
  }
  uint64_t result = swift_release();
  while (1)
  {
    if (v7 >= v2) {
      goto LABEL_28;
    }
    uint64_t v9 = *(void **)v1;
LABEL_9:
    uint64_t v10 = *(void *)(v1 + 16);
    uint64_t v7 = v5 - v10;
    if (__OFSUB__(v5, v10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v11 = *(void *)(v1 + 8);
    if (v7 <= v2 ? v2 : v5 - v10) {
      break;
    }
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (v5 >= v10) {
      goto LABEL_17;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    unint64_t v19 = *(void *)(result + 24);
    uint64_t result = swift_release();
    unint64_t v20 = (v19 >> 1) - (void)v9;
    BOOL v21 = __OFADD__(v7, v20);
    v7 += v20;
    if (v21) {
      goto LABEL_40;
    }
  }
  sub_100004FDC(&qword_1000CCB98);
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v4);
  uint64_t v13 = result - 32;
  if (result < 32) {
    uint64_t v13 = result - 17;
  }
  v4[2] = v7;
  v4[3] = 2 * (v13 >> 4);
  if (v5 < v10) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v14 = (unint64_t)(v4 + 4);
    unint64_t v15 = v11 + 16 * v10;
    if (v15 >= (unint64_t)&v4[2 * v7 + 4] || v14 >= v15 + 16 * v7)
    {
      swift_arrayInitWithCopy();
      if (!__OFSUB__(0, v10))
      {
        uint64_t v17 = v4[2];
        uint64_t v18 = v10 + v17;
        if (!__OFADD__(v10, v17))
        {
          if (v18 >= v10)
          {
            uint64_t result = swift_unknownObjectRelease();
            if ((v18 & 0x8000000000000000) == 0)
            {
              *(void *)(v1 + 8) = v14 - 16 * v10;
              *(void *)(v1 + 16) = v10;
              *(void *)(v1 + 24) = (2 * v18) | 1;
LABEL_28:
              *(void *)uint64_t v1 = v4;
              return result;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
LABEL_41:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10005AFE8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  uint64_t v7 = (void *)(v6 - v5);
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v15 = (char *)v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v32 = &v15[-v14];
  if (__OFSUB__(v15, v14))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  __dst = (char *)(v9 + 32);
  uint64_t v16 = v9 + 32 + 16 * a2;
  uint64_t v17 = sub_10005B5C4(v7);
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v29 = (char *)(v16 + 16 * a3);
    uint64_t v30 = v9;
    uint64_t v19 = v4[2];
    unint64_t v20 = (char *)(v4[1] + 16 * v19);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_43;
    }
    BOOL v21 = &v20[16 * a2];
    if (__dst != v20 || __dst >= v21) {
      memmove(__dst, v20, 16 * a2);
    }
    swift_arrayDestroy();
    a4(v16, a3);
    if (v14 < 0) {
      goto LABEL_43;
    }
    unint64_t v22 = &v21[16 * (void)v32];
    if (v29 != v22 || v29 >= &v22[16 * v14]) {
      memmove(v29, v22, 16 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v18 + 16) = 0;
    swift_release();
    uint64_t v9 = v30;
LABEL_23:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v19))
    {
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v19, v27);
      uint64_t v28 = v19 + v27;
      if (!v11)
      {
        if (v28 >= v19)
        {
          if ((v28 & 0x8000000000000000) == 0)
          {
            *uint64_t v4 = v9;
            v4[1] = &__dst[-16 * v19];
            v4[2] = v19;
            v4[3] = (2 * v28) | 1;
            return result;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v19 = v4[2];
  uint64_t v23 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v23 < v19)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (__OFSUB__(v23, v19))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[16 * a2], a3);
  int64_t v24 = &v32[v23];
  if (__OFADD__(v23, v32))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v25 = (char *)(v4[3] >> 1);
  if ((uint64_t)v25 < (uint64_t)v24)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!__OFSUB__(v25, v24))
  {
    swift_arrayInitWithCopy();
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

void *sub_10005B2EC(void *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = (char *)result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  sub_1000A46B0();
  swift_unknownObjectRetain();
  uint64_t result = (void *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = result[2];
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = &v7[v8];
  if (v5) {
    goto LABEL_13;
  }
  result[2] = v9;
  uint64_t result = (void *)swift_release();
  uint64_t v10 = &v7[v4];
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * (void)v10);
  return result;
}

void *sub_10005B3A4(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_34;
  }
  sub_1000A46B0();
  swift_unknownObjectRetain();
  BOOL v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    BOOL v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  uint64_t v13 = a4 + 16 * a5 + 16 * v8;
  if ((void *)v13 == &v11[2 * v12 + 4])
  {
    unint64_t v15 = v11[3];
    uint64_t result = (void *)swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = (void *)swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    if ((void *)v13 == &v17[2 * v18 + 4])
    {
      unint64_t v20 = v17[3];
      uint64_t result = (void *)swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t result = (void *)swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v19 = v17[2];
  if ((void *)v13 == &v17[2 * v19 + 4])
  {
    unint64_t v23 = v17[3];
    uint64_t result = (void *)swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= (uint64_t)v6) {
    unint64_t v26 = v6;
  }
  else {
    unint64_t v26 = (void *)v25;
  }
  if (!v26) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004FDC(&qword_1000CCB98);
  uint64_t v27 = (void *)swift_allocObject();
  int64_t v28 = j__malloc_size(v27);
  uint64_t v29 = v28 - 32;
  if (v28 < 32) {
    uint64_t v29 = v28 - 17;
  }
  void v27[2] = v6;
  void v27[3] = 2 * (v29 >> 4);
  return v27;
}

uint64_t (*sub_10005B5A8())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t sub_10005B5C4(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1000A46B0();
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)(v8 + 16 * v6 + 16 * v7) != &v9[2 * v10 + 4])
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = v9[3];
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < (uint64_t)a1) {
      return 0;
    }
    sub_1000A46B0();
    swift_unknownObjectRetain();
    a1 = (void *)swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = _swiftEmptyArrayStorage;
    }
    uint64_t v16 = v8 + 16 * v6 - (void)a1;
    uint64_t v17 = v16 - 32;
    uint64_t v18 = v16 - 17;
    if (v17 >= 0) {
      uint64_t v18 = v17;
    }
    uint64_t isUniquelyReferenced_nonNull = v7 + (v18 >> 4);
    if (!__OFADD__(v7, v18 >> 4))
    {
      uint64_t v4 = a1[2];
      if (isUniquelyReferenced_nonNull >= v4) {
        return (uint64_t)a1;
      }
LABEL_21:
      sub_10005B828(isUniquelyReferenced_nonNull, v4, 0);
      return (uint64_t)a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005B734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

char *sub_10005B828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 16 * a1;
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v11) {
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_18;
  }
  if (v13 < 0)
  {
LABEL_21:
    uint64_t result = (char *)sub_1000A4660();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 16 * a3);
  uint64_t v14 = (char *)(v7 + 32 + 16 * a2);
  if (result != v14 || result >= &v14[16 * v13]) {
    uint64_t result = (char *)memmove(result, v14, 16 * v13);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_19;
  }
  *(void *)(v7 + 16) = v17;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

void *sub_10005B93C(void *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24) >> 1;
  uint64_t v4 = v3 - v2;
  if (__OFSUB__(v3, v2)) {
    goto LABEL_54;
  }
  uint64_t v5 = result[4];
  uint64_t v6 = result[3] >> 1;
  if (v5 == v6) {
    return result;
  }
  uint64_t v39 = result[2];
  BOOL v7 = v5 >= v39 && v5 < v6;
  if (!v7) {
    goto LABEL_55;
  }
  uint64_t v8 = v5 + 1;
  uint64_t v34 = result[1];
  uint64_t v9 = (uint64_t *)(v34 + 16 * v5);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t result = (void *)swift_bridgeObjectRetain();
  uint64_t v35 = v6;
  while (1)
  {
    uint64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    uint64_t v13 = v10;
    BOOL v40 = sub_10005B3A4((void *)v4, v4 + 1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
    uint64_t v14 = sub_10005B5A8();
    sub_10005AFE8((uint64_t *)&v40, v4, 0, (void (*)(uint64_t, uint64_t))v14);
    swift_release();
    uint64_t result = (void *)swift_release();
    uint64_t v16 = *(void *)(v1 + 16);
    unint64_t v15 = *(void *)(v1 + 24);
    uint64_t v17 = (v15 >> 1) - v16;
    if (__OFSUB__(v15 >> 1, v16)) {
      goto LABEL_49;
    }
    uint64_t v36 = *(void *)(v1 + 24);
    unint64_t v37 = v15 >> 1;
    uint64_t v38 = *(void *)(v1 + 8);
    if ((v15 & 1) == 0) {
      goto LABEL_19;
    }
    sub_1000A46B0();
    swift_unknownObjectRetain();
    uint64_t v18 = (void *)swift_dynamicCastClass();
    if (!v18)
    {
      swift_unknownObjectRelease();
      uint64_t v18 = _swiftEmptyArrayStorage;
    }
    uint64_t v19 = v18[2];
    if ((void *)(v38 + 16 * v16 + 16 * v17) != &v18[2 * v19 + 4])
    {
      uint64_t result = (void *)swift_release();
LABEL_19:
      uint64_t v20 = v17;
      goto LABEL_21;
    }
    unint64_t v21 = v18[3];
    uint64_t result = (void *)swift_release();
    uint64_t v22 = (v21 >> 1) - v19;
    uint64_t v20 = v17 + v22;
    if (__OFADD__(v17, v22)) {
      goto LABEL_53;
    }
LABEL_21:
    if (v4 >= v20)
    {
      uint64_t v10 = v13;
      uint64_t v24 = v4 - v17;
      if (__OFSUB__(v4, v17)) {
        goto LABEL_50;
      }
    }
    else
    {
      unint64_t v23 = (void *)(v38 + 16 * v16 + 16 * v4);
      *unint64_t v23 = v11;
      v23[1] = v13;
      if (v8 == v35)
      {
        uint64_t v11 = 0;
        uint64_t v10 = 0;
        ++v4;
        uint64_t v8 = v35;
        uint64_t v24 = v12 - v17;
        if (__OFSUB__(v12, v17)) {
          goto LABEL_50;
        }
      }
      else
      {
        if (v8 < v39 || v8 >= v35) {
          goto LABEL_47;
        }
        uint64_t v25 = 0;
        uint64_t v26 = v38 + 16 * v4 + 16 * v16;
        uint64_t v27 = v34 + 16 * v8++;
        while (1)
        {
          uint64_t v11 = *(void *)(v27 + v25);
          uint64_t v28 = *(void *)(v27 + v25 + 8);
          if (v20 == v12)
          {
            uint64_t v10 = *(void *)(v27 + v25 + 8);
            goto LABEL_39;
          }
          uint64_t v29 = v26 + v25;
          *(void *)(v29 + 16) = v11;
          *(void *)(v29 + 24) = v28;
          if (v35 == v8) {
            break;
          }
          uint64_t result = (void *)swift_bridgeObjectRetain();
          if (v8 >= v39)
          {
            v25 += 16;
            ++v12;
            BOOL v7 = v8++ < v35;
            if (v7) {
              continue;
            }
          }
          goto LABEL_47;
        }
        uint64_t v11 = 0;
        uint64_t v10 = 0;
        uint64_t v20 = v12 + 1;
        uint64_t v8 = v35;
LABEL_39:
        uint64_t result = (void *)swift_bridgeObjectRetain();
        uint64_t v4 = v20;
        uint64_t v24 = v20 - v17;
        if (__OFSUB__(v20, v17)) {
          goto LABEL_50;
        }
      }
    }
    if (v24)
    {
      sub_1000A46B0();
      swift_unknownObjectRetain();
      uint64_t result = (void *)swift_dynamicCastClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        uint64_t result = _swiftEmptyArrayStorage;
      }
      uint64_t v30 = result[2];
      BOOL v31 = __OFADD__(v30, v24);
      uint64_t v32 = v30 + v24;
      if (v31) {
        goto LABEL_51;
      }
      result[2] = v32;
      uint64_t result = (void *)swift_release();
      unint64_t v33 = v37 + v24;
      if (__OFADD__(v37, v24)) {
        goto LABEL_52;
      }
      if ((v33 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_47:
        __break(1u);
        break;
      }
      *(void *)(v1 + 24) = v36 & 1 | (2 * v33);
    }
    if (!v10) {
      return result;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

void *sub_10005BC58(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v8 = v4[2];
  unint64_t v7 = v4[3];
  uint64_t v9 = (v7 >> 1) - v8;
  if (__OFSUB__(v7 >> 1, v8))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((v7 & 1) == 0)
  {
LABEL_8:
    uint64_t v15 = v9;
    goto LABEL_10;
  }
  uint64_t v12 = v4[1];
  sub_1000A46B0();
  swift_unknownObjectRetain();
  uint64_t v13 = (void *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v13[2];
  if ((void *)(v12 + 16 * v8 + 16 * v9) != &v13[2 * v14 + 4])
  {
    swift_release();
    goto LABEL_8;
  }
  unint64_t v16 = v13[3];
  swift_release();
  uint64_t v17 = (v16 >> 1) - v14;
  BOOL v18 = __OFADD__(v9, v17);
  uint64_t v15 = v9 + v17;
  if (v18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_10:
  uint64_t v19 = v9 + v6;
  if (__OFADD__(v9, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v15 < v19)
  {
    if (v15 + 0x4000000000000000 < 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v20 = 2 * v15;
    if (v20 > v19) {
      uint64_t v19 = v20;
    }
  }
  uint64_t result = (void *)sub_10005AD6C(v19);
  uint64_t v23 = v4[2];
  unint64_t v22 = v4[3];
  uint64_t v24 = (v22 >> 1) - v23;
  if (__OFSUB__(v22 >> 1, v23)) {
    goto LABEL_40;
  }
  unint64_t v25 = v4[1] + 16 * v23 + 16 * v24;
  if ((v22 & 1) == 0)
  {
LABEL_21:
    uint64_t v28 = v24;
    goto LABEL_23;
  }
  sub_1000A46B0();
  swift_unknownObjectRetain();
  uint64_t v26 = (void *)swift_dynamicCastClass();
  if (!v26)
  {
    swift_unknownObjectRelease();
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  uint64_t v27 = v26[2];
  if ((void *)v25 != &v26[2 * v27 + 4])
  {
    uint64_t result = (void *)swift_release();
    goto LABEL_21;
  }
  unint64_t v29 = v26[3];
  uint64_t result = (void *)swift_release();
  uint64_t v30 = (v29 >> 1) - v27;
  BOOL v18 = __OFADD__(v24, v30);
  uint64_t v28 = v24 + v30;
  if (v18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_23:
  uint64_t v31 = v28 - v24;
  if (__OFSUB__(v28, v24))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
      uint64_t v6 = 0;
      unint64_t v5 = a3;
      goto LABEL_34;
    }
    goto LABEL_42;
  }
  if (v31 < v6)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6 < 0) {
    goto LABEL_48;
  }
  unint64_t v32 = a2 + 16 * a3;
  if (v32 < v25 + 16 * v6 && v25 < v32 + 16 * v6) {
    goto LABEL_48;
  }
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (v6)
  {
    if (__OFADD__(v24, v6))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      uint64_t result = (void *)sub_1000A4660();
      __break(1u);
      return result;
    }
    uint64_t result = sub_10005B2EC((void *)(v24 + v6));
  }
LABEL_34:
  if (v6 == v31)
  {
    v35[0] = a1;
    v35[1] = a2;
    _OWORD v35[2] = a3;
    v35[3] = a4;
    v35[4] = v5;
    return sub_10005B93C(v35);
  }
  return result;
}

void *sub_10005BF40()
{
  uint64_t v0 = sub_1000A3600();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000A42F0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (unint64_t)&v51 - v8;
  uint64_t v10 = sub_1000A36D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A3660();
  uint64_t v14 = sub_1000A3630();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (__OFSUB__(v14, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v55 = v14 - 1;
  sub_100004FDC(&qword_1000CCB98);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000AAE00;
  sub_1000A4280();
  unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v16(v7, v9, v3);
  uint64_t v53 = v2;
  sub_1000A35D0();
  uint64_t v17 = sub_1000A4350();
  uint64_t v19 = v18;
  CFURLRef v57 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v57(v9, v3);
  *(void *)(v15 + 32) = v17;
  uint64_t v52 = v15 + 32;
  *(void *)(v15 + 40) = v19;
  sub_1000A4280();
  v16(v7, v9, v3);
  uint64_t v56 = v4 + 16;
  sub_1000A35D0();
  uint64_t v20 = sub_1000A4350();
  uint64_t v22 = v21;
  v57(v9, v3);
  *(void *)(v15 + 48) = v20;
  *(void *)(v15 + 56) = v22;
  sub_1000A4280();
  v16(v7, v9, v3);
  uint64_t v23 = v16;
  sub_1000A35D0();
  uint64_t v24 = sub_1000A4350();
  uint64_t v26 = v25;
  uint64_t v27 = v57;
  v57(v9, v3);
  uint64_t v54 = (char *)(v4 + 8);
  *(void *)(v15 + 64) = v24;
  *(void *)(v15 + 72) = v26;
  sub_1000A4280();
  v23(v7, v9, v3);
  sub_1000A35D0();
  uint64_t v28 = sub_1000A4350();
  uint64_t v30 = v29;
  v27(v9, v3);
  *(void *)(v15 + 80) = v28;
  *(void *)(v15 + 88) = v30;
  sub_1000A4280();
  v23(v7, v9, v3);
  sub_1000A35D0();
  uint64_t v31 = sub_1000A4350();
  uint64_t v33 = v32;
  uint64_t v34 = v3;
  uint64_t v35 = v3;
  uint64_t v36 = v54;
  unint64_t v37 = v57;
  v57(v9, v35);
  *(void *)(v15 + 96) = v31;
  *(void *)(v15 + 104) = v33;
  sub_1000A4280();
  v23(v7, v9, v34);
  sub_1000A35D0();
  uint64_t v38 = sub_1000A4350();
  uint64_t v40 = v39;
  v37(v9, v34);
  uint64_t v2 = v36;
  *(void *)(v15 + 112) = v38;
  *(void *)(v15 + 120) = v40;
  sub_1000A4280();
  v23(v7, v9, v34);
  sub_1000A35D0();
  uint64_t v3 = sub_1000A4350();
  uint64_t v13 = v41;
  v57(v9, v34);
  uint64_t v42 = v55;
  *(void *)(v15 + 128) = v3;
  *(void *)(v15 + 136) = v13;
  uint64_t v43 = *(void *)(v15 + 16);
  if (v43 < v42)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v42 < 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v44 = v52;
  uint64_t v58 = v15;
  uint64_t v59 = (char *)v52;
  unint64_t v45 = (2 * v42) | 1;
  uint64_t v60 = (char *)v42;
  uint64_t v61 = (2 * v43) | 1;
  uint64_t v46 = swift_bridgeObjectRetain();
  sub_10005BC58(v46, v44, 0, v45);
  swift_bridgeObjectRelease();
  uint64_t v3 = v58;
  uint64_t v13 = v59;
  uint64_t v2 = v60;
  unint64_t v9 = v61;
  if ((v61 & 1) == 0)
  {
LABEL_5:
    uint64_t v47 = sub_10005932C(v3, (uint64_t)v13, (uint64_t)v2, v9);
    goto LABEL_12;
  }
  sub_1000A46B0();
  swift_unknownObjectRetain_n();
  uint64_t v48 = (void *)swift_dynamicCastClass();
  if (!v48)
  {
    swift_unknownObjectRelease();
    uint64_t v48 = _swiftEmptyArrayStorage;
  }
  uint64_t v49 = v48[2];
  swift_release();
  if (__OFSUB__(v9 >> 1, v2)) {
    goto LABEL_16;
  }
  if (v49 != (v9 >> 1) - (void)v2)
  {
LABEL_17:
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v47 = (void *)swift_dynamicCastClass();
  if (!v47)
  {
    swift_unknownObjectRelease();
    uint64_t v47 = _swiftEmptyArrayStorage;
  }
LABEL_12:
  swift_unknownObjectRelease();
  return v47;
}

void *sub_10005C6CC()
{
  unint64_t v0 = sub_1000A3600();
  uint64_t v105 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v89 - v4;
  uint64_t v6 = sub_1000A42F0();
  uint64_t v106 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v89 - v10;
  uint64_t v12 = sub_1000A36D0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A3660();
  uint64_t v16 = sub_1000A3630();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v91 = v16 - 1;
  sub_100004FDC(&qword_1000CCB98);
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_1000AAE00;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  uint64_t v95 = v106 + 16;
  char v103 = v17;
  v17(v9, v11, v6);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v96 = ObjCClassFromMetadata;
  id v101 = self;
  id v19 = [v101 bundleForClass:ObjCClassFromMetadata];
  uint64_t v20 = v105;
  unint64_t v21 = v0;
  uint64_t v22 = v9;
  uint64_t v23 = *(void (**)(void, void))(v105 + 16);
  uint64_t v102 = v105 + 16;
  uint64_t v100 = (void (*)(char *, char *, unint64_t))v23;
  unint64_t v24 = v21;
  unint64_t v98 = v21;
  v23(v3, v5);
  uint64_t v25 = sub_1000A4360();
  uint64_t v27 = v26;
  char v104 = *(void (**)(char *, unint64_t))(v20 + 8);
  uint64_t v105 = v20 + 8;
  v104(v5, v24);
  uint64_t v97 = *(void (**)(char *, uint64_t))(v106 + 8);
  v106 += 8;
  uint64_t v93 = v6;
  v97(v11, v6);
  uint64_t v28 = v99;
  uint64_t v29 = v99;
  *(void *)(v99 + 32) = v25;
  uint64_t v89 = v29 + 32;
  *(void *)(v28 + 40) = v27;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v30 = v22;
  v103(v22, v11, v6);
  Swift::String v90 = v11;
  uint64_t v31 = v96;
  id v32 = [v101 bundleForClass:v96];
  os_log_type_t v94 = v3;
  uint64_t v33 = v3;
  unint64_t v34 = v98;
  uint64_t v35 = v100;
  v100(v33, v5, v98);
  uint64_t v36 = sub_1000A4360();
  uint64_t v38 = v37;
  v104(v5, v34);
  uint64_t v39 = v90;
  uint64_t v40 = v93;
  int64_t v41 = v97;
  v97(v90, v93);
  uint64_t v42 = v99;
  *(void *)(v99 + 48) = v36;
  *(void *)(v42 + 56) = v38;
  sub_1000A4280();
  sub_1000A35D0();
  v103(v30, v39, v40);
  id v43 = [v101 bundleForClass:v31];
  uint64_t v44 = v94;
  unint64_t v45 = v98;
  v35(v94, v5, v98);
  uint64_t v46 = v44;
  uint64_t v47 = sub_1000A4360();
  uint64_t v49 = v48;
  v104(v5, v45);
  v41(v39, v40);
  uint64_t v50 = v99;
  *(void *)(v99 + 64) = v47;
  *(void *)(v50 + 72) = v49;
  sub_1000A4280();
  sub_1000A35D0();
  unint64_t v92 = v30;
  uint64_t v51 = v39;
  v103(v30, v39, v40);
  id v52 = [v101 bundleForClass:v96];
  uint64_t v53 = v46;
  uint64_t v54 = v46;
  unint64_t v55 = v98;
  v100(v54, v5, v98);
  uint64_t v56 = v53;
  uint64_t v57 = sub_1000A4360();
  uint64_t v59 = v58;
  v104(v5, v55);
  unint64_t v9 = v51;
  uint64_t v60 = v93;
  v97(v51, v93);
  uint64_t v61 = (void *)v99;
  *(void *)(v99 + 80) = v57;
  v61[11] = v59;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v62 = v92;
  v103(v92, v51, v60);
  uint64_t v63 = v96;
  id v64 = [v101 bundleForClass:v96];
  unint64_t v65 = v98;
  v100(v56, v5, v98);
  uint64_t v66 = v62;
  uint64_t v67 = sub_1000A4360();
  uint64_t v69 = v68;
  v104(v5, v65);
  v97(v51, v60);
  v61[12] = v67;
  v61[13] = v69;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v70 = v60;
  v103(v66, v51, v60);
  id v71 = [v101 bundleForClass:v63];
  unint64_t v72 = v94;
  unint64_t v73 = v98;
  v100(v94, v5, v98);
  uint64_t v74 = sub_1000A4360();
  uint64_t v76 = v75;
  v104(v5, v73);
  unint64_t v0 = (unint64_t)v97;
  v97(v51, v70);
  uint64_t v11 = (char *)v99;
  *(void *)(v99 + 112) = v74;
  *((void *)v11 + 15) = v76;
  sub_1000A4280();
  sub_1000A35D0();
  v103(v92, v9, v70);
  id v77 = [v101 bundleForClass:v96];
  v100(v72, v5, v73);
  uint64_t v15 = (char *)sub_1000A4360();
  uint64_t v79 = v78;
  v104(v5, v73);
  ((void (*)(char *, uint64_t))v0)(v9, v70);
  uint64_t v80 = v91;
  *((void *)v11 + 16) = v15;
  *((void *)v11 + 17) = v79;
  uint64_t v81 = *((void *)v11 + 2);
  if (v81 < v80)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v0 = (unint64_t)v11;
  if (v80 < 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v82 = v89;
  uint64_t v107 = (char *)v0;
  uint64_t v108 = (char *)v89;
  unint64_t v83 = (2 * v80) | 1;
  uint64_t v109 = (char *)v80;
  uint64_t v110 = (2 * v81) | 1;
  uint64_t v84 = swift_bridgeObjectRetain();
  sub_10005BC58(v84, v82, 0, v83);
  swift_bridgeObjectRelease();
  unint64_t v9 = v107;
  uint64_t v15 = v108;
  uint64_t v11 = v109;
  unint64_t v0 = v110;
  if ((v110 & 1) == 0)
  {
LABEL_5:
    uint64_t v85 = sub_10005932C((uint64_t)v9, (uint64_t)v15, (uint64_t)v11, v0);
    goto LABEL_12;
  }
  sub_1000A46B0();
  swift_unknownObjectRetain_n();
  unint64_t v86 = (void *)swift_dynamicCastClass();
  if (!v86)
  {
    swift_unknownObjectRelease();
    unint64_t v86 = _swiftEmptyArrayStorage;
  }
  uint64_t v87 = v86[2];
  swift_release();
  if (__OFSUB__(v0 >> 1, v11)) {
    goto LABEL_16;
  }
  if (v87 != (v0 >> 1) - (void)v11)
  {
LABEL_17:
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v85 = (void *)swift_dynamicCastClass();
  if (!v85)
  {
    swift_unknownObjectRelease();
    uint64_t v85 = _swiftEmptyArrayStorage;
  }
LABEL_12:
  swift_unknownObjectRelease();
  return v85;
}

char *sub_10005D178@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1000A3560();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000569F4();
  uint64_t result = (char *)sub_1000583EC();
  uint64_t v7 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = v5;
    uint64_t v30 = v3;
    uint64_t v31 = v2;
    uint64_t v8 = sub_10005BF40();
    unint64_t v9 = sub_10005C6CC();
    uint64_t v10 = sub_100058A8C((uint64_t)v8, (uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28[0] = v28;
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_10007AB2C(0, 0, 0);
    uint64_t v11 = v36;
    uint64_t v12 = (char *)v10[2];
    swift_bridgeObjectRetain();
    id v32 = a1;
    uint64_t v33 = v12;
    v28[1] = v10;
    if (v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = v10 + 7;
      uint64_t v15 = v7;
      do
      {
        uint64_t v16 = *(v14 - 3);
        uint64_t v17 = *(v14 - 2);
        uint64_t v18 = *v14;
        uint64_t v34 = *(v14 - 1);
        uint64_t v35 = v16;
        if ((uint64_t)v13 < (uint64_t)v15) {
          uint64_t v19 = 1;
        }
        else {
          uint64_t v19 = 2 * (v15 != v13);
        }
        uint64_t v36 = v11;
        unint64_t v20 = v11[2];
        unint64_t v21 = v11[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20 >= v21 >> 1)
        {
          sub_10007AB2C(v21 > 1, v20 + 1, 1);
          uint64_t v11 = v36;
        }
        v14 += 4;
        v11[2] = v20 + 1;
        uint64_t v22 = &v11[6 * v20];
        void v22[4] = v35;
        v22[5] = v17;
        v22[6] = v34;
        v22[7] = v18;
        v22[8] = v19;
        *((unsigned char *)v22 + 72) = v15 != v13;
        *((unsigned char *)v22 + 73) = 4;
        ++v13;
      }
      while (v33 != v13);
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
    sub_100004FDC(&qword_1000CCE38);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1000A8E80;
    unint64_t v24 = (void *)BDSCloudAssetTypeStoreEbook;
    uint64_t v25 = (void *)BDSLibraryContentAssetTypeUnknown;
    *(void *)(v23 + 40) = 0;
    *(void *)(v23 + 48) = 0;
    *(void *)(v23 + 32) = 0;
    *(unsigned char *)(v23 + 56) = 1;
    *(void *)(v23 + 64) = 0xD000000000000023;
    *(void *)(v23 + 72) = 0x80000001000A5050;
    *(void *)(v23 + 80) = v24;
    *(void *)(v23 + 88) = v25;
    *(void *)(v23 + 96) = 0;
    *(void *)(v23 + 104) = 0;
    *(unsigned char *)(v23 + 112) = 0;
    id v26 = v24;
    uint64_t result = v25;
    uint64_t v27 = v32;
    void *v32 = 0;
    v27[1] = 0;
    *((unsigned char *)v27 + 16) = 0;
    void v27[3] = 0;
    v27[4] = v11;
    v27[5] = 0;
    v27[6] = v23;
    *((unsigned char *)v27 + 56) = 0;
    v27[8] = 0;
    v27[9] = 0;
  }
  return result;
}

uint64_t sub_10005D45C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10005D550(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10005D6AC(uint64_t a1)
{
  sub_10000A95C(a1, (uint64_t)v79, &qword_1000CEA70);
  uint64_t v2 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v76 = (uint64_t)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)v64 - v6);
  uint64_t v8 = sub_1000A3560();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v64 - v11;
  if ((sub_10007B3C0() & 1) == 0)
  {
    int64_t v41 = sub_10005BF40();
    uint64_t v42 = sub_10005C6CC();
    id v43 = sub_100058A8C((uint64_t)v41, (uint64_t)v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_100058CE4((uint64_t)v43);
    swift_bridgeObjectRelease();
    return (uint64_t)v44;
  }
  sub_1000569F4();
  sub_10000A95C(a1, (uint64_t)v80, &qword_1000CEA70);
  uint64_t v13 = v81;
  uint64_t v73 = v8;
  uint64_t v66 = v12;
  if (v81)
  {
    uint64_t v14 = *(void *)(v81 + 16);
    if (v14)
    {
      uint64_t v65 = a1;
      v64[1] = v80[0];
      v64[0] = sub_100056CB8();
      uint64_t v15 = &_swiftEmptyDictionarySingleton;
      uint64_t v78 = &_swiftEmptyDictionarySingleton;
      uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
      uint64_t v17 = (v16 + 32) & ~v16;
      uint64_t v18 = v13 + v17;
      uint64_t v19 = (void (**)(uint64_t, char *, uint64_t))(v74 + 16);
      uint64_t v20 = *(void *)(v3 + 72);
      uint64_t v70 = v20 + v17;
      uint64_t v69 = v16 | 7;
      uint64_t v68 = v74 + 32;
      uint64_t v75 = (void (**)(uint64_t, uint64_t))(v74 + 8);
      swift_bridgeObjectRetain();
      long long v67 = xmmword_1000A8E80;
      uint64_t v72 = v17;
      id v71 = v7;
      while (1)
      {
        sub_10005E778(v18, (uint64_t)v7);
        uint64_t v21 = v77;
        (*v19)(v77, (char *)v7, v8);
        unint64_t v23 = sub_1000594A0(v21);
        uint64_t v24 = v15[2];
        BOOL v25 = (v22 & 1) == 0;
        uint64_t v26 = v24 + v25;
        if (__OFADD__(v24, v25)) {
          break;
        }
        char v27 = v22;
        if (v15[3] < v26)
        {
          sub_10005A948(v26, 1);
          uint64_t v15 = v78;
          unint64_t v28 = sub_1000594A0(v77);
          if ((v27 & 1) != (v29 & 1)) {
            goto LABEL_34;
          }
          unint64_t v23 = v28;
        }
        if (v27)
        {
          uint64_t v30 = (uint64_t)v7;
          uint64_t v31 = v19;
          (*v75)(v77, v8);
          uint64_t v15 = v78;
          uint64_t v32 = v78[7];
          sub_10005E7DC(v30, v76);
          unint64_t v33 = *(void *)(v32 + 8 * v23);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v32 + 8 * v23) = v33;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v33 = sub_1000590AC(0, *(void *)(v33 + 16) + 1, 1, v33, &qword_1000CEA78, type metadata accessor for WidgetReadingHistory.DayEntry, type metadata accessor for WidgetReadingHistory.DayEntry);
            *(void *)(v32 + 8 * v23) = v33;
          }
          unint64_t v36 = *(void *)(v33 + 16);
          unint64_t v35 = *(void *)(v33 + 24);
          if (v36 >= v35 >> 1)
          {
            unint64_t v33 = sub_1000590AC(v35 > 1, v36 + 1, 1, v33, &qword_1000CEA78, type metadata accessor for WidgetReadingHistory.DayEntry, type metadata accessor for WidgetReadingHistory.DayEntry);
            *(void *)(v32 + 8 * v23) = v33;
          }
          uint64_t v19 = v31;
          *(void *)(v33 + 16) = v36 + 1;
          uint64_t v17 = v72;
          sub_10005E7DC(v76, v33 + v72 + v36 * v20);
          uint64_t v8 = v73;
          uint64_t v7 = v71;
        }
        else
        {
          sub_100004FDC(&qword_1000CEA78);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v67;
          sub_10005E7DC((uint64_t)v7, v37 + v17);
          v15[(v23 >> 6) + 8] |= 1 << v23;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v74 + 32))(v15[6] + *(void *)(v74 + 72) * v23, v77, v8);
          *(void *)(v15[7] + 8 * v23) = v37;
          uint64_t v38 = v15[2];
          BOOL v39 = __OFADD__(v38, 1);
          uint64_t v40 = v38 + 1;
          if (v39) {
            goto LABEL_32;
          }
          void v15[2] = v40;
        }
        v18 += v20;
        if (!--v14)
        {
          sub_10005E840(v65);
          uint64_t v61 = sub_1000570C8((uint64_t)v15);
          uint64_t v62 = swift_release();
          __chkstk_darwin(v62);
          uint64_t v63 = (uint64_t)v66;
          v64[-2] = v61;
          v64[-1] = v63;
          uint64_t v44 = sub_100058228((void (*)(void *__return_ptr, uint64_t))sub_10005E86C, (uint64_t)&v64[-4], v64[0]);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*v75)(v63, v8);
          return (uint64_t)v44;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  uint64_t v45 = sub_1000583EC();
  uint64_t v46 = v45 - 1;
  if (!__OFSUB__(v45, 1))
  {
    uint64_t v47 = sub_10005BF40();
    uint64_t v48 = sub_10005C6CC();
    uint64_t v49 = sub_100058A8C((uint64_t)v47, (uint64_t)v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v71 = v64;
    uint64_t v78 = _swiftEmptyArrayStorage;
    sub_10007AB2C(0, 0, 0);
    uint64_t v44 = v78;
    uint64_t v50 = (void (**)(uint64_t, uint64_t))v49[2];
    swift_bridgeObjectRetain();
    uint64_t v75 = v50;
    uint64_t v72 = (uint64_t)v49;
    if (v50)
    {
      uint64_t v51 = 0;
      id v52 = v49 + 7;
      do
      {
        uint64_t v53 = *(v52 - 3);
        uint64_t v54 = *(v52 - 2);
        uint64_t v55 = *v52;
        uint64_t v76 = *(v52 - 1);
        uint64_t v77 = v53;
        if ((uint64_t)v51 < v46) {
          uint64_t v56 = 1;
        }
        else {
          uint64_t v56 = 2 * (v46 != (void)v51);
        }
        uint64_t v78 = v44;
        unint64_t v57 = v44[2];
        unint64_t v58 = v44[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v57 >= v58 >> 1)
        {
          sub_10007AB2C(v58 > 1, v57 + 1, 1);
          uint64_t v44 = v78;
        }
        v52 += 4;
        v44[2] = v57 + 1;
        uint64_t v59 = &v44[6 * v57];
        v59[4] = v77;
        v59[5] = v54;
        v59[6] = v76;
        v59[7] = v55;
        v59[8] = v56;
        *((unsigned char *)v59 + 72) = v46 != (void)v51;
        *((unsigned char *)v59 + 73) = 4;
        ++v51;
      }
      while (v75 != (void (**)(uint64_t, uint64_t))v51);
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v66, v73);
    return (uint64_t)v44;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_1000A46E0();
  __break(1u);
  return result;
}

uint64_t sub_10005DE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, void (*a5)(void, void, void)@<X4>, uint64_t a6@<X8>)
{
  double v74 = a4;
  uint64_t v84 = a1;
  sub_10000A95C(a2, (uint64_t)v108, &qword_1000CEA70);
  uint64_t v85 = (uint8_t *)v108[0];
  uint64_t v10 = v108[1];
  uint64_t v11 = v108[2];
  uint64_t v12 = sub_1000A4160();
  uint64_t v83 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  id v64 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v65 = a2;
  sub_10000A95C(a2, (uint64_t)v114, &qword_1000CEA70);
  uint64_t v73 = v117;
  if (v117)
  {
    uint64_t v17 = v115;
    if (v115 >= v116) {
      uint64_t v17 = v116;
    }
    if (__OFSUB__(v11, v10))
    {
      __break(1u);
    }
    else
    {
      double v18 = ceil((double)(v11 - v10) / 60.0);
      if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
      {
        if (v18 > -9.22337204e18)
        {
          if (v18 < 9.22337204e18)
          {
            double v19 = (double)v17 / (double)v116;
            uint64_t v71 = (uint64_t)v18 & ~((uint64_t)v18 >> 63);
            goto LABEL_10;
          }
LABEL_51:
          __break(1u);
LABEL_52:
          swift_once();
          goto LABEL_38;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
    }
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v85 = 0;
  uint64_t v71 = 0;
  double v19 = 0.0;
LABEL_10:
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v82 = v12;
  uint64_t v79 = a6;
  uint64_t v80 = v16;
  uint64_t v72 = a5;
  if (v20)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_100004FDC(&qword_1000CCE38);
    *(double *)&a3 = COERCE_DOUBLE(swift_allocObject());
    *(_OWORD *)(a3 + 16) = xmmword_1000A8E80;
    uint64_t v21 = (void *)BDSCloudAssetTypeStoreEbook;
    char v22 = (void *)BDSLibraryContentAssetTypeUnknown;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    *(unsigned char *)(a3 + 56) = 1;
    *(void *)(a3 + 64) = 0xD000000000000023;
    *(void *)(a3 + 72) = 0x80000001000A5050;
    *(void *)(a3 + 80) = v21;
    *(void *)(a3 + 88) = v22;
    *(void *)(a3 + 96) = 0;
    *(void *)(a3 + 104) = 0;
    *(unsigned char *)(a3 + 112) = 0;
    id v23 = v21;
    id v24 = v22;
  }
  uint64_t v25 = *(void *)(a3 + 40);
  uint64_t v67 = *(void *)(a3 + 32);
  double v26 = *(double *)(a3 + 48);
  int v27 = *(unsigned __int8 *)(a3 + 56);
  double v28 = *(double *)(a3 + 64);
  char v29 = *(void (**)(void, void, void))(a3 + 72);
  uint64_t v30 = *(void **)(a3 + 80);
  uint64_t v31 = *(void **)(a3 + 88);
  uint64_t v32 = *(void *)(a3 + 104);
  uint64_t v69 = *(void *)(a3 + 96);
  int v70 = *(unsigned __int8 *)(a3 + 112);
  uint64_t v77 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v68 = v30;
  id v66 = v30;
  id v75 = v31;
  uint64_t v78 = v32;
  swift_bridgeObjectRetain();
  double v81 = v28;
  uint64_t v76 = v29;
  if (v28 == -2.31584178e77 && v29 == (void (*)(void, void, void))0x80000001000A5050)
  {
    char v33 = 0;
    uint64_t v34 = v80;
  }
  else
  {
    char v35 = sub_1000A46A0();
    char v33 = 0;
    if (v26 == 1.0) {
      int v36 = v27;
    }
    else {
      int v36 = 1;
    }
    uint64_t v34 = v80;
    if ((v35 & 1) == 0 && v36)
    {
      sub_10000A95C(v65, (uint64_t)v109, &qword_1000CEA70);
      if (!v110
        || (long long v111 = v109[0],
            long long v112 = v109[1],
            uint64_t v113 = v110,
            double v37 = COERCE_DOUBLE(WidgetReadingHistory.State.daysSinceLastReadDate.getter()),
            (v38 & 1) != 0))
      {
        char v33 = 0;
      }
      else if (v37 < 0.0 || v37 >= 4.0)
      {
        if (v37 < 4.0 || v37 >= 7.0) {
          char v33 = v37 < 14.0 && v37 >= 7.0;
        }
        else {
          char v33 = 2;
        }
      }
      else
      {
        char v33 = 3;
      }
    }
  }
  uint64_t v39 = v83;
  a5 = *(void (**)(void, void, void))(v83 + 16);
  uint64_t v40 = v82;
  a5(v34, v84, v82);
  int v41 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v34, v40);
  if (v41 == enum case for WidgetFamily.systemSmall(_:))
  {
    BOOL v42 = v73 == 0;
    swift_bridgeObjectRelease();
    BOOL v87 = v42;
    char v86 = v27;
    double v88 = v19;
    uint64_t v89 = v71;
    BOOL v90 = v42;
    uint64_t v91 = v85;
    uint64_t v92 = v67;
    uint64_t v93 = v77;
    double v94 = v26;
    LOBYTE(v95) = v27;
    double v96 = v81;
    uint64_t v97 = v76;
    unint64_t v98 = v68;
    id v99 = v75;
    uint64_t v100 = v69;
    uint64_t v101 = v78;
    char v102 = v70;
    char v103 = v33;
    double v104 = v74;
    uint64_t v105 = v72;
    sub_100011160((uint64_t)&v88);
LABEL_35:
    sub_100010414((uint64_t)&v88, (uint64_t)v106);
    WidgetReadingHistory.Day.readingTime.getter(v106);
    swift_bridgeObjectRetain();
    sub_10000A95C((uint64_t)v106, (uint64_t)v107, &qword_1000CCDB0);
    uint64_t v49 = v79;
    return sub_10000A95C((uint64_t)v107, v49, &qword_1000CCDB0);
  }
  if (v41 == enum case for WidgetFamily.systemMedium(_:))
  {
    BOOL v43 = v73 == 0;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    double v88 = v19;
    uint64_t v89 = v71;
    BOOL v90 = v43;
    uint64_t v91 = v85;
    uint64_t v92 = a3;
    LOBYTE(v93) = v33;
    double v94 = v74;
    uint64_t v95 = v72;
    sub_10001113C((uint64_t)&v88);
    goto LABEL_35;
  }
  if (v41 == enum case for WidgetFamily.systemLarge(_:))
  {
    BOOL v44 = v73 == 0;
    uint64_t v45 = sub_10005D6AC(v65);
    uint64_t v47 = v46;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    double v88 = v19;
    uint64_t v89 = v71;
    BOOL v90 = v44;
    uint64_t v91 = v85;
    uint64_t v92 = v45;
    uint64_t v93 = v47;
    double v94 = *(double *)&a3;
    LOBYTE(v95) = v33;
    double v96 = v74;
    uint64_t v97 = v72;
    sub_100011118((uint64_t)&v88);
    goto LABEL_35;
  }
  if (v41 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    BOOL v48 = v73 == 0;
    swift_bridgeObjectRelease();
    BOOL v87 = v48;
    char v86 = v27;
    double v88 = v19;
    uint64_t v89 = v71;
    BOOL v90 = v48;
    uint64_t v91 = v85;
    uint64_t v92 = v67;
    uint64_t v93 = v77;
    double v94 = v26;
    LOBYTE(v95) = v27;
    double v96 = v81;
    uint64_t v97 = v76;
    unint64_t v98 = v68;
    id v99 = v75;
    uint64_t v100 = v69;
    uint64_t v101 = v78;
    char v102 = v70;
    char v103 = v33;
    double v104 = v74;
    uint64_t v105 = v72;
    sub_10005E758((uint64_t)&v88);
    goto LABEL_35;
  }
  swift_bridgeObjectRelease();
  if (qword_1000CC6D8 != -1) {
    goto LABEL_52;
  }
LABEL_38:
  uint64_t v51 = sub_1000A3830();
  sub_100010B3C(v51, (uint64_t)qword_1000CE9C0);
  id v52 = v64;
  uint64_t v53 = v82;
  a5(v64, v84, v82);
  uint64_t v54 = sub_1000A3810();
  os_log_type_t v55 = sub_1000A44C0();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v49 = v79;
  if (v56)
  {
    unint64_t v57 = (uint8_t *)swift_slowAlloc();
    v107[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v57 = 136315138;
    uint64_t v85 = v57 + 4;
    sub_10005E95C((unint64_t *)&qword_1000CCBA0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v58 = sub_1000A4690();
    v106[0] = sub_10007A4B4(v58, v59, v107);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v83 + 8);
    v60(v52, v53);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Widget family '%s' is not supported", v57, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v83 + 8);
    v60(v52, v53);
  }
  uint64_t v61 = v80;
  double v62 = sub_1000110E8((uint64_t)v106);
  ((void (*)(char *, uint64_t, double))v60)(v61, v53, v62);
  sub_10000A95C((uint64_t)v106, (uint64_t)v107, &qword_1000CCDB0);
  return sub_10000A95C((uint64_t)v107, v49, &qword_1000CCDB0);
}

uint64_t sub_10005E758(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 112) & 0x301;
  *(void *)(result + 16) &= 1uLL;
  *(void *)(result + 112) = v1;
  return result;
}

uint64_t sub_10005E778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E840(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005E86C@<X0>(uint64_t a1@<X0>, double a2@<X8>)
{
  return sub_100057650(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_10005E890(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005E8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CEA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E954()
{
  return swift_release();
}

uint64_t sub_10005E95C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005E9A4()
{
  return sub_1000586D8();
}

uint64_t sub_10005E9C0()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D8088);
  sub_100010B3C(v10, (uint64_t)qword_1000D8088);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

unint64_t sub_10005EC98()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v0 - 8);
  int v36 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v2 - 8);
  char v35 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000A3390();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A3600();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000A42F0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000A33A0();
  uint64_t v27 = v11;
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100004FDC(&qword_1000CEC88);
  uint64_t v12 = (int *)(sub_100004FDC(&qword_1000CEC90) - 8);
  uint64_t v13 = *(void *)v12;
  uint64_t v33 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v34 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_1000A8D50;
  unint64_t v16 = v15 + v14;
  unint64_t v29 = v15 + v14 + v12[14];
  *(unsigned char *)(v15 + v14) = 0;
  sub_1000A4280();
  double v26 = v9;
  sub_1000A35D0();
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  uint64_t v32 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  double v18 = v6;
  sub_1000A33B0();
  double v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v38 += 56;
  double v28 = v19;
  uint64_t v20 = v35;
  v19(v35, 1, 1, v11);
  uint64_t v21 = sub_1000A30D0();
  char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  id v23 = v36;
  v22(v36, 1, 1, v21);
  sub_1000A3100();
  id v24 = (unsigned char *)(v16 + v33);
  v33 += v16 + v12[14];
  *id v24 = 1;
  sub_1000A4280();
  sub_1000A35D0();
  v32(v18, v30, v37);
  sub_1000A33B0();
  v28(v20, 1, 1, v27);
  v22(v23, 1, 1, v21);
  sub_1000A3100();
  unint64_t result = sub_10007D484(v34);
  qword_1000D80A0 = result;
  return result;
}

unint64_t sub_10005F1A4()
{
  unint64_t result = qword_1000CEAC8;
  if (!qword_1000CEAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAC8);
  }
  return result;
}

uint64_t sub_10005F1F8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000C6BE0;
  v8._object = v3;
  Swift::Int v5 = sub_1000A4680(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

unint64_t sub_10005F25C()
{
  unint64_t result = qword_1000CEAD0;
  if (!qword_1000CEAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAD0);
  }
  return result;
}

unint64_t sub_10005F2B4()
{
  unint64_t result = qword_1000CEAD8;
  if (!qword_1000CEAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAD8);
  }
  return result;
}

unint64_t sub_10005F30C()
{
  unint64_t result = qword_1000CEAE0;
  if (!qword_1000CEAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAE0);
  }
  return result;
}

unint64_t sub_10005F364()
{
  unint64_t result = qword_1000CEAE8;
  if (!qword_1000CEAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAE8);
  }
  return result;
}

unint64_t sub_10005F3BC()
{
  unint64_t result = qword_1000CEAF0;
  if (!qword_1000CEAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAF0);
  }
  return result;
}

unint64_t sub_10005F414()
{
  unint64_t result = qword_1000CEAF8;
  if (!qword_1000CEAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEAF8);
  }
  return result;
}

unint64_t sub_10005F46C()
{
  unint64_t result = qword_1000CEB00;
  if (!qword_1000CEB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB00);
  }
  return result;
}

uint64_t sub_10005F4C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100061130(&qword_1000CC6E0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D8088, a1);
}

uint64_t sub_10005F4F8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005F548()
{
  unint64_t result = qword_1000CEB08;
  if (!qword_1000CEB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB08);
  }
  return result;
}

uint64_t sub_10005F59C(uint64_t a1)
{
  unint64_t v2 = sub_10005F548();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10005F5EC()
{
  unint64_t result = qword_1000CEB10;
  if (!qword_1000CEB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB10);
  }
  return result;
}

unint64_t sub_10005F644()
{
  unint64_t result = qword_1000CEB18;
  if (!qword_1000CEB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB18);
  }
  return result;
}

unint64_t sub_10005F69C()
{
  unint64_t result = qword_1000CEB20;
  if (!qword_1000CEB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB20);
  }
  return result;
}

uint64_t sub_10005F6F0()
{
  if (qword_1000CC6E8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10005F74C(uint64_t a1)
{
  unint64_t v2 = sub_10005F46C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10005F798()
{
  return sub_10000B17C(&qword_1000CEB28, &qword_1000CEB30);
}

void sub_10005F7D4(void *a1@<X8>)
{
  *a1 = &off_1000C6C30;
}

unint64_t sub_10005F7E8()
{
  unint64_t result = qword_1000CEB38;
  if (!qword_1000CEB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB38);
  }
  return result;
}

unint64_t sub_10005F840()
{
  unint64_t result = qword_1000CEB40;
  if (!qword_1000CEB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB40);
  }
  return result;
}

uint64_t sub_10005F894()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005F8B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005F8CC()
{
  uint64_t v0 = sub_1000A3390();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A3600();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000A42F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000A33A0();
  sub_100010E40(v6, qword_1000D80A8);
  sub_100010B3C(v6, (uint64_t)qword_1000D80A8);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000A33B0();
}

uint64_t sub_10005FAB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CEC38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  id v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)v22 - v5;
  uint64_t v6 = sub_100004FDC(&qword_1000CEC40);
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v22 - v11;
  __chkstk_darwin(v10);
  id v23 = (char *)v22 - v13;
  char v33 = 0;
  uint64_t v30 = sub_100004FDC(&qword_1000CEC48);
  v22[0] = sub_1000295C0();
  unint64_t v29 = sub_10005F414();
  v22[1] = sub_10000B17C(&qword_1000CEC50, &qword_1000CEC48);
  sub_1000A3310();
  sub_10000B17C(&qword_1000CEC58, &qword_1000CEC40);
  sub_1000A32F0();
  uint64_t v14 = v31 + 8;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v31 + 8);
  v15(v12, v6);
  uint64_t v31 = v14;
  char v32 = 1;
  sub_1000A3310();
  sub_1000A32F0();
  v15(v9, v6);
  unint64_t v16 = v24;
  sub_1000A3350();
  sub_10000B17C(&qword_1000CEC60, &qword_1000CEC38);
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  sub_1000A32F0();
  double v19 = *(void (**)(char *, uint64_t))(v27 + 8);
  v19(v16, v18);
  uint64_t v20 = v23;
  sub_1000A32E0();
  v19(v17, v18);
  v15(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v20, v6);
}

uint64_t sub_10005FF50@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CEC68);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100004FDC(&qword_1000CEC70);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100004FDC(&qword_1000CEC48);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_1000295C0();
  sub_1000A3190();
  v13._countAndFlagsBits = 0x2079616C50;
  v13._object = (void *)0xE500000000000000;
  sub_1000A3180(v13);
  swift_getKeyPath();
  sub_100004FDC(&qword_1000CEC78);
  sub_1000A3170();
  swift_release();
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  sub_1000A3180(v14);
  swift_getKeyPath();
  sub_100004FDC(&qword_1000CEC80);
  sub_1000A3170();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_1000A3180(v15);
  sub_1000A31A0();
  sub_1000A3160();
  sub_10000B17C(&qword_1000CEC50, &qword_1000CEC48);
  sub_1000A31F0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1000A31E0();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_10006025C@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CEC68);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100004FDC(&qword_1000CEC70);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100004FDC(&qword_1000CEC48);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_1000295C0();
  sub_1000A3190();
  v13._countAndFlagsBits = 0x2079616C50;
  v13._object = (void *)0xE500000000000000;
  sub_1000A3180(v13);
  swift_getKeyPath();
  sub_100004FDC(&qword_1000CEC78);
  sub_1000A3170();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  sub_1000A3180(v14);
  sub_1000A31A0();
  sub_1000A3160();
  sub_10000B17C(&qword_1000CEC50, &qword_1000CEC48);
  sub_1000A31F0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1000A31E0();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_100060524@<X0>(uint64_t a1@<X8>)
{
  return sub_100061130(&qword_1000CC6F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000D80A8, a1);
}

uint64_t sub_10006055C(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_100004FDC(&qword_1000CEC28);
  uint64_t v5 = sub_10000B17C(&qword_1000CEC30, &qword_1000CEC28);

  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_10005FAB4, 0, v4, a2, v5);
}

uint64_t sub_100060614(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100060634, 0, 0);
}

uint64_t sub_100060634()
{
  sub_1000A2E00();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100060698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100062B48();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

unint64_t sub_1000606C8()
{
  unint64_t result = qword_1000CEB50;
  if (!qword_1000CEB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB50);
  }
  return result;
}

uint64_t sub_10006071C(uint64_t a1)
{
  unint64_t v2 = sub_1000295C0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100060760()
{
  unint64_t result = qword_1000CEB58;
  if (!qword_1000CEB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB58);
  }
  return result;
}

uint64_t sub_1000607B4()
{
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  sub_1000A2CE0();
  uint64_t result = sub_1000A2CB0();
  qword_1000D80C0 = result;
  return result;
}

uint64_t sub_10006081C()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D80C8);
  sub_100010B3C(v10, (uint64_t)qword_1000D80C8);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

uint64_t sub_100060AF4@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FDC(&qword_1000CD4A0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_1000A33A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)v21 - v15;
  sub_1000A2E20();
  if (!v22) {
    swift_bridgeObjectRetain();
  }
  sub_1000A3380();
  sub_1000A2E20();
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v19 = 1;
    goto LABEL_7;
  }
  uint64_t result = sub_1000A2E20();
  if (v22)
  {
    sub_1000A3380();
    uint64_t v19 = 0;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_10001F208((uint64_t)v9, (uint64_t)v7);
    uint64_t v20 = sub_1000A30D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
    sub_1000A3100();
    sub_10001F270((uint64_t)v9);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  __break(1u);
  return result;
}

unint64_t sub_100060DD0()
{
  unint64_t result = qword_1000CEB60;
  if (!qword_1000CEB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB60);
  }
  return result;
}

unint64_t sub_100060E28()
{
  unint64_t result = qword_1000CEB68;
  if (!qword_1000CEB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB68);
  }
  return result;
}

unint64_t sub_100060E80()
{
  unint64_t result = qword_1000CEB70;
  if (!qword_1000CEB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB70);
  }
  return result;
}

unint64_t sub_100060ED8()
{
  unint64_t result = qword_1000CEB78;
  if (!qword_1000CEB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB78);
  }
  return result;
}

uint64_t sub_100060F2C@<X0>(void *a1@<X8>)
{
  if (qword_1000CC6F8 != -1) {
    swift_once();
  }
  *a1 = qword_1000D80C0;

  return swift_retain();
}

unint64_t sub_100060F9C()
{
  unint64_t result = qword_1000CEB80;
  if (!qword_1000CEB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB80);
  }
  return result;
}

unint64_t sub_100060FF4()
{
  unint64_t result = qword_1000CEB88;
  if (!qword_1000CEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB88);
  }
  return result;
}

unint64_t sub_10006104C()
{
  unint64_t result = qword_1000CEB90;
  if (!qword_1000CEB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB90);
  }
  return result;
}

unint64_t sub_1000610A4()
{
  unint64_t result = qword_1000CEB98;
  if (!qword_1000CEB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEB98);
  }
  return result;
}

uint64_t sub_1000610F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100061130(&qword_1000CC700, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D80C8, a1);
}

uint64_t sub_100061130@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100010B3C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1000611D4()
{
  return sub_10000B17C(&qword_1000CEBA0, &qword_1000CEBA8);
}

uint64_t sub_100061210(uint64_t a1)
{
  unint64_t v2 = sub_100060760();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100061260()
{
  unint64_t result = qword_1000CEBB0;
  if (!qword_1000CEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEBB0);
  }
  return result;
}

uint64_t sub_1000612B8(uint64_t a1)
{
  unint64_t v2 = sub_1000610A4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100061308()
{
  unint64_t result = qword_1000CEBC0;
  if (!qword_1000CEBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEBC0);
  }
  return result;
}

unint64_t sub_100061360()
{
  unint64_t result = qword_1000CEBC8[0];
  if (!qword_1000CEBC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000CEBC8);
  }
  return result;
}

unint64_t sub_1000613BC()
{
  unint64_t result = qword_1000CEBE0;
  if (!qword_1000CEBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEBE0);
  }
  return result;
}

unint64_t sub_100061414()
{
  unint64_t result = qword_1000CEBE8;
  if (!qword_1000CEBE8)
  {
    sub_100008B14(qword_1000CEBF0);
    sub_10006104C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEBE8);
  }
  return result;
}

uint64_t sub_100061488(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100060ED8();
  *uint64_t v5 = v2;
  v5[1] = sub_10000C760;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AudiobookEntityStringQuery()
{
  return &type metadata for AudiobookEntityStringQuery;
}

uint64_t destroy for AudiobookAppEntity()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudiobookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudiobookAppEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for AudiobookAppEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiobookAppEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiobookAppEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiobookAppEntity()
{
  return &type metadata for AudiobookAppEntity;
}

ValueMetadata *type metadata accessor for PlayAudiobookIntent()
{
  return &type metadata for PlayAudiobookIntent;
}

unsigned char *storeEnumTagSinglePayload for PlayAudiobookIntent.PlayMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100061994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayAudiobookIntent.PlayMode()
{
  return &type metadata for PlayAudiobookIntent.PlayMode;
}

uint64_t sub_1000619CC()
{
  return sub_10000B17C(&qword_1000CEC08, &qword_1000CEC10);
}

uint64_t sub_100061A08()
{
  return sub_10000B17C((unint64_t *)&qword_1000CD488, &qword_1000CD490);
}

uint64_t sub_100061A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v48 = a6;
  uint64_t v49 = a8;
  uint64_t v53 = a7;
  uint64_t v46 = a2;
  uint64_t v47 = a5;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v50 = a9;
  uint64_t v51 = a1;
  int v52 = a10;
  uint64_t v10 = sub_1000A3390();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000A3600();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000A42F0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000A33A0();
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  BOOL v43 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  int v41 = (char *)v39 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v39[1] = (char *)v39 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v39[0] = (char *)v39 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  __chkstk_darwin(v25);
  sub_100004FDC(&qword_1000CD570);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v27(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000A33B0();
  uint64_t v42 = sub_1000A2E80();
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v28 = v10;
  v27(v13, v26, v10);
  sub_1000A33B0();
  uint64_t v40 = sub_1000A2E80();
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  v27(v13, v26, v10);
  sub_1000A33B0();
  v39[0] = sub_1000A2E80();
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  v27(v13, v26, v10);
  sub_1000A33B0();
  uint64_t v29 = sub_1000A2E80();
  sub_100004FDC(&qword_1000CD578);
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  v27(v13, v26, v28);
  sub_1000A33B0();
  uint64_t v30 = sub_1000A2E60();
  sub_100004FDC(&qword_1000CEC98);
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  v27(v13, v26, v28);
  sub_1000A33B0();
  sub_10000B17C(&qword_1000CECA8, &qword_1000CECB0);
  uint64_t v31 = sub_1000A2E50();
  uint64_t v54 = v44;
  uint64_t v55 = v45;
  swift_retain_n();
  uint64_t v32 = v46;
  swift_bridgeObjectRetain_n();
  uint64_t v33 = v42;
  swift_retain();
  uint64_t v34 = v40;
  swift_retain();
  uint64_t v35 = v39[0];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2E30();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v54 = v47;
  uint64_t v55 = v48;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2E30();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v36 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v38 = v50;
  *uint64_t v50 = v51;
  v38[1] = v32;
  uint64_t v38[2] = v33;
  v38[3] = v34;
  v38[4] = v35;
  v38[5] = v29;
  v38[6] = v30;
  v38[7] = v31;
  v38[8] = v53;
  v38[9] = v36;
  *((unsigned char *)v38 + 80) = v52;
  return result;
}

uint64_t sub_100062204(int a1, uint64_t a2)
{
  uint64_t v56 = a2;
  int v55 = a1;
  uint64_t v2 = sub_1000A31D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  uint64_t v63 = v3;
  __chkstk_darwin(v2);
  uint64_t v61 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  unint64_t v59 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v58 = &v41[-v8];
  uint64_t v9 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v9 - 8);
  unint64_t v57 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000A3390();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1000A3600();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000A42F0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_1000A33A0();
  uint64_t v47 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v54 = &v41[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v60 = &v41[-v22];
  __chkstk_darwin(v21);
  uint64_t v49 = sub_100004FDC(&qword_1000CEC18);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v42 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v44 = v11;
  v24(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  BOOL v43 = v24;
  uint64_t v45 = v12 + 104;
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v24(v14, v23, v11);
  uint64_t v25 = v57;
  sub_1000A33B0();
  uint64_t v26 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v46 = v18 + 56;
  uint64_t v48 = v26;
  v26(v25, 0, 1, v17);
  LOBYTE(v64) = 0;
  uint64_t v27 = sub_1000A2DD0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v50 = v29;
  uint64_t v51 = v28 + 56;
  v29(v58, 1, 1, v27);
  v29(v59, 1, 1, v27);
  unsigned int v52 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v30 = *(void (**)(void))(v63 + 104);
  v63 += 104;
  uint64_t v53 = (void (*)(unsigned char *, void, uint64_t))v30;
  v30(v61);
  sub_10005F548();
  uint64_t v31 = sub_1000A2EE0();
  v55 &= 1u;
  uint64_t v49 = sub_100004FDC(&qword_1000CEC20);
  swift_retain();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v32 = v42;
  uint64_t v33 = v44;
  uint64_t v34 = v43;
  v43(v14, v42, v44);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v34(v14, v32, v33);
  uint64_t v35 = v34;
  uint64_t v36 = v57;
  sub_1000A33B0();
  v48(v36, 0, 1, v47);
  char v69 = 0;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v64 = 0u;
  sub_1000A4280();
  sub_1000A35D0();
  v35(v14, v32, v33);
  sub_1000A33B0();
  uint64_t v37 = v58;
  sub_1000A2DE0();
  uint64_t v38 = v50;
  v50(v37, 0, 1, v27);
  v38(v59, 1, 1, v27);
  v53(v61, v52, v62);
  sub_100060760();
  sub_1000A2EF0();
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  long long v64 = 0u;
  long long v65 = 0u;
  *(void *)&long long v66 = 0;
  swift_retain();
  sub_1000A2CE0();
  sub_1000A2CB0();
  LOBYTE(v64) = v55;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A2EC0();
  swift_release();
  swift_release();
  uint64_t v39 = v56;
  sub_1000633D4(v56, (uint64_t)&v64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000634E0(v39, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_10006343C);
  sub_1000A2EC0();
  sub_1000634E0(v39, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_10006353C);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return v31;
}

uint64_t sub_100062B48()
{
  uint64_t v0 = sub_1000A31D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v56 = v0;
  uint64_t v57 = v1;
  __chkstk_darwin(v0);
  int v55 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v54 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v53 = &v36[-v6];
  uint64_t v7 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v45 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000A3390();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000A3600();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1000A42F0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000A33A0();
  uint64_t v43 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v51 = &v36[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  unsigned int v52 = &v36[-v20];
  __chkstk_darwin(v19);
  uint64_t v50 = sub_100004FDC(&qword_1000CEC18);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v38 = v9;
  v22(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v39 = v22;
  uint64_t v40 = v10 + 104;
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v22(v12, v21, v9);
  uint64_t v23 = v45;
  sub_1000A33B0();
  uint64_t v24 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v42 = v16 + 56;
  uint64_t v44 = v24;
  v24(v23, 0, 1, v15);
  LOBYTE(v58) = 0;
  uint64_t v25 = sub_1000A2DD0();
  uint64_t v41 = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v47 = v27;
  uint64_t v48 = v26 + 56;
  v27(v53, 1, 1, v25);
  v27(v54, 1, 1, v25);
  unsigned int v49 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v28 = *(void (**)(unsigned char *))(v57 + 104);
  v57 += 104;
  v28(v55);
  sub_10005F548();
  uint64_t v50 = sub_1000A2EE0();
  uint64_t v46 = sub_100004FDC(&qword_1000CEC20);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v39(v12, v37, v38);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v31(v12, v29, v30);
  sub_1000A33B0();
  v44(v23, 0, 1, v43);
  char v63 = 0;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v58 = 0u;
  sub_1000A4280();
  sub_1000A35D0();
  v31(v12, v29, v30);
  sub_1000A33B0();
  uint64_t v32 = v53;
  sub_1000A2DE0();
  uint64_t v33 = v41;
  uint64_t v34 = v47;
  v47(v32, 0, 1, v41);
  v34(v54, 1, 1, v33);
  ((void (*)(unsigned char *, void, uint64_t))v28)(v55, v49, v56);
  sub_100060760();
  sub_1000A2EF0();
  sub_100004FDC(&qword_1000CD4B8);
  sub_1000A2CF0();
  long long v58 = 0u;
  long long v59 = 0u;
  *(void *)&long long v60 = 0;
  sub_1000A2CE0();
  sub_1000A2CB0();
  return v50;
}

uint64_t sub_10006337C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A2ED0();
  *a1 = result;
  return result;
}

uint64_t sub_1000633A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A2ED0();
  *a1 = result;
  return result;
}

uint64_t sub_1000633D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CECB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006343C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000634E0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 80);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v4);
  return a1;
}

uint64_t sub_10006353C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1000635E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000A4090();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[9];
    *(_DWORD *)((char *)v7 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    uint64_t v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    v12(v18, v19, v11);
    uint64_t v20 = a3[10];
    uint64_t v21 = (char *)v7 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1000A38E0();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_100004FDC(&qword_1000CECC0);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v7 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = a3[12];
    uint64_t v31 = (char *)v7 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    *(uint64_t *)((char *)v7 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  return v7;
}

uint64_t sub_100063894(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1000A4090();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(a1 + a2[9], v5);
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = sub_1000A38E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = sub_1000A3E00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = sub_1000A3D80();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

void *sub_100063A44(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[9];
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  swift_bridgeObjectRetain();
  v10(v16, v17, v9);
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1000A38E0();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100004FDC(&qword_1000CECC0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = a3[12];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

char *sub_100063CAC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  uint64_t v14 = a3[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_1000A38E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v10) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (!v10)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_100004FDC(&qword_1000CECC0);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v22 = a3[11];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = a3[12];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *sub_100063F8C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  uint64_t v12 = a3[9];
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  v10(&a1[v12], &a2[v12], v9);
  uint64_t v13 = a3[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1000A38E0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100004FDC(&qword_1000CECC0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[11];
  int v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[12];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *sub_1000641D0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  v10(&a1[v16], &a2[v16], v9);
  uint64_t v17 = a3[10];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_1000A38E0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v10) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (!v10)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_100004FDC(&qword_1000CECC0);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  uint64_t v25 = a3[11];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = a3[12];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

uint64_t sub_100064490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000644A4);
}

uint64_t sub_1000644A4(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1000A4090();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v14(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_100004FDC(&qword_1000CECC0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_11;
  }
  uint64_t v13 = sub_1000A3E00();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1000A3D80();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = &a1[a3[12]];

  return v16(v18, a2, v17);
}

uint64_t sub_10006466C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064680);
}

char *sub_100064680(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1000A4090();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v14(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_100004FDC(&qword_1000CECC0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  uint64_t v13 = sub_1000A3E00();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1000A3D80();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = &v5[a4[12]];

  return (char *)v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for FilledCircleWithLabel()
{
  uint64_t result = qword_1000CED20;
  if (!qword_1000CED20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100064894()
{
  sub_1000A4090();
  if (v0 <= 0x3F)
  {
    sub_100064A10();
    if (v1 <= 0x3F)
    {
      sub_1000A3E00();
      if (v2 <= 0x3F)
      {
        sub_1000A3D80();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100064A10()
{
  if (!qword_1000CED30)
  {
    sub_1000A38E0();
    unint64_t v0 = sub_1000A4570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CED30);
    }
  }
}

uint64_t sub_100064A68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100064A84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v130 = a2;
  uint64_t v129 = sub_100004FDC(&qword_1000CED98);
  __chkstk_darwin(v129);
  char v114 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_100004FDC(&qword_1000CEDA0);
  __chkstk_darwin(v127);
  uint64_t v128 = (uint64_t)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CE510);
  __chkstk_darwin(v5 - 8);
  uint64_t v118 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100004FDC(&qword_1000CEDA8);
  uint64_t v7 = __chkstk_darwin(v126);
  uint64_t v113 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v123 = (uint64_t)&v109 - v9;
  uint64_t v10 = sub_100004FDC(&qword_1000CECC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000A38E0();
  uint64_t v131 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v119 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004FDC(&qword_1000CEDB0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v125 = (uint64_t)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  CGImageRef v124 = (char *)&v109 - v18;
  uint64_t v19 = sub_1000A3A20();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004FDC(&qword_1000CEDB8);
  uint64_t v23 = v22 - 8;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v109 - v27;
  uint64_t v29 = *a1;
  uint64_t v30 = (int *)type metadata accessor for FilledCircleWithLabel();
  uint64_t v31 = (char *)a1 + v30[5];
  uint64_t v32 = sub_1000A4090();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v117 = v32;
  uint64_t v116 = v34;
  uint64_t v115 = v33 + 16;
  ((void (*)(char *, char *))v34)(v21, v31);
  sub_100065708((uint64_t)v21, (uint64_t)&v26[*(int *)(v23 + 44)]);
  *(void *)uint64_t v26 = v29;
  *((_WORD *)v26 + 4) = 256;
  swift_retain();
  uint64_t v120 = v21;
  sub_10006576C((uint64_t)v21);
  os_log_t v121 = v28;
  uint64_t v122 = v26;
  sub_10000A95C((uint64_t)v26, (uint64_t)v28, &qword_1000CEDB8);
  uint64_t v35 = a1;
  sub_10000B1C0((uint64_t)a1 + v30[10], (uint64_t)v12, &qword_1000CECC0);
  uint64_t v36 = v131;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v12, 1, v13) == 1)
  {
    sub_10000A9C0((uint64_t)v12, &qword_1000CECC0);
    unsigned int v37 = a1;
    uint64_t v38 = (void *)((char *)a1 + v30[7]);
    uint64_t v39 = v38[1];
    uint64_t v132 = *v38;
    uint64_t v133 = v39;
    sub_10000A504();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1000A3E50();
    uint64_t v42 = v41;
    uint64_t v131 = v43;
    char v45 = v44 & 1;
    uint64_t v46 = (char *)v37 + v30[12];
    uint64_t v110 = v37;
    uint64_t v47 = sub_1000A3D80();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v118;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v118, v46, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
    sub_1000A3DC0();
    sub_10000A9C0(v49, &qword_1000CE510);
    sub_1000A3DD0();
    swift_release();
    uint64_t v50 = v40;
    uint64_t v51 = sub_1000A3E40();
    uint64_t v53 = v52;
    char v55 = v54;
    swift_release();
    LOBYTE(v47) = v55 & 1;
    sub_100017510(v50, v42, v45);
    swift_bridgeObjectRelease();
    uint64_t v56 = v110;
    LODWORD(v132) = *(_DWORD *)((char *)v110 + v30[8]);
    uint64_t v57 = sub_1000A3E30();
    uint64_t v59 = v58;
    LOBYTE(v42) = v60;
    uint64_t v62 = v61;
    sub_100017510(v51, v53, v47);
    swift_bridgeObjectRelease();
    uint64_t v63 = (uint64_t)v56 + v30[9];
    uint64_t v64 = (uint64_t)v120;
    v116(v120, v63, v117);
    uint64_t v65 = (uint64_t)v113;
    sub_100065708(v64, (uint64_t)&v113[*(int *)(v126 + 36)]);
    *(void *)uint64_t v65 = v57;
    *(void *)(v65 + 8) = v59;
    *(unsigned char *)(v65 + 16) = v42 & 1;
    *(void *)(v65 + 24) = v62;
    sub_10006576C(v64);
    uint64_t v66 = v123;
    sub_10000A95C(v65, v123, &qword_1000CEDA8);
    sub_10000B1C0(v66, v128, &qword_1000CEDA8);
    swift_storeEnumTagMultiPayload();
    sub_1000657C8();
    sub_100065868();
    uint64_t v67 = (uint64_t)v124;
    sub_1000A3C00();
    sub_10000A9C0(v66, &qword_1000CEDA8);
  }
  else
  {
    long long v68 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    uint64_t v112 = v13;
    v68(v119, v12, v13);
    char v69 = (void *)((char *)a1 + v30[7]);
    uint64_t v70 = v69[1];
    uint64_t v132 = *v69;
    uint64_t v133 = v70;
    sub_10000A504();
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1000A3E50();
    uint64_t v73 = v72;
    uint64_t v113 = v74;
    int v111 = v75 & 1;
    uint64_t v76 = (char *)a1 + v30[12];
    uint64_t v77 = sub_1000A3D80();
    uint64_t v78 = *(void *)(v77 - 8);
    uint64_t v79 = (uint64_t)v118;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v118, v76, v77);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v77);
    sub_1000A3DC0();
    sub_10000A9C0(v79, &qword_1000CE510);
    uint64_t v80 = v35;
    sub_1000A3DD0();
    swift_release();
    LOBYTE(v78) = v111;
    uint64_t v81 = sub_1000A3E40();
    uint64_t v83 = v82;
    LOBYTE(v77) = v84;
    uint64_t v118 = v85;
    swift_release();
    char v86 = v77 & 1;
    sub_100017510(v71, v73, v78);
    swift_bridgeObjectRelease();
    LODWORD(v132) = *(_DWORD *)((char *)v80 + v30[8]);
    uint64_t v87 = sub_1000A3E30();
    uint64_t v89 = v88;
    LOBYTE(v71) = v90;
    uint64_t v92 = v91;
    sub_100017510(v81, v83, v86);
    swift_bridgeObjectRelease();
    uint64_t v93 = (uint64_t)v80 + v30[9];
    uint64_t v94 = (uint64_t)v120;
    v116(v120, v93, v117);
    uint64_t v95 = v123;
    sub_100065708(v94, v123 + *(int *)(v126 + 36));
    *(void *)uint64_t v95 = v87;
    *(void *)(v95 + 8) = v89;
    *(unsigned char *)(v95 + 16) = v71 & 1;
    *(void *)(v95 + 24) = v92;
    sub_10006576C(v94);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v97 = (uint64_t)v114;
    unint64_t v98 = (uint64_t *)&v114[*(int *)(v129 + 36)];
    uint64_t v99 = sub_100004FDC(&qword_1000CCAC0);
    uint64_t v100 = v131;
    uint64_t v101 = v119;
    uint64_t v102 = v112;
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))((char *)v98 + *(int *)(v99 + 28), v119, v112);
    *unint64_t v98 = KeyPath;
    sub_10000A95C(v95, v97, &qword_1000CEDA8);
    sub_10000B1C0(v97, v128, &qword_1000CED98);
    swift_storeEnumTagMultiPayload();
    sub_1000657C8();
    sub_100065868();
    uint64_t v67 = (uint64_t)v124;
    sub_1000A3C00();
    sub_10000A9C0(v97, &qword_1000CED98);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
  }
  uint64_t v104 = (uint64_t)v121;
  uint64_t v103 = (uint64_t)v122;
  sub_10000B1C0((uint64_t)v121, (uint64_t)v122, &qword_1000CEDB8);
  uint64_t v105 = v125;
  sub_10000B1C0(v67, v125, &qword_1000CEDB0);
  uint64_t v106 = v130;
  sub_10000B1C0(v103, v130, &qword_1000CEDB8);
  uint64_t v107 = sub_100004FDC(&qword_1000CEDD0);
  sub_10000B1C0(v105, v106 + *(int *)(v107 + 48), &qword_1000CEDB0);
  sub_10000A9C0(v67, &qword_1000CEDB0);
  sub_10000A9C0(v104, &qword_1000CEDB8);
  sub_10000A9C0(v105, &qword_1000CEDB0);
  return sub_10000A9C0(v103, &qword_1000CEDB8);
}

uint64_t sub_1000655EC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100004FDC(&qword_1000CED80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = sub_1000A4070();
  v6[1] = v7;
  uint64_t v8 = sub_100004FDC(&qword_1000CED88);
  sub_100064A84(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  sub_1000A4070();
  sub_1000A3910();
  sub_10000B1C0((uint64_t)v6, a1, &qword_1000CED80);
  uint64_t v9 = (_OWORD *)(a1 + *(int *)(sub_100004FDC(&qword_1000CED90) + 36));
  long long v10 = v12[1];
  *uint64_t v9 = v12[0];
  v9[1] = v10;
  v9[2] = v12[2];
  return sub_10000A9C0((uint64_t)v6, &qword_1000CED80);
}

uint64_t sub_100065708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006576C(uint64_t a1)
{
  uint64_t v2 = sub_1000A3A20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000657C8()
{
  unint64_t result = qword_1000CEDC0;
  if (!qword_1000CEDC0)
  {
    sub_100008B14(&qword_1000CED98);
    sub_100065868();
    sub_10000B17C(&qword_1000CDD88, &qword_1000CCAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEDC0);
  }
  return result;
}

unint64_t sub_100065868()
{
  unint64_t result = qword_1000CEDC8;
  if (!qword_1000CEDC8)
  {
    sub_100008B14(&qword_1000CEDA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEDC8);
  }
  return result;
}

unint64_t sub_1000658E8()
{
  unint64_t result = qword_1000CEDD8;
  if (!qword_1000CEDD8)
  {
    sub_100008B14(&qword_1000CED90);
    sub_10000B17C(&qword_1000CEDE0, &qword_1000CED80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEDD8);
  }
  return result;
}

void sub_100065988()
{
  qword_1000D80E0 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_10006599C(uint64_t a1)
{
  return sub_100065A3C(a1, 14, 0x676E697474655320, (void *)0xE900000000000073, 15);
}

uint64_t sub_1000659C0(uint64_t a1)
{
  return sub_100066EA8(a1, (uint64_t)&unk_1000AB770, (void (*)(void))sub_1000676F0, (void (*)(uint64_t))sub_100067454);
}

uint64_t sub_100065A08()
{
  return sub_100067030();
}

uint64_t sub_100065A18(uint64_t a1)
{
  return sub_100065A3C(a1, 28, 0xD000000000000017, (void *)0x80000001000A68F0, 29);
}

uint64_t sub_100065A3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v24 = sub_100004FDC(&qword_1000CEE60);
  uint64_t v28 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A2F20();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FDC(&qword_1000CEE68);
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  sub_100067454();
  sub_1000A2FE0();
  v29._countAndFlagsBits = 0x206E65704FLL;
  v29._object = (void *)0xE500000000000000;
  sub_1000A2FD0(v29);
  unsigned int v22 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v21 = *(void (**)(char *))(v8 + 104);
  v21(v10);
  sub_1000A2FB0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  v30._object = v26;
  v30._countAndFlagsBits = v27;
  sub_1000A2FD0(v30);
  sub_1000A2FF0();
  uint64_t v23 = sub_1000A2F40();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v28 + 8);
  v28 += 8;
  uint64_t v19 = v13;
  uint64_t v14 = v24;
  v13(v6, v24);
  sub_1000A2FE0();
  v31._countAndFlagsBits = 0x206F74206F47;
  v31._object = (void *)0xE600000000000000;
  sub_1000A2FD0(v31);
  ((void (*)(char *, void, uint64_t))v21)(v10, v22, v7);
  sub_1000A2FB0();
  v20(v10, v7);
  v32._object = v26;
  v32._countAndFlagsBits = v27;
  sub_1000A2FD0(v32);
  sub_1000A2FF0();
  uint64_t v15 = sub_1000A2F40();
  v19(v6, v14);
  sub_100004FDC(&qword_1000CEE70);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000A8D50;
  *(void *)(v16 + 32) = v23;
  *(void *)(v16 + 40) = v15;
  uint64_t v17 = sub_1000A2F30();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100065E00(uint64_t a1)
{
  return sub_100066EA8(a1, (uint64_t)&unk_1000AB770, (void (*)(void))sub_1000676F0, (void (*)(uint64_t))sub_100067454);
}

uint64_t sub_100065E48()
{
  return sub_100067030();
}

uint64_t sub_100065E6C(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v26 = sub_100004FDC(&qword_1000CEE40);
  uint64_t v33 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000A2F20();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CEE48);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  sub_1000674A8();
  sub_1000A2FE0();
  v35._countAndFlagsBits = 2125385;
  v35._object = (void *)0xE300000000000000;
  sub_1000A2FD0(v35);
  unsigned int v30 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  long long v10 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  Swift::String v32 = (void (*)(char *, void, uint64_t))v10;
  uint64_t v25 = v3;
  v10(v6);
  sub_1000A2FB0();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  Swift::String v29 = v11;
  v11(v6, v3);
  v36._object = (void *)0x80000001000A68D0;
  v36._countAndFlagsBits = 0xD00000000000001ELL;
  sub_1000A2FD0(v36);
  swift_getKeyPath();
  unint64_t v27 = sub_100067628();
  sub_1000A2F10();
  swift_release();
  sub_1000A2FC0();
  swift_release();
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  sub_1000A2FD0(v37);
  sub_1000A2FF0();
  uint64_t v24 = sub_1000A2F40();
  unsigned int v22 = *(void (**)(char *, uint64_t))(v33 + 8);
  v33 += 8;
  uint64_t v12 = v26;
  v22(v2, v26);
  sub_1000A2FE0();
  v38._countAndFlagsBits = 544503120;
  v38._object = (void *)0xE400000000000000;
  sub_1000A2FD0(v38);
  uint64_t v13 = v25;
  v32(v6, v30, v25);
  sub_1000A2FB0();
  v29(v6, v13);
  v39._countAndFlagsBits = 0x6E6F20756E656D20;
  v39._object = (void *)0xED00002065687420;
  sub_1000A2FD0(v39);
  swift_getKeyPath();
  sub_1000A2F10();
  swift_release();
  sub_1000A2FC0();
  swift_release();
  v40._countAndFlagsBits = 0x6564697320;
  v40._object = (void *)0xE500000000000000;
  sub_1000A2FD0(v40);
  sub_1000A2FF0();
  uint64_t v23 = sub_1000A2F40();
  uint64_t v14 = v22;
  v22(v2, v12);
  sub_1000A2FE0();
  v41._countAndFlagsBits = 544499027;
  v41._object = (void *)0xE400000000000000;
  sub_1000A2FD0(v41);
  uint64_t v15 = v25;
  v32(v6, v30, v25);
  sub_1000A2FB0();
  v29(v6, v15);
  v42._countAndFlagsBits = 0x6E6F20756E654D20;
  v42._object = (void *)0xED00002065687420;
  sub_1000A2FD0(v42);
  swift_getKeyPath();
  sub_1000A2F10();
  swift_release();
  sub_1000A2FC0();
  swift_release();
  v43._countAndFlagsBits = 0x6564697320;
  v43._object = (void *)0xE500000000000000;
  sub_1000A2FD0(v43);
  sub_1000A2FF0();
  uint64_t v16 = sub_1000A2F40();
  v14(v2, v26);
  sub_100004FDC(&qword_1000CEE50);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000A8E90;
  uint64_t v18 = v23;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  uint64_t v19 = sub_1000A2F30();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_100066478(uint64_t a1)
{
  return sub_100066EA8(a1, (uint64_t)&unk_1000AB748, (void (*)(void))sub_100067628, (void (*)(uint64_t))sub_1000674A8);
}

uint64_t sub_1000664C0()
{
  return sub_100066B2C();
}

uint64_t sub_1000664E0(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v26 = sub_100004FDC(&qword_1000CEE20);
  uint64_t v33 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000A2F20();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CEE28);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  sub_1000674FC();
  sub_1000A2FE0();
  v35._countAndFlagsBits = 2125385;
  v35._object = (void *)0xE300000000000000;
  sub_1000A2FD0(v35);
  unsigned int v30 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  long long v10 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  Swift::String v32 = (void (*)(char *, void, uint64_t))v10;
  uint64_t v25 = v3;
  v10(v6);
  sub_1000A2FB0();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  Swift::String v29 = v11;
  v11(v6, v3);
  v36._object = (void *)0x80000001000A6860;
  v36._countAndFlagsBits = 0xD000000000000013;
  sub_1000A2FD0(v36);
  swift_getKeyPath();
  unint64_t v27 = sub_100067558();
  sub_1000A2F10();
  swift_release();
  sub_1000A2FC0();
  swift_release();
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  sub_1000A2FD0(v37);
  sub_1000A2FF0();
  uint64_t v24 = sub_1000A2F40();
  unsigned int v22 = *(void (**)(char *, uint64_t))(v33 + 8);
  v33 += 8;
  uint64_t v12 = v26;
  v22(v2, v26);
  sub_1000A2FE0();
  v38._countAndFlagsBits = 2125385;
  v38._object = (void *)0xE300000000000000;
  sub_1000A2FD0(v38);
  uint64_t v13 = v25;
  v32(v6, v30, v25);
  sub_1000A2FB0();
  v29(v6, v13);
  v39._countAndFlagsBits = 0xD000000000000014;
  v39._object = (void *)0x80000001000A6880;
  sub_1000A2FD0(v39);
  swift_getKeyPath();
  sub_1000A2F10();
  swift_release();
  sub_1000A2FC0();
  swift_release();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  sub_1000A2FD0(v40);
  sub_1000A2FF0();
  uint64_t v23 = sub_1000A2F40();
  uint64_t v14 = v22;
  v22(v2, v12);
  sub_1000A2FE0();
  v41._countAndFlagsBits = 2125385;
  v41._object = (void *)0xE300000000000000;
  sub_1000A2FD0(v41);
  uint64_t v15 = v25;
  v32(v6, v30, v25);
  sub_1000A2FB0();
  v29(v6, v15);
  v42._countAndFlagsBits = 0xD00000000000002ELL;
  v42._object = (void *)0x80000001000A68A0;
  sub_1000A2FD0(v42);
  swift_getKeyPath();
  sub_1000A2F10();
  swift_release();
  sub_1000A2FC0();
  swift_release();
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  sub_1000A2FD0(v43);
  sub_1000A2FF0();
  uint64_t v16 = sub_1000A2F40();
  v14(v2, v26);
  sub_100004FDC(&qword_1000CEE30);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000A8E90;
  uint64_t v18 = v23;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  uint64_t v19 = sub_1000A2F30();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_100066ACC(uint64_t a1)
{
  return sub_100066EA8(a1, (uint64_t)&unk_1000AB720, (void (*)(void))sub_100067558, (void (*)(uint64_t))sub_1000674FC);
}

uint64_t sub_100066B14()
{
  return sub_100066B2C();
}

uint64_t sub_100066B2C()
{
  uint64_t v0 = sub_1000A2F60();
  uint64_t v1 = sub_1000A2F60();
  sub_100004FDC(&qword_1000CEE18);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000A8D50;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = sub_1000A2F50();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100066BB0()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CEE20);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A2F20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CEE28);
  __chkstk_darwin(v8);
  sub_1000674FC();
  sub_1000A2FE0();
  v14._object = (void *)0x80000001000A6840;
  v14._countAndFlagsBits = 0xD000000000000019;
  sub_1000A2FD0(v14);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  sub_1000A2FB0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_1000A2FD0(v15);
  sub_1000A2FF0();
  uint64_t v9 = sub_1000A2F40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100004FDC(&qword_1000CEE30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A8E80;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = sub_1000A2F30();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100066E60(uint64_t a1)
{
  return sub_100066EA8(a1, (uint64_t)&unk_1000AB720, (void (*)(void))sub_100067558, (void (*)(uint64_t))sub_1000674FC);
}

uint64_t sub_100066EA8(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v6 = sub_1000A2FA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  a3();
  sub_1000A2F10();
  uint64_t v10 = swift_release();
  a4(v10);
  sub_1000A2F90();
  uint64_t v11 = sub_1000A2F80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100004FDC(&qword_1000CEE10);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000A8E80;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = sub_1000A2F70();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100067020()
{
  return sub_100067030();
}

uint64_t sub_100067030()
{
  uint64_t v0 = sub_1000A2F60();
  sub_100004FDC(&qword_1000CEE18);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000A8E80;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = sub_1000A2F50();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_10006709C()
{
  if (qword_1000CC708 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for BooksWidgetAssistantIntents()
{
  return &type metadata for BooksWidgetAssistantIntents;
}

uint64_t sub_100067108()
{
  uint64_t v0 = sub_1000A3020();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10006C394();
  sub_100067454();
  sub_1000A3030();
  uint64_t v4 = sub_1000A3010();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  uint64_t v16 = sub_10006C394();
  sub_1000A3030();
  uint64_t v6 = sub_1000A3010();
  v5(v3, v0);
  uint64_t v16 = sub_10008196C();
  uint64_t v17 = v7;
  sub_1000674A8();
  sub_1000A3030();
  uint64_t v8 = sub_1000A3010();
  v5(v3, v0);
  uint64_t v16 = sub_1000A106C();
  uint64_t v17 = v9;
  sub_1000674FC();
  sub_1000A3030();
  uint64_t v10 = sub_1000A3010();
  v5(v3, v0);
  uint64_t v16 = sub_1000A106C();
  uint64_t v17 = v11;
  sub_1000A3030();
  uint64_t v12 = sub_1000A3010();
  v5(v3, v0);
  sub_100004FDC(&qword_1000CEE00);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000AB6B0;
  *(void *)(v13 + 32) = v4;
  *(void *)(v13 + 40) = v6;
  *(void *)(v13 + 48) = v8;
  *(void *)(v13 + 56) = v10;
  *(void *)(v13 + 64) = v12;
  uint64_t v14 = sub_1000A3000();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_100067454()
{
  unint64_t result = qword_1000CEDE8;
  if (!qword_1000CEDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEDE8);
  }
  return result;
}

unint64_t sub_1000674A8()
{
  unint64_t result = qword_1000CEDF0;
  if (!qword_1000CEDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEDF0);
  }
  return result;
}

unint64_t sub_1000674FC()
{
  unint64_t result = qword_1000CEDF8;
  if (!qword_1000CEDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEDF8);
  }
  return result;
}

unint64_t sub_100067558()
{
  unint64_t result = qword_1000CEE08;
  if (!qword_1000CEE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEE08);
  }
  return result;
}

uint64_t sub_1000675B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000A2EB0();
  *a1 = v3;
  return result;
}

uint64_t sub_1000675F0()
{
  return sub_1000A2EC0();
}

unint64_t sub_100067628()
{
  unint64_t result = qword_1000CEE38;
  if (!qword_1000CEE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEE38);
  }
  return result;
}

uint64_t sub_10006767C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000A2EB0();
  *a1 = v3;
  return result;
}

uint64_t sub_1000676B8()
{
  return sub_1000A2EC0();
}

unint64_t sub_1000676F0()
{
  unint64_t result = qword_1000CEE58;
  if (!qword_1000CEE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEE58);
  }
  return result;
}

uint64_t sub_100067744()
{
  sub_1000A2EB0();
  return v1;
}

uint64_t sub_100067778()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000A33A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_1000A32C0();
  sub_100010E40(v5, qword_1000D80E8);
  sub_100010B3C(v5, (uint64_t)qword_1000D80E8);
  sub_1000A3380();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1000A32B0();
}

unint64_t sub_1000678DC()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD498);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  v283 = (char *)&v235 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v281 = (char *)&v235 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  v278 = (char *)&v235 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v272 = (char *)&v235 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v268 = (char *)&v235 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v289 = (char *)&v235 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v263 = (char *)&v235 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v259 = (char *)&v235 - v16;
  __chkstk_darwin(v15);
  v285 = (char *)&v235 - v17;
  uint64_t v18 = sub_100004FDC(&qword_1000CD4A0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v254 = (char *)&v235 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v253 = (char *)&v235 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v252 = (char *)&v235 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v282 = (char *)&v235 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v279 = (char *)&v235 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v276 = (char *)&v235 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v247 = (char *)&v235 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v246 = (char *)&v235 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v273 = (char *)&v235 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v271 = (char *)&v235 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v244 = (char *)&v235 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v267 = (char *)&v235 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v243 = (char *)&v235 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v242 = (char *)&v235 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v240 = (char *)&v235 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v260 = (char *)&v235 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v257 = (char *)&v235 - v52;
  __chkstk_darwin(v51);
  uint64_t v255 = (char *)&v235 - v53;
  uint64_t v54 = sub_1000A3390();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v235 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000A3600();
  __chkstk_darwin(v58 - 8);
  uint64_t v59 = sub_1000A42F0();
  __chkstk_darwin(v59 - 8);
  uint64_t v60 = sub_1000A33A0();
  uint64_t v297 = v60;
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v251 = (char *)&v235 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v249 = (char *)&v235 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v248 = (char *)&v235 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v280 = (char *)&v235 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v277 = (char *)&v235 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v275 = (char *)&v235 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v274 = (char *)&v235 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v245 = (char *)&v235 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v270 = (char *)&v235 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  uint64_t v269 = (char *)&v235 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v266 = (char *)&v235 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v265 = (char *)&v235 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  uint64_t v241 = (char *)&v235 - v87;
  uint64_t v88 = __chkstk_darwin(v86);
  uint64_t v239 = (char *)&v235 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  uint64_t v262 = (char *)&v235 - v91;
  uint64_t v92 = __chkstk_darwin(v90);
  uint64_t v261 = (char *)&v235 - v93;
  uint64_t v94 = __chkstk_darwin(v92);
  uint64_t v258 = (char *)&v235 - v95;
  uint64_t v96 = __chkstk_darwin(v94);
  uint64_t v256 = (char *)&v235 - v97;
  __chkstk_darwin(v96);
  uint64_t v238 = (char *)&v235 - v98;
  sub_100004FDC(&qword_1000CEF48);
  uint64_t v99 = sub_100004FDC(&qword_1000CEF50);
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v293 = v99 - 8;
  uint64_t v295 = *(void *)(v100 + 72);
  unint64_t v101 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  uint64_t v102 = swift_allocObject();
  uint64_t v250 = v102;
  *(_OWORD *)(v102 + 16) = xmmword_1000AB7A0;
  unint64_t v302 = v102 + v101;
  *(unsigned char *)(v102 + v101) = 0;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v103 = v55 + 104;
  uint64_t v104 = *(void (**)(char *))(v55 + 104);
  uint64_t v105 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v104(v57);
  uint64_t v292 = v103;
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v106 = v105;
  ((void (*)(char *, uint64_t, uint64_t))v104)(v57, v105, v54);
  uint64_t v107 = v104;
  uint64_t v108 = v255;
  uint64_t v109 = v57;
  sub_1000A33B0();
  uint64_t v296 = *(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56);
  v296(v108, 0, 1, v60);
  unint64_t v294 = 0x80000001000A52B0;
  uint64_t v110 = v285;
  sub_1000A30C0();
  uint64_t v299 = sub_1000A30D0();
  uint64_t v111 = *(void *)(v299 - 8);
  uint64_t v298 = *(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56);
  uint64_t v301 = v111 + 56;
  v298(v110, 0, 1, v299);
  uint64_t v287 = sub_100004FDC(&qword_1000CEF58);
  uint64_t v300 = v61 + 56;
  uint64_t v112 = *(void *)(v61 + 72);
  uint64_t v113 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v237 = (v113 + 32) & ~v113;
  uint64_t v264 = v237 + 2 * v112;
  uint64_t v284 = v112;
  uint64_t v288 = v113 | 7;
  uint64_t v236 = swift_allocObject();
  *(_OWORD *)(v236 + 16) = xmmword_1000A8D50;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v114 = v106;
  uint64_t v115 = v106;
  uint64_t v116 = (void (*)(char *, uint64_t, uint64_t))v107;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v109, v115, v54);
  sub_1000A33B0();
  unint64_t v117 = v302;
  unint64_t v235 = v302 + *(int *)(v293 + 56);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v118 = v109;
  v116(v109, v114, v54);
  sub_1000A33B0();
  sub_1000A30F0();
  *(unsigned char *)(v117 + v295) = 5;
  uint64_t v255 = (char *)0xD000000000000014;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v119 = v116;
  uint64_t v286 = v116;
  v116(v109, v114, v54);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v120 = v114;
  v119(v109, v114, v54);
  os_log_t v121 = v257;
  sub_1000A33B0();
  v296(v121, 0, 1, v297);
  uint64_t v122 = v259;
  sub_1000A30C0();
  v298(v122, 0, 1, v299);
  v285 = (char *)(v237 + v284);
  uint64_t v123 = swift_allocObject();
  uint64_t v124 = sub_1000A0FC4(v123, 1);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v125 = v54;
  uint64_t v126 = v286;
  v286(v118, v120, v54);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v124);
  sub_1000A30F0();
  uint64_t v259 = (char *)(2 * v295);
  uint64_t v257 = (char *)(v302 + 2 * v295);
  *uint64_t v257 = 6;
  sub_1000A4280();
  sub_1000A35D0();
  v126(v118, v120, v54);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v127 = v120;
  v126(v118, v120, v125);
  uint64_t v128 = v260;
  sub_1000A33B0();
  v296(v128, 0, 1, v297);
  uint64_t v129 = v263;
  sub_1000A30C0();
  v298(v129, 0, 1, v299);
  uint64_t v130 = swift_allocObject();
  uint64_t v256 = (char *)sub_1000A0FC4(v130, 2);
  sub_1000A4280();
  sub_1000A35D0();
  unsigned int v291 = v120;
  uint64_t v290 = v125;
  v126(v118, v120, v125);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v131 = v126;
  v126(v118, v127, v125);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v256);
  sub_1000A30F0();
  unint64_t v132 = v302;
  v259[v295 + v302] = 7;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v133 = v291;
  uint64_t v134 = v290;
  v131(v118, v291, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v131(v118, v133, v134);
  uint64_t v135 = v240;
  sub_1000A33B0();
  v296(v135, 0, 1, v297);
  uint64_t v136 = v289;
  sub_1000A30C0();
  v298(v136, 0, 1, v299);
  sub_1000A3100();
  uint64_t v263 = (char *)(4 * v295);
  unint64_t v137 = v132 + 4 * v295;
  v263[v132] = 8;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v138 = v291;
  uint64_t v139 = v290;
  char v140 = v286;
  v286(v118, v291, v290);
  sub_1000A33B0();
  uint64_t v141 = v293;
  uint64_t v261 = (unsigned char *)(v137 + *(int *)(v293 + 56));
  sub_1000A4280();
  sub_1000A35D0();
  v140(v118, v138, v139);
  uint64_t v142 = v242;
  sub_1000A33B0();
  v296(v142, 0, 1, v297);
  uint64_t v143 = v289;
  sub_1000A30C0();
  char v144 = v298;
  v298(v143, 0, 1, v299);
  sub_1000A3100();
  uint64_t v145 = &v263[v295 + v302];
  char *v145 = 9;
  uint64_t v263 = &v145[*(int *)(v141 + 56)];
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v146 = v138;
  uint64_t v147 = v138;
  uint64_t v148 = v290;
  v140(v118, v147, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v140(v118, v146, v148);
  double v149 = v243;
  sub_1000A33B0();
  uint64_t v150 = v297;
  v296(v149, 0, 1, v297);
  uint64_t v151 = v289;
  sub_1000A30C0();
  v144(v151, 0, 1, v299);
  sub_1000A3100();
  uint64_t v152 = (unsigned char *)(v302 + 6 * v295);
  *uint64_t v152 = 10;
  uint64_t v263 = &v152[*(int *)(v141 + 56)];
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v153 = v291;
  uint64_t v154 = v290;
  uint64_t v155 = v286;
  v286(v118, v291, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v155(v118, v153, v154);
  sub_1000A33B0();
  uint64_t v156 = v296;
  v296(v149, 0, 1, v150);
  uint64_t v157 = v289;
  sub_1000A30C0();
  uint64_t v158 = v299;
  v298(v157, 0, 1, v299);
  sub_1000A3100();
  uint64_t v263 = (char *)(8 * v295);
  uint64_t v261 = (unsigned char *)(v302 + 7 * v295);
  *uint64_t v261 = 11;
  uint64_t v262 = (char *)0xD000000000000011;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v159 = v291;
  uint64_t v160 = v290;
  v155(v118, v291, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v155(v118, v159, v160);
  uint64_t v161 = v267;
  sub_1000A33B0();
  v156(v161, 0, 1, v297);
  uint64_t v162 = v268;
  sub_1000A30C0();
  v298(v162, 0, 1, v158);
  uint64_t v163 = swift_allocObject();
  uint64_t v164 = sub_1000A0FC4(v163, 1);
  v261 += *(int *)(v293 + 56);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v165 = v291;
  v155(v118, v291, v160);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v164);
  sub_1000A30F0();
  v263[v302] = 12;
  sub_1000A4280();
  sub_1000A35D0();
  v155(v118, v165, v160);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v155(v118, v165, v160);
  uint64_t v166 = v244;
  sub_1000A33B0();
  uint64_t v167 = v296;
  v296(v166, 0, 1, v297);
  uint64_t v168 = v289;
  sub_1000A30C0();
  uint64_t v169 = v299;
  v298(v168, 0, 1, v299);
  sub_1000A3100();
  uint64_t v268 = &v263[v295 + v302];
  *uint64_t v268 = 13;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v170 = v291;
  uint64_t v171 = v290;
  uint64_t v172 = v286;
  v286(v118, v291, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v172(v118, v170, v171);
  uint64_t v173 = v271;
  sub_1000A33B0();
  v167(v173, 0, 1, v297);
  uint64_t v174 = v272;
  sub_1000A30C0();
  v298(v174, 0, 1, v169);
  uint64_t v175 = swift_allocObject();
  uint64_t v267 = (char *)sub_1000A0FC4(v175, 2);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v176 = v291;
  uint64_t v177 = v290;
  v172(v118, v291, v290);
  sub_1000A33B0();
  uint64_t v178 = v293;
  sub_1000A4280();
  sub_1000A35D0();
  v172(v118, v176, v177);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v267);
  sub_1000A30F0();
  uint64_t v179 = (unsigned char *)(v302 + 10 * v295);
  *uint64_t v179 = 14;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v180 = v291;
  v172(v118, v291, v177);
  sub_1000A33B0();
  uint64_t v284 = (uint64_t)&v179[*(int *)(v178 + 56)];
  sub_1000A4280();
  sub_1000A35D0();
  v172(v118, v180, v177);
  uint64_t v181 = v273;
  sub_1000A33B0();
  v296(v181, 0, 1, v297);
  uint64_t v182 = v289;
  sub_1000A30C0();
  v298(v182, 0, 1, v299);
  uint64_t v183 = swift_allocObject();
  uint64_t v184 = sub_1000A0FC4(v183, 1);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v185 = v177;
  uint64_t v186 = v286;
  v286(v118, v180, v185);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v184);
  sub_1000A30F0();
  uint64_t v187 = v295;
  uint64_t v188 = (unsigned char *)(v302 + 11 * v295);
  *uint64_t v188 = 15;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v189 = v180;
  uint64_t v190 = v180;
  uint64_t v191 = v290;
  v186(v118, v189, v290);
  sub_1000A33B0();
  uint64_t v284 = (uint64_t)&v188[*(int *)(v293 + 56)];
  sub_1000A4280();
  sub_1000A35D0();
  v186(v118, v190, v191);
  uint64_t v192 = v246;
  sub_1000A33B0();
  uint64_t v193 = v296;
  v296(v192, 0, 1, v297);
  uint64_t v194 = v289;
  sub_1000A30C0();
  v298(v194, 0, 1, v299);
  sub_1000A3100();
  uint64_t v195 = (unsigned char *)(v302 + 12 * v187);
  *uint64_t v195 = 16;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v196 = v291;
  uint64_t v197 = v290;
  uint64_t v198 = v286;
  v286(v118, v291, v290);
  sub_1000A33B0();
  uint64_t v284 = (uint64_t)&v195[*(int *)(v293 + 56)];
  sub_1000A4280();
  sub_1000A35D0();
  v198(v118, v196, v197);
  uint64_t v199 = v247;
  sub_1000A33B0();
  uint64_t v200 = v297;
  v193(v199, 0, 1, v297);
  uint64_t v201 = v289;
  sub_1000A30C0();
  v298(v201, 0, 1, v299);
  sub_1000A3100();
  uint64_t v202 = (unsigned char *)(v302 + 13 * v295);
  unsigned char *v202 = 1;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v203 = v290;
  v198(v118, v196, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v204 = v196;
  uint64_t v205 = v203;
  v198(v118, v204, v203);
  uint64_t v206 = v198;
  uint64_t v207 = v276;
  sub_1000A33B0();
  v296(v207, 0, 1, v200);
  uint64_t v284 = (uint64_t)&v202[*(int *)(v293 + 56)];
  uint64_t v208 = v278;
  sub_1000A30B0();
  uint64_t v209 = v298;
  v298(v208, 0, 1, v299);
  uint64_t v210 = swift_allocObject();
  uint64_t v211 = sub_1000A0FC4(v210, 1);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v212 = v291;
  v206(v118, v291, v205);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v211);
  sub_1000A30F0();
  *(unsigned char *)(v302 + 14 * v295) = 2;
  sub_1000A4280();
  sub_1000A35D0();
  v206(v118, v212, v205);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v206(v118, v212, v205);
  uint64_t v213 = v279;
  sub_1000A33B0();
  v296(v213, 0, 1, v297);
  uint64_t v214 = v281;
  sub_1000A30B0();
  v209(v214, 0, 1, v299);
  uint64_t v215 = swift_allocObject();
  uint64_t v216 = sub_1000A0FC4(v215, 1);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v217 = v212;
  uint64_t v218 = v212;
  uint64_t v219 = v286;
  v286(v118, v218, v205);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v216);
  sub_1000A30F0();
  uint64_t v284 = 16 * v295;
  *(unsigned char *)(v302 + 15 * v295) = 3;
  sub_1000A4280();
  sub_1000A35D0();
  v219(v118, v217, v205);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v219(v118, v217, v205);
  char v220 = v282;
  sub_1000A33B0();
  v296(v220, 0, 1, v297);
  uint64_t v221 = v283;
  sub_1000A30B0();
  v298(v221, 0, 1, v299);
  uint64_t v222 = swift_allocObject();
  uint64_t v223 = sub_1000A0FC4(v222, 1);
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v224 = v290;
  v219(v118, v217, v290);
  sub_1000A33B0();
  WidgetReadingHistory.Day.readingTime.getter(v223);
  sub_1000A30F0();
  *(unsigned char *)(v302 + v284) = 4;
  sub_1000A4280();
  sub_1000A35D0();
  v219(v118, v217, v224);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v219(v118, v217, v224);
  uint64_t v225 = v219;
  uint64_t v226 = v252;
  sub_1000A33B0();
  v296(v226, 0, 1, v297);
  uint64_t v227 = v289;
  sub_1000A30C0();
  v298(v227, 0, 1, v299);
  sub_1000A3100();
  *(unsigned char *)(v302 + v284 + v295) = 17;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v228 = v291;
  v219(v118, v291, v224);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v219(v118, v228, v224);
  uint64_t v229 = v253;
  sub_1000A33B0();
  v296(v229, 0, 1, v297);
  sub_1000A30C0();
  v298(v227, 0, 1, v299);
  sub_1000A3100();
  *(unsigned char *)(v302 + 18 * v295) = 18;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v230 = v291;
  uint64_t v231 = v290;
  v225(v118, v291, v290);
  sub_1000A33B0();
  sub_1000A4280();
  sub_1000A35D0();
  v225(v118, v230, v231);
  uint64_t v232 = v254;
  sub_1000A33B0();
  v296(v232, 0, 1, v297);
  sub_1000A30C0();
  v298(v227, 0, 1, v299);
  sub_1000A3100();
  uint64_t v233 = WidgetReadingHistory.Day.readingTime.getter(v250);
  unint64_t result = sub_10007D4AC(v233);
  qword_1000D8100 = result;
  return result;
}

uint64_t sub_10006A9C4()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CEF60);
  sub_100010E40(v0, qword_1000D8108);
  sub_100010B3C(v0, (uint64_t)qword_1000D8108);
  sub_100004FDC(&qword_1000CEF68);
  uint64_t v1 = *(void *)(sub_100004FDC(&qword_1000CEF70) - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000AB7A0;
  unint64_t v4 = v6 + v3;
  *(unsigned char *)(v6 + v3) = 0;
  sub_10006B400();
  sub_1000A31B0();
  *(unsigned char *)(v4 + v2) = 1;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 2 * v2) = 2;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 3 * v2) = 3;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 4 * v2) = 4;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 5 * v2) = 5;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 6 * v2) = 6;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 7 * v2) = 7;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 8 * v2) = 8;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 9 * v2) = 11;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 10 * v2) = 12;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 11 * v2) = 13;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 12 * v2) = 14;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 13 * v2) = 15;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 14 * v2) = 16;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 15 * v2) = 9;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 16 * v2) = 10;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 17 * v2) = 17;
  sub_1000A31B0();
  *(unsigned char *)(v4 + 18 * v2) = 18;
  sub_1000A31B0();
  sub_10007D6A4(v6);
  return sub_1000A31C0();
}

unint64_t sub_10006AF34(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D49747265766E69;
      break;
    case 2:
      unint64_t result = 0x654C6E4F756E656DLL;
      break;
    case 3:
      unint64_t result = 0x47676E6964616572;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x676E69636E7973;
      break;
    case 7:
      unint64_t result = 0x6E69686372616573;
      break;
    case 8:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 9:
      unint64_t result = 0x77726F4670696B73;
      break;
    case 10:
      unint64_t result = 0x6B63614270696B73;
      break;
    case 11:
    case 17:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x79636176697270;
      break;
    case 13:
      unint64_t result = 1701670760;
      break;
    case 14:
      unint64_t result = 0x74616E6568707968;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 16:
      unint64_t result = 0x726F74536B6F6F62;
      break;
    case 18:
      unint64_t result = 0x6564497465736572;
      break;
    default:
      unint64_t result = 1953460082;
      break;
  }
  return result;
}

uint64_t sub_10006B1A4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10006AF34(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10006AF34(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000A46A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_10006B234()
{
  unint64_t result = qword_1000CEE88;
  if (!qword_1000CEE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEE88);
  }
  return result;
}

Swift::Int sub_10006B288()
{
  char v1 = *v0;
  sub_1000A4740();
  sub_10006AF34(v1);
  sub_1000A4370();
  swift_bridgeObjectRelease();
  return sub_1000A4780();
}

uint64_t sub_10006B2EC()
{
  sub_10006AF34(*v0);
  sub_1000A4370();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10006B340()
{
  char v1 = *v0;
  sub_1000A4740();
  sub_10006AF34(v1);
  sub_1000A4370();
  swift_bridgeObjectRelease();
  return sub_1000A4780();
}

uint64_t sub_10006B3A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10006C788();
  *a1 = result;
  return result;
}

unint64_t sub_10006B3D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10006AF34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10006B400()
{
  unint64_t result = qword_1000CEE90;
  if (!qword_1000CEE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEE90);
  }
  return result;
}

unint64_t sub_10006B458()
{
  unint64_t result = qword_1000CEE98;
  if (!qword_1000CEE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEE98);
  }
  return result;
}

uint64_t sub_10006B4AC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000CC720 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100004FDC(&qword_1000CEF60);
  uint64_t v3 = sub_100010B3C(v2, (uint64_t)qword_1000D8108);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10006B55C()
{
  unint64_t result = qword_1000CEEA0;
  if (!qword_1000CEEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEA0);
  }
  return result;
}

unint64_t sub_10006B5B4()
{
  unint64_t result = qword_1000CEEA8;
  if (!qword_1000CEEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEA8);
  }
  return result;
}

unint64_t sub_10006B60C()
{
  unint64_t result = qword_1000CEEB0;
  if (!qword_1000CEEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEB0);
  }
  return result;
}

uint64_t sub_10006B660()
{
  sub_10006C734();
  uint64_t v2 = sub_1000A3130();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10001F324(v3, v0, v2, v1);
}

unint64_t sub_10006B6F8()
{
  unint64_t result = qword_1000CEEC0;
  if (!qword_1000CEEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEC0);
  }
  return result;
}

unint64_t sub_10006B750()
{
  unint64_t result = qword_1000CEEC8;
  if (!qword_1000CEEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEC8);
  }
  return result;
}

unint64_t sub_10006B7AC()
{
  unint64_t result = qword_1000CEED0;
  if (!qword_1000CEED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEED0);
  }
  return result;
}

uint64_t sub_10006B800@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BF08(&qword_1000CC710, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D80E8, a1);
}

uint64_t sub_10006B838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006BE88(a1, a2, a3, (void (*)(void))sub_10006B400);
}

uint64_t sub_10006B864(uint64_t a1)
{
  unint64_t v2 = sub_10006B400();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10006B8B4()
{
  unint64_t result = qword_1000CEED8;
  if (!qword_1000CEED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEED8);
  }
  return result;
}

unint64_t sub_10006B90C()
{
  unint64_t result = qword_1000CEEE0;
  if (!qword_1000CEEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEE0);
  }
  return result;
}

unint64_t sub_10006B964()
{
  unint64_t result = qword_1000CEEE8;
  if (!qword_1000CEEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEE8);
  }
  return result;
}

uint64_t sub_10006B9B8()
{
  if (qword_1000CC718 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10006BA14(uint64_t a1)
{
  unint64_t v2 = sub_10006B7AC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10006BA64()
{
  unint64_t result = qword_1000CEEF0;
  if (!qword_1000CEEF0)
  {
    sub_100008B14(&qword_1000CEEF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEEF0);
  }
  return result;
}

void sub_10006BAC0(void *a1@<X8>)
{
  *a1 = &off_1000C6C80;
}

unint64_t sub_10006BAD4()
{
  unint64_t result = qword_1000CEF00;
  if (!qword_1000CEF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF00);
  }
  return result;
}

uint64_t sub_10006BB28()
{
  uint64_t v0 = sub_1000A33A0();
  sub_100010E40(v0, qword_1000D8120);
  sub_100010B3C(v0, (uint64_t)qword_1000D8120);
  return sub_1000A3380();
}

uint64_t sub_10006BB8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000A2EB0();
  *a1 = v3;
  return result;
}

uint64_t sub_10006BBC8()
{
  return sub_1000A2EC0();
}

void (*sub_10006BC00(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000A2EA0();
  return sub_10006BC5C;
}

void sub_10006BC5C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_10006BCB0()
{
  unint64_t result = qword_1000CEF08;
  if (!qword_1000CEF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF08);
  }
  return result;
}

uint64_t sub_10006BD04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10006C68C();
  unint64_t v5 = sub_10006C734();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10006BD70()
{
  uint64_t v0 = qword_1000CEE78;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10006BDB0()
{
  unint64_t result = qword_1000CEF10;
  if (!qword_1000CEF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF10);
  }
  return result;
}

unint64_t sub_10006BE08()
{
  unint64_t result = qword_1000CEF18;
  if (!qword_1000CEF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF18);
  }
  return result;
}

uint64_t sub_10006BE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006BE88(a1, a2, a3, (void (*)(void))sub_100067454);
}

uint64_t sub_10006BE88(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006BED0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BF08(&qword_1000CC728, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000D8120, a1);
}

uint64_t sub_10006BF08@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100010B3C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10006BFB0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10006C68C();
  unint64_t v7 = sub_10006C6E0();
  unint64_t v8 = sub_10006C734();
  *unint64_t v5 = v2;
  v5[1] = sub_10006C084;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10006C084()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_10006C18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006C394();
  *a1 = result;
  return result;
}

uint64_t sub_10006C1B4(uint64_t a1)
{
  unint64_t v2 = sub_100067454();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenBooksSettingsDeepLinks()
{
  return &type metadata for OpenBooksSettingsDeepLinks;
}

uint64_t getEnumTagSinglePayload for BooksSettingsDeepLinks(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BooksSettingsDeepLinks(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006C35CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksSettingsDeepLinks()
{
  return &type metadata for BooksSettingsDeepLinks;
}

uint64_t sub_10006C394()
{
  uint64_t v17 = sub_1000A31D0();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  int v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A33A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100004FDC(&qword_1000CEF28);
  sub_1000A3380();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v18 = 19;
  uint64_t v14 = sub_1000A2DD0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_10006B400();
  return sub_1000A2EE0();
}

unint64_t sub_10006C68C()
{
  unint64_t result = qword_1000CEF30;
  if (!qword_1000CEF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF30);
  }
  return result;
}

unint64_t sub_10006C6E0()
{
  unint64_t result = qword_1000CEF38;
  if (!qword_1000CEF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF38);
  }
  return result;
}

unint64_t sub_10006C734()
{
  unint64_t result = qword_1000CEF40;
  if (!qword_1000CEF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF40);
  }
  return result;
}

uint64_t sub_10006C788()
{
  unint64_t v0 = sub_1000A46C0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

unint64_t sub_10006C7E0()
{
  unint64_t result = qword_1000CEF78;
  if (!qword_1000CEF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF78);
  }
  return result;
}

unint64_t sub_10006C838()
{
  unint64_t result = qword_1000CEF80;
  if (!qword_1000CEF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF80);
  }
  return result;
}

uint64_t sub_10006C88C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006C8A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006C8F8()
{
  uint64_t v0 = sub_1000A3390();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A3600();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000A42F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000A33A0();
  sub_100010E40(v6, qword_1000D8138);
  sub_100010B3C(v6, (uint64_t)qword_1000D8138);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000A33B0();
}

uint64_t sub_10006CAD8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000CC730 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000A33A0();
  uint64_t v3 = sub_100010B3C(v2, (uint64_t)qword_1000D8138);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10006CB84()
{
  unint64_t result = qword_1000CEF90;
  if (!qword_1000CEF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEF90);
  }
  return result;
}

uint64_t sub_10006CBD8(uint64_t a1)
{
  unint64_t v2 = sub_10002972C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for PauseCurrentAudiobookIntent()
{
  return &type metadata for PauseCurrentAudiobookIntent;
}

unint64_t sub_10006CC2C()
{
  unint64_t result = qword_1000CD488;
  if (!qword_1000CD488)
  {
    sub_100008B14(&qword_1000CD490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CD488);
  }
  return result;
}

ValueMetadata *type metadata accessor for BookViewModel()
{
  return &type metadata for BookViewModel;
}

uint64_t destroy for ViewModel(uint64_t a1)
{
  return sub_10000EA48(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(void **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112));
}

uint64_t *initializeWithCopy for ViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = (void *)a2[10];
  uint64_t v15 = (void *)a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  unint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  sub_10000E8B0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = (uint64_t)v14;
  a1[11] = (uint64_t)v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  return a1;
}

uint64_t assignWithCopy for ViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v25 = a2[9];
  uint64_t v26 = (void *)a2[10];
  uint64_t v27 = (void *)a2[11];
  uint64_t v28 = a2[12];
  uint64_t v29 = a2[13];
  unint64_t v30 = a2[14];
  uint64_t v31 = a2[15];
  uint64_t v32 = a2[16];
  sub_10000E8B0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29, v30);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(void *)(a1 + 96) = v28;
  *(void *)(a1 + 104) = v29;
  *(void *)(a1 + 112) = v30;
  *(void *)(a1 + 120) = v31;
  *(void *)(a1 + 128) = v32;
  sub_10000EA48(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), (void *)v21, *((void **)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23);
  return a1;
}

__n128 initializeWithTake for SmallWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 128);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  long long v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v19;
  *(void *)(a1 + 128) = v3;
  sub_10000EA48(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), (void *)v13, *((void **)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for ViewModel(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 2 * -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10006D0BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 112) & 0x301 | (a2 << 62);
  *(void *)(result + 16) &= 1uLL;
  *(void *)(result + 112) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ViewModel()
{
  return &type metadata for ViewModel;
}

uint64_t destroy for LargeWidgetViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LargeWidgetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LargeWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LargeWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for LargeWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeWidgetViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeWidgetViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargeWidgetViewModel()
{
  return &type metadata for LargeWidgetViewModel;
}

uint64_t destroy for MediumWidgetViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediumWidgetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediumWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MediumWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediumWidgetViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediumWidgetViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumWidgetViewModel()
{
  return &type metadata for MediumWidgetViewModel;
}

ValueMetadata *type metadata accessor for SmallWidgetViewModel()
{
  return &type metadata for SmallWidgetViewModel;
}

uint64_t destroy for AccessoryCircularView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccessoryCircularView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void **)(a2 + 80);
  uint64_t v7 = *(void **)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v6;
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccessoryCircularView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 80);
  uint64_t v7 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v7;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 88);
  id v10 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v9;
  id v11 = v9;

  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AccessoryCircularView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  uint64_t v5 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  uint64_t v7 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryCircularView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryCircularView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularWidgetViewModel()
{
  return &type metadata for CircularWidgetViewModel;
}

uint64_t sub_10006D98C(char a1)
{
  int v2 = a1 & 1;
  sub_100004FDC(&qword_1000CCF18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A8D50;
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  *(void *)(inited + 32) = *v1;
  *(void *)(inited + 40) = v4;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10006DB70(v2);
  uint64_t v8 = v6;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v6;
  if (!v4)
  {
    uint64_t v9 = (char *)&_swiftEmptyArrayStorage;
    if (!v6) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100058E74(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v11 = *((void *)v9 + 2);
  unint64_t v10 = *((void *)v9 + 3);
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_100058E74((char *)(v10 > 1), v11 + 1, 1, v9);
  }
  *((void *)v9 + 2) = v11 + 1;
  long long v12 = &v9[16 * v11];
  *((void *)v12 + 4) = v5;
  *((void *)v12 + 5) = v4;
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_100058E74(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v14 = *((void *)v9 + 2);
    unint64_t v13 = *((void *)v9 + 3);
    if (v14 >= v13 >> 1) {
      uint64_t v9 = sub_100058E74((char *)(v13 > 1), v14 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v14 + 1;
    long long v15 = &v9[16 * v14];
    *((void *)v15 + 4) = v7;
    *((void *)v15 + 5) = v8;
  }
LABEL_12:
  swift_release();
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v16 = sub_1000A4250();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_10006DB70(int a1)
{
  int v54 = a1;
  uint64_t v50 = sub_1000A42F0();
  uint64_t v49 = *(void *)(v50 - 8);
  uint64_t v2 = __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v42 - v4;
  uint64_t v5 = sub_1000A33F0();
  uint64_t v52 = *(void (***)(char *, uint64_t))(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A3600();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_100004FDC(&qword_1000CE810);
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  long long v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v19 = (char *)&v42 - v18;
  uint64_t v20 = sub_1000A42D0();
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  __chkstk_darwin(v21);
  long long v22 = v1[3];
  v57[1] = v1[2];
  v57[2] = v22;
  v57[3] = v1[4];
  char v58 = *((unsigned char *)v1 + 80);
  long long v23 = v1[1];
  long long v56 = *v1;
  v57[0] = v23;
  sub_10000A95C((uint64_t)v57, (uint64_t)v59, &qword_1000CEF98);
  sub_10000A95C((uint64_t)v59, (uint64_t)&v60, &qword_1000CEF98);
  if (v61) {
    return 0;
  }
  uint64_t v42 = v17;
  uint64_t v24 = v53;
  uint64_t v44 = v19;
  uint64_t v45 = v11;
  uint64_t v43 = v8;
  double v25 = v60;
  if (v60 == 0.0) {
    return 0;
  }
  uint64_t v28 = v52 + 1;
  uint64_t v52 = (void (**)(char *, uint64_t))(v51 + 8);
  if (v54)
  {
    sub_1000A42C0();
    v63._countAndFlagsBits = 0;
    v63._object = (void *)0xE000000000000000;
    sub_1000A42B0(v63);
    double v55 = v25;
    uint64_t v29 = v13;
    sub_1000A35C0();
    sub_100053034();
    uint64_t v39 = v42;
    sub_1000A33C0();
    sub_1000A33E0();
    uint64_t v40 = v44;
    sub_1000A33D0();
    (*v28)(v7, v24);
    uint64_t v41 = *v52;
    (*v52)(v39, v14);
    sub_10000B17C(&qword_1000CE820, &qword_1000CE810);
    sub_10000A504();
    sub_1000A4290();
    v41(v40, v14);
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
  }
  else
  {
    sub_1000A42C0();
    v62._countAndFlagsBits = 0;
    v62._object = (void *)0xE000000000000000;
    sub_1000A42B0(v62);
    double v55 = v25;
    uint64_t v29 = v13;
    sub_1000A35C0();
    sub_100053034();
    unint64_t v30 = v42;
    sub_1000A33C0();
    sub_1000A33E0();
    uint64_t v31 = v44;
    sub_1000A33D0();
    (*v28)(v7, v24);
    uint64_t v32 = *v52;
    (*v52)(v30, v14);
    sub_10000B17C(&qword_1000CE820, &qword_1000CE810);
    sub_10000A504();
    sub_1000A4290();
    v32(v31, v14);
    v33._countAndFlagsBits = 0x74656C706D6F6320;
    v33._object = (void *)0xE900000000000065;
  }
  sub_1000A42B0(v33);
  uint64_t v34 = v48;
  sub_1000A42E0();
  sub_1000A35D0();
  uint64_t v35 = v49;
  uint64_t v36 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v47, v34, v50);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v38 = [self bundleForClass:ObjCClassFromMetadata];
  sub_1000A35D0();
  uint64_t v26 = sub_1000A4350();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v43);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
  return v26;
}

uint64_t sub_10006E38C()
{
  uint64_t v19 = sub_1000A3600();
  uint64_t v1 = *(void *)(v19 - 8);
  uint64_t v2 = __chkstk_darwin(v19);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v5 = sub_1000A42F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = sub_1000A42D0();
  __chkstk_darwin(v12 - 8);
  sub_10000A95C(v0 + 8, (uint64_t)v21, &qword_1000CEFA0);
  sub_10000A95C((uint64_t)v21, (uint64_t)&v22, &qword_1000CEFA0);
  uint64_t v13 = 0;
  if ((v23 & 1) == 0)
  {
    uint64_t v14 = v22;
    sub_1000A42C0();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    sub_1000A42B0(v24);
    uint64_t v20 = v14;
    sub_1000A42A0();
    v25._object = (void *)0x80000001000A7BB0;
    v25._countAndFlagsBits = 0xD000000000000016;
    sub_1000A42B0(v25);
    sub_1000A42E0();
    sub_1000A35D0();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = [self bundleForClass:ObjCClassFromMetadata];
    sub_1000A35D0();
    uint64_t v13 = sub_1000A4350();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return v13;
}

uint64_t sub_10006E6E0()
{
  uint64_t v19 = sub_1000A3600();
  uint64_t v1 = *(void *)(v19 - 8);
  uint64_t v2 = __chkstk_darwin(v19);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v5 = sub_1000A42F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = sub_1000A42D0();
  __chkstk_darwin(v12 - 8);
  sub_10000A95C(v0 + 8, (uint64_t)v21, &qword_1000CEFA0);
  sub_10000A95C((uint64_t)v21, (uint64_t)&v22, &qword_1000CEFA0);
  uint64_t v13 = 0;
  if ((v23 & 1) == 0)
  {
    uint64_t v14 = v22;
    sub_1000A42C0();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    sub_1000A42B0(v24);
    uint64_t v20 = v14;
    sub_1000A42A0();
    v25._countAndFlagsBits = 0x206F74206E696D20;
    v25._object = (void *)0xEC0000006C616F67;
    sub_1000A42B0(v25);
    sub_1000A42E0();
    sub_1000A35D0();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = [self bundleForClass:ObjCClassFromMetadata];
    sub_1000A35D0();
    uint64_t v13 = sub_1000A4350();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return v13;
}

uint64_t sub_10006EA38()
{
  uint64_t v1 = sub_1000A3600();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v20 - v4;
  uint64_t v6 = sub_1000A42F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = sub_1000A42D0();
  __chkstk_darwin(v13 - 8);
  if (*(void *)(*(void *)(v0 + 32) + 16)
    && (sub_10000A95C(v0 + 8, (uint64_t)v21, &qword_1000CEFA0),
        sub_10000A95C((uint64_t)v21, (uint64_t)&v22, &qword_1000CEFA0),
        (v23 & 1) == 0))
  {
    uint64_t v16 = v22;
    sub_1000A42C0();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    sub_1000A42B0(v24);
    v20[1] = v16;
    sub_1000A42A0();
    v25._countAndFlagsBits = 0x206F74206E696D20;
    v25._object = (void *)0xEC0000006C616F67;
    sub_1000A42B0(v25);
    sub_1000A42E0();
    sub_1000A35D0();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v18 = [self bundleForClass:ObjCClassFromMetadata];
    sub_1000A35D0();
    uint64_t v15 = sub_1000A4350();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_1000A44B0();
    sub_10006EEA0();
    uint64_t v14 = (void *)sub_1000A4550();
    sub_1000A3750();

    return 0;
  }
  return v15;
}

BOOL sub_10006EDEC(char *a1, char *a2)
{
  return flt_1000AAE10[*a1] == flt_1000AAE10[*a2];
}

Swift::Int sub_10006EE10()
{
  return sub_1000568AC(0, *v0);
}

void sub_10006EE1C()
{
  sub_1000A4770(LODWORD(flt_1000AAE10[*v0]));
}

Swift::Int sub_10006EE54(uint64_t a1)
{
  return sub_1000568AC(a1, *v1);
}

uint64_t sub_10006EE5C@<X0>(float *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10006F1AC(*a1);
  *a2 = result;
  return result;
}

float sub_10006EE88@<S0>(float *a1@<X8>)
{
  float result = flt_1000AAE10[*v1];
  *a1 = result;
  return result;
}

unint64_t sub_10006EEA0()
{
  unint64_t result = qword_1000CEFA8;
  if (!qword_1000CEFA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CEFA8);
  }
  return result;
}

uint64_t sub_10006EEE0()
{
  uint64_t v0 = sub_1000A3600();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v18[-v5];
  uint64_t v7 = sub_1000A42F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v18[-v12];
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_1000A4360();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v16;
}

uint64_t sub_10006F15C()
{
  return sub_10006F220(0xD00000000000002FLL, 0x80000001000A7B10, (uint64_t)"Shorter string for empty state small widget when there are zero books", 69);
}

uint64_t sub_10006F184()
{
  return sub_10006F220(0xD000000000000016, 0x80000001000A7AA0, (uint64_t)"Shortest string for empty state small widget when there are zero books", 70);
}

uint64_t sub_10006F1AC(float a1)
{
  if (a1 == 0.0) {
    return 0;
  }
  if (a1 == 0.25) {
    return 1;
  }
  if (a1 == 0.75) {
    unsigned int v2 = 3;
  }
  else {
    unsigned int v2 = 4;
  }
  if (a1 == 0.5) {
    return 2;
  }
  else {
    return v2;
  }
}

uint64_t sub_10006F1F8()
{
  return sub_10006F220(0x1000000000000028, 0x80000001000A7A10, (uint64_t)"Empty state", 11);
}

uint64_t sub_10006F220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a3;
  void v22[2] = a4;
  uint64_t v4 = sub_1000A3600();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = sub_1000A42F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)v22 - v16;
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v20 = sub_1000A4360();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v20;
}

unsigned char *storeEnumTagSinglePayload for WidgetRelevance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006F55CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevance()
{
  return &type metadata for WidgetRelevance;
}

unint64_t sub_10006F598()
{
  unint64_t result = qword_1000CEFB0;
  if (!qword_1000CEFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEFB0);
  }
  return result;
}

id sub_10006F5EC()
{
  uint64_t v1 = sub_1000A4130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4120();
  char v5 = sub_1000A40F0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    if (qword_1000CC680 != -1) {
      swift_once();
    }
    sub_10000A284(qword_1000D8058, qword_1000D8070);
    unint64_t v10 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v11 = 0;
    return sub_10005402C(v9, v10, v11);
  }
  if (qword_1000CC680 != -1) {
    swift_once();
  }
  sub_10000A284(qword_1000D8058, qword_1000D8070);
  uint64_t v6 = *(void *)(v0 + 32);
  unint64_t v7 = *(void *)(v0 + 40);
  id result = sub_10005402C(v6, v7, 0);
  if (!result)
  {
    sub_10000A284(qword_1000D8058, qword_1000D8070);
    uint64_t v9 = v6;
    unint64_t v10 = v7;
    uint64_t v11 = 2;
    return sub_10005402C(v9, v10, v11);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIconBackgroundView()
{
  return &type metadata for AppIconBackgroundView;
}

uint64_t sub_10006F7A4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10006F7C0@<D0>(uint64_t a1@<X8>)
{
  sub_100004FDC(&qword_1000CE878);
  double v2 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(*(void *)&v2 + 16) = xmmword_1000A8D50;
  if (qword_1000CC738 != -1) {
    swift_once();
  }
  *(void *)(*(void *)&v2 + 32) = qword_1000CEFB8;
  uint64_t v3 = qword_1000CC740;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  *(void *)(*(void *)&v2 + 40) = qword_1000CEFC0;
  *(double *)&long long v5 = v2;
  sub_1000A43E0();
  swift_retain();
  sub_1000A40A0();
  sub_1000A40B0();
  sub_1000A4060();
  sub_1000A3940();
  double result = v2;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_10006F908(uint64_t a1)
{
  return sub_10006F978(a1, (uint64_t)sub_10006F930, (uint64_t)&unk_1000C85D8, &qword_1000CEFB8);
}

id sub_10006F930(void *a1)
{
  return sub_10006FA6C(a1, 0.188235294, 1.0, 0.658823529, 0.0);
}

uint64_t sub_10006F950(uint64_t a1)
{
  return sub_10006F978(a1, (uint64_t)sub_10006FA40, (uint64_t)&unk_1000C85B0, &qword_1000CEFC0);
}

uint64_t sub_10006F978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v7 = objc_allocWithZone((Class)UIColor);
  v10[4] = a2;
  v10[5] = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_10002EC88;
  v10[3] = a3;
  uint64_t v8 = _Block_copy(v10);
  [v7 initWithDynamicProvider:v8];
  _Block_release(v8);
  swift_release();
  uint64_t result = sub_1000A3F90();
  *a4 = result;
  return result;
}

id sub_10006FA40(void *a1)
{
  return sub_10006FA6C(a1, 0.0784313725, 0.976470588, 0.403921569, 0.117647059);
}

id sub_10006FA6C(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = [a1 userInterfaceStyle];
  id v10 = objc_allocWithZone((Class)UIColor);
  if (v9 == (id)2)
  {
    double v11 = a2;
    double v12 = a2;
    double v13 = a2;
  }
  else
  {
    double v11 = a3;
    double v12 = a4;
    double v13 = a5;
  }

  return [v10 initWithRed:v11 green:v12 blue:v13 alpha:1.0];
}

uint64_t sub_10006FB08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006FB18()
{
  return swift_release();
}

unint64_t sub_10006FB24()
{
  unint64_t result = qword_1000CEFC8;
  if (!qword_1000CEFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CEFC8);
  }
  return result;
}

uint64_t destroy for SmallBookProgressView(uint64_t a1)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SmallBookProgressView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  double v12 = *(void **)(a2 + 120);
  double v13 = *(void **)(a2 + 128);
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = v13;
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  uint64_t v15 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v15;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = v12;
  id v18 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SmallBookProgressView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_10000A4F8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(a1 + 120);
  id v17 = *(void **)(a2 + 120);
  *(void *)(a1 + 120) = v17;
  id v18 = v17;

  id v19 = *(void **)(a2 + 128);
  uint64_t v20 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v19;
  id v21 = v19;

  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_retain();
  swift_release();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

__n128 initializeWithTake for SmallBookProgressView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for SmallBookProgressView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v4;
  sub_10000A4F8(v5, v6, v7, v8, v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  uint64_t v12 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmallBookProgressView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmallBookProgressView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmallBookProgressView()
{
  return &type metadata for SmallBookProgressView;
}

uint64_t sub_1000700A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000700BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004FDC(&qword_1000CEFD0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_100004FDC(&qword_1000CEFD8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = sub_1000A3B60();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v12 = (uint64_t)&v11[*(int *)(sub_100004FDC(&qword_1000CEFE0) + 44)];
  *(void *)uint64_t v8 = sub_1000A3BB0();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v13 = sub_100004FDC(&qword_1000CEFE8);
  sub_100070328(v1, (uint64_t)&v8[*(int *)(v13 + 44)]);
  sub_10000B1C0((uint64_t)v8, (uint64_t)v6, &qword_1000CEFD0);
  sub_10000B1C0((uint64_t)v6, v12, &qword_1000CEFD0);
  uint64_t v14 = v12 + *(int *)(sub_100004FDC(&qword_1000CEFF0) + 48);
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  sub_10000A9C0((uint64_t)v8, &qword_1000CEFD0);
  sub_10000A9C0((uint64_t)v6, &qword_1000CEFD0);
  long long v15 = *(_OWORD *)(v1 + 16);
  v26[0] = *(_OWORD *)v1;
  v26[1] = v15;
  char v27 = *(unsigned char *)(v1 + 32);
  sub_10000A95C((uint64_t)v26, (uint64_t)v28, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v28, (void (*)(void, void, void, void, void))sub_100011214);
  double v16 = sub_100009B60();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_100012D8C((uint64_t)v26, (void (*)(void, void, void, void, void))sub_10000A4F8);
  char v23 = sub_1000A3D10();
  sub_10000B1C0((uint64_t)v11, a1, &qword_1000CEFD8);
  uint64_t v24 = a1 + *(int *)(sub_100004FDC(&qword_1000CEFF8) + 36);
  *(unsigned char *)uint64_t v24 = v23;
  *(double *)(v24 + 8) = v16;
  *(void *)(v24 + 16) = v18;
  *(void *)(v24 + 24) = v20;
  *(void *)(v24 + 32) = v22;
  *(unsigned char *)(v24 + 40) = 0;
  return sub_10000A9C0((uint64_t)v11, &qword_1000CEFD8);
}

uint64_t sub_100070328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000CDCA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v68 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004FDC(&qword_1000CF000);
  uint64_t v5 = __chkstk_darwin(v67);
  uint64_t v70 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)&v61 - v8;
  __chkstk_darwin(v7);
  uint64_t v69 = (uint64_t)&v61 - v9;
  uint64_t v62 = sub_1000A3490();
  uint64_t v10 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for BookCoverView();
  uint64_t v14 = __chkstk_darwin(v13);
  double v16 = (uint64_t *)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v63 = sub_100004FDC(&qword_1000CCF08);
  uint64_t v19 = __chkstk_darwin(v63);
  uint64_t v65 = (uint64_t)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  char v23 = (char *)&v61 - v22;
  __chkstk_darwin(v21);
  uint64_t v64 = (uint64_t)&v61 - v24;
  long long v25 = *(_OWORD *)(a1 + 152);
  long long v82 = *(_OWORD *)(a1 + 136);
  *(_OWORD *)uint64_t v83 = v25;
  long long v26 = *(_OWORD *)(a1 + 120);
  *(void *)&v83[16] = *(void *)(a1 + 168);
  long long v27 = *(_OWORD *)(a1 + 56);
  long long v28 = *(_OWORD *)(a1 + 88);
  long long v78 = *(_OWORD *)(a1 + 72);
  long long v79 = v28;
  long long v80 = *(_OWORD *)(a1 + 104);
  long long v81 = v26;
  v77[0] = *(_OWORD *)(a1 + 40);
  v77[1] = v27;
  long long v86 = v80;
  long long v87 = v26;
  long long v88 = v82;
  long long v84 = v78;
  long long v85 = v28;
  char v89 = v83[0];
  sub_10000A32C((uint64_t)v77);
  sub_10000832C((uint64_t)&v84, (uint64_t)v12);
  sub_10000A398((uint64_t)v77);
  long long v92 = v86;
  long long v93 = v87;
  long long v94 = v88;
  char v95 = v89;
  long long v90 = v84;
  long long v91 = v85;
  char v29 = sub_10001A23C();
  if (*(void *)&v83[16])
  {
    if (*(_OWORD *)&v83[8] == v92) {
      char v30 = 1;
    }
    else {
      char v30 = sub_1000A46A0();
    }
  }
  else
  {
    char v30 = 0;
  }
  uint64_t *v16 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v16 + v13[5], v12, v62);
  *((unsigned char *)v16 + v13[6]) = v29 & 1;
  uint64_t v31 = (char *)v16 + v13[7];
  long long v32 = v87;
  *((_OWORD *)v31 + 2) = v86;
  *((_OWORD *)v31 + 3) = v32;
  *((_OWORD *)v31 + 4) = v88;
  v31[80] = v89;
  long long v33 = v85;
  *(_OWORD *)uint64_t v31 = v84;
  *((_OWORD *)v31 + 1) = v33;
  *((unsigned char *)v16 + v13[8]) = v30 & 1;
  *((unsigned char *)v16 + v13[9]) = 0;
  sub_10001312C((uint64_t)v16, (uint64_t)v18);
  sub_100013190((uint64_t)&v84);
  char v34 = sub_1000A3D60();
  long long v35 = *(_OWORD *)(a1 + 16);
  v74[0] = *(_OWORD *)a1;
  v74[1] = v35;
  char v75 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v74, (uint64_t)v76, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v76, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v74, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  sub_100070DEC((uint64_t)v18, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  uint64_t v44 = &v23[*(int *)(v63 + 36)];
  char *v44 = v34;
  *((void *)v44 + 1) = v37;
  *((void *)v44 + 2) = v39;
  *((void *)v44 + 3) = v41;
  *((void *)v44 + 4) = v43;
  v44[40] = 0;
  sub_100019258((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  uint64_t v45 = v64;
  sub_10000A95C((uint64_t)v23, v64, &qword_1000CCF08);
  unsigned __int8 v46 = sub_1000A3CE0();
  unsigned __int8 v47 = sub_1000A3D00();
  char v48 = sub_1000A3CF0();
  sub_1000A3CF0();
  if (sub_1000A3CF0() != v46) {
    char v48 = sub_1000A3CF0();
  }
  sub_1000A3CF0();
  if (sub_1000A3CF0() != v47) {
    char v48 = sub_1000A3CF0();
  }
  uint64_t v49 = v61;
  uint64_t v50 = (uint64_t)v68;
  unsigned char *v68 = v48;
  uint64_t v51 = sub_100004FDC(&qword_1000CDCD8);
  sub_100070A1C(a1, v50 + *(int *)(v51 + 44));
  sub_1000A3BA0();
  sub_1000A3B50();
  sub_1000A3910();
  uint64_t v52 = v66;
  sub_10000B1C0(v50, v66, &qword_1000CDCA0);
  uint64_t v53 = (_OWORD *)(v52 + *(int *)(v67 + 36));
  long long v54 = v72;
  *uint64_t v53 = v71;
  v53[1] = v54;
  _OWORD v53[2] = v73;
  sub_10000A9C0(v50, &qword_1000CDCA0);
  uint64_t v55 = v69;
  sub_10000A95C(v52, v69, &qword_1000CF000);
  uint64_t v56 = v65;
  sub_10000B1C0(v45, v65, &qword_1000CCF08);
  uint64_t v57 = v70;
  sub_10000B1C0(v55, v70, &qword_1000CF000);
  sub_10000B1C0(v56, v49, &qword_1000CCF08);
  uint64_t v58 = sub_100004FDC(&qword_1000CF008);
  sub_10000B1C0(v57, v49 + *(int *)(v58 + 48), &qword_1000CF000);
  uint64_t v59 = v49 + *(int *)(v58 + 64);
  *(void *)uint64_t v59 = 0;
  *(unsigned char *)(v59 + 8) = 0;
  sub_10000A9C0(v55, &qword_1000CF000);
  sub_10000A9C0(v45, &qword_1000CCF08);
  sub_10000A9C0(v57, &qword_1000CF000);
  return sub_10000A9C0(v56, &qword_1000CCF08);
}

uint64_t sub_100070A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for LabelView();
  uint64_t v4 = (int *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v38 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v38 - v7);
  uint64_t v9 = sub_100004FDC(&qword_1000CDCE0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - v14;
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v17 = *(_OWORD *)(a1 + 152);
  long long v46 = *(_OWORD *)(a1 + 136);
  long long v47 = v17;
  uint64_t v48 = *(void *)(a1 + 168);
  long long v18 = *(_OWORD *)(a1 + 56);
  long long v19 = *(_OWORD *)(a1 + 88);
  long long v42 = *(_OWORD *)(a1 + 72);
  long long v43 = v19;
  long long v44 = *(_OWORD *)(a1 + 104);
  long long v45 = v16;
  long long v20 = *(_OWORD *)(a1 + 40);
  long long v41 = v18;
  long long v40 = v20;
  long long v51 = v44;
  long long v52 = v16;
  long long v53 = v46;
  long long v49 = v42;
  long long v50 = v19;
  char v54 = v47;
  uint64_t v21 = sub_10006DB70(0);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(a1 + 192);
  swift_retain();
  uint64_t v25 = sub_1000A3C30();
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  long long v26 = (uint64_t *)((char *)v8 + v4[7]);
  *long long v26 = v21;
  v26[1] = v23;
  *(uint64_t *)((char *)v8 + v4[8]) = v24;
  long long v27 = (char *)v8 + v4[9];
  *(void *)long long v27 = v25;
  *((void *)v27 + 1) = 0;
  *((_WORD *)v27 + 8) = 1;
  sub_100070DEC((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LabelView);
  *(_WORD *)&v13[*(int *)(v10 + 44)] = 257;
  sub_100019258((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_10000A95C((uint64_t)v13, (uint64_t)v15, &qword_1000CDCE0);
  uint64_t v28 = sub_10006DB70(1);
  uint64_t v30 = v29;
  swift_retain();
  uint64_t v31 = sub_1000A3C30();
  *uint64_t v8 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  long long v32 = (uint64_t *)((char *)v8 + v4[7]);
  uint64_t *v32 = v28;
  v32[1] = v30;
  *(uint64_t *)((char *)v8 + v4[8]) = v24;
  long long v33 = (char *)v8 + v4[9];
  *(void *)long long v33 = v31;
  *((void *)v33 + 1) = 0;
  *((_WORD *)v33 + 8) = 1;
  sub_10000B1C0((uint64_t)v15, (uint64_t)v13, &qword_1000CDCE0);
  uint64_t v34 = v38;
  sub_100070DEC((uint64_t)v8, v38, (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v35 = v39;
  sub_10000B1C0((uint64_t)v13, v39, &qword_1000CDCE0);
  uint64_t v36 = sub_100004FDC(&qword_1000CDCE8);
  sub_100070DEC(v34, v35 + *(int *)(v36 + 48), (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_100019258((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_10000A9C0((uint64_t)v15, &qword_1000CDCE0);
  sub_100019258(v34, (uint64_t (*)(void))type metadata accessor for LabelView);
  return sub_10000A9C0((uint64_t)v13, &qword_1000CDCE0);
}

uint64_t sub_100070D80@<X0>(uint64_t a1@<X8>)
{
  return sub_1000700BC(a1);
}

uint64_t sub_100070DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeWithCopy for SmallBookProgressView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for SmallBookProgressView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

__n128 initializeWithTake for DayViewModel.DayNameViewModel(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for SmallBookProgressView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmallBookProgressView.ViewConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmallBookProgressView.ViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmallBookProgressView.ViewConfiguration()
{
  return &type metadata for SmallBookProgressView.ViewConfiguration;
}

unint64_t sub_100070FDC()
{
  unint64_t result = qword_1000CF010;
  if (!qword_1000CF010)
  {
    sub_100008B14(&qword_1000CEFF8);
    sub_100071058();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF010);
  }
  return result;
}

unint64_t sub_100071058()
{
  unint64_t result = qword_1000CF018;
  if (!qword_1000CF018)
  {
    sub_100008B14(&qword_1000CEFD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF018);
  }
  return result;
}

uint64_t sub_1000710B4()
{
  id v0 = [self books];
  id v1 = [v0 userDefaults];

  NSString v2 = sub_1000A4300();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    sub_1000A45B0();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v6, 0, sizeof(v6));
  }
  sub_1000711E4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v5;
    }
  }
  else
  {
    sub_10007124C((uint64_t)v7);
  }
  return 0;
}

uint64_t sub_1000711E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CD6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007124C(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CD6C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for NowPlayingInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for NowPlayingInfo()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for NowPlayingInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for NowPlayingInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingInfo()
{
  return &type metadata for NowPlayingInfo;
}

ValueMetadata *type metadata accessor for BooksAssetAppIntentsPerformer()
{
  return &type metadata for BooksAssetAppIntentsPerformer;
}

uint64_t destroy for MediumTwoThreeBookView(uint64_t a1)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MediumTwoThreeBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  long long v12 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v12;
  long long v13 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v13;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MediumTwoThreeBookView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_10000A4F8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MediumTwoThreeBookView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for MediumTwoThreeBookView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v4;
  sub_10000A4F8(v5, v6, v7, v8, v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v13 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v13;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediumTwoThreeBookView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediumTwoThreeBookView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumTwoThreeBookView()
{
  return &type metadata for MediumTwoThreeBookView;
}

uint64_t sub_1000718CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000718E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CF028);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000CF030);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  long long v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000A3BB0();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v11 = sub_100004FDC(&qword_1000CF038);
  sub_100071B4C(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  char v12 = sub_1000A3D40();
  long long v13 = *(_OWORD *)(a1 + 16);
  v34[0] = *(_OWORD *)a1;
  v34[1] = v13;
  char v35 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v34, (uint64_t)v36, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v36, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v34, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_10000B1C0((uint64_t)v6, (uint64_t)v10, &qword_1000CF028);
  uint64_t v22 = &v10[*(int *)(v8 + 44)];
  *uint64_t v22 = v12;
  *((void *)v22 + 1) = v15;
  *((void *)v22 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  sub_10000A9C0((uint64_t)v6, &qword_1000CF028);
  char v23 = sub_1000A3D20();
  sub_100012D8C((uint64_t)v36, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v34, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_10000B1C0((uint64_t)v10, a2, &qword_1000CF030);
  uint64_t v32 = a2 + *(int *)(sub_100004FDC(&qword_1000CF040) + 36);
  *(unsigned char *)uint64_t v32 = v23;
  *(void *)(v32 + 8) = v25;
  *(void *)(v32 + 16) = v27;
  *(void *)(v32 + 24) = v29;
  *(void *)(v32 + 32) = v31;
  *(unsigned char *)(v32 + 40) = 0;
  return sub_10000A9C0((uint64_t)v10, &qword_1000CF030);
}

uint64_t sub_100071B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CDDA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100004FDC(&qword_1000CDDA8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  long long v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  char v12 = &v39[-v11];
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v48 = sub_100073640();
  uint64_t v47 = v14;
  uint64_t v49 = *(void *)(a1 + 160);
  sub_1000A3BA0();
  sub_1000A3B50();
  sub_1000A3910();
  uint64_t v46 = v51;
  int v45 = v52;
  uint64_t v44 = v53;
  int v43 = v54;
  uint64_t v42 = v55;
  uint64_t v41 = v56;
  int v40 = sub_1000A3D60();
  long long v15 = *(_OWORD *)(a1 + 16);
  v57[0] = *(_OWORD *)a1;
  v57[1] = v15;
  char v58 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v57, (uint64_t)v59, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v59, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v57, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  *(void *)uint64_t v6 = sub_1000A3B60();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  sub_100004FDC(&qword_1000CF048);
  uint64_t v60 = v13;
  uint64_t v50 = v13;
  swift_getKeyPath();
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v24 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v24 + 192) = v25;
  *(_OWORD *)(v24 + 208) = *(_OWORD *)(a1 + 192);
  *(void *)(v24 + 224) = *(void *)(a1 + 208);
  long long v26 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v24 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v24 + 128) = v26;
  long long v27 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v24 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v24 + 160) = v27;
  long long v28 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v24 + 64) = v28;
  long long v29 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v24 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v24 + 96) = v29;
  long long v30 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v24 + 32) = v30;
  sub_100012E34((uint64_t)&v60);
  sub_1000364F0(a1);
  sub_100004FDC(&qword_1000CCE90);
  sub_100004FDC(&qword_1000CF050);
  sub_10000B17C(&qword_1000CCEA0, &qword_1000CCE90);
  sub_100073920();
  sub_1000A4050();
  uint64_t v31 = sub_1000A4070();
  sub_100030FC0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v31, v32);
  sub_10000A9C0((uint64_t)v6, &qword_1000CDDA0);
  sub_10000A95C((uint64_t)v10, (uint64_t)v12, &qword_1000CDDA8);
  sub_10000B1C0((uint64_t)v12, (uint64_t)v10, &qword_1000CDDA8);
  uint64_t v33 = v47;
  *(void *)a2 = v48;
  *(void *)(a2 + 8) = v33;
  *(void *)(a2 + 16) = v46;
  *(unsigned char *)(a2 + 24) = v45;
  *(void *)(a2 + 32) = v44;
  *(unsigned char *)(a2 + 40) = v43;
  uint64_t v34 = v41;
  *(void *)(a2 + 48) = v42;
  *(void *)(a2 + 56) = v34;
  *(unsigned char *)(a2 + 64) = v40;
  *(void *)(a2 + 72) = v17;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v21;
  *(void *)(a2 + 96) = v23;
  *(unsigned char *)(a2 + 104) = 0;
  uint64_t v35 = v49;
  *(void *)(a2 + 112) = v49;
  *(unsigned char *)(a2 + 120) = 0;
  uint64_t v36 = sub_100004FDC(&qword_1000CF070);
  sub_10000B1C0((uint64_t)v10, a2 + *(int *)(v36 + 64), &qword_1000CDDA8);
  uint64_t v37 = a2 + *(int *)(v36 + 80);
  *(void *)uint64_t v37 = v35;
  *(unsigned char *)(v37 + 8) = 0;
  swift_bridgeObjectRetain();
  sub_10000A9C0((uint64_t)v12, &qword_1000CDDA8);
  sub_10000A9C0((uint64_t)v10, &qword_1000CDDA8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100072024@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v32 = sub_1000A3C90();
  uint64_t v5 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CDDB0);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FDC(&qword_1000CDDB8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100004FDC(&qword_1000CF078);
  uint64_t v14 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004FDC(&qword_1000CF050);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = a1[3];
  long long v41 = a1[2];
  long long v42 = v20;
  long long v43 = a1[4];
  char v44 = *((unsigned char *)a1 + 80);
  long long v21 = a1[1];
  long long v39 = *a1;
  long long v40 = v21;
  *(void *)long long v10 = sub_1000A3B60();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v22 = sub_100004FDC(&qword_1000CF080);
  sub_100072468(a2, (uint64_t)&v39, (uint64_t)&v10[*(int *)(v22 + 44)]);
  uint64_t v23 = sub_1000A4070();
  sub_100031030(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v23, v24);
  sub_10000A9C0((uint64_t)v10, &qword_1000CDDB0);
  long long v47 = v41;
  long long v48 = v42;
  long long v49 = v43;
  char v50 = v44;
  long long v45 = v39;
  long long v46 = v40;
  if (sub_10001A23C()) {
    sub_1000A3C80();
  }
  else {
    sub_1000A3C70();
  }
  unint64_t v25 = sub_1000739D0();
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v32);
  sub_10000A9C0((uint64_t)v13, &qword_1000CDDB8);
  if (sub_10001A23C())
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  else
  {
    uint64_t v26 = sub_10006D98C(1);
    unint64_t v27 = v28;
  }
  uint64_t v37 = v26;
  unint64_t v38 = v27;
  uint64_t v35 = v11;
  unint64_t v36 = v25;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  uint64_t v29 = v33;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v29);
  return sub_10000A95C((uint64_t)v19, v34, &qword_1000CF050);
}

uint64_t sub_100072468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a3;
  uint64_t v91 = sub_100004FDC(&qword_1000CF088);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  char v95 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CF090);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v92 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v88 = (char *)&v84 - v10;
  __chkstk_darwin(v9);
  uint64_t v89 = (uint64_t)&v84 - v11;
  uint64_t v85 = sub_1000A3490();
  uint64_t v12 = *(void *)(v85 - 8);
  uint64_t v13 = __chkstk_darwin(v85);
  uint64_t v86 = (uint64_t)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v84 - v15;
  uint64_t v17 = (int *)type metadata accessor for BookCoverView();
  uint64_t v18 = __chkstk_darwin(v17);
  long long v20 = (uint64_t *)((char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v84 - v21;
  uint64_t v84 = sub_100004FDC(&qword_1000CCF08);
  uint64_t v23 = __chkstk_darwin(v84);
  uint64_t v87 = (uint64_t)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v84 - v26;
  __chkstk_darwin(v25);
  uint64_t v94 = (uint64_t)&v84 - v28;
  long long v29 = *(_OWORD *)(a1 + 56);
  v104[0] = *(_OWORD *)(a1 + 40);
  v104[1] = v29;
  long long v30 = *(_OWORD *)(a1 + 88);
  v104[2] = *(_OWORD *)(a1 + 72);
  long long v105 = v30;
  sub_100035AB4((uint64_t)v104);
  sub_10000886C(a2, (uint64_t)v16);
  sub_100035AEC((uint64_t)v104);
  long long v31 = *(_OWORD *)(a2 + 48);
  long long v100 = *(_OWORD *)(a2 + 32);
  long long v101 = v31;
  long long v102 = *(_OWORD *)(a2 + 64);
  char v103 = *(unsigned char *)(a2 + 80);
  long long v32 = *(_OWORD *)(a2 + 16);
  long long v98 = *(_OWORD *)a2;
  long long v99 = v32;
  char v33 = sub_10001A23C();
  if (*((void *)&v105 + 1))
  {
    if (v105 == v100) {
      char v34 = 1;
    }
    else {
      char v34 = sub_1000A46A0();
    }
  }
  else
  {
    char v34 = 0;
  }
  *long long v20 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v20 + v17[5], v16, v85);
  *((unsigned char *)v20 + v17[6]) = v33 & 1;
  uint64_t v35 = (char *)v20 + v17[7];
  long long v36 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v35 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v35 + 3) = v36;
  *((_OWORD *)v35 + 4) = *(_OWORD *)(a2 + 64);
  v35[80] = *(unsigned char *)(a2 + 80);
  long long v37 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)a2;
  *((_OWORD *)v35 + 1) = v37;
  *((unsigned char *)v20 + v17[8]) = v34 & 1;
  *((unsigned char *)v20 + v17[9]) = 0;
  sub_10001312C((uint64_t)v20, (uint64_t)v22);
  sub_100013190(a2);
  char v38 = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_100070DEC((uint64_t)v22, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  long long v47 = &v27[*(int *)(v84 + 36)];
  *long long v47 = v38;
  *((void *)v47 + 1) = v40;
  *((void *)v47 + 2) = v42;
  *((void *)v47 + 3) = v44;
  *((void *)v47 + 4) = v46;
  v47[40] = 0;
  sub_100019258((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  sub_10000A95C((uint64_t)v27, v94, &qword_1000CCF08);
  sub_100035AB4((uint64_t)v104);
  sub_10000886C(a2, v86);
  uint64_t v48 = sub_100035AEC((uint64_t)v104);
  __chkstk_darwin(v48);
  *(&v84 - 2) = a1;
  *(&v84 - 1) = a2;
  sub_100004FDC(&qword_1000CDDC8);
  sub_100073CE0(&qword_1000CF098, &qword_1000CDDC8, (void (*)(void))sub_100073A80);
  sub_1000A3E10();
  sub_100004FDC(&qword_1000CCF18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A8D50;
  long long v50 = v98;
  *(_OWORD *)(inited + 32) = v98;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_10006DB70(0);
  uint64_t v53 = v51;
  *(void *)(inited + 48) = v52;
  *(void *)(inited + 56) = v51;
  if (!*((void *)&v50 + 1))
  {
    unsigned __int8 v54 = (char *)_swiftEmptyArrayStorage;
    if (!v51) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unsigned __int8 v54 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v56 = *((void *)v54 + 2);
  unint64_t v55 = *((void *)v54 + 3);
  if (v56 >= v55 >> 1) {
    unsigned __int8 v54 = sub_100058E74((char *)(v55 > 1), v56 + 1, 1, v54);
  }
  *((void *)v54 + 2) = v56 + 1;
  *(_OWORD *)&v54[16 * v56 + 32] = v50;
  if (v53)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned __int8 v54 = sub_100058E74(0, *((void *)v54 + 2) + 1, 1, v54);
    }
    unint64_t v58 = *((void *)v54 + 2);
    unint64_t v57 = *((void *)v54 + 3);
    if (v58 >= v57 >> 1) {
      unsigned __int8 v54 = sub_100058E74((char *)(v57 > 1), v58 + 1, 1, v54);
    }
    *((void *)v54 + 2) = v58 + 1;
    uint64_t v59 = &v54[16 * v58];
    *((void *)v59 + 4) = v52;
    *((void *)v59 + 5) = v53;
  }
LABEL_17:
  swift_release();
  uint64_t v60 = *((void *)v54 + 2);
  if (v60)
  {
    uint64_t v61 = (uint64_t *)(v54 + 40);
    uint64_t v62 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v67 = *(v61 - 1);
      uint64_t v66 = *v61;
      uint64_t v68 = HIBYTE(*v61) & 0xF;
      if ((*v61 & 0x2000000000000000) == 0) {
        uint64_t v68 = v67 & 0xFFFFFFFFFFFFLL;
      }
      if (v68)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v96 = v62;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10007AB8C(0, v62[2] + 1, 1);
          uint64_t v62 = v96;
        }
        unint64_t v64 = v62[2];
        unint64_t v63 = v62[3];
        if (v64 >= v63 >> 1)
        {
          sub_10007AB8C(v63 > 1, v64 + 1, 1);
          uint64_t v62 = v96;
        }
        _OWORD v62[2] = v64 + 1;
        uint64_t v65 = &v62[2 * v64];
        v65[4] = v67;
        v65[5] = v66;
      }
      v61 += 2;
      --v60;
    }
    while (v60);
  }
  else
  {
    uint64_t v62 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v96 = v62;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v70 = sub_1000A4250();
  uint64_t v72 = v71;
  swift_release();
  uint64_t v96 = (void *)v70;
  uint64_t v97 = v72;
  sub_10000B17C(&qword_1000CF0B8, &qword_1000CF088);
  sub_10000A504();
  long long v73 = v88;
  uint64_t v74 = v91;
  char v75 = v95;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v75, v74);
  uint64_t v76 = (uint64_t)v73;
  uint64_t v77 = v89;
  sub_10000A95C(v76, v89, &qword_1000CF090);
  uint64_t v78 = v94;
  uint64_t v79 = v87;
  sub_10000B1C0(v94, v87, &qword_1000CCF08);
  uint64_t v80 = v92;
  sub_10000B1C0(v77, v92, &qword_1000CF090);
  uint64_t v81 = v93;
  sub_10000B1C0(v79, v93, &qword_1000CCF08);
  uint64_t v82 = sub_100004FDC(&qword_1000CF0C0);
  sub_10000B1C0(v80, v81 + *(int *)(v82 + 48), &qword_1000CF090);
  sub_10000A9C0(v77, &qword_1000CF090);
  sub_10000A9C0(v78, &qword_1000CCF08);
  sub_10000A9C0(v80, &qword_1000CF090);
  return sub_10000A9C0(v79, &qword_1000CCF08);
}

uint64_t sub_100072E34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CF0B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000CDDC0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_1000A3BB0();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v13 = sub_100004FDC(&qword_1000CF0C8);
  sub_10007306C((void *)a1, a2, (uint64_t *)&v8[*(int *)(v13 + 44)]);
  LOBYTE(a2) = sub_1000A3D60();
  long long v14 = *(_OWORD *)(a1 + 16);
  v27[0] = *(_OWORD *)a1;
  v27[1] = v14;
  char v28 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v27, (uint64_t)v29, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v29, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v27, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_10000B1C0((uint64_t)v8, (uint64_t)v12, &qword_1000CF0B0);
  uint64_t v23 = &v12[*(int *)(v10 + 44)];
  *uint64_t v23 = (char)a2;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_10000A9C0((uint64_t)v8, &qword_1000CF0B0);
  uint64_t v24 = sub_1000A4080();
  sub_1000310A0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, 0.0, 1, v24, v25);
  return sub_10000A9C0((uint64_t)v12, &qword_1000CDDC0);
}

uint64_t sub_10007306C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v82 = type metadata accessor for LabelView();
  uint64_t v5 = __chkstk_darwin(v82);
  uint64_t v87 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v81 = (uint64_t *)((char *)&v74 - v7);
  if (*(void *)(a1[9] + 16) == 2)
  {
    uint64_t v8 = a2[1];
    uint64_t v74 = a2;
    char v75 = a1;
    if (v8)
    {
      uint64_t v103 = *a2;
      uint64_t v104 = v8;
      sub_10000A504();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1000A3E50();
      uint64_t v11 = v10;
      uint64_t v12 = a1;
      char v14 = v13 & 1;
      uint64_t v15 = v12[19];
      uint64_t v92 = v12[26];
      uint64_t v16 = sub_1000A3E20();
      uint64_t v18 = v17;
      char v20 = v19 & 1;
      sub_100017510(v9, v11, v14);
      swift_bridgeObjectRelease();
      sub_1000A3DD0();
      uint64_t v21 = sub_1000A3E40();
      uint64_t v23 = v22;
      char v25 = v24;
      uint64_t v92 = v26;
      swift_release();
      sub_100017510(v16, v18, v20);
      swift_bridgeObjectRelease();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v93 = v21;
      uint64_t v94 = v23;
      uint64_t v95 = v25 & 1;
      uint64_t v96 = v92;
      uint64_t v97 = KeyPath;
      uint64_t v98 = v15;
      long long v99 = 0u;
      long long v100 = 0u;
      long long v101 = 0u;
      __int16 v102 = 0;
    }
    else
    {
      unsigned int v31 = sub_1000A3C30();
      sub_1000A4070();
      sub_1000A3910();
      uint64_t v32 = v117;
      uint64_t v33 = v118;
      uint64_t v34 = v119;
      uint64_t v35 = v120;
      uint64_t v37 = v121;
      uint64_t v36 = v122;
      uint64_t v38 = sub_1000A3D30();
      sub_1000A38C0();
      uint64_t v93 = v31;
      uint64_t v94 = v32;
      uint64_t v95 = v33;
      uint64_t v96 = v34;
      uint64_t v97 = v35;
      uint64_t v98 = v37;
      *(void *)&long long v99 = v36;
      *((void *)&v99 + 1) = v38;
      *(void *)&long long v100 = v39;
      *((void *)&v100 + 1) = v40;
      *(void *)&long long v101 = v41;
      *((void *)&v101 + 1) = v42;
      __int16 v102 = 256;
    }
    sub_100004FDC(&qword_1000CF0D8);
    sub_100004FDC(&qword_1000CF0E0);
    sub_100073C40();
    sub_100073CE0(&qword_1000CF100, &qword_1000CF0E0, (void (*)(void))sub_100073D5C);
    sub_1000A3C00();
    uint64_t v28 = v103;
    uint64_t v29 = v104;
    uint64_t v78 = v114;
    uint64_t v88 = v113;
    uint64_t v89 = v112;
    uint64_t v90 = v111;
    uint64_t v91 = v106;
    uint64_t v92 = v107;
    uint64_t v84 = v109;
    uint64_t v85 = v108;
    uint64_t v86 = v110;
    if (v116) {
      int v43 = 256;
    }
    else {
      int v43 = 0;
    }
    int v80 = v43 | v115;
    a1 = v75;
    uint64_t v30 = v105;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v91 = 0;
    uint64_t v92 = 0;
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    uint64_t v89 = 0;
    uint64_t v90 = 0;
    uint64_t v88 = 0;
    uint64_t v78 = 0;
    int v80 = 65280;
  }
  uint64_t v44 = sub_10006DB70(1);
  uint64_t v46 = v45;
  uint64_t v47 = a1[15];
  uint64_t v48 = a1[26];
  swift_retain();
  uint64_t v49 = sub_1000A3C50();
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = (uint64_t)v81;
  *uint64_t v81 = v50;
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = v82;
  uint64_t v53 = (uint64_t *)(v51 + *(int *)(v82 + 20));
  *uint64_t v53 = v44;
  v53[1] = v46;
  *(void *)(v51 + *(int *)(v52 + 24)) = v48;
  uint64_t v54 = v51 + *(int *)(v52 + 28);
  *(void *)uint64_t v54 = v49;
  *(void *)(v54 + 8) = v47;
  *(_WORD *)(v54 + 16) = 0;
  uint64_t v55 = v87;
  sub_100070DEC(v51, v87, (uint64_t (*)(void))type metadata accessor for LabelView);
  unint64_t v56 = v79;
  uint64_t v83 = v28;
  *uint64_t v79 = v28;
  v56[1] = v29;
  uint64_t v76 = v30;
  uint64_t v77 = v29;
  uint64_t v57 = v91;
  _OWORD v56[2] = v30;
  v56[3] = v57;
  uint64_t v58 = v85;
  v56[4] = v92;
  v56[5] = v58;
  uint64_t v59 = v86;
  v56[6] = v84;
  v56[7] = v59;
  uint64_t v61 = v89;
  uint64_t v60 = v90;
  v56[8] = v90;
  v56[9] = v61;
  uint64_t v62 = v60;
  uint64_t v89 = v61;
  uint64_t v90 = v60;
  uint64_t v63 = v88;
  uint64_t v64 = v78;
  v56[10] = v88;
  v56[11] = v64;
  LOWORD(v47) = v80;
  *((_WORD *)v56 + 48) = v80;
  uint64_t v65 = sub_100004FDC(&qword_1000CF0D0);
  sub_100070DEC(v55, (uint64_t)v56 + *(int *)(v65 + 48), (uint64_t (*)(void))type metadata accessor for LabelView);
  uint64_t v73 = v63;
  uint64_t v71 = v62;
  uint64_t v72 = v61;
  uint64_t v66 = v84;
  LOBYTE(v63) = v76;
  uint64_t v67 = v77;
  uint64_t v68 = v85;
  uint64_t v69 = v86;
  sub_100073B20(v83, v77, v76, v91, v92, v85, v84, v86, v71, v72, v73, v64, v47);
  sub_100019258(v51, (uint64_t (*)(void))type metadata accessor for LabelView);
  sub_100019258(v87, (uint64_t (*)(void))type metadata accessor for LabelView);
  return sub_100073BB0(v83, v67, v63, v91, v92, v68, v66, v69, v90, v89, v88, v64, v47);
}

uint64_t sub_1000735A8@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 176);
  v11[10] = *(_OWORD *)(v1 + 160);
  v11[11] = v3;
  v11[12] = *(_OWORD *)(v1 + 192);
  uint64_t v12 = *(void *)(v1 + 208);
  long long v4 = *(_OWORD *)(v1 + 112);
  v11[6] = *(_OWORD *)(v1 + 96);
  v11[7] = v4;
  long long v5 = *(_OWORD *)(v1 + 144);
  v11[8] = *(_OWORD *)(v1 + 128);
  v11[9] = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  v11[2] = *(_OWORD *)(v1 + 32);
  v11[3] = v6;
  long long v7 = *(_OWORD *)(v1 + 80);
  v11[4] = *(_OWORD *)(v1 + 64);
  v11[5] = v7;
  long long v8 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v8;
  *(void *)a1 = sub_1000A3B60();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v9 = sub_100004FDC(&qword_1000CF020);
  return sub_1000718E8((uint64_t)v11, a1 + *(int *)(v9 + 44));
}

uint64_t sub_100073640()
{
  uint64_t v0 = sub_1000A3600();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  long long v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  long long v6 = &v18[-v5];
  uint64_t v7 = sub_1000A42F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  char v13 = &v18[-v12];
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_1000A4360();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v16;
}

uint64_t sub_1000738B8()
{
  sub_10000A4F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 232, 7);
}

uint64_t sub_100073918@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100072024(a1, v2 + 16, a2);
}

unint64_t sub_100073920()
{
  unint64_t result = qword_1000CF058;
  if (!qword_1000CF058)
  {
    sub_100008B14(&qword_1000CF050);
    sub_100008B14(&qword_1000CDDB8);
    sub_1000739D0();
    swift_getOpaqueTypeConformance2();
    sub_10002F01C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF058);
  }
  return result;
}

unint64_t sub_1000739D0()
{
  unint64_t result = qword_1000CF060;
  if (!qword_1000CF060)
  {
    sub_100008B14(&qword_1000CDDB8);
    sub_10000B17C(&qword_1000CF068, &qword_1000CDDB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF060);
  }
  return result;
}

uint64_t sub_100073A78@<X0>(uint64_t a1@<X8>)
{
  return sub_100072E34(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

unint64_t sub_100073A80()
{
  unint64_t result = qword_1000CF0A0;
  if (!qword_1000CF0A0)
  {
    sub_100008B14(&qword_1000CDDC0);
    sub_10000B17C(&qword_1000CF0A8, &qword_1000CF0B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF0A0);
  }
  return result;
}

uint64_t sub_100073B20(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int16 a13)
{
  if (HIBYTE(a13) <= 0xFEu) {
    return sub_100073B54(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, (unsigned __int16)(a13 & 0x1FF) >> 8);
  }
  return result;
}

uint64_t sub_100073B54(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  if ((a14 & 1) == 0)
  {
    sub_100017500(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100073BB0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int16 a13)
{
  if (HIBYTE(a13) <= 0xFEu) {
    return sub_100073BE4(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, (unsigned __int16)(a13 & 0x1FF) >> 8);
  }
  return result;
}

uint64_t sub_100073BE4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  if ((a14 & 1) == 0)
  {
    sub_100017510(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100073C40()
{
  unint64_t result = qword_1000CF0E8;
  if (!qword_1000CF0E8)
  {
    sub_100008B14(&qword_1000CF0D8);
    sub_10000B17C(&qword_1000CF0F0, &qword_1000CF0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF0E8);
  }
  return result;
}

uint64_t sub_100073CE0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100073D5C()
{
  return sub_100073CE0(&qword_1000CF108, &qword_1000CF110, (void (*)(void))sub_100073D8C);
}

unint64_t sub_100073D8C()
{
  unint64_t result = qword_1000CF118;
  if (!qword_1000CF118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF118);
  }
  return result;
}

uint64_t destroy for MediumTwoThreeBookView.ViewConfiguration()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MediumTwoThreeBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MediumTwoThreeBookView.ViewConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MediumTwoThreeBookView.ViewConfiguration(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for MediumTwoThreeBookView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediumTwoThreeBookView.ViewConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediumTwoThreeBookView.ViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumTwoThreeBookView.ViewConfiguration()
{
  return &type metadata for MediumTwoThreeBookView.ViewConfiguration;
}

uint64_t sub_10007409C()
{
  return sub_10000B17C(&qword_1000CF120, &qword_1000CF128);
}

double WidgetReadingHistory.Day.progressForGoal.getter(uint64_t a1, uint64_t a2)
{
  if (a1 >= a2) {
    uint64_t v2 = a2;
  }
  else {
    uint64_t v2 = a1;
  }
  return (double)v2 / (double)a2;
}

uint64_t WidgetReadingHistory.Day.minutesRemainingForGoal.getter(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_7;
  }
  double v2 = ceil((double)(a2 - result) / 60.0);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 9.22337204e18) {
    return (uint64_t)v2 & ~((uint64_t)v2 >> 63);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t WidgetReadingHistory.State.daysSinceLastReadDate.getter()
{
  uint64_t v1 = sub_1000A3560();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v27 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004FDC(&qword_1000CEA90);
  __chkstk_darwin(v3 - 8);
  long long v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  char v13 = (char *)&v26 - v12;
  __chkstk_darwin(v11);
  id v15 = (char *)&v26 - v14;
  uint64_t v29 = v0;
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v26 = v1;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    sub_10005E778(v16 + v18, (uint64_t)v13);
    swift_bridgeObjectRetain();
    uint64_t v19 = v17 - 1;
    if (v19)
    {
      uint64_t v24 = *(void *)(v7 + 72);
      uint64_t v25 = v16 + v24 + v18;
      do
      {
        sub_10005E778(v25, (uint64_t)v10);
        if (sub_1000A3500())
        {
          sub_10005E890((uint64_t)v13);
          sub_10005E7DC((uint64_t)v10, (uint64_t)v13);
        }
        else
        {
          sub_10005E890((uint64_t)v10);
        }
        v25 += v24;
        --v19;
      }
      while (v19);
    }
    sub_10005E7DC((uint64_t)v13, (uint64_t)v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    sub_10005E840(v29);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_10005E7DC((uint64_t)v5, (uint64_t)v15);
      char v20 = v27;
      sub_1000A3540();
      sub_1000A34D0();
      double v22 = v21;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v26);
      sub_10005E890((uint64_t)v15);
      *(double *)&uint64_t result = v22 / 60.0 / 60.0 / 24.0;
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_10000A9C0((uint64_t)v5, &qword_1000CEA90);
  *(double *)&uint64_t result = 0.0;
  return result;
}

uint64_t type metadata accessor for WidgetReadingHistory.DayEntry(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CF268);
}

id sub_1000744D8()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultManager];
  NSString v4 = sub_1000A4300();
  id v5 = [v3 URLForUbiquityContainerIdentifier:v4];

  if (v5)
  {
    sub_1000A3450();

    uint64_t v6 = sub_1000A3490();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 0, 1, v6);
  }
  else
  {
    uint64_t v7 = sub_1000A3490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  }
  sub_10000A9C0((uint64_t)v2, &qword_1000CCB30);
  return [objc_allocWithZone((Class)BDSBookWidgetDataSource) init];
}

uint64_t sub_100074664(uint64_t a1, uint64_t a2)
{
  v3[122] = v2;
  v3[121] = a2;
  v3[120] = a1;
  uint64_t v4 = sub_1000A4160();
  v3[123] = v4;
  v3[124] = *(void *)(v4 - 8);
  v3[125] = swift_task_alloc();
  v3[126] = swift_task_alloc();
  v3[127] = swift_task_alloc();
  return _swift_task_switch(sub_100074748, 0, 0);
}

uint64_t sub_100074748()
{
  uint64_t v55 = v0;
  if (sub_10007B3C0())
  {
    if (qword_1000CC750 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1000A3830();
    *(void *)(v0 + 1024) = sub_100010B3C(v1, (uint64_t)qword_1000CF138);
    uint64_t v2 = sub_1000A3810();
    os_log_type_t v3 = sub_1000A44D0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Reading Goals is on in Books settings. Fetching reading history data.", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 976);

    uint64_t v6 = *(void **)(v5 + 24);
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 872;
    *(void *)(v0 + 88) = sub_1000751DC;
    *(void *)(v0 + 704) = swift_continuation_init();
    *(void *)(v0 + 672) = _NSConcreteStackBlock;
    *(void *)(v0 + 680) = 0x40000000;
    *(void *)(v0 + 688) = sub_100077D50;
    *(void *)(v0 + 696) = &unk_1000C8D30;
    [v6 bookWidgetReadingHistoryStateInfoWithCompletionHandler:v0 + 672];
    uint64_t v7 = v0 + 80;
    goto LABEL_22;
  }
  if (qword_1000CC750 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1000A3830();
  sub_100010B3C(v8, (uint64_t)qword_1000CF138);
  uint64_t v9 = sub_1000A3810();
  os_log_type_t v10 = sub_1000A44D0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Reading Goals is off in Books settings. No reading history data was fetched.", v11, 2u);
    swift_slowDealloc();
  }

  *(void *)(v0 + 1032) = 0;
  *(_OWORD *)(v0 + 712) = 0u;
  *(_OWORD *)(v0 + 728) = 0u;
  *(void *)(v0 + 744) = 0;
  if (qword_1000CC750 != -1) {
    swift_once();
  }
  *(void *)(v0 + 1040) = sub_100010B3C(v8, (uint64_t)qword_1000CF138);
  uint64_t v12 = sub_1000A3810();
  os_log_type_t v13 = sub_1000A44D0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Fetching book data from the daemon.", v14, 2u);
    swift_slowDealloc();
  }
  uint64_t v15 = *(void *)(v0 + 1016);
  uint64_t v16 = *(void *)(v0 + 992);
  uint64_t v17 = *(void *)(v0 + 984);
  uint64_t v18 = *(void *)(v0 + 968);

  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(void *)(v0 + 1048) = v19;
  *(void *)(v0 + 1056) = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v19(v15, v18, v17);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v17);
  if (v20 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_16;
  }
  if (v20 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v22 = v0 + 832;
    uint64_t v23 = v0 + 144;
    uint64_t v24 = *(void **)(*(void *)(v0 + 976) + 16);
    *(void *)(v0 + 144) = v0;
    *(void *)(v0 + 184) = v0 + 888;
    *(void *)(v0 + 152) = sub_100076070;
    *(void *)(v0 + 864) = swift_continuation_init();
    *(void *)(v0 + 832) = _NSConcreteStackBlock;
    *(void *)(v0 + 840) = 0x40000000;
    *(void *)(v0 + 848) = sub_1000780A8;
    *(void *)(v0 + 856) = &unk_1000C8D00;
LABEL_21:
    [v24 getBookWidgetDataWithLimit:3 completion:v22];
    uint64_t v7 = v23;
LABEL_22:
    return _swift_continuation_await(v7);
  }
  if (v20 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v22 = v0 + 632;
    uint64_t v23 = v0 + 208;
    uint64_t v24 = *(void **)(*(void *)(v0 + 976) + 16);
    *(void *)(v0 + 208) = v0;
    *(void *)(v0 + 248) = v0 + 944;
    *(void *)(v0 + 216) = sub_1000764D4;
    *(void *)(v0 + 664) = swift_continuation_init();
    *(void *)(v0 + 632) = _NSConcreteStackBlock;
    *(void *)(v0 + 640) = 0x40000000;
    *(void *)(v0 + 648) = sub_1000780A8;
    *(void *)(v0 + 656) = &unk_1000C8CE8;
    goto LABEL_21;
  }
  if (&enum case for WidgetFamily.accessoryCorner(_:) && v20 == enum case for WidgetFamily.accessoryCorner(_:))
  {
LABEL_16:
    double v21 = *(void **)(*(void *)(v0 + 976) + 16);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 912;
    *(void *)(v0 + 24) = sub_100075C0C;
    *(void *)(v0 + 784) = swift_continuation_init();
    *(void *)(v0 + 752) = _NSConcreteStackBlock;
    *(void *)(v0 + 760) = 0x40000000;
    *(void *)(v0 + 768) = sub_1000780A8;
    *(void *)(v0 + 776) = &unk_1000C8D18;
    [v21 getBookWidgetDataWithLimit:1 completion:v0 + 752];
    uint64_t v7 = v0 + 16;
    goto LABEL_22;
  }
  v19(*(void *)(v0 + 1008), *(void *)(v0 + 968), *(void *)(v0 + 984));
  uint64_t v25 = sub_1000A3810();
  os_log_type_t v26 = sub_1000A44C0();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v28 = *(void *)(v0 + 1008);
  uint64_t v29 = *(void *)(v0 + 992);
  uint64_t v30 = *(void *)(v0 + 984);
  if (v27)
  {
    unsigned int v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    *(_DWORD *)unsigned int v31 = 136315138;
    sub_10007C40C();
    uint64_t v32 = sub_1000A4690();
    *(void *)(v0 + 896) = sub_10007A4B4(v32, v33, (uint64_t *)&v54);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v34(v28, v30);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Widget family '%s' is not supported", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v34(*(void *)(v0 + 1008), *(void *)(v0 + 984));
  }

  v34(*(void *)(v0 + 1016), *(void *)(v0 + 984));
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_32;
    }
LABEL_42:
    uint64_t v37 = _swiftEmptyArrayStorage;
    goto LABEL_43;
  }
  uint64_t v35 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v35) {
    goto LABEL_42;
  }
LABEL_32:
  uint64_t v54 = _swiftEmptyArrayStorage;
  uint64_t v7 = sub_10007AB6C(0, v35 & ~(v35 >> 63), 0);
  if (v35 < 0)
  {
    __break(1u);
    return _swift_continuation_await(v7);
  }
  uint64_t v36 = 0;
  uint64_t v37 = v54;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v38 = (id)sub_1000A4600();
    }
    else {
      id v38 = (id)_swiftEmptyArrayStorage[v36 + 4];
    }
    uint64_t v39 = v38;
    sub_100078184(v0 + 544);

    uint64_t v54 = v37;
    unint64_t v41 = v37[2];
    unint64_t v40 = v37[3];
    if (v41 >= v40 >> 1)
    {
      sub_10007AB6C(v40 > 1, v41 + 1, 1);
      uint64_t v37 = v54;
    }
    ++v36;
    v37[2] = v41 + 1;
    uint64_t v42 = &v37[11 * v41];
    long long v43 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v42 + 2) = *(_OWORD *)(v0 + 544);
    *((_OWORD *)v42 + 3) = v43;
    long long v44 = *(_OWORD *)(v0 + 576);
    long long v45 = *(_OWORD *)(v0 + 592);
    long long v46 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v42 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v42 + 5) = v45;
    *((_OWORD *)v42 + 6) = v46;
    *((_OWORD *)v42 + 4) = v44;
  }
  while (v35 != v36);
LABEL_43:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1088) = v37;
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_1000A3810();
  os_log_type_t v48 = sub_1000A44D0();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 134218242;
    *(void *)(v0 + 936) = v37[2];
    sub_1000A4580();
    *(_WORD *)(v49 + 12) = 2080;
    uint64_t v50 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v50, v51, (uint64_t *)&v54);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_10007693C;
  v52[13] = v37;
  return _swift_task_switch(sub_10007B664, 0, 0);
}

uint64_t sub_1000751DC()
{
  return _swift_task_switch(sub_1000752BC, 0, 0);
}

uint64_t sub_1000752BC()
{
  uint64_t v56 = v0;
  uint64_t v1 = *(void **)(v0 + 872);
  if (v1)
  {
    id v2 = v1;
    sub_100077DA8(v0 + 792);
    uint64_t v3 = *(void *)(v0 + 792);
    uint64_t v4 = *(void *)(v0 + 800);
    uint64_t v5 = *(void *)(v0 + 808);
    uint64_t v6 = *(unsigned __int8 *)(v0 + 816);
    uint64_t v7 = *(void *)(v0 + 824);
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_1000A3810();
  os_log_type_t v9 = sub_1000A44D0();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Done fetching reading history data from the daemon.", v10, 2u);
    swift_slowDealloc();
  }

  *(void *)(v0 + 1032) = v7;
  *(void *)(v0 + 712) = v3;
  *(void *)(v0 + 720) = v4;
  *(void *)(v0 + 728) = v5;
  *(void *)(v0 + 736) = v6;
  *(void *)(v0 + 744) = v7;
  if (qword_1000CC750 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1000A3830();
  *(void *)(v0 + 1040) = sub_100010B3C(v11, (uint64_t)qword_1000CF138);
  uint64_t v12 = sub_1000A3810();
  os_log_type_t v13 = sub_1000A44D0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Fetching book data from the daemon.", v14, 2u);
    swift_slowDealloc();
  }
  uint64_t v15 = *(void *)(v0 + 1016);
  uint64_t v16 = *(void *)(v0 + 992);
  uint64_t v17 = *(void *)(v0 + 984);
  uint64_t v18 = *(void *)(v0 + 968);

  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(void *)(v0 + 1048) = v19;
  *(void *)(v0 + 1056) = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v19(v15, v18, v17);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v17);
  if (v20 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_11;
  }
  if (v20 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v23 = v0 + 832;
    uint64_t v24 = v0 + 144;
    uint64_t v25 = *(void **)(*(void *)(v0 + 976) + 16);
    *(void *)(v0 + 144) = v0;
    *(void *)(v0 + 184) = v0 + 888;
    *(void *)(v0 + 152) = sub_100076070;
    *(void *)(v0 + 864) = swift_continuation_init();
    *(void *)(v0 + 832) = _NSConcreteStackBlock;
    *(void *)(v0 + 840) = 0x40000000;
    *(void *)(v0 + 848) = sub_1000780A8;
    *(void *)(v0 + 856) = &unk_1000C8D00;
LABEL_16:
    [v25 getBookWidgetDataWithLimit:3 completion:v23];
    uint64_t v22 = v24;
LABEL_17:
    return _swift_continuation_await(v22);
  }
  if (v20 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v23 = v0 + 632;
    uint64_t v24 = v0 + 208;
    uint64_t v25 = *(void **)(*(void *)(v0 + 976) + 16);
    *(void *)(v0 + 208) = v0;
    *(void *)(v0 + 248) = v0 + 944;
    *(void *)(v0 + 216) = sub_1000764D4;
    *(void *)(v0 + 664) = swift_continuation_init();
    *(void *)(v0 + 632) = _NSConcreteStackBlock;
    *(void *)(v0 + 640) = 0x40000000;
    *(void *)(v0 + 648) = sub_1000780A8;
    *(void *)(v0 + 656) = &unk_1000C8CE8;
    goto LABEL_16;
  }
  if (&enum case for WidgetFamily.accessoryCorner(_:) && v20 == enum case for WidgetFamily.accessoryCorner(_:))
  {
LABEL_11:
    double v21 = *(void **)(*(void *)(v0 + 976) + 16);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 912;
    *(void *)(v0 + 24) = sub_100075C0C;
    *(void *)(v0 + 784) = swift_continuation_init();
    *(void *)(v0 + 752) = _NSConcreteStackBlock;
    *(void *)(v0 + 760) = 0x40000000;
    *(void *)(v0 + 768) = sub_1000780A8;
    *(void *)(v0 + 776) = &unk_1000C8D18;
    [v21 getBookWidgetDataWithLimit:1 completion:v0 + 752];
    uint64_t v22 = v0 + 16;
    goto LABEL_17;
  }
  v19(*(void *)(v0 + 1008), *(void *)(v0 + 968), *(void *)(v0 + 984));
  os_log_type_t v26 = sub_1000A3810();
  os_log_type_t v27 = sub_1000A44C0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v29 = *(void *)(v0 + 1008);
  uint64_t v30 = *(void *)(v0 + 992);
  uint64_t v31 = *(void *)(v0 + 984);
  if (v28)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    sub_10007C40C();
    uint64_t v33 = sub_1000A4690();
    *(void *)(v0 + 896) = sub_10007A4B4(v33, v34, v55);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v35(v29, v31);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Widget family '%s' is not supported", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v35(*(void *)(v0 + 1008), *(void *)(v0 + 984));
  }

  v35(*(void *)(v0 + 1016), *(void *)(v0 + 984));
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_27;
    }
LABEL_37:
    id v38 = _swiftEmptyArrayStorage;
    goto LABEL_38;
  }
  uint64_t v36 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v36) {
    goto LABEL_37;
  }
LABEL_27:
  v55[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = sub_10007AB6C(0, v36 & ~(v36 >> 63), 0);
  if (v36 < 0)
  {
    __break(1u);
    return _swift_continuation_await(v22);
  }
  uint64_t v37 = 0;
  id v38 = (void *)v55[0];
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v39 = (id)sub_1000A4600();
    }
    else {
      id v39 = (id)_swiftEmptyArrayStorage[v37 + 4];
    }
    unint64_t v40 = v39;
    sub_100078184(v0 + 544);

    v55[0] = (uint64_t)v38;
    unint64_t v42 = v38[2];
    unint64_t v41 = v38[3];
    if (v42 >= v41 >> 1)
    {
      sub_10007AB6C(v41 > 1, v42 + 1, 1);
      id v38 = (void *)v55[0];
    }
    ++v37;
    uint64_t v38[2] = v42 + 1;
    long long v43 = &v38[11 * v42];
    long long v44 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v43 + 2) = *(_OWORD *)(v0 + 544);
    *((_OWORD *)v43 + 3) = v44;
    long long v45 = *(_OWORD *)(v0 + 576);
    long long v46 = *(_OWORD *)(v0 + 592);
    long long v47 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v43 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v43 + 5) = v46;
    *((_OWORD *)v43 + 6) = v47;
    *((_OWORD *)v43 + 4) = v45;
  }
  while (v36 != v37);
LABEL_38:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1088) = v38;
  swift_bridgeObjectRetain_n();
  os_log_type_t v48 = sub_1000A3810();
  os_log_type_t v49 = sub_1000A44D0();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 134218242;
    *(void *)(v0 + 936) = v38[2];
    sub_1000A4580();
    *(_WORD *)(v50 + 12) = 2080;
    uint64_t v51 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v51, v52, v55);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v53;
  *uint64_t v53 = v0;
  v53[1] = sub_10007693C;
  v53[13] = v38;
  return _swift_task_switch(sub_10007B664, 0, 0);
}

uint64_t sub_100075C0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 1064) = v1;
  if (v1) {
    id v2 = sub_1000777DC;
  }
  else {
    id v2 = sub_100075D1C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100075D1C()
{
  uint64_t v26 = v0;
  unint64_t v1 = *(void *)(v0 + 912);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v3 = sub_10007AB6C(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  uint64_t v6 = 0;
  uint64_t v7 = (_OWORD *)(v0 + 544);
  uint64_t v8 = v25;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v9 = (id)sub_1000A4600();
    }
    else {
      id v9 = *(id *)(v1 + 8 * v6 + 32);
    }
    os_log_type_t v10 = v9;
    sub_100078184((uint64_t)v7);

    uint64_t v25 = v8;
    unint64_t v12 = v8[2];
    unint64_t v11 = v8[3];
    if (v12 >= v11 >> 1)
    {
      sub_10007AB6C(v11 > 1, v12 + 1, 1);
      uint64_t v8 = v25;
    }
    ++v6;
    v8[2] = v12 + 1;
    os_log_type_t v13 = &v8[11 * v12];
    long long v14 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v13 + 2) = *v7;
    *((_OWORD *)v13 + 3) = v14;
    long long v15 = *(_OWORD *)(v0 + 576);
    long long v16 = *(_OWORD *)(v0 + 592);
    long long v17 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v13 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v13 + 5) = v16;
    *((_OWORD *)v13 + 6) = v17;
    *((_OWORD *)v13 + 4) = v15;
  }
  while (v2 != v6);
  swift_bridgeObjectRelease();
LABEL_14:
  *(void *)(v0 + 1088) = v8;
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1000A3810();
  os_log_type_t v19 = sub_1000A44D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134218242;
    *(void *)(v0 + 936) = v8[2];
    sub_1000A4580();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v21 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v21, v22, (uint64_t *)&v25);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_10007693C;
  v23[13] = v8;
  uint64_t v3 = (uint64_t)sub_10007B664;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100076070()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 1072) = v1;
  if (v1) {
    uint64_t v2 = sub_100076CEC;
  }
  else {
    uint64_t v2 = sub_100076180;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100076180()
{
  uint64_t v26 = v0;
  unint64_t v1 = *(void *)(v0 + 888);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v3 = sub_10007AB6C(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  uint64_t v6 = 0;
  uint64_t v7 = (_OWORD *)(v0 + 544);
  uint64_t v8 = v25;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v9 = (id)sub_1000A4600();
    }
    else {
      id v9 = *(id *)(v1 + 8 * v6 + 32);
    }
    os_log_type_t v10 = v9;
    sub_100078184((uint64_t)v7);

    uint64_t v25 = v8;
    unint64_t v12 = v8[2];
    unint64_t v11 = v8[3];
    if (v12 >= v11 >> 1)
    {
      sub_10007AB6C(v11 > 1, v12 + 1, 1);
      uint64_t v8 = v25;
    }
    ++v6;
    v8[2] = v12 + 1;
    os_log_type_t v13 = &v8[11 * v12];
    long long v14 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v13 + 2) = *v7;
    *((_OWORD *)v13 + 3) = v14;
    long long v15 = *(_OWORD *)(v0 + 576);
    long long v16 = *(_OWORD *)(v0 + 592);
    long long v17 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v13 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v13 + 5) = v16;
    *((_OWORD *)v13 + 6) = v17;
    *((_OWORD *)v13 + 4) = v15;
  }
  while (v2 != v6);
  swift_bridgeObjectRelease();
LABEL_14:
  *(void *)(v0 + 1088) = v8;
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1000A3810();
  os_log_type_t v19 = sub_1000A44D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134218242;
    *(void *)(v0 + 936) = v8[2];
    sub_1000A4580();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v21 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v21, v22, (uint64_t *)&v25);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_10007693C;
  v23[13] = v8;
  uint64_t v3 = (uint64_t)sub_10007B664;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000764D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  *(void *)(*(void *)v0 + 1080) = v1;
  if (v1) {
    uint64_t v2 = sub_100077260;
  }
  else {
    uint64_t v2 = sub_1000765E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000765E4()
{
  uint64_t v26 = v0;
  unint64_t v1 = *(void *)(v0 + 944);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v3 = sub_10007AB6C(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  uint64_t v6 = 0;
  uint64_t v7 = (_OWORD *)(v0 + 544);
  uint64_t v8 = v25;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v9 = (id)sub_1000A4600();
    }
    else {
      id v9 = *(id *)(v1 + 8 * v6 + 32);
    }
    os_log_type_t v10 = v9;
    sub_100078184((uint64_t)v7);

    uint64_t v25 = v8;
    unint64_t v12 = v8[2];
    unint64_t v11 = v8[3];
    if (v12 >= v11 >> 1)
    {
      sub_10007AB6C(v11 > 1, v12 + 1, 1);
      uint64_t v8 = v25;
    }
    ++v6;
    v8[2] = v12 + 1;
    os_log_type_t v13 = &v8[11 * v12];
    long long v14 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v13 + 2) = *v7;
    *((_OWORD *)v13 + 3) = v14;
    long long v15 = *(_OWORD *)(v0 + 576);
    long long v16 = *(_OWORD *)(v0 + 592);
    long long v17 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v13 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v13 + 5) = v16;
    *((_OWORD *)v13 + 6) = v17;
    *((_OWORD *)v13 + 4) = v15;
  }
  while (v2 != v6);
  swift_bridgeObjectRelease();
LABEL_14:
  *(void *)(v0 + 1088) = v8;
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1000A3810();
  os_log_type_t v19 = sub_1000A44D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134218242;
    *(void *)(v0 + 936) = v8[2];
    sub_1000A4580();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v21 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v21, v22, (uint64_t *)&v25);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_10007693C;
  v23[13] = v8;
  uint64_t v3 = (uint64_t)sub_10007B664;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10007693C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1104) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100076A5C, 0, 0);
}

uint64_t sub_100076A5C()
{
  os_log_type_t v13 = v0;
  uint64_t v1 = v0[138];
  uint64_t v2 = v0[121];
  uint64_t v3 = sub_1000710B4();
  sub_10005DE1C(v2, (uint64_t)(v0 + 89), v1, *(double *)&v3, v4, (uint64_t)(v0 + 51));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10007C3A8(v0 + 51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010DF8);
  sub_10007C3A8(v0 + 51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010DF8);
  uint64_t v5 = sub_1000A3810();
  os_log_type_t v6 = sub_1000A44D0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10001013C((uint64_t)(v0 + 51), (uint64_t)(v0 + 34));
    sub_100004FDC(&qword_1000CCDB0);
    uint64_t v8 = sub_1000A4560();
    v0[119] = sub_10007A4B4(v8, v9, &v12);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    sub_10007C3A8(v0 + 51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
    sub_10007C3A8(v0 + 51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Returning widget view model: %s.", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10007C3A8(v0 + 51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
    sub_10007C3A8(v0 + 51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100010614);
  }

  sub_10001013C((uint64_t)(v0 + 51), v0[120]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100076CEC()
{
  uint64_t v35 = v0;
  swift_willThrow();
  (*(void (**)(void, void, void))(v0 + 1048))(*(void *)(v0 + 1000), *(void *)(v0 + 968), *(void *)(v0 + 984));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A3810();
  os_log_type_t v2 = sub_1000A44B0();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = *(void *)(v0 + 1000);
    uint64_t v4 = *(void *)(v0 + 992);
    uint64_t v5 = *(void *)(v0 + 984);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_10007C40C();
    uint64_t v7 = sub_1000A4690();
    *(void *)(v0 + 920) = sub_10007A4B4(v7, v8, v34);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    *(_WORD *)(v6 + 12) = 2112;
    uint64_t v9 = sub_1000A3360();
    *(void *)(v0 + 904) = v9;
    sub_1000A4580();
    *uint64_t v33 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "Failed to fetch book data from BookWidgetDataSource for widget family '%s', error: %@", (uint8_t *)v6, 0x16u);
    sub_100004FDC(&qword_1000CD690);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 992) + 8))(*(void *)(v0 + 1000), *(void *)(v0 + 984));
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_6;
    }
LABEL_16:
    long long v15 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_16;
  }
LABEL_6:
  v34[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = sub_10007AB6C(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return _swift_task_switch(v11, v12, v13);
  }
  uint64_t v14 = 0;
  long long v15 = (void *)v34[0];
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v16 = (id)sub_1000A4600();
    }
    else {
      id v16 = (id)_swiftEmptyArrayStorage[v14 + 4];
    }
    long long v17 = v16;
    sub_100078184(v0 + 544);

    v34[0] = (uint64_t)v15;
    unint64_t v19 = v15[2];
    unint64_t v18 = v15[3];
    if (v19 >= v18 >> 1)
    {
      sub_10007AB6C(v18 > 1, v19 + 1, 1);
      long long v15 = (void *)v34[0];
    }
    ++v14;
    void v15[2] = v19 + 1;
    uint64_t v20 = &v15[11 * v19];
    long long v21 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v0 + 544);
    *((_OWORD *)v20 + 3) = v21;
    long long v22 = *(_OWORD *)(v0 + 576);
    long long v23 = *(_OWORD *)(v0 + 592);
    long long v24 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v20 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v20 + 5) = v23;
    *((_OWORD *)v20 + 6) = v24;
    *((_OWORD *)v20 + 4) = v22;
  }
  while (v10 != v14);
LABEL_17:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1088) = v15;
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_1000A3810();
  os_log_type_t v26 = sub_1000A44D0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134218242;
    *(void *)(v0 + 936) = v15[2];
    sub_1000A4580();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v28 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v28, v29, v34);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_10007693C;
  v30[13] = v15;
  uint64_t v11 = (uint64_t)sub_10007B664;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_100077260()
{
  uint64_t v35 = v0;
  swift_willThrow();
  (*(void (**)(void, void, void))(v0 + 1048))(*(void *)(v0 + 1000), *(void *)(v0 + 968), *(void *)(v0 + 984));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A3810();
  os_log_type_t v2 = sub_1000A44B0();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = *(void *)(v0 + 1000);
    uint64_t v4 = *(void *)(v0 + 992);
    uint64_t v5 = *(void *)(v0 + 984);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_10007C40C();
    uint64_t v7 = sub_1000A4690();
    *(void *)(v0 + 920) = sub_10007A4B4(v7, v8, v34);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    *(_WORD *)(v6 + 12) = 2112;
    uint64_t v9 = sub_1000A3360();
    *(void *)(v0 + 904) = v9;
    sub_1000A4580();
    *uint64_t v33 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "Failed to fetch book data from BookWidgetDataSource for widget family '%s', error: %@", (uint8_t *)v6, 0x16u);
    sub_100004FDC(&qword_1000CD690);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 992) + 8))(*(void *)(v0 + 1000), *(void *)(v0 + 984));
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_6;
    }
LABEL_16:
    long long v15 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_16;
  }
LABEL_6:
  v34[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = sub_10007AB6C(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return _swift_task_switch(v11, v12, v13);
  }
  uint64_t v14 = 0;
  long long v15 = (void *)v34[0];
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v16 = (id)sub_1000A4600();
    }
    else {
      id v16 = (id)_swiftEmptyArrayStorage[v14 + 4];
    }
    long long v17 = v16;
    sub_100078184(v0 + 544);

    v34[0] = (uint64_t)v15;
    unint64_t v19 = v15[2];
    unint64_t v18 = v15[3];
    if (v19 >= v18 >> 1)
    {
      sub_10007AB6C(v18 > 1, v19 + 1, 1);
      long long v15 = (void *)v34[0];
    }
    ++v14;
    void v15[2] = v19 + 1;
    uint64_t v20 = &v15[11 * v19];
    long long v21 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v0 + 544);
    *((_OWORD *)v20 + 3) = v21;
    long long v22 = *(_OWORD *)(v0 + 576);
    long long v23 = *(_OWORD *)(v0 + 592);
    long long v24 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v20 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v20 + 5) = v23;
    *((_OWORD *)v20 + 6) = v24;
    *((_OWORD *)v20 + 4) = v22;
  }
  while (v10 != v14);
LABEL_17:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1088) = v15;
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_1000A3810();
  os_log_type_t v26 = sub_1000A44D0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134218242;
    *(void *)(v0 + 936) = v15[2];
    sub_1000A4580();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v28 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v28, v29, v34);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_10007693C;
  v30[13] = v15;
  uint64_t v11 = (uint64_t)sub_10007B664;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_1000777DC()
{
  uint64_t v35 = v0;
  swift_willThrow();
  (*(void (**)(void, void, void))(v0 + 1048))(*(void *)(v0 + 1000), *(void *)(v0 + 968), *(void *)(v0 + 984));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A3810();
  os_log_type_t v2 = sub_1000A44B0();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = *(void *)(v0 + 1000);
    uint64_t v4 = *(void *)(v0 + 992);
    uint64_t v5 = *(void *)(v0 + 984);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_10007C40C();
    uint64_t v7 = sub_1000A4690();
    *(void *)(v0 + 920) = sub_10007A4B4(v7, v8, v34);
    sub_1000A4580();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    *(_WORD *)(v6 + 12) = 2112;
    uint64_t v9 = sub_1000A3360();
    *(void *)(v0 + 904) = v9;
    sub_1000A4580();
    *uint64_t v33 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "Failed to fetch book data from BookWidgetDataSource for widget family '%s', error: %@", (uint8_t *)v6, 0x16u);
    sub_100004FDC(&qword_1000CD690);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 992) + 8))(*(void *)(v0 + 1000), *(void *)(v0 + 984));
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000A4630();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_6;
    }
LABEL_16:
    long long v15 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_16;
  }
LABEL_6:
  v34[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = sub_10007AB6C(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return _swift_task_switch(v11, v12, v13);
  }
  uint64_t v14 = 0;
  long long v15 = (void *)v34[0];
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v16 = (id)sub_1000A4600();
    }
    else {
      id v16 = (id)_swiftEmptyArrayStorage[v14 + 4];
    }
    long long v17 = v16;
    sub_100078184(v0 + 544);

    v34[0] = (uint64_t)v15;
    unint64_t v19 = v15[2];
    unint64_t v18 = v15[3];
    if (v19 >= v18 >> 1)
    {
      sub_10007AB6C(v18 > 1, v19 + 1, 1);
      long long v15 = (void *)v34[0];
    }
    ++v14;
    void v15[2] = v19 + 1;
    uint64_t v20 = &v15[11 * v19];
    long long v21 = *(_OWORD *)(v0 + 560);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v0 + 544);
    *((_OWORD *)v20 + 3) = v21;
    long long v22 = *(_OWORD *)(v0 + 576);
    long long v23 = *(_OWORD *)(v0 + 592);
    long long v24 = *(_OWORD *)(v0 + 608);
    *((unsigned char *)v20 + 112) = *(unsigned char *)(v0 + 624);
    *((_OWORD *)v20 + 5) = v23;
    *((_OWORD *)v20 + 6) = v24;
    *((_OWORD *)v20 + 4) = v22;
  }
  while (v10 != v14);
LABEL_17:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1088) = v15;
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_1000A3810();
  os_log_type_t v26 = sub_1000A44D0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134218242;
    *(void *)(v0 + 936) = v15[2];
    sub_1000A4580();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v28 = sub_1000A43F0();
    *(void *)(v0 + 928) = sub_10007A4B4(v28, v29, v34);
    sub_1000A4580();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Done fetching book data from the daemon. %ld bookInfos: %s.", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_10007693C;
  v30[13] = v15;
  uint64_t v11 = (uint64_t)sub_10007B664;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_100077D50(uint64_t a1, void *a2, char a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 64) + 40);
  *(void *)uint64_t v3 = a2;
  *(unsigned char *)(v3 + 8) = a3;
  id v4 = a2;

  return swift_continuation_resume();
}

void sub_100077DA8(unint64_t a1@<X8>)
{
  uint64_t v4 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  long long v24 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 currentStreak];
  id v7 = [v1 today];
  id v8 = [v7 readingTime];
  uint64_t v9 = [v7 goal];
  unsigned int v21 = [v7 isStreakDay];

  id v10 = [v1 readingHistory];
  sub_1000278C8(0, &qword_1000CF338);
  unint64_t v11 = sub_1000A43D0();

  if (v11 >> 62) {
    goto LABEL_16;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  long long v22 = v9;
  if (v12)
  {
    while (1)
    {
      uint64_t v25 = _swiftEmptyArrayStorage;
      sub_10007AB4C(0, v12 & ~(v12 >> 63), 0);
      if (v12 < 0) {
        break;
      }
      id v18 = v8;
      id v19 = v6;
      unint64_t v20 = a1;
      id v8 = 0;
      uint64_t v9 = v25;
      id v6 = (id)(v11 & 0xC000000000000001);
      while ((id)v12 != v8)
      {
        if (v6) {
          id v13 = (id)sub_1000A4600();
        }
        else {
          id v13 = *(id *)(v11 + 8 * (void)v8 + 32);
        }
        uint64_t v14 = v13;
        sub_100079F18(v24);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();

          return;
        }

        uint64_t v25 = v9;
        a1 = v9[2];
        unint64_t v15 = v9[3];
        if (a1 >= v15 >> 1)
        {
          sub_10007AB4C(v15 > 1, a1 + 1, 1);
          uint64_t v9 = v25;
        }
        id v8 = (char *)v8 + 1;
        v9[2] = a1 + 1;
        sub_10005E7DC((uint64_t)v24, (uint64_t)v9+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * a1);
        if ((id)v12 == v8)
        {
          swift_bridgeObjectRelease();
          id v6 = v19;
          a1 = v20;
          id v8 = v18;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1000A4630();
      swift_bridgeObjectRelease();
      long long v22 = v9;
      if (!v12) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
LABEL_18:
    char v16 = v21;
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v22;
    *(unsigned char *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v9;
  }
}

uint64_t sub_1000780A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100004FDC(&qword_1000CD6A8);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_1000278C8(0, &qword_1000CF348);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1000A43D0();
    return _swift_continuation_throwingResume(v3);
  }
}

void sub_100078184(uint64_t a1@<X8>)
{
  id v3 = [v1 readingProgress];
  if (v3)
  {
    id v6 = v3;
    sub_1000A4460();

    double v4 = 0.0;
    double v5 = 0.0;
    if (0.0 > 1.0) {
      double v4 = 1.0;
    }
  }
  id v7 = [v1 title:v4, v5];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = sub_1000A4340();
    uint64_t v28 = v10;
    uint64_t v29 = v9;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
  }
  id v11 = [v1 assetID];
  uint64_t v27 = sub_1000A4340();
  uint64_t v13 = v12;

  id v14 = [v1 cloudAssetType];
  id v15 = [v1 libraryAssetType];
  id v16 = [v1 coverURL];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_1000A4340();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  id v21 = [v1 pageProgressionDirection];
  if (v21 && (long long v22 = v21, v23 = sub_1000A4340(), v25 = v24, v22, v25))
  {
    if (v23 == 7107698 && v25 == 0xE300000000000000) {
      char v26 = 1;
    }
    else {
      char v26 = sub_1000A46A0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = 0;
  }
  *(void *)a1 = v29;
  *(void *)(a1 + 8) = v28;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = v27;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v20;
  *(unsigned char *)(a1 + 80) = v26 & 1;
}

uint64_t sub_1000783C0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 32, 7);
}

BOOL static ConnectorStyle.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ConnectorStyle.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int ConnectorStyle.hashValue.getter(unsigned __int8 a1)
{
  return sub_1000A4780();
}

uint64_t WidgetReadingHistory.State.currentStreak.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t WidgetReadingHistory.Day.goal.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t WidgetReadingHistory.Day.goal.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*WidgetReadingHistory.State.today.modify())()
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t WidgetReadingHistory.Day.isStreakDay.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t WidgetReadingHistory.Day.isStreakDay.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t static WidgetReadingHistory.Day.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v7 = a1 == a4 && a2 == a5;
  return v7 & (a3 ^ a6 ^ 1u);
}

uint64_t sub_1000784E4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t WidgetReadingHistory.DayEntry.date.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000A3560();
  double v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t WidgetReadingHistory.DayEntry.day.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for WidgetReadingHistory.DayEntry(0) + 20));
}

uint64_t WidgetReadingHistory.DayEntry.day.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v8 = v3 + *(int *)(result + 20);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3;
  return result;
}

uint64_t (*WidgetReadingHistory.DayEntry.day.modify())(void)
{
  return WidgetReadingHistory.Day.readingTime.getter;
}

uint64_t static WidgetReadingHistory.DayEntry.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1000A3520() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for WidgetReadingHistory.DayEntry(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  int v7 = *(unsigned __int8 *)(a1 + v4 + 16);
  uint64_t v8 = (uint64_t *)(a2 + v4);
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  int v11 = *((unsigned __int8 *)v8 + 16);
  BOOL v13 = v5 == v9 && v6 == v10;
  return v13 & (v7 ^ v11 ^ 1u);
}

uint64_t sub_1000786B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1000A3520() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  int v9 = *(unsigned __int8 *)(a1 + v6 + 16);
  uint64_t v10 = (uint64_t *)(a2 + v6);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  int v13 = *((unsigned __int8 *)v10 + 16);
  BOOL v15 = v7 == v11 && v8 == v12;
  return v15 & (v9 ^ v13 ^ 1u);
}

uint64_t WidgetReadingHistory.Streak.length.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for WidgetReadingHistory.Streak(0) + 20));
}

uint64_t type metadata accessor for WidgetReadingHistory.Streak(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CF2F8);
}

BOOL static WidgetReadingHistory.Streak.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1000A3520() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for WidgetReadingHistory.Streak(0);
  return *(void *)(a1 + *(int *)(v4 + 20)) == *(void *)(a2 + *(int *)(v4 + 20));
}

BOOL sub_1000787B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_1000A3520() & 1) != 0 && *(void *)(a1 + *(int *)(a3 + 20)) == *(void *)(a2 + *(int *)(a3 + 20));
}

uint64_t WidgetReadingHistory.State.currentStreak.getter()
{
  return *(void *)v0;
}

uint64_t WidgetReadingHistory.State.today.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t WidgetReadingHistory.State.today.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 8) = result;
  *(void *)(v3 + 16) = a2;
  *(unsigned char *)(v3 + 24) = a3;
  return result;
}

uint64_t WidgetReadingHistory.State.readingHistory.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetReadingHistory.State.readingHistory.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t static WidgetReadingHistory.State.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2
    && (*(void *)(a1 + 8) == *(void *)(a2 + 8) ? (BOOL v2 = *(void *)(a1 + 16) == *(void *)(a2 + 16)) : (BOOL v2 = 0),
        v2 && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0))
  {
    return sub_1000788A8(*(void *)(a1 + 32), *(void *)(a2 + 32));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1000788A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetReadingHistory.DayEntry(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_10005E778(a1 + v12, (uint64_t)v10);
      sub_10005E778(a2 + v12, (uint64_t)v7);
      if ((sub_1000A3520() & 1) == 0) {
        break;
      }
      uint64_t v14 = *(int *)(v4 + 20);
      BOOL v15 = &v10[v14];
      uint64_t v16 = *(void *)&v10[v14];
      uint64_t v17 = *(void *)&v10[v14 + 8];
      uint64_t v18 = &v7[v14];
      BOOL v19 = v16 == *(void *)v18 && v17 == *((void *)v18 + 1);
      if (!v19 || ((v15[16] ^ v18[16]) & 1) != 0) {
        break;
      }
      sub_10005E890((uint64_t)v7);
      sub_10005E890((uint64_t)v10);
      v12 += v13;
      if (!--v11) {
        return 1;
      }
    }
    sub_10005E890((uint64_t)v7);
    sub_10005E890((uint64_t)v10);
  }
  return 0;
}

unint64_t sub_100078A40()
{
  unint64_t result = qword_1000CF150;
  if (!qword_1000CF150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF150);
  }
  return result;
}

uint64_t sub_100078A94(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(void *)a1 == *(void *)a2
    && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v3 || ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) != 0) {
    return 0;
  }
  else {
    return sub_1000788A8(*(void *)(a1 + 32), *(void *)(a2 + 32));
  }
}

uint64_t type metadata accessor for WidgetDataController()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ConnectorStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConnectorStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100078C58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectorStyle()
{
  return &type metadata for ConnectorStyle;
}

uint64_t initializeWithCopy for DayViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 initializeWithTake for DayViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DayViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DayViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayViewModel()
{
  return &type metadata for DayViewModel;
}

void *initializeBufferWithCopyOfBuffer for DailyReadingGoalsViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DailyReadingGoalsViewModel()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DailyReadingGoalsViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for DailyReadingGoalsViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for DailyReadingGoalsViewModel()
{
  return &type metadata for DailyReadingGoalsViewModel;
}

uint64_t initializeBufferWithCopyOfBuffer for PlatterStyle(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PlatterStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlatterStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100078FB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100078FD4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterStyle()
{
  return &type metadata for PlatterStyle;
}

ValueMetadata *type metadata accessor for WidgetReadingHistory()
{
  return &type metadata for WidgetReadingHistory;
}

__n128 initializeBufferWithCopyOfBuffer for WidgetReadingHistory.Day(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetReadingHistory.Day(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetReadingHistory.Day(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetReadingHistory.Day()
{
  return &type metadata for WidgetReadingHistory.Day;
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetReadingHistory.DayEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A3560();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t initializeWithCopy for WidgetReadingHistory.DayEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t assignWithCopy for WidgetReadingHistory.DayEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t initializeWithTake for WidgetReadingHistory.DayEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for WidgetReadingHistory.DayEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetReadingHistory.DayEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000793FC);
}

uint64_t sub_1000793FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for WidgetReadingHistory.DayEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000794E4);
}

uint64_t sub_1000794E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000A3560();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = a2 + 1;
  }
  return result;
}

uint64_t sub_1000795A4()
{
  return sub_1000799E4();
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetReadingHistory.Streak(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A3560();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s20BooksWidgetExtension20WidgetReadingHistoryO8DayEntryVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_1000A3560();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for WidgetReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for WidgetReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for WidgetReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for WidgetReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000798E4);
}

uint64_t sub_1000798E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WidgetReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100079964);
}

uint64_t sub_100079964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A3560();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000799D4()
{
  return sub_1000799E4();
}

uint64_t sub_1000799E4()
{
  uint64_t result = sub_1000A3560();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for WidgetReadingHistory.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetReadingHistory.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetReadingHistory.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetReadingHistory.State(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetReadingHistory.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetReadingHistory.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetReadingHistory.State()
{
  return &type metadata for WidgetReadingHistory.State;
}

uint64_t _s20BooksWidgetExtension12DayViewModelV16DayNameViewModelVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DayViewModel.DayNameViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DayViewModel.DayNameViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DayViewModel.DayNameViewModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DayViewModel.DayNameViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DayViewModel.DayNameViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayViewModel.DayNameViewModel()
{
  return &type metadata for DayViewModel.DayNameViewModel;
}

void sub_100079DD8()
{
  uint64_t v0 = sub_1000A36D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_1000A3610();
  Class isa = sub_1000A3650().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setCalendar:isa];

  NSString v6 = sub_1000A4300();
  [v4 setDateFormat:v6];

  qword_1000CF130 = (uint64_t)v4;
}

uint64_t sub_100079F18@<X0>(char *a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v3 = sub_100004FDC(&qword_1000CEAA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3560();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unsigned int v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v32 - v11;
  if (qword_1000CC748 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1000CF130;
  id v34 = v1;
  NSString v14 = [v1 date];
  if (!v14)
  {
    sub_1000A4340();
    NSString v14 = sub_1000A4300();
    swift_bridgeObjectRelease();
  }
  id v15 = [v13 dateFromString:v14];

  if (v15)
  {
    uint64_t v32 = v2;
    sub_1000A3530();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v5, v10, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v16(v12, v5, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      id v17 = [v34 day];
      id v34 = [v17 readingTime];
      id v18 = [v17 goal];
      unsigned __int8 v19 = [v17 isStreakDay];

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      uint64_t v20 = v33;
      v16(v33, v10, v6);
      uint64_t result = type metadata accessor for WidgetReadingHistory.DayEntry(0);
      long long v22 = &v20[*(int *)(result + 20)];
      *(void *)long long v22 = v34;
      *((void *)v22 + 1) = v18;
      v22[16] = v19;
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_10000A9C0((uint64_t)v5, &qword_1000CEAA0);
  if (qword_1000CC750 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1000A3830();
  sub_100010B3C(v23, (uint64_t)qword_1000CF138);
  id v24 = v34;
  uint64_t v25 = sub_1000A3810();
  os_log_type_t v26 = sub_1000A44B0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    id v34 = v27 + 4;
    id v28 = [v24 date];
    uint64_t v29 = sub_1000A4340();
    unint64_t v31 = v30;

    uint64_t v35 = sub_10007A4B4(v29, v31, &v36);
    sub_1000A4580();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Can't widgify BDSReadingHistoryDayEntryInfo due to invalid date string: '%s'", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10007C464();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_10007A434()
{
  uint64_t v0 = sub_1000A3830();
  sub_100010E40(v0, qword_1000CF138);
  sub_100010B3C(v0, (uint64_t)qword_1000CF138);
  return sub_1000A3820();
}

uint64_t sub_10007A4B4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10007A588(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10007C4B8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10007C4B8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100027878((uint64_t)v12);
  return v7;
}

uint64_t sub_10007A588(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000A4590();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10007A744(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000A4610();
  if (!v8)
  {
    sub_1000A4620();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000A4660();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10007A744(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10007A7DC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10007A9BC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10007A9BC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10007A7DC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10007A954(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000A45F0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000A4620();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000A4390();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1000A4660();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000A4620();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10007A954(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004FDC(&qword_1000CF350);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10007A9BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FDC(&qword_1000CF350);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10007AB0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007ABAC(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10007AB2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007AD18(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10007AB4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007AE94(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_10007AB6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007B0D4(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10007AB8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007B254(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10007ABAC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FDC(&qword_1000CF360);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  NSString v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10007AD18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FDC(&qword_1000CF358);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10007AE94(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004FDC(&qword_1000CEA78);
  uint64_t v10 = *(void *)(type metadata accessor for WidgetReadingHistory.DayEntry(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for WidgetReadingHistory.DayEntry(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  unsigned __int8 v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10007B0D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FDC(&qword_1000CF368);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 88 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10007B254(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FDC(&qword_1000CCB98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000A4660();
  __break(1u);
  return result;
}

uint64_t sub_10007B3C0()
{
  id v0 = [self books];
  id v1 = [v0 userDefaults];

  NSString v2 = sub_1000A4300();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    sub_1000A45B0();
    swift_unknownObjectRelease();
    sub_10000A9C0((uint64_t)&v14, &qword_1000CD6C0);
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
    sub_10000A9C0((uint64_t)&v14, &qword_1000CD6C0);
    NSString v4 = sub_1000A4300();
    id v5 = [v1 objectForKey:v4];

    if (!v5)
    {
      long long v14 = 0u;
      long long v15 = 0u;
      sub_10000A9C0((uint64_t)&v14, &qword_1000CD6C0);
      NSString v12 = sub_1000A4300();
      uint64_t v11 = 1;
      [v1 setBool:1 forKey:v12];
      goto LABEL_6;
    }
    sub_1000A45B0();
    swift_unknownObjectRelease();
    sub_10000A9C0((uint64_t)&v14, &qword_1000CD6C0);
    NSString v6 = sub_1000A4300();
    id v7 = [v1 BOOLForKey:v6];

    NSString v8 = sub_1000A4300();
    [v1 removeObjectForKey:v8];

    NSString v9 = sub_1000A4300();
    [v1 setBool:v7 forKey:v9];
  }
  NSString v10 = sub_1000A4300();
  uint64_t v11 = (uint64_t)[v1 BOOLForKey:v10];
  NSString v12 = v1;
  id v1 = v10;
LABEL_6:

  return v11;
}

uint64_t sub_10007B644(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return _swift_task_switch(sub_10007B664, 0, 0);
}

uint64_t sub_10007B664()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 112) = v2;
  if (v2)
  {
    *(void *)(v0 + 120) = 0;
    *(void *)(v0 + 128) = _swiftEmptyArrayStorage;
    long long v3 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 32) = v3;
    long long v4 = *(_OWORD *)(v1 + 64);
    long long v5 = *(_OWORD *)(v1 + 80);
    long long v6 = *(_OWORD *)(v1 + 96);
    *(unsigned char *)(v0 + 96) = *(unsigned char *)(v1 + 112);
    *(_OWORD *)(v0 + 64) = v5;
    *(_OWORD *)(v0 + 80) = v6;
    *(_OWORD *)(v0 + 48) = v4;
    *(void *)(v0 + 136) = *(void *)(v1 + 32);
    *(void *)(v0 + 144) = *(void *)(v1 + 40);
    *(void *)(v0 + 152) = *(void *)(v1 + 48);
    *(unsigned char *)(v0 + 97) = *(unsigned char *)(v1 + 56);
    *(void *)(v0 + 160) = *(void *)(v1 + 64);
    *(void *)(v0 + 168) = *(void *)(v1 + 72);
    *(void *)(v0 + 176) = *(void *)(v1 + 80);
    *(void *)(v0 + 184) = *(void *)(v1 + 88);
    *(void *)(v0 + 192) = *(void *)(v1 + 96);
    *(void *)(v0 + 200) = *(void *)(v1 + 104);
    *(unsigned char *)(v0 + 98) = *(unsigned char *)(v1 + 112);
    uint64_t v8 = *(void *)(v0 + 48);
    unint64_t v7 = *(void *)(v0 + 56);
    *(void *)(v0 + 208) = v8;
    *(void *)(v0 + 216) = v7;
    swift_bridgeObjectRetain();
    sub_100013190(v0 + 16);
    if (qword_1000CC750 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1000A3830();
    *(void *)(v0 + 224) = sub_100010B3C(v9, (uint64_t)qword_1000CF138);
    sub_100013190(v0 + 16);
    NSString v10 = sub_1000A3810();
    os_log_type_t v11 = sub_1000A44D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v12 + 4) = sub_10007A4B4(v8, v7, &v17);
      swift_bridgeObjectRelease();
      sub_10007C514(v0 + 16);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "About to process raw cover for %s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10007C514(v0 + 16);
    }

    uint64_t v16 = (uint64_t (*)(uint64_t))((char *)&dword_1000CD670 + dword_1000CD670);
    long long v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v15;
    void *v15 = v0;
    v15[1] = sub_10007B94C;
    return v16(v0 + 16);
  }
  else
  {
    uint64_t v13 = *(uint64_t (**)(void *))(v0 + 8);
    return v13(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10007B94C()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10007BF04;
  }
  else {
    uint64_t v2 = sub_10007BA60;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10007BA60()
{
  uint64_t v39 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  sub_100013190(v0 + 16);
  uint64_t v2 = sub_1000A3810();
  os_log_type_t v3 = sub_1000A44D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = *(void *)(v0 + 208);
    unint64_t v4 = *(void *)(v0 + 216);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v6 + 4) = sub_10007A4B4(v5, v4, &v38);
    swift_bridgeObjectRelease();
    sub_10007C514(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Done processing raw cover for %s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10007C514(v0 + 16);
  }

  sub_100013190(v0 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void **)(v0 + 128);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v8 = sub_100058F84(0, v8[2] + 1, 1, *(void **)(v0 + 128));
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_100058F84((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  char v11 = *(unsigned char *)(v0 + 98);
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 184);
  long long v14 = *(_OWORD *)(v0 + 160);
  char v15 = *(unsigned char *)(v0 + 97);
  uint64_t v16 = *(void *)(v0 + 152);
  uint64_t v17 = *(void *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 120) + 1;
  uint64_t v19 = &v8[11 * v10];
  long long v20 = *(_OWORD *)(v0 + 136);
  long long v21 = *(_OWORD *)(v0 + 192);
  v8[2] = v10 + 1;
  *((_OWORD *)v19 + 2) = v20;
  v19[6] = v16;
  *((unsigned char *)v19 + 56) = v15;
  *((_OWORD *)v19 + 4) = v14;
  v19[10] = v13;
  v19[11] = v12;
  *((_OWORD *)v19 + 6) = v21;
  *((unsigned char *)v19 + 112) = v11;
  sub_10007C514(v0 + 16);
  if (v18 == v17)
  {
    swift_bridgeObjectRelease();
    unint64_t v22 = *(uint64_t (**)(void *))(v0 + 8);
    return v22(v8);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 120) + 1;
    *(void *)(v0 + 120) = v24;
    *(void *)(v0 + 128) = v8;
    uint64_t v25 = *(void *)(v0 + 104) + 88 * v24;
    long long v26 = *(_OWORD *)(v25 + 48);
    *uint64_t v1 = *(_OWORD *)(v25 + 32);
    *(_OWORD *)(v0 + 32) = v26;
    long long v28 = *(_OWORD *)(v25 + 80);
    long long v27 = *(_OWORD *)(v25 + 96);
    long long v29 = *(_OWORD *)(v25 + 64);
    *(unsigned char *)(v0 + 96) = *(unsigned char *)(v25 + 112);
    *(_OWORD *)(v0 + 64) = v28;
    *(_OWORD *)(v0 + 80) = v27;
    *(_OWORD *)(v0 + 48) = v29;
    *(void *)(v0 + 136) = *(void *)(v25 + 32);
    *(void *)(v0 + 144) = *(void *)(v25 + 40);
    *(void *)(v0 + 152) = *(void *)(v25 + 48);
    *(unsigned char *)(v0 + 97) = *(unsigned char *)(v25 + 56);
    *(void *)(v0 + 160) = *(void *)(v25 + 64);
    *(void *)(v0 + 168) = *(void *)(v25 + 72);
    *(void *)(v0 + 176) = *(void *)(v25 + 80);
    *(void *)(v0 + 184) = *(void *)(v25 + 88);
    *(void *)(v0 + 192) = *(void *)(v25 + 96);
    *(void *)(v0 + 200) = *(void *)(v25 + 104);
    *(unsigned char *)(v0 + 98) = *(unsigned char *)(v25 + 112);
    uint64_t v31 = *(void *)(v0 + 48);
    unint64_t v30 = *(void *)(v0 + 56);
    *(void *)(v0 + 208) = v31;
    *(void *)(v0 + 216) = v30;
    sub_100013190(v0 + 16);
    if (qword_1000CC750 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1000A3830();
    *(void *)(v0 + 224) = sub_100010B3C(v32, (uint64_t)qword_1000CF138);
    sub_100013190(v0 + 16);
    uint64_t v33 = sub_1000A3810();
    os_log_type_t v34 = sub_1000A44D0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v35 + 4) = sub_10007A4B4(v31, v30, &v38);
      swift_bridgeObjectRelease();
      sub_10007C514(v0 + 16);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "About to process raw cover for %s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10007C514(v0 + 16);
    }

    uint64_t v37 = (uint64_t (*)(uint64_t))((char *)&dword_1000CD670 + dword_1000CD670);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_10007B94C;
    return v37((uint64_t)v1);
  }
}

uint64_t sub_10007BF04()
{
  uint64_t v39 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  swift_errorRetain();
  uint64_t v2 = sub_1000A3810();
  os_log_type_t v3 = sub_1000A44B0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    uint64_t v6 = sub_1000A3360();
    *(void *)(v4 + 4) = v6;
    *uint64_t v5 = v6;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to fetch raw cover, error: %@", (uint8_t *)v4, 0xCu);
    sub_100004FDC(&qword_1000CD690);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100013190(v0 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void **)(v0 + 128);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v8 = sub_100058F84(0, v8[2] + 1, 1, *(void **)(v0 + 128));
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_100058F84((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  char v11 = *(unsigned char *)(v0 + 98);
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 184);
  long long v14 = *(_OWORD *)(v0 + 160);
  char v15 = *(unsigned char *)(v0 + 97);
  uint64_t v16 = *(void *)(v0 + 152);
  uint64_t v17 = *(void *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 120) + 1;
  uint64_t v19 = &v8[11 * v10];
  long long v20 = *(_OWORD *)(v0 + 136);
  long long v21 = *(_OWORD *)(v0 + 192);
  v8[2] = v10 + 1;
  *((_OWORD *)v19 + 2) = v20;
  v19[6] = v16;
  *((unsigned char *)v19 + 56) = v15;
  *((_OWORD *)v19 + 4) = v14;
  v19[10] = v13;
  v19[11] = v12;
  *((_OWORD *)v19 + 6) = v21;
  *((unsigned char *)v19 + 112) = v11;
  sub_10007C514(v0 + 16);
  if (v18 == v17)
  {
    swift_bridgeObjectRelease();
    unint64_t v22 = *(uint64_t (**)(void *))(v0 + 8);
    return v22(v8);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 120) + 1;
    *(void *)(v0 + 120) = v24;
    *(void *)(v0 + 128) = v8;
    uint64_t v25 = *(void *)(v0 + 104) + 88 * v24;
    long long v26 = *(_OWORD *)(v25 + 48);
    *uint64_t v1 = *(_OWORD *)(v25 + 32);
    *(_OWORD *)(v0 + 32) = v26;
    long long v28 = *(_OWORD *)(v25 + 80);
    long long v27 = *(_OWORD *)(v25 + 96);
    long long v29 = *(_OWORD *)(v25 + 64);
    *(unsigned char *)(v0 + 96) = *(unsigned char *)(v25 + 112);
    *(_OWORD *)(v0 + 64) = v28;
    *(_OWORD *)(v0 + 80) = v27;
    *(_OWORD *)(v0 + 48) = v29;
    *(void *)(v0 + 136) = *(void *)(v25 + 32);
    *(void *)(v0 + 144) = *(void *)(v25 + 40);
    *(void *)(v0 + 152) = *(void *)(v25 + 48);
    *(unsigned char *)(v0 + 97) = *(unsigned char *)(v25 + 56);
    *(void *)(v0 + 160) = *(void *)(v25 + 64);
    *(void *)(v0 + 168) = *(void *)(v25 + 72);
    *(void *)(v0 + 176) = *(void *)(v25 + 80);
    *(void *)(v0 + 184) = *(void *)(v25 + 88);
    *(void *)(v0 + 192) = *(void *)(v25 + 96);
    *(void *)(v0 + 200) = *(void *)(v25 + 104);
    *(unsigned char *)(v0 + 98) = *(unsigned char *)(v25 + 112);
    uint64_t v31 = *(void *)(v0 + 48);
    unint64_t v30 = *(void *)(v0 + 56);
    *(void *)(v0 + 208) = v31;
    *(void *)(v0 + 216) = v30;
    sub_100013190(v0 + 16);
    if (qword_1000CC750 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1000A3830();
    *(void *)(v0 + 224) = sub_100010B3C(v32, (uint64_t)qword_1000CF138);
    sub_100013190(v0 + 16);
    uint64_t v33 = sub_1000A3810();
    os_log_type_t v34 = sub_1000A44D0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v35 + 4) = sub_10007A4B4(v31, v30, &v38);
      swift_bridgeObjectRelease();
      sub_10007C514(v0 + 16);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "About to process raw cover for %s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10007C514(v0 + 16);
    }

    uint64_t v37 = (uint64_t (*)(uint64_t))((char *)&dword_1000CD670 + dword_1000CD670);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_10007B94C;
    return v37((uint64_t)v1);
  }
}

void *sub_10007C3A8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_10007C40C()
{
  unint64_t result = qword_1000CCBA0;
  if (!qword_1000CCBA0)
  {
    sub_1000A4160();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CCBA0);
  }
  return result;
}

unint64_t sub_10007C464()
{
  unint64_t result = qword_1000CF340;
  if (!qword_1000CF340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF340);
  }
  return result;
}

uint64_t sub_10007C4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10007C514(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *_s12WidgifyErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10007C614);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s12WidgifyErrorOMa()
{
  return &_s12WidgifyErrorON;
}

unint64_t sub_10007C650()
{
  unint64_t result = qword_1000CF370;
  if (!qword_1000CF370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF370);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderTextView()
{
  return &type metadata for PlaceholderTextView;
}

uint64_t sub_10007C6B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007C6D4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v54 = a1;
  uint64_t v58 = a2;
  uint64_t v2 = sub_1000A38E0();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000A3A10() - 8;
  __chkstk_darwin(v53);
  unint64_t v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3A20();
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A4090();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000CF378);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  char v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FDC(&qword_1000CF380);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004FDC(&qword_1000CF388);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v50 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004FDC(&qword_1000CF390);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v51 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for BlendMode.plusLighter(_:), v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
  sub_10007CCC4((uint64_t)v7, (uint64_t)&v15[*(int *)(v13 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(_DWORD *)char v15 = v54;
  *((_WORD *)v15 + 2) = 256;
  sub_10007CD2C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_10000B1C0((uint64_t)v15, (uint64_t)v19, &qword_1000CF378);
  *(void *)&v19[*(int *)(v17 + 44)] = 0x3FB47AE147AE147BLL;
  sub_10000A9C0((uint64_t)v15, &qword_1000CF378);
  long long v26 = v52;
  long long v27 = &v52[*(int *)(v53 + 28)];
  uint64_t v28 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v29 = sub_1000A3B70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
  __asm { FMOV            V0.2D, #2.0 }
  *long long v26 = _Q0;
  uint64_t v35 = *(int *)(v21 + 44);
  uint64_t v36 = (uint64_t)v50;
  uint64_t v37 = &v50[v35];
  sub_10007CCC4((uint64_t)v26, (uint64_t)&v50[v35], (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v37[*(int *)(sub_100004FDC(&qword_1000CD8F0) + 36)] = 256;
  sub_10000B1C0((uint64_t)v19, v36, &qword_1000CF380);
  sub_10007CD2C((uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10000A9C0((uint64_t)v19, &qword_1000CF380);
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  uint64_t v40 = v57;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for ColorScheme.dark(_:), v57);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = (uint64_t)v51;
  long long v43 = (uint64_t *)&v51[*(int *)(v24 + 44)];
  uint64_t v44 = sub_100004FDC(&qword_1000CCAC0);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v43 + *(int *)(v44 + 28), v39, v40);
  *long long v43 = KeyPath;
  sub_10000B1C0(v36, v42, &qword_1000CF388);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  sub_10000A9C0(v36, &qword_1000CF388);
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v45 = v58;
  sub_10000B1C0(v42, v58, &qword_1000CF390);
  long long v46 = (_OWORD *)(v45 + *(int *)(sub_100004FDC(&qword_1000CF398) + 36));
  long long v47 = v60;
  *long long v46 = v59;
  v46[1] = v47;
  v46[2] = v61;
  return sub_10000A9C0(v42, &qword_1000CF390);
}

uint64_t sub_10007CCBC@<X0>(uint64_t a1@<X8>)
{
  return sub_10007C6D4(*v1, a1);
}

uint64_t sub_10007CCC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007CD2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007CD94()
{
  return sub_10007CF44(&qword_1000CF3A0, &qword_1000CF398, (void (*)(void))sub_10007CDD8);
}

unint64_t sub_10007CDD8()
{
  unint64_t result = qword_1000CF3A8;
  if (!qword_1000CF3A8)
  {
    sub_100008B14(&qword_1000CF390);
    sub_10007CE78();
    sub_10000B17C(&qword_1000CDD88, &qword_1000CCAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF3A8);
  }
  return result;
}

unint64_t sub_10007CE78()
{
  unint64_t result = qword_1000CF3B0;
  if (!qword_1000CF3B0)
  {
    sub_100008B14(&qword_1000CF388);
    sub_10007CF44(&qword_1000CF3B8, &qword_1000CF380, (void (*)(void))sub_10007CFC0);
    sub_10000B17C(&qword_1000CF3D8, &qword_1000CD8F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF3B0);
  }
  return result;
}

uint64_t sub_10007CF44(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007CFC0()
{
  unint64_t result = qword_1000CF3C0;
  if (!qword_1000CF3C0)
  {
    sub_100008B14(&qword_1000CF378);
    sub_10000B17C(&qword_1000CF3C8, &qword_1000CF3D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF3C0);
  }
  return result;
}

uint64_t sub_10007D060(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 6710384;
  }
  else {
    uint64_t v3 = 1802465122;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 6710384;
  }
  else {
    uint64_t v5 = 1802465122;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000A46A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10007D0F8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6369666963657073;
  }
  else {
    uint64_t v3 = 0x6563655274736F6DLL;
  }
  if (v2) {
    unint64_t v4 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6369666963657073;
  }
  else {
    uint64_t v5 = 0x6563655274736F6DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEA0000000000746ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000A46A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10007D1A0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7468676972;
  }
  else {
    uint64_t v3 = 1952867692;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7468676972;
  }
  else {
    uint64_t v5 = 1952867692;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000A46A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_10007D238(uint64_t a1)
{
  return sub_10007D288(a1, &qword_1000CD560, &qword_1000CF6C0, (uint64_t (*)(void))sub_100059538);
}

unint64_t sub_10007D260(uint64_t a1)
{
  return sub_10007D288(a1, &qword_1000CD4B0, &qword_1000CF6B8, (uint64_t (*)(void))sub_10005953C);
}

unint64_t sub_10007D288(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_100004FDC(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FDC(a3);
  uint64_t v11 = sub_1000A4650();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10000B1C0(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_1000A3110();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007D484(uint64_t a1)
{
  return sub_10007D288(a1, &qword_1000CEC90, &qword_1000CF6B0, (uint64_t (*)(void))sub_100059538);
}

unint64_t sub_10007D4AC(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CEF50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FDC(&qword_1000CF698);
  uint64_t v6 = sub_1000A4650();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10000B1C0(v12, (uint64_t)v5, &qword_1000CEF50);
    char v14 = *v5;
    unint64_t result = sub_10005967C(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = sub_1000A3110();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007D6A4(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CEF70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FDC(&qword_1000CF6A0);
  uint64_t v6 = sub_1000A4650();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10000B1C0(v12, (uint64_t)v5, &qword_1000CEF70);
    char v14 = *v5;
    unint64_t result = sub_10005967C(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = sub_100004FDC(&qword_1000CF6A8);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007D8A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FDC(&qword_1000CF6D0);
  uint64_t v2 = (void *)sub_1000A4650();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000597A0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007D9C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FDC(&qword_1000CF6C8);
  uint64_t v2 = (void *)sub_1000A4650();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000597A0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Swift::Int sub_10007DAE8()
{
  return sub_1000A4780();
}

Swift::Int sub_10007DB5C()
{
  return sub_1000A4780();
}

Swift::Int sub_10007DBE4()
{
  return sub_1000A4780();
}

uint64_t sub_10007DC5C()
{
  sub_1000A2EB0();
  return v1;
}

uint64_t sub_10007DC90(char a1)
{
  if (a1) {
    return 0x7468676972;
  }
  else {
    return 1952867692;
  }
}

uint64_t sub_10007DCBC()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D8150);
  sub_100010B3C(v10, (uint64_t)qword_1000D8150);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

unint64_t sub_10007DF94()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v0 - 8);
  uint64_t v38 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000A3390();
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A3600();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A42F0();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A33A0();
  uint64_t v28 = v11;
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v36 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  sub_100004FDC(&qword_1000CF680);
  BOOL v14 = (int *)(sub_100004FDC(&qword_1000CF688) - 8);
  uint64_t v15 = *(void *)v14;
  uint64_t v34 = *(void *)(*(void *)v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v35 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1000A8D50;
  unint64_t v18 = v17 + v16;
  *(unsigned char *)(v17 + v16) = 0;
  unint64_t v30 = v17 + v16 + v14[14];
  v27[1] = v10;
  sub_1000A4280();
  sub_1000A35D0();
  unsigned int v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(void))(v4 + 104);
  uint64_t v32 = v4 + 104;
  uint64_t v33 = (void (*)(char *, void, uint64_t))v19;
  v19(v6);
  uint64_t v20 = v6;
  sub_1000A33B0();
  BOOL v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
  v40 += 56;
  uint64_t v29 = v21;
  uint64_t v22 = v37;
  v21(v37, 1, 1, v11);
  uint64_t v23 = sub_1000A30D0();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v38;
  v24(v38, 1, 1, v23);
  sub_1000A3100();
  *(unsigned char *)(v18 + v34) = 1;
  sub_1000A4280();
  sub_1000A35D0();
  v33(v20, v31, v39);
  sub_1000A33B0();
  v29(v22, 1, 1, v28);
  v24(v25, 1, 1, v23);
  sub_1000A3100();
  unint64_t result = sub_10007D288(v35, &qword_1000CF688, &qword_1000CF690, (uint64_t (*)(void))sub_100059704);
  qword_1000D8168 = result;
  return result;
}

uint64_t sub_10007E4E0(char *a1, char *a2)
{
  return sub_10007D1A0(*a1, *a2);
}

unint64_t sub_10007E4F0()
{
  unint64_t result = qword_1000CF3F0;
  if (!qword_1000CF3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF3F0);
  }
  return result;
}

Swift::Int sub_10007E544()
{
  return sub_10007DBE4();
}

uint64_t sub_10007E54C()
{
  return sub_1000567D8();
}

Swift::Int sub_10007E554()
{
  return sub_100056838();
}

uint64_t sub_10007E55C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000C6EC8;
  v8._object = v3;
  Swift::Int v5 = sub_1000A4680(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_10007E5BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007DC90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10007E5EC()
{
  unint64_t result = qword_1000CF3F8;
  if (!qword_1000CF3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF3F8);
  }
  return result;
}

unint64_t sub_10007E644()
{
  unint64_t result = qword_1000CF400;
  if (!qword_1000CF400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF400);
  }
  return result;
}

unint64_t sub_10007E69C()
{
  unint64_t result = qword_1000CF408;
  if (!qword_1000CF408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF408);
  }
  return result;
}

unint64_t sub_10007E6F4()
{
  unint64_t result = qword_1000CF410;
  if (!qword_1000CF410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF410);
  }
  return result;
}

unint64_t sub_10007E74C()
{
  unint64_t result = qword_1000CF418;
  if (!qword_1000CF418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF418);
  }
  return result;
}

unint64_t sub_10007E7A8()
{
  unint64_t result = qword_1000CF420;
  if (!qword_1000CF420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF420);
  }
  return result;
}

uint64_t sub_10007E7FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100061130(&qword_1000CC758, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D8150, a1);
}

uint64_t sub_10007E834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007FC04(a1, a2, a3, (void (*)(void))sub_10007E860);
}

unint64_t sub_10007E860()
{
  unint64_t result = qword_1000CF428;
  if (!qword_1000CF428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF428);
  }
  return result;
}

uint64_t sub_10007E8B4(uint64_t a1)
{
  unint64_t v2 = sub_10007E860();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10007E904()
{
  unint64_t result = qword_1000CF430;
  if (!qword_1000CF430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF430);
  }
  return result;
}

unint64_t sub_10007E95C()
{
  unint64_t result = qword_1000CF438;
  if (!qword_1000CF438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF438);
  }
  return result;
}

unint64_t sub_10007E9B4()
{
  unint64_t result = qword_1000CF440;
  if (!qword_1000CF440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF440);
  }
  return result;
}

uint64_t sub_10007EA08()
{
  if (qword_1000CC760 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10007EA64(uint64_t a1)
{
  unint64_t v2 = sub_10007E7A8();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10007EAB0()
{
  return sub_10000B17C(&qword_1000CF448, &qword_1000CF450);
}

void sub_10007EAEC(void *a1@<X8>)
{
  *a1 = &off_1000C6F18;
}

uint64_t sub_10007EB00()
{
  return sub_10000B17C(&qword_1000CF458, &qword_1000CF460);
}

uint64_t sub_10007EB3C()
{
  uint64_t v0 = sub_1000A32C0();
  sub_100010E40(v0, qword_1000D8170);
  sub_100010B3C(v0, (uint64_t)qword_1000D8170);
  return sub_1000A32A0();
}

uint64_t sub_10007EBA0()
{
  uint64_t v0 = sub_1000A33A0();
  sub_100010E40(v0, qword_1000D8188);
  sub_100010B3C(v0, (uint64_t)qword_1000D8188);
  return sub_1000A3380();
}

uint64_t sub_10007EC04()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CF678);
  sub_100010E40(v0, qword_1000D81A0);
  uint64_t v1 = sub_100010B3C(v0, (uint64_t)qword_1000D81A0);
  sub_1000A3040();
  uint64_t v2 = sub_1000A3050();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10007ECBC()
{
  uint64_t result = swift_getKeyPath();
  qword_1000D81B8 = result;
  return result;
}

uint64_t sub_10007ECE4()
{
  type metadata accessor for MenuOnLeftEntity();

  return swift_retain();
}

uint64_t sub_10007ED18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_100004FDC(&qword_1000CF648);
  v3[5] = swift_task_alloc();
  sub_100004FDC(&qword_1000CF650);
  void v3[6] = swift_task_alloc();
  sub_100004FDC(&qword_1000CF658);
  v3[7] = swift_task_alloc();
  uint64_t v4 = sub_1000A2DD0();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = type metadata accessor for MenuOnLeftEntity();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100004FDC(&qword_1000CF660);
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_10007EF1C, 0, 0);
}

uint64_t sub_10007EF1C()
{
  sub_1000A2EB0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  uint64_t v2 = sub_100080F78(qword_1000CF4B8);
  *uint64_t v1 = v0;
  v1[1] = sub_10007F004;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[11];
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v4, sub_10007F708, 0, v5, v2);
}

uint64_t sub_10007F004()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10007F100, 0, 0);
}

uint64_t sub_10007F100()
{
  sub_1000A2EB0();
  sub_1000A2EB0();
  *(unsigned char *)(v0 + 177) = *(unsigned char *)(v0 + 176);
  if (qword_1000CC780 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1000D81B8;
  *(void *)(v0 + 152) = qword_1000D81B8;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = sub_10000B17C(&qword_1000CF610, &qword_1000CF618);
  *uint64_t v2 = v0;
  v2[1] = sub_10007F24C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 177, v1, &type metadata for BooksMenuAnchor, v3);
}

uint64_t sub_10007F24C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  sub_100081E04(v2);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10007F628;
  }
  else {
    uint64_t v3 = sub_10007F3A0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10007F3A0()
{
  uint64_t v1 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v2 = v0[14];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[17];
  uint64_t v3 = v0[10];
  uint64_t v14 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v13 = v0[9];
  sub_1000A2EB0();
  uint64_t v6 = sub_1000A3290();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1000A32D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_1000674A8();
  sub_100080F78(&qword_1000CF4D8);
  sub_1000A2DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v12, v2);
  sub_1000A2DC0();
  sub_1000A2DF0();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v14);
  sub_100081E04(v11);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10007F628()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10007F70C()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CF668);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000CC780 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000A30A0();
  swift_release();
  type metadata accessor for MenuOnLeftEntity();
  sub_100080F78(&qword_1000CF4D8);
  sub_10000B17C(&qword_1000CF670, &qword_1000CF668);
  sub_1000A3090();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10007F898()
{
  return sub_1000A2EB0();
}

uint64_t sub_10007F8BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MenuOnLeftEntity();
  __chkstk_darwin(v2 - 8);
  sub_100081EA8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A2EC0();
  return sub_100081E04(a1);
}

void (*sub_10007F94C(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000A2EA0();
  return sub_10007F9A8;
}

uint64_t sub_10007F9AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000A2EB0();
  *a1 = v3;
  return result;
}

uint64_t sub_10007F9E8()
{
  return sub_1000A2EC0();
}

void (*sub_10007FA20(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000A2EA0();
  return sub_10007F9A8;
}

uint64_t sub_10007FA7C()
{
  if (qword_1000CC780 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10007FAD8()
{
  return 0xD000000000000015;
}

unint64_t sub_10007FAF8()
{
  unint64_t result = qword_1000CF468;
  if (!qword_1000CF468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF468);
  }
  return result;
}

unint64_t sub_10007FB50()
{
  unint64_t result = qword_1000CF470;
  if (!qword_1000CF470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF470);
  }
  return result;
}

uint64_t sub_10007FBA4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10007FBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007FC04(a1, a2, a3, (void (*)(void))sub_1000674A8);
}

uint64_t sub_10007FC04(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007FC4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100061130(&qword_1000CC770, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000D8188, a1);
}

uint64_t sub_10007FC88@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000CC778 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100004FDC(&qword_1000CF678);
  uint64_t v3 = sub_100010B3C(v2, (uint64_t)qword_1000D81A0);
  return sub_10000B1C0(v3, a1, &qword_1000CF678);
}

uint64_t sub_10007FD00(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100011210;
  return sub_10007ED18(a1, v5, v4);
}

uint64_t sub_10007FDAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008196C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10007FDD4()
{
  return 0xD000000000000021;
}

unint64_t sub_10007FDF4()
{
  unint64_t result = qword_1000CF480;
  if (!qword_1000CF480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF480);
  }
  return result;
}

uint64_t sub_10007FE48()
{
  return sub_100080F78((unint64_t *)&unk_1000CF488);
}

uint64_t type metadata accessor for MenuOnLeftEntity()
{
  uint64_t result = qword_1000CF5A8;
  if (!qword_1000CF5A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007FEC8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10007FEE8, 0, 0);
}

uint64_t sub_10007FEE8()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self bu_groupUserDefaults];
  unsigned __int8 v3 = [v2 BKMenuOnLeft];

  *uint64_t v1 = v3 ^ 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10007FF90(uint64_t a1, char *a2)
{
  char v3 = *a2;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100011210;
  *(unsigned char *)(v4 + 16) = v3;
  return _swift_task_switch(sub_10008005C, 0, 0);
}

uint64_t sub_10008003C(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 16) = a2;
  return _swift_task_switch(sub_10008005C, 0, 0);
}

uint64_t sub_10008005C()
{
  char v1 = *(unsigned char *)(v0 + 16);
  id v2 = [self bu_groupUserDefaults];
  if (v1) {
    char v3 = sub_1000A46A0();
  }
  else {
    char v3 = 1;
  }
  swift_bridgeObjectRelease();
  [v2 setBKMenuOnLeft:v3 & 1];

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100080144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  sub_1000A3380();
  sub_1000A3380();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v11 = sub_1000A30D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_100004FDC(&qword_1000CEF58);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000A8E80;
  sub_1000A3380();
  sub_1000A3380();
  sub_1000A30E0();
  uint64_t v12 = type metadata accessor for MenuOnLeftEntity();
  uint64_t v13 = (void *)(a1 + *(int *)(v12 + 20));
  *uint64_t v13 = 0xD000000000000015;
  v13[1] = 0x80000001000A8260;
  uint64_t v14 = *(int *)(v12 + 24);
  sub_100004FDC(&qword_1000CF460);
  sub_1000A3380();
  sub_10000B17C(&qword_1000CF610, &qword_1000CF618);
  sub_10007E860();
  uint64_t result = sub_1000A3320();
  *(void *)(a1 + v14) = result;
  return result;
}

uint64_t sub_1000804D0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000804F0, 0, 0);
}

uint64_t sub_1000804F0()
{
  sub_100080144(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100080558()
{
  unint64_t result = qword_1000CF498;
  if (!qword_1000CF498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF498);
  }
  return result;
}

uint64_t sub_1000805AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100080D2C();
  *uint64_t v4 = v2;
  v4[1] = sub_10008065C;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_10008065C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100080774()
{
  unint64_t result = qword_1000CF4A8;
  if (!qword_1000CF4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF4A8);
  }
  return result;
}

unint64_t sub_1000807CC()
{
  unint64_t result = qword_1000CF4B0;
  if (!qword_1000CF4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF4B0);
  }
  return result;
}

uint64_t sub_100080820()
{
  return sub_100080F78(qword_1000CF4B8);
}

uint64_t sub_100080854(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100080D2C();
  *uint64_t v5 = v2;
  v5[1] = sub_100080908;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100080908(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100080A08(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100080D2C();
  *uint64_t v4 = v2;
  v4[1] = sub_100081F0C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100080ABC()
{
  unint64_t result = qword_1000CF4D0;
  if (!qword_1000CF4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF4D0);
  }
  return result;
}

uint64_t sub_100080B10()
{
  return sub_100080F78(&qword_1000CF4D8);
}

unint64_t sub_100080B48()
{
  unint64_t result = qword_1000CF4E0;
  if (!qword_1000CF4E0)
  {
    sub_100008B14(qword_1000CF4E8);
    sub_100080F78(&qword_1000CF4D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF4E0);
  }
  return result;
}

uint64_t sub_100080BD8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100080558();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C760;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100080C8C()
{
  return sub_100080F78(&qword_1000CF500);
}

uint64_t sub_100080CC0()
{
  return sub_100080F78(&qword_1000CF508);
}

uint64_t sub_100080CF4()
{
  return sub_100080F78(&qword_1000CF510);
}

unint64_t sub_100080D2C()
{
  unint64_t result = qword_1000CF518;
  if (!qword_1000CF518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF518);
  }
  return result;
}

uint64_t sub_100080D80()
{
  uint64_t v0 = qword_1000CF3E0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100080DB8()
{
  return sub_100080F78(&qword_1000CF520);
}

uint64_t sub_100080DEC()
{
  return sub_100080F78(&qword_1000CF528);
}

uint64_t sub_100080E20()
{
  return sub_100080F78(&qword_1000CF530);
}

uint64_t sub_100080E54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 20));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100080E68@<X0>(uint64_t a1@<X8>)
{
  return sub_100061130(&qword_1000CC768, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D8170, a1);
}

uint64_t sub_100080EA0()
{
  return sub_10000B17C(&qword_1000CF538, &qword_1000CF540);
}

uint64_t sub_100080EDC(uint64_t a1)
{
  uint64_t v2 = sub_100080F78(qword_1000CF4B8);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100080F44()
{
  return sub_100080F78(&qword_1000CF548);
}

uint64_t sub_100080F78(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MenuOnLeftEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100080FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000A3110();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100081024(uint64_t a1)
{
  uint64_t v2 = sub_100080F78(&qword_1000CF530);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for MenuOnLeftEntity.MenuOnLeftEntityQuery()
{
  return &type metadata for MenuOnLeftEntity.MenuOnLeftEntityQuery;
}

uint64_t *sub_10008109C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000A3110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100081180(uint64_t a1)
{
  uint64_t v2 = sub_1000A3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100081204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10008129C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100081354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1000813D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_100081478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008148C);
}

uint64_t sub_10008148C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100081550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100081564);
}

uint64_t sub_100081564(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000A3110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100081624()
{
  uint64_t result = sub_1000A3110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for MenuOnLeftEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s20BooksWidgetExtension16MenuOnLeftEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MenuOnLeftEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for MenuOnLeftEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MenuOnLeftEntity.UpdateIntent_value()
{
  return &type metadata for MenuOnLeftEntity.UpdateIntent_value;
}

unsigned char *storeEnumTagSinglePayload for BooksMenuAnchor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000818BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksMenuAnchor()
{
  return &type metadata for BooksMenuAnchor;
}

uint64_t sub_1000818F4()
{
  return sub_10000B17C(&qword_1000CF5E8, &qword_1000CF5F0);
}

uint64_t sub_100081930()
{
  return sub_10000B17C(&qword_1000CF5F8, &qword_1000CF5F0);
}

uint64_t sub_10008196C()
{
  uint64_t v34 = sub_1000A31D0();
  uint64_t v0 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_100004FDC(&qword_1000CF628);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = v11;
  uint64_t v12 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v14;
  uint64_t v15 = sub_1000A33A0();
  uint64_t v32 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v30 = sub_100004FDC(&qword_1000CF630);
  sub_1000A3380();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v31 = v16 + 56;
  uint64_t v33 = v17;
  v17(v14, 1, 1, v15);
  uint64_t v18 = type metadata accessor for MenuOnLeftEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  uint64_t v19 = sub_1000A2DD0();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  BOOL v21 = v6;
  v20(v6, 1, 1, v19);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v22 = *(void (**)(void))(v0 + 104);
  _OWORD v26[2] = v0 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v22;
  uint64_t v23 = v34;
  v22(v2);
  sub_100080F78(qword_1000CF4B8);
  uint64_t v24 = v29;
  uint64_t v30 = sub_1000A2EF0();
  sub_100004FDC(&qword_1000CF638);
  sub_1000A3380();
  v33(v24, 1, 1, v32);
  char v35 = 2;
  v20(v8, 1, 1, v19);
  v20(v21, 1, 1, v19);
  v27(v2, v28, v23);
  sub_10007E860();
  sub_1000A2EE0();
  return v30;
}

uint64_t sub_100081E04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MenuOnLeftEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100081E60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for MenuOnLeftEntity() + 24));

  return swift_retain();
}

uint64_t sub_100081EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MenuOnLeftEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100081F10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v11[16];
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    uint64_t v14 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v14;
    v10[56] = v11[56];
    uint64_t v15 = *((void *)v11 + 9);
    *((void *)v10 + 8) = *((void *)v11 + 8);
    *((void *)v10 + 9) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100082070(uint64_t a1)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100082124(void *a1, void *a2, uint64_t a3)
{
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A38E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 1);
  *(void *)uint64_t v8 = *(void *)v9;
  *((void *)v8 + 1) = v10;
  v8[16] = v9[16];
  uint64_t v11 = *((void *)v9 + 4);
  *((void *)v8 + 3) = *((void *)v9 + 3);
  *((void *)v8 + 4) = v11;
  uint64_t v12 = *((void *)v9 + 6);
  *((void *)v8 + 5) = *((void *)v9 + 5);
  *((void *)v8 + 6) = v12;
  v8[56] = v9[56];
  uint64_t v13 = *((void *)v9 + 9);
  *((void *)v8 + 8) = *((void *)v9 + 8);
  *((void *)v8 + 9) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100082234(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A38E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  v8[16] = v9[16];
  *((void *)v8 + 1) = v10;
  *((void *)v8 + 3) = *((void *)v9 + 3);
  *((void *)v8 + 4) = *((void *)v9 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v8 + 5) = *((void *)v9 + 5);
  *((void *)v8 + 6) = *((void *)v9 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[56] = v9[56];
  *((void *)v8 + 8) = *((void *)v9 + 8);
  *((void *)v8 + 9) = *((void *)v9 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100082398(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A38E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v11;
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  long long v12 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v12;
  return a1;
}

char *sub_100082484(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CC9C8);
    uint64_t v6 = sub_100004FDC(&qword_1000CC9C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  v9[16] = v10[16];
  uint64_t v11 = *((void *)v10 + 4);
  *((void *)v9 + 3) = *((void *)v10 + 3);
  *((void *)v9 + 4) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v10 + 6);
  *((void *)v9 + 5) = *((void *)v10 + 5);
  *((void *)v9 + 6) = v12;
  swift_bridgeObjectRelease();
  v9[56] = v10[56];
  uint64_t v13 = *((void *)v10 + 9);
  *((void *)v9 + 8) = *((void *)v10 + 8);
  *((void *)v9 + 9) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000825C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000825D4);
}

uint64_t sub_1000825D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 32);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10008269C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000826B0);
}

uint64_t sub_1000826B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CC9D0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 32) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for LargeWidgetView()
{
  uint64_t result = qword_1000CF730;
  if (!qword_1000CF730) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000827C0()
{
  sub_10000591C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100082854()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100082870@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000A38E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CF768);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = sub_100004FDC(&qword_1000CF770);
  __chkstk_darwin(v49);
  uint64_t v50 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v10 = sub_1000A4070();
  v10[1] = v12;
  uint64_t v13 = sub_100004FDC(&qword_1000CF778);
  sub_100082D48(a1, (char *)v10 + *(int *)(v13 + 44));
  uint64_t v14 = (void *)(a1 + *(int *)(type metadata accessor for LargeWidgetView() + 20));
  uint64_t v15 = *(void *)(v14[6] + 16);
  if (!v15)
  {
LABEL_23:
    sub_100009B24((uint64_t)v7);
    goto LABEL_26;
  }
  uint64_t v42 = a1;
  uint64_t v44 = v10;
  uint64_t v45 = v7;
  uint64_t v46 = v5;
  uint64_t v47 = v4;
  uint64_t v48 = a2;
  uint64_t v17 = v14[8];
  uint64_t v16 = v14[9];
  uint64_t v52 = v17;
  uint64_t v55 = v16;
  uint64_t v18 = (void *)BDSLibraryContentAssetTypeAudiobook;
  uint64_t v51 = BDSCloudAssetTypeStoreAudiobook;
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v19 = (uint64_t *)(v43 + 64);
  uint64_t v53 = v18;
  while (1)
  {
    uint64_t v57 = *(v19 - 3);
    uint64_t v20 = v19[1];
    uint64_t v54 = *v19;
    BOOL v21 = (void *)v19[2];
    uint64_t v22 = (void *)v19[3];
    uint64_t v23 = sub_1000A4340();
    uint64_t v25 = v24;
    if (v23 == sub_1000A4340() && v25 == v26) {
      char v28 = 1;
    }
    else {
      char v28 = sub_1000A46A0();
    }
    swift_bridgeObjectRetain();
    id v56 = v22;
    id v29 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v30 = v21;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      if (!v21) {
        goto LABEL_3;
      }
      uint64_t v31 = sub_1000A4340();
      uint64_t v33 = v32;
      if (v31 == sub_1000A4340() && v33 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v35 = sub_1000A46A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    if (!v55)
    {
LABEL_3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v54 == v52 && v55 == v20) {
      break;
    }
    char v36 = sub_1000A46A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_25;
    }
LABEL_4:
    v19 += 11;
    --v15;
    uint64_t v18 = v53;
    if (!v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v47;
      a2 = v48;
      uint64_t v7 = v45;
      uint64_t v5 = v46;
      unint64_t v10 = v44;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v7 = v45;
  uint64_t v5 = v46;
  uint64_t v4 = v47;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, enum case for ColorScheme.light(_:), v47);
  a2 = v48;
  unint64_t v10 = v44;
LABEL_26:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = (uint64_t)v50;
  uint64_t v39 = (uint64_t *)&v50[*(int *)(v49 + 36)];
  uint64_t v40 = sub_100004FDC(&qword_1000CCAC0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v39 + *(int *)(v40 + 28), v7, v4);
  *uint64_t v39 = KeyPath;
  sub_10000B1C0((uint64_t)v10, v38, &qword_1000CF768);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10000A9C0((uint64_t)v10, &qword_1000CF768);
  return sub_10000A95C(v38, a2, &qword_1000CF770);
}

uint64_t sub_100082D48@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v56 = type metadata accessor for LogoView() - 8;
  uint64_t v3 = __chkstk_darwin(v56);
  uint64_t v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v55 = (uint64_t)&v44 - v5;
  uint64_t v54 = sub_1000A3CB0();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004FDC(&qword_1000CF780);
  __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004FDC(&qword_1000CF788);
  uint64_t v51 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v44 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100004FDC(&qword_1000CF790);
  uint64_t v59 = *(void *)(v50 - 8);
  uint64_t v14 = __chkstk_darwin(v50);
  uint64_t v58 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v48 = (char *)&v44 - v16;
  sub_1000A3920();
  double v18 = v17 * 0.4;
  *(void *)uint64_t v12 = sub_1000A3BA0();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v19 = sub_100004FDC(&qword_1000CF798);
  sub_1000834AC(a1, &v12[*(int *)(v19 + 44)], v18);
  uint64_t v20 = (_OWORD *)(a1 + *(int *)(type metadata accessor for LargeWidgetView() + 20));
  long long v21 = v20[3];
  _OWORD v62[2] = v20[2];
  v62[3] = v21;
  v62[4] = v20[4];
  long long v22 = v20[1];
  v62[0] = *v20;
  v62[1] = v22;
  sub_10001308C((uint64_t)v62);
  sub_100008EB8((uint64_t)v10);
  sub_1000130D8((uint64_t)v62);
  uint64_t v23 = sub_1000A3490();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v45 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
  uint64_t v46 = v24 + 56;
  v45(v10, 0, 1, v23);
  uint64_t v25 = sub_10000B17C(&qword_1000CF7A0, &qword_1000CF780);
  uint64_t v26 = v47;
  sub_1000A3E80();
  sub_10000A9C0((uint64_t)v10, &qword_1000CCB30);
  sub_10000A9C0((uint64_t)v12, &qword_1000CF780);
  sub_1000A3CA0();
  uint64_t v60 = a1;
  sub_1000A4070();
  sub_100004FDC(&qword_1000CCAB0);
  *(void *)&v61[0] = v26;
  *((void *)&v61[0] + 1) = v25;
  swift_getOpaqueTypeConformance2();
  sub_100008C08();
  uint64_t v27 = v58;
  uint64_t v28 = v49;
  id v29 = v44;
  sub_1000A3F20();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v54);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v28);
  uint64_t v30 = v59;
  uint64_t v31 = v48;
  uint64_t v32 = v50;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v48, v27, v50);
  long long v33 = v20[3];
  v61[2] = v20[2];
  v61[3] = v33;
  unsigned char v61[4] = v20[4];
  long long v34 = *v20;
  v61[1] = v20[1];
  v61[0] = v34;
  sub_10001308C((uint64_t)v61);
  sub_100008EB8((uint64_t)v10);
  sub_1000130D8((uint64_t)v61);
  v45(v10, 0, 1, v23);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = (uint64_t)v52;
  *((void *)v52 + 2) = 0;
  *(void *)(v36 + 24) = 0;
  *(unsigned char *)(v36 + 32) = 0;
  *(void *)uint64_t v36 = KeyPath;
  *(void *)(v36 + 8) = 0;
  sub_10000A95C((uint64_t)v10, v36 + *(int *)(v56 + 28), &qword_1000CCB30);
  uint64_t v37 = v55;
  sub_100085BFC(v36, v55, (uint64_t (*)(void))type metadata accessor for LogoView);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v39 = v58;
  v38(v58, v31, v32);
  sub_100085C6C(v37, v36, (uint64_t (*)(void))type metadata accessor for LogoView);
  uint64_t v40 = v57;
  v38(v57, v39, v32);
  uint64_t v41 = sub_100004FDC(&qword_1000CF7A8);
  sub_100085C6C(v36, (uint64_t)&v40[*(int *)(v41 + 48)], (uint64_t (*)(void))type metadata accessor for LogoView);
  sub_100086224(v37, (uint64_t (*)(void))type metadata accessor for LogoView);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v59 + 8);
  v42(v31, v32);
  sub_100086224(v36, (uint64_t (*)(void))type metadata accessor for LogoView);
  return ((uint64_t (*)(char *, uint64_t))v42)(v39, v32);
}

uint64_t sub_1000834AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>, double a3@<D0>)
{
  uint64_t v79 = a2;
  uint64_t v74 = type metadata accessor for TodayReadingGoalView(0);
  __chkstk_darwin(v74);
  uint64_t v6 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100004FDC(&qword_1000CDD78);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v78 = &v71[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v76 = &v71[-v11];
  __chkstk_darwin(v10);
  uint64_t v77 = &v71[-v12];
  uint64_t v72 = sub_1000A3CB0();
  uint64_t v13 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v15 = &v71[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100004FDC(&qword_1000CF7B0);
  __chkstk_darwin(v16 - 8);
  double v18 = &v71[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_100004FDC(&qword_1000CF7B8);
  __chkstk_darwin(v19);
  long long v21 = &v71[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_100004FDC(&qword_1000CF7C0);
  uint64_t v80 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  char v75 = &v71[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = &v71[-v26];
  __chkstk_darwin(v25);
  uint64_t v81 = &v71[-v28];
  *(void *)double v18 = sub_1000A3B60();
  *((void *)v18 + 1) = 0;
  unsigned char v18[16] = 1;
  uint64_t v29 = (uint64_t)&v18[*(int *)(sub_100004FDC(&qword_1000CF7C8) + 44)];
  uint64_t v73 = a1;
  sub_100083CC4(a1, v29);
  sub_1000A3920();
  sub_1000A4070();
  sub_1000A3A30();
  sub_10000B1C0((uint64_t)v18, (uint64_t)v21, &qword_1000CF7B0);
  uint64_t v30 = &v21[*(int *)(v19 + 36)];
  long long v31 = v87;
  v30[4] = v86;
  v30[5] = v31;
  v30[6] = v88;
  long long v32 = v83;
  *uint64_t v30 = v82;
  v30[1] = v32;
  long long v33 = v85;
  void v30[2] = v84;
  void v30[3] = v33;
  sub_10000A9C0((uint64_t)v18, &qword_1000CF7B0);
  sub_1000A3CA0();
  sub_1000A4070();
  sub_100085CD4();
  sub_100035B8C();
  sub_1000A3F20();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v72);
  sub_10000A9C0((uint64_t)v21, &qword_1000CF7B8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 32))(v81, v27, v22);
  uint64_t v34 = v73 + *(int *)(type metadata accessor for LargeWidgetView() + 20);
  uint64_t v35 = *(void *)v34;
  uint64_t v36 = *(void *)(v34 + 8);
  LOBYTE(v21) = *(unsigned char *)(v34 + 16);
  uint64_t v38 = *(void *)(v34 + 24);
  uint64_t v37 = *(void *)(v34 + 32);
  uint64_t v40 = *(void *)(v34 + 40);
  uint64_t v39 = *(void *)(v34 + 48);
  uint64_t v73 = v22;
  LOBYTE(v22) = *(unsigned char *)(v34 + 56);
  uint64_t v42 = *(void *)(v34 + 64);
  uint64_t v41 = *(void *)(v34 + 72);
  uint64_t KeyPath = swift_getKeyPath();
  v6[32] = 0;
  *(void *)uint64_t v6 = KeyPath;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *((void *)v6 + 3) = 0;
  *((void *)v6 + 5) = v35;
  *((void *)v6 + 6) = v36;
  v6[56] = (_BYTE)v21;
  *((void *)v6 + 8) = v38;
  *((void *)v6 + 9) = v37;
  *((void *)v6 + 10) = v40;
  *((void *)v6 + 11) = v39;
  v6[96] = v22;
  *((void *)v6 + 13) = v42;
  *((void *)v6 + 14) = v41;
  uint64_t v44 = &v6[*(int *)(v74 + 24)];
  void *v44 = 0x4062C00000000000;
  uint64_t v45 = (int *)type metadata accessor for TodayReadingGoalView.ViewConfiguration(0);
  uint64_t v46 = (char *)v44 + v45[5];
  uint64_t v47 = enum case for ColorScheme.dark(_:);
  uint64_t v48 = sub_1000A38E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v46, v47, v48);
  *(void *)((char *)v44 + v45[6]) = 0x4040000000000000;
  uint64_t v49 = (char *)v44 + v45[7];
  uint64_t v50 = enum case for BlendMode.plusLighter(_:);
  uint64_t v51 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v49, v50, v51);
  uint64_t v52 = v45[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)((char *)v44 + v52) = sub_1000A3DF0();
  uint64_t v53 = v45[9];
  sub_1000A3DB0();
  *(void *)((char *)v44 + v53) = v54;
  uint64_t v55 = v45[10];
  *(_DWORD *)((char *)v44 + v55) = sub_1000A3C50();
  uint64_t v56 = (void *)((char *)v44 + v45[11]);
  *uint64_t v56 = 0x69662E656D616C66;
  v56[1] = 0xEA00000000006C6CLL;
  uint64_t v57 = sub_1000A4070();
  uint64_t v58 = v76;
  sub_100031110(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v76, 0.0, 1, a3, 0, v57, v59);
  sub_100086224((uint64_t)v6, type metadata accessor for TodayReadingGoalView);
  uint64_t v60 = v77;
  sub_10000A95C((uint64_t)v58, (uint64_t)v77, &qword_1000CDD78);
  uint64_t v62 = v80;
  long long v61 = v81;
  uint64_t v63 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 16);
  uint64_t v64 = v75;
  uint64_t v65 = v73;
  v63(v75, v81, v73);
  uint64_t v66 = v78;
  sub_10000B1C0((uint64_t)v60, (uint64_t)v78, &qword_1000CDD78);
  uint64_t v67 = v79;
  v63(v79, v64, v65);
  uint64_t v68 = sub_100004FDC(&qword_1000CF7E0);
  sub_10000B1C0((uint64_t)v66, (uint64_t)&v67[*(int *)(v68 + 48)], &qword_1000CDD78);
  sub_10000A9C0((uint64_t)v60, &qword_1000CDD78);
  uint64_t v69 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
  v69(v61, v65);
  sub_10000A9C0((uint64_t)v66, &qword_1000CDD78);
  return ((uint64_t (*)(unsigned char *, uint64_t))v69)(v64, v65);
}

uint64_t sub_100083CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v151 = a2;
  uint64_t v3 = (void *)sub_1000A3B90();
  uint64_t v141 = (void (**)(void, id))*(v3 - 1);
  id v142 = v3;
  __chkstk_darwin(v3);
  char v140 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3C90();
  uint64_t v132 = *(void *)(v5 - 8);
  uint64_t v133 = v5;
  __chkstk_darwin(v5);
  uint64_t v131 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for LargeEmptyStateView();
  __chkstk_darwin(v149);
  uint64_t v8 = (uint64_t *)((char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100004FDC(&qword_1000CF7E8);
  uint64_t v136 = *(void *)(v9 - 8);
  uint64_t v137 = v9;
  __chkstk_darwin(v9);
  uint64_t v134 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100004FDC(&qword_1000CF7F0);
  uint64_t v11 = __chkstk_darwin(v147);
  uint64_t v135 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v139 = (char *)&v123 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v138 = (char *)&v123 - v16;
  __chkstk_darwin(v15);
  uint64_t v143 = (uint64_t)&v123 - v17;
  uint64_t v145 = sub_100004FDC(&qword_1000CF7F8);
  __chkstk_darwin(v145);
  uint64_t v146 = (uint64_t)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004FDC(&qword_1000CF800);
  __chkstk_darwin(v19);
  uint64_t v148 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000A3490();
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100004FDC(&qword_1000CF808);
  uint64_t v124 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v25 = (char *)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100004FDC(&qword_1000CF810);
  uint64_t v26 = __chkstk_darwin(v129);
  uint64_t v28 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v125 = (uint64_t)&v123 - v29;
  uint64_t v127 = sub_100004FDC(&qword_1000CF818);
  __chkstk_darwin(v127);
  uint64_t v128 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_100004FDC(&qword_1000CF820);
  __chkstk_darwin(v144);
  uint64_t v130 = (char *)&v123 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100004FDC(&qword_1000CF828);
  __chkstk_darwin(v32);
  uint64_t v34 = (_OWORD *)((char *)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = type metadata accessor for LargeWidgetView();
  uint64_t v36 = a1;
  uint64_t v37 = a1 + *(int *)(result + 20);
  uint64_t v38 = *(void *)(v37 + 48);
  unint64_t v39 = *(void *)(v38 + 16);
  uint64_t v150 = v19;
  uint64_t v152 = v32;
  if (v39 >= 3)
  {
    uint64_t v55 = *(void *)v37;
    uint64_t v56 = *(void *)(v37 + 8);
    char v57 = *(unsigned char *)(v37 + 16);
    uint64_t v59 = *(void *)(v37 + 24);
    uint64_t v58 = *(void *)(v37 + 32);
    uint64_t v60 = *(void *)(v37 + 40);
    LODWORD(v149) = *(unsigned __int8 *)(v37 + 56);
    uint64_t v61 = *(void *)(v37 + 72);
    uint64_t v148 = *(char **)(v37 + 64);
    uint64_t KeyPath = swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1000A3DE0();
    uint64_t v173 = KeyPath;
    uint64_t v174 = 0;
    uint64_t v176 = 0;
    uint64_t v175 = 0;
    LOBYTE(v177) = 0;
    *((void *)&v177 + 1) = v55;
    *(void *)&long long v178 = v56;
    BYTE8(v178) = v57;
    *(void *)&long long v179 = v59;
    *((void *)&v179 + 1) = v58;
    *(void *)&long long v180 = v60;
    *((void *)&v180 + 1) = v38;
    LOBYTE(v181) = v149;
    *((void *)&v181 + 1) = v148;
    *(void *)&v182[0] = v61;
    *(_OWORD *)((char *)v182 + 8) = xmmword_1000ACEA0;
    v183[0] = xmmword_1000ACEB0;
    *((void *)&v182[1] + 1) = v63;
    *(void *)&v183[1] = 0x4020000000000000;
    _OWORD v153[4] = v179;
    v153[5] = v180;
    *(void *)&v153[10] = 0x4020000000000000;
    v153[8] = v182[1];
    v153[9] = xmmword_1000ACEB0;
    v153[6] = v181;
    v153[7] = v182[0];
    v153[2] = v177;
    v153[3] = v178;
    v153[0] = (unint64_t)KeyPath;
    v153[1] = 0u;
    sub_100085D74((uint64_t)v153);
    sub_10000A95C((uint64_t)v153, (uint64_t)v154, &qword_1000CF830);
    sub_100018F5C((uint64_t)&v173);
    sub_100085D7C();
    sub_100085DD0();
    sub_1000A3C00();
    long long v64 = v172[0];
    v34[8] = v171;
    v34[9] = v64;
    *(_OWORD *)((char *)v34 + 153) = *(_OWORD *)((char *)v172 + 9);
    long long v65 = v168;
    v34[4] = v167;
    v34[5] = v65;
    long long v66 = v170;
    v34[6] = v169;
    v34[7] = v66;
    long long v67 = v164;
    *uint64_t v34 = v163;
    v34[1] = v67;
    long long v68 = v166;
    uint64_t v34[2] = v165;
    v34[3] = v68;
    swift_storeEnumTagMultiPayload();
    sub_100004FDC(&qword_1000CF848);
    sub_100085E24(&qword_1000CF850, &qword_1000CF848, (void (*)(void))sub_100085D7C, (void (*)(void))sub_100085DD0);
    sub_100085E24(&qword_1000CF858, &qword_1000CF800, (void (*)(void))sub_100085EAC, (void (*)(void))sub_10008600C);
    sub_1000A3C00();
    return sub_100086160((uint64_t)&v173);
  }
  else if (v39 == 2)
  {
    uint64_t v40 = *(void *)v37;
    char v41 = *(unsigned char *)(v37 + 16);
    uint64_t v43 = *(void *)(v37 + 24);
    uint64_t v42 = *(void *)(v37 + 32);
    uint64_t v44 = *(void *)(v37 + 40);
    char v45 = *(unsigned char *)(v37 + 56);
    uint64_t v46 = *(void *)(v37 + 64);
    uint64_t v47 = *(void *)(v37 + 72);
    uint64_t v148 = *(char **)(v37 + 8);
    uint64_t v149 = v46;
    uint64_t v48 = swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1000A3DE0();
    uint64_t v173 = v48;
    uint64_t v174 = 0;
    uint64_t v176 = 0;
    uint64_t v175 = 0;
    LOBYTE(v177) = 0;
    *((void *)&v177 + 1) = v40;
    *(void *)&long long v178 = v148;
    BYTE8(v178) = v41;
    *(void *)&long long v179 = v43;
    *((void *)&v179 + 1) = v42;
    *(void *)&long long v180 = v44;
    *((void *)&v180 + 1) = v38;
    LOBYTE(v181) = v45;
    *((void *)&v181 + 1) = v149;
    *(void *)&v182[0] = v47;
    *(_OWORD *)((char *)v182 + 8) = xmmword_1000ACEC0;
    *((void *)&v182[1] + 1) = 0x4020000000000000;
    *(void *)&v183[0] = v49;
    *(_OWORD *)((char *)v183 + 8) = xmmword_1000AA580;
    _OWORD v153[4] = v179;
    v153[5] = v180;
    v153[2] = v177;
    v153[3] = v178;
    *(void *)&v153[10] = 0x4020000000000000;
    v153[8] = v182[1];
    v153[9] = v183[0];
    v153[6] = v181;
    v153[7] = v182[0];
    v153[0] = (unint64_t)v48;
    v153[1] = 0u;
    sub_100086284((uint64_t)v153);
    sub_10000A95C((uint64_t)v153, (uint64_t)v154, &qword_1000CF830);
    sub_100012E60((uint64_t)&v173);
    sub_100085D7C();
    sub_100085DD0();
    sub_1000A3C00();
    long long v50 = v172[0];
    v34[8] = v171;
    v34[9] = v50;
    *(_OWORD *)((char *)v34 + 153) = *(_OWORD *)((char *)v172 + 9);
    long long v51 = v168;
    v34[4] = v167;
    v34[5] = v51;
    long long v52 = v170;
    v34[6] = v169;
    v34[7] = v52;
    long long v53 = v164;
    *uint64_t v34 = v163;
    v34[1] = v53;
    long long v54 = v166;
    uint64_t v34[2] = v165;
    v34[3] = v54;
    swift_storeEnumTagMultiPayload();
    sub_100004FDC(&qword_1000CF848);
    sub_100085E24(&qword_1000CF850, &qword_1000CF848, (void (*)(void))sub_100085D7C, (void (*)(void))sub_100085DD0);
    sub_100085E24(&qword_1000CF858, &qword_1000CF800, (void (*)(void))sub_100085EAC, (void (*)(void))sub_10008600C);
    sub_1000A3C00();
    return sub_100086290((uint64_t)&v173);
  }
  else if (v39)
  {
    uint64_t v123 = v34;
    uint64_t v70 = *(void *)(v38 + 64);
    uint64_t v69 = *(void *)(v38 + 72);
    if (v70 == 0xD000000000000023 && v69 == 0x80000001000A5050 || (sub_1000A46A0() & 1) != 0)
    {
      uint64_t v71 = sub_10006F1F8();
      uint64_t v73 = v72;
      uint64_t v74 = sub_10000A958();
      *uint64_t v8 = v71;
      v8[1] = v73;
      v8[2] = v74;
      v8[3] = v75;
      uint64_t v76 = (char *)v8 + *(int *)(v149 + 24);
      uint64_t v77 = sub_1000A3D70();
      sub_1000A3DB0();
      uint64_t v79 = v78;
      int v80 = sub_1000A3C40();
      sub_1000A3F70();
      uint64_t v81 = sub_1000A3F80();
      swift_release();
      uint64_t v82 = enum case for ColorScheme.dark(_:);
      uint64_t v83 = sub_1000A38E0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 104))(v76, v82, v83);
      long long v84 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
      long long v85 = &v76[v84[5]];
      uint64_t v86 = enum case for BlendMode.plusLighter(_:);
      uint64_t v87 = sub_1000A4090();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 104))(v85, v86, v87);
      *(void *)&v76[v84[6]] = v77;
      *(void *)&v76[v84[7]] = v79;
      *(_DWORD *)&v76[v84[8]] = v80;
      *(void *)&v76[v84[9]] = v81;
      *(void *)&v76[v84[10]] = 0x3FE570A3D70A3D71;
      *(void *)&v76[v84[11]] = 0x4018000000000000;
      *(void *)&v76[v84[12]] = 0x4030000000000000;
      long long v88 = v131;
      sub_1000A3C70();
      uint64_t v89 = sub_100086118(&qword_1000CF888, (void (*)(uint64_t))type metadata accessor for LargeEmptyStateView);
      uint64_t v90 = v134;
      uint64_t v91 = v149;
      sub_1000A3F30();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v88, v133);
      sub_100086224((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LargeEmptyStateView);
      sub_100004FDC(&qword_1000CCB98);
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = xmmword_1000A8D50;
      *(void *)(v92 + 32) = sub_10006F1F8();
      *(void *)(v92 + 40) = v93;
      *(void *)(v92 + 48) = sub_10000A958();
      *(void *)(v92 + 56) = v94;
      *(void *)&v153[0] = v92;
      sub_100004FDC(&qword_1000CCF20);
      sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
      uint64_t v95 = sub_1000A4250();
      uint64_t v97 = v96;
      swift_bridgeObjectRelease();
      *(void *)&v153[0] = v95;
      *((void *)&v153[0] + 1) = v97;
      *(void *)&long long v163 = v91;
      *((void *)&v163 + 1) = v89;
      swift_getOpaqueTypeConformance2();
      sub_10000A504();
      uint64_t v98 = (uint64_t)v135;
      uint64_t v99 = v137;
      sub_1000A3F00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v136 + 8))(v90, v99);
      long long v100 = v140;
      sub_1000A3B80();
      uint64_t v101 = (uint64_t)v139;
      sub_1000A39C0();
      ((void (**)(char *, id))v141)[1](v100, v142);
      uint64_t v102 = sub_10000A9C0(v98, &qword_1000CF7F0);
      sub_10000AD40(v102);
      uint64_t v103 = (uint64_t)v138;
      sub_1000A39D0();
      swift_bridgeObjectRelease();
      sub_10000A9C0(v101, &qword_1000CF7F0);
      uint64_t v104 = v143;
      sub_10000A95C(v103, v143, &qword_1000CF7F0);
      sub_10000B1C0(v104, v146, &qword_1000CF7F0);
      swift_storeEnumTagMultiPayload();
      sub_100085EAC();
      sub_10008600C();
      uint64_t v105 = (uint64_t)v148;
      sub_1000A3C00();
      sub_10000B1C0(v105, (uint64_t)v123, &qword_1000CF800);
      swift_storeEnumTagMultiPayload();
      sub_100004FDC(&qword_1000CF848);
      sub_100085E24(&qword_1000CF850, &qword_1000CF848, (void (*)(void))sub_100085D7C, (void (*)(void))sub_100085DD0);
      sub_100085E24(&qword_1000CF858, &qword_1000CF800, (void (*)(void))sub_100085EAC, (void (*)(void))sub_10008600C);
      sub_1000A3C00();
      sub_10000A9C0(v105, &qword_1000CF800);
      uint64_t v106 = v104;
      uint64_t v107 = &qword_1000CF7F0;
    }
    else
    {
      uint64_t v108 = *(void *)(v38 + 40);
      uint64_t v109 = *(void *)(v38 + 48);
      char v110 = *(unsigned char *)(v38 + 56);
      uint64_t v112 = *(void **)(v38 + 80);
      uint64_t v111 = *(void **)(v38 + 88);
      uint64_t v113 = *(void *)(v38 + 96);
      uint64_t v114 = *(void *)(v38 + 104);
      char v115 = *(unsigned char *)(v38 + 112);
      v154[0] = *(void *)(v38 + 32);
      v154[1] = v108;
      v154[2] = v109;
      char v155 = v110;
      uint64_t v156 = v70;
      uint64_t v157 = v69;
      uint64_t v158 = v112;
      uint64_t v159 = v111;
      uint64_t v160 = v113;
      uint64_t v161 = v114;
      char v162 = v115;
      *(void *)&long long v163 = v154[0];
      *((void *)&v163 + 1) = v108;
      *(void *)&long long v164 = v109;
      BYTE8(v164) = v110;
      *(void *)&long long v165 = v70;
      *((void *)&v165 + 1) = v69;
      *(void *)&long long v166 = v112;
      *((void *)&v166 + 1) = v111;
      char v116 = v111;
      *(void *)&long long v167 = v113;
      *((void *)&v167 + 1) = v114;
      LOBYTE(v168) = v115;
      uint64_t v143 = v108;
      swift_bridgeObjectRetain();
      uint64_t v149 = v69;
      swift_bridgeObjectRetain();
      id v142 = v112;
      uint64_t v141 = v116;
      swift_bridgeObjectRetain();
      if (sub_10001A23C())
      {
        sub_100085028((uint64_t)v153);
        memcpy(v128, v153, 0x110uLL);
        swift_storeEnumTagMultiPayload();
        sub_100085EE8();
        sub_100085F3C();
        uint64_t v117 = (uint64_t)v130;
        sub_1000A3C00();
      }
      else
      {
        uint64_t v118 = sub_10008523C((uint64_t)v23);
        __chkstk_darwin(v118);
        *(&v123 - 2) = (_OWORD *)v36;
        sub_100085EE8();
        sub_1000A3E10();
        *(void *)&v153[0] = sub_10006D98C(0);
        *((void *)&v153[0] + 1) = v119;
        sub_10000B17C(&qword_1000CF878, &qword_1000CF808);
        sub_10000A504();
        uint64_t v120 = v126;
        sub_1000A3F00();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v124 + 8))(v25, v120);
        uint64_t v121 = v125;
        sub_10000A95C((uint64_t)v28, v125, &qword_1000CF810);
        sub_10000B1C0(v121, (uint64_t)v128, &qword_1000CF810);
        swift_storeEnumTagMultiPayload();
        sub_100085F3C();
        uint64_t v117 = (uint64_t)v130;
        sub_1000A3C00();
        sub_10000A9C0(v121, &qword_1000CF810);
      }
      uint64_t v122 = (uint64_t)v148;
      sub_10000B1C0(v117, v146, &qword_1000CF820);
      swift_storeEnumTagMultiPayload();
      sub_100085EAC();
      sub_10008600C();
      sub_1000A3C00();
      sub_10000B1C0(v122, (uint64_t)v123, &qword_1000CF800);
      swift_storeEnumTagMultiPayload();
      sub_100004FDC(&qword_1000CF848);
      sub_100085E24(&qword_1000CF850, &qword_1000CF848, (void (*)(void))sub_100085D7C, (void (*)(void))sub_100085DD0);
      sub_100085E24(&qword_1000CF858, &qword_1000CF800, (void (*)(void))sub_100085EAC, (void (*)(void))sub_10008600C);
      sub_1000A3C00();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000A9C0(v122, &qword_1000CF800);
      uint64_t v106 = v117;
      uint64_t v107 = &qword_1000CF820;
    }
    return sub_10000A9C0(v106, v107);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100085028@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LargeWidgetView() + 20));
  uint64_t v4 = *v3;
  char v5 = *((unsigned char *)v3 + 16);
  uint64_t v6 = v3[4];
  uint64_t v29 = v3[3];
  uint64_t v30 = v3[1];
  uint64_t v7 = v3[6];
  uint64_t v28 = v3[5];
  char v27 = *((unsigned char *)v3 + 56);
  uint64_t v8 = v3[9];
  uint64_t v26 = v3[8];
  if (*(void *)(v7 + 16))
  {
    uint64_t v9 = *(void *)(v7 + 40);
    uint64_t v25 = *(void *)(v7 + 32);
    char v19 = *(unsigned char *)(v7 + 56);
    unint64_t v10 = *(void *)(v7 + 72);
    unint64_t v20 = *(void *)(v7 + 64);
    uint64_t v11 = *(void **)(v7 + 80);
    uint64_t v12 = *(void **)(v7 + 88);
    uint64_t v13 = *(void *)(v7 + 104);
    uint64_t v22 = *(void *)(v7 + 96);
    uint64_t v23 = *(void *)(v7 + 48);
    char v21 = *(unsigned char *)(v7 + 112);
    swift_bridgeObjectRetain();
    uint64_t v24 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v13 = 0;
    char v21 = 0;
    uint64_t v11 = (void *)BDSCloudAssetTypeStoreEbook;
    uint64_t v12 = (void *)BDSLibraryContentAssetTypeUnknown;
    unint64_t v10 = 0x80000001000A5050;
    unint64_t v20 = 0xD000000000000023;
    char v19 = 1;
  }
  id v14 = v11;
  id v15 = v12;
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1000A3DF0();
  *(void *)a1 = KeyPath;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v30;
  *(unsigned char *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v29;
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 96) = v27;
  *(void *)(a1 + 104) = v26;
  *(void *)(a1 + 112) = v8;
  *(void *)(a1 + 120) = v25;
  *(void *)(a1 + 128) = v24;
  *(void *)(a1 + 136) = v23;
  *(unsigned char *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  *(void *)(a1 + 160) = v10;
  *(void *)(a1 + 168) = v11;
  *(void *)(a1 + 176) = v15;
  *(void *)(a1 + 184) = v22;
  *(void *)(a1 + 192) = v13;
  *(unsigned char *)(a1 + 200) = v21;
  *(_OWORD *)(a1 + 208) = xmmword_1000ACED0;
  *(void *)(a1 + 224) = 0x4034000000000000;
  *(void *)(a1 + 232) = v17;
  *(void *)&double result = 5;
  *(_OWORD *)(a1 + 240) = xmmword_1000ACEE0;
  *(_OWORD *)(a1 + 256) = xmmword_1000ACEF0;
  return result;
}

uint64_t sub_10008523C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (long long *)(v1 + *(int *)(type metadata accessor for LargeWidgetView() + 20));
  long long v3 = v2[4];
  long long v4 = v2[2];
  long long v32 = v2[3];
  long long v33 = v3;
  long long v5 = *v2;
  v31[1] = v2[1];
  void v31[2] = v4;
  v31[0] = v5;
  if (*(void *)(v32 + 16))
  {
    uint64_t v6 = *(void *)(v32 + 32);
    char v7 = *(unsigned char *)(v32 + 56);
    unint64_t v8 = *(void *)(v32 + 64);
    unint64_t v9 = *(void *)(v32 + 72);
    uint64_t v11 = *(void **)(v32 + 80);
    unint64_t v10 = *(void **)(v32 + 88);
    uint64_t v13 = *(void *)(v32 + 96);
    uint64_t v12 = *(void *)(v32 + 104);
    char v14 = *(unsigned char *)(v32 + 112);
    long long v20 = *(_OWORD *)(v32 + 40);
    swift_bridgeObjectRetain();
    uint64_t v15 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t v11 = (void *)BDSCloudAssetTypeStoreEbook;
    unint64_t v10 = (void *)BDSLibraryContentAssetTypeUnknown;
    unint64_t v9 = 0x80000001000A5050;
    long long v20 = 0u;
    unint64_t v8 = 0xD000000000000023;
    char v7 = 1;
  }
  id v16 = v11;
  id v17 = v10;
  uint64_t v21 = v15;
  long long v22 = v20;
  char v23 = v7;
  unint64_t v24 = v8;
  unint64_t v25 = v9;
  uint64_t v26 = v11;
  id v27 = v17;
  uint64_t v28 = v13;
  uint64_t v29 = v12;
  char v30 = v14;
  sub_10001308C((uint64_t)v31);
  sub_1000085CC((uint64_t)&v21, a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1000130D8((uint64_t)v31);
}

uint64_t sub_1000853C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CCAD0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BackgroundView();
  __chkstk_darwin(v7);
  unint64_t v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (void *)(a1 + *(int *)(type metadata accessor for LargeWidgetView() + 20));
  uint64_t v11 = *(void *)(v10[6] + 16);
  if (!v11)
  {
LABEL_25:
    *unint64_t v9 = swift_getKeyPath();
    sub_100004FDC(&qword_1000CCAD8);
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)v9 + *(int *)(v7 + 20)) = 0;
    sub_100085C6C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BackgroundView);
    swift_storeEnumTagMultiPayload();
    sub_100086118(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
    goto LABEL_30;
  }
  uint64_t v42 = v4;
  uint64_t v43 = v7;
  uint64_t v44 = v9;
  char v45 = v6;
  uint64_t v46 = a2;
  unint64_t v12 = v10[9];
  uint64_t v50 = v10[8];
  uint64_t v40 = v10;
  uint64_t v13 = (void *)BDSLibraryContentAssetTypeAudiobook;
  uint64_t v47 = BDSCloudAssetTypeStoreAudiobook;
  uint64_t v41 = swift_bridgeObjectRetain();
  char v14 = (uint64_t *)(v41 + 64);
  unint64_t v48 = v12;
  uint64_t v49 = v13;
  while (1)
  {
    uint64_t v15 = *(v14 - 3);
    uint64_t v16 = v14[1];
    uint64_t v51 = *v14;
    uint64_t v18 = (void *)v14[2];
    id v17 = (void *)v14[3];
    uint64_t v52 = v14[5];
    uint64_t v53 = v15;
    uint64_t v19 = sub_1000A4340();
    uint64_t v21 = v20;
    if (v19 == sub_1000A4340() && v21 == v22) {
      char v24 = 1;
    }
    else {
      char v24 = sub_1000A46A0();
    }
    swift_bridgeObjectRetain();
    id v25 = v17;
    id v26 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v18;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_16;
    }
    if (!v18) {
      goto LABEL_3;
    }
    uint64_t v28 = sub_1000A4340();
    uint64_t v30 = v29;
    if (v28 == sub_1000A4340() && v30 == v31)
    {
      swift_bridgeObjectRelease_n();
LABEL_16:
      unint64_t v32 = v48;
      if (!v48) {
        goto LABEL_3;
      }
      goto LABEL_17;
    }
    char v34 = sub_1000A46A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v32 = v48;
    if ((v34 & 1) == 0 || !v48)
    {
LABEL_3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_17:
    if (v51 == v50 && v32 == v16) {
      break;
    }
    char v33 = sub_1000A46A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_27;
    }
LABEL_4:
    v14 += 11;
    --v11;
    uint64_t v13 = v49;
    if (!v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v45;
      uint64_t v7 = v43;
      unint64_t v9 = v44;
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v35 = qword_1000CC680;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  unint64_t v9 = v44;
  uint64_t v36 = (uint64_t)v45;
  uint64_t v37 = v43;
  if (v35 != -1) {
    swift_once();
  }
  sub_10000A284(qword_1000D8058, qword_1000D8070);
  id v38 = sub_10005402C(v50, v32, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *unint64_t v9 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v9 + *(int *)(v37 + 20)) = (uint64_t)v38;
  sub_100085C6C((uint64_t)v9, v36, (uint64_t (*)(void))type metadata accessor for BackgroundView);
  swift_storeEnumTagMultiPayload();
  sub_100086118(&qword_1000CCAB8, (void (*)(uint64_t))type metadata accessor for BackgroundView);
LABEL_30:
  sub_1000A3C00();
  return sub_100086224((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BackgroundView);
}

uint64_t sub_100085920@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_100085C6C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LargeWidgetView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_100085BFC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for LargeWidgetView);
  *a2 = sub_100085B68;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_100085A34()
{
  uint64_t v1 = *(void *)(type metadata accessor for LargeWidgetView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  sub_100004FDC(&qword_1000CC9C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000A38E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100085B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LargeWidgetView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100082870(v4, a1);
}

uint64_t sub_100085BF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000853C0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100085BFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100085C6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100085CD4()
{
  unint64_t result = qword_1000CF7D0;
  if (!qword_1000CF7D0)
  {
    sub_100008B14(&qword_1000CF7B8);
    sub_10000B17C(&qword_1000CF7D8, &qword_1000CF7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF7D0);
  }
  return result;
}

uint64_t sub_100085D74(uint64_t result)
{
  *(unsigned char *)(result + 168) = 0;
  return result;
}

unint64_t sub_100085D7C()
{
  unint64_t result = qword_1000CF838;
  if (!qword_1000CF838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF838);
  }
  return result;
}

unint64_t sub_100085DD0()
{
  unint64_t result = qword_1000CF840;
  if (!qword_1000CF840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF840);
  }
  return result;
}

uint64_t sub_100085E24(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100085EAC()
{
  return sub_100085E24(&qword_1000CF860, &qword_1000CF820, (void (*)(void))sub_100085EE8, (void (*)(void))sub_100085F3C);
}

unint64_t sub_100085EE8()
{
  unint64_t result = qword_1000CF868;
  if (!qword_1000CF868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF868);
  }
  return result;
}

unint64_t sub_100085F3C()
{
  unint64_t result = qword_1000CF870;
  if (!qword_1000CF870)
  {
    sub_100008B14(&qword_1000CF810);
    sub_10000B17C(&qword_1000CF878, &qword_1000CF808);
    sub_100086118((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF870);
  }
  return result;
}

unint64_t sub_10008600C()
{
  unint64_t result = qword_1000CF880;
  if (!qword_1000CF880)
  {
    sub_100008B14(&qword_1000CF7F0);
    type metadata accessor for LargeEmptyStateView();
    sub_100086118(&qword_1000CF888, (void (*)(uint64_t))type metadata accessor for LargeEmptyStateView);
    swift_getOpaqueTypeConformance2();
    sub_100086118((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CF880);
  }
  return result;
}

uint64_t sub_100086118(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100086160(uint64_t a1)
{
  return a1;
}

void *sub_1000861D8@<X0>(void *a1@<X8>)
{
  sub_100085028((uint64_t)v3);
  return memcpy(a1, v3, 0x110uLL);
}

uint64_t sub_100086224(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100086284(uint64_t result)
{
  *(unsigned char *)(result + 168) = 1;
  return result;
}

uint64_t sub_100086290(uint64_t a1)
{
  return a1;
}

uint64_t sub_100086308()
{
  return sub_10000B17C(&qword_1000CF890, &qword_1000CF898);
}

uint64_t *sub_100086344(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000A38E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(_DWORD *)((char *)v4 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000864A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_release();
}

uint64_t sub_10008656C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100086680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1000867B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1000868BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1000869D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000869EC);
}

uint64_t sub_1000869EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A38E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000A4090();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100086B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100086B14);
}

uint64_t sub_100086B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000A38E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1000A4090();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for EmptyStateView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CF8F8);
}

uint64_t sub_100086C44()
{
  uint64_t result = sub_1000A38E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000A4090();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100086D3C(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_100011214(*(void *)a2, v8, v9, v10, v11);
    *uint64_t v4 = v7;
    v4[1] = v8;
    v4[2] = v9;
    v4[3] = v10;
    *((unsigned char *)v4 + 32) = v11;
    uint64_t v12 = a3[5];
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)v4 + v17);
    uint64_t v20 = (void *)(a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (uint64_t *)((char *)v4 + v18);
    char v23 = (void *)(a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    void v22[2] = v23[2];
    uint64_t v25 = a3[8];
    id v26 = (char *)v4 + v25;
    uint64_t v27 = a2 + v25;
    uint64_t v28 = sub_1000A38E0();
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
    uint64_t v30 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v31 = v30[5];
    unint64_t v32 = &v26[v31];
    uint64_t v33 = v27 + v31;
    uint64_t v34 = sub_1000A4090();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    *(void *)&v26[v30[6]] = *(void *)(v27 + v30[6]);
    *(void *)&v26[v30[7]] = *(void *)(v27 + v30[7]);
    *(_DWORD *)&v26[v30[8]] = *(_DWORD *)(v27 + v30[8]);
    *(void *)&v26[v30[9]] = *(void *)(v27 + v30[9]);
    *(void *)&v26[v30[10]] = *(void *)(v27 + v30[10]);
    *(void *)&v26[v30[11]] = *(void *)(v27 + v30[11]);
    *(void *)&v26[v30[12]] = *(void *)(v27 + v30[12]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100086FC8(uint64_t a1, uint64_t a2)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + *(int *)(type metadata accessor for EmptyStateView.ViewConfiguration(0) + 20);
  uint64_t v9 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_100087144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = a3[5];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  void v20[2] = v21[2];
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1000A38E0();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  uint64_t v28 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = v24 + v29;
  uint64_t v31 = v25 + v29;
  uint64_t v32 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  *(void *)(v24 + v28[6]) = *(void *)(v25 + v28[6]);
  *(void *)(v24 + v28[7]) = *(void *)(v25 + v28[7]);
  *(_DWORD *)(v24 + v28[8]) = *(_DWORD *)(v25 + v28[8]);
  *(void *)(v24 + v28[9]) = *(void *)(v25 + v28[9]);
  *(void *)(v24 + v28[10]) = *(void *)(v25 + v28[10]);
  *(void *)(v24 + v28[11]) = *(void *)(v25 + v28[11]);
  *(void *)(v24 + v28[12]) = *(void *)(v25 + v28[12]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100087384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_10000A4F8(v11, v12, v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[5];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_10000A9C0(a1 + v16, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  *uint64_t v24 = *(void *)(a2 + v23);
  v24[1] = *(void *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24[2] = *(void *)(v25 + 16);
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = v27 + v31;
  uint64_t v33 = v28 + v31;
  uint64_t v34 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  *(void *)(v27 + v30[6]) = *(void *)(v28 + v30[6]);
  swift_retain();
  swift_release();
  *(void *)(v27 + v30[7]) = *(void *)(v28 + v30[7]);
  *(_DWORD *)(v27 + v30[8]) = *(_DWORD *)(v28 + v30[8]);
  *(void *)(v27 + v30[9]) = *(void *)(v28 + v30[9]);
  swift_retain();
  swift_release();
  *(void *)(v27 + v30[10]) = *(void *)(v28 + v30[10]);
  *(void *)(v27 + v30[11]) = *(void *)(v28 + v30[11]);
  *(void *)(v27 + v30[12]) = *(void *)(v28 + v30[12]);
  return a1;
}

uint64_t sub_100087620(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000A4130();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = v16 + v20;
  uint64_t v22 = v17 + v20;
  uint64_t v23 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)(v16 + v19[6]) = *(void *)(v17 + v19[6]);
  *(void *)(v16 + v19[7]) = *(void *)(v17 + v19[7]);
  *(_DWORD *)(v16 + v19[8]) = *(_DWORD *)(v17 + v19[8]);
  *(void *)(v16 + v19[9]) = *(void *)(v17 + v19[9]);
  *(void *)(v16 + v19[10]) = *(void *)(v17 + v19[10]);
  *(void *)(v16 + v19[11]) = *(void *)(v17 + v19[11]);
  *(void *)(v16 + v19[12]) = *(void *)(v17 + v19[12]);
  return a1;
}

uint64_t sub_100087820(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_10000A4F8(v7, v8, v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v13 = a3[5];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_10000A9C0(a1 + v13, &qword_1000CCAD8);
    uint64_t v16 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000A4130();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a2 + v23 + 8);
  *uint64_t v24 = *(void *)(a2 + v23);
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v24[2] = *(void *)(v25 + 16);
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = v28 + v32;
  uint64_t v34 = v29 + v32;
  uint64_t v35 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  *(void *)(v28 + v31[6]) = *(void *)(v29 + v31[6]);
  swift_release();
  *(void *)(v28 + v31[7]) = *(void *)(v29 + v31[7]);
  *(_DWORD *)(v28 + v31[8]) = *(_DWORD *)(v29 + v31[8]);
  *(void *)(v28 + v31[9]) = *(void *)(v29 + v31[9]);
  swift_release();
  *(void *)(v28 + v31[10]) = *(void *)(v29 + v31[10]);
  *(void *)(v28 + v31[11]) = *(void *)(v29 + v31[11]);
  *(void *)(v28 + v31[12]) = *(void *)(v29 + v31[12]);
  return a1;
}

uint64_t sub_100087A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100087A8C);
}

uint64_t sub_100087A8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[8];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_100087BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100087BD8);
}

uint64_t sub_100087BD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[8];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t type metadata accessor for EmptyStateView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CF9A8);
}

void sub_100087D30()
{
  sub_10002B5D8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for EmptyStateView.ViewConfiguration(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100087E1C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmptyStateView.SubLabelInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for EmptyStateView.SubLabelInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for EmptyStateView.SubLabelInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyStateView.SubLabelInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyStateView.SubLabelInfo()
{
  return &type metadata for EmptyStateView.SubLabelInfo;
}

uint64_t sub_100087F84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100087FA0@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v2 = type metadata accessor for EmptyStateView(0);
  uint64_t v37 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v38 = v3;
  uint64_t v39 = (uint64_t)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A4130();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v33 - v9;
  uint64_t v11 = sub_1000A4090();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v36 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[1] = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v34 = v2;
  uint64_t v41 = v1;
  sub_100009D80((uint64_t)v10);
  sub_1000A4120();
  LOBYTE(v2) = sub_1000A40F0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  uint64_t v35 = v11;
  if (v2)
  {
    uint64_t v18 = v41 + *(int *)(v34 + 32);
    uint64_t v19 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v16, v18 + *(int *)(v19 + 20), v11);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, enum case for BlendMode.normal(_:), v11);
  }
  sub_100009D80((uint64_t)v10);
  sub_1000A4120();
  char v20 = sub_1000A40F0();
  v17(v8, v4);
  v17(v10, v4);
  if (v20)
  {
    uint64_t v21 = v41;
    uint64_t v22 = v41 + *(int *)(v34 + 32);
    int v23 = *(_DWORD *)(v22 + *(int *)(type metadata accessor for EmptyStateView.ViewConfiguration(0) + 32));
  }
  else
  {
    int v23 = sub_1000A3C30();
    uint64_t v21 = v41;
  }
  uint64_t v24 = v35;
  uint64_t v25 = v39;
  sub_100089870(v21, v39, type metadata accessor for EmptyStateView);
  uint64_t v26 = v36;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v36, v16, v24);
  unint64_t v27 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v38 + v27 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v29 = (*(unsigned __int8 *)(v12 + 80) + v28 + 4) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v30 = swift_allocObject();
  sub_100089710(v25, v30 + v27);
  *(_DWORD *)(v30 + v28) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v30 + v29, v26, v24);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v24);
  uint64_t v32 = v40;
  *uint64_t v40 = sub_100089774;
  v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v30;
  return result;
}

uint64_t sub_1000883E0@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_100004FDC(&qword_1000CF9F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_1000A3B60();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v11 = sub_100004FDC(&qword_1000CF9F8);
  sub_10008857C(a1, a2, a3, (uint64_t)&v10[*(int *)(v11 + 44)]);
  long long v12 = *(_OWORD *)(a1 + 16);
  v22[0] = *(_OWORD *)a1;
  v22[1] = v12;
  char v23 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v22, (uint64_t)v24, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v24, (void (*)(void, void, void, void, void))sub_100011214);
  double v13 = sub_100009B60();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_100012D8C((uint64_t)v22, (void (*)(void, void, void, void, void))sub_10000A4F8);
  LOBYTE(a3) = sub_1000A3D10();
  sub_10000B1C0((uint64_t)v10, a4, &qword_1000CF9F0);
  uint64_t v20 = a4 + *(int *)(sub_100004FDC(&qword_1000CFA00) + 36);
  *(unsigned char *)uint64_t v20 = a3;
  *(double *)(v20 + 8) = v13;
  *(void *)(v20 + 16) = v15;
  *(void *)(v20 + 24) = v17;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  return sub_10000A9C0((uint64_t)v10, &qword_1000CF9F0);
}

uint64_t sub_10008857C@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v66 = a3;
  int v65 = a2;
  uint64_t v67 = a4;
  uint64_t v5 = sub_100004FDC(&qword_1000CFA08);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v64 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v63 = (uint64_t *)((char *)&v50 - v8);
  uint64_t v60 = sub_100004FDC(&qword_1000CD8F0) - 8;
  __chkstk_darwin(v60);
  uint64_t v58 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000A3A10() - 8;
  __chkstk_darwin(v55);
  uint64_t v11 = (uint64_t *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = sub_100004FDC(&qword_1000CFA10) - 8;
  __chkstk_darwin(v56);
  double v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FDC(&qword_1000CFA18) - 8;
  uint64_t v14 = __chkstk_darwin(v62);
  uint64_t v59 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t)&v50 - v16;
  sub_1000A3920();
  long long v17 = *(_OWORD *)(a1 + 16);
  v74[0] = *(_OWORD *)a1;
  v74[1] = v17;
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v57 = a1;
  char v75 = v18;
  sub_10000A95C((uint64_t)v74, (uint64_t)v76, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v76, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v74, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_100012D8C((uint64_t)v76, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v74, (void (*)(void, void, void, void, void))sub_10000A4F8);
  uint64_t v19 = a1 + *(int *)(type metadata accessor for EmptyStateView(0) + 32);
  uint64_t v20 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
  sub_1000A3920();
  sub_100012D8C((uint64_t)v76, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v74, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_100012D8C((uint64_t)v76, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v74, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v21 = v68;
  char v22 = v69;
  uint64_t v54 = v70;
  int v53 = v71;
  uint64_t v52 = v72;
  uint64_t v51 = v73;
  uint64_t v23 = *(void *)(v19 + *(int *)(v20 + 36));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = *(void *)(v19 + *(int *)(v20 + 44));
  uint64_t v26 = (char *)v11 + *(int *)(v55 + 28);
  uint64_t v27 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v28 = sub_1000A3B70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  void *v11 = v25;
  v11[1] = v25;
  uint64_t v29 = v58;
  sub_100089870((uint64_t)v11, v58, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v29 + *(int *)(v60 + 44)) = 256;
  sub_10000B1C0(v29, (uint64_t)&v13[*(int *)(v56 + 44)], &qword_1000CD8F0);
  *(void *)double v13 = v21;
  v13[8] = v22;
  *((void *)v13 + 2) = v54;
  v13[24] = v53;
  uint64_t v30 = v51;
  *((void *)v13 + 4) = v52;
  *((void *)v13 + 5) = v30;
  *((void *)v13 + 6) = KeyPath;
  *((void *)v13 + 7) = v23;
  swift_retain_n();
  swift_retain();
  sub_10000A9C0(v29, &qword_1000CD8F0);
  sub_10002C8C0((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  swift_release();
  LOBYTE(v26) = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v39 = v59;
  sub_10000B1C0((uint64_t)v13, v59, &qword_1000CFA10);
  uint64_t v40 = v39 + *(int *)(v62 + 44);
  *(unsigned char *)uint64_t v40 = (_BYTE)v26;
  *(void *)(v40 + 8) = v32;
  *(void *)(v40 + 16) = v34;
  *(void *)(v40 + 24) = v36;
  *(void *)(v40 + 32) = v38;
  *(unsigned char *)(v40 + 40) = 0;
  sub_10000A9C0((uint64_t)v13, &qword_1000CFA10);
  uint64_t v41 = v61;
  sub_10000A95C(v39, v61, &qword_1000CFA18);
  uint64_t v42 = sub_1000A3BB0();
  uint64_t v43 = (uint64_t)v63;
  *uint64_t v63 = v42;
  *(void *)(v43 + 8) = 0;
  *(unsigned char *)(v43 + 16) = 0;
  uint64_t v44 = sub_100004FDC(&qword_1000CFA20);
  sub_100088C54(v57, v65, v66, v43 + *(int *)(v44 + 44));
  sub_10000B1C0(v41, v39, &qword_1000CFA18);
  uint64_t v45 = v64;
  sub_10000B1C0(v43, v64, &qword_1000CFA08);
  uint64_t v46 = v67;
  sub_10000B1C0(v39, v67, &qword_1000CFA18);
  uint64_t v47 = sub_100004FDC(&qword_1000CFA28);
  sub_10000B1C0(v45, v46 + *(int *)(v47 + 48), &qword_1000CFA08);
  uint64_t v48 = v46 + *(int *)(v47 + 64);
  *(void *)uint64_t v48 = 0;
  *(unsigned char *)(v48 + 8) = 1;
  sub_10000A9C0(v43, &qword_1000CFA08);
  sub_10000A9C0(v41, &qword_1000CFA18);
  sub_10000A9C0(v45, &qword_1000CFA08);
  return sub_10000A9C0(v39, &qword_1000CFA18);
}

uint64_t sub_100088C54@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v114 = a3;
  int v113 = a2;
  uint64_t v109 = a4;
  uint64_t v101 = sub_100004FDC(&qword_1000CFA30);
  __chkstk_darwin(v101);
  uint64_t v102 = (uint64_t)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000CFA38);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v108 = (uint64_t)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v107 = (char *)v96 - v9;
  uint64_t v10 = sub_1000A3A20();
  __chkstk_darwin(v10 - 8);
  uint64_t v112 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100004FDC(&qword_1000CEDA8);
  __chkstk_darwin(v111);
  double v13 = (char *)v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100004FDC(&qword_1000CED98) - 8;
  uint64_t v14 = __chkstk_darwin(v105);
  uint64_t v106 = (uint64_t)v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v115 = (uint64_t)v96 - v16;
  uint64_t v17 = type metadata accessor for EmptyStateView(0);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v19 = v17;
  uint64_t v103 = (void (*)(char *, uint64_t, uint64_t))v17;
  uint64_t v104 = a1;
  uint64_t v20 = (uint64_t *)(a1 + v18);
  uint64_t v21 = v20[1];
  uint64_t v116 = *v20;
  uint64_t v117 = v21;
  unint64_t v22 = sub_10000A504();
  swift_bridgeObjectRetain();
  unint64_t v100 = v22;
  uint64_t v23 = sub_1000A3E50();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  uint64_t v28 = a1 + *(int *)(v19 + 32);
  uint64_t v99 = *(int *)(type metadata accessor for EmptyStateView.ViewConfiguration(0) + 24);
  uint64_t v110 = v28;
  sub_1000A3DD0();
  uint64_t v29 = sub_1000A3E40();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  LOBYTE(v19) = v33 & 1;
  sub_100017510(v23, v25, v27);
  swift_bridgeObjectRelease();
  LODWORD(v116) = v113;
  uint64_t v34 = sub_1000A3E30();
  uint64_t v36 = v35;
  char v38 = v37;
  uint64_t v40 = v39;
  sub_100017510(v29, v31, v19);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1000A4090();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v44 = (uint64_t)v112;
  uint64_t v98 = v41;
  uint64_t v97 = v43;
  v96[1] = v42 + 16;
  ((void (*)(char *, uint64_t))v43)(v112, v114);
  sub_100089870(v44, (uint64_t)&v13[*(int *)(v111 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)double v13 = v34;
  *((void *)v13 + 1) = v36;
  v13[16] = v38 & 1;
  *((void *)v13 + 3) = v40;
  sub_10002C8C0(v44, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v115;
  uint64_t v47 = (uint64_t *)(v115 + *(int *)(v105 + 44));
  uint64_t v48 = sub_100004FDC(&qword_1000CCAC0);
  uint64_t v49 = (char *)v47 + *(int *)(v48 + 28);
  uint64_t v50 = sub_1000A38E0();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(void (**)(char *))(v51 + 16);
  unint64_t v53 = v51 + 16;
  v52(v49);
  *uint64_t v47 = KeyPath;
  sub_10000A95C((uint64_t)v13, v46, &qword_1000CEDA8);
  uint64_t v54 = (uint64_t *)(v104 + *((int *)v103 + 7));
  uint64_t v55 = v54[1];
  if (v55)
  {
    uint64_t v116 = *v54;
    uint64_t v117 = v55;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1000A3E50();
    uint64_t v58 = v57;
    uint64_t v104 = v48;
    uint64_t v105 = v50;
    char v60 = v59 & 1;
    uint64_t v61 = sub_1000A3E40();
    uint64_t v103 = (void (*)(char *, uint64_t, uint64_t))v52;
    uint64_t v62 = v61;
    unint64_t v100 = v53;
    uint64_t v64 = v63;
    char v66 = v65 & 1;
    sub_100017510(v56, v58, v60);
    swift_bridgeObjectRelease();
    LODWORD(v116) = v113;
    uint64_t v67 = sub_1000A3E30();
    uint64_t v69 = v68;
    char v71 = v70;
    uint64_t v73 = v72;
    sub_100017510(v62, v64, v66);
    swift_bridgeObjectRelease();
    uint64_t v74 = (uint64_t)v112;
    v97(v112, v114, v98);
    sub_100089870(v74, (uint64_t)&v13[*(int *)(v111 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    *(void *)double v13 = v67;
    *((void *)v13 + 1) = v69;
    v13[16] = v71 & 1;
    *((void *)v13 + 3) = v73;
    sub_10002C8C0(v74, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    LOBYTE(v67) = sub_1000A3D20();
    sub_1000A38C0();
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v83 = v102;
    sub_10000B1C0((uint64_t)v13, v102, &qword_1000CEDA8);
    uint64_t v84 = v83 + *(int *)(v101 + 36);
    *(unsigned char *)uint64_t v84 = v67;
    *(void *)(v84 + 8) = v76;
    *(void *)(v84 + 16) = v78;
    *(void *)(v84 + 24) = v80;
    *(void *)(v84 + 32) = v82;
    *(unsigned char *)(v84 + 40) = 0;
    sub_10000A9C0((uint64_t)v13, &qword_1000CEDA8);
    uint64_t v85 = swift_getKeyPath();
    uint64_t v86 = sub_100004FDC(&qword_1000CFA40);
    uint64_t v87 = (uint64_t)v107;
    long long v88 = (uint64_t *)&v107[*(int *)(v86 + 36)];
    v103((char *)v88 + *(int *)(v104 + 28), v110, v105);
    *long long v88 = v85;
    sub_10000A95C(v83, v87, &qword_1000CFA30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v87, 0, 1, v86);
  }
  else
  {
    uint64_t v89 = sub_100004FDC(&qword_1000CFA40);
    uint64_t v87 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v107, 1, 1, v89);
  }
  uint64_t v90 = v115;
  uint64_t v91 = v106;
  sub_10000B1C0(v115, v106, &qword_1000CED98);
  uint64_t v92 = v108;
  sub_10000B1C0(v87, v108, &qword_1000CFA38);
  uint64_t v93 = v109;
  sub_10000B1C0(v91, v109, &qword_1000CED98);
  uint64_t v94 = sub_100004FDC(&qword_1000CFA48);
  sub_10000B1C0(v92, v93 + *(int *)(v94 + 48), &qword_1000CFA38);
  sub_10000A9C0(v87, &qword_1000CFA38);
  sub_10000A9C0(v90, &qword_1000CED98);
  sub_10000A9C0(v92, &qword_1000CFA38);
  return sub_10000A9C0(v91, &qword_1000CED98);
}

uint64_t sub_1000894A0()
{
  uint64_t v1 = type metadata accessor for EmptyStateView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v19 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1000A4090();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = v0 + v3;
  sub_10000A4F8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + v3 + 24), *(unsigned char *)(v0 + v3 + 32));
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 20);
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v2 | v6 | 7;
  unint64_t v12 = (((v19 + v3 + 3) & 0xFFFFFFFFFFFFFFFCLL) + v6 + 4) & ~v6;
  uint64_t v13 = v12 + v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + *(int *)(v1 + 32);
  uint64_t v15 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v17(v14 + *(int *)(v16 + 20), v4);
  swift_release();
  swift_release();
  v17(v0 + v12, v4);

  return _swift_deallocObject(v0, v13, v11);
}

uint64_t sub_100089710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmptyStateView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100089774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for EmptyStateView(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v6 = *(void *)(sub_1000A4090() - 8);
  int v7 = *(_DWORD *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1000883E0(v1 + v4, v7, v8, a1);
}

uint64_t sub_100089870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000898E4()
{
  unint64_t result = qword_1000CFA50;
  if (!qword_1000CFA50)
  {
    sub_100008B14(&qword_1000CFA58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFA50);
  }
  return result;
}

uint64_t sub_100089944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1000A4740();
    sub_1000A4370();
    Swift::Int v6 = sub_1000A4780();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1000A46A0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1000A46A0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100089A7C()
{
  uint64_t result = sub_100089A9C();
  qword_1000CFA60 = result;
  return result;
}

uint64_t sub_100089A9C()
{
  sub_100004FDC(&qword_1000CFA70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A8E80;
  uint64_t result = kCTFontUIFontDesignTrait;
  if (kCTFontUIFontDesignTrait)
  {
    *(void *)(inited + 32) = sub_1000A4340();
    *(void *)(inited + 40) = v2;
    uint64_t result = kCTFontUIFontDesignSerif;
    if (kCTFontUIFontDesignSerif)
    {
      *(void *)(inited + 48) = sub_1000A4340();
      *(void *)(inited + 56) = v3;
      unint64_t v4 = sub_10007D8A4(inited);
      sub_100004FDC(&qword_1000CFA78);
      uint64_t v5 = swift_initStackObject();
      *(_OWORD *)(v5 + 16) = xmmword_1000A8E80;
      *(void *)(v5 + 32) = sub_1000A4340();
      *(void *)(v5 + 40) = v6;
      *(void *)(v5 + 48) = v4;
      sub_10007D9C8(v5);
      sub_100004FDC(&qword_1000CFA80);
      CFDictionaryRef isa = sub_1000A4230().super.isa;
      swift_bridgeObjectRelease();
      unint64_t v8 = CTFontDescriptorCreateWithAttributes(isa);

      uint64_t v9 = CTFontCreateWithFontDescriptor(v8, 14.0, 0);
      CFArrayRef v10 = CTFontCopySupportedLanguages(v9);
      sub_1000A43C0();

      uint64_t v11 = sub_10008A8E4((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static Font.Design.serifIfSupported.getter@<X0>(uint64_t a1@<X8>)
{
  if (_s20BooksWidgetExtension16FallBackFontSpecV03usedeF0SbyFZ_0())
  {
    uint64_t v2 = sub_1000A3D80();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
    uint64_t v4 = v2;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v7 = enum case for Font.Design.serif (_:);
    uint64_t v8 = sub_1000A3D80();
    uint64_t v10 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a1, v7, v8);
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v4 = v8;
  }

  return v3(v5, v6, 1, v4);
}

uint64_t static Font.Design.defaultIfUnsupported.getter@<X0>(uint64_t a1@<X8>)
{
  if (_s20BooksWidgetExtension16FallBackFontSpecV03usedeF0SbyFZ_0())
  {
    uint64_t v2 = enum case for Font.Design.default(_:);
    uint64_t v3 = sub_1000A3D80();
    uint64_t v10 = *(void *)(v3 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a1, v2, v3);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v8 = sub_1000A3D80();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v7 = v8;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }

  return v4(v5, v6, 1, v7);
}

uint64_t sub_100089E54(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1000A4740();
  swift_bridgeObjectRetain();
  sub_1000A4370();
  Swift::Int v8 = sub_1000A4780();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    BOOL v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1000A46A0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1000A46A0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10008A2E4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10008A004()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004FDC(&qword_1000CFA88);
  uint64_t v3 = sub_1000A45D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1000A4740();
      sub_1000A4370();
      uint64_t result = sub_1000A4780();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_10008A2E4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10008A004();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_10008A480();
      goto LABEL_22;
    }
    sub_10008A634();
  }
  uint64_t v11 = *v4;
  sub_1000A4740();
  sub_1000A4370();
  uint64_t result = sub_1000A4780();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1000A46A0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1000A46D0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1000A46A0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_10008A480()
{
  uint64_t v1 = v0;
  sub_100004FDC(&qword_1000CFA88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000A45C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10008A634()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004FDC(&qword_1000CFA88);
  uint64_t v3 = sub_1000A45D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1000A4740();
    swift_bridgeObjectRetain();
    sub_1000A4370();
    uint64_t result = sub_1000A4780();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10008A8E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1000A4480();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100089E54(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t _s20BooksWidgetExtension16FallBackFontSpecV03usedeF0SbyFZ_0()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CFA68);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000A35F0();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3590();
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000A35B0();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self standardUserDefaults];
  NSString v13 = sub_1000A4300();
  unsigned __int8 v14 = [v12 BOOLForKey:v13];

  if (v14)
  {
    char v15 = 1;
  }
  else
  {
    id v16 = [self mainBundle];
    id v17 = [v16 preferredLocalizations];

    uint64_t v18 = sub_1000A43D0();
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1000A3580();
      sub_1000A3570();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
      sub_1000A35E0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
      uint64_t v19 = v27;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v2, 1, v9) == 1)
      {
        sub_10008ADA4((uint64_t)v2);
        char v15 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v11, v2, v9);
        if (qword_1000CC788 != -1) {
          swift_once();
        }
        uint64_t v20 = qword_1000CFA60;
        uint64_t v21 = sub_1000A35A0();
        LOBYTE(v20) = sub_100089944(v21, v22, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
        char v15 = v20 ^ 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      char v15 = 1;
    }
  }
  return v15 & 1;
}

ValueMetadata *type metadata accessor for FallBackFontSpec()
{
  return &type metadata for FallBackFontSpec;
}

uint64_t sub_10008ADA4(uint64_t a1)
{
  uint64_t v2 = sub_100004FDC(&qword_1000CFA68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for GradientOverlayView()
{
  return &type metadata for GradientOverlayView;
}

uint64_t sub_10008AE14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008AE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000A3A20();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A4090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004FDC(&qword_1000CE878);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000A8D50;
  if (qword_1000CC790 != -1) {
    swift_once();
  }
  *(void *)(v9 + 32) = qword_1000CFA90;
  uint64_t v10 = qword_1000CC798;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  *(void *)(v9 + 40) = qword_1000CFA98;
  *(void *)&v15[0] = v9;
  sub_1000A43E0();
  swift_retain();
  sub_1000A40A0();
  sub_1000A40B0();
  sub_1000A4060();
  sub_1000A3940();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for BlendMode.multiply(_:), v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  uint64_t v11 = sub_100004FDC(&qword_1000CFAA0);
  sub_100065708((uint64_t)v4, a1 + *(int *)(v11 + 36));
  long long v12 = v15[1];
  *(_OWORD *)a1 = v15[0];
  *(_OWORD *)(a1 + 16) = v12;
  *(void *)(a1 + 32) = v16;
  swift_bridgeObjectRetain();
  sub_10006576C((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_10008B154((uint64_t)v15);
}

uint64_t sub_10008B0D8(uint64_t a1)
{
  return sub_10008B0FC(a1, &qword_1000CFA90);
}

uint64_t sub_10008B0E8(uint64_t a1)
{
  return sub_10008B0FC(a1, &qword_1000CFA98);
}

uint64_t sub_10008B0FC(uint64_t a1, uint64_t *a2)
{
  sub_1000A3F50();
  uint64_t v3 = sub_1000A3F80();
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_10008B154(uint64_t a1)
{
  return a1;
}

unint64_t sub_10008B184()
{
  unint64_t result = qword_1000CFAA8;
  if (!qword_1000CFAA8)
  {
    sub_100008B14(&qword_1000CFAA0);
    sub_10006FB24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFAA8);
  }
  return result;
}

void *sub_10008B200(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000A4090();
    long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)v4 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[10];
    char v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    id v17 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      char v38 = v12;
      uint64_t v40 = v18;
      uint64_t v21 = v16[1];
      void *v15 = *v16;
      v15[1] = v21;
      uint64_t v22 = v17[12];
      uint64_t v39 = (char *)v15 + v22;
      unint64_t v23 = (char *)v16 + v22;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v39 = *(void *)v23;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v39 = *(_DWORD *)v23;
        uint64_t v24 = sub_100004FDC(&qword_1000CDDD0);
        v38(&v39[*(int *)(v24 + 48)], &v23[*(int *)(v24 + 48)], v11);
        uint64_t v25 = *(int *)(v24 + 64);
        uint64_t v26 = &v39[v25];
        uint64_t v27 = &v23[v25];
        uint64_t v28 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = v17[16];
      uint64_t v30 = (char *)v15 + v29;
      uint64_t v31 = (char *)v16 + v29;
      uint64_t v32 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      uint64_t v33 = v17[20];
      uint64_t v34 = (char *)v15 + v33;
      uint64_t v35 = (char *)v16 + v33;
      uint64_t v36 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      *(void *)((char *)v15 + v17[24]) = *(void *)((char *)v16 + v17[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v40 + 56))(v15, 0, 1, v17);
    }
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t sub_10008B57C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1000A4090();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + v8[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v11 = sub_100004FDC(&qword_1000CDDD0);
      v6(v10 + *(int *)(v11 + 48), v5);
      uint64_t v12 = v10 + *(int *)(v11 + 64);
      uint64_t v13 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v7 + v8[16];
    uint64_t v15 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v7 + v8[20];
    uint64_t v17 = sub_1000A3D80();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
    return v18(v16, v17);
  }
  return result;
}

void *sub_10008B7A0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000A4090();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v11;
    uint64_t v38 = v17;
    uint64_t v19 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v19;
    uint64_t v20 = v16[12];
    char v37 = (char *)v14 + v20;
    uint64_t v21 = (char *)v15 + v20;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)char v37 = *(void *)v21;
      swift_retain();
    }
    else
    {
      *(_DWORD *)char v37 = *(_DWORD *)v21;
      uint64_t v22 = sub_100004FDC(&qword_1000CDDD0);
      v36(&v37[*(int *)(v22 + 48)], &v21[*(int *)(v22 + 48)], v10);
      uint64_t v23 = *(int *)(v22 + 64);
      uint64_t v24 = &v37[v23];
      uint64_t v25 = &v21[v23];
      uint64_t v26 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v16[16];
    uint64_t v28 = (char *)v14 + v27;
    uint64_t v29 = (char *)v15 + v27;
    uint64_t v30 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = v16[20];
    uint64_t v32 = (char *)v14 + v31;
    uint64_t v33 = (char *)v15 + v31;
    uint64_t v34 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    *(void *)((char *)v14 + v16[24]) = *(void *)((char *)v15 + v16[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v38 + 56))(v14, 0, 1, v16);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_10008BACC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v52 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v52 + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  unint64_t v53 = a3;
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      void *v11 = *v12;
      v11[1] = v12[1];
      uint64_t v18 = v13[12];
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v20 = (char *)v12 + v18;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v19 = *(void *)v20;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
        uint64_t v25 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(&v19[*(int *)(v25 + 48)], &v20[*(int *)(v25 + 48)], v9);
        uint64_t v26 = *(int *)(v25 + 64);
        uint64_t v27 = &v19[v26];
        uint64_t v28 = &v20[v26];
        uint64_t v29 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = v13[16];
      uint64_t v31 = (char *)v11 + v30;
      uint64_t v32 = (char *)v12 + v30;
      uint64_t v33 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v13[20];
      uint64_t v35 = (char *)v11 + v34;
      uint64_t v36 = (char *)v12 + v34;
      uint64_t v37 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      *(void *)((char *)v11 + v13[24]) = *(void *)((char *)v12 + v13[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v21 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_16;
  }
  if (v17)
  {
    sub_10000A9C0((uint64_t)v11, &qword_1000CCB90);
    goto LABEL_7;
  }
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v22 = v13[12];
    uint64_t v23 = (char *)v11 + v22;
    uint64_t v24 = (char *)v12 + v22;
    sub_10008F7B0((uint64_t)v11 + v22, type metadata accessor for CircularProgressView.ColorStyle);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v23 = *(void *)v24;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      uint64_t v38 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(&v23[*(int *)(v38 + 48)], &v24[*(int *)(v38 + 48)], v9);
      uint64_t v39 = *(int *)(v38 + 64);
      uint64_t v40 = &v23[v39];
      uint64_t v41 = &v24[v39];
      uint64_t v42 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v43 = v13[16];
  uint64_t v44 = (char *)v11 + v43;
  uint64_t v45 = (char *)v12 + v43;
  uint64_t v46 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = v13[20];
  uint64_t v48 = (char *)v11 + v47;
  uint64_t v49 = (char *)v12 + v47;
  uint64_t v50 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  *(void *)((char *)v11 + v13[24]) = *(void *)((char *)v12 + v13[24]);
LABEL_16:
  *((unsigned char *)a1 + v53[11]) = *((unsigned char *)a2 + v53[11]);
  return a1;
}

uint64_t sub_10008C024(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v35 = (void (*)(char *, char *, uint64_t))v10;
    uint64_t v36 = v16;
    *uint64_t v13 = *v14;
    uint64_t v18 = v15[12];
    __dst = (_DWORD *)((char *)v13 + v18);
    uint64_t v19 = (_DWORD *)((char *)v14 + v18);
    uint64_t v20 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(__dst, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      _DWORD *__dst = *v19;
      uint64_t v34 = sub_100004FDC(&qword_1000CDDD0);
      v35((char *)__dst + *(int *)(v34 + 48), (char *)v19 + *(int *)(v34 + 48), v9);
      uint64_t v21 = *(int *)(v34 + 64);
      uint64_t v22 = (char *)__dst + v21;
      uint64_t v23 = (char *)v19 + v21;
      uint64_t v24 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v25 = v15[16];
    uint64_t v26 = (char *)v13 + v25;
    uint64_t v27 = (char *)v14 + v25;
    uint64_t v28 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    uint64_t v29 = v15[20];
    uint64_t v30 = (char *)v13 + v29;
    uint64_t v31 = (char *)v14 + v29;
    uint64_t v32 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    *(void *)((char *)v13 + v15[24]) = *(void *)((char *)v14 + v15[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v36 + 56))(v13, 0, 1, v15);
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

void *sub_10008C348(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v58 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  char v60 = a3;
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v59 = *((void *)v14 - 1);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, int *))(v59 + 48);
  uint64_t v16 = v12;
  int v17 = v15(v12, 1, v14);
  uint64_t v18 = v13;
  int v19 = v15(v13, 1, v14);
  if (v17)
  {
    if (!v19)
    {
      uint64_t v20 = v16;
      *(_OWORD *)uint64_t v16 = *v18;
      uint64_t v21 = v14[12];
      uint64_t v22 = (_DWORD *)((char *)v16 + v21);
      uint64_t v23 = (_DWORD *)((char *)v18 + v21);
      uint64_t v24 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        *uint64_t v22 = *v23;
        uint64_t v31 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))((char *)v22 + *(int *)(v31 + 48), (char *)v23 + *(int *)(v31 + 48), v9);
        uint64_t v32 = *(int *)(v31 + 64);
        uint64_t v33 = (char *)v22 + v32;
        uint64_t v34 = (char *)v23 + v32;
        uint64_t v35 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v36 = v14[16];
      uint64_t v37 = (char *)v20 + v36;
      uint64_t v38 = (char *)v18 + v36;
      uint64_t v39 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      uint64_t v40 = v14[20];
      uint64_t v41 = (char *)v20 + v40;
      uint64_t v42 = (char *)v18 + v40;
      uint64_t v43 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      *(void *)((char *)v20 + v14[24]) = *(void *)((char *)v18 + v14[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v59 + 56))(v20, 0, 1, v14);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v25 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v16, v13, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_15;
  }
  if (v19)
  {
    sub_10000A9C0((uint64_t)v16, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v26 = v13[1];
  void *v16 = *v13;
  v16[1] = v26;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v27 = v14[12];
    uint64_t v28 = (_DWORD *)((char *)v16 + v27);
    uint64_t v29 = (_DWORD *)((char *)v18 + v27);
    sub_10008F7B0((uint64_t)v16 + v27, type metadata accessor for CircularProgressView.ColorStyle);
    uint64_t v30 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      _DWORD *v28 = *v29;
      uint64_t v44 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))((char *)v28 + *(int *)(v44 + 48), (char *)v29 + *(int *)(v44 + 48), v9);
      uint64_t v45 = *(int *)(v44 + 64);
      uint64_t v46 = (char *)v28 + v45;
      uint64_t v47 = (char *)v29 + v45;
      uint64_t v48 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v49 = v14[16];
  uint64_t v50 = (char *)v16 + v49;
  uint64_t v51 = (char *)v18 + v49;
  uint64_t v52 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
  uint64_t v53 = v14[20];
  uint64_t v54 = (char *)v16 + v53;
  uint64_t v55 = (char *)v18 + v53;
  uint64_t v56 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
  *(void *)((char *)v16 + v14[24]) = *(void *)((char *)v18 + v14[24]);
LABEL_15:
  *((unsigned char *)a1 + v60[11]) = *((unsigned char *)a2 + v60[11]);
  return a1;
}

uint64_t sub_10008C884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008C898);
}

uint64_t sub_10008C898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000A4090();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for CircularProgressView.Content(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10008C9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008C9D8);
}

uint64_t sub_10008C9D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000A4090();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for CircularProgressView.Content(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ReadingProgressIconView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CFB08);
}

uint64_t sub_10008CB24()
{
  uint64_t result = sub_1000A4090();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CircularProgressView.Content(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_10008CC18(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(v4 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000A4090();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
    uint64_t v13 = v6[10];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v37 = v12;
      uint64_t v39 = v17;
      uint64_t v20 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v20;
      uint64_t v21 = v16[12];
      uint64_t v38 = (char *)v14 + v21;
      uint64_t v22 = (char *)v15 + v21;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v38 = *(void *)v22;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v22;
        uint64_t v23 = sub_100004FDC(&qword_1000CDDD0);
        v37(&v38[*(int *)(v23 + 48)], &v22[*(int *)(v23 + 48)], v11);
        uint64_t v24 = *(int *)(v23 + 64);
        uint64_t v25 = &v38[v24];
        uint64_t v26 = &v22[v24];
        uint64_t v27 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = v16[16];
      uint64_t v29 = (char *)v14 + v28;
      uint64_t v30 = (char *)v15 + v28;
      uint64_t v31 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      uint64_t v32 = v16[20];
      uint64_t v33 = (char *)v14 + v32;
      uint64_t v34 = (char *)v15 + v32;
      uint64_t v35 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      *(void *)((char *)v14 + v16[24]) = *(void *)((char *)v15 + v16[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v39 + 56))(v14, 0, 1, v16);
    }
    *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  }
  return a1;
}

uint64_t sub_10008CFA0(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = sub_1000A4090();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + *(int *)(v2 + 40);
  uint64_t v7 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + v7[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v10 = sub_100004FDC(&qword_1000CDDD0);
      v5(v9 + *(int *)(v10 + 48), v4);
      uint64_t v11 = v9 + *(int *)(v10 + 64);
      uint64_t v12 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v6 + v7[16];
    uint64_t v14 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = v6 + v7[20];
    uint64_t v16 = sub_1000A3D80();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    return v17(v15, v16);
  }
  return result;
}

void *sub_10008D1CC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  int v5 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  swift_retain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
  uint64_t v11 = v5[10];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v34 = v10;
    uint64_t v36 = v15;
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v18 = v14[12];
    uint64_t v35 = (char *)v12 + v18;
    uint64_t v19 = (char *)v13 + v18;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v35 = *(void *)v19;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v19;
      uint64_t v20 = sub_100004FDC(&qword_1000CDDD0);
      v34(&v35[*(int *)(v20 + 48)], &v19[*(int *)(v20 + 48)], v9);
      uint64_t v21 = *(int *)(v20 + 64);
      uint64_t v22 = &v35[v21];
      uint64_t v23 = &v19[v21];
      uint64_t v24 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v14[16];
    uint64_t v26 = (char *)v12 + v25;
    uint64_t v27 = (char *)v13 + v25;
    uint64_t v28 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v14[20];
    uint64_t v30 = (char *)v12 + v29;
    uint64_t v31 = (char *)v13 + v29;
    uint64_t v32 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    *(void *)((char *)v12 + v14[24]) = *(void *)((char *)v13 + v14[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v36 + 56))(v12, 0, 1, v14);
  }
  *((unsigned char *)a1 + v5[11]) = *((unsigned char *)a2 + v5[11]);
  return a1;
}

void *sub_10008D504(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v5 = v4[7];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1000A4090();
  uint64_t v51 = *(void *)(v8 - 8);
  (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v6, v7, v8);
  *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
  *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
  uint64_t v52 = v4;
  uint64_t v9 = v4[10];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      void *v10 = *v11;
      v10[1] = v11[1];
      uint64_t v17 = v12[12];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v18 = *(void *)v19;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
        uint64_t v24 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(&v18[*(int *)(v24 + 48)], &v19[*(int *)(v24 + 48)], v8);
        uint64_t v25 = *(int *)(v24 + 64);
        uint64_t v26 = &v18[v25];
        uint64_t v27 = &v19[v25];
        uint64_t v28 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = v12[16];
      uint64_t v30 = (char *)v10 + v29;
      uint64_t v31 = (char *)v11 + v29;
      uint64_t v32 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      uint64_t v33 = v12[20];
      uint64_t v34 = (char *)v10 + v33;
      uint64_t v35 = (char *)v11 + v33;
      uint64_t v36 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      *(void *)((char *)v10 + v12[24]) = *(void *)((char *)v11 + v12[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v20 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v16)
  {
    sub_10000A9C0((uint64_t)v10, &qword_1000CCB90);
    goto LABEL_7;
  }
  void *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v21 = v12[12];
    uint64_t v22 = (char *)v10 + v21;
    uint64_t v23 = (char *)v11 + v21;
    sub_10008F7B0((uint64_t)v10 + v21, type metadata accessor for CircularProgressView.ColorStyle);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      uint64_t v37 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(&v22[*(int *)(v37 + 48)], &v23[*(int *)(v37 + 48)], v8);
      uint64_t v38 = *(int *)(v37 + 64);
      uint64_t v39 = &v22[v38];
      uint64_t v40 = &v23[v38];
      uint64_t v41 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v42 = v12[16];
  uint64_t v43 = (char *)v10 + v42;
  uint64_t v44 = (char *)v11 + v42;
  uint64_t v45 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
  uint64_t v46 = v12[20];
  uint64_t v47 = (char *)v10 + v46;
  uint64_t v48 = (char *)v11 + v46;
  uint64_t v49 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24))(v47, v48, v49);
  *(void *)((char *)v10 + v12[24]) = *(void *)((char *)v11 + v12[24]);
LABEL_16:
  *((unsigned char *)a1 + v52[11]) = *((unsigned char *)a2 + v52[11]);
  return a1;
}

uint64_t sub_10008DA64(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v5 = v4[7];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1000A4090();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  *(void *)(a1 + v4[8]) = *(void *)(a2 + v4[8]);
  *(void *)(a1 + v4[9]) = *(void *)(a2 + v4[9]);
  uint64_t v10 = v4[10];
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  uint64_t v13 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v33 = (void (*)(char *, char *, uint64_t))v9;
    uint64_t v34 = v14;
    _OWORD *v11 = *v12;
    uint64_t v16 = v13[12];
    __dst = (_DWORD *)((char *)v11 + v16);
    uint64_t v17 = (_DWORD *)((char *)v12 + v16);
    uint64_t v18 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      _DWORD *__dst = *v17;
      uint64_t v32 = sub_100004FDC(&qword_1000CDDD0);
      v33((char *)__dst + *(int *)(v32 + 48), (char *)v17 + *(int *)(v32 + 48), v8);
      uint64_t v19 = *(int *)(v32 + 64);
      uint64_t v20 = (char *)__dst + v19;
      uint64_t v21 = (char *)v17 + v19;
      uint64_t v22 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v23 = v13[16];
    uint64_t v24 = (char *)v11 + v23;
    uint64_t v25 = (char *)v12 + v23;
    uint64_t v26 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    uint64_t v27 = v13[20];
    uint64_t v28 = (char *)v11 + v27;
    uint64_t v29 = (char *)v12 + v27;
    uint64_t v30 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    *(void *)((char *)v11 + v13[24]) = *(void *)((char *)v12 + v13[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v34 + 56))(v11, 0, 1, v13);
  }
  *(unsigned char *)(a1 + v4[11]) = *(unsigned char *)(a2 + v4[11]);
  return a1;
}

void *sub_10008DD94(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  uint64_t v4 = (int *)type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v5 = v4[7];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1000A4090();
  uint64_t v56 = *(void *)(v8 - 8);
  (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v6, v7, v8);
  *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
  *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
  uint64_t v58 = v4;
  uint64_t v9 = v4[10];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v57 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v57 + 48);
  uint64_t v14 = v10;
  int v15 = v13(v10, 1, v12);
  uint64_t v16 = v11;
  int v17 = v13(v11, 1, v12);
  if (v15)
  {
    if (!v17)
    {
      uint64_t v18 = v14;
      *(_OWORD *)uint64_t v14 = *v16;
      uint64_t v19 = v12[12];
      uint64_t v20 = (_DWORD *)((char *)v14 + v19);
      uint64_t v21 = (_DWORD *)((char *)v16 + v19);
      uint64_t v22 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *uint64_t v20 = *v21;
        uint64_t v29 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))((char *)v20 + *(int *)(v29 + 48), (char *)v21 + *(int *)(v29 + 48), v8);
        uint64_t v30 = *(int *)(v29 + 64);
        uint64_t v31 = (char *)v20 + v30;
        uint64_t v32 = (char *)v21 + v30;
        uint64_t v33 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v34 = v12[16];
      uint64_t v35 = (char *)v18 + v34;
      uint64_t v36 = (char *)v16 + v34;
      uint64_t v37 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      uint64_t v38 = v12[20];
      uint64_t v39 = (char *)v18 + v38;
      uint64_t v40 = (char *)v16 + v38;
      uint64_t v41 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      *(void *)((char *)v18 + v12[24]) = *(void *)((char *)v16 + v12[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v57 + 56))(v18, 0, 1, v12);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v23 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v14, v11, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_15;
  }
  if (v17)
  {
    sub_10000A9C0((uint64_t)v14, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v24 = v11[1];
  *uint64_t v14 = *v11;
  v14[1] = v24;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v25 = v12[12];
    uint64_t v26 = (_DWORD *)((char *)v14 + v25);
    uint64_t v27 = (_DWORD *)((char *)v16 + v25);
    sub_10008F7B0((uint64_t)v14 + v25, type metadata accessor for CircularProgressView.ColorStyle);
    uint64_t v28 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      *uint64_t v26 = *v27;
      uint64_t v42 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))((char *)v26 + *(int *)(v42 + 48), (char *)v27 + *(int *)(v42 + 48), v8);
      uint64_t v43 = *(int *)(v42 + 64);
      uint64_t v44 = (char *)v26 + v43;
      uint64_t v45 = (char *)v27 + v43;
      uint64_t v46 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v47 = v12[16];
  uint64_t v48 = (char *)v14 + v47;
  uint64_t v49 = (char *)v16 + v47;
  uint64_t v50 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = v12[20];
  uint64_t v52 = (char *)v14 + v51;
  uint64_t v53 = (char *)v16 + v51;
  uint64_t v54 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  *(void *)((char *)v14 + v12[24]) = *(void *)((char *)v16 + v12[24]);
LABEL_15:
  *((unsigned char *)a1 + v58[11]) = *((unsigned char *)a2 + v58[11]);
  return a1;
}

uint64_t sub_10008E2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008E2F0);
}

uint64_t sub_10008E2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10008E35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008E370);
}

uint64_t sub_10008E370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ReadingProgressIconView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CFBB0);
}

uint64_t sub_10008E400()
{
  uint64_t result = type metadata accessor for ReadingProgressIconView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10008E48C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008E4A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v77 = a1;
  uint64_t v66 = sub_100004FDC(&qword_1000CFBE8);
  __chkstk_darwin(v66);
  uint64_t v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CFBF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v67 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004FDC(&qword_1000CFBF8);
  __chkstk_darwin(v64);
  uint64_t v69 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004FDC(&qword_1000CFC00);
  __chkstk_darwin(v75);
  uint64_t v68 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004FDC(&qword_1000CFC08);
  uint64_t v71 = *(void *)(v76 - 8);
  uint64_t v9 = __chkstk_darwin(v76);
  char v65 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v70 = (char *)&v61 - v11;
  uint64_t v73 = sub_100004FDC(&qword_1000CFC10);
  __chkstk_darwin(v73);
  uint64_t v74 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FDC(&qword_1000CE378);
  __chkstk_darwin(v13 - 8);
  int v15 = (uint64_t *)((char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = sub_1000A4090();
  uint64_t v16 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CircularProgressView.Content(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (int *)type metadata accessor for CircularProgressView(0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004FDC(&qword_1000CFC18);
  uint64_t v63 = *(void *)(v72 - 8);
  uint64_t v25 = __chkstk_darwin(v72);
  uint64_t v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v61 = (char *)&v61 - v28;
  double v29 = *(double *)v2;
  uint64_t v30 = type metadata accessor for ReadingProgressIconView.ViewConfiguration(0);
  uint64_t v31 = (int *)v30;
  if (v29 >= 1.0)
  {
    int v43 = *(unsigned __int8 *)(v2 + *(int *)(v30 + 44));
    *(void *)uint64_t v4 = sub_1000A3B60();
    *((void *)v4 + 1) = 0;
    v4[16] = 1;
    uint64_t v44 = sub_100004FDC(&qword_1000CFC20);
    sub_10008EE34(v43, (uint64_t)&v4[*(int *)(v44 + 44)]);
    sub_10000B17C(&qword_1000CFC28, &qword_1000CFBE8);
    uint64_t v45 = (uint64_t)v67;
    sub_1000A3F10();
    sub_10000A9C0((uint64_t)v4, &qword_1000CFBE8);
    uint64_t v46 = *(void *)(v2 + 8);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v48 = v69;
    sub_10000B1C0(v45, v69, &qword_1000CFBF0);
    uint64_t v49 = (uint64_t *)(v48 + *(int *)(v64 + 36));
    *uint64_t v49 = KeyPath;
    v49[1] = v46;
    swift_retain();
    sub_10000A9C0(v45, &qword_1000CFBF0);
    uint64_t v50 = sub_1000A3DE0();
    uint64_t v51 = swift_getKeyPath();
    uint64_t v52 = v68;
    sub_10000B1C0(v48, v68, &qword_1000CFBF8);
    uint64_t v53 = v75;
    uint64_t v54 = (uint64_t *)(v52 + *(int *)(v75 + 36));
    *uint64_t v54 = v51;
    v54[1] = v50;
    sub_10000A9C0(v48, &qword_1000CFBF8);
    unint64_t v55 = sub_10008F424();
    uint64_t v56 = v65;
    sub_1000A3E70();
    sub_10000A9C0(v52, &qword_1000CFC00);
    uint64_t v58 = v70;
    uint64_t v57 = v71;
    uint64_t v59 = v76;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v56, v76);
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v74, v58, v59);
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = sub_10008F634(&qword_1000CE7F0, (void (*)(uint64_t))type metadata accessor for CircularProgressView);
    uint64_t v78 = (uint64_t)v22;
    unint64_t v79 = v60;
    swift_getOpaqueTypeConformance2();
    uint64_t v78 = v53;
    unint64_t v79 = v55;
    swift_getOpaqueTypeConformance2();
    sub_1000A3C00();
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  }
  else
  {
    sub_10008F67C(v2 + *(int *)(v30 + 40), (uint64_t)v21);
    uint64_t v32 = *(void *)(v2 + 16);
    char v70 = *(char **)(v2 + 8);
    uint64_t v71 = v32;
    uint64_t v33 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v2 + v31[7], v62);
    uint64_t v34 = *(void *)(v2 + v31[8]);
    uint64_t v35 = *(void *)(v2 + v31[9]);
    uint64_t *v15 = swift_getKeyPath();
    sub_100004FDC(&qword_1000CCBB8);
    swift_storeEnumTagMultiPayload();
    *(void *)&v24[v22[5]] = swift_getKeyPath();
    sub_100004FDC(&qword_1000CCAD8);
    swift_storeEnumTagMultiPayload();
    sub_10000A95C((uint64_t)v15, (uint64_t)v24, &qword_1000CE378);
    *(double *)&v24[v22[6]] = v29;
    sub_10008F74C((uint64_t)v21, (uint64_t)&v24[v22[7]]);
    v24[v22[8]] = 0;
    uint64_t v36 = v71;
    *(void *)&v24[v22[9]] = v70;
    *(void *)&v24[v22[10]] = v36;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v24[v22[11]], v18, v33);
    *(void *)&v24[v22[12]] = v34;
    *(void *)&v24[v22[13]] = v35;
    *(void *)&v24[v22[14]] = v35;
    uint64_t v37 = sub_10008F634(&qword_1000CE7F0, (void (*)(uint64_t))type metadata accessor for CircularProgressView);
    swift_retain();
    swift_retain();
    sub_1000A3E70();
    sub_10008F7B0((uint64_t)v24, type metadata accessor for CircularProgressView);
    uint64_t v38 = v63;
    uint64_t v39 = v61;
    uint64_t v40 = v72;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v61, v27, v72);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v74, v39, v40);
    swift_storeEnumTagMultiPayload();
    uint64_t v78 = (uint64_t)v22;
    unint64_t v79 = v37;
    swift_getOpaqueTypeConformance2();
    unint64_t v41 = sub_10008F424();
    uint64_t v78 = v75;
    unint64_t v79 = v41;
    swift_getOpaqueTypeConformance2();
    sub_1000A3C00();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
}

uint64_t sub_10008EE34@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v35 = a1;
  uint64_t v40 = a2;
  uint64_t v2 = sub_100004FDC(&qword_1000CFC48);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100004FDC(&qword_1000CFC50);
  uint64_t v5 = __chkstk_darwin(v39);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v37 = sub_100004FDC(&qword_1000CFC58);
  __chkstk_darwin(v37);
  uint64_t v38 = (uint64_t)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FDC(&qword_1000CFC60);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000A3FF0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004FDC(&qword_1000CFC68);
  uint64_t v18 = __chkstk_darwin(v36);
  uint64_t v20 = (uint64_t *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v32 - v21;
  if (v35)
  {
    uint64_t v41 = sub_1000A3FB0();
    sub_1000A3DA0();
    sub_1000A3EB0();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.Scale.small(_:), v14);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v28 = (uint64_t *)&v7[*(int *)(v39 + 36)];
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)v28 + *(int *)(v11 + 28), v17, v14);
    uint64_t *v28 = KeyPath;
    uint64_t v30 = v33;
    uint64_t v29 = v34;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v7, v4, v34);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v29);
    uint64_t v25 = &qword_1000CFC50;
    sub_10000A95C((uint64_t)v7, (uint64_t)v9, &qword_1000CFC50);
    sub_10000B1C0((uint64_t)v9, v38, &qword_1000CFC50);
    swift_storeEnumTagMultiPayload();
    sub_10008F944();
    sub_10008F9E4();
    sub_1000A3C00();
    uint64_t v26 = (uint64_t)v9;
  }
  else
  {
    uint64_t v23 = sub_1000A3FB0();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.Scale.medium(_:), v14);
    uint64_t v24 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)v13 + *(int *)(v11 + 28), v17, v14);
    *uint64_t v13 = v24;
    sub_10000B1C0((uint64_t)v13, (uint64_t)v20 + *(int *)(v36 + 36), &qword_1000CFC60);
    *uint64_t v20 = v23;
    swift_retain();
    sub_10000A9C0((uint64_t)v13, &qword_1000CFC60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_release();
    uint64_t v25 = &qword_1000CFC68;
    sub_10000A95C((uint64_t)v20, (uint64_t)v22, &qword_1000CFC68);
    sub_10000B1C0((uint64_t)v22, v38, &qword_1000CFC68);
    swift_storeEnumTagMultiPayload();
    sub_10008F944();
    sub_10008F9E4();
    sub_1000A3C00();
    uint64_t v26 = (uint64_t)v22;
  }
  return sub_10000A9C0(v26, v25);
}

uint64_t sub_10008F3C4()
{
  return sub_1000A3A90();
}

uint64_t sub_10008F3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008F834(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

unint64_t sub_10008F424()
{
  unint64_t result = qword_1000CFC30;
  if (!qword_1000CFC30)
  {
    sub_100008B14(&qword_1000CFC00);
    sub_10008F4C4();
    sub_10000B17C(&qword_1000CD198, &qword_1000CD1A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC30);
  }
  return result;
}

unint64_t sub_10008F4C4()
{
  unint64_t result = qword_1000CFC38;
  if (!qword_1000CFC38)
  {
    sub_100008B14(&qword_1000CFBF8);
    sub_10008F564();
    sub_10000B17C(&qword_1000CDA50, &qword_1000CDA58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC38);
  }
  return result;
}

unint64_t sub_10008F564()
{
  unint64_t result = qword_1000CFC40;
  if (!qword_1000CFC40)
  {
    sub_100008B14(&qword_1000CFBF0);
    sub_10000B17C(&qword_1000CFC28, &qword_1000CFBE8);
    sub_10008F634((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC40);
  }
  return result;
}

uint64_t sub_10008F634(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CircularProgressView.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008F6E0()
{
  return sub_1000A3A90();
}

uint64_t sub_10008F704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008F834(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_10008F74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CircularProgressView.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008F7B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008F810()
{
  return sub_1000A3A40();
}

uint64_t sub_10008F834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10008F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008F834(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

unint64_t sub_10008F944()
{
  unint64_t result = qword_1000CFC70;
  if (!qword_1000CFC70)
  {
    sub_100008B14(&qword_1000CFC68);
    sub_10000B17C(&qword_1000CFC78, &qword_1000CFC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC70);
  }
  return result;
}

unint64_t sub_10008F9E4()
{
  unint64_t result = qword_1000CFC80;
  if (!qword_1000CFC80)
  {
    sub_100008B14(&qword_1000CFC50);
    swift_getOpaqueTypeConformance2();
    sub_10000B17C(&qword_1000CFC78, &qword_1000CFC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingProgressIconView.GoalCompleteIcon(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008FB80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingProgressIconView.GoalCompleteIcon()
{
  return &type metadata for ReadingProgressIconView.GoalCompleteIcon;
}

unint64_t sub_10008FBBC()
{
  unint64_t result = qword_1000CFC88;
  if (!qword_1000CFC88)
  {
    sub_100008B14(&qword_1000CFC90);
    type metadata accessor for CircularProgressView(255);
    sub_10008F634(&qword_1000CE7F0, (void (*)(uint64_t))type metadata accessor for CircularProgressView);
    swift_getOpaqueTypeConformance2();
    sub_100008B14(&qword_1000CFC00);
    sub_10008F424();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC88);
  }
  return result;
}

unint64_t sub_10008FCCC()
{
  unint64_t result = qword_1000CFC98;
  if (!qword_1000CFC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFC98);
  }
  return result;
}

uint64_t *sub_10008FD20(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A4130();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *unsigned int v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (uint64_t *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    void *v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)v4 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10008FE70(uint64_t a1)
{
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_10008FF20(void *a1, void *a2, int *a3)
{
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100090024(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *(_OWORD *)v12;
  *((_WORD *)v11 + 8) = *((_WORD *)v12 + 8);
  *(_OWORD *)uint64_t v11 = v13;
  return a1;
}

char *sub_100090160(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A4130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  return a1;
}

char *sub_100090258(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCAD8);
    uint64_t v6 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A4130();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
  return a1;
}

uint64_t sub_100090384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100090398);
}

uint64_t sub_100090398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10009045C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100090470);
}

uint64_t sub_100090470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for LabelView()
{
  uint64_t result = qword_1000CFD20;
  if (!qword_1000CFD20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10009057C()
{
  sub_10002B5D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100090628()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100090644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v93 = a1;
  uint64_t v3 = sub_100004FDC(&qword_1000CFD60);
  __chkstk_darwin(v3);
  int v5 = &v75[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004FDC(&qword_1000CFD68);
  __chkstk_darwin(v6 - 8);
  uint64_t v91 = &v75[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000A38E0();
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  __chkstk_darwin(v8);
  long long v88 = &v75[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000A3A20();
  __chkstk_darwin(v10 - 8);
  uint64_t v84 = &v75[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1000A4130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v75[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v75[-v17];
  uint64_t v82 = sub_100004FDC(&qword_1000CEDA8);
  __chkstk_darwin(v82);
  uint64_t v20 = &v75[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v83 = sub_100004FDC(&qword_1000CFD70);
  __chkstk_darwin(v83);
  uint64_t v86 = &v75[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = sub_100004FDC(&qword_1000CFD78);
  uint64_t v22 = __chkstk_darwin(v92);
  uint64_t v85 = &v75[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v87 = &v75[-v24];
  uint64_t v25 = type metadata accessor for LabelView();
  uint64_t v26 = (void *)(v1 + *(int *)(v25 + 20));
  uint64_t v27 = v26[1];
  if (v27)
  {
    uint64_t v78 = v25;
    uint64_t v80 = v3;
    uint64_t v81 = v5;
    *(void *)&long long v108 = *v26;
    *((void *)&v108 + 1) = v27;
    sub_10000A504();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000A3E50();
    uint64_t v30 = v29;
    int v76 = v31;
    uint64_t v77 = v32;
    uint64_t v79 = v2;
    sub_100009D80((uint64_t)v18);
    sub_1000A4120();
    char v33 = sub_1000A40F0();
    uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v34(v16, v12);
    v34(v18, v12);
    if (v33)
    {
      if (qword_1000CC7A0 != -1) {
        swift_once();
      }
      int v35 = dword_1000CFCA0;
    }
    else
    {
      int v35 = sub_1000A3C30();
    }
    LODWORD(v108) = v35;
    char v41 = v76 & 1;
    uint64_t v42 = sub_1000A3E30();
    uint64_t v44 = v43;
    char v46 = v45;
    uint64_t v48 = v47;
    sub_100017510(v28, v30, v41);
    swift_bridgeObjectRelease();
    if (qword_1000CC7A8 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1000A4090();
    uint64_t v50 = sub_100010B3C(v49, (uint64_t)qword_1000CFCA8);
    uint64_t v51 = (uint64_t)v84;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v84, v50, v49);
    sub_100065708(v51, (uint64_t)&v20[*(int *)(v82 + 36)]);
    *(void *)uint64_t v20 = v42;
    *((void *)v20 + 1) = v44;
    v20[16] = v46 & 1;
    *((void *)v20 + 3) = v48;
    sub_10006576C(v51);
    uint64_t v52 = v93;
    if (qword_1000CC7B0 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_1000A3DD0();
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v55 = v86;
    sub_10000B1C0((uint64_t)v20, (uint64_t)v86, &qword_1000CEDA8);
    uint64_t v56 = (uint64_t *)&v55[*(int *)(v83 + 36)];
    *uint64_t v56 = KeyPath;
    v56[1] = v53;
    sub_10000A9C0((uint64_t)v20, &qword_1000CEDA8);
    uint64_t v58 = v88;
    uint64_t v57 = v89;
    uint64_t v59 = v90;
    (*(void (**)(unsigned char *, void, uint64_t))(v89 + 104))(v88, enum case for ColorScheme.dark(_:), v90);
    uint64_t v60 = swift_getKeyPath();
    uint64_t v61 = (uint64_t)v85;
    uint64_t v62 = (uint64_t *)&v85[*(int *)(v92 + 36)];
    uint64_t v63 = sub_100004FDC(&qword_1000CCAC0);
    (*(void (**)(char *, unsigned char *, uint64_t))(v57 + 16))((char *)v62 + *(int *)(v63 + 28), v58, v59);
    *uint64_t v62 = v60;
    sub_10000B1C0((uint64_t)v55, v61, &qword_1000CFD70);
    (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v58, v59);
    sub_10000A9C0((uint64_t)v55, &qword_1000CFD70);
    uint64_t v64 = v87;
    sub_10000A95C(v61, (uint64_t)v87, &qword_1000CFD78);
    sub_10000B1C0((uint64_t)v64, (uint64_t)v81, &qword_1000CFD78);
    swift_storeEnumTagMultiPayload();
    sub_100004FDC(&qword_1000CFDA0);
    sub_100091234();
    sub_10009139C();
    uint64_t v65 = (uint64_t)v91;
    sub_1000A3C00();
    sub_10000A9C0((uint64_t)v64, &qword_1000CFD78);
    uint64_t v66 = sub_100004FDC(&qword_1000CFD80);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
    return sub_10000A95C(v65, v52, &qword_1000CFD68);
  }
  else
  {
    uint64_t v36 = v93;
    uint64_t v37 = v2 + *(int *)(v25 + 28);
    if (*(unsigned char *)(v37 + 17))
    {
      uint64_t v38 = sub_100004FDC(&qword_1000CFD80);
      uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
      return v39(v36, 1, 1, v38);
    }
    else
    {
      uint64_t v67 = v5;
      int v68 = *(_DWORD *)v37;
      if (*(unsigned char *)(v37 + 16))
      {
        uint64_t v69 = sub_1000A4070();
        sub_100031188(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v108, 0.0, 1, 0.0, 1, v69, v70, v68);
        int v95 = v108;
        uint64_t v96 = *((void *)&v108 + 1);
        char v97 = v109;
        uint64_t v98 = *((void *)&v109 + 1);
        char v99 = v110;
        *(void *)&long long v100 = *((void *)&v110 + 1);
        BYTE8(v100) = v111;
        uint64_t v101 = *((void *)&v111 + 1);
        char v102 = v112;
        uint64_t v103 = *((void *)&v112 + 1);
        char v104 = v113;
        uint64_t v105 = *((void *)&v113 + 1);
        char v106 = v114[0];
        long long v107 = *(_OWORD *)((char *)v114 + 8);
        sub_100091448((uint64_t)&v95);
      }
      else
      {
        sub_1000A4070();
        sub_1000A3910();
        int v95 = v68;
        uint64_t v96 = v115;
        char v97 = v116;
        uint64_t v98 = v117;
        char v99 = v118;
        long long v100 = v119;
        sub_1000911B4((uint64_t)&v95);
      }
      sub_10000A95C((uint64_t)&v95, (uint64_t)&v94, &qword_1000CFD88);
      sub_100004FDC(&qword_1000CFD90);
      sub_100004FDC(&qword_1000CF110);
      sub_1000911C0((unint64_t *)&qword_1000CFD98, &qword_1000CFD90);
      sub_1000911C0(&qword_1000CF108, &qword_1000CF110);
      sub_1000A3C00();
      long long v71 = v113;
      v67[4] = v112;
      v67[5] = v71;
      v67[6] = v114[0];
      *(_OWORD *)((char *)v67 + 105) = *(_OWORD *)((char *)v114 + 9);
      long long v72 = v109;
      _OWORD *v67 = v108;
      v67[1] = v72;
      long long v73 = v111;
      v67[2] = v110;
      v67[3] = v73;
      swift_storeEnumTagMultiPayload();
      sub_100004FDC(&qword_1000CFDA0);
      sub_100091234();
      sub_10009139C();
      sub_1000A3C00();
      uint64_t v74 = sub_100004FDC(&qword_1000CFD80);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v36, 0, 1, v74);
    }
  }
}

uint64_t sub_1000910E8()
{
  uint64_t result = sub_1000A3C50();
  dword_1000CFCA0 = result;
  return result;
}

uint64_t sub_100091108()
{
  uint64_t v0 = sub_1000A4090();
  sub_100010E40(v0, qword_1000CFCA8);
  uint64_t v1 = sub_100010B3C(v0, (uint64_t)qword_1000CFCA8);
  uint64_t v2 = enum case for BlendMode.plusLighter(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100091190()
{
  uint64_t result = sub_1000A3DB0();
  qword_1000CFCC0 = v1;
  return result;
}

uint64_t sub_1000911B4(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

uint64_t sub_1000911C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    sub_100073D8C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100091234()
{
  unint64_t result = qword_1000CFDA8;
  if (!qword_1000CFDA8)
  {
    sub_100008B14(&qword_1000CFD78);
    sub_1000912C0();
    sub_10009134C(&qword_1000CDD88, &qword_1000CCAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFDA8);
  }
  return result;
}

unint64_t sub_1000912C0()
{
  unint64_t result = qword_1000CFDB0;
  if (!qword_1000CFDB0)
  {
    sub_100008B14(&qword_1000CFD70);
    sub_100065868();
    sub_10009134C(&qword_1000CD198, &qword_1000CD1A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFDB0);
  }
  return result;
}

uint64_t sub_10009134C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009139C()
{
  unint64_t result = qword_1000CFDB8;
  if (!qword_1000CFDB8)
  {
    sub_100008B14(&qword_1000CFDA0);
    sub_1000911C0((unint64_t *)&qword_1000CFD98, &qword_1000CFD90);
    sub_1000911C0(&qword_1000CF108, &qword_1000CF110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFDB8);
  }
  return result;
}

uint64_t sub_100091448(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for LabelView.PlaceholderStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LabelView.PlaceholderStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LabelView.PlaceholderStyle()
{
  return &type metadata for LabelView.PlaceholderStyle;
}

unint64_t sub_1000914C0()
{
  unint64_t result = qword_1000CFDC0;
  if (!qword_1000CFDC0)
  {
    sub_100008B14(&qword_1000CFD68);
    sub_100091534();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFDC0);
  }
  return result;
}

unint64_t sub_100091534()
{
  unint64_t result = qword_1000CFDC8;
  if (!qword_1000CFDC8)
  {
    sub_100008B14(&qword_1000CFD80);
    sub_100091234();
    sub_10009139C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFDC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelView.PlaceholderStyle.WidthStyle()
{
  return &type metadata for LabelView.PlaceholderStyle.WidthStyle;
}

uint64_t *sub_1000915C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A4130();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    id v11 = v10;
  }
  return a1;
}

void sub_1000916E0(uint64_t a1, uint64_t a2)
{
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

void *sub_100091780(void *a1, void *a2, uint64_t a3)
{
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

void *sub_100091850(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)((char *)a1 + v7);
  id v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  id v10 = v9;

  return a1;
}

char *sub_100091940(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A4130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100091A14(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCAD8);
    uint64_t v6 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A4130();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  id v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  return a1;
}

uint64_t sub_100091B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100091B1C);
}

uint64_t sub_100091B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100091BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100091C00);
}

uint64_t sub_100091C00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for BackgroundView()
{
  uint64_t result = qword_1000CFE28;
  if (!qword_1000CFE28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100091D0C()
{
  sub_10002B5D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100091DA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100091DBC@<X0>(uint64_t a1@<X8>)
{
  v22[1] = a1;
  uint64_t v23 = sub_100004FDC(&qword_1000CFE78);
  __chkstk_darwin(v23);
  char v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FDC(&qword_1000CFE80);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A3FC0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FDC(&qword_1000CFE88);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v1 + *(int *)(type metadata accessor for BackgroundView() + 20));
  if (v14)
  {
    id v15 = v14;
    sub_1000A3FA0();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v7);
    uint64_t v16 = sub_1000A4010();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v17 = sub_1000A3A00();
    char v18 = sub_1000A3D10();
    uint64_t v24 = v16;
    uint64_t v25 = v17;
    char v26 = v18;
    sub_100004FDC(&qword_1000CFEA8);
    sub_100092474();
    sub_1000A3EE0();
    swift_release();
    uint64_t v19 = &qword_1000CFE88;
    sub_10000B1C0((uint64_t)v13, (uint64_t)v6, &qword_1000CFE88);
    swift_storeEnumTagMultiPayload();
    sub_1000924E8(&qword_1000CFE98, &qword_1000CFE88, (void (*)(void))sub_100092474);
    sub_1000924E8(&qword_1000CFEB0, &qword_1000CFE78, (void (*)(void))sub_100092420);
    sub_1000A3C00();

    uint64_t v20 = (uint64_t)v13;
  }
  else
  {
    sub_100092420();
    sub_1000A3EE0();
    uint64_t v19 = &qword_1000CFE78;
    sub_10000B1C0((uint64_t)v3, (uint64_t)v6, &qword_1000CFE78);
    swift_storeEnumTagMultiPayload();
    sub_1000924E8(&qword_1000CFE98, &qword_1000CFE88, (void (*)(void))sub_100092474);
    sub_1000924E8(&qword_1000CFEB0, &qword_1000CFE78, (void (*)(void))sub_100092420);
    sub_1000A3C00();
    uint64_t v20 = (uint64_t)v3;
  }
  return sub_10000A9C0(v20, v19);
}

uint64_t sub_100092198@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000A4130();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_100004FDC(&qword_1000CFE60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = sub_1000A4070();
  a1[1] = v12;
  sub_100009D80((uint64_t)v8);
  sub_1000A4120();
  char v13 = sub_1000A40F0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  v14(v8, v2);
  if (v13)
  {
    sub_100091DBC((uint64_t)v11);
    uint64_t v15 = sub_100004FDC(&qword_1000CFE68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_100004FDC(&qword_1000CFE68);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  }
  uint64_t v17 = sub_100004FDC(&qword_1000CFE70);
  return sub_1000923B8((uint64_t)v11, (uint64_t)a1 + *(int *)(v17 + 44));
}

uint64_t sub_1000923B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CFE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100092420()
{
  unint64_t result = qword_1000CFE90;
  if (!qword_1000CFE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFE90);
  }
  return result;
}

unint64_t sub_100092474()
{
  unint64_t result = qword_1000CFEA0;
  if (!qword_1000CFEA0)
  {
    sub_100008B14(&qword_1000CFEA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFEA0);
  }
  return result;
}

uint64_t sub_1000924E8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    a3();
    sub_10002F01C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009256C()
{
  unint64_t result = qword_1000CFEB8;
  if (!qword_1000CFEB8)
  {
    sub_100008B14(&qword_1000CFEC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFEB8);
  }
  return result;
}

uint64_t sub_1000925C8@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1000AA580;
  uint64_t v2 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  uint64_t v3 = (char *)a1 + v2[6];
  uint64_t v4 = enum case for BlendMode.plusLighter(_:);
  uint64_t v5 = sub_1000A4090();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  uint64_t v6 = (void *)((char *)a1 + v2[7]);
  *uint64_t v6 = 0x69662E656D616C66;
  v6[1] = 0xEA00000000006C6CLL;
  uint64_t v7 = v2[8];
  sub_1000A3DB0();
  *(void *)((char *)a1 + v7) = v8;
  uint64_t v9 = v2[9];
  *(void *)((char *)a1 + v9) = sub_1000A3F70();
  *(void *)((char *)a1 + v2[10]) = 2;
  uint64_t v10 = v2[11];
  *(void *)((char *)a1 + v10) = sub_1000A3F70();
  uint64_t v11 = v2[12];
  sub_1000A3F70();
  uint64_t v12 = sub_1000A3F80();
  swift_release();
  *(void *)((char *)a1 + v11) = v12;
  char v13 = (void *)((char *)a1 + v2[13]);
  *char v13 = 0xD000000000000015;
  v13[1] = 0x80000001000A5C10;
  uint64_t v14 = (char *)a1 + v2[14];
  uint64_t v15 = sub_100004FDC(&qword_1000CCB90);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)((char *)a1 + v2[15]) = 0x4008000000000000;
  *(void *)((char *)a1 + v2[16]) = 0x402A000000000000;
  *(void *)((char *)a1 + v2[17]) = 0x4010000000000000;
  uint64_t v16 = v2[18];
  uint64_t result = sub_1000A3DF0();
  *(void *)((char *)a1 + v16) = result;
  *(void *)((char *)a1 + v2[19]) = 0x4018000000000000;
  *(void *)((char *)a1 + v2[20]) = 0x4040000000000000;
  *(void *)((char *)a1 + v2[21]) = 0x4059000000000000;
  return result;
}

uint64_t type metadata accessor for MediumOneBookView.ViewConfiguration(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CFF20);
}

uint64_t *sub_1000927C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000A4090();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v51(v8, v9, v10);
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    char v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *char v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v16 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[13];
    uint64_t v19 = a3[14];
    uint64_t v20 = (uint64_t *)((char *)v4 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (uint64_t *)((char *)v4 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v25 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v26 = *((void *)v25 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v50 = v26;
      uint64_t v29 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v29;
      uint64_t v30 = v25[12];
      int v31 = (char *)v23 + v30;
      uint64_t v32 = (char *)v24 + v30;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)int v31 = *(void *)v32;
        swift_retain();
      }
      else
      {
        *(_DWORD *)int v31 = *(_DWORD *)v32;
        uint64_t v33 = sub_100004FDC(&qword_1000CDDD0);
        v51(&v31[*(int *)(v33 + 48)], &v32[*(int *)(v33 + 48)], v10);
        uint64_t v34 = *(int *)(v33 + 64);
        int v35 = &v31[v34];
        uint64_t v36 = &v32[v34];
        uint64_t v37 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v25[16];
      uint64_t v39 = (char *)v23 + v38;
      uint64_t v40 = (char *)v24 + v38;
      uint64_t v41 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      uint64_t v42 = v25[20];
      uint64_t v43 = (char *)v23 + v42;
      uint64_t v44 = (char *)v24 + v42;
      uint64_t v45 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      *(void *)((char *)v23 + v25[24]) = *(void *)((char *)v24 + v25[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v50 + 56))(v23, 0, 1, v25);
    }
    uint64_t v46 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v46) = *(uint64_t *)((char *)a2 + v46);
    uint64_t v47 = a3[18];
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(uint64_t *)((char *)v4 + v47) = *(uint64_t *)((char *)a2 + v47);
    uint64_t v48 = a3[20];
    *(uint64_t *)((char *)v4 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    *(uint64_t *)((char *)v4 + v48) = *(uint64_t *)((char *)a2 + v48);
    *(uint64_t *)((char *)v4 + a3[21]) = *(uint64_t *)((char *)a2 + a3[21]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_100092BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000A4090();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 56);
  uint64_t v8 = (int *)sub_100004FDC(&qword_1000CCB90);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v10 = sub_100004FDC(&qword_1000CDDD0);
      v6(v9 + *(int *)(v10 + 48), v5);
      uint64_t v11 = v9 + *(int *)(v10 + 64);
      uint64_t v12 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v7 + v8[16];
    uint64_t v14 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = v7 + v8[20];
    uint64_t v16 = sub_1000A3D80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }

  return swift_release();
}

_OWORD *sub_100092E14(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v49(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v15 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[13];
  uint64_t v18 = a3[14];
  uint64_t v19 = (void *)((char *)a1 + v17);
  uint64_t v20 = (void *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)((char *)a1 + v18);
  uint64_t v23 = (void *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v24 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v25 = *((void *)v24 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v48 = v25;
    uint64_t v27 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v27;
    uint64_t v28 = v24[12];
    uint64_t v29 = (char *)v22 + v28;
    uint64_t v30 = (char *)v23 + v28;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      uint64_t v31 = sub_100004FDC(&qword_1000CDDD0);
      v49(&v29[*(int *)(v31 + 48)], &v30[*(int *)(v31 + 48)], v9);
      uint64_t v32 = *(int *)(v31 + 64);
      uint64_t v33 = &v29[v32];
      uint64_t v34 = &v30[v32];
      uint64_t v35 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v24[16];
    uint64_t v37 = (char *)v22 + v36;
    uint64_t v38 = (char *)v23 + v36;
    uint64_t v39 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v24[20];
    uint64_t v41 = (char *)v22 + v40;
    uint64_t v42 = (char *)v23 + v40;
    uint64_t v43 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    *(void *)((char *)v22 + v24[24]) = *(void *)((char *)v23 + v24[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v48 + 56))(v22, 0, 1, v24);
  }
  uint64_t v44 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);
  uint64_t v45 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v45) = *(void *)((char *)a2 + v45);
  uint64_t v46 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  swift_retain();
  return a1;
}

void *sub_1000931C8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  (*(void (**)(char *, char *))(v57 + 24))(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      uint64_t v24 = v19[12];
      uint64_t v56 = (char *)v17 + v24;
      uint64_t v25 = (char *)v18 + v24;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v56 = *(void *)v25;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v56 = *(_DWORD *)v25;
        uint64_t v30 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(&v56[*(int *)(v30 + 48)], &v25[*(int *)(v30 + 48)], v58);
        uint64_t v31 = *(int *)(v30 + 64);
        uint64_t v59 = &v56[v31];
        uint64_t v32 = &v25[v31];
        uint64_t v33 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v59, v32, v33);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = v19[16];
      uint64_t v35 = (char *)v17 + v34;
      uint64_t v36 = (char *)v18 + v34;
      uint64_t v37 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      uint64_t v38 = v19[20];
      uint64_t v39 = (char *)v17 + v38;
      uint64_t v40 = (char *)v18 + v38;
      uint64_t v41 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      *(void *)((char *)v17 + v19[24]) = *(void *)((char *)v18 + v19[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v26 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v17, v18, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_16;
  }
  if (v23)
  {
    sub_10000A9C0((uint64_t)v17, &qword_1000CCB90);
    goto LABEL_7;
  }
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v27 = v19[12];
    uint64_t v28 = (char *)v17 + v27;
    uint64_t v29 = (char *)v18 + v27;
    sub_100097B38((uint64_t)v17 + v27, type metadata accessor for CircularProgressView.ColorStyle);
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      uint64_t v42 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(&v28[*(int *)(v42 + 48)], &v29[*(int *)(v42 + 48)], v58);
      uint64_t v43 = *(int *)(v42 + 64);
      uint64_t v44 = &v28[v43];
      uint64_t v45 = &v29[v43];
      uint64_t v46 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v47 = v19[16];
  uint64_t v48 = (char *)v17 + v47;
  uint64_t v49 = (char *)v18 + v47;
  uint64_t v50 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = v19[20];
  uint64_t v52 = (char *)v17 + v51;
  uint64_t v53 = (char *)v18 + v51;
  uint64_t v54 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  *(void *)((char *)v17 + v19[24]) = *(void *)((char *)v18 + v19[24]);
LABEL_16:
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  return a1;
}

_OWORD *sub_1000937F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  uint64_t v17 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v40 = v10;
    uint64_t v41 = v18;
    _OWORD *v15 = *v16;
    uint64_t v20 = v17[12];
    __dst = (_DWORD *)((char *)v15 + v20);
    uint64_t v21 = (_DWORD *)((char *)v16 + v20);
    uint64_t v22 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(__dst, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      _DWORD *__dst = *v21;
      uint64_t v39 = sub_100004FDC(&qword_1000CDDD0);
      v40((char *)__dst + *(int *)(v39 + 48), (char *)v21 + *(int *)(v39 + 48), v9);
      uint64_t v23 = *(int *)(v39 + 64);
      uint64_t v24 = (char *)__dst + v23;
      uint64_t v25 = (char *)v21 + v23;
      uint64_t v26 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v27 = v17[16];
    uint64_t v28 = (char *)v15 + v27;
    uint64_t v29 = (char *)v16 + v27;
    uint64_t v30 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v17[20];
    uint64_t v32 = (char *)v15 + v31;
    uint64_t v33 = (char *)v16 + v31;
    uint64_t v34 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    *(void *)((char *)v15 + v17[24]) = *(void *)((char *)v16 + v17[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v41 + 56))(v15, 0, 1, v17);
  }
  uint64_t v35 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v35) = *(void *)((char *)a2 + v35);
  uint64_t v36 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  uint64_t v37 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + v37) = *(void *)((char *)a2 + v37);
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  return a1;
}

_OWORD *sub_100093B7C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A4090();
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  (*(void (**)(char *, char *))(v73 + 40))(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_release();
  uint64_t v16 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  swift_release();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_release();
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (uint64_t *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v75 = *((void *)v25 - 1);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, int *))(v75 + 48);
  uint64_t v27 = v23;
  int v28 = v26(v23, 1, v25);
  uint64_t v29 = v24;
  int v30 = v26(v24, 1, v25);
  if (v28)
  {
    if (!v30)
    {
      uint64_t v31 = v27;
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v24;
      uint64_t v32 = v25[12];
      uint64_t v33 = (_DWORD *)((char *)v27 + v32);
      uint64_t v34 = (_DWORD *)((char *)v24 + v32);
      uint64_t v35 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        *uint64_t v33 = *v34;
        uint64_t v43 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))((char *)v33 + *(int *)(v43 + 48), (char *)v34 + *(int *)(v43 + 48), v74);
        uint64_t v44 = *(int *)(v43 + 64);
        uint64_t v45 = (char *)v33 + v44;
        uint64_t v46 = (char *)v34 + v44;
        uint64_t v47 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v48 = v25[16];
      uint64_t v49 = (char *)v31 + v48;
      uint64_t v50 = (char *)v29 + v48;
      uint64_t v51 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      uint64_t v52 = v25[20];
      uint64_t v53 = (char *)v31 + v52;
      uint64_t v54 = (char *)v29 + v52;
      uint64_t v55 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      *(void *)((char *)v31 + v25[24]) = *(void *)((char *)v29 + v25[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v75 + 56))(v31, 0, 1, v25);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v36 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v27, v24, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_15;
  }
  if (v30)
  {
    sub_10000A9C0((uint64_t)v27, &qword_1000CCB90);
    goto LABEL_7;
  }
  uint64_t v37 = v24[1];
  uint64_t v38 = v27;
  *uint64_t v27 = *v24;
  v27[1] = v37;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v39 = v25[12];
    uint64_t v40 = (_DWORD *)((char *)v27 + v39);
    uint64_t v41 = (_DWORD *)((char *)v24 + v39);
    sub_100097B38((uint64_t)v27 + v39, type metadata accessor for CircularProgressView.ColorStyle);
    uint64_t v42 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      *uint64_t v40 = *v41;
      uint64_t v56 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))((char *)v40 + *(int *)(v56 + 48), (char *)v41 + *(int *)(v56 + 48), v74);
      uint64_t v57 = *(int *)(v56 + 64);
      uint64_t v58 = (char *)v40 + v57;
      uint64_t v59 = (char *)v41 + v57;
      uint64_t v60 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v61 = v25[16];
  uint64_t v62 = (char *)v38 + v61;
  uint64_t v63 = (char *)v29 + v61;
  uint64_t v64 = sub_1000A3E00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  uint64_t v65 = v25[20];
  uint64_t v66 = (char *)v38 + v65;
  uint64_t v67 = (char *)v29 + v65;
  uint64_t v68 = sub_1000A3D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 40))(v66, v67, v68);
  *(void *)((char *)v38 + v25[24]) = *(void *)((char *)v29 + v25[24]);
LABEL_15:
  uint64_t v69 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v69) = *(void *)((char *)a2 + v69);
  uint64_t v70 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v70) = *(void *)((char *)a2 + v70);
  swift_release();
  uint64_t v71 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + v71) = *(void *)((char *)a2 + v71);
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  return a1;
}

uint64_t sub_10009413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100094150);
}

uint64_t sub_100094150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4090();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[6];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[7] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for CircularProgressView.Content(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[14];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_100094284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100094298);
}

uint64_t sub_100094298(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000A4090();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[6];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for CircularProgressView.Content(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[14];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t sub_1000943CC()
{
  uint64_t result = sub_1000A4090();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CircularProgressView.Content(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1000944DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v42 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_100011214(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v14 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v14;
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v15;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    uint64_t v16 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v16;
    uint64_t v17 = *(void **)(a2 + 152);
    uint64_t v66 = *(void **)(a2 + 160);
    *(void *)(a1 + 152) = v17;
    *(void *)(a1 + 160) = v66;
    uint64_t v18 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v18;
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
    uint64_t v22 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
    uint64_t v23 = v22[6];
    uint64_t v62 = (char *)(v21 + v23);
    uint64_t v63 = (char *)(v20 + v23);
    uint64_t v24 = sub_1000A4090();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v17;
    id v27 = v66;
    swift_bridgeObjectRetain();
    uint64_t v67 = v25;
    uint64_t v68 = v24;
    v25(v63, v62, v24);
    uint64_t v28 = v22[7];
    uint64_t v29 = (void *)(v20 + v28);
    int v30 = (void *)(v21 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *(void *)(v20 + v22[8]) = *(void *)(v21 + v22[8]);
    *(void *)(v20 + v22[9]) = *(void *)(v21 + v22[9]);
    *(void *)(v20 + v22[10]) = *(void *)(v21 + v22[10]);
    *(void *)(v20 + v22[11]) = *(void *)(v21 + v22[11]);
    *(void *)(v20 + v22[12]) = *(void *)(v21 + v22[12]);
    uint64_t v32 = v22[13];
    uint64_t v33 = (void *)(v20 + v32);
    uint64_t v34 = (void *)(v21 + v32);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = v22[14];
    uint64_t v37 = (void *)(v20 + v36);
    uint64_t v38 = (void *)(v21 + v36);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v39 = (int *)sub_100004FDC(&qword_1000CCB90);
    uint64_t v40 = *((void *)v39 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = type metadata accessor for CircularProgressView.Content(0);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v37;
      uint64_t v44 = v38[1];
      *uint64_t v43 = *v38;
      v43[1] = v44;
      uint64_t v45 = v39[12];
      uint64_t v64 = v40;
      uint64_t v65 = v43;
      uint64_t v46 = (char *)v43 + v45;
      uint64_t v47 = (char *)v38 + v45;
      type metadata accessor for CircularProgressView.ColorStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v46 = *(void *)v47;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        uint64_t v48 = sub_100004FDC(&qword_1000CDDD0);
        v67(&v46[*(int *)(v48 + 48)], &v47[*(int *)(v48 + 48)], v68);
        uint64_t v49 = *(int *)(v48 + 64);
        uint64_t v50 = &v46[v49];
        uint64_t v51 = &v47[v49];
        uint64_t v52 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v39[16];
      uint64_t v54 = (char *)v65 + v53;
      uint64_t v55 = (char *)v38 + v53;
      uint64_t v56 = sub_1000A3E00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = v39[20];
      uint64_t v58 = (char *)v65 + v57;
      uint64_t v59 = (char *)v38 + v57;
      uint64_t v60 = sub_1000A3D80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      *(void *)((char *)v65 + v39[24]) = *(void *)((char *)v38 + v39[24]);
      (*(void (**)(void *, void, uint64_t, int *))(v64 + 56))(v65, 0, 1, v39);
    }
    *(void *)(v20 + v22[15]) = *(void *)(v21 + v22[15]);
    *(void *)(v20 + v22[16]) = *(void *)(v21 + v22[16]);
    *(void *)(v20 + v22[17]) = *(void *)(v21 + v22[17]);
    *(void *)(v20 + v22[18]) = *(void *)(v21 + v22[18]);
    *(void *)(v20 + v22[19]) = *(void *)(v21 + v22[19]);
    *(void *)(v20 + v22[20]) = *(void *)(v21 + v22[20]);
    *(void *)(v20 + v22[21]) = *(void *)(v21 + v22[21]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1000949E8(uint64_t a1, uint64_t a2)
{
  sub_10000A4F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_1000A4090();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v9 = v4 + *(int *)(v5 + 56);
  uint64_t v10 = (int *)sub_100004FDC(&qword_1000CCB90);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + v10[12];
    type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v12 = sub_100004FDC(&qword_1000CDDD0);
      v8(v11 + *(int *)(v12 + 48), v7);
      uint64_t v13 = v11 + *(int *)(v12 + 64);
      uint64_t v14 = sub_1000A38E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v9 + v10[16];
    uint64_t v16 = sub_1000A3E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v9 + v10[20];
    uint64_t v18 = sub_1000A3D80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }

  return swift_release();
}

uint64_t sub_100094C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  uint64_t v16 = *(void **)(a2 + 152);
  uint64_t v64 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = v16;
  *(void *)(a1 + 160) = v64;
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  uint64_t v22 = v21[6];
  uint64_t v60 = (char *)(v20 + v22);
  uint64_t v61 = (char *)(v19 + v22);
  uint64_t v23 = sub_1000A4090();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v25 = v16;
  id v26 = v64;
  swift_bridgeObjectRetain();
  uint64_t v65 = v24;
  uint64_t v66 = v23;
  v24(v61, v60, v23);
  uint64_t v27 = v21[7];
  uint64_t v28 = (void *)(v19 + v27);
  uint64_t v29 = (void *)(v20 + v27);
  uint64_t v30 = v29[1];
  void *v28 = *v29;
  v28[1] = v30;
  *(void *)(v19 + v21[8]) = *(void *)(v20 + v21[8]);
  *(void *)(v19 + v21[9]) = *(void *)(v20 + v21[9]);
  *(void *)(v19 + v21[10]) = *(void *)(v20 + v21[10]);
  *(void *)(v19 + v21[11]) = *(void *)(v20 + v21[11]);
  *(void *)(v19 + v21[12]) = *(void *)(v20 + v21[12]);
  uint64_t v31 = v21[13];
  uint64_t v32 = (void *)(v19 + v31);
  uint64_t v33 = (void *)(v20 + v31);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = v21[14];
  uint64_t v36 = (void *)(v19 + v35);
  uint64_t v37 = (void *)(v20 + v35);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v38 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v39 = *((void *)v38 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = v36;
    uint64_t v42 = v37[1];
    *uint64_t v41 = *v37;
    v41[1] = v42;
    uint64_t v43 = v38[12];
    uint64_t v62 = v39;
    uint64_t v63 = v41;
    uint64_t v44 = (char *)v41 + v43;
    uint64_t v45 = (char *)v37 + v43;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v44 = *(void *)v45;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
      uint64_t v46 = sub_100004FDC(&qword_1000CDDD0);
      v65(&v44[*(int *)(v46 + 48)], &v45[*(int *)(v46 + 48)], v66);
      uint64_t v47 = *(int *)(v46 + 64);
      uint64_t v48 = &v44[v47];
      uint64_t v49 = &v45[v47];
      uint64_t v50 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = v38[16];
    uint64_t v52 = (char *)v63 + v51;
    uint64_t v53 = (char *)v37 + v51;
    uint64_t v54 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v38[20];
    uint64_t v56 = (char *)v63 + v55;
    uint64_t v57 = (char *)v37 + v55;
    uint64_t v58 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    *(void *)((char *)v63 + v38[24]) = *(void *)((char *)v37 + v38[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v62 + 56))(v63, 0, 1, v38);
  }
  *(void *)(v19 + v21[15]) = *(void *)(v20 + v21[15]);
  *(void *)(v19 + v21[16]) = *(void *)(v20 + v21[16]);
  *(void *)(v19 + v21[17]) = *(void *)(v20 + v21[17]);
  *(void *)(v19 + v21[18]) = *(void *)(v20 + v21[18]);
  *(void *)(v19 + v21[19]) = *(void *)(v20 + v21[19]);
  *(void *)(v19 + v21[20]) = *(void *)(v20 + v21[20]);
  *(void *)(v19 + v21[21]) = *(void *)(v20 + v21[21]);
  swift_retain();
  return a1;
}

uint64_t sub_10009515C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100011214(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_10000A4F8(v11, v12, v13, v14, v15);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v17;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)(a1 + 152);
  uint64_t v19 = *(void **)(a2 + 152);
  *(void *)(a1 + 152) = v19;
  id v20 = v19;

  uint64_t v21 = *(void **)(a2 + 160);
  uint64_t v22 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v21;
  id v23 = v21;

  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v24 = *(int *)(a3 + 28);
  id v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  *id v25 = *(void *)(a2 + v24);
  v25[1] = *(void *)(a2 + v24 + 8);
  uint64_t v27 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  uint64_t v28 = v27[6];
  uint64_t v29 = (char *)v25 + v28;
  uint64_t v30 = v26 + v28;
  uint64_t v31 = sub_1000A4090();
  uint64_t v80 = *(void *)(v31 - 8);
  uint64_t v81 = v31;
  (*(void (**)(char *, uint64_t))(v80 + 24))(v29, v30);
  uint64_t v32 = v27[7];
  uint64_t v33 = (void *)((char *)v25 + v32);
  uint64_t v34 = (void *)(v26 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v25 + v27[8]) = *(void *)(v26 + v27[8]);
  *(void *)((char *)v25 + v27[9]) = *(void *)(v26 + v27[9]);
  swift_retain();
  swift_release();
  *(void *)((char *)v25 + v27[10]) = *(void *)(v26 + v27[10]);
  *(void *)((char *)v25 + v27[11]) = *(void *)(v26 + v27[11]);
  swift_retain();
  swift_release();
  *(void *)((char *)v25 + v27[12]) = *(void *)(v26 + v27[12]);
  swift_retain();
  swift_release();
  uint64_t v35 = v27[13];
  uint64_t v36 = (void *)((char *)v25 + v35);
  uint64_t v37 = (void *)(v26 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v27[14];
  uint64_t v39 = (void *)((char *)v25 + v38);
  uint64_t v40 = (void *)(v26 + v38);
  uint64_t v41 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v82 = *((void *)v41 - 1);
  uint64_t v83 = v39;
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, int *))(v82 + 48);
  LODWORD(v39) = v42(v39, 1, v41);
  int v43 = v42(v40, 1, v41);
  if (v39)
  {
    if (v43)
    {
      size_t v44 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v45 = v83;
LABEL_6:
      memcpy(v45, v40, v44);
      goto LABEL_17;
    }
    *uint64_t v83 = *v40;
    v83[1] = v40[1];
    uint64_t v46 = v41[12];
    uint64_t v79 = (char *)v83 + v46;
    uint64_t v47 = (char *)v40 + v46;
    type metadata accessor for CircularProgressView.ColorStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v79 = *(void *)v47;
      swift_retain();
    }
    else
    {
      *(_DWORD *)uint64_t v79 = *(_DWORD *)v47;
      uint64_t v52 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(&v79[*(int *)(v52 + 48)], &v47[*(int *)(v52 + 48)], v81);
      uint64_t v53 = *(int *)(v52 + 64);
      uint64_t v54 = &v79[v53];
      uint64_t v55 = &v47[v53];
      uint64_t v56 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = v41[16];
    uint64_t v58 = (char *)v83 + v57;
    uint64_t v59 = (char *)v40 + v57;
    uint64_t v60 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
    uint64_t v61 = v41[20];
    uint64_t v62 = (char *)v83 + v61;
    uint64_t v63 = (char *)v40 + v61;
    uint64_t v64 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
    *(void *)((char *)v83 + v41[24]) = *(void *)((char *)v40 + v41[24]);
    (*(void (**)(void *, void, uint64_t, int *))(v82 + 56))(v83, 0, 1, v41);
  }
  else
  {
    if (v43)
    {
      sub_10000A9C0((uint64_t)v83, &qword_1000CCB90);
      size_t v44 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v45 = v83;
      goto LABEL_6;
    }
    uint64_t v48 = v40;
    *uint64_t v83 = *v40;
    v83[1] = v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (a1 != a2)
    {
      uint64_t v49 = v41[12];
      uint64_t v50 = (char *)v83 + v49;
      uint64_t v51 = (char *)v40 + v49;
      sub_100097B38((uint64_t)v83 + v49, type metadata accessor for CircularProgressView.ColorStyle);
      type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v50 = *(void *)v51;
        swift_retain();
      }
      else
      {
        *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
        uint64_t v65 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(&v50[*(int *)(v65 + 48)], &v51[*(int *)(v65 + 48)], v81);
        uint64_t v66 = *(int *)(v65 + 64);
        uint64_t v67 = &v50[v66];
        uint64_t v68 = &v51[v66];
        uint64_t v69 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = v40;
    }
    uint64_t v70 = v41[16];
    uint64_t v71 = (char *)v83 + v70;
    long long v72 = (char *)v48 + v70;
    uint64_t v73 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
    uint64_t v74 = v41[20];
    uint64_t v75 = (char *)v83 + v74;
    int v76 = (char *)v48 + v74;
    uint64_t v77 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 24))(v75, v76, v77);
    *(void *)((char *)v83 + v41[24]) = *(void *)((char *)v48 + v41[24]);
  }
LABEL_17:
  *(void *)((char *)v25 + v27[15]) = *(void *)(v26 + v27[15]);
  *(void *)((char *)v25 + v27[16]) = *(void *)(v26 + v27[16]);
  *(void *)((char *)v25 + v27[17]) = *(void *)(v26 + v27[17]);
  *(void *)((char *)v25 + v27[18]) = *(void *)(v26 + v27[18]);
  swift_retain();
  swift_release();
  *(void *)((char *)v25 + v27[19]) = *(void *)(v26 + v27[19]);
  *(void *)((char *)v25 + v27[20]) = *(void *)(v26 + v27[20]);
  *(void *)((char *)v25 + v27[21]) = *(void *)(v26 + v27[21]);
  return a1;
}

uint64_t sub_100095914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v5 = *(_OWORD *)(a2 + 136);
  long long v6 = *(_OWORD *)(a2 + 152);
  long long v7 = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v7;
  *(_OWORD *)(a1 + 152) = v6;
  *(_OWORD *)(a1 + 136) = v5;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1000A4090();
  uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  uint64_t v45 = *v16;
  (*v16)(v13, v14, v15);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  *(void *)(v9 + v11[11]) = *(void *)(v10 + v11[11]);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(_OWORD *)(v9 + v11[13]) = *(_OWORD *)(v10 + v11[13]);
  uint64_t v17 = v11[14];
  uint64_t v18 = (_OWORD *)(v9 + v17);
  uint64_t v19 = (_OWORD *)(v10 + v17);
  uint64_t v20 = sub_100004FDC(&qword_1000CCB90);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = type metadata accessor for CircularProgressView.Content(0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v41 = v15;
    uint64_t v42 = (int *)v20;
    int v43 = v18;
    uint64_t v44 = v21;
    *uint64_t v18 = *v19;
    uint64_t v23 = *(int *)(v20 + 48);
    uint64_t v24 = (_DWORD *)((char *)v18 + v23);
    id v25 = (_DWORD *)((char *)v19 + v23);
    uint64_t v26 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *uint64_t v24 = *v25;
      uint64_t v27 = sub_100004FDC(&qword_1000CDDD0);
      v45((uint64_t)v24 + *(int *)(v27 + 48), (uint64_t)v25 + *(int *)(v27 + 48), v41);
      uint64_t v28 = *(int *)(v27 + 64);
      uint64_t v29 = (char *)v24 + v28;
      uint64_t v30 = (char *)v25 + v28;
      uint64_t v31 = sub_1000A38E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v32 = v42[16];
    uint64_t v33 = (char *)v43 + v32;
    uint64_t v34 = (char *)v19 + v32;
    uint64_t v35 = sub_1000A3E00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    uint64_t v36 = v42[20];
    uint64_t v37 = (char *)v43 + v36;
    uint64_t v38 = (char *)v19 + v36;
    uint64_t v39 = sub_1000A3D80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    *(void *)((char *)v43 + v42[24]) = *(void *)((char *)v19 + v42[24]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v44 + 56))(v43, 0, 1, v42);
  }
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(void *)(v9 + v11[16]) = *(void *)(v10 + v11[16]);
  *(void *)(v9 + v11[17]) = *(void *)(v10 + v11[17]);
  *(void *)(v9 + v11[18]) = *(void *)(v10 + v11[18]);
  *(void *)(v9 + v11[19]) = *(void *)(v10 + v11[19]);
  *(void *)(v9 + v11[20]) = *(void *)(v10 + v11[20]);
  *(void *)(v9 + v11[21]) = *(void *)(v10 + v11[21]);
  return a1;
}

uint64_t sub_100095D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_10000A4F8(v7, v8, v9, v10, v11);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  uint64_t v18 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  uint64_t v19 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v20 = *(int *)(a3 + 28);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  uint64_t v23 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  uint64_t v24 = v23[6];
  uint64_t v25 = v21 + v24;
  uint64_t v26 = v22 + v24;
  uint64_t v27 = sub_1000A4090();
  uint64_t v84 = *(void *)(v27 - 8);
  uint64_t v85 = v27;
  (*(void (**)(uint64_t, uint64_t))(v84 + 40))(v25, v26);
  uint64_t v28 = v23[7];
  uint64_t v29 = (void *)(v21 + v28);
  uint64_t v30 = (uint64_t *)(v22 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(void *)(v21 + v23[8]) = *(void *)(v22 + v23[8]);
  *(void *)(v21 + v23[9]) = *(void *)(v22 + v23[9]);
  swift_release();
  *(void *)(v21 + v23[10]) = *(void *)(v22 + v23[10]);
  *(void *)(v21 + v23[11]) = *(void *)(v22 + v23[11]);
  swift_release();
  *(void *)(v21 + v23[12]) = *(void *)(v22 + v23[12]);
  swift_release();
  uint64_t v33 = v23[13];
  uint64_t v34 = (void *)(v21 + v33);
  uint64_t v35 = (uint64_t *)(v22 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = v23[14];
  uint64_t v39 = v21 + v38;
  uint64_t v40 = (char *)(v22 + v38);
  uint64_t v41 = (int *)sub_100004FDC(&qword_1000CCB90);
  uint64_t v86 = *((void *)v41 - 1);
  uint64_t v89 = v39;
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v86 + 48);
  LODWORD(v39) = v42(v39, 1, v41);
  __src = v40;
  int v43 = v42((uint64_t)v40, 1, v41);
  if (v39)
  {
    if (v43)
    {
      size_t v44 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v45 = (void *)v89;
LABEL_6:
      memcpy(v45, v40, v44);
      goto LABEL_16;
    }
    uint64_t v46 = v40;
    *(_OWORD *)uint64_t v89 = *(_OWORD *)v40;
    uint64_t v47 = v41[12];
    uint64_t v48 = (_DWORD *)(v89 + v47);
    uint64_t v49 = &__src[v47];
    uint64_t v50 = type metadata accessor for CircularProgressView.ColorStyle(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      *uint64_t v48 = *(_DWORD *)v49;
      uint64_t v56 = sub_100004FDC(&qword_1000CDDD0);
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))((char *)v48 + *(int *)(v56 + 48), &v49[*(int *)(v56 + 48)], v85);
      uint64_t v57 = *(int *)(v56 + 64);
      uint64_t v58 = (char *)v48 + v57;
      uint64_t v59 = &v49[v57];
      uint64_t v60 = sub_1000A38E0();
      uint64_t v61 = v58;
      uint64_t v46 = __src;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v61, v59, v60);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v62 = v41[16];
    uint64_t v63 = v89 + v62;
    uint64_t v64 = v41;
    uint64_t v65 = v46;
    uint64_t v66 = &v46[v62];
    uint64_t v67 = sub_1000A3E00();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v63, v66, v67);
    uint64_t v68 = v64[20];
    uint64_t v69 = v89 + v68;
    uint64_t v70 = &v65[v68];
    uint64_t v71 = sub_1000A3D80();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
    *(void *)(v89 + v64[24]) = *(void *)&v65[v64[24]];
    (*(void (**)(uint64_t, void, uint64_t, int *))(v86 + 56))(v89, 0, 1, v64);
  }
  else
  {
    if (v43)
    {
      sub_10000A9C0(v89, &qword_1000CCB90);
      size_t v44 = *(void *)(*(void *)(type metadata accessor for CircularProgressView.Content(0) - 8) + 64);
      uint64_t v45 = (void *)v89;
      goto LABEL_6;
    }
    uint64_t v51 = *((void *)v40 + 1);
    *(void *)uint64_t v89 = *(void *)v40;
    *(void *)(v89 + 8) = v51;
    swift_bridgeObjectRelease();
    if (a1 != a2)
    {
      uint64_t v52 = v41[12];
      uint64_t v53 = (_DWORD *)(v89 + v52);
      uint64_t v54 = &__src[v52];
      sub_100097B38(v89 + v52, type metadata accessor for CircularProgressView.ColorStyle);
      uint64_t v55 = type metadata accessor for CircularProgressView.ColorStyle(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        *uint64_t v53 = *(_DWORD *)v54;
        uint64_t v87 = sub_100004FDC(&qword_1000CDDD0);
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))((char *)v53 + *(int *)(v87 + 48), &v54[*(int *)(v87 + 48)], v85);
        uint64_t v72 = *(int *)(v87 + 64);
        long long v88 = (char *)v53 + v72;
        uint64_t v73 = &v54[v72];
        uint64_t v74 = sub_1000A38E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v88, v73, v74);
        swift_storeEnumTagMultiPayload();
      }
    }
    uint64_t v75 = v41[16];
    uint64_t v76 = v89 + v75;
    uint64_t v77 = &__src[v75];
    uint64_t v78 = sub_1000A3E00();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
    uint64_t v79 = v41[20];
    uint64_t v80 = v89 + v79;
    uint64_t v81 = &__src[v79];
    uint64_t v82 = sub_1000A3D80();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
    *(void *)(v89 + v41[24]) = *(void *)&__src[v41[24]];
  }
LABEL_16:
  *(void *)(v21 + v23[15]) = *(void *)(v22 + v23[15]);
  *(void *)(v21 + v23[16]) = *(void *)(v22 + v23[16]);
  *(void *)(v21 + v23[17]) = *(void *)(v22 + v23[17]);
  *(void *)(v21 + v23[18]) = *(void *)(v22 + v23[18]);
  swift_release();
  *(void *)(v21 + v23[19]) = *(void *)(v22 + v23[19]);
  *(void *)(v21 + v23[20]) = *(void *)(v22 + v23[20]);
  *(void *)(v21 + v23[21]) = *(void *)(v22 + v23[21]);
  return a1;
}

uint64_t sub_100096410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100096424);
}

uint64_t sub_100096424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MediumOneBookView.ViewConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000964D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000964E8);
}

uint64_t sub_1000964E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MediumOneBookView.ViewConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MediumOneBookView(uint64_t a1)
{
  return sub_10000E690(a1, qword_1000CFFF0);
}

uint64_t sub_1000965B0()
{
  uint64_t result = type metadata accessor for MediumOneBookView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10009665C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100096678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v60 = a1;
  uint64_t v3 = sub_1000A3C90();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FDC(&qword_1000D0030);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000D0038);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FDC(&qword_1000D0040);
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004FDC(&qword_1000D0048);
  __chkstk_darwin(v15 - 8);
  uint64_t v55 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_1000A3B60();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v17 = sub_100004FDC(&qword_1000D0050);
  sub_100096B50(v1, (uint64_t)&v8[*(int *)(v17 + 44)]);
  long long v18 = *(_OWORD *)(v1 + 16);
  v88[0] = *(_OWORD *)v1;
  v88[1] = v18;
  char v89 = *(unsigned char *)(v1 + 32);
  sub_10000A95C((uint64_t)v88, (uint64_t)v90, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v90, (void (*)(void, void, void, void, void))sub_100011214);
  double v19 = sub_100009B60();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_100012D8C((uint64_t)v88, (void (*)(void, void, void, void, void))sub_10000A4F8);
  char v26 = sub_1000A3D10();
  sub_10000B1C0((uint64_t)v8, (uint64_t)v11, &qword_1000D0030);
  uint64_t v27 = &v11[*(int *)(v9 + 36)];
  *uint64_t v27 = v26;
  *((double *)v27 + 1) = v19;
  *((void *)v27 + 2) = v21;
  *((void *)v27 + 3) = v23;
  *((void *)v27 + 4) = v25;
  v27[40] = 0;
  sub_10000A9C0((uint64_t)v8, &qword_1000D0030);
  long long v28 = *(_OWORD *)(v2 + 152);
  long long v84 = *(_OWORD *)(v2 + 136);
  long long v85 = v28;
  long long v86 = *(_OWORD *)(v2 + 168);
  char v87 = *(unsigned char *)(v2 + 184);
  long long v29 = *(_OWORD *)(v2 + 120);
  long long v82 = *(_OWORD *)(v2 + 104);
  long long v83 = v29;
  if (sub_10001A23C()) {
    sub_1000A3C80();
  }
  else {
    sub_1000A3C70();
  }
  unint64_t v30 = sub_100097A90();
  uint64_t v56 = v9;
  uint64_t v57 = v14;
  unint64_t v52 = v30;
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v5, v54);
  sub_10000A9C0((uint64_t)v11, &qword_1000D0038);
  long long v31 = *(_OWORD *)(v2 + 136);
  long long v32 = *(_OWORD *)(v2 + 168);
  long long v79 = *(_OWORD *)(v2 + 152);
  long long v80 = v32;
  long long v33 = *(_OWORD *)(v2 + 120);
  long long v76 = *(_OWORD *)(v2 + 104);
  char v81 = *(unsigned char *)(v2 + 184);
  long long v77 = v33;
  long long v78 = v31;
  uint64_t v35 = *(void *)(v2 + 104);
  uint64_t v34 = *(void *)(v2 + 112);
  uint64_t v36 = *(void *)(v2 + 120);
  char v37 = *(unsigned char *)(v2 + 128);
  uint64_t v39 = *(void *)(v2 + 136);
  uint64_t v38 = *(void *)(v2 + 144);
  uint64_t v40 = *(void *)(v2 + 152);
  uint64_t v41 = *(void *)(v2 + 160);
  uint64_t v53 = *(void *)(v2 + 168);
  uint64_t v54 = v34;
  uint64_t v51 = *(void *)(v2 + 176);
  char v42 = *(unsigned char *)(v2 + 184);
  if (sub_10001A23C())
  {
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
  }
  else
  {
    uint64_t v65 = v35;
    uint64_t v66 = v54;
    uint64_t v67 = v36;
    char v68 = v37;
    uint64_t v69 = v39;
    uint64_t v70 = v38;
    uint64_t v71 = v40;
    uint64_t v72 = v41;
    uint64_t v73 = v53;
    uint64_t v74 = v51;
    char v75 = v42;
    uint64_t v43 = sub_10006D98C(0);
    unint64_t v44 = v45;
  }
  uint64_t v63 = v43;
  unint64_t v64 = v44;
  uint64_t v61 = v56;
  unint64_t v62 = v52;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  uint64_t v46 = (uint64_t)v55;
  uint64_t v47 = v59;
  uint64_t v48 = v57;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v47);
  return sub_10000A95C(v46, v60, &qword_1000D0048);
}

uint64_t sub_100096B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v115 = a2;
  uint64_t v3 = sub_100004FDC(&qword_1000D0068);
  uint64_t v111 = *(void *)(v3 - 8);
  uint64_t v112 = v3;
  __chkstk_darwin(v3);
  uint64_t v117 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000D0070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v114 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  long long v110 = (char *)&v99 - v9;
  __chkstk_darwin(v8);
  uint64_t v113 = (uint64_t)&v99 - v10;
  uint64_t v11 = sub_1000A3490();
  uint64_t v101 = *(void *)(v11 - 8);
  uint64_t v102 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v108 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v99 - v14;
  uint64_t v16 = (int *)type metadata accessor for BookCoverView();
  uint64_t v17 = __chkstk_darwin(v16);
  double v19 = (uint64_t *)((char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v107 = (uint64_t)&v99 - v20;
  uint64_t v106 = sub_100004FDC(&qword_1000CCF08);
  uint64_t v21 = __chkstk_darwin(v106);
  uint64_t v109 = (uint64_t)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v105 = (uint64_t)&v99 - v24;
  __chkstk_darwin(v23);
  uint64_t v116 = (uint64_t)&v99 - v25;
  long long v26 = *(_OWORD *)(a1 + 88);
  long long v27 = *(_OWORD *)(a1 + 56);
  v146[0] = *(_OWORD *)(a1 + 40);
  v146[1] = v27;
  v146[2] = *(_OWORD *)(a1 + 72);
  v146[3] = v26;
  unint64_t v28 = *((void *)&v26 + 1);
  unint64_t v99 = v26;
  uint64_t v103 = (_OWORD *)(a1 + 40);
  uint64_t v104 = a1 + 104;
  long long v29 = *(_OWORD *)(a1 + 152);
  long long v142 = *(_OWORD *)(a1 + 136);
  long long v143 = v29;
  long long v144 = *(_OWORD *)(a1 + 168);
  char v145 = *(unsigned char *)(a1 + 184);
  long long v30 = *(_OWORD *)(a1 + 120);
  long long v140 = *(_OWORD *)(a1 + 104);
  long long v141 = v30;
  long long v31 = *(_OWORD *)(a1 + 120);
  long long v134 = *(_OWORD *)(a1 + 104);
  long long v135 = v31;
  long long v32 = v142;
  char v139 = v145;
  long long v137 = v143;
  long long v138 = v144;
  long long v136 = v142;
  sub_100035AB4((uint64_t)v146);
  long long v100 = v15;
  sub_10000886C((uint64_t)&v140, (uint64_t)v15);
  sub_100035AEC((uint64_t)v146);
  char v33 = sub_10001A23C();
  if (v28)
  {
    if (__PAIR128__(v28, v99) == v32) {
      char v34 = 1;
    }
    else {
      char v34 = sub_1000A46A0();
    }
  }
  else
  {
    char v34 = 0;
  }
  *double v19 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))((char *)v19 + v16[5], v100, v102);
  *((unsigned char *)v19 + v16[6]) = v33 & 1;
  uint64_t v35 = (char *)v19 + v16[7];
  long long v36 = v143;
  *((_OWORD *)v35 + 2) = v142;
  *((_OWORD *)v35 + 3) = v36;
  *((_OWORD *)v35 + 4) = v144;
  v35[80] = v145;
  long long v37 = v141;
  *(_OWORD *)uint64_t v35 = v140;
  *((_OWORD *)v35 + 1) = v37;
  *((unsigned char *)v19 + v16[8]) = v34 & 1;
  *((unsigned char *)v19 + v16[9]) = 0;
  uint64_t v38 = v107;
  sub_10001312C((uint64_t)v19, v107);
  sub_100013190((uint64_t)&v140);
  char v39 = sub_1000A3D60();
  long long v40 = *(_OWORD *)(a1 + 16);
  v132[0] = *(_OWORD *)a1;
  v132[1] = v40;
  char v133 = *(unsigned char *)(a1 + 32);
  sub_10000A95C((uint64_t)v132, (uint64_t)v147, &qword_1000CCE68);
  sub_100012D8C((uint64_t)v147, (void (*)(void, void, void, void, void))sub_100011214);
  sub_100009B60();
  sub_100012D8C((uint64_t)v132, (void (*)(void, void, void, void, void))sub_10000A4F8);
  sub_1000A38C0();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v49 = v105;
  sub_1000131F0(v38, v105);
  uint64_t v50 = v49 + *(int *)(v106 + 36);
  *(unsigned char *)uint64_t v50 = v39;
  *(void *)(v50 + 8) = v42;
  *(void *)(v50 + 16) = v44;
  *(void *)(v50 + 24) = v46;
  *(void *)(v50 + 32) = v48;
  *(unsigned char *)(v50 + 40) = 0;
  sub_100097B38(v38, (uint64_t (*)(void))type metadata accessor for BookCoverView);
  sub_10000A95C(v49, v116, &qword_1000CCF08);
  long long v51 = v103[1];
  v131[0] = *v103;
  v131[1] = v51;
  long long v52 = v103[3];
  v131[2] = v103[2];
  v131[3] = v52;
  long long v53 = *(_OWORD *)(v104 + 48);
  v129[2] = *(_OWORD *)(v104 + 32);
  v129[3] = v53;
  v129[4] = *(_OWORD *)(v104 + 64);
  char v130 = *(unsigned char *)(v104 + 80);
  long long v54 = *(_OWORD *)(v104 + 16);
  v129[0] = *(_OWORD *)v104;
  v129[1] = v54;
  sub_100035AB4((uint64_t)v131);
  sub_10000886C((uint64_t)v129, v108);
  uint64_t v55 = sub_100035AEC((uint64_t)v131);
  __chkstk_darwin(v55);
  *(&v99 - 2) = a1;
  sub_100004FDC(&qword_1000D0078);
  sub_10000B17C(&qword_1000D0080, &qword_1000D0078);
  sub_1000A3E10();
  sub_100004FDC(&qword_1000CCF18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A8D50;
  uint64_t v58 = *(void *)(a1 + 104);
  uint64_t v57 = *(void *)(a1 + 112);
  *(void *)(inited + 32) = v58;
  *(void *)(inited + 40) = v57;
  uint64_t v59 = *(void *)(a1 + 120);
  char v60 = *(unsigned char *)(a1 + 128);
  long long v61 = *(_OWORD *)(a1 + 136);
  uint64_t v62 = *(void *)(a1 + 152);
  uint64_t v63 = *(void *)(a1 + 160);
  char v64 = *(unsigned char *)(a1 + 184);
  uint64_t v120 = v58;
  uint64_t v121 = v57;
  uint64_t v122 = v59;
  char v123 = v60;
  long long v124 = v61;
  uint64_t v125 = v62;
  uint64_t v126 = v63;
  long long v127 = *(_OWORD *)(a1 + 168);
  char v128 = v64;
  swift_bridgeObjectRetain();
  uint64_t v66 = sub_10006DB70(0);
  uint64_t v67 = v65;
  *(void *)(inited + 48) = v66;
  *(void *)(inited + 56) = v65;
  if (!v57)
  {
    char v68 = (char *)_swiftEmptyArrayStorage;
    if (!v65) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  char v68 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v70 = *((void *)v68 + 2);
  unint64_t v69 = *((void *)v68 + 3);
  if (v70 >= v69 >> 1) {
    char v68 = sub_100058E74((char *)(v69 > 1), v70 + 1, 1, v68);
  }
  *((void *)v68 + 2) = v70 + 1;
  uint64_t v71 = &v68[16 * v70];
  *((void *)v71 + 4) = v58;
  *((void *)v71 + 5) = v57;
  if (v67)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v68 = sub_100058E74(0, *((void *)v68 + 2) + 1, 1, v68);
    }
    unint64_t v73 = *((void *)v68 + 2);
    unint64_t v72 = *((void *)v68 + 3);
    if (v73 >= v72 >> 1) {
      char v68 = sub_100058E74((char *)(v72 > 1), v73 + 1, 1, v68);
    }
    *((void *)v68 + 2) = v73 + 1;
    uint64_t v74 = &v68[16 * v73];
    *((void *)v74 + 4) = v66;
    *((void *)v74 + 5) = v67;
  }
LABEL_17:
  swift_release();
  uint64_t v75 = *((void *)v68 + 2);
  if (v75)
  {
    long long v76 = (uint64_t *)(v68 + 40);
    long long v77 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v82 = *(v76 - 1);
      uint64_t v81 = *v76;
      uint64_t v83 = HIBYTE(*v76) & 0xF;
      if ((*v76 & 0x2000000000000000) == 0) {
        uint64_t v83 = v82 & 0xFFFFFFFFFFFFLL;
      }
      if (v83)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v118 = v77;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10007AB8C(0, v77[2] + 1, 1);
          long long v77 = v118;
        }
        unint64_t v79 = v77[2];
        unint64_t v78 = v77[3];
        if (v79 >= v78 >> 1)
        {
          sub_10007AB8C(v78 > 1, v79 + 1, 1);
          long long v77 = v118;
        }
        _OWORD v77[2] = v79 + 1;
        long long v80 = &v77[2 * v79];
        uint64_t v80[4] = v82;
        v80[5] = v81;
      }
      v76 += 2;
      --v75;
    }
    while (v75);
  }
  else
  {
    long long v77 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  char v118 = v77;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v85 = sub_1000A4250();
  uint64_t v87 = v86;
  swift_release();
  char v118 = (void *)v85;
  uint64_t v119 = v87;
  sub_10000B17C(&qword_1000D0088, &qword_1000D0068);
  sub_10000A504();
  uint64_t v88 = (uint64_t)v110;
  uint64_t v89 = v112;
  uint64_t v90 = v117;
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v90, v89);
  uint64_t v91 = v113;
  sub_10000A95C(v88, v113, &qword_1000D0070);
  uint64_t v92 = v116;
  uint64_t v93 = v109;
  sub_10000B1C0(v116, v109, &qword_1000CCF08);
  uint64_t v94 = v114;
  sub_10000B1C0(v91, v114, &qword_1000D0070);
  uint64_t v95 = v115;
  sub_10000B1C0(v93, v115, &qword_1000CCF08);
  uint64_t v96 = sub_100004FDC(&qword_1000D0090);
  sub_10000B1C0(v94, v95 + *(int *)(v96 + 48), &qword_1000D0070);
  uint64_t v97 = v95 + *(int *)(v96 + 64);
  *(void *)uint64_t v97 = 0;
  *(unsigned char *)(v97 + 8) = 1;
  sub_10000A9C0(v91, &qword_1000D0070);
  sub_10000A9C0(v92, &qword_1000CCF08);
  sub_10000A9C0(v94, &qword_1000D0070);
  return sub_10000A9C0(v93, &qword_1000CCF08);
}

uint64_t sub_1000975BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1000A3BB0();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_100004FDC(&qword_1000D0098);
  return sub_100097608(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100097608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = sub_100004FDC(&qword_1000D00A0);
  __chkstk_darwin(v64);
  uint64_t v5 = &v56[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004FDC(&qword_1000D00A8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v60 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v65 = &v56[-v9];
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v62 = *(void *)(a1 + 112);
  uint64_t v63 = v10;
  swift_bridgeObjectRetain();
  int v61 = sub_1000A3D30();
  uint64_t v11 = a1 + *(int *)(type metadata accessor for MediumOneBookView(0) + 28);
  uint64_t v12 = (int *)type metadata accessor for MediumOneBookView.ViewConfiguration(0);
  sub_1000A38C0();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  int v59 = sub_1000A3D60();
  sub_1000A38C0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  *((void *)&v58 + 1) = *(void *)(v11 + v12[10]);
  *(void *)&long long v58 = swift_getKeyPath();
  unsigned __int8 v80 = 0;
  unsigned __int8 v79 = 0;
  char v78 = 0;
  *(void *)uint64_t v5 = sub_1000A3B60();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  long long v29 = (uint64_t *)&v5[*(int *)(sub_100004FDC(&qword_1000D00B0) + 44)];
  long long v30 = *(_OWORD *)(a1 + 152);
  long long v74 = *(_OWORD *)(a1 + 136);
  long long v75 = v30;
  long long v76 = *(_OWORD *)(a1 + 168);
  char v77 = *(unsigned char *)(a1 + 184);
  long long v31 = *(_OWORD *)(a1 + 120);
  long long v72 = *(_OWORD *)(a1 + 104);
  long long v73 = v31;
  uint64_t v32 = sub_10006DB70(0);
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(v11 + v12[18]);
  swift_retain();
  unsigned int v36 = sub_1000A3C50();
  uint64_t v37 = *(void *)(v11 + v12[21]);
  uint64_t v38 = v36;
  *long long v29 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  char v39 = (int *)type metadata accessor for LabelView();
  long long v40 = (uint64_t *)((char *)v29 + v39[5]);
  *long long v40 = v32;
  v40[1] = v34;
  *(uint64_t *)((char *)v29 + v39[6]) = v35;
  uint64_t v41 = (char *)v29 + v39[7];
  *(void *)uint64_t v41 = v38;
  *((void *)v41 + 1) = v37;
  *((_WORD *)v41 + 8) = 0;
  long long v42 = *(_OWORD *)(a1 + 104);
  long long v43 = *(_OWORD *)(a1 + 152);
  long long v68 = *(_OWORD *)(a1 + 136);
  long long v69 = v43;
  long long v70 = *(_OWORD *)(a1 + 168);
  char v71 = *(unsigned char *)(a1 + 184);
  long long v44 = *(_OWORD *)(a1 + 120);
  long long v66 = v42;
  long long v67 = v44;
  sub_10001A23C();
  sub_10000B17C(&qword_1000D00B8, &qword_1000D00A0);
  uint64_t v45 = (uint64_t)v60;
  sub_1000A3F10();
  sub_10000A9C0((uint64_t)v5, &qword_1000D00A0);
  uint64_t v46 = v65;
  sub_10000A95C(v45, (uint64_t)v65, &qword_1000D00A8);
  LOBYTE(v37) = v80;
  int v57 = v80;
  LOBYTE(v5) = v79;
  LODWORD(v64) = v79;
  LOBYTE(v32) = v78;
  sub_10000B1C0((uint64_t)v46, v45, &qword_1000D00A8);
  uint64_t v48 = v62;
  uint64_t v47 = v63;
  *(void *)&long long v81 = v63;
  *((void *)&v81 + 1) = v62;
  LOBYTE(v34) = v61;
  LOBYTE(v82) = v61;
  *((void *)&v82 + 1) = v14;
  *(void *)&long long v83 = v16;
  *((void *)&v83 + 1) = v18;
  *(void *)&long long v84 = v20;
  BYTE8(v84) = v37;
  LOBYTE(v38) = v59;
  LOBYTE(v85) = v59;
  *((void *)&v85 + 1) = v22;
  *(void *)&long long v86 = v24;
  *((void *)&v86 + 1) = v26;
  *(void *)&long long v87 = v28;
  BYTE8(v87) = (_BYTE)v5;
  long long v49 = v58;
  long long v88 = v58;
  char v89 = v32;
  *(unsigned char *)(a2 + 128) = v32;
  long long v50 = v84;
  *(_OWORD *)(a2 + 32) = v83;
  *(_OWORD *)(a2 + 48) = v50;
  long long v51 = v88;
  *(_OWORD *)(a2 + 96) = v87;
  *(_OWORD *)(a2 + 112) = v51;
  long long v52 = v86;
  *(_OWORD *)(a2 + 64) = v85;
  *(_OWORD *)(a2 + 80) = v52;
  long long v53 = v82;
  *(_OWORD *)a2 = v81;
  *(_OWORD *)(a2 + 16) = v53;
  uint64_t v54 = sub_100004FDC(&qword_1000D00C0);
  sub_10000B1C0(v45, a2 + *(int *)(v54 + 48), &qword_1000D00A8);
  sub_100097BA8((uint64_t)&v81);
  sub_10000A9C0((uint64_t)v65, &qword_1000D00A8);
  sub_10000A9C0(v45, &qword_1000D00A8);
  v90[0] = v47;
  v90[1] = v48;
  char v91 = v34;
  uint64_t v92 = v14;
  uint64_t v93 = v16;
  uint64_t v94 = v18;
  uint64_t v95 = v20;
  char v96 = v57;
  char v97 = v38;
  uint64_t v98 = v22;
  uint64_t v99 = v24;
  uint64_t v100 = v26;
  uint64_t v101 = v28;
  char v102 = v64;
  long long v103 = v49;
  char v104 = v32;
  return sub_100097BE0((uint64_t)v90);
}

unint64_t sub_100097A90()
{
  unint64_t result = qword_1000D0058;
  if (!qword_1000D0058)
  {
    sub_100008B14(&qword_1000D0038);
    sub_10000B17C(&qword_1000D0060, &qword_1000D0030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0058);
  }
  return result;
}

uint64_t sub_100097B38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097B98@<X0>(uint64_t a1@<X8>)
{
  return sub_1000975BC(*(void *)(v1 + 16), a1);
}

uint64_t sub_100097BA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100097BE0(uint64_t a1)
{
  return a1;
}

unint64_t sub_100097C1C()
{
  unint64_t result = qword_1000D00C8;
  if (!qword_1000D00C8)
  {
    sub_100008B14(&qword_1000D0048);
    sub_100008B14(&qword_1000D0038);
    sub_100097A90();
    swift_getOpaqueTypeConformance2();
    sub_10002F01C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D00C8);
  }
  return result;
}

void *sub_100097CCC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1000A3490();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((void *)v14 + 2) = *((void *)v15 + 2);
    unsigned char v14[24] = v15[24];
    uint64_t v17 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v17;
    uint64_t v18 = (void *)*((void *)v15 + 6);
    uint64_t v19 = (void *)*((void *)v15 + 7);
    *((void *)v14 + 6) = v18;
    *((void *)v14 + 7) = v19;
    uint64_t v20 = *((void *)v15 + 9);
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((void *)v14 + 9) = v20;
    v14[80] = v15[80];
    uint64_t v21 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v18;
    id v23 = v19;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100097EB0(uint64_t a1, uint64_t a2)
{
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000A3490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100097FBC(void *a1, void *a2, int *a3)
{
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A4130();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000A3490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  v12[24] = v13[24];
  uint64_t v15 = *((void *)v13 + 5);
  *((void *)v12 + 4) = *((void *)v13 + 4);
  *((void *)v12 + 5) = v15;
  uint64_t v16 = (void *)*((void *)v13 + 6);
  uint64_t v17 = (void *)*((void *)v13 + 7);
  *((void *)v12 + 6) = v16;
  *((void *)v12 + 7) = v17;
  uint64_t v18 = *((void *)v13 + 9);
  *((void *)v12 + 8) = *((void *)v13 + 8);
  *((void *)v12 + 9) = v18;
  v12[80] = v13[80];
  uint64_t v19 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v16;
  id v21 = v17;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100098150(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCAD8);
    sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000A4130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000A3490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)((char *)a2 + v11);
  *((void *)v12 + 1) = *(void *)((char *)a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)v13 + 2);
  v12[24] = v13[24];
  *((void *)v12 + 2) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  *((void *)v12 + 5) = *((void *)v13 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)*((void *)v12 + 6);
  uint64_t v16 = (void *)*((void *)v13 + 6);
  *((void *)v12 + 6) = v16;
  id v17 = v16;

  uint64_t v18 = (void *)*((void *)v13 + 7);
  uint64_t v19 = (void *)*((void *)v12 + 7);
  *((void *)v12 + 7) = v18;
  id v20 = v18;

  *((void *)v12 + 8) = *((void *)v13 + 8);
  *((void *)v12 + 9) = *((void *)v13 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[80] = v13[80];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

char *sub_100098348(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000A4130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000A3490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[80] = v14[80];
  long long v16 = *((_OWORD *)v14 + 4);
  long long v17 = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 4) = v16;
  *((_OWORD *)v13 + 2) = v17;
  uint64_t v18 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v18] = a2[v18];
  return a1;
}

char *sub_1000984A8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000A9C0((uint64_t)a1, &qword_1000CCAD8);
    uint64_t v6 = sub_100004FDC(&qword_1000CCAD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000A4130();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000A3490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)&a2[v12];
  uint64_t v16 = *(void *)&a2[v12 + 8];
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  swift_bridgeObjectRelease();
  *((void *)v13 + 2) = *((void *)v14 + 2);
  v13[24] = v14[24];
  uint64_t v17 = *((void *)v14 + 5);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)*((void *)v13 + 6);
  *((void *)v13 + 6) = *((void *)v14 + 6);

  uint64_t v19 = (void *)*((void *)v13 + 7);
  *((void *)v13 + 7) = *((void *)v14 + 7);

  uint64_t v20 = *((void *)v14 + 9);
  *((void *)v13 + 8) = *((void *)v14 + 8);
  *((void *)v13 + 9) = v20;
  swift_bridgeObjectRelease();
  v13[80] = v14[80];
  uint64_t v21 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v21] = a2[v21];
  return a1;
}

uint64_t sub_100098668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009867C);
}

uint64_t sub_10009867C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000A3490();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 40);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100098798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000987AC);
}

uint64_t sub_1000987AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FDC(&qword_1000CCAF8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1000A3490();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 40) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BookCoverView()
{
  uint64_t result = qword_1000D0128;
  if (!qword_1000D0128) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100098910()
{
  sub_10002B5D8();
  if (v0 <= 0x3F)
  {
    sub_1000A3490();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000989F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100098A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_1000A3490();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FDC(&qword_1000D01D8);
  uint64_t v48 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000A3C20();
  uint64_t v50 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004FDC(&qword_1000D01B8);
  uint64_t v49 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004FDC(&qword_1000D01E0);
  uint64_t v52 = *(void *)(v58 - 8);
  uint64_t v13 = __chkstk_darwin(v58);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v51 = (char *)&v47 - v16;
  uint64_t v59 = sub_100004FDC(&qword_1000D01E8);
  __chkstk_darwin(v59);
  uint64_t v61 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004FDC(&qword_1000D01F0);
  __chkstk_darwin(v53);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004FDC(&qword_1000D01A0);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004FDC(&qword_1000D01B0);
  __chkstk_darwin(v55);
  id v22 = (uint64_t *)((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v23 = sub_10009957C();
  if (v23)
  {
    if (v23 == 1)
    {
      uint64_t v24 = a1 + *(int *)(type metadata accessor for BookCoverView() + 28);
      uint64_t v25 = *(void *)(v24 + 32);
      uint64_t v26 = *(void *)(v24 + 40);
      swift_bridgeObjectRetain();
      sub_10002077C(v25, v26, 0, 0, 0, 0, 0, 0, v68, 1u);
      uint64_t v75 = v68[0];
      uint64_t v76 = v68[1];
      long long v78 = v70;
      long long v79 = v71;
      long long v80 = v72;
      uint64_t v77 = v69;
      uint64_t v81 = v73;
      long long v82 = v74;
      uint64_t v64 = sub_10001FC1C(1, (uint64_t)&v75);
      uint64_t v65 = v27;
      uint64_t v66 = v28;
      __chkstk_darwin(v64);
      sub_100004FDC(&qword_1000D0238);
      sub_10009DEB8();
      sub_10001F338();
      sub_1000A4030();
      sub_1000A3C10();
      uint64_t v29 = sub_10000B17C(&qword_1000D01C0, &qword_1000D01B8);
      uint64_t v30 = sub_10009E424(&qword_1000D01C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
      uint64_t v31 = v54;
      uint64_t v32 = v57;
      sub_1000A3ED0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v32);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v31);
      uint64_t v33 = v52;
      uint64_t v34 = v51;
      uint64_t v35 = v58;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v15, v58);
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v19, v34, v35);
      swift_storeEnumTagMultiPayload();
      sub_10000B17C(&qword_1000D01A8, &qword_1000D01B0);
      uint64_t v64 = v31;
      uint64_t v65 = v32;
      uint64_t v66 = v29;
      uint64_t v67 = v30;
      swift_getOpaqueTypeConformance2();
      uint64_t v36 = (uint64_t)v56;
      sub_1000A3C00();
      sub_10000B1C0(v36, v61, &qword_1000D01A0);
      swift_storeEnumTagMultiPayload();
      sub_10009DC18();
      sub_10000B17C(&qword_1000D01D0, &qword_1000D01D8);
      sub_1000A3C00();
      sub_10000A9C0(v36, &qword_1000D01A0);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    }
    else
    {
      uint64_t v43 = type metadata accessor for BookCoverView();
      uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1 + *(int *)(v43 + 20), v3);
      __chkstk_darwin(v44);
      sub_100004FDC(&qword_1000D01F8);
      sub_10009DD70();
      sub_1000A3E10();
      uint64_t v45 = v48;
      uint64_t v46 = v62;
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v61, v8, v62);
      swift_storeEnumTagMultiPayload();
      sub_10009DC18();
      sub_10000B17C(&qword_1000D01D0, &qword_1000D01D8);
      sub_1000A3C00();
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v8, v46);
    }
  }
  else
  {
    *id v22 = sub_1000A4070();
    v22[1] = v38;
    uint64_t v39 = sub_100004FDC(&qword_1000D0258);
    sub_100099828(a1, (uint64_t)v22 + *(int *)(v39 + 44));
    sub_10000B1C0((uint64_t)v22, (uint64_t)v19, &qword_1000D01B0);
    swift_storeEnumTagMultiPayload();
    sub_10000B17C(&qword_1000D01A8, &qword_1000D01B0);
    uint64_t v40 = sub_10000B17C(&qword_1000D01C0, &qword_1000D01B8);
    uint64_t v41 = sub_10009E424(&qword_1000D01C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    uint64_t v75 = v54;
    uint64_t v76 = v57;
    uint64_t v77 = v40;
    *(void *)&long long v78 = v41;
    swift_getOpaqueTypeConformance2();
    uint64_t v42 = (uint64_t)v56;
    sub_1000A3C00();
    sub_10000B1C0(v42, v61, &qword_1000D01A0);
    swift_storeEnumTagMultiPayload();
    sub_10009DC18();
    sub_10000B17C(&qword_1000D01D0, &qword_1000D01D8);
    sub_1000A3C00();
    sub_10000A9C0(v42, &qword_1000D01A0);
    return sub_10000A9C0((uint64_t)v22, &qword_1000D01B0);
  }
}

uint64_t sub_10009957C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for BookCoverView() + 28);
  long long v23 = *(_OWORD *)(v1 + 48);
  long long v24 = *(_OWORD *)(v1 + 64);
  char v25 = *(unsigned char *)(v1 + 80);
  id v26 = (id)*((void *)&v23 + 1);
  uint64_t v2 = sub_1000A4340();
  uint64_t v4 = v3;
  if (v2 == sub_1000A4340() && v4 == v5)
  {
    id v19 = *((id *)&v23 + 1);
    sub_10001A4C0(&v26);
    swift_bridgeObjectRelease_n();
    sub_10001A4EC(&v26);
    goto LABEL_15;
  }
  char v7 = sub_1000A46A0();
  id v8 = *((id *)&v23 + 1);
  sub_10001A4C0(&v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001A4EC(&v26);
  if (v7)
  {
LABEL_15:
    sub_10001A4EC(&v26);
    return 1;
  }
  uint64_t v9 = sub_1000A4340();
  uint64_t v11 = v10;
  if (v9 == sub_1000A4340() && v11 == v12)
  {
    sub_10001A4C0(&v26);
    swift_bridgeObjectRelease_n();
    sub_10001A4EC(&v26);
    goto LABEL_18;
  }
  char v14 = sub_1000A46A0();
  sub_10001A4C0(&v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001A4EC(&v26);
  if (v14)
  {
LABEL_18:
    sub_10001A4EC(&v26);
    return 0;
  }
  uint64_t v15 = sub_1000A4340();
  uint64_t v17 = v16;
  if (v15 != sub_1000A4340() || v17 != v18)
  {
    char v21 = sub_1000A46A0();
    sub_10001A4C0(&v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001A4EC(&v26);
    if (v21) {
      goto LABEL_20;
    }
    if ((sub_10001A23C() & 1) == 0)
    {
      sub_10000A95C((uint64_t)&v24, (uint64_t)v27, &qword_1000D03D8);
      sub_10000A95C((uint64_t)v27, (uint64_t)v28, &qword_1000D03D8);
      if (v28[1])
      {
        v29._countAndFlagsBits = 1717858350;
        v29._object = (void *)0xE400000000000000;
        BOOL v22 = sub_1000A43A0(v29);
        sub_10001A4EC(&v26);
        if (v22) {
          return 2;
        }
        return 1;
      }
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  sub_10001A4C0(&v26);
  swift_bridgeObjectRelease_n();
  sub_10001A4EC(&v26);
LABEL_20:
  sub_10001A4EC(&v26);
  return 2;
}

uint64_t sub_100099828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = type metadata accessor for BookCoverView();
  uint64_t v70 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v71 = v4;
  uint64_t v72 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004FDC(&qword_1000D0260);
  uint64_t v5 = __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  long long v74 = (char *)&v66 - v8;
  __chkstk_darwin(v7);
  uint64_t v75 = (uint64_t)&v66 - v9;
  uint64_t v77 = sub_100004FDC(&qword_1000D0268);
  __chkstk_darwin(v77);
  uint64_t v78 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000A3880();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FDC(&qword_1000D0270);
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v68 = (char *)&v66 - v17;
  uint64_t v18 = sub_1000A4130();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004FDC(&qword_1000D0278);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  id v26 = (char *)&v66 - v25;
  uint64_t v81 = v3;
  uint64_t v27 = a1 + *(int *)(v3 + 28);
  long long v28 = *(_OWORD *)(v27 + 48);
  long long v88 = *(_OWORD *)(v27 + 32);
  long long v89 = v28;
  long long v90 = *(_OWORD *)(v27 + 64);
  char v91 = *(unsigned char *)(v27 + 80);
  long long v29 = *(_OWORD *)(v27 + 16);
  long long v86 = *(_OWORD *)v27;
  long long v87 = v29;
  sub_100009D80((uint64_t)v21);
  uint64_t v30 = a1;
  sub_10009957C();
  id v31 = sub_10006F5EC();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (v31)
  {
    long long v68 = v26;
    uint64_t v69 = v13;
    uint64_t v32 = v72;
    sub_1000131F0(v30, v72);
    unint64_t v33 = (*(unsigned __int8 *)(v70 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v31;
    sub_10001312C(v32, v34 + v33);
    id v35 = v31;
    [v35 size];
    long long v82 = sub_10009E008;
    uint64_t v83 = v34;
    double v84 = v36 / v37;
    __int16 v85 = 0;
    uint64_t v38 = v81;
    sub_100004FDC(&qword_1000D0210);
    sub_10009DE10();
    uint64_t v39 = (uint64_t)v73;
    sub_1000A3F10();
    swift_release();
    sub_100004FDC(&qword_1000CCF18);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000A8E80;
    uint64_t v42 = *(void *)v27;
    uint64_t v41 = *(void *)(v27 + 8);
    *(void *)(inited + 32) = *(void *)v27;
    *(void *)(inited + 40) = v41;
    if (v41)
    {
      uint64_t v72 = v30;
      id v43 = v35;
      swift_bridgeObjectRetain_n();
      uint64_t v44 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v46 = *((void *)v44 + 2);
      unint64_t v45 = *((void *)v44 + 3);
      if (v46 >= v45 >> 1) {
        uint64_t v44 = sub_100058E74((char *)(v45 > 1), v46 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v46 + 1;
      uint64_t v47 = &v44[16 * v46];
      *((void *)v47 + 4) = v42;
      *((void *)v47 + 5) = v41;
      id v35 = v43;
      uint64_t v30 = v72;
      uint64_t v38 = v81;
    }
    else
    {
      uint64_t v44 = (char *)_swiftEmptyArrayStorage;
    }
    swift_release();
    long long v82 = (uint64_t (*)())v44;
    sub_100004FDC(&qword_1000CCF20);
    sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
    uint64_t v53 = sub_1000A4250();
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    long long v82 = (uint64_t (*)())v53;
    uint64_t v83 = v55;
    sub_10000A504();
    uint64_t v56 = (uint64_t)v74;
    sub_1000A39A0();
    swift_bridgeObjectRelease();
    sub_10000A9C0(v39, &qword_1000D0260);
    uint64_t v57 = v75;
    sub_10000A95C(v56, v75, &qword_1000D0260);
    sub_10000B1C0(v57, v78, &qword_1000D0260);
    swift_storeEnumTagMultiPayload();
    sub_10009DF58();
    sub_10000B17C(&qword_1000D0288, &qword_1000D0270);
    uint64_t v52 = (uint64_t)v68;
    sub_1000A3C00();

    sub_10000A9C0(v57, &qword_1000D0260);
    uint64_t v51 = v79;
  }
  else
  {
    sub_1000A3870();
    uint64_t v48 = v30;
    sub_10009A194((uint64_t)v12, (uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v67);
    uint64_t v49 = v69;
    uint64_t v50 = v68;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v16, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v78, v50, v13);
    swift_storeEnumTagMultiPayload();
    sub_10009DF58();
    sub_10000B17C(&qword_1000D0288, &qword_1000D0270);
    sub_1000A3C00();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v13);
    uint64_t v51 = v79;
    uint64_t v30 = v48;
    uint64_t v38 = v81;
    uint64_t v52 = (uint64_t)v26;
  }
  uint64_t v59 = *(void *)(v27 + 32);
  uint64_t v58 = *(void *)(v27 + 40);
  char v60 = *(unsigned char *)(v30 + *(int *)(v38 + 32));
  uint64_t v62 = *(void *)v27;
  uint64_t v61 = *(void *)(v27 + 8);
  uint64_t v63 = v80;
  sub_10000B1C0(v52, v80, &qword_1000D0278);
  sub_10000B1C0(v63, v51, &qword_1000D0278);
  uint64_t v64 = v51 + *(int *)(sub_100004FDC(&qword_1000D0290) + 48);
  *(void *)uint64_t v64 = v59;
  *(void *)(v64 + 8) = v58;
  *(unsigned char *)(v64 + 16) = v60;
  *(unsigned char *)(v64 + 17) = 1;
  *(void *)(v64 + 24) = v62;
  *(void *)(v64 + 32) = v61;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_10000A9C0(v52, &qword_1000D0278);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10000A9C0(v63, &qword_1000D0278);
}

uint64_t sub_10009A194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v16 = sub_1000A3880();
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3410();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A3490();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_10009957C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_1000A3480();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v17, v16);
  sub_1000A3F70();
  sub_1000A3F80();
  swift_release();
  sub_10009E424(&qword_1000D03B8, (void (*)(uint64_t))&type metadata accessor for AudiobookCoverEffect);
  return sub_1000A3840();
}

uint64_t sub_10009A498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v16 = sub_1000A3860();
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3410();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A3490();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_10009957C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_1000A3480();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v17, v16);
  sub_1000A3F70();
  sub_1000A3F80();
  swift_release();
  sub_10009E424(&qword_1000D03B0, (void (*)(uint64_t))&type metadata accessor for BookCoverEffect);
  return sub_1000A3840();
}

uint64_t sub_10009A79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v16 = sub_1000A38A0();
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A3410();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000CCB30);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A3490();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_10009957C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_1000A3480();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v17, v16);
  sub_1000A3F70();
  sub_1000A3F80();
  swift_release();
  sub_10009E424(&qword_1000D0348, (void (*)(uint64_t))&type metadata accessor for LegacyPDFCoverEffect);
  return sub_1000A3840();
}

void sub_10009AAA0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for BookCoverView();
  uint64_t v4 = v3 - 8;
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v35 + 64);
  __chkstk_darwin(v3);
  uint64_t v36 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100004FDC(&qword_1000D03C8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A3860();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004FDC(&qword_1000D0250);
  uint64_t v34 = *(void *)(v38 - 8);
  uint64_t v11 = __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = sub_1000A4130();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1 + *(int *)(v4 + 36);
  long long v21 = *(_OWORD *)(v20 + 48);
  long long v42 = *(_OWORD *)(v20 + 32);
  long long v43 = v21;
  long long v44 = *(_OWORD *)(v20 + 64);
  char v45 = *(unsigned char *)(v20 + 80);
  long long v22 = *(_OWORD *)(v20 + 16);
  long long v40 = *(_OWORD *)v20;
  long long v41 = v22;
  sub_100009D80((uint64_t)v19);
  sub_10009957C();
  id v23 = sub_10006F5EC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v23)
  {
    uint64_t v24 = v36;
    sub_1000131F0(a1, v36);
    unint64_t v25 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    sub_10001312C(v24, v26 + v25);
    id v27 = v23;
    [v27 size];
    *(void *)uint64_t v7 = sub_10009E008;
    *((void *)v7 + 1) = v26;
    *((double *)v7 + 2) = v28 / v29;
    *((_WORD *)v7 + 12) = 0;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_100004FDC(&qword_1000D0210);
    sub_10009DE10();
    sub_10000B17C(&qword_1000D0248, &qword_1000D0250);
    sub_1000A3C00();
    swift_release();
  }
  else
  {
    sub_1000A3850();
    sub_10009A498((uint64_t)v10, (uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
    uint64_t v30 = v34;
    uint64_t v31 = v38;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v15, v13, v38);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v7, v15, v31);
    swift_storeEnumTagMultiPayload();
    sub_100004FDC(&qword_1000D0210);
    sub_10009DE10();
    sub_10000B17C(&qword_1000D0248, &qword_1000D0250);
    sub_1000A3C00();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
  }
}

void sub_10009AFA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for BookCoverView();
  uint64_t v4 = v3 - 8;
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v35 + 64);
  __chkstk_darwin(v3);
  uint64_t v36 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100004FDC(&qword_1000D03D0);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A38A0();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004FDC(&qword_1000D0230);
  uint64_t v34 = *(void *)(v38 - 8);
  uint64_t v11 = __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = sub_1000A4130();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1 + *(int *)(v4 + 36);
  long long v21 = *(_OWORD *)(v20 + 48);
  long long v42 = *(_OWORD *)(v20 + 32);
  long long v43 = v21;
  long long v44 = *(_OWORD *)(v20 + 64);
  char v45 = *(unsigned char *)(v20 + 80);
  long long v22 = *(_OWORD *)(v20 + 16);
  long long v40 = *(_OWORD *)v20;
  long long v41 = v22;
  sub_100009D80((uint64_t)v19);
  sub_10009957C();
  id v23 = sub_10006F5EC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v23)
  {
    uint64_t v24 = v36;
    sub_1000131F0(a1, v36);
    unint64_t v25 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    sub_10001312C(v24, v26 + v25);
    id v27 = v23;
    [v27 size];
    *(void *)uint64_t v7 = sub_10009E008;
    *((void *)v7 + 1) = v26;
    *((double *)v7 + 2) = v28 / v29;
    *((_WORD *)v7 + 12) = 0;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_100004FDC(&qword_1000D0210);
    sub_10009DE10();
    sub_10000B17C(&qword_1000D0228, &qword_1000D0230);
    sub_1000A3C00();
    swift_release();
  }
  else
  {
    sub_1000A3890();
    sub_10009A79C((uint64_t)v10, (uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
    uint64_t v30 = v34;
    uint64_t v31 = v38;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v15, v13, v38);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v7, v15, v31);
    swift_storeEnumTagMultiPayload();
    sub_100004FDC(&qword_1000D0210);
    sub_10009DE10();
    sub_10000B17C(&qword_1000D0228, &qword_1000D0230);
    sub_1000A3C00();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
  }
}

uint64_t sub_10009B4A0()
{
  uint64_t v1 = sub_1000A3600();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_1000A42F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v40 = (char *)&v37 - v12;
  uint64_t v13 = type metadata accessor for BookCoverView();
  uint64_t v41 = 0;
  uint64_t v42 = v9;
  uint64_t v14 = 0;
  if (*(unsigned char *)(v0 + *(int *)(v13 + 24)) == 1)
  {
    uint64_t v15 = v40;
    sub_1000A4280();
    sub_1000A35D0();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v39, v15, v8);
    type metadata accessor for BundleFinder();
    uint64_t v16 = v2;
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v18 = [self bundleForClass:ObjCClassFromMetadata];
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v5, v7, v1);
    uint64_t v9 = v42;
    uint64_t v2 = v16;
    uint64_t v41 = sub_1000A4360();
    uint64_t v14 = v19;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  uint64_t v20 = (uint64_t *)(v0 + *(int *)(v13 + 28));
  uint64_t v21 = v20[1];
  if (v21)
  {
    uint64_t v38 = v5;
    uint64_t v22 = v1;
    uint64_t v23 = *v20;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_100058E74(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v26 = *((void *)v24 + 2);
    unint64_t v25 = *((void *)v24 + 3);
    if (v26 >= v25 >> 1) {
      uint64_t v24 = sub_100058E74((char *)(v25 > 1), v26 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v26 + 1;
    id v27 = &v24[16 * v26];
    *((void *)v27 + 4) = v23;
    *((void *)v27 + 5) = v21;
    uint64_t v1 = v22;
    uint64_t v9 = v42;
    uint64_t v5 = v38;
    if (v14) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
    if (v14)
    {
LABEL_7:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_100058E74(0, *((void *)v24 + 2) + 1, 1, v24);
      }
      unint64_t v29 = *((void *)v24 + 2);
      unint64_t v28 = *((void *)v24 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v24 = sub_100058E74((char *)(v28 > 1), v29 + 1, 1, v24);
      }
      *((void *)v24 + 2) = v29 + 1;
      uint64_t v30 = &v24[16 * v29];
      *((void *)v30 + 4) = v41;
      *((void *)v30 + 5) = v14;
      goto LABEL_14;
    }
  }
  if (!*((void *)v24 + 2))
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = v40;
    sub_1000A4280();
    sub_1000A35D0();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v39, v33, v8);
    type metadata accessor for BundleFinder();
    uint64_t v34 = v2;
    uint64_t v35 = swift_getObjCClassFromMetadata();
    id v36 = [self bundleForClass:v35];
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v5, v7, v1);
    uint64_t v31 = sub_1000A4360();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
    return v31;
  }
LABEL_14:
  long long v43 = v24;
  sub_100004FDC(&qword_1000CCF20);
  sub_10000B17C(&qword_1000CCF28, &qword_1000CCF20);
  uint64_t v31 = sub_1000A4250();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_10009B9FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v46 = a1;
  uint64_t v56 = a4;
  uint64_t v5 = sub_1000A3990();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A4130();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FDC(&qword_1000D0298);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000A3FC0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FDC(&qword_1000D02A0);
  uint64_t v44 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  __chkstk_darwin(v16);
  id v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004FDC(&qword_1000D02A8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004FDC(&qword_1000D02B0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004FDC(&qword_1000D02B8) - 8;
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A3920();
  [a2 size];
  id v43 = a2;
  sub_1000A3FA0();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Image.ResizingMode.stretch(_:), v12);
  sub_1000A4010();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1000A4140();
  uint64_t v27 = sub_1000A4150();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 0, 1, v27);
  sub_1000A4000();
  swift_release();
  sub_10000A9C0((uint64_t)v11, &qword_1000D0298);
  uint64_t v28 = v52;
  LODWORD(v15) = sub_10009957C();
  uint64_t v29 = v47;
  sub_100009D80(v47);
  sub_10009C05C((int)v15, v29, (uint64_t)v21);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v29, v51);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v45);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = type metadata accessor for BookCoverView();
  uint64_t v33 = v53;
  uint64_t v32 = v54;
  if (*(unsigned char *)(v28 + *(int *)(v31 + 28) + 80)) {
    uint64_t v34 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  }
  else {
    uint64_t v34 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v35 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *v34, v55);
  id v36 = (uint64_t *)&v25[*(int *)(v23 + 44)];
  uint64_t v37 = sub_100004FDC(&qword_1000D02C0);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v35);
  *id v36 = KeyPath;
  sub_10000B1C0((uint64_t)v21, (uint64_t)v25, &qword_1000D02A8);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v35);
  sub_10000A9C0((uint64_t)v21, &qword_1000D02A8);
  [v43 size];
  sub_1000A3920();
  sub_1000A4070();
  sub_1000A3910();
  uint64_t v38 = v48;
  sub_10000B1C0((uint64_t)v25, v48, &qword_1000D02B0);
  uint64_t v39 = (_OWORD *)(v38 + *(int *)(v49 + 44));
  long long v40 = v58;
  *uint64_t v39 = v57;
  v39[1] = v40;
  void v39[2] = v59;
  sub_10000A9C0((uint64_t)v25, &qword_1000D02B0);
  return sub_10000A95C(v38, v56, &qword_1000D02B8);
}

uint64_t sub_10009C05C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v151 = a1;
  uint64_t v157 = a3;
  uint64_t v130 = sub_100004FDC(&qword_1000D02C8);
  uint64_t v4 = __chkstk_darwin(v130);
  uint64_t v112 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v113 = (uint64_t)&v107 - v6;
  uint64_t v118 = sub_100004FDC(&qword_1000D02D0);
  uint64_t v7 = __chkstk_darwin(v118);
  long long v110 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v114 = (uint64_t)&v107 - v9;
  uint64_t v127 = sub_100004FDC(&qword_1000D02D8);
  __chkstk_darwin(v127);
  uint64_t v129 = (uint64_t)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100004FDC(&qword_1000D02E0);
  __chkstk_darwin(v115);
  uint64_t v117 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100004FDC(&qword_1000D02E8);
  __chkstk_darwin(v128);
  uint64_t v119 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100004FDC(&qword_1000D02F0);
  uint64_t v13 = __chkstk_darwin(v116);
  uint64_t v109 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v111 = (uint64_t)&v107 - v15;
  uint64_t v156 = sub_100004FDC(&qword_1000D02F8);
  __chkstk_darwin(v156);
  uint64_t v126 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100004FDC(&qword_1000D0300);
  __chkstk_darwin(v154);
  uint64_t v155 = (uint64_t)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1000A38A0();
  uint64_t v135 = *(void *)(v150 - 8);
  uint64_t v18 = __chkstk_darwin(v150);
  uint64_t v108 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v134 = (char *)&v107 - v20;
  uint64_t v149 = sub_100004FDC(&qword_1000D0308);
  uint64_t v124 = *(void *)(v149 - 8);
  uint64_t v21 = __chkstk_darwin(v149);
  uint64_t v122 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v123 = (char *)&v107 - v23;
  uint64_t v144 = sub_1000A3880();
  uint64_t v133 = *(void *)(v144 - 8);
  uint64_t v24 = __chkstk_darwin(v144);
  uint64_t v107 = (char *)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v132 = (char *)&v107 - v26;
  uint64_t v142 = sub_100004FDC(&qword_1000D0310);
  uint64_t v125 = *(void *)(v142 - 8);
  uint64_t v27 = __chkstk_darwin(v142);
  uint64_t v120 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  long long v138 = (char *)&v107 - v29;
  uint64_t v145 = sub_100004FDC(&qword_1000D0318);
  __chkstk_darwin(v145);
  uint64_t v148 = (uint64_t)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100004FDC(&qword_1000D0320);
  __chkstk_darwin(v137);
  char v139 = (char *)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100004FDC(&qword_1000D0328);
  __chkstk_darwin(v147);
  long long v141 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1000A3860();
  uint64_t v131 = *(void *)(v143 - 8);
  uint64_t v33 = __chkstk_darwin(v143);
  uint64_t v35 = (char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v107 - v36;
  uint64_t v140 = sub_100004FDC(&qword_1000D0330);
  uint64_t v121 = *(void *)(v140 - 8);
  uint64_t v38 = __chkstk_darwin(v140);
  long long v40 = (char *)&v107 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  long long v136 = (char *)&v107 - v41;
  uint64_t v153 = sub_100004FDC(&qword_1000D0338);
  __chkstk_darwin(v153);
  uint64_t v146 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000A4130();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v107 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v107 - v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))((char *)&v107 - v48, a2, v43);
  sub_1000A4110();
  sub_10009E424(&qword_1000D0340, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v50 = sub_1000A4270();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v44 + 8);
  v51(v47, v43);
  if ((v50 & 1) == 0)
  {
    sub_1000A4100();
    char v52 = sub_1000A4270();
    v51(v47, v43);
    v51(v49, v43);
    if (v52) {
      goto LABEL_4;
    }
    if ((_BYTE)v151)
    {
      uint64_t v63 = (uint64_t)v126;
      if (v151 != 1)
      {
        uint64_t v98 = v134;
        sub_1000A3890();
        uint64_t v99 = v135;
        uint64_t v100 = v150;
        (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v108, v98, v150);
        uint64_t v101 = (uint64_t)v112;
        sub_10009E424(&qword_1000D0348, (void (*)(uint64_t))&type metadata accessor for LegacyPDFCoverEffect);
        sub_1000A38B0();
        uint64_t v102 = sub_100004FDC(&qword_1000D02A0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v101, v152, v102);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
        long long v103 = &qword_1000D02C8;
        uint64_t v104 = v113;
        sub_10000A95C(v101, v113, &qword_1000D02C8);
        sub_10000B1C0(v104, v129, &qword_1000D02C8);
        swift_storeEnumTagMultiPayload();
        sub_10009E014();
        sub_10009E0D0(&qword_1000D0388, &qword_1000D02C8, &qword_1000D0390, &qword_1000D0398);
        sub_1000A3C00();
        uint64_t v105 = v104;
LABEL_16:
        sub_10000A9C0(v105, v103);
        uint64_t v92 = &qword_1000D02F8;
        sub_10000B1C0(v63, v155, &qword_1000D02F8);
        goto LABEL_17;
      }
      sub_1000A3850();
      uint64_t v64 = v131;
      uint64_t v65 = v143;
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v35, v37, v143);
      uint64_t v66 = (uint64_t)v109;
      sub_10009E424(&qword_1000D03B0, (void (*)(uint64_t))&type metadata accessor for BookCoverEffect);
      sub_1000A38B0();
      uint64_t v67 = sub_100004FDC(&qword_1000D02A0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v66, v152, v67);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v65);
      long long v103 = &qword_1000D02F0;
      uint64_t v68 = v111;
      sub_10000A95C(v66, v111, &qword_1000D02F0);
      sub_10000B1C0(v68, v117, &qword_1000D02F0);
      swift_storeEnumTagMultiPayload();
      sub_10009E0D0(&qword_1000D0358, &qword_1000D02F0, &qword_1000D0360, &qword_1000D0368);
      sub_10009E0D0(&qword_1000D0370, &qword_1000D02D0, &qword_1000D0378, &qword_1000D0380);
      uint64_t v69 = (uint64_t)v119;
      sub_1000A3C00();
      sub_10000B1C0(v69, v129, &qword_1000D02E8);
      swift_storeEnumTagMultiPayload();
      sub_10009E014();
      sub_10009E0D0(&qword_1000D0388, &qword_1000D02C8, &qword_1000D0390, &qword_1000D0398);
    }
    else
    {
      uint64_t v93 = v132;
      sub_1000A3870();
      uint64_t v94 = v133;
      uint64_t v95 = v144;
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v107, v93, v144);
      uint64_t v96 = (uint64_t)v110;
      sub_10009E424(&qword_1000D03B8, (void (*)(uint64_t))&type metadata accessor for AudiobookCoverEffect);
      sub_1000A38B0();
      uint64_t v97 = sub_100004FDC(&qword_1000D02A0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v96, v152, v97);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v95);
      long long v103 = &qword_1000D02D0;
      uint64_t v68 = v114;
      sub_10000A95C(v96, v114, &qword_1000D02D0);
      sub_10000B1C0(v68, v117, &qword_1000D02D0);
      swift_storeEnumTagMultiPayload();
      sub_10009E0D0(&qword_1000D0358, &qword_1000D02F0, &qword_1000D0360, &qword_1000D0368);
      sub_10009E0D0(&qword_1000D0370, &qword_1000D02D0, &qword_1000D0378, &qword_1000D0380);
      uint64_t v69 = (uint64_t)v119;
      sub_1000A3C00();
      sub_10000B1C0(v69, v129, &qword_1000D02E8);
      swift_storeEnumTagMultiPayload();
      sub_10009E014();
      sub_10009E0D0(&qword_1000D0388, &qword_1000D02C8, &qword_1000D0390, &qword_1000D0398);
      uint64_t v63 = (uint64_t)v126;
    }
    sub_1000A3C00();
    sub_10000A9C0(v69, &qword_1000D02E8);
    uint64_t v105 = v68;
    goto LABEL_16;
  }
  v51(v49, v43);
LABEL_4:
  if ((_BYTE)v151)
  {
    if (v151 == 1)
    {
      sub_1000A3850();
      uint64_t v53 = sub_100004FDC(&qword_1000D02A0);
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v55 = sub_10009E424(&qword_1000D03B0, (void (*)(uint64_t))&type metadata accessor for BookCoverEffect);
      uint64_t v56 = v143;
      sub_1000A3E60();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v37, v56);
      uint64_t v57 = v121;
      long long v58 = v136;
      uint64_t v59 = v140;
      (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v136, v40, v140);
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v139, v58, v59);
      swift_storeEnumTagMultiPayload();
      uint64_t v158 = v53;
      uint64_t v159 = v56;
      uint64_t v160 = OpaqueTypeConformance2;
      uint64_t v161 = v55;
      swift_getOpaqueTypeConformance2();
      uint64_t v60 = sub_10009E424(&qword_1000D03B8, (void (*)(uint64_t))&type metadata accessor for AudiobookCoverEffect);
      uint64_t v158 = v53;
      uint64_t v159 = v144;
      uint64_t v160 = OpaqueTypeConformance2;
      uint64_t v161 = v60;
      swift_getOpaqueTypeConformance2();
      uint64_t v61 = (uint64_t)v141;
      sub_1000A3C00();
      sub_10000B1C0(v61, v148, &qword_1000D0328);
      swift_storeEnumTagMultiPayload();
      sub_10009E2AC();
      uint64_t v62 = sub_10009E424(&qword_1000D0348, (void (*)(uint64_t))&type metadata accessor for LegacyPDFCoverEffect);
      uint64_t v158 = v53;
      uint64_t v159 = v150;
      uint64_t v160 = OpaqueTypeConformance2;
      uint64_t v161 = v62;
      swift_getOpaqueTypeConformance2();
      uint64_t v63 = (uint64_t)v146;
      sub_1000A3C00();
      sub_10000A9C0(v61, &qword_1000D0328);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v136, v59);
    }
    else
    {
      uint64_t v83 = v134;
      sub_1000A3890();
      uint64_t v84 = sub_100004FDC(&qword_1000D02A0);
      uint64_t v85 = swift_getOpaqueTypeConformance2();
      uint64_t v86 = sub_10009E424(&qword_1000D0348, (void (*)(uint64_t))&type metadata accessor for LegacyPDFCoverEffect);
      long long v87 = v122;
      uint64_t v88 = v150;
      sub_1000A3E60();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v83, v88);
      uint64_t v89 = v124;
      long long v90 = v123;
      uint64_t v91 = v149;
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v87, v149);
      (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v148, v90, v91);
      swift_storeEnumTagMultiPayload();
      sub_10009E2AC();
      uint64_t v158 = v84;
      uint64_t v159 = v88;
      uint64_t v160 = v85;
      uint64_t v161 = v86;
      swift_getOpaqueTypeConformance2();
      uint64_t v63 = (uint64_t)v146;
      sub_1000A3C00();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
    }
  }
  else
  {
    uint64_t v70 = v132;
    sub_1000A3870();
    uint64_t v71 = sub_100004FDC(&qword_1000D02A0);
    uint64_t v72 = swift_getOpaqueTypeConformance2();
    uint64_t v73 = sub_10009E424(&qword_1000D03B8, (void (*)(uint64_t))&type metadata accessor for AudiobookCoverEffect);
    long long v74 = v120;
    uint64_t v75 = v144;
    sub_1000A3E60();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v70, v75);
    uint64_t v76 = v125;
    uint64_t v77 = v138;
    uint64_t v78 = v74;
    uint64_t v79 = v142;
    (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v138, v78, v142);
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v139, v77, v79);
    swift_storeEnumTagMultiPayload();
    uint64_t v80 = sub_10009E424(&qword_1000D03B0, (void (*)(uint64_t))&type metadata accessor for BookCoverEffect);
    uint64_t v158 = v71;
    uint64_t v159 = v143;
    uint64_t v160 = v72;
    uint64_t v161 = v80;
    swift_getOpaqueTypeConformance2();
    uint64_t v158 = v71;
    uint64_t v159 = v75;
    uint64_t v160 = v72;
    uint64_t v161 = v73;
    swift_getOpaqueTypeConformance2();
    uint64_t v81 = (uint64_t)v141;
    sub_1000A3C00();
    sub_10000B1C0(v81, v148, &qword_1000D0328);
    swift_storeEnumTagMultiPayload();
    sub_10009E2AC();
    uint64_t v82 = sub_10009E424(&qword_1000D0348, (void (*)(uint64_t))&type metadata accessor for LegacyPDFCoverEffect);
    uint64_t v158 = v71;
    uint64_t v159 = v150;
    uint64_t v160 = v72;
    uint64_t v161 = v82;
    swift_getOpaqueTypeConformance2();
    uint64_t v63 = (uint64_t)v146;
    sub_1000A3C00();
    sub_10000A9C0(v81, &qword_1000D0328);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v138, v79);
  }
  uint64_t v92 = &qword_1000D0338;
  sub_10000B1C0(v63, v155, &qword_1000D0338);
LABEL_17:
  swift_storeEnumTagMultiPayload();
  sub_10009E18C();
  sub_10009E46C();
  sub_1000A3C00();
  return sub_10000A9C0(v63, v92);
}

uint64_t sub_10009D89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v17[1] = a1;
  uint64_t v3 = sub_1000A3C90();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FDC(&qword_1000D0170);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FDC(&qword_1000D0178);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100098A0C(v2, (uint64_t)v9);
  sub_1000A3C60();
  unint64_t v14 = sub_10009DB04();
  sub_1000A3F30();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10000A9C0((uint64_t)v9, &qword_1000D0170);
  v17[4] = sub_10009B4A0();
  v17[5] = v15;
  void v17[2] = v7;
  v17[3] = v14;
  swift_getOpaqueTypeConformance2();
  sub_10000A504();
  sub_1000A3F00();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_10009DB04()
{
  unint64_t result = qword_1000D0180;
  if (!qword_1000D0180)
  {
    sub_100008B14(&qword_1000D0170);
    sub_10009DB78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0180);
  }
  return result;
}

unint64_t sub_10009DB78()
{
  unint64_t result = qword_1000D0188;
  if (!qword_1000D0188)
  {
    sub_100008B14(&qword_1000D0190);
    sub_10009DC18();
    sub_10000B17C(&qword_1000D01D0, &qword_1000D01D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0188);
  }
  return result;
}

unint64_t sub_10009DC18()
{
  unint64_t result = qword_1000D0198;
  if (!qword_1000D0198)
  {
    sub_100008B14(&qword_1000D01A0);
    sub_10000B17C(&qword_1000D01A8, &qword_1000D01B0);
    sub_100008B14(&qword_1000D01B8);
    sub_1000A3C20();
    sub_10000B17C(&qword_1000D01C0, &qword_1000D01B8);
    sub_10009E424(&qword_1000D01C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0198);
  }
  return result;
}

void sub_10009DD68(uint64_t a1@<X8>)
{
  sub_10009AFA4(*(void *)(v1 + 16), a1);
}

unint64_t sub_10009DD70()
{
  unint64_t result = qword_1000D0200;
  if (!qword_1000D0200)
  {
    sub_100008B14(&qword_1000D01F8);
    sub_10009DE10();
    sub_10000B17C(&qword_1000D0228, &qword_1000D0230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0200);
  }
  return result;
}

unint64_t sub_10009DE10()
{
  unint64_t result = qword_1000D0208;
  if (!qword_1000D0208)
  {
    sub_100008B14(&qword_1000D0210);
    sub_10000B17C(&qword_1000D0218, &qword_1000D0220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0208);
  }
  return result;
}

void sub_10009DEB0(uint64_t a1@<X8>)
{
  sub_10009AAA0(*(void *)(v1 + 16), a1);
}

unint64_t sub_10009DEB8()
{
  unint64_t result = qword_1000D0240;
  if (!qword_1000D0240)
  {
    sub_100008B14(&qword_1000D0238);
    sub_10009DE10();
    sub_10000B17C(&qword_1000D0248, &qword_1000D0250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0240);
  }
  return result;
}

unint64_t sub_10009DF58()
{
  unint64_t result = qword_1000D0280;
  if (!qword_1000D0280)
  {
    sub_100008B14(&qword_1000D0260);
    sub_10009DE10();
    sub_10009E424((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0280);
  }
  return result;
}

unint64_t sub_10009E014()
{
  unint64_t result = qword_1000D0350;
  if (!qword_1000D0350)
  {
    sub_100008B14(&qword_1000D02E8);
    sub_10009E0D0(&qword_1000D0358, &qword_1000D02F0, &qword_1000D0360, &qword_1000D0368);
    sub_10009E0D0(&qword_1000D0370, &qword_1000D02D0, &qword_1000D0378, &qword_1000D0380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0350);
  }
  return result;
}

uint64_t sub_10009E0D0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008B14(a2);
    swift_getOpaqueTypeConformance2();
    sub_10000B17C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009E18C()
{
  unint64_t result = qword_1000D03A0;
  if (!qword_1000D03A0)
  {
    sub_100008B14(&qword_1000D0338);
    sub_10009E2AC();
    sub_100008B14(&qword_1000D02A0);
    sub_1000A38A0();
    swift_getOpaqueTypeConformance2();
    sub_10009E424(&qword_1000D0348, (void (*)(uint64_t))&type metadata accessor for LegacyPDFCoverEffect);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D03A0);
  }
  return result;
}

unint64_t sub_10009E2AC()
{
  unint64_t result = qword_1000D03A8;
  if (!qword_1000D03A8)
  {
    sub_100008B14(&qword_1000D0328);
    sub_100008B14(&qword_1000D02A0);
    sub_1000A3860();
    swift_getOpaqueTypeConformance2();
    sub_10009E424(&qword_1000D03B0, (void (*)(uint64_t))&type metadata accessor for BookCoverEffect);
    swift_getOpaqueTypeConformance2();
    sub_1000A3880();
    sub_10009E424(&qword_1000D03B8, (void (*)(uint64_t))&type metadata accessor for AudiobookCoverEffect);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D03A8);
  }
  return result;
}

uint64_t sub_10009E424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009E46C()
{
  unint64_t result = qword_1000D03C0;
  if (!qword_1000D03C0)
  {
    sub_100008B14(&qword_1000D02F8);
    sub_10009E014();
    sub_10009E0D0(&qword_1000D0388, &qword_1000D02C8, &qword_1000D0390, &qword_1000D0398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D03C0);
  }
  return result;
}

uint64_t sub_10009E510()
{
  uint64_t v1 = type metadata accessor for BookCoverView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3;
  sub_100004FDC(&qword_1000CCAD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000A4130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  uint64_t v9 = sub_1000A3490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v5 + *(int *)(v1 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_10009E69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for BookCoverView() - 8);
  uint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10009B9FC(a1, v6, v7, a2);
}

unint64_t sub_10009E724()
{
  unint64_t result = qword_1000D03E0;
  if (!qword_1000D03E0)
  {
    sub_100008B14(&qword_1000D03E8);
    sub_100008B14(&qword_1000D0170);
    sub_10009DB04();
    swift_getOpaqueTypeConformance2();
    sub_10009E424((unint64_t *)&qword_1000CCB78, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D03E0);
  }
  return result;
}

uint64_t sub_10009E808()
{
  return sub_10000B17C(&qword_1000D0400, &qword_1000D0408);
}

uint64_t sub_10009E844()
{
  type metadata accessor for InvertImagesAppEntity();

  return swift_retain();
}

uint64_t sub_10009E878()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000A3390();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3600();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000A42F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000A33A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000A32C0();
  sub_100010E40(v10, qword_1000D81C0);
  sub_100010B3C(v10, (uint64_t)qword_1000D81C0);
  sub_1000A4280();
  sub_1000A35D0();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000A33B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000A32B0();
}

uint64_t sub_10009EB50()
{
  uint64_t v0 = sub_1000A33A0();
  sub_100010E40(v0, qword_1000D81D8);
  sub_100010B3C(v0, (uint64_t)qword_1000D81D8);
  return sub_1000A3380();
}

uint64_t sub_10009EBB4()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CF678);
  sub_100010E40(v0, qword_1000D81F0);
  uint64_t v1 = sub_100010B3C(v0, (uint64_t)qword_1000D81F0);
  sub_1000A3040();
  uint64_t v2 = sub_1000A3050();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10009EC6C()
{
  uint64_t result = swift_getKeyPath();
  qword_1000D8208 = result;
  return result;
}

uint64_t sub_10009EC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_100004FDC(&qword_1000CF648);
  v3[5] = swift_task_alloc();
  sub_100004FDC(&qword_1000CF650);
  void v3[6] = swift_task_alloc();
  sub_100004FDC(&qword_1000D05F8);
  v3[7] = swift_task_alloc();
  uint64_t v4 = sub_1000A2DD0();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = type metadata accessor for InvertImagesAppEntity();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100004FDC(&qword_1000D0600);
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_10009EE98, 0, 0);
}

uint64_t sub_10009EE98()
{
  sub_1000A2EB0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  uint64_t v2 = sub_1000A0C30(qword_1000D0460);
  *uint64_t v1 = v0;
  v1[1] = sub_10009EF80;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[11];
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v4, sub_10009F5A4, 0, v5, v2);
}

uint64_t sub_10009EF80()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10009F07C, 0, 0);
}

uint64_t sub_10009F07C()
{
  sub_1000A2EB0();
  sub_1000A2EB0();
  *(unsigned char *)(v0 + 177) = *(unsigned char *)(v0 + 176);
  if (qword_1000CC7D0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1000D8208;
  *(void *)(v0 + 152) = qword_1000D8208;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = sub_10000B17C(&qword_1000D05B8, &qword_1000D05C0);
  *uint64_t v2 = v0;
  v2[1] = sub_10009F1C8;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 177, v1, &type metadata for Bool, v3);
}

uint64_t sub_10009F1C8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  sub_1000A1558(v2);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10007F628;
  }
  else {
    uint64_t v3 = sub_10009F31C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10009F31C()
{
  uint64_t v1 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v2 = v0[14];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[17];
  uint64_t v3 = v0[10];
  uint64_t v14 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v13 = v0[9];
  sub_1000A2EB0();
  uint64_t v6 = sub_1000A3290();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1000A32D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_1000674FC();
  sub_1000A0C30(&qword_1000D0480);
  sub_1000A2DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v12, v2);
  sub_1000A2DC0();
  sub_1000A2DF0();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v14);
  sub_1000A1558(v11);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10009F5A8()
{
  uint64_t v0 = sub_100004FDC(&qword_1000D0608);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000CC7D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000A30A0();
  swift_release();
  type metadata accessor for InvertImagesAppEntity();
  sub_1000A0C30(&qword_1000D0480);
  sub_10000B17C(&qword_1000D0610, &qword_1000D0608);
  sub_1000A3090();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10009F734(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InvertImagesAppEntity();
  __chkstk_darwin(v2 - 8);
  sub_1000A1664(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A2EC0();
  return sub_1000A1558(a1);
}

uint64_t sub_10009F7C4()
{
  if (qword_1000CC7D0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10009F824()
{
  unint64_t result = qword_1000D0410;
  if (!qword_1000D0410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0410);
  }
  return result;
}

unint64_t sub_10009F87C()
{
  unint64_t result = qword_1000D0418;
  if (!qword_1000D0418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0418);
  }
  return result;
}

uint64_t sub_10009F8D0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10009F904()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009F954@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A0AB4(&qword_1000CC7C0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000D81D8, a1);
}

uint64_t sub_10009F98C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000CC7C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100004FDC(&qword_1000CF678);
  uint64_t v3 = sub_100010B3C(v2, (uint64_t)qword_1000D81F0);

  return sub_1000A15FC(v3, a1);
}

uint64_t sub_10009FA08(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100011210;
  return sub_10009EC94(a1, v5, v4);
}

uint64_t sub_10009FAB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A106C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10009FADC()
{
  return 0xD000000000000026;
}

unint64_t sub_10009FAFC()
{
  unint64_t result = qword_1000D0428;
  if (!qword_1000D0428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0428);
  }
  return result;
}

uint64_t sub_10009FB50()
{
  return sub_1000A0C30((unint64_t *)&unk_1000D0430);
}

uint64_t type metadata accessor for InvertImagesAppEntity()
{
  uint64_t result = qword_1000D0550;
  if (!qword_1000D0550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009FBD0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10009FBF0, 0, 0);
}

uint64_t sub_10009FBF0()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  sub_1000A102C();
  uint64_t v2 = (void *)sub_1000A44E0();
  unsigned __int8 v3 = [v2 BKSettingFilterBrightImages];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10009FC84(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10009FCA8, 0, 0);
}

uint64_t sub_10009FCA8()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1000A102C();
  uint64_t v2 = (void *)sub_1000A44E0();
  [v2 setBKSettingFilterBrightImages:v1];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10009FD30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_100004FDC(&qword_1000CD498);
  __chkstk_darwin(v1 - 8);
  uint64_t v36 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000A3390();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000A3600();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000A42F0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_1000A33A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v35 = (char *)&v28 - v17;
  __chkstk_darwin(v16);
  uint64_t v34 = (char *)&v28 - v18;
  sub_1000A4280();
  sub_1000A35D0();
  unsigned int v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v32 = *(void (**)(char *))(v7 + 104);
  uint64_t v33 = v7 + 104;
  uint64_t v29 = v6;
  v32(v9);
  sub_1000A33B0();
  uint64_t v30 = v5;
  sub_1000A3380();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v5, 0, 1, v12);
  uint64_t v19 = sub_1000A30D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v36, 1, 1, v19);
  sub_100004FDC(&qword_1000CEF58);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000A8E80;
  sub_1000A4280();
  sub_1000A35D0();
  uint64_t v20 = v31;
  uint64_t v21 = v6;
  uint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v32;
  ((void (*)(char *, void, uint64_t))v32)(v9, v31, v21);
  sub_1000A33B0();
  sub_1000A3380();
  uint64_t v23 = v38;
  sub_1000A30E0();
  uint64_t v24 = type metadata accessor for InvertImagesAppEntity();
  uint64_t v25 = (void *)(v23 + *(int *)(v24 + 20));
  *uint64_t v25 = 0xD00000000000001ALL;
  v25[1] = 0x80000001000A8730;
  uint64_t v26 = *(int *)(v24 + 24);
  sub_100004FDC(&qword_1000D0408);
  sub_1000A4280();
  sub_1000A35D0();
  v22(v9, v20, v29);
  sub_1000A33B0();
  sub_10000B17C(&qword_1000D05B8, &qword_1000D05C0);
  uint64_t result = sub_1000A3330();
  *(void *)(v23 + v26) = result;
  return result;
}

uint64_t sub_1000A030C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000A032C, 0, 0);
}

uint64_t sub_1000A032C()
{
  sub_10009FD30(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1000A0394()
{
  unint64_t result = qword_1000D0440;
  if (!qword_1000D0440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0440);
  }
  return result;
}

uint64_t sub_1000A03E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000A0954();
  *uint64_t v4 = v2;
  v4[1] = sub_10008065C;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1000A049C()
{
  unint64_t result = qword_1000D0450;
  if (!qword_1000D0450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0450);
  }
  return result;
}

unint64_t sub_1000A04F4()
{
  unint64_t result = qword_1000D0458;
  if (!qword_1000D0458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0458);
  }
  return result;
}

uint64_t sub_1000A0548()
{
  return sub_1000A0C30(qword_1000D0460);
}

uint64_t sub_1000A057C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000A0954();
  *unint64_t v5 = v2;
  v5[1] = sub_100080908;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1000A0630(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000A0954();
  *uint64_t v4 = v2;
  v4[1] = sub_100081F0C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1000A06E4()
{
  unint64_t result = qword_1000D0478;
  if (!qword_1000D0478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0478);
  }
  return result;
}

uint64_t sub_1000A0738()
{
  return sub_1000A0C30(&qword_1000D0480);
}

unint64_t sub_1000A0770()
{
  unint64_t result = qword_1000D0488;
  if (!qword_1000D0488)
  {
    sub_100008B14(qword_1000D0490);
    sub_1000A0C30(&qword_1000D0480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0488);
  }
  return result;
}

uint64_t sub_1000A0800(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000A0394();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C760;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_1000A08B4()
{
  return sub_1000A0C30(&qword_1000D04A8);
}

uint64_t sub_1000A08E8()
{
  return sub_1000A0C30(&qword_1000D04B0);
}

uint64_t sub_1000A091C()
{
  return sub_1000A0C30(&qword_1000D04B8);
}

unint64_t sub_1000A0954()
{
  unint64_t result = qword_1000D04C0;
  if (!qword_1000D04C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D04C0);
  }
  return result;
}

uint64_t sub_1000A09A8()
{
  uint64_t v0 = qword_1000D03F0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1000A09E0()
{
  return sub_1000A0C30(&qword_1000D04C8);
}

uint64_t sub_1000A0A14()
{
  return sub_1000A0C30(&qword_1000D04D0);
}

uint64_t sub_1000A0A48()
{
  return sub_1000A0C30(&qword_1000D04D8);
}

uint64_t sub_1000A0A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A0AB4(&qword_1000CC7B8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000D81C0, a1);
}

uint64_t sub_1000A0AB4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100010B3C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1000A0B58()
{
  return sub_10000B17C(&qword_1000D04E0, &qword_1000D04E8);
}

uint64_t sub_1000A0B94(uint64_t a1)
{
  uint64_t v2 = sub_1000A0C30(qword_1000D0460);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000A0BFC()
{
  return sub_1000A0C30(&qword_1000D04F0);
}

uint64_t sub_1000A0C30(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for InvertImagesAppEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A0C74(uint64_t a1)
{
  uint64_t v2 = sub_1000A0C30(&qword_1000D04D8);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for InvertImagesAppEntity.InvertImagesAppEntityQuery()
{
  return &type metadata for InvertImagesAppEntity.InvertImagesAppEntityQuery;
}

uint64_t sub_1000A0CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A0D00);
}

uint64_t sub_1000A0D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A3110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000A0DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A0DD8);
}

uint64_t sub_1000A0DD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000A3110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000A0E98()
{
  uint64_t result = sub_1000A3110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InvertImagesAppEntity.UpdateIntent_value()
{
  return &type metadata for InvertImagesAppEntity.UpdateIntent_value;
}

uint64_t sub_1000A0F4C()
{
  return sub_10000B17C(&qword_1000D0590, &qword_1000D0598);
}

uint64_t sub_1000A0F88()
{
  return sub_10000B17C(&qword_1000D05A0, &qword_1000D0598);
}

uint64_t sub_1000A0FC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  sub_1000A33A0();
  return a1;
}

unint64_t sub_1000A102C()
{
  unint64_t result = qword_1000D05C8;
  if (!qword_1000D05C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D05C8);
  }
  return result;
}

uint64_t sub_1000A106C()
{
  uint64_t v0 = sub_100004FDC(&qword_1000D05D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v34 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000A31D0();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FDC(&qword_1000CD4E0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)v26 - v9;
  uint64_t v11 = sub_100004FDC(&qword_1000D05D8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = v13;
  uint64_t v14 = sub_100004FDC(&qword_1000CD4A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v16;
  uint64_t v17 = sub_1000A33A0();
  uint64_t v33 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v31 = sub_100004FDC(&qword_1000D05E0);
  sub_1000A3380();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v32(v16, 1, 1, v17);
  uint64_t v19 = type metadata accessor for InvertImagesAppEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
  uint64_t v20 = sub_1000A2DD0();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v10, 1, 1, v20);
  v21(v8, 1, 1, v20);
  unsigned int v30 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v22 = *(void (**)(void))(v2 + 104);
  uint64_t v28 = v2 + 104;
  uint64_t v29 = (void (*)(char *, void, uint64_t))v22;
  v22(v4);
  sub_1000A0C30(qword_1000D0460);
  uint64_t v23 = v27;
  uint64_t v31 = sub_1000A2EF0();
  sub_100004FDC(&qword_1000D05E8);
  sub_1000A3380();
  v32(v23, 1, 1, v33);
  char v36 = 2;
  uint64_t v24 = sub_1000A4400();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v34, 1, 1, v24);
  v21(v10, 1, 1, v20);
  v29(v4, v30, v35);
  sub_1000A2F00();
  return v31;
}

uint64_t sub_1000A1558(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InvertImagesAppEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A15B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for InvertImagesAppEntity() + 24));

  return swift_retain();
}

uint64_t sub_1000A15FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000CF678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A1664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InvertImagesAppEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AccessoryCircularView()
{
  return &type metadata for AccessoryCircularView;
}

uint64_t sub_1000A16D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A16F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v6 = v1[8];
  uint64_t v5 = v1[9];
  uint64_t v7 = v1[16];
  if (v7)
  {
    if (v1[15]) {
      BOOL v8 = 0;
    }
    else {
      BOOL v8 = v7 == 0xE000000000000000;
    }
    if (v8) {
      char v9 = 0;
    }
    else {
      char v9 = sub_1000A46A0() ^ 1;
    }
  }
  else
  {
    char v9 = 1;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(_WORD *)(a1 + 16) = v9 & 1;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1000A17A0()
{
  unint64_t result = qword_1000D0618;
  if (!qword_1000D0618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D0618);
  }
  return result;
}

uint64_t *sub_1000A17F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    BOOL v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1000A38E0();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    uint64_t v11 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = sub_1000A4090();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
    *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
    *(_DWORD *)&v7[v11[8]] = *(_DWORD *)&v8[v11[8]];
    *(void *)&v7[v11[9]] = *(void *)&v8[v11[9]];
    *(void *)&v7[v11[10]] = *(void *)&v8[v11[10]];
    *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
    *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1000A198C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000A38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for EmptyStateView.ViewConfiguration(0) + 20);
  uint64_t v7 = sub_1000A4090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return swift_release();
}

void *sub_1000A1A70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1000A38E0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  unint64_t v10 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v14 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(void *)&v6[v10[6]] = *(void *)&v7[v10[6]];
  *(void *)&v6[v10[7]] = *(void *)&v7[v10[7]];
  *(_DWORD *)&v6[v10[8]] = *(_DWORD *)&v7[v10[8]];
  *(void *)&v6[v10[9]] = *(void *)&v7[v10[9]];
  *(void *)&v6[v10[10]] = *(void *)&v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000A1BBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  unint64_t v10 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  *(_DWORD *)&v7[v10[8]] = *(_DWORD *)&v8[v10[8]];
  *(void *)&v7[v10[9]] = *(void *)&v8[v10[9]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[10]] = *(void *)&v8[v10[10]];
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  *(void *)&v7[v10[12]] = *(void *)&v8[v10[12]];
  return a1;
}

_OWORD *sub_1000A1D28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v9 = v8[5];
  unint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v12 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)&v5[v8[6]] = *(void *)&v6[v8[6]];
  *(void *)&v5[v8[7]] = *(void *)&v6[v8[7]];
  *(_DWORD *)&v5[v8[8]] = *(_DWORD *)&v6[v8[8]];
  *(void *)&v5[v8[9]] = *(void *)&v6[v8[9]];
  *(void *)&v5[v8[10]] = *(void *)&v6[v8[10]];
  *(void *)&v5[v8[11]] = *(void *)&v6[v8[11]];
  *(void *)&v5[v8[12]] = *(void *)&v6[v8[12]];
  return a1;
}

void *sub_1000A1E54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000A38E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for EmptyStateView.ViewConfiguration(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1000A4090();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
  swift_release();
  *(void *)&v8[v11[7]] = *(void *)&v9[v11[7]];
  *(_DWORD *)&v8[v11[8]] = *(_DWORD *)&v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  swift_release();
  *(void *)&v8[v11[10]] = *(void *)&v9[v11[10]];
  *(void *)&v8[v11[11]] = *(void *)&v9[v11[11]];
  *(void *)&v8[v11[12]] = *(void *)&v9[v11[12]];
  return a1;
}

uint64_t sub_1000A1FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A1FB4);
}

uint64_t sub_1000A1FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000A2064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A2078);
}

uint64_t sub_1000A2078(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MediumEmptyStateView()
{
  uint64_t result = qword_1000D0678;
  if (!qword_1000D0678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A216C()
{
  uint64_t result = type metadata accessor for EmptyStateView.ViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000A2204()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A2220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004FDC(&qword_1000CCAF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for EmptyStateView.ViewConfiguration(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EmptyStateView(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v15 = type metadata accessor for MediumEmptyStateView();
  sub_10002FCFC((uint64_t)v1 + *(int *)(v15 + 20), (uint64_t)v8);
  *uint64_t v5 = swift_getKeyPath();
  sub_100004FDC(&qword_1000CCAD8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  v12[32] = 0;
  *(void *)uint64_t v12 = KeyPath;
  *((void *)v12 + 1) = 0;
  sub_10002FD6C((uint64_t)v5, (uint64_t)&v12[v10[7]]);
  uint64_t v17 = &v12[v10[8]];
  *(void *)uint64_t v17 = v14;
  *((void *)v17 + 1) = v13;
  uint64_t v18 = &v12[v10[9]];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  sub_10002FDD4((uint64_t)v8, (uint64_t)&v12[v10[10]], type metadata accessor for EmptyStateView.ViewConfiguration);
  sub_10002FDD4((uint64_t)v12, a1, type metadata accessor for EmptyStateView);
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for TitleView()
{
  return &type metadata for TitleView;
}

uint64_t sub_1000A2428()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000A2444@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_1000A3E00();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(void *)&long long v58 = a1;
    *((void *)&v58 + 1) = a2;
    sub_10000A504();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000A3E50();
    uint64_t v12 = v11;
    char v14 = v13;
    if (qword_1000CC7D8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1000A3E20();
    uint64_t v41 = v16;
    uint64_t v42 = v17;
    int v39 = v18;
    sub_100017510(v10, v12, v14 & 1);
    swift_bridgeObjectRelease();
    if (qword_1000CC7E8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100010B3C(v6, (uint64_t)qword_1000D06C0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
    if (qword_1000CC7F0 != -1) {
      swift_once();
    }
    long long v40 = a3;
    uint64_t v20 = sub_100004FDC(&qword_1000CE510);
    sub_100010B3C(v20, (uint64_t)qword_1000D06D8);
    sub_1000A3DC0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (qword_1000CC7E0 != -1) {
      swift_once();
    }
    sub_1000A3DD0();
    swift_release();
    char v21 = v39 & 1;
    uint64_t v22 = v15;
    uint64_t v23 = v41;
    uint64_t v24 = sub_1000A3E40();
    uint64_t v26 = v25;
    char v28 = v27;
    uint64_t v30 = v29;
    swift_release();
    sub_100017510(v22, v23, v21);
    swift_bridgeObjectRelease();
    uint64_t v44 = v24;
    uint64_t v45 = v26;
    char v46 = v28 & 1;
    uint64_t v47 = v30;
    sub_100091448((uint64_t)&v44);
    sub_1000A2B08((uint64_t)&v44, (uint64_t)v43);
    sub_100004FDC(&qword_1000CFD90);
    sub_1000A2B70();
    sub_1000A3C00();
    a3 = v40;
  }
  else
  {
    int v31 = sub_1000A3C30();
    uint64_t v32 = sub_1000A4070();
    sub_100031188(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v58, 0.0, 1, 0.0, 1, v32, v33, v31);
    LODWORD(v44) = v58;
    uint64_t v45 = *((void *)&v58 + 1);
    char v46 = v59;
    uint64_t v47 = *((void *)&v59 + 1);
    char v48 = v60;
    uint64_t v49 = *((void *)&v60 + 1);
    char v50 = v61;
    uint64_t v51 = *((void *)&v61 + 1);
    char v52 = v62;
    uint64_t v53 = *((void *)&v62 + 1);
    char v54 = v63;
    uint64_t v55 = *((void *)&v63 + 1);
    char v56 = v64[0];
    long long v57 = *(_OWORD *)((char *)v64 + 8);
    sub_1000911B4((uint64_t)&v44);
    sub_1000A2B08((uint64_t)&v44, (uint64_t)v43);
    sub_100004FDC(&qword_1000CFD90);
    sub_1000A2B70();
    sub_1000A3C00();
  }
  long long v34 = v63;
  a3[4] = v62;
  a3[5] = v34;
  a3[6] = v64[0];
  *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)((char *)v64 + 9);
  long long v35 = v59;
  *a3 = v58;
  a3[1] = v35;
  double result = *(double *)&v60;
  long long v37 = v61;
  a3[2] = v60;
  a3[3] = v37;
  return result;
}

uint64_t sub_1000A28F4()
{
  uint64_t result = sub_1000A3F70();
  qword_1000D06B0 = result;
  return result;
}

uint64_t sub_1000A2914()
{
  uint64_t result = sub_1000A3DB0();
  qword_1000D06B8 = v1;
  return result;
}

uint64_t sub_1000A2934()
{
  uint64_t v0 = sub_1000A3E00();
  sub_100010E40(v0, qword_1000D06C0);
  uint64_t v1 = sub_100010B3C(v0, (uint64_t)qword_1000D06C0);
  uint64_t v2 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_1000A29BC()
{
  uint64_t v0 = sub_100004FDC(&qword_1000CE510);
  sub_100010E40(v0, qword_1000D06D8);
  uint64_t v1 = sub_100010B3C(v0, (uint64_t)qword_1000D06D8);
  if (_s20BooksWidgetExtension16FallBackFontSpecV03usedeF0SbyFZ_0())
  {
    uint64_t v2 = sub_1000A3D80();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
    uint64_t v4 = v2;
    uint64_t v5 = v1;
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v7 = enum case for Font.Design.serif (_:);
    uint64_t v8 = sub_1000A3D80();
    uint64_t v10 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(v1, v7, v8);
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v5 = v1;
    uint64_t v6 = 0;
    uint64_t v4 = v8;
  }

  return v3(v5, v6, 1, v4);
}

double sub_1000A2B00@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000A2444(*v1, v1[1], a1);
}

uint64_t sub_1000A2B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FDC(&qword_1000D06F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000A2B70()
{
  unint64_t result = qword_1000CFD98;
  if (!qword_1000CFD98)
  {
    sub_100008B14(&qword_1000CFD90);
    sub_100073D8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CFD98);
  }
  return result;
}

unint64_t sub_1000A2BF0()
{
  unint64_t result = qword_1000D06F8;
  if (!qword_1000D06F8)
  {
    sub_100008B14(&qword_1000D0700);
    sub_1000A2B70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D06F8);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_1000A2C90()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t sub_1000A2CA0()
{
  return AppDependency.wrappedValue.getter();
}

uint64_t sub_1000A2CB0()
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t sub_1000A2CC0()
{
  return static AppIntentInternal.sideEffect.getter();
}

uint64_t sub_1000A2CD0()
{
  return static AppIntentInternal.shortcutsMetadata.getter();
}

uint64_t sub_1000A2CE0()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t sub_1000A2CF0()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t sub_1000A2D30()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_1000A2D40()
{
  return static AppIntent.description.getter();
}

uint64_t sub_1000A2D50()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t sub_1000A2D60()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_1000A2D70()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_1000A2DA0()
{
  return IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
}

uint64_t sub_1000A2DC0()
{
  return IntentDialog.init<A, B>(from:capturedContent:)();
}

uint64_t sub_1000A2DD0()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_1000A2DE0()
{
  return IntentDialog.init(_:)();
}

uint64_t sub_1000A2DF0()
{
  return static IntentResult.result<A>(value:dialog:)();
}

uint64_t sub_1000A2E00()
{
  return static IntentResult.result<>()();
}

uint64_t sub_1000A2E10()
{
  return IndexedEntity.attributeSet.getter();
}

uint64_t sub_1000A2E20()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t sub_1000A2E30()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t sub_1000A2E40()
{
  return EntityProperty<>.init(title:)();
}

uint64_t sub_1000A2E50()
{
  return EntityProperty<>.init(title:_get:)();
}

uint64_t sub_1000A2E60()
{
  return EntityProperty<>.init(title:)();
}

uint64_t sub_1000A2E70()
{
  return EntityProperty<>.init()();
}

uint64_t sub_1000A2E80()
{
  return EntityProperty<>.init(title:)();
}

uint64_t sub_1000A2E90()
{
  return EntityProperty<>.init()();
}

uint64_t sub_1000A2EA0()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t sub_1000A2EB0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1000A2EC0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1000A2ED0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1000A2EE0()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_1000A2EF0()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1000A2F00()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_1000A2F10()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t sub_1000A2F20()
{
  return type metadata accessor for _AssistantIntent.PhraseToken();
}

uint64_t sub_1000A2F30()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t sub_1000A2F40()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t sub_1000A2F50()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t sub_1000A2F60()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t sub_1000A2F70()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
}

uint64_t sub_1000A2F80()
{
  return static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
}

uint64_t sub_1000A2F90()
{
  return _AssistantIntent.Value.init<A>(for:builder:)();
}

uint64_t sub_1000A2FA0()
{
  return type metadata accessor for _AssistantIntent.Value();
}

uint64_t sub_1000A2FB0()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

uint64_t sub_1000A2FC0()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

void sub_1000A2FD0(Swift::String a1)
{
}

uint64_t sub_1000A2FE0()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000A2FF0()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t sub_1000A3000()
{
  return static _AssistantIntent.Builder.buildBlock(_:)();
}

uint64_t sub_1000A3010()
{
  return static _AssistantIntent.Builder.buildExpression(_:)();
}

uint64_t sub_1000A3020()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t sub_1000A3030()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t sub_1000A3040()
{
  return IntentDescription.init(stringLiteral:)();
}

uint64_t sub_1000A3050()
{
  return type metadata accessor for IntentDescription();
}

uint64_t sub_1000A3090()
{
  return static _DialogBuilderEntity.buildBlock<A>(_:)();
}

uint64_t sub_1000A30A0()
{
  return static _DialogBuilderEntity.buildExpression<A, B>(_:)();
}

uint64_t sub_1000A30B0()
{
  return DisplayRepresentation.Image.init(systemName:isTemplate:)();
}

uint64_t sub_1000A30C0()
{
  return DisplayRepresentation.Image.init(appBundleIdentifier:)();
}

uint64_t sub_1000A30D0()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_1000A30E0()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)();
}

uint64_t sub_1000A30F0()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:)();
}

uint64_t sub_1000A3100()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_1000A3110()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_1000A3120()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t sub_1000A3130()
{
  return _URLRepresentableEnum.urlRepresentationParameter.getter();
}

uint64_t sub_1000A3150()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t sub_1000A3160()
{
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1000A3170()
{
  return ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
}

void sub_1000A3180(Swift::String a1)
{
}

uint64_t sub_1000A3190()
{
  return ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000A31A0()
{
  return ParameterSummaryString.init(stringInterpolation:)();
}

uint64_t sub_1000A31B0()
{
  return _EnumURLRepresentation.EnumSingleURLRepresentation.init(stringLiteral:)();
}

uint64_t sub_1000A31C0()
{
  return _EnumURLRepresentation.init(_:)();
}

uint64_t sub_1000A31D0()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_1000A31E0()
{
  return static ParameterSummaryBuilder.buildBlock<A>(_:)();
}

uint64_t sub_1000A31F0()
{
  return static ParameterSummaryBuilder.buildExpression<A>(_:)();
}

uint64_t sub_1000A3200()
{
  return _URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_1000A3240()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_1000A3250()
{
  return _EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
}

void sub_1000A3260(Swift::String a1)
{
}

uint64_t sub_1000A3270()
{
  return _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000A3280()
{
  return _EntityURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_1000A3290()
{
  return type metadata accessor for _GeneratedContentOptions();
}

uint64_t sub_1000A32A0()
{
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_1000A32B0()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1000A32C0()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_1000A32D0()
{
  return type metadata accessor for _GeneratedContentFallback();
}

uint64_t sub_1000A32E0()
{
  return static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)();
}

uint64_t sub_1000A32F0()
{
  return static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
}

uint64_t sub_1000A3310()
{
  return ParameterSummaryCaseCondition.init(_:_:)();
}

uint64_t sub_1000A3320()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_1000A3330()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_1000A3350()
{
  return ParameterSummaryDefaultCaseCondition.init(_:)();
}

uint64_t sub_1000A3360()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1000A3370()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1000A3380()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1000A3390()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_1000A33A0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_1000A33B0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1000A33C0()
{
  return FloatingPointFormatStyle.Percent.init(locale:)();
}

uint64_t sub_1000A33D0()
{
  return FloatingPointFormatStyle.Percent.precision(_:)();
}

uint64_t sub_1000A33E0()
{
  return static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
}

uint64_t sub_1000A33F0()
{
  return type metadata accessor for NumberFormatStyleConfiguration.Precision();
}

uint64_t sub_1000A3400()
{
  return URL.isFileURL.getter();
}

uint64_t sub_1000A3410()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_1000A3420()
{
  return URL.debugDescription.getter();
}

void sub_1000A3430(NSURL *retstr@<X8>)
{
}

uint64_t sub_1000A3440()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_1000A3450()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A3460()
{
  return URL.path.getter();
}

uint64_t sub_1000A3470()
{
  return URL.init(string:)();
}

uint64_t sub_1000A3480()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t sub_1000A3490()
{
  return type metadata accessor for URL();
}

uint64_t sub_1000A34A0()
{
  return Data.init(contentsOf:options:)();
}

NSData sub_1000A34B0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1000A34C0()
{
  return Date.nextDay(calendar:)();
}

uint64_t sub_1000A34D0()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_1000A34E0()
{
  return Date.addingTimeInterval(_:)();
}

uint64_t sub_1000A34F0()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1000A3500()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_1000A3510()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_1000A3520()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_1000A3530()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A3540()
{
  return static Date.now.getter();
}

uint64_t sub_1000A3550()
{
  return Date.init()();
}

uint64_t sub_1000A3560()
{
  return type metadata accessor for Date();
}

uint64_t sub_1000A3570()
{
  return Locale.Components.languageComponents.getter();
}

uint64_t sub_1000A3580()
{
  return Locale.Components.init(identifier:)();
}

uint64_t sub_1000A3590()
{
  return type metadata accessor for Locale.Components();
}

uint64_t sub_1000A35A0()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_1000A35B0()
{
  return type metadata accessor for Locale.LanguageCode();
}

uint64_t sub_1000A35C0()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_1000A35D0()
{
  return static Locale.current.getter();
}

uint64_t sub_1000A35E0()
{
  return Locale.Language.Components.languageCode.getter();
}

uint64_t sub_1000A35F0()
{
  return type metadata accessor for Locale.Language.Components();
}

uint64_t sub_1000A3600()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1000A3610()
{
  return static Calendar.gregorian.getter();
}

uint64_t sub_1000A3620()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_1000A3630()
{
  return Calendar.firstWeekday.getter();
}

uint64_t sub_1000A3640()
{
  return Calendar.firstWeekday.setter();
}

NSCalendar sub_1000A3650()
{
  return Calendar._bridgeToObjectiveC()();
}

uint64_t sub_1000A3660()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_1000A3670()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_1000A3680()
{
  return Calendar.locale.setter();
}

uint64_t sub_1000A3690()
{
  return static Calendar.current.getter();
}

uint64_t sub_1000A36A0()
{
  return Calendar.timeZone.setter();
}

uint64_t sub_1000A36B0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1000A36C0()
{
  return Calendar.component(_:from:)();
}

uint64_t sub_1000A36D0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1000A36E0()
{
  return static TimeZone.autoupdatingCurrent.getter();
}

uint64_t sub_1000A36F0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1000A3700()
{
  return StaticFeatureFlagsKey.init(stringLiteral:)();
}

uint64_t sub_1000A3710()
{
  return UTType.identifier.getter();
}

UTType sub_1000A3720()
{
  return UTType._bridgeToObjectiveC()();
}

uint64_t sub_1000A3730()
{
  return static UTType.png.getter();
}

uint64_t sub_1000A3740()
{
  return type metadata accessor for UTType();
}

uint64_t sub_1000A3750()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_1000A3760()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_1000A3770()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t sub_1000A3780()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_1000A3790()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_1000A37A0()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_1000A37B0()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_1000A37C0()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_1000A37D0()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_1000A37E0()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_1000A37F0()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_1000A3800()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_1000A3810()
{
  return Logger.logObject.getter();
}

uint64_t sub_1000A3820()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1000A3830()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1000A3840()
{
  return AssetCover.init(aspectRatio:url:effect:placeholderColor:)();
}

uint64_t sub_1000A3850()
{
  return BookCoverEffect.init(shadowScale:cornerRadius:)();
}

uint64_t sub_1000A3860()
{
  return type metadata accessor for BookCoverEffect();
}

uint64_t sub_1000A3870()
{
  return AudiobookCoverEffect.init(shadowScale:cornerRadius:)();
}

uint64_t sub_1000A3880()
{
  return type metadata accessor for AudiobookCoverEffect();
}

uint64_t sub_1000A3890()
{
  return LegacyPDFCoverEffect.init(cornerRadius:)();
}

uint64_t sub_1000A38A0()
{
  return type metadata accessor for LegacyPDFCoverEffect();
}

uint64_t sub_1000A38B0()
{
  return _CoverEffectViewModifier.init(effect:)();
}

uint64_t sub_1000A38C0()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_1000A38D0()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_1000A38E0()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_1000A38F0()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_1000A3900()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_1000A3910()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_1000A3920()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_1000A3930()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t sub_1000A3940()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_1000A3950()
{
  return PlaybackButton.init<A>(interval:state:intent:playSystemImage:pauseSystemImage:)();
}

uint64_t sub_1000A3960()
{
  return type metadata accessor for PlaybackButton.State();
}

uint64_t sub_1000A3970()
{
  return type metadata accessor for PlaybackButton();
}

uint64_t sub_1000A3980()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t sub_1000A3990()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_1000A39A0()
{
  return ModifiedContent<>.accessibilityLabel<A>(_:)();
}

uint64_t sub_1000A39B0()
{
  return ModifiedContent<>.accessibilityValue<A>(_:)();
}

uint64_t sub_1000A39C0()
{
  return ModifiedContent<>.accessibilityAddTraits(_:)();
}

uint64_t sub_1000A39D0()
{
  return ModifiedContent<>.accessibilityInputLabels<A>(_:)();
}

uint64_t sub_1000A39E0()
{
  return ModifiedContent<>.accessibilityActivationPoint(_:)();
}

uint64_t sub_1000A39F0()
{
  return ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)();
}

uint64_t sub_1000A3A00()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t sub_1000A3A10()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_1000A3A20()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_1000A3A30()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_1000A3A40()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1000A3A50()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1000A3A60()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_1000A3A70()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_1000A3A80()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1000A3A90()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1000A3AA0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_1000A3AB0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000A3AC0()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_1000A3AD0()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000A3AE0()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_1000A3AF0()
{
  return EnvironmentValues.widgetContentMargins.getter();
}

uint64_t sub_1000A3B00()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_1000A3B10()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1000A3B20()
{
  return EnvironmentValues.init()();
}

uint64_t sub_1000A3B30()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_1000A3B40()
{
  return static VerticalAlignment.lastTextBaseline.getter();
}

uint64_t sub_1000A3B50()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_1000A3B60()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_1000A3B70()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_1000A3B80()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t sub_1000A3B90()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_1000A3BA0()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_1000A3BB0()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_1000A3BC0()
{
  return WidgetConfiguration.description<A>(_:)();
}

uint64_t sub_1000A3BD0()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_1000A3BE0()
{
  return WidgetConfiguration.disfavoredLocations(_:for:)();
}

uint64_t sub_1000A3BF0()
{
  return WidgetConfiguration.configurationDisplayName<A>(_:)();
}

uint64_t sub_1000A3C00()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1000A3C10()
{
  return BorderlessButtonStyle.init()();
}

uint64_t sub_1000A3C20()
{
  return type metadata accessor for BorderlessButtonStyle();
}

uint64_t sub_1000A3C30()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_1000A3C40()
{
  return static HierarchicalShapeStyle.tertiary.getter();
}

uint64_t sub_1000A3C50()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_1000A3C60()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_1000A3C70()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_1000A3C80()
{
  return static AccessibilityChildBehavior.contain.getter();
}

uint64_t sub_1000A3C90()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_1000A3CA0()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_1000A3CB0()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_1000A3CC0()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_1000A3CD0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_1000A3CE0()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t sub_1000A3CF0()
{
  return Axis.Set.init(rawValue:)();
}

uint64_t sub_1000A3D00()
{
  return static Axis.Set.vertical.getter();
}

uint64_t sub_1000A3D10()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_1000A3D20()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_1000A3D30()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_1000A3D40()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_1000A3D50()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_1000A3D60()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_1000A3D70()
{
  return static Font.subheadline.getter();
}

uint64_t sub_1000A3D80()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_1000A3D90()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_1000A3DA0()
{
  return static Font.Weight.black.getter();
}

uint64_t sub_1000A3DB0()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_1000A3DC0()
{
  return static Font.system(_:design:weight:)();
}

uint64_t sub_1000A3DD0()
{
  return Font.weight(_:)();
}

uint64_t sub_1000A3DE0()
{
  return static Font.caption2.getter();
}

uint64_t sub_1000A3DF0()
{
  return static Font.footnote.getter();
}

uint64_t sub_1000A3E00()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t sub_1000A3E10()
{
  return Link.init(destination:label:)();
}

uint64_t sub_1000A3E20()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_1000A3E30()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_1000A3E40()
{
  return Text.font(_:)();
}

uint64_t sub_1000A3E50()
{
  return Text.init<A>(_:)();
}

uint64_t sub_1000A3E60()
{
  return View.clipShape<A>(for:)();
}

uint64_t sub_1000A3E70()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_1000A3E80()
{
  return View.widgetURL(_:)();
}

uint64_t sub_1000A3E90()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_1000A3EA0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_1000A3EB0()
{
  return View.fontWeight(_:)();
}

uint64_t sub_1000A3EC0()
{
  return View.unredacted()();
}

uint64_t sub_1000A3ED0()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_1000A3EE0()
{
  return View.accessibility(hidden:)();
}

uint64_t sub_1000A3EF0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1000A3F00()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t sub_1000A3F10()
{
  return View.accessibilityHidden(_:)();
}

uint64_t sub_1000A3F20()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_1000A3F30()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_1000A3F40()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t sub_1000A3F50()
{
  return static Color.black.getter();
}

uint64_t sub_1000A3F60()
{
  return static Color.clear.getter();
}

uint64_t sub_1000A3F70()
{
  return static Color.white.getter();
}

uint64_t sub_1000A3F80()
{
  return Color.opacity(_:)();
}

uint64_t sub_1000A3F90()
{
  return Color.init(_:)();
}

uint64_t sub_1000A3FA0()
{
  return Image.init(uiImage:)();
}

uint64_t sub_1000A3FB0()
{
  return Image.init(systemName:)();
}

uint64_t sub_1000A3FC0()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_1000A3FD0()
{
  return Image.renderingMode(_:)();
}

uint64_t sub_1000A3FE0()
{
  return type metadata accessor for Image.TemplateRenderingMode();
}

uint64_t sub_1000A3FF0()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_1000A4000()
{
  return Image.widgetAccentedRenderingMode(_:)();
}

uint64_t sub_1000A4010()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_1000A4020()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_1000A4030()
{
  return Button.init<A>(intent:label:)();
}

uint64_t sub_1000A4040()
{
  return static Widget.main()();
}

uint64_t sub_1000A4050()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1000A4060()
{
  return Gradient.init(colors:)();
}

uint64_t sub_1000A4070()
{
  return static Alignment.center.getter();
}

uint64_t sub_1000A4080()
{
  return static Alignment.leading.getter();
}

uint64_t sub_1000A4090()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_1000A40A0()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_1000A40B0()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_1000A40C0()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_1000A40D0()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_1000A40E0()
{
  return static UnitPoint.trailing.getter();
}

uint64_t sub_1000A40F0()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_1000A4100()
{
  return static WidgetRenderingMode.vibrant.getter();
}

uint64_t sub_1000A4110()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_1000A4120()
{
  return static WidgetRenderingMode.fullColor.getter();
}

uint64_t sub_1000A4130()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_1000A4140()
{
  return static WidgetAccentedRenderingMode.fullColor.getter();
}

uint64_t sub_1000A4150()
{
  return type metadata accessor for WidgetAccentedRenderingMode();
}

uint64_t sub_1000A4160()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_1000A4170()
{
  return static WidgetLocation.iPhoneWidgetsOnMac.getter();
}

uint64_t sub_1000A4180()
{
  return static WidgetLocation.standBy.getter();
}

uint64_t sub_1000A4190()
{
  return type metadata accessor for WidgetLocation();
}

uint64_t sub_1000A41A0()
{
  return TimelineEntry.relevance.getter();
}

uint64_t sub_1000A41D0()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_1000A41E0()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_1000A41F0()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_1000A4200()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_1000A4210()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_1000A4220()
{
  return Timeline.init(entries:policy:)();
}

NSDictionary sub_1000A4230()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1000A4240()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1000A4250()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_1000A4260()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_1000A4270()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_1000A4280()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_1000A4290()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
}

uint64_t sub_1000A42A0()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_1000A42B0(Swift::String a1)
{
}

uint64_t sub_1000A42C0()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000A42D0()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_1000A42E0()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t sub_1000A42F0()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_1000A4300()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000A4310()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_1000A4320()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000A4330()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000A4340()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A4350()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t sub_1000A4360()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_1000A4370()
{
  return String.hash(into:)();
}

void sub_1000A4380(Swift::String a1)
{
}

Swift::Int sub_1000A4390()
{
  return String.UTF8View._foreignCount()();
}

BOOL sub_1000A43A0(Swift::String a1)
{
  return String.hasSuffix(_:)(a1);
}

uint64_t sub_1000A43B0()
{
  return RawRepresentable<>.isEnabled.getter();
}

uint64_t sub_1000A43C0()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000A43D0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A43E0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1000A43F0()
{
  return Array.debugDescription.getter();
}

uint64_t sub_1000A4400()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

uint64_t sub_1000A4410()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1000A4420()
{
  return static MainActor.shared.getter();
}

uint64_t sub_1000A4430()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_1000A4440()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_1000A4450()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_1000A4460()
{
  return static Double._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000A4470()
{
  return Double.description.getter();
}

uint64_t sub_1000A4480()
{
  return Set.init(minimumCapacity:)();
}

NSNumber sub_1000A4490()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_1000A44B0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1000A44C0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1000A44D0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1000A44E0()
{
  return static NSUserDefaults.booksAppGroup.getter();
}

uint64_t sub_1000A44F0()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_1000A4500()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_1000A4510()
{
  return CGSize.description.getter();
}

uint64_t sub_1000A4520()
{
  return CGSize.scaled(_:)();
}

uint64_t sub_1000A4530()
{
  return CGSize.scaledToFit(in:times:horizontally:)();
}

uint64_t sub_1000A4540()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_1000A4550()
{
  return static OS_os_log.widget.getter();
}

uint64_t sub_1000A4560()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_1000A4570()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1000A4580()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000A4590()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1000A45A0()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_1000A45B0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1000A45C0()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1000A45D0()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_1000A45E0(Swift::Int a1)
{
}

uint64_t sub_1000A45F0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1000A4600()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1000A4610()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1000A4620()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000A4630()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1000A4640()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1000A4650()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1000A4660()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_1000A4680(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1000A4690()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1000A46A0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1000A46B0()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_1000A46C0()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_1000A46D0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000A46E0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000A46F0()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_1000A4700()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1000A4710()
{
  return Error._code.getter();
}

uint64_t sub_1000A4720()
{
  return Error._domain.getter();
}

uint64_t sub_1000A4730()
{
  return Error._userInfo.getter();
}

uint64_t sub_1000A4740()
{
  return Hasher.init(_seed:)();
}

void sub_1000A4750(Swift::UInt a1)
{
}

void sub_1000A4760(Swift::UInt8 a1)
{
}

void sub_1000A4770(Swift::UInt32 a1)
{
}

Swift::Int sub_1000A4780()
{
  return Hasher._finalize()();
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return _CGImageDestinationCreateWithURL(url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return _CGImageDestinationFinalize(idst);
}

CFArrayRef CTFontCopySupportedLanguages(CTFontRef font)
{
  return _CTFontCopySupportedLanguages(font);
}

CTFontRef CTFontCreateWithFontDescriptor(CTFontDescriptorRef descriptor, CGFloat size, const CGAffineTransform *matrix)
{
  return _CTFontCreateWithFontDescriptor(descriptor, size, matrix);
}

CTFontDescriptorRef CTFontDescriptorCreateWithAttributes(CFDictionaryRef attributes)
{
  return _CTFontDescriptorCreateWithAttributes(attributes);
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}