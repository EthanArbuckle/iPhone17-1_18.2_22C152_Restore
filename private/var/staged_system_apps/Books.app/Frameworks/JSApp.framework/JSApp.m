void sub_44D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;

  v2 = [*(id *)(a1 + 32) windowProvider];
  v3 = [v2 keyWindow];

  [*(id *)(a1 + 32) setKeyWindow:v3];
  v4 = [v3 windowScene];
  v5 = [v4 _sceneIdentifier];
  [*(id *)(a1 + 32) setKeyWindowSceneIdentifier:v5];

  v6 = JSALog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = [*(id *)(a1 + 32) keyWindowSceneIdentifier];
    v10 = 138412546;
    v11 = v3;
    v12 = 2112;
    v13 = v7;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "JSAWindowManager: Update keyWindow: %@, sceneIdentifier: %@", (uint8_t *)&v10, 0x16u);
  }
  v8 = *(void **)(a1 + 32);
  v9 = [v8 keyWindow];
  [v8 updateWindowSizeIfNeeded:v9];
}

uint64_t sub_4624(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_4758(uint64_t a1)
{
  v2 = *(void **)(a1 + 32);
  v3 = [*(id *)(a1 + 40) keyWindow];

  if (v2 == v3)
  {
    v4 = [*(id *)(a1 + 40) keyWindow];
    [v4 bounds];
    double v6 = v5;
    double v8 = v7;

    [*(id *)(a1 + 40) setKeyWindowSize:v6, v8];
    v9 = JSALog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(double *)v11 = v6;
      *(double *)&v11[1] = v8;
      v10 = +[NSValue valueWithBytes:v11 objCType:"{CGSize=dd}"];
      *(_DWORD *)buf = 138412290;
      v13 = v10;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "JSAWindowManager: Update keyWindowSize: %@", buf, 0xCu);
    }
  }
}

uint64_t sub_4880(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_4D44(id a1)
{
  qword_CE298 = objc_alloc_init(JSAUserDefaults);

  _objc_release_x1();
}

id sub_4FB8(id a1, void *a2, int a3, int a4)
{
  id v7 = a2;
  id v24 = a1;
  v22 = v7;
  if (a1)
  {
    double v8 = v7;
    a1 = objc_alloc_init((Class)NSMutableDictionary);
    v9 = (uint64_t *)&off_CB320;
    if (!a4) {
      v9 = (uint64_t *)&off_CB328;
    }
    uint64_t v23 = *v9;
    if (a4)
    {
      v10 = +[BUAppGroup books];
      v11 = [v10 userDefaults];
    }
    else
    {
      v11 = +[NSUserDefaults standardUserDefaults];
    }
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v12 = v8;
    id v13 = [v12 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v26;
      do
      {
        v16 = 0;
        do
        {
          if (*(void *)v26 != v15) {
            objc_enumerationMutation(v12);
          }
          uint64_t v17 = *(void *)(*((void *)&v25 + 1) + 8 * (void)v16);
          v18 = [v11 objectForKey:v17];
          if (v18)
          {
            [a1 setObject:v18 forKey:v17];
            if (!a3) {
              goto LABEL_15;
            }
LABEL_14:
            [v11 addObserver:v24 forKeyPath:v17 options:1 context:v23];
            goto LABEL_15;
          }
          v19 = +[NSNull null];
          [a1 setObject:v19 forKey:v17];

          if (a3) {
            goto LABEL_14;
          }
LABEL_15:

          v16 = (char *)v16 + 1;
        }
        while (v14 != v16);
        id v20 = [v12 countByEnumeratingWithState:&v25 objects:v29 count:16];
        id v14 = v20;
      }
      while (v20);
    }
  }

  return a1;
}

id sub_51D4(void *a1)
{
  uint64_t v2 = a1[5];
  v3 = *(void **)(a1[4] + 8);
  v4 = +[JSABridge sharedInstance];
  double v5 = [v4 environment];
  double v6 = [v5 appForOwnership];
  id v7 = +[JSManagedValue managedValueWithValue:v2 andOwner:v6];
  [v3 setObject:v7 forKey:a1[6]];

  [*(id *)(a1[4] + 16) setObject:a1[7] forKey:a1[6]];
  double v8 = *(void **)(a1[4] + 24);
  uint64_t v9 = a1[8];
  uint64_t v10 = a1[6];

  return [v8 setObject:v9 forKey:v10];
}

id sub_54B8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 40);
  v3 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v3 removeObjectForKey:v2];
}

void sub_56A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_56B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_56C8(uint64_t a1)
{
}

void sub_56D0(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24);
  if (*(unsigned char *)(a1 + 48))
  {
    v3 = +[BUAppGroup books];
    id v7 = [v3 userDefaults];
  }
  else
  {
    id v7 = +[NSUserDefaults standardUserDefaults];
  }
  uint64_t v4 = [v2 objectForKey:v7];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  double v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_58C8(os_unfair_lock_s *a1, void *a2, void *a3, char a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    uint64_t v9 = JSALog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "-[JSAUserDefaults _defaultsDidChange:value:fromGroup:]";
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v7;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "%{public}s _defaultsDidChange %@", buf, 0x16u);
    }

    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x3032000000;
    v31 = sub_56B8;
    v32 = sub_56C8;
    id v33 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v23 = 0;
    id v24 = &v23;
    uint64_t v25 = 0x3032000000;
    long long v26 = sub_56B8;
    long long v27 = sub_56C8;
    id v28 = 0;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    uint64_t v15 = sub_5BC8;
    v16 = &unk_B2108;
    uint64_t v17 = a1;
    char v22 = a4;
    id v18 = v7;
    id v19 = v8;
    id v20 = buf;
    v21 = &v23;
    uint64_t v10 = v14;
    os_unfair_lock_lock_with_options();
    v15((uint64_t)v10);
    os_unfair_lock_unlock(a1 + 8);

    if (v24[5] && *(void *)(*(void *)&buf[8] + 40))
    {
      v11 = +[JSABridge sharedInstance];
      uint64_t v12 = v24[5];
      uint64_t v29 = *(void *)(*(void *)&buf[8] + 40);
      id v13 = +[NSArray arrayWithObjects:&v29 count:1];
      [v11 enqueueManagedValueCall:v12 arguments:v13 file:@"JSAUserDefaults.m" line:155];
    }
    _Block_object_dispose(&v23, 8);

    _Block_object_dispose(buf, 8);
  }
}

void sub_5B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_5BC8(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24);
  if (*(unsigned char *)(a1 + 72))
  {
    v3 = +[BUAppGroup books];
    uint64_t v4 = [v3 userDefaults];
  }
  else
  {
    uint64_t v4 = +[NSUserDefaults standardUserDefaults];
  }
  id v13 = [v2 objectForKey:v4];

  id v5 = [v13 objectForKey:*(void *)(a1 + 40)];
  id v6 = *(id *)(a1 + 48);
  if (!v6)
  {
    id v6 = +[NSNull null];
  }
  if (v5 != v6 || ([v5 isEqual:v5] & 1) == 0) {
    [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setObject:v6 forKey:*(void *)(a1 + 40)];
  }
  if ([*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count])
  {
    [v13 addEntriesFromDictionary:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
    id v7 = *(void **)(*(void *)(a1 + 32) + 8);
    if (*(unsigned char *)(a1 + 72))
    {
      id v8 = +[BUAppGroup books];
      uint64_t v9 = [v8 userDefaults];
    }
    else
    {
      uint64_t v9 = +[NSUserDefaults standardUserDefaults];
    }
    uint64_t v10 = [v7 objectForKey:v9];
    uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;
  }
}

void sub_6078(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_6098(uint64_t a1)
{
  WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 32);
  v3 = [*(id *)(a1 + 40) objectForKeyedSubscript:NSKeyValueChangeNewKey];
  sub_58C8(WeakRetained, v2, v3, 0);
}

uint64_t sub_6114(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_6124(uint64_t a1)
{
  WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 32);
  v3 = [*(id *)(a1 + 40) objectForKeyedSubscript:NSKeyValueChangeNewKey];
  sub_58C8(WeakRetained, v2, v3, 1);
}

uint64_t sub_61A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_66D0(uint64_t a1, void *a2)
{
  id v2 = a2;
  self;
  if ([v2 isEqualToString:@"full"])
  {
    uint64_t v3 = 4;
  }
  else if ([v2 isEqualToString:@"long"])
  {
    uint64_t v3 = 3;
  }
  else if ([v2 isEqualToString:@"medium"])
  {
    uint64_t v3 = 2;
  }
  else
  {
    uint64_t v3 = [v2 isEqualToString:@"short"];
  }

  return v3;
}

void sub_6908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_691C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_CE2A0;
  qword_CE2A0 = (uint64_t)v1;

  id v3 = +[NSTimeZone timeZoneForSecondsFromGMT:0];
  [(id)qword_CE2A0 setTimeZone:v3];
}

void sub_6AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_6AEC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_CE2B0;
  qword_CE2B0 = (uint64_t)v1;

  id v3 = +[NSTimeZone timeZoneForSecondsFromGMT:0];
  [(id)qword_CE2B0 setTimeZone:v3];
}

void sub_6DF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[JSABridge sharedInstance];
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = v5;
  if (!v5)
  {
    uint64_t v9 = +[NSNull null];
  }
  v12[0] = v9;
  if (v6) {
    [v6 localizedDescription];
  }
  else {
  uint64_t v10 = +[NSNull null];
  }
  v12[1] = v10;
  uint64_t v11 = +[NSArray arrayWithObjects:v12 count:2];
  [v7 enqueueValueCall:v8 arguments:v11 file:@"JSAAssetRequest.m" line:41];

  if (!v5) {
}
  }

void sub_6FD0(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v5
    || (!v10 || (id v5 = [objc_alloc((Class)NSString) initWithData:v10 encoding:4]) == 0)
    && (+[NSError errorWithDomain:@"JSAErrorDomain" code:0 userInfo:&off_B99E8], (id v5 = (id)objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v6 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    id v7 = v6;
    if (!v6) {
      goto LABEL_10;
    }
    uint64_t v8 = v6[2];
  }
  else
  {
    uint64_t v9 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    id v7 = v9;
    if (!v9) {
      goto LABEL_10;
    }
    uint64_t v8 = v9[2];
  }
  v8();
LABEL_10:
}

void sub_7248(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v9 = a2;
  id v6 = a4;
  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v8 = v7;
  if (v7) {
    (*((void (**)(id, id, id))v7 + 2))(v7, v9, v6);
  }
}

void sub_741C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  if (v3)
  {
    id v5 = [v3 value];
    id v6 = +[JSABridge sharedInstance];
    v12[0] = &__kCFBooleanTrue;
    id v7 = +[NSNumber numberWithInt:a2 != 0, @"didAttemptApproval", @"requestWasApproved"];
    void v11[2] = @"itemIdentifier";
    uint64_t v8 = *(void *)(a1 + 40);
    v12[1] = v7;
    void v12[2] = v8;
    id v9 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:3];
    id v13 = v9;
    id v10 = +[NSArray arrayWithObjects:&v13 count:1];
    [v6 enqueueValueCall:v5 arguments:v10 file:@"JSAParentalApproval.m" line:45];

    [*(id *)(a1 + 48) removeManagedReference:*(void *)(a1 + 32) withOwner:*(void *)(a1 + 56)];
  }
  else
  {
    id v5 = JSALog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_845A0(v5);
    }
  }
}

void sub_77F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7818(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained context];

  if (v2)
  {
    id v3 = JSALog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 136446210;
      id v6 = "-[JSAEnvironment init]_block_invoke";
      _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "%{public}s: JSGarbageCollect() due to memory warning", (uint8_t *)&v5, 0xCu);
    }

    uint64_t v4 = [WeakRetained context];
    JSGarbageCollect((JSContextRef)[v4 JSGlobalContextRef]);
  }
}

void sub_7900(id val)
{
  if (val)
  {
    objc_initWeak(&location, val);
    id v2 = [val thread];
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_7D98;
    v3[3] = &unk_B22D8;
    objc_copyWeak(&v4, &location);
    [v2 enqueueBlockSync:v3];

    objc_destroyWeak(&v4);
    objc_destroyWeak(&location);
  }
}

void sub_79BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

NSDictionary *__cdecl sub_79E0(id a1)
{
  id v1 = JSALog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    CFStringRef v9 = @"ScriptingLocalStorage";
    _os_log_impl(&dword_0, v1, OS_LOG_TYPE_DEFAULT, "--- Persisting state for %@ ---", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v2 = +[JSALocalStorage sharedInstance];
  id v3 = [v2 values];
  id v4 = (__CFString *)[v3 copy];

  int v5 = JSALog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    CFStringRef v9 = v4;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%@", (uint8_t *)&v8, 0xCu);
  }

  id v6 = JSALog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    CFStringRef v9 = @"ScriptingLocalStorage";
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "--- End Persisting state for %@ ---", (uint8_t *)&v8, 0xCu);
  }

  return (NSDictionary *)v4;
}

void sub_7D98(uint64_t a1)
{
  uint64_t v2 = JSASignpostExecution();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  id v4 = JSASignpostExecution();
  int v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "Init JSContext", "", buf, 2u);
  }

  id v6 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = objc_alloc_init((Class)JSContext);
    id v9 = WeakRetained[2];
    WeakRetained[2] = v8;

    id v10 = +[NSBundle mainBundle];
    uint64_t v11 = [v10 bundleIdentifier];
    [WeakRetained[2] setName:v11];

    [WeakRetained[2] setInspectable:1];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_8080;
    v22[3] = &unk_B22B0;
    objc_copyWeak(&v23, v6);
    [WeakRetained[2] setExceptionHandler:v22];
    if (MGGetBoolAnswer()) {
      JSRemoteInspectorSetLogToSystemConsole();
    }
    uint64_t v12 = [WeakRetained context];
    +[JSAEnvironment _exposeObjectsAndClassesToContext:v12];

    id v13 = [WeakRetained context];
    id v14 = [v13 objectForKeyedSubscript:@"native"];

    uint64_t v15 = [WeakRetained[4] value];
    v16 = [v15 context];
    uint64_t v17 = [v16 virtualMachine];
    [v17 removeManagedReference:WeakRetained[4] withOwner:WeakRetained];

    if ([v14 isObject])
    {
      uint64_t v18 = +[JSManagedValue managedValueWithValue:v14 andOwner:WeakRetained];
    }
    else
    {
      uint64_t v18 = 0;
    }
    id v19 = WeakRetained[4];
    WeakRetained[4] = (id)v18;

    id v20 = JSASignpostExecution();
    v21 = v20;
    if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v20))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v21, OS_SIGNPOST_INTERVAL_END, v3, "Init JSContext", "", buf, 2u);
    }

    objc_destroyWeak(&v23);
  }
}

void sub_8060(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_8080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = (unsigned int *)[WeakRetained _exceptionHandlerReentrantCountPtr];
  int v9 = atomic_load(v8);
  if (v9 < 4)
  {
    uint64_t v11 = (atomic_uint *)v8;
    atomic_fetch_add((atomic_uint *volatile)v8, 1u);
    id v10 = [v6 valueForProperty:@"message"];
    uint64_t v12 = [v6 valueForProperty:@"userInfo"];
    id v13 = [v6 valueForProperty:@"line"];
    id v14 = [v6 valueForProperty:@"column"];
    uint64_t v15 = [v6 valueForProperty:@"sourceURL"];
    if ([v10 isString])
    {
      v35 = [v10 toString];
    }
    else
    {
      v35 = @"<Unknown>";
    }
    v32 = v12;
    if ([v12 isObject])
    {
      v16 = [v12 toObject];
      v34 = [v16 description];
    }
    else
    {
      v34 = @"<Unknown>";
    }
    if ([v13 isNumber])
    {
      uint64_t v17 = [v13 toNumber];
      id v33 = [v17 stringValue];
    }
    else
    {
      id v33 = @"<Unknown>";
    }
    if ([v14 isNumber])
    {
      uint64_t v18 = [v14 toNumber];
      id v19 = [v18 stringValue];
    }
    else
    {
      id v19 = @"<Unknown>";
    }
    v31 = v13;
    uint64_t v29 = v15;
    v30 = v14;
    if ([v15 isString])
    {
      id v20 = [v15 toString];
    }
    else
    {
      id v20 = @"<Unknown>";
    }
    id v21 = +[NSString stringWithFormat:@"message: %@, userInfo: %@, line: %@, column: %@, sourceURL: %@", v35, v34, v33, v19, v20];
    char v22 = v21;
    if (!v21)
    {
      id v28 = v5;
      id v23 = [v5 globalObject];
      id v24 = [v23 objectForKeyedSubscript:@"RangeError"];
      unsigned int v25 = [v6 isInstanceOf:v24];

      if (v25)
      {
        long long v26 = [v6 objectForKeyedSubscript:@"message"];
        char v22 = [v26 description];
      }
      else
      {
        char v22 = 0;
      }
      id v5 = v28;
    }
    long long v27 = JSALog();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_846C0((uint64_t)v22, v27);
    }

    atomic_fetch_add(v11, 0xFFFFFFFF);
  }
  else
  {
    id v10 = JSALog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_8467C(v10);
    }
  }
}

void sub_86AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_86D8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    os_signpost_id_t v3 = JSASignpostExecution();
    os_signpost_id_t v4 = os_signpost_id_generate(v3);

    id v5 = JSASignpostExecution();
    id v6 = v5;
    if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
    {
      *(_WORD *)uint64_t v29 = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v6, OS_SIGNPOST_INTERVAL_BEGIN, v4, "Evaluate Script", "", v29, 2u);
    }

    id v7 = JSStringCreateWithUTF8CString((const char *)[*(id *)(a1 + 32) bytes]);
    JSStringRef v8 = JSStringCreateWithCFString(*(CFStringRef *)(a1 + 40));
    if (v7 && (int v9 = v8) != 0)
    {
      id v10 = [WeakRetained context];
      uint64_t v11 = (const OpaqueJSContext *)[v10 JSGlobalContextRef];

      *(void *)uint64_t v29 = 0;
      JSEvaluateScript(v11, v7, 0, v9, 0, (JSValueRef *)v29);
      uint64_t v12 = *(void *)v29;
      if (*(void *)v29)
      {
        id v13 = [WeakRetained context];
        id v14 = +[JSValue valueWithJSValueRef:v12 inContext:v13];

        uint64_t v15 = JSALog();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_84738((uint64_t)v14, v15);
        }
      }
      JSStringRelease(v9);
      JSStringRelease(v7);
    }
    else
    {
      v16 = JSALog();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_847C4(v16);
      }
    }
    uint64_t v17 = JSALog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v18 = *(void *)(a1 + 48);
      *(_DWORD *)uint64_t v29 = 138543618;
      *(void *)&v29[4] = v18;
      __int16 v30 = 2114;
      uint64_t v31 = v19;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "JSAEnvironment javascript loaded with version=%{public}@, name=%{public}@", v29, 0x16u);
    }

    uint64_t v20 = *(void *)(a1 + 48);
    id v21 = [WeakRetained context];
    char v22 = [v21 objectForKeyedSubscript:@"config"];
    [v22 setObject:v20 forKeyedSubscript:@"version"];

    if (*(unsigned char *)(a1 + 72))
    {
      id v23 = [WeakRetained context];
      id v24 = [v23 objectForKeyedSubscript:@"config"];
      [v24 setObject:@"iosbundle" forKeyedSubscript:@"environment"];
    }
    objc_storeStrong(WeakRetained + 3, *(id *)(a1 + 48));
    unsigned int v25 = JSASignpostExecution();
    long long v26 = v25;
    if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v25))
    {
      *(_WORD *)uint64_t v29 = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v26, OS_SIGNPOST_INTERVAL_END, v4, "Evaluate Script", "", v29, 2u);
    }

    id v27 = objc_retainBlock(*(id *)(a1 + 56));
    id v28 = v27;
    if (v27) {
      (*((void (**)(id))v27 + 2))(v27);
    }
  }
}

void sub_8B18(uint64_t a1)
{
  uint64_t v2 = JSASignpostExecution();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  os_signpost_id_t v4 = JSASignpostExecution();
  id v5 = v4;
  unint64_t v6 = v3 - 1;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "Register Objects", "", buf, 2u);
  }

  id v7 = [*(id *)(a1 + 32) nativeJSObject];
  JSStringRef v8 = [v7 value];

  id v24 = v8;
  if ([v8 isObject])
  {
    unint64_t v22 = v3 - 1;
    os_signpost_id_t v23 = v3;
    int v9 = objc_opt_new();
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v10 = *(id *)(a1 + 40);
    id v11 = [v10 countByEnumeratingWithState:&v25 objects:v31 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v26;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v26 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void *)(*((void *)&v25 + 1) + 8 * i);
          v16 = [*(id *)(a1 + 40) objectForKeyedSubscript:v15];
          [v24 setObject:v16 forKeyedSubscript:v15];
          uint64_t v17 = +[NSString stringWithFormat:@"%@=%@", v15, v16];
          [v9 addObject:v17];
        }
        id v12 = [v10 countByEnumeratingWithState:&v25 objects:v31 count:16];
      }
      while (v12);
    }

    uint64_t v18 = JSALog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = [v9 componentsJoinedByString:@", "];
      *(_DWORD *)buf = 138543362;
      __int16 v30 = v19;
      _os_log_impl(&dword_0, v18, OS_LOG_TYPE_DEFAULT, "JSAEnvironment registered: %{public}@", buf, 0xCu);
    }
    unint64_t v6 = v22;
    os_signpost_id_t v3 = v23;
  }
  else
  {
    int v9 = JSALog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_84848(v9);
    }
  }

  uint64_t v20 = JSASignpostExecution();
  id v21 = v20;
  if (v6 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v20))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v21, OS_SIGNPOST_INTERVAL_END, v3, "Register Objects", "", buf, 2u);
  }
}

id sub_956C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setInterval:a2];
}

id sub_9578(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) clearInterval:a2];
}

id sub_9584(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setTimeout:a2 timeInMS:a2];
}

id sub_9590(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) clearTimeout:a2];
}

JSAPackage *__cdecl sub_959C(id a1)
{
  id v1 = +[JSABridge sharedInstance];
  uint64_t v2 = [v1 currentPackage];

  return (JSAPackage *)v2;
}

id sub_95F0(uint64_t a1)
{
  uint64_t v2 = +[JSABridge sharedInstance];
  os_signpost_id_t v3 = [v2 templateRegistrationPromise];
  os_signpost_id_t v4 = v3;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    unint64_t v6 = +[NSError bu_errorWithDomain:@"JSAErrorDomain" code:111 description:@"templateRegistrationPromise is not set" underlyingError:0];
    id v5 = +[AMSPromise promiseWithError:v6];
  }
  id v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"Promise"];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_97B0;
  v13[3] = &unk_B23E0;
  id v14 = v5;
  id v8 = v5;
  int v9 = objc_retainBlock(v13);
  uint64_t v15 = v9;
  id v10 = +[NSArray arrayWithObjects:&v15 count:1];
  id v11 = [v7 constructWithArguments:v10];

  return v11;
}

void sub_97B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_9870;
  v10[3] = &unk_B23B8;
  id v11 = v5;
  id v12 = v6;
  id v8 = v6;
  id v9 = v5;
  [v7 resultWithCompletion:v10];
}

void sub_9870(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[JSABridge sharedInstance];
  id v8 = v7;
  if (v5)
  {
    uint64_t v9 = *(void *)(a1 + 32);
    id v17 = v5;
    id v10 = +[NSArray arrayWithObjects:&v17 count:1];
    id v11 = v8;
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    uint64_t v14 = 344;
  }
  else
  {
    uint64_t v15 = *(void *)(a1 + 40);
    if (!v6)
    {
      [v7 enqueueValueCall:v15 arguments:&__NSArray0__struct file:@"JSAEnvironment.m" line:346];
      goto LABEL_6;
    }
    id v16 = v6;
    id v10 = +[NSArray arrayWithObjects:&v16 count:1];
    id v11 = v8;
    uint64_t v12 = v15;
    uint64_t v13 = v10;
    uint64_t v14 = 346;
  }
  [v11 enqueueValueCall:v12 arguments:v13 file:@"JSAEnvironment.m" line:v14];

LABEL_6:
}

void sub_9BBC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) records];
  [v2 addObject:*(void *)(a1 + 40)];
}

uint64_t sub_9D00(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_9D10(uint64_t a1)
{
}

void sub_9D18(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) records];
  id v3 = [v2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = [*(id *)(a1 + 32) records];
  [v6 removeAllObjects];
}

void sub_9EA0(id a1)
{
  qword_CE2C8 = objc_alloc_init(JSATasteManager);

  _objc_release_x1();
}

void sub_9F38(id a1, JSContext *a2)
{
  id v3 = [(JSContext *)a2 objectForKeyedSubscript:@"TasteManager"];
  if ([v3 isObject]) {
    id v2 = [v3 invokeMethod:@"syncTastes" withArguments:&__NSArray0__struct];
  }
}

double sub_A180()
{
  self;
  v0 = +[NSDate date];
  [v0 timeIntervalSince1970];
  double v2 = v1;

  return v2;
}

void sub_A494(id a1)
{
  *(void *)id v6 = 0xE00000001;
  int v7 = 1;
  pid_t v8 = getpid();
  memset(v5, 0, 512);
  size_t v4 = 648;
  int v1 = sysctl(v6, 4u, v5, &v4, 0, 0);
  if (v1)
  {
    int v2 = v1;
    id v3 = JSALog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_84918(v2, v3);
    }
  }
  else
  {
    *(double *)&qword_CE2E0 = (double)SDWORD2(v5[0]) / 1000000.0 + (double)*(uint64_t *)&v5[0];
  }
}

uint64_t sub_A6F0(uint64_t a1)
{
  qword_CE2F8 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

id sub_A89C(void *a1)
{
  if (a1)
  {
    a1 = +[UIScreen mainScreen];
    uint64_t v1 = vars8;
  }
  return a1;
}

uint64_t sub_B800(uint64_t a1)
{
  qword_CE308 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

id sub_B9AC(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v2 = a2;
    id v3 = objc_opt_new();
    [v3 setValue:kSecClassGenericPassword forKey:kSecClass];
    [v3 setValue:v2 forKey:kSecAttrService];

    [v3 setValue:kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly forKey:kSecAttrAccessible];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void sub_BB3C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) getItem:*(void *)(a1 + 40)];
  id v3 = +[JSABridge sharedInstance];
  size_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v2)
  {
    int v7 = v2;
    id v6 = +[NSArray arrayWithObjects:&v7 count:1];
    [v4 enqueueValueCall:v5 arguments:v6 file:@"JSAKeychainStorage.m" line:67];
  }
  else
  {
    [v3 enqueueValueCall:v5 arguments:0 file:@"JSAKeychainStorage.m" line:67];
  }
}

void sub_BE40(uint64_t a1)
{
  [*(id *)(a1 + 32) setItem:*(void *)(a1 + 40) :*(void *)(a1 + 48)];
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 56) arguments:0 file:@"JSAKeychainStorage.m" line:97];
}

void sub_BFEC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeItem:*(void *)(a1 + 40)];
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 48) arguments:0 file:@"JSAKeychainStorage.m" line:121];
}

void sub_C128(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  int v7 = BUDynamicCast();
  objc_opt_class();
  pid_t v8 = BUDynamicCast();
  if ([v7 length])
  {
    if (v8)
    {
LABEL_3:
      if ([v7 length]) {
        [*(id *)(a1 + 32) setObject:v8 forKey:v7];
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v9 = JSALog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_84A1C((uint64_t)v5, v9);
    }

    if (v8) {
      goto LABEL_3;
    }
  }
  id v10 = JSALog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
    sub_849A4((uint64_t)v6, v10);
  }

  [v7 length];
LABEL_11:
}

void sub_C42C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  objc_opt_class();
  id v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:v5];

  int v7 = BUDynamicCast();

  if (v7) {
    [*(id *)(a1 + 40) setObject:v7 forKeyedSubscript:v8];
  }
}

void sub_C598(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  size_t v4 = [*(id *)(a1 + 40) diskUsage];
  id v6 = v4;
  id v5 = +[NSArray arrayWithObjects:&v6 count:1];
  [v2 enqueueValueCall:v3 arguments:v5 file:@"JSADevice.m" line:53];
}

id sub_C7E4()
{
  self;
  v0 = (const void *)MGCopyAnswer();
  if (v0)
  {
    uint64_t v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    if (v2 == CFStringGetTypeID())
    {
      uint64_t v3 = +[NSString stringWithString:v1];
    }
    else
    {
      uint64_t v3 = 0;
    }
    CFRelease(v1);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void sub_D07C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v8 = a5;
  id v9 = a4;
  id v10 = a3;
  id v11 = a2;
  self;
  id v12 = (id)objc_opt_new();
  [v12 setCallback:v8];

  [v12 setPresentingViewController:v10];
  [v12 setActivityItem:v11];

  [v12 setOptions:v9];
  sub_D244((uint64_t)v12);
}

void sub_D244(uint64_t a1)
{
  if (a1)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_D2C0;
    block[3] = &unk_B2000;
    block[4] = a1;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_D2C0(uint64_t a1)
{
  CFTypeID v2 = [*(id *)(a1 + 32) options];
  uint64_t v3 = [v2 objectForKeyedSubscript:@"linkPresentation"];
  if (v3)
  {
    uint64_t v26 = *(void *)(a1 + 32);
    size_t v4 = +[NSArray arrayWithObjects:&v26 count:1];
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) activityItem];
    long long v25 = v5;
    size_t v4 = +[NSArray arrayWithObjects:&v25 count:1];
  }
  id v6 = [objc_alloc((Class)UIActivityViewController) initWithActivityItems:v4 applicationActivities:0];
  objc_opt_class();
  int v7 = [*(id *)(a1 + 32) options];
  id v8 = [v7 objectForKeyedSubscript:@"excludedActivityTypes"];
  id v9 = BUDynamicCast();
  id v10 = [v9 count];

  if (v10)
  {
    id v11 = [*(id *)(a1 + 32) options];
    id v12 = [v11 objectForKeyedSubscript:@"excludedActivityTypes"];
    [v6 setExcludedActivityTypes:v12];
  }
  if (objc_opt_respondsToSelector())
  {
    objc_opt_class();
    uint64_t v13 = [*(id *)(a1 + 32) options];
    uint64_t v14 = [v13 objectForKeyedSubscript:@"sourceView"];
    uint64_t v15 = BUDynamicCast();

    objc_opt_class();
    id v16 = [*(id *)(a1 + 32) options];
    id v17 = [v16 objectForKeyedSubscript:@"sourceBarButtonItem"];
    uint64_t v18 = BUDynamicCast();

    if (v15)
    {
      uint64_t v19 = [v6 popoverPresentationController];
      [v19 setSourceView:v15];
    }
    else
    {
      if (!v18)
      {
LABEL_12:

        goto LABEL_13;
      }
      uint64_t v19 = [v6 popoverPresentationController];
      [v19 setBarButtonItem:v18];
    }

    goto LABEL_12;
  }
LABEL_13:
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_D628;
  v24[3] = &unk_B2628;
  v24[4] = *(void *)(a1 + 32);
  [v6 setCompletionWithItemsHandler:v24];
  uint64_t v20 = [*(id *)(a1 + 32) presentingViewController];
  id v21 = [v20 view];
  unint64_t v22 = [v21 window];

  if (([v22 isKeyWindow] & 1) == 0) {
    [v22 makeKeyWindow];
  }
  os_signpost_id_t v23 = [*(id *)(a1 + 32) presentingViewController];
  [v23 presentViewController:v6 animated:1 completion:0];
}

void sub_D628(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  id v12 = [*(id *)(a1 + 32) callback];
  unsigned int v13 = [v12 isObject];

  if (v13)
  {
    uint64_t v14 = objc_opt_new();
    [v14 setObject:v9 forKeyedSubscript:@"activityType"];
    uint64_t v15 = +[NSNumber numberWithBool:a3];
    [v14 setObject:v15 forKeyedSubscript:@"completed"];

    if (v10 && [v10 count]) {
      [v14 setObject:v10 forKeyedSubscript:@"returnedItems"];
    }
    if (v11)
    {
      id v16 = [v11 localizedDescription];
      [v14 setObject:v16 forKeyedSubscript:@"activityError"];
    }
    id v17 = +[JSABridge sharedInstance];
    uint64_t v18 = [*(id *)(a1 + 32) callback];
    uint64_t v20 = v14;
    uint64_t v19 = +[NSArray arrayWithObjects:&v20 count:1];
    [v17 enqueueValueCall:v18 arguments:v19 file:@"JSAShare.m" line:105];
  }
}

id sub_DCDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  size_t v4 = v3;
  id v5 = 0;
  if (a1 && v3)
  {
    id v5 = objc_alloc_init((Class)NSItemProvider);
    id v6 = [UTTypePNG identifier];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_DDC8;
    v8[3] = &unk_B2678;
    id v9 = v4;
    [v5 registerItemForTypeIdentifier:v6 loadHandler:v8];
  }

  return v5;
}

void sub_DDC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  size_t v4 = dispatch_get_global_queue(0, 0);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  int v6[2] = sub_DE90;
  v6[3] = &unk_B2650;
  id v7 = *(id *)(a1 + 32);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v6);
}

void sub_DE90(uint64_t a1)
{
  +[NSData dataWithContentsOfURL:*(void *)(a1 + 32)];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_DF50;
  v3[3] = &unk_B2650;
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = *(id *)(a1 + 40);
  id v2 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_DF50(uint64_t a1)
{
  id v4 = +[UIImage imageWithData:*(void *)(a1 + 32)];
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = UIImagePNGRepresentation(v4);
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0);
}

uint64_t sub_E7B4(uint64_t a1)
{
  qword_CE318 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_E984(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = +[NSUserDefaults standardUserDefaults];
    id v3 = [v2 objectForKey:@"ScriptingLocalStorage"];

    if (v3)
    {
      id v4 = JSALog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "[JSALocalStorage] Migrating from standard user defaults to dedicated app group user defaults", buf, 2u);
      }

      [*(id *)(a1 + 16) setObject:v3 forKey:@"ScriptingLocalStorage"];
      id v5 = +[NSUserDefaults standardUserDefaults];
      [v5 removeObjectForKey:@"ScriptingLocalStorage"];
    }
    id v6 = +[NSUserDefaults bu_groupUserDefaults];
    id v7 = [v6 objectForKey:@"ScriptingLocalStorage"];

    if (v7)
    {
      id v8 = JSALog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v10 = 0;
        _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "[JSALocalStorage] Migrating from default app group user defaults to dedicated app group user defaults", v10, 2u);
      }

      [*(id *)(a1 + 16) setObject:v7 forKey:@"ScriptingLocalStorage"];
      id v9 = +[NSUserDefaults bu_groupUserDefaults];
      [v9 removeObjectForKey:@"ScriptingLocalStorage"];
    }
  }
}

void sub_EB18(uint64_t a1, void *a2)
{
  id v6 = a2;
  if (a1)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 8));
    id v3 = *(void **)(a1 + 24);
    if (!v3 || ([v3 isEqual:v6] & 1) == 0)
    {
      id v4 = [v6 mutableCopy];
      id v5 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v4;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
  }
}

void sub_ED44(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = (os_unfair_lock_s *)(a1 + 8);
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 8));
    id v3 = [*(id *)(a1 + 24) copy];
    os_unfair_lock_unlock(v2);
    [*(id *)(a1 + 16) setObject:v3 forKey:@"ScriptingLocalStorage"];
    [*(id *)(a1 + 16) synchronize];
  }
}

void sub_F054(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_F070(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:NSKeyValueChangeNewKey];
  uint64_t v3 = BUDynamicCast();
  id v4 = (void *)v3;
  id v5 = &__NSDictionary0__struct;
  if (v3) {
    id v5 = (void *)v3;
  }
  id v6 = v5;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_EB18((uint64_t)WeakRetained, v6);
}

uint64_t sub_F12C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_F800(uint64_t a1)
{
  uint64_t v2 = +[BUAppGroup books];
  uint64_t v3 = [v2 containerURL];
  id v6 = [v3 URLByAppendingPathComponent:@"JSAFileStorage"];

  id v4 = [objc_alloc(*(Class *)(a1 + 32)) initWithURL:v6];
  id v5 = (void *)qword_CE328;
  qword_CE328 = (uint64_t)v4;
}

uint64_t sub_FA5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_FA6C(uint64_t a1)
{
}

void sub_FA74(uint64_t a1)
{
  if ([*(id *)(a1 + 32) ensureDirectoryExists])
  {
    uint64_t v2 = [*(id *)(a1 + 32) filePathWithName:*(void *)(a1 + 40)];
    uint64_t v3 = +[NSData dataWithContentsOfFile:v2];
    if (v3)
    {
      id v9 = 0;
      uint64_t v4 = +[NSJSONSerialization JSONObjectWithData:v3 options:4 error:&v9];
      id v5 = v9;
      uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v4;

      if (v5)
      {
        id v8 = JSALog();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_84B1C();
        }
      }
    }
  }
}

void sub_FC48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v10 = 0;
  uint64_t v3 = +[NSJSONSerialization dataWithJSONObject:v2 options:6 error:&v10];
  id v4 = v10;
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = JSALog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_84BEC();
    }
LABEL_4:

    goto LABEL_9;
  }
  if ([*(id *)(a1 + 40) ensureDirectoryExists])
  {
    uint64_t v7 = *(void *)(a1 + 48);
    id v9 = 0;
    [v3 writeToFile:v7 options:1 error:&v9];
    id v8 = v9;
    if (v8)
    {
      id v5 = v8;
      uint64_t v6 = JSALog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_84B84();
      }
      goto LABEL_4;
    }
  }
LABEL_9:
}

void sub_FDDC(uint64_t a1)
{
  uint64_t v2 = +[NSFileManager defaultManager];
  uint64_t v3 = *(void *)(a1 + 32);
  id v6 = 0;
  [v2 removeItemAtPath:v3 error:&v6];
  id v4 = v6;

  if (v4)
  {
    id v5 = JSALog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_84C54();
    }
  }
}

void sub_10024(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100A4(id a1)
{
  qword_CE338 = objc_alloc_init(JSANetwork);

  _objc_release_x1();
}

void sub_102B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  [v4 setReachabilityRef:a1];
  id v5 = +[JSABridge sharedInstance];
  id v6 = [v4 networkCallbackValue];
  id v7 = [v4 isReachable];

  id v8 = +[NSNumber numberWithBool:v7];
  id v10 = v8;
  uint64_t v9 = +[NSArray arrayWithObjects:&v10 count:1];
  [v5 enqueueManagedValueCall:v6 arguments:v9 file:@"JSANetwork.m" line:74];
}

id JSALog()
{
  if (qword_CE348 != -1) {
    dispatch_once(&qword_CE348, &stru_B2710);
  }
  v0 = (void *)qword_CE340;

  return v0;
}

void sub_105C4(id a1)
{
  qword_CE340 = (uint64_t)os_log_create("com.apple.iBooks", "JSApp");

  _objc_release_x1();
}

id sub_108A8(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  id v7 = a2;
  id v8 = v7;
  if (a1)
  {
    if ([v7 isObject])
    {
      if (a4 > 0.0)
      {
        double v9 = a4 / 1000.0;
LABEL_11:
        id v10 = +[JSContext currentArguments];
        if ((unint64_t)[v10 count] < 3)
        {
          uint64_t v26 = 0;
        }
        else
        {
          uint64_t v26 = -[NSObject subarrayWithRange:](v10, "subarrayWithRange:", 2, (char *)[v10 count] - 2);
        }
        long long v27 = +[NSTimer timerWithTimeInterval:a1 target:"_jsTimerFired:" selector:0 userInfo:a3 repeats:v9];
        long long v28 = [JSATimerContext alloc];
        uint64_t v29 = +[JSABridge sharedInstance];
        __int16 v30 = [v29 environment];
        uint64_t v31 = [v30 appForOwnership];
        v32 = [(JSATimerContext *)v28 initWithCallback:v8 callbackArgs:v26 ownerObject:v31 repeating:a3 interval:v27 timer:v9];

        long long v25 = +[NSString stringWithFormat:@"%p", v27];
        id v33 = *(id *)(a1 + 8);
        objc_sync_enter(v33);
        [*(id *)(a1 + 8) setObject:v32 forKey:v25];
        objc_sync_exit(v33);

        v34 = JSALog();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v40 = v25;
          __int16 v41 = 2112;
          v42 = v32;
          _os_log_impl(&dword_0, v34, OS_LOG_TYPE_DEFAULT, "Scheduled timer %@: %@", buf, 0x16u);
        }

        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10E60;
        block[3] = &unk_B2000;
        id v38 = v27;
        id v35 = v27;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

        goto LABEL_17;
      }
      double v9 = 0.0;
      if (!a3) {
        goto LABEL_11;
      }
      id v10 = JSALog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_84D24(v10, v18, v19, v20, v21, v22, v23, v24);
      }
    }
    else
    {
      id v10 = JSALog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_84D9C(v10, v11, v12, v13, v14, v15, v16, v17);
      }
    }
    long long v25 = 0;
LABEL_17:

    goto LABEL_18;
  }
  long long v25 = 0;
LABEL_18:

  return v25;
}

void sub_10BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10BF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if ([v3 isString]
      && ([v4 toString],
          id v5 = objc_claimAutoreleasedReturnValue(),
          id v6 = [v5 length],
          v5,
          v6))
    {
      id v7 = [v4 toString];
      id v8 = *(id *)(a1 + 8);
      objc_sync_enter(v8);
      double v9 = [*(id *)(a1 + 8) objectForKey:v7];
      [*(id *)(a1 + 8) removeObjectForKey:v7];
      objc_sync_exit(v8);

      id v10 = JSALog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        uint64_t v23 = v7;
        __int16 v24 = 2112;
        long long v25 = v9;
        _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "Cancelling timer %@: %@", buf, 0x16u);
      }

      if (v9)
      {
        id v11 = v9;
        objc_sync_enter(v11);
        uint64_t v12 = [v11 timer];
        uint64_t v13 = [v11 managedCallback];

        if (v13) {
          [v11 removeManagedReferences];
        }
        if (v12)
        {
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_10EC4;
          block[3] = &unk_B2000;
          id v21 = v12;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
        }
        objc_sync_exit(v11);
      }
    }
    else
    {
      id v7 = JSALog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        sub_84E14((uint64_t)v4, v7, v14, v15, v16, v17, v18, v19);
      }
    }
  }
}

void sub_10E24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10E60(uint64_t a1)
{
  id v2 = +[NSRunLoop currentRunLoop];
  [v2 addTimer:*(void *)(a1 + 32) forMode:NSDefaultRunLoopMode];
}

id sub_10EC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_110A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_110BC(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = *(id *)(a1 + 32);
  objc_sync_enter(v3);
  id v4 = [*(id *)(a1 + 32) managedCallback];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) managedCallback];
    id v4 = [v5 value];

    id v6 = [*(id *)(a1 + 32) managedArgs];
    if (([*(id *)(a1 + 32) isRepeating] & 1) == 0) {
      [*(id *)(a1 + 32) removeManagedReferences];
    }
  }
  else
  {
    id v6 = 0;
  }
  objc_sync_exit(v3);

  if (v4)
  {
    id v7 = +[JSABridge sharedInstance];
    id v8 = [v6 jsValuesWithContext:v9];
    [v7 enqueueValueCall:v4 arguments:v8 file:@"JSAFoundation.m" line:184];
  }
}

void sub_111E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1143C(uint64_t a1)
{
  id v3 = +[BUAccountsProvider sharedProvider];
  id v2 = [v3 currentStorefront];
  [*(id *)(a1 + 32) setLastBagStorefront:v2];
}

void sub_114A8(os_unfair_lock_s *val)
{
  if (val)
  {
    objc_initWeak(&location, val);
    uint64_t v15 = 0;
    uint64_t v16 = &v15;
    uint64_t v17 = 0x2020000000;
    char v18 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    id v11 = sub_12A80;
    uint64_t v12 = &unk_B2430;
    uint64_t v13 = val;
    uint64_t v14 = &v15;
    id v2 = v10;
    os_unfair_lock_lock(val + 2);
    v11((uint64_t)v2);
    os_unfair_lock_unlock(val + 2);

    if (*((unsigned char *)v16 + 24))
    {
      id v3 = [(os_unfair_lock_s *)val updateQueue];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_12A9C;
      block[3] = &unk_B22D8;
      id v4 = &v9;
      objc_copyWeak(&v9, &location);
      dispatch_async(v3, block);
    }
    else
    {
      id v3 = [(os_unfair_lock_s *)val updateQueue];
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      int v6[2] = sub_1303C;
      v6[3] = &unk_B22D8;
      id v4 = &v7;
      objc_copyWeak(&v7, &location);
      dispatch_block_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_USER_INTERACTIVE, 0, v6);
      dispatch_async(v3, v5);
    }
    objc_destroyWeak(v4);
    _Block_object_dispose(&v15, 8);
    objc_destroyWeak(&location);
  }
}

void sub_11698(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 88), 8);
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_117BC(uint64_t a1)
{
  qword_CE358 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_11908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_11920(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_11930(uint64_t a1)
{
}

void sub_11938(uint64_t a1)
{
}

void sub_11A80(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) lastBagStorefront];
  LOBYTE(v2) = [v2 isEqualToString:v3];

  if (v2)
  {
    id v4 = JSALog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      dispatch_block_t v5 = "JSAProfileBagManager: Skipped resetting bag value cache for storefront change because the new bag has already arrived.";
LABEL_6:
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, v5, v8, 2u);
    }
  }
  else
  {
    id v6 = *(os_unfair_lock_s **)(a1 + 40);
    id v7 = v6 + 2;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_11BB8;
    v9[3] = &unk_B2000;
    v9[4] = v6;
    os_unfair_lock_lock(v6 + 2);
    sub_11BB8((uint64_t)v9);
    os_unfair_lock_unlock(v7);
    id v4 = JSALog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      dispatch_block_t v5 = "JSAProfileBagManager: Reset bag value cache due to storefront change.";
      goto LABEL_6;
    }
  }
}

void sub_11BB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;
}

id sub_11BC8(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    switch(a3)
    {
      case 0:
        id v6 = [a1 bag];
        id v7 = [v6 arrayForKey:v5];
        id v8 = v7;
        uint64_t v23 = 0;
        id v9 = (id *)&v23;
        id v10 = &v23;
        break;
      case 1:
        id v6 = [a1 bag];
        id v7 = [v6 BOOLForKey:v5];
        id v8 = v7;
        uint64_t v22 = 0;
        id v9 = (id *)&v22;
        id v10 = &v22;
        break;
      case 2:
        id v6 = [a1 bag];
        id v7 = [v6 doubleForKey:v5];
        id v8 = v7;
        uint64_t v20 = 0;
        id v9 = (id *)&v20;
        id v10 = &v20;
        break;
      case 3:
        id v6 = [a1 bag];
        id v7 = [v6 integerForKey:v5];
        id v8 = v7;
        uint64_t v19 = 0;
        id v9 = (id *)&v19;
        id v10 = &v19;
        break;
      case 5:
        id v6 = [a1 bag];
        id v7 = [v6 URLForKey:v5];
        id v8 = v7;
        uint64_t v18 = 0;
        id v9 = (id *)&v18;
        id v10 = &v18;
        break;
      case 6:
        id v6 = [a1 bag];
        id v7 = [v6 dictionaryForKey:v5];
        id v8 = v7;
        uint64_t v21 = 0;
        id v9 = (id *)&v21;
        id v10 = &v21;
        break;
      default:
        id v6 = [a1 bag];
        id v7 = [v6 stringForKey:v5];
        id v8 = v7;
        uint64_t v17 = 0;
        id v9 = (id *)&v17;
        id v10 = &v17;
        break;
    }
    a1 = [v7 jsa_valueWithError:v10];
    id v11 = *v9;

    if (v11)
    {
      uint64_t v12 = [v11 domain];
      if ([v12 isEqualToString:AMSErrorDomain])
      {
        uint64_t v13 = (char *)[v11 code];

        if (v13 == &stru_B8.segname[4])
        {
          uint64_t v14 = JSALog();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v15 = [v11 localizedFailureReason];
            *(_DWORD *)buf = 138543618;
            id v25 = v5;
            __int16 v26 = 2114;
            long long v27 = v15;
            _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "Missing key %{public}@ in bag, error=%{public}@", buf, 0x16u);
          }
          goto LABEL_21;
        }
      }
      else
      {
      }
      uint64_t v14 = JSALog();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_84EE8();
      }
      goto LABEL_21;
    }
    if (a1)
    {
LABEL_22:

      goto LABEL_23;
    }
    uint64_t v14 = JSALog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_84E80();
    }
LABEL_21:

    goto LABEL_22;
  }
LABEL_23:

  return a1;
}

void sub_12054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1206C(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [*(id *)(a1[4] + 16) objectForKey:a1[5]];

  return _objc_release_x1();
}

void sub_12200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1221C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) keyEntries];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v18 = a1;
  id v3 = *(id *)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v19 objects:v25 count:16];
  if (v4)
  {
    id v6 = v4;
    uint64_t v7 = *(void *)v20;
    *(void *)&long long v5 = 138412290;
    long long v17 = v5;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v20 != v7) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        id v10 = [NSNumber numberWithUnsignedInteger:[v9 valueType]];
        id v11 = [v9 key];
        uint64_t v12 = [v2 objectForKey:v11];
        unsigned __int8 v13 = [v12 isEqualToNumber:v10];

        if ((v13 & 1) == 0)
        {
          uint64_t v14 = JSALog();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v15 = [v9 key];
            *(_DWORD *)buf = v17;
            __int16 v24 = v15;
            _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "JSAProfileBagManager: registered bag key %@ from JS", buf, 0xCu);
          }
          uint64_t v16 = [v9 key];
          [v2 setObject:v10 forKeyedSubscript:v16];

          *(unsigned char *)(*(void *)(*(void *)(v18 + 48) + 8) + 24) = 1;
        }
      }
      id v6 = [v3 countByEnumeratingWithState:&v19 objects:v25 count:16];
    }
    while (v6);
  }
}

void sub_125F0(uint64_t a1)
{
  id v3 = +[BUAccountsProvider sharedProvider];
  id v2 = [v3 currentStorefront];
  [*(id *)(a1 + 32) setLastBagStorefront:v2];
}

uint64_t sub_12A80(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 16) != 0;
  return result;
}

void sub_12A9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_12ADC((uint64_t)WeakRetained);
}

void sub_12ADC(uint64_t a1)
{
  if (a1)
  {
    id v25 = objc_opt_new();
    uint64_t v43 = 0;
    v44 = &v43;
    uint64_t v45 = 0x3032000000;
    v46 = sub_11920;
    v47 = sub_11930;
    id v48 = 0;
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v39 = sub_1307C;
    v40 = &unk_B2430;
    uint64_t v41 = a1;
    v42 = &v43;
    id v3 = v38;
    lock = (os_unfair_lock_s *)(a1 + 8);
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 8));
    v39((uint64_t)v3);
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));

    id v4 = JSALog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      long long v5 = [(id)v44[5] allKeys];
      id v6 = [v5 sortedArrayUsingSelector:"compare:"];
      uint64_t v1 = [v6 componentsJoinedByString:@", "];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v1;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "JSAProfileBagManager: keyEntries: %@", (uint8_t *)&buf, 0xCu);
    }
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    id v7 = (id)v44[5];
    id v8 = [v7 countByEnumeratingWithState:&v34 objects:v52 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v35;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v35 != v9) {
            objc_enumerationMutation(v7);
          }
          id v11 = *(void **)(*((void *)&v34 + 1) + 8 * i);
          uint64_t v12 = [(id)v44[5] objectForKeyedSubscript:v11];
          unsigned __int8 v13 = sub_11BC8((void *)a1, v11, (uint64_t)[v12 integerValue]);

          if (v13)
          {
            objc_opt_class();
            uint64_t v14 = BUDynamicCast();
            uint64_t v15 = v14;
            uint64_t v16 = v13;
            if (v14)
            {
              uint64_t v1 = [v14 absoluteString];
              uint64_t v16 = v1;
            }
            [v25 setObject:v16 forKeyedSubscript:v11];
            if (v15) {
          }
            }
        }
        id v8 = [v7 countByEnumeratingWithState:&v34 objects:v52 count:16];
      }
      while (v8);
    }

    if (![v25 count] || (objc_msgSend(*(id *)(a1 + 16), "isEqual:", v25) & 1) != 0) {
      goto LABEL_26;
    }
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v50 = 0x2020000000;
    char v51 = 0;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    uint64_t v29 = sub_130E0;
    __int16 v30 = &unk_B2768;
    p_long long buf = &buf;
    uint64_t v31 = a1;
    id v32 = v25;
    long long v17 = v28;
    os_unfair_lock_lock(lock);
    v29((uint64_t)v17);
    os_unfair_lock_unlock(lock);

    if (*(unsigned char *)(*((void *)&buf + 1) + 24))
    {
      uint64_t v18 = JSALog();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long v27 = 0;
        long long v19 = "JSAProfileBagManager: notifying JS with initial bag values (or after storefront change)";
LABEL_24:
        _os_log_impl(&dword_0, v18, OS_LOG_TYPE_DEFAULT, v19, v27, 2u);
      }
    }
    else
    {
      uint64_t v18 = JSALog();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long v27 = 0;
        long long v19 = "JSAProfileBagManager: notifying JS with updated bag values";
        goto LABEL_24;
      }
    }

    long long v20 = +[NSNotificationCenter defaultCenter];
    [v20 postNotificationName:@"JSAProfileBagChangedNotification" object:a1];

    long long v21 = +[JSABridge sharedInstance];
    long long v22 = [v21 environment];
    uint64_t v23 = [v22 thread];
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_13140;
    v26[3] = &unk_B2000;
    v26[4] = a1;
    [v23 enqueueBlock:v26];

    _Block_object_dispose(&buf, 8);
LABEL_26:
    _Block_object_dispose(&v43, 8);
  }
}

void sub_12FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_1303C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_12ADC((uint64_t)WeakRetained);
}

void sub_1307C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) keyEntries];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_130E0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(void *)(*(void *)(a1 + 32) + 16) == 0;
  *(void *)(*(void *)(a1 + 32) + 16) = [*(id *)(a1 + 40) copy];

  return _objc_release_x1();
}

void sub_13140(uint64_t a1)
{
  id v3 = +[JSABridge sharedInstance];
  id v2 = [*(id *)(a1 + 32) bagChangeHandler];
  [v3 enqueueManagedValueCall:v2 arguments:0 file:@"JSAProfileBagManager.m" line:346];
}

void sub_13880(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = +[JSABridge sharedInstance];
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = +[NSNumber numberWithBool:a2];
  v11[0] = v8;
  uint64_t v9 = v5;
  if (!v5)
  {
    uint64_t v9 = +[NSNull null];
  }
  v11[1] = v9;
  id v10 = +[NSArray arrayWithObjects:v11 count:2];
  [v6 enqueueValueCall:v7 arguments:v10 file:@"JSAAccount.m" line:80];

  if (!v5) {
}
  }

void sub_13AC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  id v5 = [*(id *)(a1 + 32) delegate];
  [v5 accountDidAttemptSignOut:*(void *)(a1 + 32)];

  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

id sub_13C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = (*(void (**)(void))(v2 + 16))();
    id v4 = +[AMSPromise promiseWithResult:v3];
  }
  else
  {
    id v4 = +[AMSPromise promiseWithResult:a2];
  }

  return v4;
}

void sub_13F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
}

void sub_13FB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [WeakRetained state];
    if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
      [v5 setState:1];
    }
    id v3 = [v5 pendingBlocks];
    id v4 = objc_retainBlock(*(id *)(a1 + 32));
    [v3 addObject:v4];

    id WeakRetained = v5;
  }
}

void sub_14058(uint64_t a1)
{
  if (a1)
  {
    id v2 = [objc_alloc((Class)NSThread) initWithTarget:a1 selector:"_scriptingThreadMain" object:0];
    [v2 setQualityOfService:33];
    [v2 setName:*(void *)(a1 + 8)];
    [v2 start];
  }
}

intptr_t sub_1423C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v2);
}

void sub_1445C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_14488(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_14498(uint64_t a1)
{
}

id sub_144A0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = *(void **)(*(void *)(a1 + 32) + 40);

  return [v5 removeAllObjects];
}

void sub_146E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_146FC(uint64_t a1)
{
  [*(id *)(a1 + 32) setState:2];
  id v2 = [*(id *)(a1 + 32) pendingBlocks];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 count] != 0;
}

void sub_1476C(uint64_t a1)
{
  [*(id *)(a1 + 32) setState:0];
  id v2 = [*(id *)(a1 + 32) pendingBlocks];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 count] != 0;

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    [v3 setState:1];
  }
}

void sub_14A54(uint64_t a1)
{
}

void sub_14A5C(void *a1)
{
  if (a1)
  {
    [a1 cancel];
    id v2 = [a1 onTimeoutManagedValue];

    if (v2)
    {
      id v4 = +[JSABridge sharedInstance];
      uint64_t v3 = [a1 onTimeoutManagedValue];
      [v4 enqueueManagedValueCall:v3 arguments:0 file:@"JSATimer.m" line:76];
    }
  }
}

void sub_14D0C(id a1)
{
  qword_CE360 = objc_opt_new();

  _objc_release_x1();
}

void sub_1547C(uint64_t a1)
{
  if (+[JSAOfflineCache runFromCache])
  {
    id v2 = *(void **)(a1 + 32);
    if ((v2[3] & 0x8000000000000000) != 0) {
      [v2 _aq_loadPostLaunchCaches];
    }
  }
  else if (+[JSAOfflineCache generateCache])
  {
    [*(id *)(a1 + 32) _aq_saveOfflineCache];
    uint64_t v3 = objc_opt_new();
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 8);
    *(void *)(v4 + 8) = v3;
  }
  ++*(void *)(*(void *)(a1 + 32) + 24);
}

uint64_t sub_157B8(uint64_t a1, uint64_t a2)
{
  char v3 = 0;
  LODWORD(result) = [*(id *)(a1 + 32) fileExistsAtPath:a2 isDirectory:&v3];
  if (v3) {
    return result;
  }
  else {
    return 0;
  }
}

id sub_158C8(void *a1)
{
  return [*(id *)(a1[4] + 8) setObject:a1[6] forKeyedSubscript:a1[5]];
}

void sub_15EA8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_15EE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_15EF4(uint64_t a1)
{
}

uint64_t sub_15EFC(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [*(id *)(a1[4] + 8) objectForKeyedSubscript:a1[5]];

  return _objc_release_x1();
}

id sub_15F4C(void *a1)
{
  uint64_t v2 = a1[4];
  char v3 = *(void **)(a1[5] + 8);
  if (v2) {
    return [v3 setObject:v2 forKeyedSubscript:a1[6]];
  }
  else {
    return [v3 removeObjectForKey:a1[6]];
  }
}

id sub_16004(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) enumerateKeysAndObjectsUsingBlock:*(void *)(a1 + 40)];
}

id *sub_16010(id *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    uint64_t v2 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [a1[1] count]);
    id v3 = v1[1];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_160D8;
    v5[3] = &unk_B2A20;
    uint64_t v1 = v2;
    id v6 = v1;
    [v3 enumerateKeysAndObjectsUsingBlock:v5];
  }

  return v1;
}

void sub_160D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 toDictionary];
  id v13 = 0;
  uint64_t v7 = +[NSJSONSerialization dataWithJSONObject:v6 options:0 error:&v13];
  id v8 = v13;
  uint64_t v9 = v8;
  if (v7)
  {
    id v10 = v8;
LABEL_4:
    id v11 = [v7 bu_gzipDeflate];
    [*(id *)(a1 + 32) setObject:v11 forKeyedSubscript:v5];

    goto LABEL_5;
  }
  id v12 = v8;
  uint64_t v7 = +[NSKeyedArchiver archivedDataWithRootObject:v6 requiringSecureCoding:1 error:&v12];
  id v10 = v12;

  if (v7) {
    goto LABEL_4;
  }
  uint64_t v7 = JSALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_85220();
  }
LABEL_5:
}

id sub_16274(uint64_t a1)
{
  return [*(id *)(a1 + 32) _aq_saveOfflineCache];
}

id sub_1656C()
{
  self;
  if (qword_CE378 != -1) {
    dispatch_once(&qword_CE378, &stru_B2A40);
  }
  v0 = (void *)qword_CE370;

  return v0;
}

void sub_165C4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_CE370;
  qword_CE370 = v1;

  [(id)qword_CE370 setName:@"JSAStoreHTTPRequest"];
  id v3 = (void *)qword_CE370;

  _[v3 setMaxConcurrentOperationCount:4];
}

void sub_1663C(void *a1)
{
  if (a1)
  {
    uint64_t v2 = (void *)a1[1];
    if (v2)
    {
      id v3 = [v2 jsa_parametrize:a1[10]];
      if (+[JSAOfflineCache runFromCache])
      {
        uint64_t v4 = sub_16ED8();
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_16FB4;
        block[3] = &unk_B2050;
        id v28 = v3;
        uint64_t v29 = a1;
        dispatch_async(v4, block);

        id v5 = v28;
      }
      else
      {
        id v5 = objc_opt_new();
        [v5 addBagKey:@"sf-api-token-service-url" valueType:5 defaultValue:@"https://sf-api-token-service.itunes.apple.com/apiToken/"];
        +[AMSBagKeySet registerBagKeySet:v5 forProfile:@"iBooks" profileVersion:@"1"];
        id v6 = +[BUBag defaultBag];
        uint64_t v7 = +[NSURLSessionConfiguration defaultSessionConfiguration];
        if (([a1 disableATS] & 1) == 0)
        {
          id v8 = +[NSPropertyListSerialization dataWithPropertyList:&off_B9A88 format:200 options:0 error:0];
          if (v8) {
            [v7 set_atsContext:v8];
          }
        }
        id v9 = objc_alloc((Class)AMSURLSession);
        objc_opt_class();
        id v10 = sub_1656C();
        long long v21 = v7;
        id v11 = [v9 initWithConfiguration:v7 delegate:a1 delegateQueue:v10];

        id v12 = [objc_alloc((Class)AMSMediaTokenService) initWithClientIdentifier:@"ibooks" bag:v6];
        [v12 setSession:v11];
        id v13 = [objc_alloc((Class)AMSMediaProtocolHandler) initWithTokenService:v12];
        [v11 setProtocolHandler:v13];
        uint64_t v14 = [JSARequestEncoder alloc];
        uint64_t v15 = [a1 cookiesToSuppress];
        uint64_t v16 = [(JSARequestEncoder *)v14 initWithTokenService:v12 bag:v6 cookiesToSuppress:v15];

        if ([a1 personalized])
        {
          long long v17 = +[BUAccountsProvider sharedProvider];
          uint64_t v18 = [v17 activeStoreAccount];
          [(JSARequestEncoder *)v16 setAccount:v18];
        }
        else
        {
          [(JSARequestEncoder *)v16 setAccount:0];
        }
        long long v19 = [(JSARequestEncoder *)v16 requestWithURL:v3];
        objc_initWeak(&location, a1);
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472;
        v22[2] = sub_17248;
        v22[3] = &unk_B2B00;
        objc_copyWeak(&v25, &location);
        id v23 = v3;
        id v20 = v11;
        id v24 = v20;
        [v19 addFinishBlock:v22];

        objc_destroyWeak(&v25);
        objc_destroyWeak(&location);
      }
    }
  }
}

void sub_169D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_16ED8()
{
  self;
  if (qword_CE388 != -1) {
    dispatch_once(&qword_CE388, &stru_B2A60);
  }
  v0 = (void *)qword_CE380;

  return v0;
}

void sub_16F30(id a1)
{
  uint64_t v4 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  uint64_t v1 = dispatch_queue_attr_make_with_qos_class(v4, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v2 = dispatch_queue_create("JSAStoreHTTPRequest.offlineCache", v1);
  id v3 = (void *)qword_CE380;
  qword_CE380 = (uint64_t)v2;
}

void sub_16FB4(uint64_t a1)
{
  dispatch_queue_t v2 = JSASignpostExecution();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  uint64_t v4 = JSASignpostExecution();
  id v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)long long v21 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "HTTP Offline Cache", "", v21, 2u);
  }

  id v6 = +[_JSAStoreHTTPReqestOfflineCache sharedOfflineCache];
  uint64_t v7 = [*(id *)(a1 + 32) absoluteString];
  id v8 = [v6 responseForKey:v7];

  if (!v8)
  {
    id v9 = JSALog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_85290((id *)(a1 + 32), v9);
    }

    id v8 = objc_alloc_init(JSAStoreHTTPResponse);
    [(JSAStoreHTTPResponse *)v8 setStatusCode:404];
    [(JSAStoreHTTPResponse *)v8 set_error:&off_B9A60];
  }
  id v10 = JSASignpostExecution();
  id v11 = v10;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)long long v21 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v11, OS_SIGNPOST_INTERVAL_END, v3, "HTTP Offline Cache", "", v21, 2u);
  }

  uint64_t v12 = *(void *)(a1 + 40);
  if (v12)
  {
    id v13 = *(void **)(v12 + 32);
    *(void *)(v12 + 32) = 0;

    uint64_t v12 = *(void *)(a1 + 40);
  }
  if (*(void *)(v12 + 96))
  {
    uint64_t v14 = +[JSABridge sharedInstance];
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 96);
    long long v22 = v8;
    uint64_t v16 = +[NSArray arrayWithObjects:&v22 count:1];
    [v14 enqueueValueCall:v15 arguments:v16 file:@"JSAStoreHTTPRequest.m" line:579];

    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = *(void **)(v17 + 96);
    *(void *)(v17 + 96) = 0;

    uint64_t v12 = *(void *)(a1 + 40);
  }
  id v19 = objc_retainBlock(*(id *)(v12 + 112));
  id v20 = v19;
  if (v19) {
    (*((void (**)(id, JSAStoreHTTPResponse *))v19 + 2))(v19, v8);
  }
}

void sub_17248(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  [v3 setHTTPMethod:*((void *)WeakRetained + 8)];
  [v3 setTimeoutInterval:*((double *)WeakRetained + 2) * 1000.0];
  if (*((void *)WeakRetained + 9))
  {
    if (([*((id *)WeakRetained + 8) isEqualToString:@"GET"] & 1) == 0
      && ([*((id *)WeakRetained + 8) isEqualToString:@"HEAD"] & 1) == 0
      && ([*((id *)WeakRetained + 8) isEqualToString:@"POST"] & 1) == 0
      && ([*((id *)WeakRetained + 8) isEqualToString:@"PUT"] & 1) == 0
      && ![*((id *)WeakRetained + 8) isEqualToString:@"PATCH"])
    {
      id v5 = JSALog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v13 = a1[4];
        uint64_t v14 = *((void *)WeakRetained + 8);
        uint64_t v15 = *((void *)WeakRetained + 9);
        *(_DWORD *)long long buf = 136446978;
        id v23 = "-[JSAStoreHTTPRequest _enqueue]_block_invoke";
        __int16 v24 = 2114;
        uint64_t v25 = v14;
        __int16 v26 = 2112;
        id v27 = v13;
        __int16 v28 = 2112;
        uint64_t v29 = v15;
        _os_log_error_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "%{public}s unexpected body for %{public}@ \"%@\" %@", buf, 0x2Au);
      }
      goto LABEL_9;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v5 = [*((id *)WeakRetained + 9) dataUsingEncoding:4];
      [v3 setHTTPBody:v5];
LABEL_9:

      goto LABEL_15;
    }
    uint64_t v6 = *((void *)WeakRetained + 9);
    id v21 = 0;
    uint64_t v7 = +[NSJSONSerialization dataWithJSONObject:v6 options:1 error:&v21];
    id v8 = v21;
    if (v8)
    {
      id v9 = [objc_alloc((Class)NSString) initWithData:*((void *)WeakRetained + 9) encoding:4];

      if (!v9) {
        [v3 setHTTPBody:v7];
      }
    }
    else
    {
      [v3 setHTTPBody:v7];
      [v3 setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    }
  }
LABEL_15:
  id v10 = (void *)*((void *)WeakRetained + 11);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_175E8;
  v19[3] = &unk_B2A88;
  id v20 = v3;
  id v11 = v3;
  [v10 enumerateKeysAndObjectsUsingBlock:v19];
  objc_storeStrong((id *)WeakRetained + 5, a1[5]);
  uint64_t v12 = (void *)*((void *)WeakRetained + 5);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_175F4;
  v18[3] = &unk_B2AB0;
  v18[4] = WeakRetained;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_17654;
  v16[3] = &unk_B2AD8;
  v16[4] = WeakRetained;
  id v17 = a1[4];
  [v12 createDataTaskWithRequest:v11 activity:0 dataTaskCreationCompletionHandler:v18 requestCompletionHandler:v16];
}

id sub_175E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

void sub_175F4(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), a2);
  id v4 = a2;
  [*(id *)(*(void *)(a1 + 32) + 32) resume];
}

void sub_17654(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = JSALog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_85328(a1, (uint64_t)v6, v7);
    }
  }
  id v8 = JSALog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 40);
    id v10 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v5 responseStatusCode]);
    id v11 = [v5 data];
    uint64_t v12 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v11 length]);
    id v13 = [v5 logUUID];
    uint64_t v14 = [v5 responseCorrelationId];
    *(_DWORD *)long long buf = 138413314;
    uint64_t v42 = v9;
    __int16 v43 = 2112;
    v44 = v10;
    __int16 v45 = 2112;
    v46 = v12;
    __int16 v47 = 2114;
    id v48 = v13;
    __int16 v49 = 2114;
    uint64_t v50 = v14;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Response for %@: status=%@, size=%@, CFNetworkId=%{public}@, correlationId=%{public}@", buf, 0x34u);
  }
  uint64_t v15 = *(void *)(a1 + 32);
  if (v15)
  {
    uint64_t v16 = *(void **)(v15 + 32);
    *(void *)(v15 + 32) = 0;
  }
  id v17 = objc_alloc_init(JSAStoreHTTPResponse);
  uint64_t v18 = [v5 object];
  [(JSAStoreHTTPResponse *)v17 setOutput:v18];

  if (v6)
  {
    v39[0] = @"domain";
    id v19 = [v6 domain];
    v40[0] = v19;
    v39[1] = @"code";
    id v20 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v6 code]);
    v40[1] = v20;
    v39[2] = @"userInfo";
    id v21 = [v6 userInfo];
    v40[2] = v21;
    long long v22 = +[NSDictionary dictionaryWithObjects:v40 forKeys:v39 count:3];
    [(JSAStoreHTTPResponse *)v17 set_error:v22];
  }
  uint64_t v23 = [v5 responseHeaders];
  __int16 v24 = (void *)v23;
  if (v23) {
    uint64_t v25 = (void *)v23;
  }
  else {
    uint64_t v25 = &__NSDictionary0__struct;
  }
  [(JSAStoreHTTPResponse *)v17 setHeaders:v25];

  [(JSAStoreHTTPResponse *)v17 setStatusCode:sub_17AA0(*(id *)(a1 + 32), v5, v6)];
  __int16 v26 = sub_17C18(*(void *)(a1 + 32), v5, (uint64_t)v6);
  [(JSAStoreHTTPResponse *)v17 setPerformanceMetrics:v26];

  if (+[JSAOfflineCache generateCache])
  {
    id v27 = +[_JSAStoreHTTPReqestOfflineCache sharedOfflineCache];
    __int16 v28 = [*(id *)(a1 + 40) absoluteString];
    [v27 setResponse:v17 forKey:v28];

    uint64_t v29 = +[_JSAStoreHTTPReqestOfflineCache sharedOfflineCache];
    [v29 _saveOfflineCache:0];
  }
  uint64_t v30 = *(void *)(a1 + 32);
  if (*(void *)(v30 + 96))
  {
    uint64_t v31 = +[JSABridge sharedInstance];
    id v32 = [*(id *)(a1 + 32) onResponse];
    id v38 = v17;
    id v33 = +[NSArray arrayWithObjects:&v38 count:1];
    [v31 enqueueValueCall:v32 arguments:v33 file:@"JSAStoreHTTPRequest.m" line:719];

    uint64_t v34 = *(void *)(a1 + 32);
    long long v35 = *(void **)(v34 + 96);
    *(void *)(v34 + 96) = 0;

    uint64_t v30 = *(void *)(a1 + 32);
  }
  id v36 = objc_retainBlock(*(id *)(v30 + 112));
  long long v37 = v36;
  if (v36) {
    (*((void (**)(id, JSAStoreHTTPResponse *))v36 + 2))(v36, v17);
  }
}

id sub_17AA0(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    NSErrorDomain v8 = [v6 domain];
    NSErrorDomain v9 = v8;
    if (v8 == NSURLErrorDomain)
    {
      id v10 = [v7 code];

      if (v10 == (id)-1001)
      {
        a1 = &stru_338 + 76;
        goto LABEL_13;
      }
    }
    else
    {
    }
    id v11 = [v7 domain];
    uint64_t v12 = v11;
    if (v11 == (void *)AMSErrorDomain)
    {
      id v13 = [v7 userInfo];
      uint64_t v14 = AMSErrorUserInfoKeyStatusCode;
      uint64_t v15 = [v13 objectForKeyedSubscript:AMSErrorUserInfoKeyStatusCode];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        id v17 = [v7 userInfo];
        uint64_t v18 = [v17 objectForKeyedSubscript:v14];
        a1 = [v18 integerValue];

        goto LABEL_13;
      }
    }
    else
    {
    }
    if (v5) {
      a1 = [v5 responseStatusCode];
    }
    else {
      a1 = &stru_388 + 46;
    }
  }
LABEL_13:

  return a1;
}

id sub_17C18(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = [a2 taskMetrics];
    id v5 = [v4 transactionMetrics];
    id v6 = [v5 lastObject];

    if (!a3 || v6)
    {
      NSErrorDomain v8 = [v6 requestStartDate];
      [v8 timeIntervalSince1970];
      id v10 = +[NSNumber numberWithDouble:v9 * 1000.0];

      id v11 = [v6 responseStartDate];
      [v11 timeIntervalSince1970];
      id v13 = +[NSNumber numberWithDouble:v12 * 1000.0];

      uint64_t v14 = [v6 responseEndDate];
      [v14 timeIntervalSince1970];
      uint64_t v16 = +[NSNumber numberWithDouble:v15 * 1000.0];

      v19[0] = @"requestStartTime";
      v19[1] = @"responseStartTime";
      v20[0] = v10;
      v20[1] = v13;
      v20[2] = v16;
      v19[2] = @"responseEndTime";
      v19[3] = @"responseCached";
      id v17 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v6 resourceFetchType] == (char *)&dword_0 + 3);
      v20[3] = v17;
      uint64_t v7 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:4];
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

void sub_18178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18198(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id v6 = [v10 lowercaseString];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  NSErrorDomain v8 = [WeakRetained lowercaseRestrictedHeaders];
  unsigned __int8 v9 = [v8 containsObject:v6];

  if ((v9 & 1) == 0
    && ([v6 hasPrefix:@"proxy-"] & 1) == 0
    && ([v6 hasPrefix:@"sec-"] & 1) == 0)
  {
    [*(id *)(a1 + 32) setObject:v5 forKey:v10];
  }
}

void sub_18598(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

id JSASignpost()
{
  if (qword_CE398 != -1) {
    dispatch_once(&qword_CE398, &stru_B2B50);
  }
  v0 = (void *)qword_CE390;

  return v0;
}

void sub_18618(id a1)
{
  qword_CE390 = (uint64_t)os_log_create("com.apple.iBooks", "JSA.Signpost");

  _objc_release_x1();
}

id JSASignpostExecution()
{
  if (qword_CE3A8 != -1) {
    dispatch_once(&qword_CE3A8, &stru_B2B70);
  }
  v0 = (void *)qword_CE3A0;

  return v0;
}

void sub_186B0(id a1)
{
  qword_CE3A0 = (uint64_t)os_log_create("com.apple.iBooks", "JSA.Execution");

  _objc_release_x1();
}

id JSASignpostFeedController()
{
  if (qword_CE3B8 != -1) {
    dispatch_once(&qword_CE3B8, &stru_B2B90);
  }
  v0 = (void *)qword_CE3B0;

  return v0;
}

void sub_18748(id a1)
{
  qword_CE3B0 = (uint64_t)os_log_create("com.apple.iBooks", "JSA.FeedController");

  _objc_release_x1();
}

id JSASignpostJS()
{
  if (qword_CE3C8 != -1) {
    dispatch_once(&qword_CE3C8, &stru_B2BB0);
  }
  v0 = (void *)qword_CE3C0;

  return v0;
}

void sub_187E0(id a1)
{
  qword_CE3C0 = (uint64_t)os_log_create("com.apple.iBooks", "JSA.JS");

  _objc_release_x1();
}

void sub_18A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  dispatch_queue_t v2 = [WeakRetained delegate];
  [v2 feedController:WeakRetained wantsToUpdateSearchText:*(void *)(a1 + 32)];
}

uint64_t sub_18AD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_18CD8(id a1)
{
  id v2 = +[UIViewController jsa_topMostViewControllerForWindow:0];
  id v1 = objc_alloc_init((Class)FAFamilySettings);
  if (objc_opt_respondsToSelector())
  {
    [v1 setPresentingViewController:v2];
    [v1 launchiCloudFamilySettings];
  }
}

uint64_t sub_18D60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_194F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v6 = v3;
    if (v3)
    {
      id v4 = [[JSAFeedMetadata alloc] initWithDictionary:v3];
      uint64_t v5 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = v4;
    }
    else
    {
      uint64_t v5 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = 0;
    }

    id v3 = v6;
  }
}

void sub_19574(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = JSASignpostFeedController();
    os_signpost_id_t v5 = os_signpost_id_generate(v4);

    id v6 = JSASignpostFeedController();
    uint64_t v7 = v6;
    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v7, OS_SIGNPOST_INTERVAL_BEGIN, v5, "Bridge Feed", "", buf, 2u);
    }

    NSErrorDomain v8 = +[JSABridge sharedInstance];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_22334;
    v9[3] = &unk_B30E0;
    v9[4] = a1;
    os_signpost_id_t v11 = v5;
    id v10 = v3;
    [v8 enqueueBlock:v9 file:@"JSAFeedController.m" line:1018];
  }
}

void sub_19A44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_19A68(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSASignpostFeedController();
  os_signpost_id_t v5 = v4;
  os_signpost_id_t v6 = *(void *)(a1 + 40);
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)unsigned __int8 v9 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_END, v6, "Request Entries", "", v9, 2u);
  }

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  NSErrorDomain v8 = v7;
  if (v7) {
    (*((void (**)(id, id))v7 + 2))(v7, v3);
  }
}

void sub_19B2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 136446466;
    uint64_t v14 = "-[JSAFeedController requestEntriesWithCompletion:]_block_invoke";
    __int16 v15 = 2048;
    uint64_t v16 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s %p: got callback from JS", buf, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setRequestEntriesCompletionBlock:0];

  id v7 = *(NSObject **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_19CB4;
  block[3] = &unk_B2C58;
  objc_copyWeak(&v12, (id *)(a1 + 56));
  id v10 = v3;
  id v11 = *(id *)(a1 + 48);
  id v8 = v3;
  dispatch_async(v7, block);

  objc_destroyWeak(&v12);
}

void sub_19CB4(id *a1)
{
  val = (id *)objc_loadWeakRetained(a1 + 6);
  if (val) {
    objc_storeStrong(val + 4, a1[4]);
  }
  id v2 = objc_retainBlock(a1[5]);
  id v3 = v2;
  if (v2) {
    (*((void (**)(id, id))v2 + 2))(v2, a1[4]);
  }

  id v4 = val;
  if (val)
  {
    sub_19D48(val);
    id v4 = val;
  }
}

void sub_19D48(id val)
{
  if (val)
  {
    objc_initWeak(&location, val);
    id v1 = +[JSABridge sharedInstance];
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_22AD0;
    v2[3] = &unk_B3108;
    objc_copyWeak(&v3, &location);
    [v1 enqueueBlock:v2 file:@"JSAFeedController.m" line:1062];

    objc_destroyWeak(&v3);
    objc_destroyWeak(&location);
  }
}

void sub_19E10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_19E34(id *a1)
{
  uint64_t v2 = a1 + 4;
  id v3 = [a1[4] feed];
  unsigned int v4 = [v3 isObject];

  if (v4)
  {
    uint64_t v5 = JSALog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = *v2;
      *(_DWORD *)long long buf = 136446466;
      __int16 v24 = "-[JSAFeedController requestEntriesWithCompletion:]_block_invoke_2";
      __int16 v25 = 2048;
      id v26 = v6;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%{public}s %p: bridged, now call getContentAsynchronously", buf, 0x16u);
    }

    id v7 = +[JSABridge sharedInstance];
    id v8 = [a1[4] feed];
    id v9 = objc_retainBlock(a1[5]);
    id v22 = v9;
    id v10 = +[NSArray arrayWithObjects:&v22 count:1];
    [v7 enqueueValueInvocation:v8 method:@"getContentAsynchronously" arguments:v10 file:@"JSAFeedController.m" line:157];
  }
  else if ([*v2 feedBridged])
  {
    id v11 = JSALog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_854C4((uint64_t)v2, v11, v12, v13, v14, v15, v16, v17);
    }

    id v18 = objc_retainBlock(a1[6]);
    id v19 = v18;
    if (v18) {
      (*((void (**)(id, void))v18 + 2))(v18, 0);
    }
  }
  else
  {
    id v20 = a1[6];
    id v21 = a1[4];
    [v21 setRequestEntriesCompletionBlock:v20];
  }
}

void sub_1A2D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1A2F8(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if ([v7 isObject])
  {
    if (v10)
    {
      id v18 = v9;
      id v19 = v8;
      id v20 = v10;
      id v11 = &v18;
      uint64_t v12 = 3;
    }
    else
    {
      id v16 = v9;
      id v17 = v8;
      id v11 = &v16;
      uint64_t v12 = 2;
    }
    uint64_t v13 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v11, v12, v16, v17, v18, v19, v20);
    uint64_t v14 = [v7 invokeMethod:@"executeEntryBehavior" withArguments:v13];
    if ([v14 isBoolean] && (objc_msgSend(v14, "toBool") & 1) == 0)
    {
      uint64_t v15 = JSALog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_85548();
      }
    }
  }
}

void sub_1A450(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  uint64_t v2 = [WeakRetained feed];
  sub_1A2F8(v2, a1[4], a1[5], a1[6]);
}

void sub_1A4BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    unsigned int v4 = JSALog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446466;
      id v8 = "-[JSAFeedController _reloadWithCompletion:]";
      __int16 v9 = 2048;
      uint64_t v10 = a1;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload", buf, 0x16u);
    }

    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1A5F4;
    v5[3] = &unk_B2650;
    void v5[4] = a1;
    id v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }
}

void sub_1A5F4(uint64_t a1)
{
  uint64_t v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 136446466;
    uint64_t v14 = "-[JSAFeedController _reloadWithCompletion:]_block_invoke";
    __int16 v15 = 2048;
    uint64_t v16 = v3;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload step 0: current feed disappear", buf, 0x16u);
  }

  unsigned int v4 = [*(id *)(a1 + 32) delegate];
  unsigned int v5 = [v4 feedControllerIsOnScreen:*(void *)(a1 + 32)];

  if (v5)
  {
    sub_1A81C(*(void **)(a1 + 32));
    sub_1A8AC(*(void **)(a1 + 32));
  }
  id v6 = JSALog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 136446466;
    uint64_t v14 = "-[JSAFeedController _reloadWithCompletion:]_block_invoke";
    __int16 v15 = 2048;
    uint64_t v16 = v7;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload step 1: teardown current feed", buf, 0x16u);
  }

  objc_initWeak((id *)buf, *(id *)(a1 + 32));
  id v8 = *(void **)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1A93C;
  v9[3] = &unk_B2D48;
  objc_copyWeak(&v11, (id *)buf);
  id v10 = *(id *)(a1 + 40);
  char v12 = v5;
  [v8 tearDownWithCompletion:v9];

  objc_destroyWeak(&v11);
  objc_destroyWeak((id *)buf);
}

void sub_1A7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A81C(void *a1)
{
  if (a1)
  {
    id v3 = +[JSABridge sharedInstance];
    uint64_t v2 = [a1 feed];
    [v3 enqueueValueInvocation:v2 method:@"analyticsVisibilityWillDisappear" arguments:0 file:@"JSAFeedController.m" line:888];
  }
}

void sub_1A8AC(void *a1)
{
  if (a1)
  {
    id v3 = +[JSABridge sharedInstance];
    uint64_t v2 = [a1 feed];
    [v3 enqueueValueInvocation:v2 method:@"onDisappear" arguments:0 file:@"JSAFeedController.m" line:825];
  }
}

void sub_1A93C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v4 = [WeakRetained abandoned];
  if (!WeakRetained || v4)
  {
    id v6 = JSALog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_855D8();
    }

    id v7 = objc_retainBlock(*(id *)(a1 + 32));
    id v5 = v7;
    if (v7) {
      (*((void (**)(id))v7 + 2))(v7);
    }
  }
  else
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1AA98;
    v8[3] = &unk_B2D20;
    id v9 = WeakRetained;
    objc_copyWeak(&v11, v2);
    char v12 = *(unsigned char *)(a1 + 48);
    id v10 = *(id *)(a1 + 32);
    sub_19574((uint64_t)v9, v8);

    objc_destroyWeak(&v11);
    id v5 = v9;
  }
}

void sub_1AA84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1AA98(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1AB5C;
  v2[3] = &unk_B2D20;
  id v3 = *(id *)(a1 + 32);
  objc_copyWeak(&v5, (id *)(a1 + 48));
  char v6 = *(unsigned char *)(a1 + 56);
  id v4 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

  objc_destroyWeak(&v5);
}

void sub_1AB5C(uint64_t a1)
{
  uint64_t v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = *(void **)(a1 + 32);
    *(_DWORD *)long long buf = 136446466;
    id v11 = "-[JSAFeedController _reloadWithCompletion:]_block_invoke_2";
    __int16 v12 = 2048;
    uint64_t v13 = v3;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload step 3: new feed appear", buf, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained && *(unsigned char *)(a1 + 56))
  {
    sub_1AD54(WeakRetained);
    sub_1ADE4(v5);
    sub_1AE74(v5);
  }
  char v6 = JSALog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 136446466;
    id v11 = "-[JSAFeedController _reloadWithCompletion:]_block_invoke";
    __int16 v12 = 2048;
    uint64_t v13 = v5;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload step 4: request entries", buf, 0x16u);
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1AF04;
  v7[3] = &unk_B2CF8;
  objc_copyWeak(&v9, (id *)(a1 + 48));
  id v8 = *(id *)(a1 + 40);
  [v5 requestEntriesWithCompletion:v7];

  objc_destroyWeak(&v9);
}

void sub_1AD38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1AD54(void *a1)
{
  if (a1)
  {
    id v3 = +[JSABridge sharedInstance];
    uint64_t v2 = [a1 feed];
    [v3 enqueueValueInvocation:v2 method:@"onAppear" arguments:0 file:@"JSAFeedController.m" line:799];
  }
}

void sub_1ADE4(void *a1)
{
  if (a1)
  {
    id v3 = +[JSABridge sharedInstance];
    uint64_t v2 = [a1 feed];
    [v3 enqueueValueInvocation:v2 method:@"didAppear" arguments:0 file:@"JSAFeedController.m" line:812];
  }
}

void sub_1AE74(void *a1)
{
  if (a1)
  {
    id v3 = +[JSABridge sharedInstance];
    uint64_t v2 = [a1 feed];
    [v3 enqueueValueInvocation:v2 method:@"analyticsVisibilityDidAppear" arguments:0 file:@"JSAFeedController.m" line:867];
  }
}

void sub_1AF04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = JSALog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446466;
      uint64_t v13 = "-[JSAFeedController _reloadWithCompletion:]_block_invoke";
      __int16 v14 = 2048;
      __int16 v15 = WeakRetained;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload step 5: updateContentWithData", buf, 0x16u);
    }

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1B0FC;
    v10[3] = &unk_B2000;
    char v6 = WeakRetained;
    id v11 = v6;
    os_unfair_lock_lock_with_options();
    sub_1B0FC((uint64_t)v10);
    os_unfair_lock_unlock(WeakRetained + 3);
    [(os_unfair_lock_s *)v6 updateContentWithData:v3];
  }
  id v7 = JSALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 136446466;
    uint64_t v13 = "-[JSAFeedController _reloadWithCompletion:]_block_invoke_2";
    __int16 v14 = 2048;
    __int16 v15 = WeakRetained;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "%{public}s %p: reload done", buf, 0x16u);
  }

  id v8 = objc_retainBlock(*(id *)(a1 + 32));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id))v8 + 2))(v8);
  }
}

uint64_t sub_1B0FC(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 8) = 0;
  return result;
}

void sub_1B268(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  [v2 feedController:WeakRetained wantsToUpdateContentWithData:*(void *)(a1 + 32)];
}

id sub_1B43C(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (qword_CE3D8 == -1)
    {
      if (v3)
      {
LABEL_4:
        id v5 = [(id)qword_CE3D0 objectForKeyedSubscript:v4];
        a1 = [v5 integerValue];

        goto LABEL_7;
      }
    }
    else
    {
      dispatch_once(&qword_CE3D8, &stru_B3128);
      if (v4) {
        goto LABEL_4;
      }
    }
    a1 = 0;
  }
LABEL_7:

  return a1;
}

void sub_1B4D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained delegate];
  objc_msgSend(v2, "feedController:viewStateDidUpdate:fromPreviousState:", WeakRetained, objc_msgSend(WeakRetained, "viewState"), *(void *)(a1 + 40));
}

void sub_1B824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B848(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = [WeakRetained delegate];
  if (v5 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    sub_1B8F0(*(void *)(a1 + 32), *(void **)(a1 + 40), v5);
    [v4 feedController:WeakRetained wantsToPushViewController:v5 animated:*(unsigned __int8 *)(a1 + 56)];
  }
}

void sub_1B8F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    objc_opt_class();
    id v7 = BUDynamicCast();
    id v8 = [v7 objectForKeyedSubscript:@"sourceView"];
    objc_initWeak(&location, v8);

    objc_opt_class();
    id v9 = [v7 objectForKeyedSubscript:@"shouldZoomAnimate"];
    id v10 = BUDynamicCast();
    unsigned int v11 = [v10 BOOLValue];

    id v12 = objc_loadWeakRetained(&location);
    if (v12 && _os_feature_enabled_impl())
    {

      if (v11)
      {
        __int16 v14 = _NSConcreteStackBlock;
        uint64_t v15 = 3221225472;
        uint64_t v16 = sub_2312C;
        id v17 = &unk_B31A0;
        objc_copyWeak(&v18, &location);
        uint64_t v13 = +[_UIViewControllerTransition zoomWithSourceViewProvider:&v14];
        [v6 _setPreferredTransition:v13, v14, v15, v16, v17];

        objc_destroyWeak(&v18);
      }
    }
    else
    {
    }
    objc_destroyWeak(&location);
  }
}

void sub_1BAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BC24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BC48(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained delegate];
  if (v5 && (objc_opt_respondsToSelector() & 1) != 0) {
    [v4 feedController:WeakRetained wantsToReplaceCurrentViewController:v5 animated:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_1BE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BE94(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained delegate];
  if (v5 && (objc_opt_respondsToSelector() & 1) != 0) {
    [v4 feedController:WeakRetained wantsToPresentViewController:v5 animated:*(unsigned __int8 *)(a1 + 48) params:*(void *)(a1 + 32)];
  }
}

void sub_1C094(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained presentViewController:*(void *)(a1 + 32) :1 :&off_B9AB0];
}

void sub_1C25C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C280(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained delegate];
  if (v5 && (objc_opt_respondsToSelector() & 1) != 0) {
    [v4 feedController:WeakRetained wantsToSlideInFeedViewController:v5];
  }
}

void sub_1C4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C4CC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained delegate];
  if (v5 && (objc_opt_respondsToSelector() & 1) != 0) {
    [v4 feedController:WeakRetained wantsToPresentViewControllerInPopover:v5 withParams:*(void *)(a1 + 32)];
  }
}

void sub_1C768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C78C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    [v2 feedController:WeakRetained wantsToPopViewController:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 32)];
  }
  else
  {
    id v3 = +[JSABridge sharedInstance];
    [v3 enqueueValueCall:*(void *)(a1 + 32) arguments:&off_B9C10 file:@"JSAFeedController.m" line:406];
  }
}

uint64_t sub_1C848(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1CA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CA7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    [v2 feedController:WeakRetained wantsToPopToRootViewControllerAnimated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 32)];
  }
  else
  {
    id v3 = +[JSABridge sharedInstance];
    [v3 enqueueValueCall:*(void *)(a1 + 32) arguments:&off_B9C28 file:@"JSAFeedController.m" line:421];
  }
}

uint64_t sub_1CB38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1CD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    int v3 = *(unsigned __int8 *)(a1 + 48);
    if ([*(id *)(a1 + 32) isObject]) {
      uint64_t v4 = *(void *)(a1 + 32);
    }
    else {
      uint64_t v4 = 0;
    }
    [v2 feedController:WeakRetained wantsToDismissViewControllerAnimated:v3 != 0 completion:v4];
  }
}

uint64_t sub_1CE0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1D0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D104(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  int v3 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v4 = *(void **)(a1 + 32);
    if (v4)
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      int v6[2] = sub_1D1F4;
      v6[3] = &unk_B2000;
      id v7 = v4;
      id v5 = objc_retainBlock(v6);
    }
    else
    {
      id v5 = 0;
    }
    [v3 feedController:WeakRetained wantsToPresentCardsWithCardArray:*(void *)(a1 + 40) focusedIndex:*(void *)(a1 + 64) animated:*(unsigned __int8 *)(a1 + 72) options:*(void *)(a1 + 48) completion:v5];
  }
}

void sub_1D1F4(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"JSAFeedController.m" line:453];
}

uint64_t sub_1D25C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1D520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D544(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  int v3 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v4 = *(void **)(a1 + 32);
    if (v4)
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      int v6[2] = sub_1D634;
      v6[3] = &unk_B2000;
      id v7 = v4;
      id v5 = objc_retainBlock(v6);
    }
    else
    {
      id v5 = 0;
    }
    [v3 feedController:WeakRetained wantsToPresentCardsWithCardArray:*(void *)(a1 + 40) focusedIndex:*(void *)(a1 + 64) animated:*(unsigned __int8 *)(a1 + 72) options:*(void *)(a1 + 48) completion:v5];
  }
}

void sub_1D634(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"JSAFeedController.m" line:475];
}

uint64_t sub_1D69C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1D8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D91C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v2 feedController:WeakRetained wantsToAppendCards:*(void *)(a1 + 32) options:*(void *)(a1 + 40)];
  }
}

uint64_t sub_1D994(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1DB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DBC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v2 feedController:WeakRetained didLoadCardResource:*(void *)(a1 + 32)];
  }
}

uint64_t sub_1DC38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1DE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DE6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v2 feedController:WeakRetained wantsToPerformRawActionModel:*(void *)(a1 + 32) shouldReportFigaro:*(unsigned __int8 *)(a1 + 48)];
  }
}

uint64_t sub_1DEE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1E140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
}

uint64_t sub_1E174(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1E184(uint64_t a1)
{
}

void sub_1E18C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained && (objc_opt_respondsToSelector() & 1) != 0)
  {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 64);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1E2A4;
    v8[3] = &unk_B2ED8;
    void v8[4] = WeakRetained;
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = *(id *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    id v9 = v5;
    uint64_t v10 = v6;
    [v4 feedController:WeakRetained collectAndFlush:v3 accumulatedImpressionsWithCompletion:v8];
  }
  else
  {
    id v7 = +[JSABridge sharedInstance];
    [v7 enqueueValueCall:*(void *)(a1 + 40) arguments:&__NSArray0__struct file:@"JSAFeedController.m" line:560];

    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) invalidate];
  }
}

void sub_1E2A4(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[4];
    *(_DWORD *)long long buf = 136446466;
    id v12 = "-[JSAFeedController collectAndFlush:accumulatedImpressionsWithCompletion:]_block_invoke_2";
    __int16 v13 = 2048;
    uint64_t v14 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s %p callback", buf, 0x16u);
  }

  uint64_t v6 = +[JSABridge sharedInstance];
  uint64_t v7 = a1[5];
  id v10 = v3;
  id v8 = +[NSArray arrayWithObjects:&v10 count:1];
  [v6 enqueueValueCall:v7 arguments:v8 file:@"JSAFeedController.m" line:554];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1E434;
  v9[3] = &unk_B2EB0;
  void v9[4] = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

id sub_1E434(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) invalidate];
}

void sub_1E650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
}

void sub_1E680(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1E798;
    v8[3] = &unk_B2ED8;
    uint64_t v4 = *(void **)(a1 + 40);
    void v8[4] = *(void *)(a1 + 32);
    id v5 = v4;
    uint64_t v6 = *(void *)(a1 + 48);
    id v9 = v5;
    uint64_t v10 = v6;
    [v3 feedController:WeakRetained collectVisibleImpressionsWithCompletion:v8];
  }
  else
  {
    uint64_t v7 = +[JSABridge sharedInstance];
    [v7 enqueueValueCall:*(void *)(a1 + 40) arguments:&__NSArray0__struct file:@"JSAFeedController.m" line:590];

    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) invalidate];
  }
}

void sub_1E798(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[4];
    *(_DWORD *)long long buf = 136446466;
    id v12 = "-[JSAFeedController collectVisibleImpressionsWithCompletion:]_block_invoke_2";
    __int16 v13 = 2048;
    uint64_t v14 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s %p callback", buf, 0x16u);
  }

  uint64_t v6 = +[JSABridge sharedInstance];
  uint64_t v7 = a1[5];
  id v10 = v3;
  id v8 = +[NSArray arrayWithObjects:&v10 count:1];
  [v6 enqueueValueCall:v7 arguments:v8 file:@"JSAFeedController.m" line:584];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1E928;
  v9[3] = &unk_B2EB0;
  void v9[4] = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

id sub_1E928(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) invalidate];
}

void sub_1EAFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1EB20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v1 resetImpressionsForFeedController:WeakRetained];
  }
}

uint64_t sub_1EB90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1EDAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
}

void sub_1EDDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1EEF4;
    v8[3] = &unk_B2F50;
    uint64_t v4 = *(void **)(a1 + 40);
    void v8[4] = *(void *)(a1 + 32);
    id v5 = v4;
    uint64_t v6 = *(void *)(a1 + 48);
    id v9 = v5;
    uint64_t v10 = v6;
    [v3 feedController:WeakRetained collectStatsWithCompletion:v8];
  }
  else
  {
    uint64_t v7 = +[JSABridge sharedInstance];
    [v7 enqueueValueCall:*(void *)(a1 + 40) arguments:&__NSArray0__struct file:@"JSAFeedController.m" line:634];

    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) invalidate];
  }
}

void sub_1EEF4(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[4];
    *(_DWORD *)long long buf = 136446466;
    id v12 = "-[JSAFeedController collectStatsWithCompletion:]_block_invoke_2";
    __int16 v13 = 2048;
    uint64_t v14 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s %p callback", buf, 0x16u);
  }

  uint64_t v6 = +[JSABridge sharedInstance];
  uint64_t v7 = a1[5];
  id v10 = v3;
  id v8 = +[NSArray arrayWithObjects:&v10 count:1];
  [v6 enqueueValueCall:v7 arguments:v8 file:@"JSAFeedController.m" line:628];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1F084;
  v9[3] = &unk_B2EB0;
  void v9[4] = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

id sub_1F084(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) invalidate];
}

void sub_1F258(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1F27C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v1 feedController:WeakRetained dismissKeyboard:0];
  }
}

uint64_t sub_1F2F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1F510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1F534(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      [v2 feedController:WeakRetained scrollToItem:v3 animated:*(unsigned __int8 *)(a1 + 48) skipVoiceOverFocus:*(unsigned __int8 *)(a1 + 49)];
    }
  }
}

uint64_t sub_1F5B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1F7B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1F7D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v2 feedController:WeakRetained requestToSetNavigationBarHidden:*(unsigned __int8 *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 41)];
  }
}

uint64_t sub_1F850(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1FA70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1FA94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v2 feedController:WeakRetained requestToRenderSharableImage:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
  }
}

uint64_t sub_1FB0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1FD40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1FD64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      [v2 feedController:WeakRetained addAlphaOverrideToItem:v3 alpha:*(unsigned __int8 *)(a1 + 64) animated:*(double *)(a1 + 48) duration:*(double *)(a1 + 56)];
    }
  }
}

uint64_t sub_1FDE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_20000(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_20024(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      [v2 feedController:WeakRetained removeAlphaOverrideFromItem:v3 animated:*(unsigned __int8 *)(a1 + 56) duration:*(double *)(a1 + 48)];
    }
  }
}

uint64_t sub_200A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2027C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_202A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v1 showLoadingViewForFeedController:WeakRetained];
  }
}

uint64_t sub_20310(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_204E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_20508(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained delegate];
  if (objc_opt_respondsToSelector()) {
    [v1 hideLoadingViewForFeedController:WeakRetained];
  }
}

uint64_t sub_20578(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_20798(uint64_t a1)
{
  uint64_t v13 = 0;
  uint64_t v14 = (id *)&v13;
  uint64_t v15 = 0x3042000000;
  uint64_t v16 = sub_208EC;
  id v17 = sub_208F8;
  id v18 = 0;
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472;
  uint64_t v7 = sub_20900;
  id v8 = &unk_B3068;
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = v2;
  id v11 = *(id *)(a1 + 48);
  id v12 = &v13;
  uint64_t v3 = objc_retainBlock(&v5);
  objc_storeWeak(v14 + 5, v3);
  uint64_t v4 = [*(id *)(a1 + 32) delegate:v5, v6, v7, v8, v9];
  [v4 feedController:*(void *)(a1 + 32) addObserver:v3 forTrigger:*(void *)(a1 + 40)];

  _Block_object_dispose(&v13, 8);
  objc_destroyWeak(&v18);
}

void sub_208CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  _Unwind_Resume(a1);
}

void sub_208EC(uint64_t a1, uint64_t a2)
{
}

void sub_208F8(uint64_t a1)
{
}

void sub_20900(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[JSABridge sharedInstance];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_209F4;
  v7[3] = &unk_B3040;
  uint64_t v5 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v5;
  id v9 = *(id *)(a1 + 48);
  id v10 = v3;
  uint64_t v11 = *(void *)(a1 + 56);
  id v6 = v3;
  [v4 enqueueBlock:v7 file:@"JSAFeedController.m" line:772];
}

void sub_209F4(uint64_t a1)
{
  uint64_t v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 136446722;
    uint64_t v16 = "-[JSAFeedController addWeakTriggerObserver::]_block_invoke_2";
    __int16 v17 = 2048;
    uint64_t v18 = v3;
    __int16 v19 = 2112;
    uint64_t v20 = v4;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}s %p: %@ triggered", buf, 0x20u);
  }

  uint64_t v5 = [*(id *)(a1 + 48) value];

  if (v5)
  {
    id v6 = +[JSABridge sharedInstance];
    uint64_t v7 = [*(id *)(a1 + 48) value];
    uint64_t v14 = *(void *)(a1 + 56);
    id v8 = +[NSArray arrayWithObjects:&v14 count:1];
    [v6 enqueueValueCall:v7 arguments:v8 file:@"JSAFeedController.m" line:766];
  }
  else
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_20BC4;
    void v11[3] = &unk_B3018;
    uint64_t v9 = *(void *)(a1 + 64);
    id v10 = *(void **)(a1 + 40);
    v11[4] = *(void *)(a1 + 32);
    uint64_t v13 = v9;
    id v12 = v10;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);
  }
}

void sub_20BC4(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) delegate];
  uint64_t v2 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  [v4 feedController:v2 removeObserver:WeakRetained forTrigger:*(void *)(a1 + 40)];
}

uint64_t sub_20C48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_20CFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_20D18(uint64_t a1)
{
  id v4 = +[JSABridge sharedInstance];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained feed];
  [v4 enqueueValueInvocation:v3 method:@"nativeScrollViewReachedTheBottom" arguments:0 file:@"JSAFeedController.m" line:785];
}

void sub_20DAC(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [a1 dataSource];
    uint64_t v5 = [v4 hostViewControllerForFeedController:a1];

    id v6 = [v5 viewIfLoaded];
    uint64_t v7 = [v6 window];
    id v8 = [v7 windowScene];

    if (v8 && [v8 activationState])
    {
      if ([a1 feedBridged])
      {
        id v9 = objc_retainBlock(v3);
        id v10 = v9;
        if (v9) {
          (*((void (**)(id))v9 + 2))(v9);
        }
      }
    }
    else
    {
      uint64_t v11 = [a1 access];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_230E0;
      block[3] = &unk_B2028;
      id v13 = v3;
      dispatch_async(v11, block);
    }
  }
}

void sub_20FAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_20FC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_1AD54(WeakRetained);
}

void sub_210AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_210C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_1ADE4(WeakRetained);
}

void sub_211AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_211C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_1A8AC(WeakRetained);
}

void sub_2135C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v15 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2138C(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 8) ^ 1;
  *(unsigned char *)(*(void *)(result + 32) + 8) = 1;
  return result;
}

void sub_213B0(uint64_t a1)
{
  id v4 = +[JSABridge sharedInstance];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained feed];
  [v4 enqueueValueInvocation:v3 method:@"initialContentReady" arguments:0 file:@"JSAFeedController.m" line:839];
}

void sub_21538(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_21554(uint64_t a1)
{
  uint64_t v2 = +[JSABridge sharedInstance];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = [WeakRetained feed];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = v5;
  if (!v5)
  {
    id v6 = +[NSNull null];
  }
  v10[0] = v6;
  uint64_t v7 = *(void **)(a1 + 40);
  id v8 = v7;
  if (!v7)
  {
    id v8 = +[NSNull null];
  }
  v10[1] = v8;
  id v9 = +[NSArray arrayWithObjects:v10 count:2];
  [v2 enqueueValueInvocation:v4 method:@"parentCardWillDismiss" arguments:v9 file:@"JSAFeedController.m" line:853];

  if (!v7)
  {

    if (v5) {
      goto LABEL_7;
    }
LABEL_9:

    goto LABEL_7;
  }
  if (!v5) {
    goto LABEL_9;
  }
LABEL_7:
}

void sub_21740(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_2175C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_1AE74(WeakRetained);
}

void sub_2187C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_21898(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_21934;
  v3[3] = &unk_B2000;
  id v4 = *(id *)(a1 + 32);
  sub_219C0((uint64_t)WeakRetained, v3);
}

void sub_21934(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_219B8;
  block[3] = &unk_B2000;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_219B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_219C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = +[JSABridge sharedInstance];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_21A88;
    v5[3] = &unk_B3090;
    void v5[4] = a1;
    id v6 = v3;
    [v4 enqueueBlock:v5 file:@"JSAFeedController.m" line:896];
  }
}

uint64_t sub_21A88(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) feed];
  id v3 = [v2 invokeMethod:@"analyticsVisibilityWillDisappear" withArguments:0];

  id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v4();
}

void sub_22288(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  char v3 = objc_opt_respondsToSelector();

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) delegate];
    [v4 feedControllerWillHotReload:*(void *)(a1 + 32)];
  }
  uint64_t v5 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v5)
  {
    id v6 = v5;
    v5[2]();
    uint64_t v5 = v6;
  }
}

void sub_22334(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 objectForKeyedSubscript:@"FeedFactory"];
  if ([v4 isObject])
  {
    objc_initWeak(&location, a1[4]);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_22598;
    v15[3] = &unk_B30B8;
    v17[1] = a1[6];
    objc_copyWeak(v17, &location);
    id v16 = a1[5];
    uint64_t v5 = objc_retainBlock(v15);
    id v6 = +[JSABridge sharedInstance];
    uint64_t v7 = [a1[4] options];
    id v8 = (void *)v7;
    id v9 = &__NSDictionary0__struct;
    if (v7) {
      id v9 = (void *)v7;
    }
    v19[0] = v9;
    id v10 = objc_retainBlock(v5);
    v19[1] = v10;
    uint64_t v11 = +[NSArray arrayWithObjects:v19 count:2];
    [v6 enqueueValueInvocation:v4 method:@"createFeed" arguments:v11 file:@"JSAFeedController.m" line:1011];

    objc_destroyWeak(v17);
    objc_destroyWeak(&location);
  }
  else
  {
    id v12 = JSASignpostFeedController();
    id v13 = v12;
    os_signpost_id_t v14 = (os_signpost_id_t)a1[6];
    if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
    {
      LOWORD(location) = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v13, OS_SIGNPOST_INTERVAL_END, v14, "Bridge Feed", "", (uint8_t *)&location, 2u);
    }

    [a1[4] setFeedBridged:1];
  }
}

void sub_22574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22598(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSASignpostFeedController();
  uint64_t v5 = v4;
  os_signpost_id_t v6 = *(void *)(a1 + 48);
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)uint64_t v15 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_END, v6, "Bridge Feed", "", v15, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ([v3 isObject])
    {
      [WeakRetained setFeed:v3];
      [WeakRetained setFeedBridged:1];
      [v3 setValue:WeakRetained forProperty:@"feedController"];
      id v8 = [WeakRetained requestEntriesCompletionBlock];

      if (v8)
      {
        id v9 = [WeakRetained requestEntriesCompletionBlock];
        [WeakRetained requestEntriesWithCompletion:v9];
      }
      sub_2273C(WeakRetained, 1);
    }
    else
    {
      id v10 = [WeakRetained requestEntriesCompletionBlock];

      if (v10)
      {
        uint64_t v11 = [WeakRetained requestEntriesCompletionBlock];
        id v12 = (void *)v11;
        if (v11) {
          (*(void (**)(uint64_t, void))(v11 + 16))(v11, 0);
        }

        [WeakRetained setRequestEntriesCompletionBlock:0];
      }
    }
  }
  id v13 = objc_retainBlock(*(id *)(a1 + 32));
  os_signpost_id_t v14 = v13;
  if (v13) {
    (*((void (**)(id))v13 + 2))(v13);
  }
}

void sub_2273C(void *a1, char a2)
{
  if (a1)
  {
    id v4 = JSASignpostFeedController();
    os_signpost_id_t v5 = os_signpost_id_generate(v4);

    os_signpost_id_t v6 = JSASignpostFeedController();
    uint64_t v7 = v6;
    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
    {
      LOWORD(buf[0]) = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v7, OS_SIGNPOST_INTERVAL_BEGIN, v5, "Reload Metadata", "", (uint8_t *)buf, 2u);
    }

    id v8 = [a1 feed];
    unsigned int v9 = [v8 hasProperty:@"metadata"];

    if (v9)
    {
      id v10 = [a1 feed];
      uint64_t v11 = [v10 valueForProperty:@"metadata"];

      id v12 = [v11 toDictionary];
      if (v12)
      {
        sub_194F8((uint64_t)a1, v12);
        id v13 = [a1 delegate];
        char v14 = objc_opt_respondsToSelector();

        if (v14)
        {
          objc_initWeak(buf, a1);
          v20[0] = _NSConcreteStackBlock;
          v20[1] = 3221225472;
          v20[2] = sub_22A20;
          v20[3] = &unk_B2E60;
          objc_copyWeak(&v21, buf);
          char v22 = a2;
          void v20[4] = a1;
          uint64_t v15 = objc_retainBlock(v20);
          if (v15)
          {
            if (+[NSThread isMainThread])
            {
              ((void (*)(void *))v15[2])(v15);
            }
            else
            {
              v18[0] = _NSConcreteStackBlock;
              v18[1] = 3221225472;
              v18[2] = sub_22AC0;
              v18[3] = &unk_B2028;
              __int16 v19 = v15;
              dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);
            }
          }

          objc_destroyWeak(&v21);
          objc_destroyWeak(buf);
        }
      }
    }
    id v16 = JSASignpostFeedController();
    __int16 v17 = v16;
    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v16))
    {
      LOWORD(buf[0]) = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v17, OS_SIGNPOST_INTERVAL_END, v5, "Reload Metadata", "", (uint8_t *)buf, 2u);
    }
  }
}

void sub_22A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22A20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained delegate];
  [v2 feedControllerDidUpdateMetadata:WeakRetained];

  if (*(unsigned char *)(a1 + 48))
  {
    id v3 = [WeakRetained delegate];
    id v4 = [*(id *)(a1 + 32) metadata];
    [v4 navigationBarInitialBackgroundOpacity];
    [v3 feedController:WeakRetained wantsToUpdateNavBarBackgroundOpacity:];
  }
}

uint64_t sub_22AC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_22AD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_2273C(WeakRetained, 0);
}

void sub_22B14(id a1)
{
  v3[0] = @"NORMAL";
  v3[1] = @"OFFLINE";
  v4[0] = &off_B9B38;
  v4[1] = &off_B9B50;
  v3[2] = @"GENERIC_ERROR";
  v3[3] = @"SERVER_ERROR";
  v4[2] = &off_B9B68;
  v4[3] = &off_B9B80;
  void v3[4] = @"PRODUCT_UNAVAILABLE";
  v3[5] = @"CONTENT_UNAVAILABLE";
  v4[4] = &off_B9B20;
  v4[5] = &off_B9B98;
  v3[6] = @"DISABLED_STOREFRONT";
  v3[7] = @"FOR_YOU_INELIGIBLE";
  v4[6] = &off_B9BB0;
  v4[7] = &off_B9BC8;
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:8];
  id v2 = (void *)qword_CE3D0;
  qword_CE3D0 = v1;
}

void sub_22E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22E74(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_22F60;
  v3[3] = &unk_B3150;
  uint64_t v5 = *(void *)(a1 + 40);
  objc_copyWeak(&v6, (id *)(a1 + 48));
  id v4 = *(id *)(a1 + 32);
  [v2 enqueueBlock:v3 file:@"JSAFeedController.m" line:1121];

  objc_destroyWeak(&v6);
}

void sub_22F4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F60(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = 0;

  if ([v2 hasProperty:@"willUnload"]) {
    id v5 = [v2 invokeMethod:@"willUnload" withArguments:0];
  }
  [v2 setValue:0 forProperty:@"feedController"];
  id v6 = JSALog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    int v11 = 136446466;
    id v12 = "-[JSAFeedController tearDownWithCompletion:]_block_invoke_2";
    __int16 v13 = 2048;
    id v14 = WeakRetained;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "%{public}s: %p JSGarbageCollect()", (uint8_t *)&v11, 0x16u);
  }
  id v8 = [v2 context];
  JSGarbageCollect((JSContextRef)[v8 JSGlobalContextRef]);

  id v9 = objc_retainBlock(*(id *)(a1 + 32));
  id v10 = v9;
  if (v9) {
    (*((void (**)(id))v9 + 2))(v9);
  }
}

void sub_230E0(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

id sub_2312C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained window];
  if (v3) {
    id v4 = objc_loadWeakRetained(v1);
  }
  else {
    id v4 = 0;
  }

  return v4;
}

void sub_2339C(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void))v2 + 2))(v2, *(void *)(a1 + 32));
    id v2 = v3;
  }
}

void sub_233F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = [WeakRetained delegate];

  if (objc_opt_respondsToSelector())
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_2350C;
    v8[3] = &unk_B31C8;
    id v9 = *(id *)(a1 + 48);
    id v10 = *(id *)(a1 + 56);
    [v3 feedController:v4 wantsToCreateNewFeedWithOptions:v5 completion:v8];
  }
  else
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 56));
    uint64_t v7 = v6;
    if (v6) {
      (*((void (**)(id, void))v6 + 2))(v6, 0);
    }
  }
}

void sub_2350C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    uint64_t v7 = JSALog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_85844();
    }
  }
  id v8 = objc_retainBlock(*(id *)(a1 + 40));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id, id))v8 + 2))(v8, v5);
  }
}

void sub_23748(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_23964(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_CE3E8;
  qword_CE3E8 = (uint64_t)v1;

  return +[JSAMetricsAppLaunchEvent createPendingLaunchEvent];
}

void sub_23AF8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) environment];
  [v2 registerObjects:*(void *)(a1 + 40)];
}

void sub_23D90(id *a1)
{
  unsigned int v2 = [a1[4] hasStarted];
  [a1[4] setHasStarted:1];
  if (v2)
  {
    id v3 = JSALog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      sub_858C8();
    }

    id v4 = objc_retainBlock(a1[6]);
    id v5 = v4;
    if (v4) {
      (*((void (**)(id))v4 + 2))(v4);
    }
  }
  else
  {
    id v7 = [a1[5] objectRegistrationsForBridge:a1[4]];
    id v6 = [a1[4] environment];
    [v6 registerObjects:v7];

    sub_23E7C(a1[4], a1[6]);
  }
}

void sub_23E7C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = JSASignpostExecution();
    os_signpost_id_t v5 = os_signpost_id_generate(v4);

    id v6 = JSASignpostExecution();
    id v7 = v6;
    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v7, OS_SIGNPOST_INTERVAL_BEGIN, v5, "Init JSAEnvironment", "", buf, 2u);
    }

    id v8 = [a1 launchPackageProvisioner];
    int v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    __int16 v13 = sub_241B4;
    id v14 = &unk_B3298;
    uint64_t v15 = a1;
    id v16 = v3;
    [v8 provisionWithCompletionHandler:&v11];

    [a1 setLaunchPackageProvisioner:0, v11, v12, v13, v14, v15];
    uint64_t v9 = JSASignpostExecution();
    id v10 = v9;
    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v10, OS_SIGNPOST_INTERVAL_END, v5, "Init JSAEnvironment", "", buf, 2u);
    }
  }
}

void sub_240A0(id a1, JSAPackage *a2)
{
  unsigned int v2 = a2;
  id v3 = JSALog();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      os_signpost_id_t v5 = [(JSAPackage *)v2 version];
      unsigned int v6 = [(JSAPackage *)v2 isBundled];
      CFStringRef v7 = &stru_B6668;
      if (v6) {
        CFStringRef v7 = @" (bundled)";
      }
      int v8 = 138412546;
      uint64_t v9 = v5;
      __int16 v10 = 2112;
      CFStringRef v11 = v7;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "Provisioned package of version: %@%@", (uint8_t *)&v8, 0x16u);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    sub_858FC();
  }
}

void sub_241B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_new();
  [*(id *)(a1 + 32) setLastScriptCacheDate:v4];

  if (v3)
  {
    [*(id *)(a1 + 32) setupWithPackage:v3 completion:*(void *)(a1 + 40)];
    os_signpost_id_t v5 = dispatch_get_global_queue(-32768, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_242B8;
    block[3] = &unk_B2000;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async(v5, block);
  }
  else
  {
    unsigned int v6 = JSALog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
      sub_8593C();
    }
  }
}

id sub_242B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) checkForUpgradeWithCompletion:0];
}

void sub_24380(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_new();
  [*(id *)(a1 + 32) setLastScriptCacheDate:v4];

  if (v3)
  {
    uint64_t v5 = [v3 version];
    unsigned int v6 = (void *)v5;
    CFStringRef v7 = @"0.0.0";
    if (v5) {
      CFStringRef v7 = (__CFString *)v5;
    }
    int v8 = v7;

    uint64_t v9 = [*(id *)(a1 + 32) currentPackage];
    __int16 v10 = [v9 version];

    CFStringRef v11 = [*(id *)(a1 + 32) currentPackage];
    if (([v11 isBundled] & 1) != 0
      || ![(__CFString *)v10 isEqualToString:v8])
    {
    }
    else
    {
      unsigned __int8 v12 = [(__CFString *)v10 isEqualToString:@"0.0.0"];

      if ((v12 & 1) == 0)
      {
        __int16 v13 = JSALog();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          int v28 = 136446466;
          uint64_t v29 = "-[JSABridge checkForUpgradeWithCompletion:]_block_invoke";
          __int16 v30 = 2114;
          uint64_t v31 = v10;
          _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "%{public}s no pending package for later, current=%{public}@", (uint8_t *)&v28, 0x16u);
        }

        id v14 = *(void **)(a1 + 32);
        uint64_t v15 = 0;
LABEL_14:
        [v14 setPendingPackageVersion:v15];
        id v17 = objc_retainBlock(*(id *)(a1 + 40));
        uint64_t v18 = v17;
        if (v17) {
          (*((void (**)(id, id))v17 + 2))(v17, v3);
        }

        goto LABEL_21;
      }
    }
    id v16 = JSALog();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v28 = 136446722;
      uint64_t v29 = "-[JSABridge checkForUpgradeWithCompletion:]_block_invoke";
      __int16 v30 = 2114;
      uint64_t v31 = v8;
      __int16 v32 = 2114;
      id v33 = v10;
      _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, "%{public}s pending package with version=%{public}@ for later, current=%{public}@", (uint8_t *)&v28, 0x20u);
    }

    id v14 = *(void **)(a1 + 32);
    uint64_t v15 = v8;
    goto LABEL_14;
  }
  __int16 v19 = JSALog();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
    sub_85970(v19, v20, v21, v22, v23, v24, v25, v26);
  }

  id v27 = (__CFString *)objc_retainBlock(*(id *)(a1 + 40));
  int v8 = v27;
  if (v27) {
    ((void (*)(__CFString *, void))v27->data)(v27, 0);
  }
LABEL_21:
}

void sub_2487C(uint64_t a1)
{
  unsigned int v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) version];
    int v6 = 136446466;
    CFStringRef v7 = "-[JSABridge upgradePackage:completion:]_block_invoke";
    __int16 v8 = 2114;
    uint64_t v9 = v3;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}s successfully upgraded to %{public}@", (uint8_t *)&v6, 0x16u);
  }
  id v4 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v5 = v4;
  if (v4) {
    (*((void (**)(id, void))v4 + 2))(v4, *(void *)(a1 + 32));
  }
}

void sub_24978(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSALog();
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = [v3 version];
      *(_DWORD *)long long buf = 136446466;
      uint64_t v21 = "-[JSABridge upgradePackage:completion:]_block_invoke";
      __int16 v22 = 2114;
      uint64_t v23 = v6;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%{public}s successfully obtained pending package version %{public}@ for upgrade", buf, 0x16u);
    }
    CFStringRef v7 = *(void **)(a1 + 32);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    id v17[2] = sub_24B20;
    v17[3] = &unk_B2650;
    id v18 = v3;
    id v19 = *(id *)(a1 + 40);
    [v7 setupWithPackage:v18 completion:v17];

    __int16 v8 = v18;
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_859E8(v5, v9, v10, v11, v12, v13, v14, v15);
    }

    id v16 = objc_retainBlock(*(id *)(a1 + 40));
    __int16 v8 = v16;
    if (v16) {
      (*((void (**)(id, void))v16 + 2))(v16, 0);
    }
  }
}

void sub_24B20(uint64_t a1)
{
  unsigned int v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) version];
    int v6 = 136446466;
    CFStringRef v7 = "-[JSABridge upgradePackage:completion:]_block_invoke";
    __int16 v8 = 2114;
    uint64_t v9 = v3;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}s successfully upgraded to %{public}@", (uint8_t *)&v6, 0x16u);
  }
  id v4 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v5 = v4;
  if (v4) {
    (*((void (**)(id, void))v4 + 2))(v4, *(void *)(a1 + 32));
  }
}

void sub_24F34(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"JSABridgeWillReloadNotification" object:0];
}

void sub_24F88(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) templateBundleRegistrar];
  [v2 registerTemplateBundlesFromPackage:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 48) errorOnlyCompletionHandlerAdapter];
  v3[2](v3, 0);
}

void sub_25000(id *a1)
{
  if ([a1[4] isScriptLoaded])
  {
    +[JSAApplication didFinishLaunchingWithMetrics:0];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_255D0;
    block[3] = &unk_B2000;
    id v9 = a1[5];
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    +[JSAMetricsAppLaunchEvent markJSBootstrapEndTime];
    if (BUIsRunningTests())
    {
      uint64_t v2 = [a1[4] _beforeJSAppLaunchBlock];
      id v3 = (void *)v2;
      if (v2) {
        (*(void (**)(uint64_t))(v2 + 16))(v2);
      }
    }
    [a1[4] setIsScriptLoaded:1];
    sub_25188(a1[4], 0);
    +[JSAApplication didFinishLaunchingWithMetrics:1];
  }
  [a1[4] setIsLoadingScript:0];
  id v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CFStringRef v7 = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "JSABridge loadScriptFromPackage: done", v7, 2u);
  }

  id v5 = objc_retainBlock(a1[6]);
  int v6 = v5;
  if (v5) {
    (*((void (**)(id))v5 + 2))(v5);
  }
}

void sub_25188(void *a1, int a2)
{
  if (a1 && [a1 isScriptLoaded])
  {
    objc_initWeak(&location, a1);
    id v4 = [a1 launchExecutionRecordQueue];

    if (v4)
    {
      if (a2) {
        dispatch_semaphore_t v5 = dispatch_semaphore_create(0);
      }
      else {
        dispatch_semaphore_t v5 = 0;
      }
      __int16 v8 = [a1 environment];
      id v9 = [v8 thread];
      v37[0] = _NSConcreteStackBlock;
      v37[1] = 3221225472;
      v37[2] = sub_260D8;
      v37[3] = &unk_B3328;
      char v40 = a2;
      objc_copyWeak(&v39, &location);
      v37[4] = a1;
      uint64_t v10 = v5;
      id v38 = v10;
      [v9 enqueueBlock:v37];

      if (v10)
      {
        dispatch_time_t v11 = dispatch_time(0, 10000000000);
        if (dispatch_semaphore_wait(v10, v11))
        {
          uint64_t v12 = JSALog();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
            sub_85A94(v12, v13, v14, v15, v16, v17, v18, v19);
          }
        }
      }

      objc_destroyWeak(&v39);
    }
    else if (+[NSThread isMainThread])
    {
      int v6 = [a1 environment];
      CFStringRef v7 = [v6 thread];
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472;
      v35[2] = sub_26568;
      v35[3] = &unk_B3350;
      char v36 = a2;
      v35[4] = a1;
      [v7 enqueueBlock:v35];
    }
    else
    {
      uint64_t v20 = [a1 environment];
      uint64_t v21 = [v20 thread];
      unsigned int v22 = [v21 isRunningOnThread];

      if (v22)
      {
        uint64_t v23 = JSASignpostExecution();
        os_signpost_id_t v24 = os_signpost_id_generate(v23);

        uint64_t v25 = JSASignpostExecution();
        uint64_t v26 = v25;
        if (v24 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v25))
        {
          CFStringRef v27 = @"NO";
          if (a2) {
            CFStringRef v27 = @"YES";
          }
          *(_DWORD *)long long buf = 138412290;
          CFStringRef v43 = v27;
          _os_signpost_emit_with_name_impl(&dword_0, v26, OS_SIGNPOST_INTERVAL_BEGIN, v24, "JSAThread Block", "sync: %@", buf, 0xCu);
        }

        int v28 = [a1 generalExecutionRecordQueue];
        sub_262B8(a1, v28);

        uint64_t v29 = JSASignpostExecution();
        __int16 v30 = v29;
        if (v24 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v29))
        {
          *(_WORD *)long long buf = 0;
          _os_signpost_emit_with_name_impl(&dword_0, v30, OS_SIGNPOST_INTERVAL_END, v24, "JSAThread Block", "", buf, 2u);
        }
      }
      else
      {
        uint64_t v31 = [a1 environment];
        __int16 v32 = [v31 thread];
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472;
        v33[2] = sub_266DC;
        v33[3] = &unk_B3350;
        char v34 = a2;
        v33[4] = a1;
        [v32 enqueueBlockSync:v33];
      }
    }
    objc_destroyWeak(&location);
  }
}

void sub_25584(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_255D0(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v3 = *(void *)(a1 + 32);
  CFStringRef v5 = @"package";
  uint64_t v6 = v3;
  id v4 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
  [v2 postNotificationName:@"JSABridgeDidReloadNotification" object:0 userInfo:v4];
}

void sub_2609C(id a1)
{
  qword_CE3F8 = objc_alloc_init(JSAEnvironment);

  _objc_release_x1();
}

void sub_260D8(uint64_t a1)
{
  uint64_t v2 = JSASignpostExecution();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  id v4 = JSASignpostExecution();
  CFStringRef v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    if (*(unsigned char *)(a1 + 56)) {
      CFStringRef v6 = @"YES";
    }
    else {
      CFStringRef v6 = @"NO";
    }
    int v14 = 138412290;
    CFStringRef v15 = v6;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "Launch Block", "sync: %@", (uint8_t *)&v14, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [*(id *)(a1 + 32) debugAssertRunningOnJSAThread];
  __int16 v8 = [WeakRetained launchExecutionRecordQueue];

  if (v8)
  {
    id v9 = [WeakRetained launchExecutionRecordQueue];
    sub_262B8(WeakRetained, v9);

    [WeakRetained setLaunchExecutionRecordQueue:0];
  }
  uint64_t v10 = [WeakRetained generalExecutionRecordQueue];
  sub_262B8(WeakRetained, v10);

  dispatch_time_t v11 = *(NSObject **)(a1 + 40);
  if (v11) {
    dispatch_semaphore_signal(v11);
  }
  uint64_t v12 = JSASignpostExecution();
  uint64_t v13 = v12;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    LOWORD(v14) = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v13, OS_SIGNPOST_INTERVAL_END, v3, "Launch Block", "", (uint8_t *)&v14, 2u);
  }
}

void sub_262B8(void *a1, void *a2)
{
  if (a1)
  {
    os_signpost_id_t v3 = [a2 dequeueAllRecords];
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v4 = [v3 countByEnumeratingWithState:&v18 objects:v28 count:16];
    if (!v4) {
      goto LABEL_26;
    }
    id v6 = v4;
    uint64_t v7 = *(void *)v19;
    *(void *)&long long v5 = 136446722;
    long long v17 = v5;
    while (1)
    {
      __int16 v8 = 0;
      do
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v8);
        if (objc_msgSend(v9, "type", v17) == (char *)&dword_0 + 1)
        {
          uint64_t v10 = [v9 block];
          if (v10)
          {
            dispatch_time_t v11 = [a1 environment];
            uint64_t v12 = [v11 context];
            ((void (**)(void, void *))v10)[2](v10, v12);
            goto LABEL_10;
          }
          goto LABEL_15;
        }
        if ([v9 type] == (char *)&dword_0 + 2)
        {
          uint64_t v10 = [v9 recordValue];
          dispatch_time_t v11 = [v9 arguments];
          if ([v10 isObject]) {
            id v13 = [v10 callWithArguments:v11];
          }
          goto LABEL_14;
        }
        if ([v9 type] == (char *)&dword_0 + 3)
        {
          uint64_t v10 = [v9 recordValue];
          dispatch_time_t v11 = [v9 method];
          uint64_t v12 = [v9 arguments];
          if ([v10 isObject])
          {
            if ([v10 hasProperty:v11])
            {
              id v14 = [v10 invokeMethod:v11 withArguments:v12];
            }
            else
            {
              CFStringRef v15 = JSALog();
              if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)long long buf = v17;
                uint64_t v23 = "-[JSABridge _processPendingExecutionRecordsForQueue:]";
                __int16 v24 = 2114;
                uint64_t v25 = v11;
                __int16 v26 = 2114;
                CFStringRef v27 = v10;
                _os_log_error_impl(&dword_0, v15, OS_LOG_TYPE_ERROR, "%{public}s attempting to invoke method %{public}@ on %{public}@ that is unavailable", buf, 0x20u);
              }
            }
          }
LABEL_10:

LABEL_14:
LABEL_15:
        }
        __int16 v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v16 = [v3 countByEnumeratingWithState:&v18 objects:v28 count:16];
      id v6 = v16;
      if (!v16)
      {
LABEL_26:

        return;
      }
    }
  }
}

void sub_26568(uint64_t a1)
{
  uint64_t v2 = JSASignpostExecution();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  id v4 = JSASignpostExecution();
  long long v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    if (*(unsigned char *)(a1 + 40)) {
      CFStringRef v6 = @"YES";
    }
    else {
      CFStringRef v6 = @"NO";
    }
    int v11 = 138412290;
    CFStringRef v12 = v6;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "Main Block", "sync: %@", (uint8_t *)&v11, 0xCu);
  }

  uint64_t v7 = *(void **)(a1 + 32);
  __int16 v8 = [v7 generalExecutionRecordQueue];
  sub_262B8(v7, v8);

  id v9 = JSASignpostExecution();
  uint64_t v10 = v9;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    LOWORD(v11) = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v10, OS_SIGNPOST_INTERVAL_END, v3, "Main Block", "", (uint8_t *)&v11, 2u);
  }
}

void sub_266DC(uint64_t a1)
{
  uint64_t v2 = JSASignpostExecution();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  id v4 = JSASignpostExecution();
  long long v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    if (*(unsigned char *)(a1 + 40)) {
      CFStringRef v6 = @"YES";
    }
    else {
      CFStringRef v6 = @"NO";
    }
    int v11 = 138412290;
    CFStringRef v12 = v6;
    _os_signpost_emit_with_name_impl(&dword_0, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "Non-main Block", "sync: %@", (uint8_t *)&v11, 0xCu);
  }

  uint64_t v7 = *(void **)(a1 + 32);
  __int16 v8 = [v7 generalExecutionRecordQueue];
  sub_262B8(v7, v8);

  id v9 = JSASignpostExecution();
  uint64_t v10 = v9;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    LOWORD(v11) = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v10, OS_SIGNPOST_INTERVAL_END, v3, "Non-main Block", "", (uint8_t *)&v11, 2u);
  }
}

void sub_26AAC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_27920(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    long long v5 = [v3 version];
    *(_DWORD *)long long buf = 136446466;
    id v13 = "-[JSAApplication downloadAndCacheScript:]_block_invoke";
    __int16 v14 = 2112;
    CFStringRef v15 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s done, version=%@", buf, 0x16u);
  }
  CFStringRef v6 = +[JSABridge sharedInstance];
  uint64_t v7 = *(void *)(a1 + 32);
  __int16 v8 = [v3 version];
  uint64_t v9 = v8;
  if (!v8)
  {
    uint64_t v9 = +[NSNull null];
  }
  int v11 = v9;
  uint64_t v10 = +[NSArray arrayWithObjects:&v11 count:1];
  [v6 enqueueValueCall:v7 arguments:v10 file:@"JSAApplication.m" line:122];

  if (!v8) {
}
  }

void sub_27BB8(uint64_t a1)
{
  uint64_t v2 = +[JSABridge sharedInstance];
  id v3 = [v2 pendingPackageVersion];

  if (v3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    int v6[2] = sub_27D30;
    v6[3] = &unk_B33A0;
    id v7 = *(id *)(a1 + 32);
    [v2 upgradePackage:0 completion:v6];
    id v4 = v7;
  }
  else
  {
    long long v5 = JSALog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v9 = "-[JSAApplication reloadWithNewCacheIfAvailable:]_block_invoke";
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%{public}s nothing to upgrade", buf, 0xCu);
    }

    id v4 = +[JSABridge sharedInstance];
    [v4 enqueueValueCall:*(void *)(a1 + 32) arguments:&off_B9C40 file:@"JSAApplication.m" line:138];
  }
}

void sub_27D30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    long long v5 = [v3 version];
    *(_DWORD *)long long buf = 136446466;
    id v13 = "-[JSAApplication reloadWithNewCacheIfAvailable:]_block_invoke_2";
    __int16 v14 = 2112;
    CFStringRef v15 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s done, version=%@", buf, 0x16u);
  }
  CFStringRef v6 = +[JSABridge sharedInstance];
  uint64_t v7 = *(void *)(a1 + 32);
  __int16 v8 = [v3 version];
  uint64_t v9 = v8;
  if (!v8)
  {
    uint64_t v9 = +[NSNull null];
  }
  int v11 = v9;
  uint64_t v10 = +[NSArray arrayWithObjects:&v11 count:1];
  [v6 enqueueValueCall:v7 arguments:v10 file:@"JSAApplication.m" line:134];

  if (!v8) {
}
  }

void sub_27FC8(uint64_t a1)
{
  uint64_t v2 = +[JSABridge sharedInstance];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_28070;
  v3[3] = &unk_B33A0;
  id v4 = *(id *)(a1 + 32);
  [v2 upgradePackage:0 completion:v3];
}

void sub_28070(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    long long v5 = [v3 version];
    *(_DWORD *)long long buf = 136446466;
    id v13 = "-[JSAApplication reloadWithNewCache:]_block_invoke_2";
    __int16 v14 = 2112;
    CFStringRef v15 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}s done, version=%@", buf, 0x16u);
  }
  CFStringRef v6 = +[JSABridge sharedInstance];
  uint64_t v7 = *(void *)(a1 + 32);
  __int16 v8 = [v3 version];
  uint64_t v9 = v8;
  if (!v8)
  {
    uint64_t v9 = +[NSNull null];
  }
  int v11 = v9;
  uint64_t v10 = +[NSArray arrayWithObjects:&v11 count:1];
  [v6 enqueueValueCall:v7 arguments:v10 file:@"JSAApplication.m" line:150];

  if (!v8) {
}
  }

void sub_28370(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CFStringRef v12 = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "JSAApplication invoking launch block", v12, 2u);
  }

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5)
  {
    CFStringRef v14 = @"metrics";
    uint64_t v15 = v5;
    uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
    uint64_t v7 = (void *)v6;
    if (v6)
    {
      uint64_t v13 = v6;
      __int16 v8 = +[NSArray arrayWithObjects:&v13 count:1];
    }
    else
    {
      __int16 v8 = 0;
    }
  }
  else
  {
    __int16 v8 = 0;
    uint64_t v7 = 0;
  }
  id v9 = sub_28510((uint64_t)JSAApplication, @"onLaunch", v8, v3);
  uint64_t v10 = sub_28510((uint64_t)JSAApplication, @"$bootstrap", &__NSArray0__struct, v3);
  if ((BUIsRunningTests() & 1) == 0)
  {
    int v11 = [v3 globalObject];
    [v11 setObject:v10 forKeyedSubscript:@"$runtime"];
  }
}

id sub_28510(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  self;
  if (BUIsRunningTests())
  {
    id v9 = 0;
  }
  else
  {
    uint64_t v10 = [v8 objectForKeyedSubscript:@"App"];
    id v9 = [v10 invokeMethod:v6 withArguments:v7];
  }

  return v9;
}

void sub_285E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = self;
  uint64_t v10 = JSALog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = [v7 count];
    id v12 = objc_retainBlock(v8);
    *(_DWORD *)long long buf = 138543874;
    id v27 = v6;
    __int16 v28 = 2048;
    id v29 = v11;
    __int16 v30 = 2112;
    id v31 = v12;
    _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "JSAApplication invoke '%{public}@' with %lu args, completion: %@", buf, 0x20u);
  }
  long long v18 = _NSConcreteStackBlock;
  uint64_t v19 = 3221225472;
  long long v20 = sub_29D90;
  long long v21 = &unk_B3480;
  id v22 = v6;
  id v23 = v7;
  id v24 = v8;
  uint64_t v25 = v9;
  id v13 = v8;
  id v14 = v7;
  id v15 = v6;
  id v16 = objc_retainBlock(&v18);
  long long v17 = +[JSABridge sharedInstance];
  [v17 enqueueBlock:v16 file:@"JSAApplication.m" line:378];
}

void sub_28B24(uint64_t a1, void *a2, uint64_t a3)
{
  v9[0] = @"storeId";
  v9[1] = @"type";
  v10[0] = a2;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = a2;
  id v7 = [v5 objectAtIndexedSubscript:a3];
  v10[1] = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:2];
  [v4 addObject:v8];
}

id sub_28BF4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = a2;
  self;
  id v6 = +[NSMutableArray arrayWithArray:v5];

  if (v4) {
    [v6 addObject:v4];
  }

  return v6;
}

void sub_29884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2989C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_298AC(uint64_t a1)
{
}

void sub_298B4(void *a1, void *a2)
{
  id v17 = a2;
  uint64_t v3 = a1[9];
  uint64_t v4 = a1[4];
  uint64_t v5 = v4;
  if (!v4)
  {
    uint64_t v5 = +[NSNull null];
  }
  id v16 = (void *)v5;
  v18[0] = v5;
  id v6 = (void *)a1[5];
  id v7 = v6;
  if (!v6)
  {
    id v7 = +[NSNull null];
  }
  v18[1] = v7;
  id v8 = (void *)a1[6];
  uint64_t v9 = v8;
  if (!v8)
  {
    uint64_t v9 = +[NSNull null];
  }
  v18[2] = v9;
  uint64_t v10 = (void *)a1[7];
  id v11 = v10;
  if (!v10)
  {
    id v11 = +[NSNull null];
  }
  v18[3] = v11;
  id v12 = +[NSArray arrayWithObjects:v18 count:4];
  id v13 = sub_28510(v3, @"purchaseEventFields", v12, v17);

  if (v10)
  {
    if (v8) {
      goto LABEL_11;
    }
  }
  else
  {

    if (v8)
    {
LABEL_11:
      if (v6) {
        goto LABEL_12;
      }
LABEL_21:

      if (v4) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }

  if (!v6) {
    goto LABEL_21;
  }
LABEL_12:
  if (v4) {
    goto LABEL_13;
  }
LABEL_22:

LABEL_13:
  unsigned int v14 = [v13 isString];
  if (v14)
  {
    id v15 = [v13 toString];
  }
  else
  {
    id v15 = 0;
  }
  objc_storeStrong((id *)(*(void *)(a1[8] + 8) + 40), v15);
  if (v14) {
}
  }

void sub_29B2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = v3;
  if (v3 && ([v3 isNull] & 1) == 0)
  {
    uint64_t v4 = [v7 toNumber];
  }
  else
  {
    uint64_t v4 = 0;
  }
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, void *))v5 + 2))(v5, v4);
  }
}

void sub_29CD0(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([v7 isArray])
  {
    id v3 = [v7 toArray];
  }
  else
  {
    id v3 = &__NSArray0__struct;
  }
  uint64_t v4 = [v3 bu_objectsMatching:&stru_B3458];

  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, void *))v5 + 2))(v5, v4);
  }
}

BOOL sub_29D88(id a1, NSObject *a2, BOOL *a3)
{
  return __NSIsNSString(a2);
}

void sub_29D90(uint64_t a1, void *a2)
{
  sub_28510(*(void *)(a1 + 56), *(void **)(a1 + 32), *(void **)(a1 + 40), a2);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_2A20C(id a1)
{
  qword_CE408 = objc_alloc_init(JSAStore);

  _objc_release_x1();
}

uint64_t sub_2A3F8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2A408(uint64_t a1)
{
}

uint64_t sub_2A410(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 8) copy];

  return _objc_release_x1();
}

void sub_2A624(uint64_t a1)
{
}

void sub_2AAB4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accountHandlers];
  id v3 = [v2 mutableCopy];

  if (*(void *)(a1 + 40)) {
    [v3 addObject:];
  }
  [*(id *)(a1 + 32) setAccountHandlers:v3];
}

void sub_2ABDC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accountHandlers];
  id v3 = [v2 mutableCopy];

  if (*(void *)(a1 + 40)) {
    [v3 removeObject:];
  }
  [*(id *)(a1 + 32) setAccountHandlers:v3];
}

void sub_2AE70(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2AE84(uint64_t a1)
{
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[BURestrictionsProvider sharedInstance];
    unsigned int v3 = [v2 isAccountModificationAllowed];

    int v4 = WeakRetained[40];
    BOOL v5 = v4 != v3;
    if (v4 != v3) {
      WeakRetained[40] = v3;
    }
    id v6 = +[BURestrictionsProvider sharedInstance];
    unsigned int v7 = [v6 isExplicitContentAllowed];

    if (WeakRetained[41] != v7)
    {
      WeakRetained[41] = v7;
      BOOL v5 = 1;
    }
    id v8 = +[BURestrictionsProvider sharedInstance];
    unsigned int v9 = [v8 isBookStoreAllowed];

    if (WeakRetained[42] != v9)
    {
      WeakRetained[42] = v9;
      BOOL v5 = 1;
    }
    unsigned int v10 = +[UIApplication isRunningInStoreDemoMode];
    unsigned int v11 = v10;
    if (WeakRetained[43] != v10)
    {
      WeakRetained[43] = v10;
      BOOL v5 = 1;
    }
    id v12 = JSALog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v15[0] = 67110144;
      v15[1] = v5;
      __int16 v16 = 1024;
      unsigned int v17 = v3;
      __int16 v18 = 1024;
      unsigned int v19 = v7;
      __int16 v20 = 1024;
      unsigned int v21 = v9;
      __int16 v22 = 1024;
      unsigned int v23 = v11;
      _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "[Store] changed: %i, allowsAccountModification: %i, allowsErotica: %i, allowsStore: %i, isRunningInStoreDemoMode: %i", (uint8_t *)v15, 0x20u);
    }

    if (v5)
    {
      id v13 = +[JSABridge sharedInstance];
      unsigned int v14 = [WeakRetained restrictionHandler];
      [v13 enqueueManagedValueCall:v14 arguments:0 file:@"JSAStore.m" line:275];
    }
  }
}

void sub_2B078(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 48));
    uint64_t v2 = [*(id *)(a1 + 16) uniqueIdentifier];
    if (v2)
    {
      unsigned int v3 = [*(id *)(a1 + 16) uniqueIdentifier];
      unsigned int v11 = v3;
      int v4 = +[NSArray arrayWithObjects:&v11 count:1];
    }
    else
    {
      int v4 = &__NSArray0__struct;
    }

    objc_initWeak(&location, (id)a1);
    BOOL v5 = [(id)a1 callbackQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_2B200;
    block[3] = &unk_B2BE0;
    objc_copyWeak(&v9, &location);
    id v8 = v4;
    id v6 = v4;
    dispatch_async(v5, block);

    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);
  }
}

void sub_2B1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_2B200(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v12 = WeakRetained;
    unsigned int v3 = [WeakRetained accountHandlers];
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v4 = [v3 countByEnumeratingWithState:&v13 objects:v18 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v14;
      do
      {
        unsigned int v7 = 0;
        do
        {
          if (*(void *)v14 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void *)(*((void *)&v13 + 1) + 8 * (void)v7);
          id v9 = +[JSABridge sharedInstance];
          unsigned int v10 = v9;
          if (*(void *)(a1 + 32))
          {
            uint64_t v17 = *(void *)(a1 + 32);
            unsigned int v11 = +[NSArray arrayWithObjects:&v17 count:1];
            [v10 enqueueValueCall:v8 arguments:v11 file:@"JSAStore.m" line:301];
          }
          else
          {
            [v9 enqueueValueCall:v8 arguments:0 file:@"JSAStore.m" line:301];
          }

          unsigned int v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v13 objects:v18 count:16];
      }
      while (v5);
    }

    id WeakRetained = v12;
  }
}

void sub_2B394(dispatch_queue_t *a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(a1[6]);
    objc_initWeak(&location, a1);
    uint64_t v2 = [(dispatch_queue_t *)a1 callbackQueue];
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_2B46C;
    v3[3] = &unk_B22D8;
    objc_copyWeak(&v4, &location);
    dispatch_async(v2, v3);

    objc_destroyWeak(&v4);
    objc_destroyWeak(&location);
  }
}

void sub_2B458(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2B46C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[JSABridge sharedInstance];
    unsigned int v3 = v2;
    uint64_t v4 = WeakRetained[11];
    if (WeakRetained[1])
    {
      uint64_t v6 = WeakRetained[1];
      id v5 = +[NSArray arrayWithObjects:&v6 count:1];
      [v3 enqueueManagedValueCall:v4 arguments:v5 file:@"JSAStore.m" line:321];
    }
    else
    {
      [v2 enqueueManagedValueCall:WeakRetained[11] arguments:0 file:@"JSAStore.m" line:321];
    }
  }
}

void sub_2B654(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (uint64_t)WeakRetained;
  if (WeakRetained)
  {
    unint64_t v3 = (unint64_t)WeakRetained[1];
    uint64_t v4 = +[BUAccountsProvider sharedProvider];
    uint64_t v5 = [v4 currentStorefront];

    if (v3 | v5 && ([(id)v3 isEqualToString:v5] & 1) == 0)
    {
      uint64_t v6 = JSALog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 138412546;
        unint64_t v11 = v3;
        __int16 v12 = 2112;
        uint64_t v13 = v5;
        _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "[Store] New account store front identifier from %@ to %@, notifying JS", (uint8_t *)&v10, 0x16u);
      }

      objc_storeStrong((id *)(v2 + 8), (id)v5);
      sub_2B394((dispatch_queue_t *)v2);
      unsigned int v7 = +[NSNotificationCenter defaultCenter];
      [v7 postNotificationName:@"JSAStorefrontDidChangeNotification" object:0];
    }
    uint64_t v8 = [[JSAAccount alloc] initWithDelegate:v2];
    id v9 = *(void **)(v2 + 16);
    *(void *)(v2 + 16) = v8;

    sub_2B078(v2);
  }
}

void sub_2B884(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v1 = [[JSAAccount alloc] initWithDelegate:WeakRetained];
    uint64_t v2 = (void *)WeakRetained[2];
    WeakRetained[2] = v1;

    sub_2B078((uint64_t)WeakRetained);
  }
}

uint64_t sub_2BAC4(uint64_t a1)
{
  qword_CE418 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_2BD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2BD4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = JSALog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "[JSACookieStorage] Updating cookies now after coalescing delay", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_2BE40;
  v7[3] = &unk_B2028;
  id v8 = v3;
  id v6 = v3;
  sub_2BE50((uint64_t)WeakRetained, v7);
}

uint64_t sub_2BE40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2BE50(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v5 = *(NSObject **)(a1 + 40);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    int v6[2] = sub_2C868;
    v6[3] = &unk_B2650;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_2BEF8()
{
  v0 = JSALog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_0, v0, OS_LOG_TYPE_DEFAULT, "[JSACookieStorage] Received account cookies changed notification", v3, 2u);
  }

  objc_opt_class();
  uint64_t v1 = BUDynamicCast();
  uint64_t v2 = (void *)v1;
  if (v1) {
    [*(id *)(v1 + 56) signalWithCompletion:0];
  }
}

void sub_2C3D0(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_2C458;
  v2[3] = &unk_B2000;
  uint64_t v1 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  sub_2BE50(v1, v2);
}

void sub_2C458(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"JSACookieStorage.m" line:122];
}

void sub_2C4C0(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"JSACookieStorage.m" line:127];
}

void sub_2C750(uint64_t a1)
{
  id v2 = +[JSABridge sharedInstance];
  [v2 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"JSACookieStorage.m" line:143];
}

void sub_2C868(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = +[BUAccountsProvider sharedProvider];
  uint64_t v5 = [v4 localStoreAccount];
  id v6 = [v5 ams_cookies];
  id v7 = [*(id *)(a1 + 32) defaultURL];
  id v38 = sub_2CDA4(v3, v6, v7);

  id v8 = +[NSHTTPCookieStorage sharedHTTPCookieStorage];
  id v9 = [*(id *)(a1 + 32) defaultURL];
  long long v37 = [v8 cookiesForURL:v9];

  [v38 arrayByAddingObjectsFromArray:v37];
  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  id v11 = [v10 countByEnumeratingWithState:&v53 objects:v58 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v54;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v54 != v12) {
          objc_enumerationMutation(v10);
        }
        long long v14 = *(void **)(*((void *)&v53 + 1) + 8 * i);
        long long v15 = [v14 name:v37];
        long long v16 = [v2 objectForKeyedSubscript:v15];
        BOOL v17 = v16 == 0;

        if (v17)
        {
          __int16 v18 = [[JSACookie alloc] initWithNativeCookie:v14];
          [v2 setObject:v18 forKeyedSubscript:v15];
        }
      }
      id v11 = [v10 countByEnumeratingWithState:&v53 objects:v58 count:16];
    }
    while (v11);
  }

  uint64_t v49 = 0;
  uint64_t v50 = &v49;
  uint64_t v51 = 0x2020000000;
  char v52 = 1;
  id v19 = [v2 mutableCopy];
  __int16 v20 = [*(id *)(a1 + 32) indexedCookies];
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_2CF34;
  v46[3] = &unk_B3520;
  id v21 = v19;
  id v47 = v21;
  id v48 = &v49;
  [v20 enumerateKeysAndObjectsUsingBlock:v46];

  if (!*((unsigned char *)v50 + 24) || (id v22 = [v21 count], *((unsigned char *)v50 + 24) = v22 == 0, v22))
  {
    [*(id *)(a1 + 32) setIndexedCookies:v2 v37];
    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    unsigned int v23 = [*(id *)(a1 + 32) invalidationTimers];
    id v24 = [v23 countByEnumeratingWithState:&v42 objects:v57 count:16];
    if (v24)
    {
      uint64_t v25 = *(void *)v43;
      do
      {
        for (j = 0; j != v24; j = (char *)j + 1)
        {
          if (*(void *)v43 != v25) {
            objc_enumerationMutation(v23);
          }
          [*(id *)(*((void *)&v42 + 1) + 8 * (void)j) invalidate];
        }
        id v24 = [v23 countByEnumeratingWithState:&v42 objects:v57 count:16];
      }
      while (v24);
    }

    id v27 = objc_opt_new();
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472;
    v40[2] = sub_2CFE8;
    void v40[3] = &unk_B25D8;
    v40[4] = *(void *)(a1 + 32);
    id v28 = v27;
    id v41 = v28;
    [v2 enumerateKeysAndObjectsUsingBlock:v40];
    [*(id *)(a1 + 32) setInvalidationTimers:v28];
    uint64_t v29 = *(void *)(a1 + 32);
    if (v29)
    {
      id v30 = [v2 copy];
      id v31 = *(void **)(v29 + 8);
      *(void *)(v29 + 8) = v30;
    }
  }
  __int16 v32 = JSALog();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_0, v32, OS_LOG_TYPE_DEFAULT, "Notifying JS about cookie storage change", buf, 2u);
  }

  id v33 = +[JSABridge sharedInstance];
  char v34 = [*(id *)(a1 + 32) cookieStorageChangeHandler];
  [v33 enqueueManagedValueCall:v34 arguments:0 file:@"JSACookieStorage.m" line:230];

  id v35 = objc_retainBlock(*(id *)(a1 + 40));
  char v36 = v35;
  if (v35) {
    (*((void (**)(id))v35 + 2))(v35);
  }

  _Block_object_dispose(&v49, 8);
}

void sub_2CD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

id sub_2CDA4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = &__NSArray0__struct;
    if (v5) {
      id v7 = v5;
    }
    id v8 = v7;

    id v9 = [v6 host];
    if (([v9 hasPrefix:@"."] & 1) == 0)
    {
      uint64_t v10 = [@"." stringByAppendingString:v9];

      id v9 = (void *)v10;
    }
    id v11 = [v6 path];
    uint64_t v12 = [v6 scheme];
    unsigned __int8 v13 = [v12 isEqualToString:@"https"];

    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_2D12C;
    v18[3] = &unk_B3548;
    unsigned __int8 v21 = v13;
    id v19 = v9;
    id v20 = v11;
    id v14 = v11;
    id v15 = v9;
    long long v16 = [v8 ams_filterUsingTest:v18];
  }
  else
  {
    id v8 = v5;
    long long v16 = 0;
  }

  return v16;
}

void sub_2CF34(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v10 = a2;
  id v7 = a3;
  id v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:v10];
  id v9 = v8;
  if (v8 && [v8 isEqual:v7])
  {
    [*(id *)(a1 + 32) setObject:0 forKeyedSubscript:v10];
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
}

void sub_2CFE8(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = [a3 expirationDate];
  if (v6)
  {
    id v4 = [objc_alloc((Class)NSTimer) initWithFireDate:v6 interval:*(void *)(a1 + 32) target:"_handleCookieDidExpire:" selector:0 userInfo:0 repeats:1.79769313e308];
    id v5 = +[NSRunLoop currentRunLoop];
    [v5 addTimer:v4 forMode:NSRunLoopCommonModes];

    [*(id *)(a1 + 40) addObject:v4];
  }
}

uint64_t sub_2D12C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isSecure]) {
    BOOL v4 = *(unsigned __int8 *)(a1 + 48) == [v3 isSecure];
  }
  else {
    BOOL v4 = 1;
  }
  id v5 = [v3 expiresDate];
  if (v5)
  {
    id v6 = [v3 expiresDate];
    [v6 timeIntervalSinceReferenceDate];
    BOOL v8 = v7 >= CFAbsoluteTimeGetCurrent();
  }
  else
  {
    BOOL v8 = 1;
  }

  id v9 = *(void **)(a1 + 32);
  id v10 = [v3 domain];
  unsigned int v11 = [v9 hasSuffix:v10];

  uint64_t v12 = *(void **)(a1 + 40);
  if (v12)
  {
    unsigned __int8 v13 = [v3 path];
    unsigned int v14 = [v12 hasPrefix:v13];
  }
  else
  {
    unsigned int v14 = 1;
  }

  return (v4 && v8) & v14 & v11;
}

id sub_2D390()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for HotReloadController()) init];
  qword_CC428 = (uint64_t)result;
  return result;
}

id URLParser.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id static HotReloadController.shared.getter()
{
  if (qword_CC420 != -1) {
    swift_once();
  }
  v0 = (void *)qword_CC428;

  return v0;
}

BOOL sub_2D52C()
{
  id v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___JSAHotReloadController_hotReloadCount);
  id v2 = v1 + 4;
  id v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2D594(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void *sub_2D594@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0;
  return result;
}

id HotReloadController.init()()
{
  uint64_t v1 = sub_86CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  BOOL v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_86C80();
  __chkstk_darwin();
  sub_862A0();
  __chkstk_darwin();
  id v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR___JSAHotReloadController_notificationObserver] = 0;
  uint64_t v7 = OBJC_IVAR___JSAHotReloadController_hotReloadCount;
  sub_2D920(&qword_CC580);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(void *)(v8 + 16) = 0;
  *(void *)&v0[v7] = v8;
  *(void *)&v0[OBJC_IVAR___JSAHotReloadController_subscribers] = &_swiftEmptyArrayStorage;
  sub_32FAC(0, (unint64_t *)&qword_CCE80);
  BOOL v17 = v0;
  sub_86290();
  id v19 = &_swiftEmptyArrayStorage;
  v16[4] = sub_2DC84(&qword_CC590, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v16[3] = sub_2D920((uint64_t *)&unk_CCE90);
  void v16[5] = sub_2DCCC(&qword_CC598, (uint64_t *)&unk_CCE90);
  sub_86DD0();
  uint64_t v9 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v10 = v2 + 104;
  unsigned int v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16[2] = v10;
  v11(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  v16[1] = v6;
  uint64_t v12 = sub_86CD0();
  unsigned __int8 v13 = v17;
  *(void *)&v17[OBJC_IVAR___JSAHotReloadController_queue] = v12;
  sub_86290();
  id v19 = &_swiftEmptyArrayStorage;
  sub_86DD0();
  v11(v4, v9, v1);
  *(void *)&v13[OBJC_IVAR___JSAHotReloadController_subscriberQueue] = sub_86CD0();

  unsigned int v14 = (objc_class *)type metadata accessor for HotReloadController();
  v18.receiver = v13;
  v18.super_class = v14;
  return [super init];
}

uint64_t sub_2D920(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2D964(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for HotReloadController()
{
  return self;
}

uint64_t sub_2D9F4(uint64_t a1, uint64_t a2)
{
  return sub_2DDFC(a1, a2, (uint64_t)&unk_B3A50, (uint64_t)sub_2DC0C, (uint64_t)&unk_B3A68);
}

uint64_t sub_2DA1C()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_2DA54(void (*a1)(void))
{
  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v3 = *(void *)&Strong[OBJC_IVAR___JSAHotReloadController_notificationObserver];

  if (!v3)
  {
    if (qword_CC4F8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_86230();
    sub_31DE4(v4, (uint64_t)qword_CD630);
    uint64_t v5 = sub_86210();
    os_log_type_t v6 = sub_86C50();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_0, v5, v6, "Starting hot reload mode", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v8 = (char *)swift_unknownObjectUnownedLoadStrong();
    type metadata accessor for HotReloadNotificationObserver();
    swift_allocObject();
    *(void *)&v8[OBJC_IVAR___JSAHotReloadController_notificationObserver] = sub_71DC8();

    swift_release();
    uint64_t v9 = (char *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v10 = *(void *)&v9[OBJC_IVAR___JSAHotReloadController_notificationObserver];
    swift_retain();

    if (v10)
    {
      unsigned int v11 = (void *)swift_unknownObjectUnownedLoadStrong();
      *(void *)(v10 + 32) = &off_B3BD0;
      swift_unknownObjectWeakAssign();
      swift_release();
    }
  }
  if (a1) {
    a1();
  }
}

void sub_2DC0C()
{
  sub_2DA54(*(void (**)(void))(v0 + 16));
}

uint64_t sub_2DC18(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_2DC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2DC6C()
{
  return swift_release();
}

uint64_t sub_2DC74(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2DC84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2DCCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2D964(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2DDD4(uint64_t a1, uint64_t a2)
{
  return sub_2DDFC(a1, a2, (uint64_t)&unk_B3AA0, (uint64_t)sub_2E4DC, (uint64_t)&unk_B3AB8);
}

uint64_t sub_2DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v8 = sub_86260();
  uint64_t v24 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_862A0();
  uint64_t v11 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unsigned __int8 v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v14 = *(void **)(v5 + OBJC_IVAR___JSAHotReloadController_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  long long v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v15;
  aBlock[4] = v21;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2DC18;
  aBlock[3] = v22;
  BOOL v17 = _Block_copy(aBlock);
  id v18 = v14;
  sub_2DC74(a1);
  swift_retain();
  sub_86270();
  uint64_t v25 = &_swiftEmptyArrayStorage;
  sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_2D920((uint64_t *)&unk_CD030);
  sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
  sub_86DD0();
  sub_86CC0();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_2E0F4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  v17[1] = a2;
  id v19 = a1;
  uint64_t v2 = sub_86260();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_862A0();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_CC4F8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_86230();
  sub_31DE4(v9, (uint64_t)qword_CD630);
  uint64_t v10 = sub_86210();
  os_log_type_t v11 = sub_86C50();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "Stopping hot reload mode", v12, 2u);
    swift_slowDealloc();
  }

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  *(void *)&Strong[OBJC_IVAR___JSAHotReloadController_notificationObserver] = 0;

  swift_release();
  sub_32FAC(0, (unint64_t *)&qword_CCE80);
  unsigned int v14 = (void *)sub_86CB0();
  aBlock[4] = sub_2E4E8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2DC18;
  aBlock[3] = &unk_B3CD0;
  uint64_t v15 = _Block_copy(aBlock);
  sub_86270();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_2D920((uint64_t *)&unk_CD030);
  sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
  sub_86DD0();
  sub_86CC0();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  if (v19) {
    return v19(result);
  }
  return result;
}

uint64_t sub_2E494()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_2E4DC()
{
  return sub_2E0F4(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2E5A4(uint64_t a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR___JSAHotReloadController_subscriberQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_2E89C;
  *(void *)(v5 + 24) = v4;
  v11[4] = sub_2E8DC;
  void v11[5] = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_2E904;
  void v11[3] = &unk_B3B30;
  uint64_t v6 = _Block_copy(v11);
  uint64_t v7 = v3;
  uint64_t v8 = v1;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v6);

  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_2E718(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (char **)(a1 + OBJC_IVAR___JSAHotReloadController_subscribers);
  swift_beginAccess();
  uint64_t v4 = *((void *)*v3 + 2);
  if (v4)
  {
    uint64_t v5 = (uint64_t)(*v3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v7 = Strong;
        swift_unknownObjectRelease();
        if (v7 == a2) {
          return swift_bridgeObjectRelease();
        }
      }
      v5 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  sub_32FF0((uint64_t)v13, (uint64_t)v14, &qword_CC658);
  swift_beginAccess();
  uint64_t v9 = *v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v3 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_66D88(0, *((void *)v9 + 2) + 1, 1, (unint64_t)v9);
    void *v3 = v9;
  }
  unint64_t v12 = *((void *)v9 + 2);
  unint64_t v11 = *((void *)v9 + 3);
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_66D88((char *)(v11 > 1), v12 + 1, 1, (unint64_t)v9);
    void *v3 = v9;
  }
  *((void *)v9 + 2) = v12 + 1;
  sub_32FF0((uint64_t)v14, (uint64_t)&v9[8 * v12 + 32], &qword_CC658);
  return swift_endAccess();
}

uint64_t sub_2E89C()
{
  return sub_2E718(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2E8A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2E8CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2E8DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2E904(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_2E944(uint64_t a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR___JSAHotReloadController_subscriberQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_2EB8C;
  *(void *)(v5 + 24) = v4;
  v11[4] = sub_33410;
  void v11[5] = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_2E904;
  void v11[3] = &unk_B3BA8;
  uint64_t v6 = _Block_copy(v11);
  uint64_t v7 = v3;
  uint64_t v8 = v1;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v6);

  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_2EAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unint64_t **)(a1 + OBJC_IVAR___JSAHotReloadController_subscribers);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_31BF8(v4, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  void *v3 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2EB4C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2EB8C()
{
  return sub_2EAB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2EB94()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_2EBBC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

id HotReloadController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HotReloadController();
  return [super dealloc];
}

uint64_t method lookup function for HotReloadController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HotReloadController);
}

uint64_t dispatch thunk of HotReloadController.isHotReloading.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of HotReloadController.start(completion:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of HotReloadController.stop(completion:)()
{
  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of HotReloadController.subscribe(_:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of HotReloadController.unsubscribe(_:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

void type metadata accessor for OperationPriority(uint64_t a1)
{
}

void type metadata accessor for AnimationOptions(uint64_t a1)
{
}

void type metadata accessor for FigaroKey(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_2EE50(char a1, void *a2)
{
  id v69 = a2;
  uint64_t v3 = sub_86260();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_862A0();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_862C0();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  unint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned int v14 = (char *)&v63 - v13;
  uint64_t v15 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v15 - 8);
  BOOL v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_862D0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  switch(a1)
  {
    case 1:
      if (qword_CC440 != -1) {
        swift_once();
      }
      sub_32FAC(0, (unint64_t *)&qword_CCE80);
      uint64_t *v21 = sub_86CB0();
      (*(void (**)(uint64_t *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
      char v23 = sub_862F0();
      uint64_t v24 = *(void (**)(uint64_t *, uint64_t))(v19 + 8);
      v19 += 8;
      v24(v21, v18);
      if (v23)
      {
        uint64_t result = _sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
        if (result)
        {
          uint64_t v25 = (void *)result;
          id v26 = [(id)result connectedScenes];
          sub_32FAC(0, &qword_CC660);
          sub_32C74(&qword_CC668, &qword_CC660);
          uint64_t v27 = sub_86BB0();

          sub_4B3E4(v27);
          unint64_t v29 = v28;
          swift_bridgeObjectRelease();
          uint64_t v30 = sub_7C3CC(v29);

          swift_bridgeObjectRelease();
          uint64_t v31 = 0xD000000000000017;
          __int16 v32 = "Building the new bundle";
LABEL_16:
          sub_327E0(v30, v31, (unint64_t)(v32 - 32) | 0x8000000000000000);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
LABEL_32:
        swift_once();
LABEL_13:
        sub_32FAC(0, (unint64_t *)&qword_CCE80);
        uint64_t *v21 = sub_86CB0();
        (*(void (**)(uint64_t *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
        char v33 = sub_862F0();
        char v34 = *(void (**)(uint64_t *, uint64_t))(v19 + 8);
        v19 += 8;
        v34(v21, v18);
        if (v33)
        {
          uint64_t result = _sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
          if (result)
          {
            id v35 = (void *)result;
            id v36 = [(id)result connectedScenes];
            sub_32FAC(0, &qword_CC660);
            sub_32C74(&qword_CC668, &qword_CC660);
            uint64_t v37 = sub_86BB0();

            sub_4B3E4(v37);
            unint64_t v39 = v38;
            swift_bridgeObjectRelease();
            uint64_t v30 = sub_7C3CC(v39);

            swift_bridgeObjectRelease();
            uint64_t v31 = 0xD000000000000018;
            __int16 v32 = "Installing the new build";
            goto LABEL_16;
          }
        }
        else
        {
          __break(1u);
LABEL_34:
          swift_once();
LABEL_18:
          sub_32FAC(0, (unint64_t *)&qword_CCE80);
          uint64_t *v21 = sub_86CB0();
          (*(void (**)(uint64_t *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
          char v40 = sub_862F0();
          (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v21, v18);
          if ((v40 & 1) == 0)
          {
            __break(1u);
LABEL_36:
            __break(1u);
            JUMPOUT(0x2F9A4);
          }
          id v41 = (void *)_sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
          if (v41)
          {
            long long v42 = v41;
            id v43 = [v41 connectedScenes];
            sub_32FAC(0, &qword_CC660);
            sub_32C74(&qword_CC668, &qword_CC660);
            uint64_t v44 = sub_86BB0();

            sub_4B3E4(v44);
            unint64_t v46 = v45;
            swift_bridgeObjectRelease();
            uint64_t v47 = sub_7C3CC(v46);

            swift_bridgeObjectRelease();
            sub_327E0(v47, 0xD000000000000015, 0x800000000009C650);
            swift_bridgeObjectRelease();
          }
          sub_86AE0();
          uint64_t v48 = sub_86B10();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v17, 0, 1, v48);
          sub_86AD0();
          id v49 = v69;
          uint64_t v50 = sub_86AC0();
          uint64_t v51 = (void *)swift_allocObject();
          v51[2] = v50;
          v51[3] = &protocol witness table for MainActor;
          v51[4] = v49;
          sub_339CC((uint64_t)v17, (uint64_t)&unk_CC678, (uint64_t)v51);
          uint64_t result = swift_release();
        }
      }
      break;
    case 2:
      if (qword_CC440 == -1) {
        goto LABEL_13;
      }
      goto LABEL_32;
    case 3:
      if (qword_CC440 == -1) {
        goto LABEL_18;
      }
      goto LABEL_34;
    case 4:
      if (qword_CC440 == -1)
      {
        uint64_t result = (uint64_t)sub_4C404();
        if ((result & 1) == 0) {
          return result;
        }
      }
      else
      {
        swift_once();
        uint64_t result = (uint64_t)sub_4C404();
        if ((result & 1) == 0) {
          return result;
        }
      }
      id v69 = (id)sub_32FAC(0, (unint64_t *)&qword_CCE80);
      uint64_t *v21 = sub_86CB0();
      (*(void (**)(uint64_t *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
      char v52 = sub_862F0();
      (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v21, v18);
      if ((v52 & 1) == 0) {
        goto LABEL_36;
      }
      long long v53 = (void *)_sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
      if (v53)
      {
        long long v54 = v53;
        id v55 = [v53 connectedScenes];
        sub_32FAC(0, &qword_CC660);
        sub_32C74(&qword_CC668, &qword_CC660);
        uint64_t v56 = sub_86BB0();

        sub_4B3E4(v56);
        unint64_t v58 = v57;
        swift_bridgeObjectRelease();
        uint64_t v59 = sub_7C3CC(v58);

        swift_bridgeObjectRelease();
        sub_327E0(v59, 0xD00000000000001FLL, 0x800000000009C630);
        swift_bridgeObjectRelease();
      }
      v60 = (void *)sub_86CB0();
      sub_862B0();
      sub_862E0();
      id v69 = *(id *)(v64 + 8);
      ((void (*)(char *, uint64_t))v69)(v12, v9);
      aBlock[4] = sub_2E4E8;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2DC18;
      aBlock[3] = &unk_B3D48;
      v61 = _Block_copy(aBlock);
      sub_86270();
      aBlock[0] = &_swiftEmptyArrayStorage;
      sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_2D920((uint64_t *)&unk_CD030);
      sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
      uint64_t v62 = v68;
      sub_86DD0();
      sub_86C90();
      _Block_release(v61);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v62);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v8, v66);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v69)(v14, v9);
      break;
    default:
      if (qword_CC440 != -1) {
        swift_once();
      }
      return (uint64_t)sub_4C124();
  }
  return result;
}

uint64_t sub_2F9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  uint64_t v5 = sub_86260();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_862A0();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  sub_86AD0();
  v4[16] = sub_86AC0();
  uint64_t v8 = sub_86A90();
  v4[17] = v8;
  v4[18] = v7;
  return _swift_task_switch(sub_2FB08, v8, v7);
}

uint64_t sub_2FB08()
{
  type metadata accessor for PackageProvisioner();
  uint64_t v1 = (void *)swift_allocObject();
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant);
  uint64_t v3 = (void *)sub_86310();
  *(void *)(v0 + 152) = [v1 initWithLaunching:0 processVariant:v2 overridePackageURLCachePath:0 on:v3];

  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  void *v4 = v0;
  v4[1] = sub_2FC30;
  return PackageProvisioner.provision()();
}

uint64_t sub_2FC30(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  return _swift_task_switch(sub_2FD58, v4, v3);
}

uint64_t sub_2FD58()
{
  uint64_t v1 = v0[21];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[21];
    sub_30060(v2);
    swift_release();
  }
  else
  {
    if (qword_CC4F8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_86230();
    sub_31DE4(v3, (uint64_t)qword_CD630);
    uint64_t v4 = sub_86210();
    os_log_type_t v5 = sub_86C10();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "Provisioner failed to provision, bailing out.", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[15];
    uint64_t v15 = v0[14];
    uint64_t v8 = v0[12];
    uint64_t v16 = v0[13];
    uint64_t v9 = v0[10];
    uint64_t v10 = v0[11];

    sub_32FAC(0, (unint64_t *)&qword_CCE80);
    uint64_t v11 = (void *)sub_86CB0();
    v0[6] = sub_2E4E8;
    v0[7] = 0;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_2DC18;
    v0[5] = &unk_B3D98;
    unint64_t v12 = _Block_copy(v0 + 2);
    sub_86270();
    v0[8] = &_swiftEmptyArrayStorage;
    sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_2D920((uint64_t *)&unk_CD030);
    sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
    sub_86DD0();
    sub_86CC0();
    swift_release();
    _Block_release(v12);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v7, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_30060(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v3 = sub_86260();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  __chkstk_darwin(v3);
  unint64_t v29 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_862A0();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(os_unfair_lock_s **)&v1[OBJC_IVAR___JSAHotReloadController_hotReloadCount];
  uint64_t v8 = v7 + 4;
  uint64_t v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_30510(v8);
  os_unfair_lock_unlock(v9);
  dispatch_group_t v10 = dispatch_group_create();
  uint64_t v11 = *(void **)&v2[OBJC_IVAR___JSAHotReloadController_subscriberQueue];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_32EEC;
  *(void *)(v13 + 24) = v12;
  unint64_t v38 = sub_33410;
  uint64_t v39 = v13;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  id v36 = sub_2E904;
  uint64_t v37 = &unk_B3E10;
  unsigned int v14 = _Block_copy(&aBlock);
  uint64_t v15 = v11;
  uint64_t v16 = v2;
  uint64_t v17 = v10;
  swift_retain();
  swift_release();
  dispatch_sync(v15, v14);

  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    sub_32FAC(0, (unint64_t *)&qword_CCE80);
    uint64_t v19 = (void *)sub_86CB0();
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v27;
    *(void *)(v20 + 16) = v27;
    *(void *)(v20 + 24) = v16;
    unint64_t v38 = sub_32F04;
    uint64_t v39 = v20;
    aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    id v36 = sub_2DC18;
    uint64_t v37 = &unk_B3E60;
    uint64_t v22 = _Block_copy(&aBlock);
    char v23 = v16;
    id v24 = v21;
    sub_86270();
    char v33 = &_swiftEmptyArrayStorage;
    sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_2D920((uint64_t *)&unk_CD030);
    sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
    uint64_t v25 = v29;
    uint64_t v26 = v32;
    sub_86DD0();
    sub_86C60();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v30);
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_304BC()
{
  if (qword_CC440 != -1) {
    swift_once();
  }

  return sub_4C124();
}

void *sub_30510(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_30528(void *a1, void *a2)
{
  if (qword_CC4F8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_86230();
  sub_31DE4(v4, (uint64_t)qword_CD630);
  uint64_t v5 = a1;
  uint64_t v6 = sub_86210();
  os_log_type_t v7 = sub_86C20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    swift_beginAccess();
    sub_86D40();

    _os_log_impl(&dword_0, v6, v7, "Waiting for %ld subscribers to finish with willReloadScript", v8, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v9 = (unint64_t **)&v5[OBJC_IVAR___JSAHotReloadController_subscribers];
  swift_beginAccess();
  dispatch_group_t v10 = v5;
  uint64_t v11 = a2;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_31E1C(v12, v11, (uint64_t)v10);
  swift_bridgeObjectRelease();

  os_unfair_lock_s *v9 = v13;
  return swift_bridgeObjectRelease();
}

void sub_30704(uint64_t a1)
{
  id v2 = [self sharedInstance];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  void v5[4] = sub_32F0C;
  void v5[5] = v3;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_2DC18;
  v5[3] = &unk_B3E88;
  uint64_t v4 = _Block_copy(v5);
  swift_release();
  [v2 setupWithPackage:a1 completion:v4];
  _Block_release(v4);
}

uint64_t sub_30810(uint64_t a1)
{
  uint64_t v2 = sub_86260();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  __chkstk_darwin(v2);
  uint64_t v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_862A0();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v7 = *(void *)&Strong[OBJC_IVAR___JSAHotReloadController_hotReloadCount];
  swift_retain();

  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_30C68((void *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  dispatch_group_t v8 = dispatch_group_create();
  uint64_t v9 = (char *)swift_unknownObjectUnownedLoadStrong();
  dispatch_group_t v10 = *(id *)&v9[OBJC_IVAR___JSAHotReloadController_subscriberQueue];

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_32F54;
  *(void *)(v12 + 24) = v11;
  uint64_t v31 = sub_33410;
  uint64_t v32 = v12;
  aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  unint64_t v29 = sub_2E904;
  uint64_t v30 = &unk_B3F00;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  unsigned int v14 = v8;
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);

  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    sub_32FAC(0, (unint64_t *)&qword_CCE80);
    uint64_t v16 = (void *)sub_86CB0();
    uint64_t v31 = sub_30EE0;
    uint64_t v32 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    unint64_t v29 = sub_2DC18;
    uint64_t v30 = &unk_B3F28;
    uint64_t v17 = _Block_copy(&aBlock);
    sub_86270();
    uint64_t v26 = &_swiftEmptyArrayStorage;
    sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_2D920((uint64_t *)&unk_CD030);
    sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
    uint64_t v18 = v22;
    uint64_t v19 = v25;
    sub_86DD0();
    sub_86C60();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v19);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v23);
    return swift_release();
  }
  return result;
}

void *sub_30C68(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

uint64_t sub_30C80(uint64_t a1, void *a2)
{
  if (qword_CC4F8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_86230();
  sub_31DE4(v3, (uint64_t)qword_CD630);
  swift_retain_n();
  uint64_t v4 = sub_86210();
  os_log_type_t v5 = sub_86C20();
  uint64_t v6 = &OBJC_PROTOCOL___NSCopying;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    swift_beginAccess();
    swift_bridgeObjectRetain();

    swift_release();
    uint64_t v6 = &OBJC_PROTOCOL___NSCopying;
    swift_bridgeObjectRelease();
    sub_86D40();
    swift_release();
    _os_log_impl(&dword_0, v4, v5, "Waiting for %ld subscribers to finish with didReloadScript", v7, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = (char *)swift_unknownObjectUnownedLoadStrong();
  dispatch_group_t v10 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v11 = (uint64_t *)&v10[(unint64_t)v6[19].opt_class_meths];
  swift_beginAccess();
  uint64_t v12 = *v11;
  swift_bridgeObjectRetain();

  swift_retain();
  uint64_t v13 = a2;
  unsigned int v14 = sub_32024(v12, v13);
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v15 = (unint64_t **)&v9[(unint64_t)v6[19].opt_class_meths];
  swift_beginAccess();
  *uint64_t v15 = v14;

  return swift_bridgeObjectRelease();
}

void *sub_30EE0()
{
  if (qword_CC4F8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_86230();
  sub_31DE4(v0, (uint64_t)qword_CD630);
  uint64_t v1 = sub_86210();
  os_log_type_t v2 = sub_86C20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "Hot reload is complete", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_CC440 != -1) {
    swift_once();
  }

  return sub_4C124();
}

uint64_t sub_30FF8(uint64_t a1, uint64_t a2)
{
  return sub_312BC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

NSNumber sub_31024()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_3102C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_86040();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_31080(uint64_t a1, uint64_t a2)
{
  char v3 = sub_86050();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_310D8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_86060();
  *a1 = v3;
  return result;
}

NSNumber sub_31100()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_31108(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_86B70();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_3115C(uint64_t a1, uint64_t a2)
{
  char v3 = sub_86B80();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_311B4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_86B90();
  *a1 = v3;
  return result;
}

uint64_t sub_311DC()
{
  sub_86860();
  sub_86900();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_31230()
{
  sub_86860();
  sub_870F0();
  sub_86900();
  Swift::Int v0 = sub_87130();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_312A4(uint64_t a1, uint64_t a2)
{
  return sub_312BC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_312BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_86860();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_31300(uint64_t a1, id *a2)
{
  uint64_t result = sub_86840();
  *a2 = 0;
  return result;
}

uint64_t sub_31378(uint64_t a1, id *a2)
{
  char v3 = sub_86850();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_313F8@<X0>(void *a1@<X8>)
{
  sub_86860();
  NSString v2 = sub_86830();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_31440()
{
  uint64_t v0 = sub_86860();
  uint64_t v2 = v1;
  if (v0 == sub_86860() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_87070();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_314D0()
{
  sub_2DC84(&qword_CC6F0, type metadata accessor for FileAttributeKey);
  sub_2DC84(&qword_CC6F8, type metadata accessor for FileAttributeKey);

  return sub_86FD0();
}

uint64_t sub_3158C()
{
  sub_2DC84(&qword_CC700, type metadata accessor for OpenExternalURLOptionsKey);
  sub_2DC84(&qword_CC708, type metadata accessor for OpenExternalURLOptionsKey);

  return sub_86FD0();
}

void *sub_31648@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_31658@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_31664()
{
  return sub_86FD0();
}

_DWORD *sub_3172C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_3173C@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_31748()
{
  return sub_86FD0();
}

uint64_t sub_31804@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_86830();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_3184C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_86860();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_31878()
{
  sub_2DC84(&qword_CC648, type metadata accessor for FigaroKey);
  sub_2DC84(&qword_CC650, type metadata accessor for FigaroKey);

  return sub_86FD0();
}

uint64_t sub_31934()
{
  return sub_2DC84(&qword_CC608, type metadata accessor for FigaroKey);
}

uint64_t sub_3197C()
{
  return sub_2DC84(&qword_CC610, type metadata accessor for FigaroKey);
}

uint64_t sub_319C4()
{
  return sub_2DC84(&qword_CC618, type metadata accessor for FigaroKey);
}

uint64_t sub_31A0C()
{
  return sub_2DC84(&qword_CC620, type metadata accessor for OperationPriority);
}

uint64_t sub_31A54()
{
  return sub_2DC84(&qword_CC628, type metadata accessor for OperationPriority);
}

uint64_t sub_31A9C()
{
  return Double.hashValue.getter(*v0);
}

void sub_31AA4()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_87120(v1);
}

uint64_t sub_31AD8(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:_:)(a1, v2);
}

uint64_t sub_31AE8()
{
  return Float.hashValue.getter(*v0);
}

void sub_31AF0()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  sub_87110(v1);
}

uint64_t sub_31B24(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

BOOL sub_31B38(double *a1, double *a2)
{
  return *a1 == *a2;
}

BOOL sub_31B4C(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_31B60()
{
  return sub_2DC84(&qword_CC630, type metadata accessor for OperationPriority);
}

uint64_t sub_31BA8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_31BB8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_31BF0()
{
  return sub_7DC84(*(void *)(v0 + 16));
}

unint64_t *sub_31BF8(uint64_t a1, uint64_t a2)
{
  uint64_t result = (unint64_t *)&_swiftEmptyArrayStorage;
  unsigned int v14 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = a1 + 32;
    uint64_t v7 = (unint64_t *)&_swiftEmptyArrayStorage;
    while (1)
    {
      sub_31D7C(v6, (uint64_t)v13);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v9 = Strong;
        swift_unknownObjectRelease();
        sub_31D7C((uint64_t)v13, (uint64_t)v12);
        if (v9 == a2) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_31D7C((uint64_t)v13, (uint64_t)v12);
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_unknownObjectRelease();
        sub_33054((uint64_t)v12, &qword_CC658);
        sub_32FF0((uint64_t)v13, (uint64_t)v12, &qword_CC658);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_42938(0, v7[2] + 1, 1);
        }
        uint64_t v7 = v14;
        unint64_t v11 = v14[2];
        unint64_t v10 = v14[3];
        if (v11 >= v10 >> 1)
        {
          sub_42938(v10 > 1, v11 + 1, 1);
          uint64_t v7 = v14;
        }
        v7[2] = v11 + 1;
        sub_32FF0((uint64_t)v12, (uint64_t)&v7[v11 + 4], &qword_CC658);
        goto LABEL_4;
      }
LABEL_3:
      sub_33054((uint64_t)v12, &qword_CC658);
      sub_33054((uint64_t)v13, &qword_CC658);
LABEL_4:
      v6 += 8;
      if (!--v4) {
        return v14;
      }
    }
  }
  return result;
}

uint64_t sub_31D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CC658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_31DE4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t *sub_31E1C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t result = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v19 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v7 = a1 + 32;
    dispatch_group_t v8 = (unint64_t *)&_swiftEmptyArrayStorage;
    do
    {
      sub_31D7C(v7, (uint64_t)v18);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        unint64_t v10 = (void *)Strong;
        dispatch_group_enter(a2);
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = a2;
        aBlock[4] = sub_32FA4;
        aBlock[5] = v11;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_2DC18;
        aBlock[3] = &unk_B3FC8;
        uint64_t v12 = _Block_copy(aBlock);
        uint64_t v13 = a2;
        swift_release();
        [v10 hotReloadControllerWillReloadScript:a3 completion:v12];
        swift_unknownObjectRelease();
        _Block_release(v12);
        sub_32FF0((uint64_t)v18, (uint64_t)aBlock, &qword_CC658);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_42938(0, v8[2] + 1, 1);
        }
        dispatch_group_t v8 = v19;
        unint64_t v15 = v19[2];
        unint64_t v14 = v19[3];
        if (v15 >= v14 >> 1)
        {
          sub_42938(v14 > 1, v15 + 1, 1);
          dispatch_group_t v8 = v19;
        }
        v8[2] = v15 + 1;
        sub_32FF0((uint64_t)aBlock, (uint64_t)&v8[v15 + 4], &qword_CC658);
      }
      else
      {
        sub_33054((uint64_t)v18, &qword_CC658);
      }
      v7 += 8;
      --v5;
    }
    while (v5);
    return v19;
  }
  return result;
}

unint64_t *sub_32024(uint64_t a1, NSObject *a2)
{
  uint64_t result = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v18 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = a1 + 32;
    uint64_t v7 = (unint64_t *)&_swiftEmptyArrayStorage;
    do
    {
      sub_31D7C(v6, (uint64_t)v17);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v9 = (void *)Strong;
        dispatch_group_enter(a2);
        unint64_t v10 = (void *)swift_unknownObjectUnownedLoadStrong();
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = a2;
        aBlock[4] = sub_3341C;
        aBlock[5] = v11;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_2DC18;
        aBlock[3] = &unk_B3F78;
        uint64_t v12 = _Block_copy(aBlock);
        uint64_t v13 = a2;
        swift_release();
        [v9 hotReloadControllerDidReloadScript:v10 completion:v12];
        swift_unknownObjectRelease();
        _Block_release(v12);

        sub_32FF0((uint64_t)v17, (uint64_t)aBlock, &qword_CC658);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_42938(0, v7[2] + 1, 1);
        }
        uint64_t v7 = v18;
        unint64_t v15 = v18[2];
        unint64_t v14 = v18[3];
        if (v15 >= v14 >> 1)
        {
          sub_42938(v14 > 1, v15 + 1, 1);
          uint64_t v7 = v18;
        }
        v7[2] = v15 + 1;
        sub_32FF0((uint64_t)aBlock, (uint64_t)&v7[v15 + 4], &qword_CC658);
      }
      else
      {
        sub_33054((uint64_t)v17, &qword_CC658);
      }
      v6 += 8;
      --v4;
    }
    while (v4);
    return v18;
  }
  return result;
}

uint64_t sub_32248(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v5 = sub_86260();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v33 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_862A0();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_86230();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_CC4F8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_31DE4(v9, (uint64_t)qword_CD630);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  unint64_t v14 = sub_86210();
  os_log_type_t v15 = sub_86C20();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = v6;
    aBlock[0] = v17;
    uint64_t v18 = 8 * a1;
    uint64_t v19 = *(void *)&aUnknown_3[v18];
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v30 = v5;
    uint64_t v36 = sub_422E0(v19, *(void *)&aTerminat[v18 + 8], aBlock);
    uint64_t v28 = v3;
    sub_86D40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v36 = sub_422E0(*(void *)&aUnknown_3[8 * (char)v35], *(void *)&aTerminat[8 * (char)v35 + 8], aBlock);
    uint64_t v3 = v28;
    uint64_t v5 = v30;
    sub_86D40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "Transitioning from %s to %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    uint64_t v6 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_32FAC(0, (unint64_t *)&qword_CCE80);
  uint64_t v20 = (void *)sub_86CB0();
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = v35;
  *(void *)(v21 + 24) = v3;
  aBlock[4] = (uint64_t)sub_327D4;
  aBlock[5] = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2DC18;
  aBlock[3] = (uint64_t)&unk_B3D20;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = v3;
  swift_release();
  uint64_t v24 = v31;
  sub_86270();
  aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_2DC84((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_2D920((uint64_t *)&unk_CD030);
  sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
  uint64_t v25 = v33;
  sub_86DD0();
  sub_86CC0();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v24, v34);
}

uint64_t sub_3279C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_327D4()
{
  return sub_2EE50(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_327E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_86DF0();
    sub_32FAC(0, &qword_CC680);
    sub_32C74((unint64_t *)&qword_CC688, &qword_CC680);
    uint64_t result = sub_86BD0();
    uint64_t v4 = v28[4];
    uint64_t v25 = v28[5];
    uint64_t v6 = v28[6];
    uint64_t v7 = v28[7];
    unint64_t v8 = v28[8];
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v24 = (unint64_t)(v6 + 64) >> 6;
  while (v4 < 0)
  {
    uint64_t v18 = sub_86E20();
    if (!v18) {
      return sub_32FE8();
    }
    *(void *)&v27[0] = v18;
    sub_32FAC(0, &qword_CC680);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v19 = (id)v28[0];
    swift_unknownObjectRelease();
    uint64_t v17 = v7;
    uint64_t v15 = v8;
    if (!v19) {
      return sub_32FE8();
    }
LABEL_34:
    swift_beginAccess();
    id v23 = objc_getAssociatedObject(v19, &off_CCC18);
    swift_endAccess();
    if (v23)
    {
      sub_86DC0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v27, 0, sizeof(v27));
    }
    sub_32FF0((uint64_t)v27, (uint64_t)v28, &qword_CCEF0);
    if (!v28[3])
    {
      sub_33054((uint64_t)v28, &qword_CCEF0);
LABEL_9:
      type metadata accessor for HotReloadStatusHUD();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 24) = xmmword_A11C0;
      *(_OWORD *)(v12 + 40) = xmmword_A11D0;
      *(void *)(v12 + 56) = 0;
      *(void *)(v12 + 64) = 0x3FB999999999999ALL;
      *(_WORD *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 74) = 0;
      *(void *)(v12 + 80) = &_swiftEmptyArrayStorage;
      id v13 = objc_allocWithZone((Class)type metadata accessor for HotReloadStatusHUDWindow());
      id v14 = v19;
      *(void *)(v12 + 16) = [v13 initWithWindowScene:v14];

      swift_beginAccess();
      swift_retain();
      objc_setAssociatedObject(v14, &off_CCC18, (id)v12, &stru_2E8.segname[9]);
      swift_endAccess();
      swift_release();
      goto LABEL_10;
    }
    type metadata accessor for HotReloadStatusHUD();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }
LABEL_10:
    sub_630A8(a2, a3);

    uint64_t result = swift_release();
    uint64_t v7 = v17;
    unint64_t v8 = v15;
  }
  if (v8)
  {
    uint64_t v15 = (v8 - 1) & v8;
    unint64_t v16 = __clz(__rbit64(v8)) | (v7 << 6);
    uint64_t v17 = v7;
LABEL_33:
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v16);
    if (!v19) {
      return sub_32FE8();
    }
    goto LABEL_34;
  }
  int64_t v20 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v20 >= v24) {
      return sub_32FE8();
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    uint64_t v17 = v7 + 1;
    if (!v21)
    {
      uint64_t v17 = v7 + 2;
      if (v7 + 2 >= v24) {
        return sub_32FE8();
      }
      unint64_t v21 = *(void *)(v25 + 8 * v17);
      if (!v21)
      {
        uint64_t v17 = v7 + 3;
        if (v7 + 3 >= v24) {
          return sub_32FE8();
        }
        unint64_t v21 = *(void *)(v25 + 8 * v17);
        if (!v21)
        {
          uint64_t v17 = v7 + 4;
          if (v7 + 4 >= v24) {
            return sub_32FE8();
          }
          unint64_t v21 = *(void *)(v25 + 8 * v17);
          if (!v21)
          {
            uint64_t v17 = v7 + 5;
            if (v7 + 5 >= v24) {
              return sub_32FE8();
            }
            unint64_t v21 = *(void *)(v25 + 8 * v17);
            if (!v21)
            {
              uint64_t v22 = v7 + 6;
              while (v24 != v22)
              {
                unint64_t v21 = *(void *)(v25 + 8 * v22++);
                if (v21)
                {
                  uint64_t v17 = v22 - 1;
                  goto LABEL_32;
                }
              }
              return sub_32FE8();
            }
          }
        }
      }
    }
LABEL_32:
    uint64_t v15 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_32C74(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_32FAC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_32CC4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_32D04(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_32DB8;
  return sub_2F9B8(a1, v4, v5, v6);
}

uint64_t sub_32DB8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  Swift::UInt32 v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_32EAC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_32EEC()
{
  return sub_30528(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_32EF4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_32F04()
{
  sub_30704(*(void *)(v0 + 16));
}

uint64_t sub_32F0C()
{
  return sub_30810(v0);
}

uint64_t sub_32F14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_32F54()
{
  return sub_30C80(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_32F5C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_32F6C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_32FA4()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_32FAC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_32FE8()
{
  return swift_release();
}

uint64_t sub_32FF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_2D920(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_33054(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2D920(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for Level(uint64_t a1)
{
}

void sub_330EC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_33134()
{
  return sub_2DC84(&qword_CC6A8, type metadata accessor for Level);
}

uint64_t sub_3317C()
{
  return sub_2DC84(&qword_CC6B0, type metadata accessor for Level);
}

uint64_t sub_331C4()
{
  return sub_2DC84(&qword_CC6B8, type metadata accessor for Level);
}

uint64_t sub_3320C()
{
  return sub_2DC84(&qword_CC6C0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_33254()
{
  return sub_2DC84(&qword_CC6C8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_3329C()
{
  return sub_2DC84(&qword_CC6D0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_332E4()
{
  return sub_2DC84(&qword_CC6D8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_3332C()
{
  return sub_2DC84(&qword_CC6E0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_33374()
{
  return sub_2DC84(&qword_CC6E8, type metadata accessor for OpenExternalURLOptionsKey);
}

unint64_t sub_333BC()
{
  unint64_t result = qword_CC720;
  if (!qword_CC720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC720);
  }
  return result;
}

id PackageProvisioner.__allocating_init(launching:)(char a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant);
  uint64_t v4 = (void *)sub_86310();
  id v5 = [v2 initWithLaunching:a1 & 1 processVariant:v3 overridePackageURLCachePath:0 on:v4];

  return v5;
}

uint64_t PackageProvisioner.provision()()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_33574, v0, 0);
}

uint64_t sub_33574()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = OBJC_IVAR___JSAPackageProvisioner_state;
  v0[8] = OBJC_IVAR___JSAPackageProvisioner_state;
  uint64_t v3 = (unsigned char *)(v1 + v2);
  swift_beginAccess();
  if (*v3)
  {
    uint64_t v4 = sub_2D920(&qword_CC750);
    uint64_t v5 = sub_3F708(&qword_CC758, &qword_CC750);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_338BC;
    return dispatch thunk of Future.then()(v0 + 5, v4, v5);
  }
  else
  {
    unsigned char *v3 = 1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_336FC;
    return sub_34A3C();
  }
}

uint64_t sub_336FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_33814, v2, 0);
}

uint64_t sub_33814()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR___JSAPackage_isBundled)) {
      char v2 = 2;
    }
    else {
      char v2 = 3;
    }
  }
  else
  {
    char v2 = 4;
  }
  *(unsigned char *)(v0[7] + v0[8]) = v2;
  v0[6] = v1;
  sub_866F0();
  uint64_t v3 = v0[10];
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_338BC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 40);
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v4);
}

uint64_t sub_339CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_86B10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_86B00();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_33054(a1, &qword_CCEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_86A90();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_33B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_86B10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_86B00();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_33054(a1, &qword_CCEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_86A90();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_2D920(&qword_CC800);
  return swift_task_create();
}

JSApp::PackageProvisionerState_optional __swiftcall PackageProvisionerState.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (JSApp::PackageProvisionerState_optional)rawValue;
}

uint64_t PackageProvisionerState.rawValue.getter()
{
  return *v0;
}

BOOL sub_33D48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_33D5C()
{
  Swift::UInt v1 = *v0;
  sub_870F0();
  sub_87100(v1);
  return sub_87130();
}

void sub_33DA4()
{
  sub_87100(*v0);
}

Swift::Int sub_33DD0()
{
  Swift::UInt v1 = *v0;
  sub_870F0();
  sub_87100(v1);
  return sub_87130();
}

JSApp::PackageProvisionerState_optional sub_33E14(Swift::Int *a1)
{
  return PackageProvisionerState.init(rawValue:)(*a1);
}

void sub_33E1C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_33E28()
{
  uint64_t v0 = sub_85EB0();
  sub_3F910(v0, qword_CC728);
  sub_31DE4(v0, (uint64_t)qword_CC728);
  return sub_85E20();
}

uint64_t sub_33E8C()
{
  uint64_t v0 = sub_86460();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17[-1] - v5;
  uint64_t v7 = sub_2D920(&qword_CC7D8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_CC488 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_31DE4(v7, (uint64_t)qword_CCDB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_86080();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v17[0]) {
    LOBYTE(v12) = 0;
  }
  else {
    int v12 = _s5JSApp8DefaultsC14bootURLIsLocalSbvgZ_0() ^ 1;
  }
  char v13 = sub_860B0();
  id v14 = (unsigned int *)&enum case for JetPackSigningPolicy.required(_:);
  if (!(v12 & 1 | ((v13 & 1) == 0))) {
    id v14 = (unsigned int *)&enum case for JetPackSigningPolicy.ignoreMissingButValidateIfProvided(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v6, *v14, v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v17[3] = sub_864D0();
  void v17[4] = (uint64_t)&protocol witness table for JetPackManagedKeyProvider;
  sub_3F758(v17);
  sub_864C0();
  sub_86300();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t PackageProvisioner.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___JSAPackageProvisioner_state);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

id PackageProvisioner.init(launching:)(char a1)
{
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant);
  uint64_t v4 = (void *)sub_86310();
  id v5 = [v1 initWithLaunching:a1 & 1 processVariant:v3 overridePackageURLCachePath:0 on:v4];

  return v5;
}

id PackageProvisioner.__allocating_init(launching:onQueue:)(char a1, void *a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  id v5 = [v4 initWithLaunching:a1 & 1 processVariant:*(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant) overridePackageURLCachePath:0 on:a2];

  return v5;
}

id PackageProvisioner.init(launching:onQueue:)(char a1, void *a2)
{
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  id v5 = [v2 initWithLaunching:a1 & 1 processVariant:*(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant) overridePackageURLCachePath:0 on:a2];

  return v5;
}

id PackageProvisioner.__allocating_init(launching:processVariant:overridePackageURLCachePath:on:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  swift_allocObject();
  id v10 = sub_3E6A8(a1, a2, a3, a4, a5);

  return v10;
}

id PackageProvisioner.init(launching:processVariant:overridePackageURLCachePath:on:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = sub_3E6A8(a1, a2, a3, a4, a5);

  return v6;
}

uint64_t PackageProvisioner.provision(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2D920(&qword_CCEA0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v15 - v9;
  if (*(unsigned char *)(v2 + OBJC_IVAR___JSAPackageProvisioner_isLaunching) == 1)
  {
    sub_86AF0();
    uint64_t v11 = sub_86B10();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = sub_86B10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  }
  sub_3F24C((uint64_t)v10, (uint64_t)v8, &qword_CCEA0);
  char v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  void v13[4] = a1;
  v13[5] = a2;
  v13[6] = v2;
  swift_retain();
  swift_retain();
  sub_339CC((uint64_t)v8, (uint64_t)&unk_CC778, (uint64_t)v13);
  swift_release();
  return sub_33054((uint64_t)v10, &qword_CCEA0);
}

uint64_t sub_3478C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6[2] = a4;
  v6[3] = a5;
  uint64_t v8 = (void *)swift_task_alloc();
  void v6[4] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_3483C;
  v8[7] = a6;
  return _swift_task_switch(sub_33574, a6, 0);
}

uint64_t sub_3483C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_3493C, 0, 0);
}

uint64_t sub_3493C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  (*(void (**)(void *))(v0 + 16))(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_34A3C()
{
  v1[38] = v0;
  uint64_t v2 = sub_863C0();
  v1[39] = v2;
  v1[40] = *(void *)(v2 - 8);
  v1[41] = swift_task_alloc();
  uint64_t v3 = sub_86230();
  v1[42] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[43] = v4;
  v1[44] = *(void *)(v4 + 64);
  v1[45] = swift_task_alloc();
  sub_2D920(&qword_CCEA0);
  v1[46] = swift_task_alloc();
  uint64_t v5 = sub_2D920(&qword_CC7D8);
  v1[47] = v5;
  v1[48] = *(void *)(v5 - 8);
  v1[49] = swift_task_alloc();
  uint64_t v6 = sub_86170();
  v1[50] = v6;
  v1[51] = *(void *)(v6 - 8);
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  uint64_t v7 = sub_861A0();
  v1[54] = v7;
  v1[55] = *(void *)(v7 - 8);
  v1[56] = swift_task_alloc();
  return _swift_task_switch(sub_34CB8, v0, 0);
}

uint64_t sub_34CB8()
{
  uint64_t v64 = v0;
  id v1 = JSASignpost();
  if (!v1)
  {
    __break(1u);
    return Task<>.value.getter(v1, v2, v3);
  }
  uint64_t v4 = (unsigned char *)(v0 + 556);
  sub_86180();
  sub_86190();
  sub_86150();
  uint64_t v5 = sub_86190();
  os_signpost_type_t v6 = sub_86CF0();
  if (sub_86D20())
  {
    uint64_t v7 = *(void *)(v0 + 416);
    uint64_t v8 = *(void *)(v0 + 408);
    uint64_t v62 = *(void *)(v0 + 400);
    uint64_t v9 = *(void (**)(uint64_t, void))(v8 + 16);
    v9(v7, *(void *)(v0 + 424));
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109120;
    *(_DWORD *)(v0 + 552) = qos_class_self();
    uint64_t v4 = (unsigned char *)(v0 + 556);
    sub_86D40();
    os_signpost_id_t v11 = sub_86160();
    _os_signpost_emit_with_name_impl(&dword_0, v5, v6, v11, "Package Provision", "qos: 0x%x", v10, 8u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v62);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 408);

    uint64_t v9 = *(void (**)(uint64_t, void))(v12 + 16);
  }
  uint64_t v13 = *(void *)(v0 + 304);
  ((void (*)(void, void, void))v9)(*(void *)(v0 + 416), *(void *)(v0 + 424), *(void *)(v0 + 400));
  sub_861F0();
  swift_allocObject();
  *(void *)(v0 + 456) = sub_861E0();
  id v14 = [self defaultBag];
  *(void *)(v0 + 464) = v14;
  int v15 = *(unsigned __int8 *)(v13 + OBJC_IVAR___JSAPackageProvisioner_isLaunching);
  v4[1] = v15;
  if (v15) {
    unint64_t v16 = 0;
  }
  else {
    unint64_t v16 = (void (*)(unsigned char *, uint64_t))(&dword_0 + 3);
  }
  if (*(void *)(v13 + OBJC_IVAR___JSAPackageProvisioner_processVariant))
  {
    uint64_t v17 = sub_86210();
    os_log_type_t v18 = sub_86C50();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_30;
    }
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    uint64_t v63 = v20;
    if (v15) {
      uint64_t v21 = 0x68636E75616CLL;
    }
    else {
      uint64_t v21 = 0x756F72676B636162;
    }
    uint64_t v22 = v4;
    if (v15) {
      unint64_t v23 = 0xE600000000000000;
    }
    else {
      unint64_t v23 = 0xEA0000000000646ELL;
    }
    *(void *)(v0 + 264) = sub_422E0(v21, v23, &v63);
    sub_86D40();
    uint64_t v4 = v22;
    swift_bridgeObjectRelease();
    int64_t v24 = "JSAPackageProvisioner [%s] Skipped regular package because running tests";
    goto LABEL_17;
  }
  uint64_t v25 = (void (*)(unsigned char *, unsigned char *, uint64_t))v14;
  if (qword_CC4E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_CD5A1 == 1)
  {
    uint64_t v17 = sub_86210();
    os_log_type_t v26 = sub_86C50();
    if (!os_log_type_enabled(v17, v26)) {
      goto LABEL_30;
    }
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    if (v15) {
      uint64_t v28 = 0x68636E75616CLL;
    }
    else {
      uint64_t v28 = 0x756F72676B636162;
    }
    if (v15) {
      unint64_t v29 = 0xE600000000000000;
    }
    else {
      unint64_t v29 = 0xEA0000000000646ELL;
    }
    *(void *)(v0 + 296) = sub_422E0(v28, v29, &v63);
    sub_86D40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v17, v26, "JSAPackageProvisioner [%s] Skipped regular package because running from offline cache", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_29;
  }
  if (qword_CC4D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_CD5A0 != 1)
  {
    if (v15)
    {
      if (qword_CC460 != -1) {
        swift_once();
      }
      uint64_t v43 = *(void *)(v0 + 384);
      uint64_t v44 = *(void *)(v0 + 392);
      uint64_t v45 = *(void *)(v0 + 376);
      uint64_t v46 = sub_31DE4(v45, (uint64_t)qword_CCD40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v46, v45);
      sub_86080();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
      if (*v4 == 1)
      {
        uint64_t v47 = sub_86210();
        os_log_type_t v48 = sub_86C50();
        if (os_log_type_enabled(v47, v48))
        {
          id v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          *(_DWORD *)id v49 = 136315138;
          *(void *)(v0 + 280) = sub_422E0(0x68636E75616CLL, 0xE600000000000000, &v63);
          sub_86D40();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v47, v48, "JSAPackageProvisioner [%s] Skipped regular package due to user default", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        goto LABEL_31;
      }
    }
    uint64_t v50 = *(void *)(v0 + 368);
    uint64_t v51 = *(void *)(v0 + 304);
    sub_366D8(v25, v16, (uint64_t *)(v0 + 136));
    uint64_t v52 = sub_86B10();
    *(void *)(v0 + 472) = v52;
    uint64_t v53 = *(void *)(v52 - 8);
    long long v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    *(void *)(v0 + 480) = v54;
    *(void *)(v0 + 488) = (v53 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v54(v50, 1, 1, v52);
    sub_3ECDC(v0 + 136, v0 + 176);
    uint64_t v55 = sub_3F8A8(&qword_CC7F0, (void (*)(uint64_t))type metadata accessor for PackageProvisioner);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v51;
    *(void *)(v56 + 24) = v55;
    *(void *)(v56 + 32) = v51;
    sub_3EDD8((long long *)(v0 + 176), v56 + 40);
    *(unsigned char *)(v56 + 80) = (_BYTE)v16;
    swift_retain_n();
    uint64_t v57 = sub_33B78(v50, (uint64_t)&unk_CC7F8, v56);
    uint64_t v58 = 0;
    *(void *)(v0 + 496) = v57;
    if (v15)
    {
      uint64_t v59 = *(void *)(v0 + 368);
      v54(v59, 1, 1, v52);
      v60 = (void *)swift_allocObject();
      v60[2] = 0;
      v60[3] = 0;
      v60[4] = v57;
      swift_retain();
      uint64_t v58 = sub_3ACB4(v59, (uint64_t)&unk_CC830, (uint64_t)v60);
    }
    *(void *)(v0 + 504) = v58;
    v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v61;
    uint64_t v3 = sub_2D920(&qword_CC800);
    void *v61 = v0;
    v61[1] = sub_35830;
    id v1 = (id)(v0 + 272);
    uint64_t v2 = v57;
    return Task<>.value.getter(v1, v2, v3);
  }
  uint64_t v17 = sub_86210();
  os_log_type_t v18 = sub_86C50();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    uint64_t v63 = v39;
    if (v15) {
      uint64_t v40 = 0x68636E75616CLL;
    }
    else {
      uint64_t v40 = 0x756F72676B636162;
    }
    id v41 = v4;
    if (v15) {
      unint64_t v42 = 0xE600000000000000;
    }
    else {
      unint64_t v42 = 0xEA0000000000646ELL;
    }
    *(void *)(v0 + 288) = sub_422E0(v40, v42, &v63);
    sub_86D40();
    uint64_t v4 = v41;
    swift_bridgeObjectRelease();
    int64_t v24 = "JSAPackageProvisioner [%s] Skipped regular package because generating offline cache";
LABEL_17:
    _os_log_impl(&dword_0, v17, v18, v24, v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_29:
    swift_slowDealloc();
  }
LABEL_30:

  if (v4[1] == 1)
  {
LABEL_31:
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v30;
    void *v30 = v0;
    v30[1] = sub_36178;
    return sub_3BE80(2);
  }

  uint64_t v32 = *(void *)(v0 + 448);
  uint64_t v33 = *(void *)(v0 + 432);
  uint64_t v34 = *(void *)(v0 + 440);
  uint64_t v35 = *(void *)(v0 + 424);
  uint64_t v36 = *(void *)(v0 + 400);
  uint64_t v37 = *(void *)(v0 + 408);
  sub_363DC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38(0);
}

uint64_t sub_35830()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 304);
  swift_task_dealloc();
  return _swift_task_switch(sub_35940, v1, 0);
}

uint64_t sub_35940()
{
  if (*(void *)(v0 + 272))
  {
    uint64_t v25 = *(void *)(v0 + 272);
    uint64_t v27 = (long long *)(v0 + 96);
    uint64_t v28 = v0 + 136;
    if (*(void *)(v0 + 504))
    {
      swift_retain();
      sub_2D920(&qword_CD0D0);
      sub_86B20();
      swift_release();
    }
    uint64_t v2 = *(void *)(v0 + 472);
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 480);
    os_log_type_t v26 = *(void **)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 360);
    uint64_t v3 = *(void *)(v0 + 368);
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 352);
    uint64_t v6 = *(void *)(v0 + 336);
    uint64_t v7 = *(void *)(v0 + 304);
    if (*(unsigned char *)(v0 + 557)) {
      char v8 = 0;
    }
    else {
      char v8 = 3;
    }
    char v24 = v8;
    [self updateUsedBootstrapFallback:0];
    v1(v3, 1, 1, v2);
    uint64_t v9 = v7 + OBJC_IVAR___JSAPackageProvisioner_logger;
    sub_3ECDC(v28, (uint64_t)v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v9, v6);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    sub_3EDD8(v27, v11 + 32);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v11 + v10, v4, v6);
    *(unsigned char *)(v11 + v10 + v23) = v24;
    sub_43B10(v3, (uint64_t)&unk_CC820, v11);
    swift_release();
    swift_release();

    swift_release();
    sub_33054(v3, &qword_CCEA0);
    sub_3ED88(v28);
    goto LABEL_8;
  }
  if (*(unsigned char *)(v0 + 557) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_87070();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      sub_3ED88(v0 + 136);
      swift_release();
      swift_release();
      goto LABEL_20;
    }
  }
  sub_3ECDC(v0 + 136, v0 + 56);
  sub_2D920(&qword_CC808);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));
    sub_3B754((uint64_t *)(v0 + 16));
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v21;
    void *v21 = v0;
    v21[1] = sub_35E30;
    return sub_37AD4(v0 + 16, 1);
  }
  swift_release();
  swift_release();
  sub_3ED88(v0 + 136);
LABEL_20:
  if (*(unsigned char *)(v0 + 557) != 1)
  {
    uint64_t v25 = 0;

LABEL_8:
    uint64_t v12 = *(void *)(v0 + 448);
    uint64_t v14 = *(void *)(v0 + 432);
    uint64_t v13 = *(void *)(v0 + 440);
    uint64_t v15 = *(void *)(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 400);
    uint64_t v17 = *(void *)(v0 + 408);
    sub_363DC();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v18(v25);
  }
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v22;
  void *v22 = v0;
  v22[1] = sub_36178;
  return sub_3BE80(2);
}

uint64_t sub_35E30(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  uint64_t v3 = *(void *)(*(void *)v1 + 304);
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  sub_3ED88(v2);
  return _swift_task_switch(sub_35F54, v3, 0);
}

uint64_t sub_35F54()
{
  if (*(void *)(v0 + 528))
  {
    uint64_t v1 = *(void **)(v0 + 464);
    [self updateUsedBootstrapFallback:0];

    swift_release();
    swift_release();
    sub_3ED88(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 528);
LABEL_8:
    uint64_t v4 = *(void *)(v0 + 448);
    uint64_t v6 = *(void *)(v0 + 432);
    uint64_t v5 = *(void *)(v0 + 440);
    uint64_t v7 = *(void *)(v0 + 424);
    uint64_t v8 = *(void *)(v0 + 400);
    uint64_t v9 = *(void *)(v0 + 408);
    sub_363DC();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v10(v11);
  }
  sub_3ED88(v0 + 136);
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 557) != 1)
  {

    uint64_t v11 = 0;
    goto LABEL_8;
  }
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v2;
  void *v2 = v0;
  v2[1] = sub_36178;
  return sub_3BE80(2);
}

uint64_t sub_36178(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 304);
  *(void *)(*(void *)v1 + 544) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_36290, v2, 0);
}

uint64_t sub_36290()
{
  uint64_t v10 = v0[68];
  uint64_t v1 = (void *)v0[58];
  [self updateUsedBootstrapFallback:1];

  uint64_t v2 = v0[56];
  uint64_t v4 = v0[54];
  uint64_t v3 = v0[55];
  uint64_t v5 = v0[53];
  uint64_t v6 = v0[50];
  uint64_t v7 = v0[51];
  sub_363DC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v10);
}

uint64_t sub_363DC()
{
  uint64_t v0 = sub_861B0();
  uint64_t v19 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_86170();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = sub_86190();
  sub_861D0();
  os_signpost_type_t v11 = sub_86CE0();
  if (sub_86D20())
  {
    swift_retain();
    sub_86200();
    swift_release();
    uint64_t v12 = v19;
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v2, v0) == enum case for OSSignpostError.doubleEnd(_:))
    {
      char v13 = 0;
      uint64_t v14 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v0);
      uint64_t v14 = "qos: 0x%x";
      char v13 = 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = swift_slowAlloc();
    *(unsigned char *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 1) = v13;
    *(_WORD *)(v16 + 2) = 1024;
    qos_class_t v20 = qos_class_self();
    sub_86D40();
    os_signpost_id_t v17 = sub_86160();
    _os_signpost_emit_with_name_impl(&dword_0, v10, v11, v17, "Package Provision", v14, (uint8_t *)v16, 8u);
    swift_slowDealloc();

    os_log_type_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v18)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_366D8@<X0>(void (*a1)(unsigned char *, unsigned char *, uint64_t)@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  v132 = a2;
  v133 = a1;
  v135 = a3;
  uint64_t v5 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v119[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v131 = sub_85EB0();
  uint64_t v134 = *(void *)(v131 - 8);
  uint64_t v8 = __chkstk_darwin(v131);
  v124 = &v119[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  v123 = &v119[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  v128 = &v119[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  v129 = &v119[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  v127 = &v119[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  v125 = &v119[-v19];
  __chkstk_darwin(v18);
  v130 = &v119[-v20];
  uint64_t v21 = sub_2D920(&qword_CC838);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v24 = &v119[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_2D920(&qword_CC7D8);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = &v119[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v140 = sub_864F0();
  uint64_t v29 = *(void *)(v140 - 8);
  uint64_t v30 = __chkstk_darwin(v140);
  uint64_t v32 = &v119[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = __chkstk_darwin(v30);
  v122 = &v119[-v34];
  uint64_t v35 = __chkstk_darwin(v33);
  v137 = &v119[-v36];
  uint64_t v37 = __chkstk_darwin(v35);
  v126 = &v119[-v38];
  __chkstk_darwin(v37);
  v138 = v4;
  v139 = &v119[-v39];
  int v136 = *((unsigned __int8 *)v4 + OBJC_IVAR___JSAPackageProvisioner_isLaunching);
  if (v136 != 1) {
    goto LABEL_5;
  }
  if (qword_CC480 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_31DE4(v25, (uint64_t)qword_CCDA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16))(v28, v40, v25);
  sub_86080();
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v28, v25);
  if ((v141[0] & 1) == 0) {
    id v41 = (unsigned int *)&enum case for JetPackAssetRequestSourcePolicy.standard(_:);
  }
  else {
LABEL_5:
  }
    id v41 = (unsigned int *)&enum case for JetPackAssetRequestSourcePolicy.remoteOnly(_:);
  uint64_t v42 = v29;
  uint64_t v43 = *(void (**)(unsigned char *, void, uint64_t))(v29 + 104);
  v43(v139, *v41, v140);
  if ((sub_860B0() & 1) == 0) {
    goto LABEL_18;
  }
  if (qword_CC470 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_31DE4(v21, (uint64_t)qword_CCD70);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v22 + 16))(v24, v44, v21);
  sub_86080();
  (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v24, v21);
  if (!v141[1]) {
    goto LABEL_18;
  }
  if ((sub_4D94C() & 1) == 0)
  {
    sub_85E80();
    swift_bridgeObjectRelease();
    uint64_t v58 = v134;
    uint64_t v59 = v131;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v134 + 48))(v7, 1, v131) != 1)
    {
      v91 = v128;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 32))(v128, v7, v59);
      v92 = *(unsigned char **)(v58 + 16);
      v93 = v123;
      v130 = (unsigned char *)(v58 + 16);
      v127 = v92;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v92)(v123, v91, v59);
      v95 = (unsigned char *)(v42 + 16);
      v94 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v42 + 16);
      v96 = v122;
      v138 = (void *)v42;
      uint64_t v97 = v140;
      v133 = v94;
      v94(v122, v139, v140);
      v98 = sub_86210();
      os_log_type_t v99 = sub_86C50();
      int v100 = v99;
      BOOL v101 = os_log_type_enabled(v98, v99);
      v125 = v95;
      if (v101)
      {
        uint64_t v102 = swift_slowAlloc();
        uint64_t v121 = swift_slowAlloc();
        v141[0] = v121;
        uint64_t v103 = 8 * (char)v132;
        uint64_t v104 = *(void *)&aLaunch[v103];
        *(_DWORD *)uint64_t v102 = 136315650;
        int v120 = v100;
        uint64_t v142 = sub_422E0(v104, *(void *)&aLaunchNlaunchB[v103 + 24], v141);
        sub_86D40();
        swift_bridgeObjectRelease();
        *(_WORD *)(v102 + 12) = 2082;
        sub_3F8A8((unint64_t *)&qword_CC8A0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v105 = sub_87040();
        uint64_t v142 = sub_422E0(v105, v106, v141);
        sub_86D40();
        swift_bridgeObjectRelease();
        v132 = *(void (**)(unsigned char *, uint64_t))(v58 + 8);
        v132(v93, v59);
        *(_WORD *)(v102 + 22) = 2080;
        v133(v137, v96, v140);
        uint64_t v107 = sub_868A0();
        uint64_t v142 = sub_422E0(v107, v108, v141);
        sub_86D40();
        uint64_t v97 = v140;
        swift_bridgeObjectRelease();
        v126 = (unsigned char *)v138[1];
        ((void (*)(unsigned char *, uint64_t))v126)(v96, v97);
        _os_log_impl(&dword_0, v98, (os_log_type_t)v120, "JSAPackageProvisioner [%s] Step 1: Found user-specified boot url: %{public}s, loading with sourcePolicy %s", (uint8_t *)v102, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        v132 = *(void (**)(unsigned char *, uint64_t))(v58 + 8);
        v132(v93, v59);
        v126 = (unsigned char *)v138[1];
        ((void (*)(unsigned char *, uint64_t))v126)(v96, v97);
      }
      v109 = v124;
      v110 = (void (*)(unsigned char *, unsigned char *, uint64_t))v127;
      v111 = v128;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v127)(v124, v128, v59);
      v144._countAndFlagsBits = 0x656A2E7865646E69;
      v144._object = (void *)0xED00006B63617074;
      sub_85E50(v144);
      char v112 = v136;
      if (v136) {
        uint64_t v113 = 0x402E000000000000;
      }
      else {
        uint64_t v113 = 0;
      }
      uint64_t v114 = swift_allocObject();
      *(void *)(v114 + 16) = v113;
      *(unsigned char *)(v114 + 24) = v112 ^ 1;
      uint64_t v115 = sub_86390();
      v116 = v135;
      v135[3] = v115;
      v116[4] = sub_3F8A8(&qword_CC898, (void (*)(uint64_t))&type metadata accessor for ValidatedJetPackAssetLocations.URLLocation);
      sub_3F758(v116);
      v110(v129, v109, v59);
      v117 = v139;
      v133(v137, v139, v97);
      sub_863A0();
      v118 = v132;
      v132(v109, v59);
      v118(v111, v59);
      return ((uint64_t (*)(unsigned char *, uint64_t))v126)(v117, v97);
    }
    sub_33054((uint64_t)v7, (uint64_t *)&unk_CD040);
LABEL_18:
    v60 = v32;
    uint64_t v61 = v140;
    uint64_t v134 = *(void *)(v42 + 16);
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v134)(v32, v139, v140);
    uint64_t v62 = sub_86210();
    os_log_type_t v63 = sub_86C50();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v131 = swift_slowAlloc();
      v141[0] = v131;
      uint64_t v65 = 8 * (char)v132;
      uint64_t v66 = *(void *)&aLaunch[v65];
      *(_DWORD *)uint64_t v64 = 136315394;
      uint64_t v142 = sub_422E0(v66, *(void *)&aLaunchNlaunchB[v65 + 24], v141);
      sub_86D40();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2080;
      uint64_t v67 = v137;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v134)(v137, v60, v140);
      uint64_t v68 = sub_868A0();
      uint64_t v142 = sub_422E0(v68, v69, v141);
      uint64_t v61 = v140;
      sub_86D40();
      swift_bridgeObjectRelease();
      v70 = v60;
      v71 = *(void (**)(unsigned char *, uint64_t))(v42 + 8);
      v71(v70, v61);
      _os_log_impl(&dword_0, v62, v63, "JSAPackageProvisioner [%s] Step 1: Loading JetPack using Bag Key with sourcePolicy %s", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v72 = v135;
    }
    else
    {

      v71 = *(void (**)(unsigned char *, uint64_t))(v42 + 8);
      v71(v32, v61);
      v72 = v135;
      uint64_t v67 = v137;
    }
    id v73 = [self jsAppUrlKey];
    char v74 = v136;
    if (v136) {
      uint64_t v75 = 0x402E000000000000;
    }
    else {
      uint64_t v75 = 0;
    }
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = v75;
    *(unsigned char *)(v76 + 24) = v74 ^ 1;
    v72[3] = sub_863C0();
    v72[4] = sub_3F8A8(&qword_CC8C0, (void (*)(uint64_t))&type metadata accessor for ValidatedJetPackAssetLocations.BagKeyLocation);
    sub_3F758(v72);
    v77 = v139;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v134)(v67, v139, v61);
    swift_retain();
    v78 = v133;
    sub_863D0();
    return ((uint64_t (*)(unsigned char *, uint64_t))v71)(v77, v61);
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v131;
  uint64_t v46 = v134;
  if (qword_CC430 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_31DE4(v45, (uint64_t)qword_CC728);
  os_log_type_t v48 = *(void **)(v46 + 16);
  id v49 = v130;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v48)(v130, v47, v45);
  uint64_t v50 = v125;
  v138 = v48;
  v133 = (void (*)(unsigned char *, unsigned char *, uint64_t))(v46 + 16);
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v48)(v125, v49, v45);
  uint64_t v51 = sub_86210();
  os_log_type_t v52 = sub_86C50();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    v128 = (unsigned char *)swift_slowAlloc();
    v141[0] = (uint64_t)v128;
    uint64_t v54 = 8 * (char)v132;
    uint64_t v55 = *(void *)&aLaunch[v54];
    *(_DWORD *)uint64_t v53 = 136315394;
    uint64_t v142 = sub_422E0(v55, *(void *)&aLaunchNlaunchB[v54 + 24], v141);
    sub_86D40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2082;
    sub_3F8A8((unint64_t *)&qword_CC8A0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v56 = sub_87040();
    uint64_t v142 = sub_422E0(v56, v57, v141);
    uint64_t v45 = v131;
    sub_86D40();
    swift_bridgeObjectRelease();
    v132 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
    v132(v50, v45);
    _os_log_impl(&dword_0, v51, v52, "JSAPackageProvisioner [%s] Step 1: Found user-specified boot url: local, i.e. %{public}s, loading with sourcePolicy .remoteOnly", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    v132 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
    v132(v50, v45);
  }
  v80 = v127;
  v81 = (void (*)(unsigned char *, unsigned char *, uint64_t))v138;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v138)(v127, v130, v45);
  v143._countAndFlagsBits = 0x656A2E7865646E69;
  v143._object = (void *)0xED00006B63617074;
  sub_85E50(v143);
  v82 = v126;
  uint64_t v83 = v140;
  v43(v126, enum case for JetPackAssetRequestSourcePolicy.remoteOnly(_:), v140);
  char v84 = v136;
  if (v136) {
    uint64_t v85 = 0x402E000000000000;
  }
  else {
    uint64_t v85 = 0;
  }
  uint64_t v86 = swift_allocObject();
  *(void *)(v86 + 16) = v85;
  *(unsigned char *)(v86 + 24) = v84 ^ 1;
  uint64_t v87 = sub_86390();
  v88 = v135;
  v135[3] = v87;
  v88[4] = sub_3F8A8(&qword_CC898, (void (*)(uint64_t))&type metadata accessor for ValidatedJetPackAssetLocations.URLLocation);
  sub_3F758(v88);
  v81(v129, v80, v45);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v42 + 16))(v137, v82, v83);
  sub_863A0();
  v89 = *(void (**)(unsigned char *, uint64_t))(v42 + 8);
  v89(v82, v83);
  v90 = v132;
  v132(v80, v45);
  v90(v130, v45);
  return ((uint64_t (*)(unsigned char *, uint64_t))v89)(v139, v83);
}

uint64_t sub_378EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6[2] = a1;
  v6[3] = a4;
  uint64_t v9 = (void *)swift_task_alloc();
  void v6[4] = v9;
  void *v9 = v6;
  v9[1] = sub_3799C;
  return sub_37AD4(a5, a6);
}

uint64_t sub_3799C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_37AB4, v2, 0);
}

uint64_t sub_37AB4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_37AD4(uint64_t a1, char a2)
{
  *(void *)(v3 + 888) = v2;
  *(unsigned char *)(v3 + 1120) = a2;
  *(void *)(v3 + 880) = a1;
  uint64_t v4 = sub_2D920(&qword_CC838);
  *(void *)(v3 + 896) = v4;
  *(void *)(v3 + 904) = *(void *)(v4 - 8);
  *(void *)(v3 + 912) = swift_task_alloc();
  *(void *)(v3 + 920) = type metadata accessor for BooksJetPackResourceBundle();
  *(void *)(v3 + 928) = swift_task_alloc();
  *(void *)(v3 + 936) = swift_task_alloc();
  uint64_t v5 = sub_86370();
  *(void *)(v3 + 944) = v5;
  *(void *)(v3 + 952) = *(void *)(v5 - 8);
  *(void *)(v3 + 960) = swift_task_alloc();
  *(void *)(v3 + 968) = swift_task_alloc();
  uint64_t v6 = sub_85EB0();
  *(void *)(v3 + 976) = v6;
  *(void *)(v3 + 984) = *(void *)(v6 - 8);
  *(void *)(v3 + 992) = swift_task_alloc();
  sub_2D920(&qword_CC848);
  *(void *)(v3 + 1000) = swift_task_alloc();
  *(void *)(v3 + 1008) = swift_task_alloc();
  *(void *)(v3 + 1016) = swift_task_alloc();
  uint64_t v7 = sub_2D920(&qword_CC850);
  *(void *)(v3 + 1024) = v7;
  *(void *)(v3 + 1032) = *(void *)(v7 - 8);
  *(void *)(v3 + 1040) = swift_task_alloc();
  sub_86430();
  *(void *)(v3 + 1048) = swift_task_alloc();
  uint64_t v8 = sub_86410();
  *(void *)(v3 + 1056) = v8;
  *(void *)(v3 + 1064) = *(void *)(v8 - 8);
  *(void *)(v3 + 1072) = swift_task_alloc();
  return _swift_task_switch(sub_37DDC, v2, 0);
}

uint64_t sub_37DDC()
{
  uint64_t v18 = v0;
  *(void *)(v0 + 1080) = OBJC_IVAR___JSAPackageProvisioner_logger;
  uint64_t v1 = sub_86210();
  os_log_type_t v2 = sub_86C50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(char *)(v0 + 1120);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = *(void *)&aLaunch[8 * v3];
    v17[0] = v5;
    *(void *)(v0 + 872) = sub_422E0(v6, *(void *)&aLaunchNlaunchB[8 * v3 + 24], v17);
    sub_86D40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v1, v2, "JSAPackageProvisioner [%s] Step 2: Computing bootURL from defaults or bag", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v7 = [self defaultBag];
  *(void *)(v0 + 1088) = v7;
  uint64_t v8 = sub_86480();
  uint64_t v9 = sub_86470();
  *(void *)(v0 + 1096) = v9;
  uint64_t v10 = *(void *)(v0 + 880);
  v17[3] = v8;
  void v17[4] = (uint64_t)&protocol witness table for JetPackAssetDiskCache;
  v17[0] = v9;
  swift_retain();
  sub_86420();
  sub_86450();
  swift_allocObject();
  sub_86440();
  sub_3ECDC(v10, v0 + 680);
  id v11 = v7;
  sub_86400();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 1104) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_38348;
  uint64_t v13 = *(void *)(v0 + 1040);
  uint64_t v14 = *(void *)(v0 + 944);
  uint64_t v15 = *(void *)(v0 + 888);
  return ValidatedJetPackLoadingCoordinator.getJetPackAsset<A>(unpackAsset:)(v13, &unk_CC868, v15, v14, &protocol witness table for InMemoryJetPackResourceBundle);
}

uint64_t sub_38348()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 888);
  if (v0) {
    uint64_t v4 = sub_3A720;
  }
  else {
    uint64_t v4 = sub_38474;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_38474()
{
  uint64_t v206 = v0;
  v199 = (objc_super *)(v0 + 720);
  uint64_t v1 = *(void *)(v0 + 1016);
  uint64_t v2 = *(void *)(v0 + 1008);
  sub_3ECDC(*(void *)(v0 + 880), v0 + 640);
  sub_2D920(&qword_CC808);
  uint64_t v3 = sub_86390();
  int v4 = swift_dynamicCast();
  uint64_t v5 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, v4 ^ 1u, 1, v3);
  sub_3F24C(v1, v2, &qword_CC848);
  uint64_t v6 = sub_86210();
  os_log_type_t v7 = sub_86C50();
  uint64_t v204 = v0;
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v185 = v7;
    uint64_t v8 = *(char *)(v0 + 1120);
    uint64_t v9 = swift_slowAlloc();
    v205[0] = swift_slowAlloc();
    uint64_t v10 = *(void *)&aLaunch[8 * v8];
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = *(void *)(v0 + 1008);
    uint64_t v12 = *(void *)(v0 + 1000);
    *(void *)(v0 + 856) = sub_422E0(v10, *(void *)&aLaunchNlaunchB[8 * v8 + 24], v205);
    sub_86D40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_3F24C(v11, v12, &qword_CC848);
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v12, 1, v3);
    uint64_t v14 = *(void *)(v0 + 1000);
    if (v13 == 1)
    {
      sub_33054(*(void *)(v0 + 1000), &qword_CC848);
      unint64_t v15 = 0xE300000000000000;
      uint64_t v16 = 6775138;
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 992);
      uint64_t v19 = *(void *)(v0 + 984);
      uint64_t v20 = *(void *)(v0 + 976);
      sub_86380();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v3);
      uint64_t v16 = sub_85DF0();
      unint64_t v15 = v21;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }
    uint64_t v22 = *(void *)(v0 + 1008);
    *(void *)(v0 + 864) = sub_422E0(v16, v15, v205);
    sub_86D40();
    swift_bridgeObjectRelease();
    sub_33054(v22, &qword_CC848);
    _os_log_impl(&dword_0, v6, v185, "JSAPackageProvisioner [%s] Step 3: Decrypting and verifying JetPack from %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 1008);

    sub_33054(v17, &qword_CC848);
  }
  v196 = (void *)(v0 + 736);
  v186 = (uint64_t *)(v0 + 784);
  uint64_t v23 = (uint64_t *)(v0 + 832);
  uint64_t v24 = *(void *)(v0 + 1040);
  v173 = (uint64_t *)(v0 + 840);
  v175 = (uint64_t *)(v0 + 792);
  v176 = (uint64_t *)(v0 + 848);
  uint64_t v25 = *(void *)(v0 + 1016);
  uint64_t v26 = *(void *)(v0 + 968);
  uint64_t v27 = *(void *)(v0 + 960);
  uint64_t v28 = *(void *)(v0 + 952);
  uint64_t v29 = *(void *)(v204 + 944);
  uint64_t v30 = *(char *)(v204 + 1120);
  uint64_t v31 = sub_3DE08(v24, v25);
  unint64_t v33 = v32;
  sub_863F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v26, v29);
  uint64_t v34 = *(uint64_t **)(v204 + 936);
  uint64_t v35 = *(void *)(v204 + 928);
  uint64_t v36 = *(unsigned __int8 *)(v204 + 1120);
  BooksJetPackResourceBundle.init(memoryJetPack:provisionMode:)(*(char **)(v204 + 960), *(void *)&aLaunch[8 * v30], *(void *)&aLaunchNlaunchB[8 * v30 + 24], v34);
  sub_3F2B0((uint64_t)v34, v35);
  uint64_t v37 = (objc_class *)type metadata accessor for Package();
  uint64_t v38 = objc_allocWithZone(v37);
  sub_3F2B0(v35, (uint64_t)&v38[OBJC_IVAR___JSAPackage_jetPack]);
  uint64_t v39 = (uint64_t *)&v38[OBJC_IVAR___JSAPackage_nameForJSContext];
  uint64_t v193 = v31;
  *uint64_t v39 = v31;
  v39[1] = v33;
  v38[OBJC_IVAR___JSAPackage_isBundled] = 0;
  *(void *)(v204 + 720) = v38;
  uint64_t v40 = v204;
  *(void *)(v204 + 728) = v37;
  swift_bridgeObjectRetain();
  id v41 = [(objc_super *)v199 init];
  sub_3F314(v35);
  unint64_t v181 = v33;
  switch(v36)
  {
    case 1:
      if (Package.isSupported.getter()) {
        goto LABEL_34;
      }
      v150 = v23;
      uint64_t v42 = swift_allocObject();
      *(unsigned char *)(v42 + 16) = 1;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = sub_3F9F0;
      *(void *)(v43 + 24) = v42;
      uint64_t v44 = v43;
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v41;
      uint64_t v200 = swift_allocObject();
      *(void *)(v200 + 16) = v193;
      *(void *)(v200 + 24) = v33;
      uint64_t v46 = v41;
      swift_bridgeObjectRetain();
      v187 = v46;
      swift_retain();
      log = sub_86210();
      os_log_type_t v164 = sub_86C50();
      uint64_t v47 = swift_allocObject();
      *(unsigned char *)(v47 + 16) = 32;
      uint64_t v48 = v47;
      uint64_t v170 = swift_allocObject();
      *(unsigned char *)(v170 + 16) = 8;
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = sub_3F38C;
      *(void *)(v49 + 24) = v44;
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = sub_3F974;
      *(void *)(v50 + 24) = v49;
      osos_log_t loga = (os_log_t)swift_allocObject();
      LOBYTE(osloga[2].isa) = 34;
      uint64_t v190 = swift_allocObject();
      *(unsigned char *)(v190 + 16) = 8;
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = sub_3F9F4;
      *(void *)(v51 + 24) = v45;
      uint64_t v52 = v51;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = sub_3F974;
      *(void *)(v53 + 24) = v52;
      uint64_t v54 = v53;
      uint64_t v55 = swift_allocObject();
      *(unsigned char *)(v55 + 16) = 34;
      uint64_t v56 = v55;
      uint64_t v161 = swift_allocObject();
      *(unsigned char *)(v161 + 16) = 8;
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = sub_3F9F8;
      *(void *)(v57 + 24) = v200;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_3F974;
      *(void *)(v58 + 24) = v57;
      uint64_t v158 = swift_allocObject();
      *(unsigned char *)(v158 + 16) = 32;
      uint64_t v155 = swift_allocObject();
      *(unsigned char *)(v155 + 16) = 8;
      sub_2D920(&qword_CC870);
      uint64_t inited = swift_initStackObject();
      sub_620C8(inited, 12);
      void *v60 = sub_3F980;
      v60[1] = v48;
      v60[2] = sub_3F980;
      v60[3] = v170;
      v60[4] = sub_3F978;
      v60[5] = v50;
      v60[6] = sub_3F980;
      v60[7] = osloga;
      v60[8] = sub_3F980;
      v60[9] = v190;
      v60[10] = sub_3F978;
      v60[11] = v54;
      v60[12] = sub_3F980;
      v60[13] = v56;
      v60[14] = sub_3F980;
      v60[15] = v161;
      v60[16] = sub_3F978;
      v60[17] = v58;
      v60[18] = sub_3F980;
      v60[19] = v158;
      v60[20] = sub_3F980;
      v60[21] = v155;
      v60[22] = sub_3DB40;
      v60[23] = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(log, v164))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        v205[0] = swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 1026;
        v61[2] = 32;
        swift_release();
        v61[3] = 8;
        swift_release();
        *(void *)(v204 + 824) = sub_422E0(0x6E2D68636E75616CLL, 0xED00006761622D6FLL, v205);
        sub_86D40();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v61[12] = 34;
        swift_release();
        v61[13] = 8;
        swift_release();
        sub_3F8A8(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
        uint64_t v62 = sub_86490();
        if (v63)
        {
          uint64_t v64 = v62;
          unint64_t v65 = v63;
        }
        else
        {
          if (qword_CC4D0 != -1) {
            swift_once();
          }
          uint64_t v64 = qword_D0D58;
          unint64_t v65 = unk_D0D60;
          swift_bridgeObjectRetain();
        }
        uint64_t *v150 = sub_422E0(v64, v65, v205);
        sub_86D40();

        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v61[22] = 34;
        swift_release();
        v61[23] = 8;
        swift_release();
        swift_bridgeObjectRetain();
        uint64_t *v173 = sub_422E0(v193, v181, v205);
        sub_86D40();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        v61[32] = 32;
        swift_release();
        v61[33] = 8;
        swift_release();
        if (qword_CC4C0 != -1) {
          swift_once();
        }
        uint64_t v94 = qword_D0D30;
        unint64_t v95 = *(void *)algn_D0D38;
        swift_bridgeObjectRetain();
        uint64_t *v176 = sub_422E0(v94, v95, v205);
        sub_86D40();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, log, v164, "JSAPackageProvisioner [%s] Done: Rejected unsupported fallback JetPack with version=%{public}s, name=%{public}s, supportedVersion=%s", v61, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      if (qword_CC478 != -1) {
        swift_once();
      }
      v96 = *(void **)(v204 + 1088);
      uint64_t v202 = *(void *)(v204 + 1072);
      uint64_t v97 = *(void *)(v204 + 1064);
      uint64_t v191 = *(void *)(v204 + 1040);
      uint64_t v194 = *(void *)(v204 + 1056);
      uint64_t v98 = *(void *)(v204 + 1032);
      uint64_t v189 = *(void *)(v204 + 1024);
      uint64_t v99 = *(void *)(v204 + 1016);
      uint64_t v100 = *(void *)(v204 + 952);
      uint64_t v182 = *(void *)(v204 + 944);
      uint64_t v183 = *(void *)(v204 + 968);
      uint64_t v101 = *(void *)(v204 + 936);
      uint64_t v102 = *(void *)(v204 + 912);
      uint64_t v103 = *(void *)(v204 + 904);
      uint64_t v104 = *(void *)(v204 + 896);
      uint64_t v105 = sub_31DE4(v104, (uint64_t)qword_CCD88);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v102, v105, v104);
      void *v196 = 0;
      v196[1] = 0;
      sub_86090();
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v104);
      swift_release();

      sub_3F314(v101);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v183, v182);
      uint64_t v106 = v204;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v191, v189);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v202, v194);
      v198 = 0;
      goto LABEL_43;
    case 2:
      if ((Package.isSupported.getter() & 1) == 0)
      {
        uint64_t v66 = swift_allocObject();
        *(unsigned char *)(v66 + 16) = 2;
        unint64_t v67 = v33;
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = sub_3F9F0;
        *(void *)(v68 + 24) = v66;
        uint64_t v69 = v68;
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 16) = v41;
        uint64_t v71 = v70;
        uint64_t v72 = swift_allocObject();
        *(void *)(v72 + 16) = v31;
        *(void *)(v72 + 24) = v67;
        uint64_t v73 = v72;
        swift_bridgeObjectRetain_n();
        v151 = v41;
        swift_retain();
        oslog = sub_86210();
        os_log_type_t v165 = sub_86C40();
        uint64_t v74 = swift_allocObject();
        *(unsigned char *)(v74 + 16) = 32;
        uint64_t v75 = v74;
        uint64_t v201 = swift_allocObject();
        *(unsigned char *)(v201 + 16) = 8;
        uint64_t v76 = swift_allocObject();
        *(void *)(v76 + 16) = sub_3F38C;
        *(void *)(v76 + 24) = v69;
        uint64_t v77 = v76;
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = sub_3F974;
        *(void *)(v78 + 24) = v77;
        uint64_t v79 = v78;
        uint64_t v197 = swift_allocObject();
        *(unsigned char *)(v197 + 16) = 34;
        uint64_t v171 = swift_allocObject();
        *(unsigned char *)(v171 + 16) = 8;
        uint64_t v80 = swift_allocObject();
        *(void *)(v80 + 16) = sub_3F9F4;
        *(void *)(v80 + 24) = v71;
        uint64_t v81 = v80;
        uint64_t v162 = swift_allocObject();
        *(void *)(v162 + 16) = sub_3F974;
        *(void *)(v162 + 24) = v81;
        uint64_t v82 = swift_allocObject();
        *(unsigned char *)(v82 + 16) = 34;
        uint64_t v83 = v82;
        uint64_t v159 = swift_allocObject();
        *(unsigned char *)(v159 + 16) = 8;
        uint64_t v84 = swift_allocObject();
        *(void *)(v84 + 16) = sub_3F9F8;
        *(void *)(v84 + 24) = v73;
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = sub_3F974;
        *(void *)(v85 + 24) = v84;
        uint64_t v156 = swift_allocObject();
        *(unsigned char *)(v156 + 16) = 32;
        uint64_t v86 = swift_allocObject();
        *(unsigned char *)(v86 + 16) = 8;
        sub_2D920(&qword_CC870);
        uint64_t v87 = swift_initStackObject();
        sub_620C8(v87, 12);
        void *v88 = sub_3F980;
        v88[1] = v75;
        v88[2] = sub_3F980;
        v88[3] = v201;
        v88[4] = sub_3F978;
        v88[5] = v79;
        v88[6] = sub_3F980;
        v88[7] = v197;
        v88[8] = sub_3F980;
        v88[9] = v171;
        v88[10] = sub_3F978;
        v88[11] = v162;
        v88[12] = sub_3F980;
        v88[13] = v83;
        v88[14] = sub_3F980;
        v88[15] = v159;
        v88[16] = sub_3F978;
        v88[17] = v85;
        v88[18] = sub_3F980;
        v88[19] = v156;
        v88[20] = sub_3F980;
        v88[21] = v86;
        v88[22] = sub_3DB40;
        v88[23] = 0;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(oslog, v165))
        {
          v89 = (uint8_t *)swift_slowAlloc();
          v205[0] = swift_slowAlloc();
          *(_WORD *)v89 = 1026;
          v89[2] = 32;
          swift_release();
          v89[3] = 8;
          swift_release();
          *(void *)(v204 + 776) = sub_422E0(0x622D68636E75616CLL, 0xEE0064656C646E75, v205);
          sub_86D40();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v89[12] = 34;
          swift_release();
          v89[13] = 8;
          swift_release();
          sub_3F8A8(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
          uint64_t v90 = sub_86490();
          if (v91)
          {
            uint64_t v92 = v90;
            unint64_t v93 = v91;
          }
          else
          {
            if (qword_CC4D0 != -1) {
              swift_once();
            }
            uint64_t v92 = qword_D0D58;
            unint64_t v93 = unk_D0D60;
            swift_bridgeObjectRetain();
          }
          uint64_t *v186 = sub_422E0(v92, v93, v205);
          sub_86D40();

          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          v89[22] = 34;
          swift_release();
          v89[23] = 8;
          swift_release();
          swift_bridgeObjectRetain();
          uint64_t *v175 = sub_422E0(v193, v181, v205);
          sub_86D40();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          v89[32] = 32;
          swift_release();
          v89[33] = 8;
          swift_release();
          if (qword_CC4C0 != -1) {
            swift_once();
          }
          uint64_t v107 = qword_D0D30;
          unint64_t v108 = *(void *)algn_D0D38;
          swift_bridgeObjectRetain();
          uint64_t v40 = v204;
          *(void *)(v204 + 800) = sub_422E0(v107, v108, v205);
          sub_86D40();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, oslog, v165, "JSAPackageProvisioner [%s] Error: Bundled JetPack is outdated and needs update, version=%{public}s, name=%{public}s, supportedVersion=%s", v89, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          unint64_t v33 = v181;
        }
        else
        {
          swift_release();
          swift_release();
          unint64_t v33 = v181;
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          uint64_t v40 = v204;
        }
      }
      goto LABEL_34;
    case 3:
      goto LABEL_34;
    default:
      sub_5F1E4();
LABEL_34:
      char v109 = *(unsigned char *)(v40 + 1120);
      uint64_t v110 = swift_allocObject();
      *(unsigned char *)(v110 + 16) = v109;
      uint64_t v111 = swift_allocObject();
      *(void *)(v111 + 16) = sub_3F380;
      *(void *)(v111 + 24) = v110;
      uint64_t v112 = v111;
      uint64_t v113 = swift_allocObject();
      *(void *)(v113 + 16) = v41;
      uint64_t v203 = swift_allocObject();
      *(void *)(v203 + 16) = v193;
      *(void *)(v203 + 24) = v33;
      uint64_t v114 = v41;
      swift_bridgeObjectRetain();
      v198 = v114;
      swift_retain();
      v192 = sub_86210();
      os_log_type_t v179 = sub_86C50();
      uint64_t v115 = swift_allocObject();
      *(unsigned char *)(v115 + 16) = 32;
      uint64_t v116 = v115;
      uint64_t v117 = swift_allocObject();
      *(unsigned char *)(v117 + 16) = 8;
      uint64_t v118 = v117;
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = sub_3F38C;
      *(void *)(v119 + 24) = v112;
      uint64_t v120 = v119;
      uint64_t v121 = swift_allocObject();
      *(void *)(v121 + 16) = sub_3F454;
      *(void *)(v121 + 24) = v120;
      uint64_t v122 = v121;
      uint64_t v123 = swift_allocObject();
      *(unsigned char *)(v123 + 16) = 34;
      uint64_t v124 = swift_allocObject();
      *(unsigned char *)(v124 + 16) = 8;
      uint64_t v125 = v124;
      uint64_t v126 = swift_allocObject();
      *(void *)(v126 + 16) = sub_3F3E0;
      *(void *)(v126 + 24) = v113;
      uint64_t v127 = swift_allocObject();
      *(void *)(v127 + 16) = sub_3F974;
      *(void *)(v127 + 24) = v126;
      uint64_t v128 = v127;
      uint64_t v178 = swift_allocObject();
      *(unsigned char *)(v178 + 16) = 34;
      uint64_t v177 = swift_allocObject();
      *(unsigned char *)(v177 + 16) = 8;
      uint64_t v129 = swift_allocObject();
      *(void *)(v129 + 16) = sub_3F3FC;
      *(void *)(v129 + 24) = v203;
      uint64_t v130 = swift_allocObject();
      *(void *)(v130 + 16) = sub_3F974;
      *(void *)(v130 + 24) = v129;
      sub_2D920(&qword_CC870);
      uint64_t v131 = swift_initStackObject();
      sub_620C8(v131, 9);
      void *v132 = sub_3F43C;
      v132[1] = v116;
      v132[2] = sub_3F980;
      v132[3] = v118;
      v132[4] = sub_3F45C;
      v132[5] = v122;
      v132[6] = sub_3F980;
      v132[7] = v123;
      v132[8] = sub_3F980;
      v132[9] = v125;
      v132[10] = sub_3F978;
      v132[11] = v128;
      v132[12] = sub_3F980;
      v132[13] = v178;
      v132[14] = sub_3F980;
      v132[15] = v177;
      v132[16] = sub_3F978;
      v132[17] = v130;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v192, v179))
      {
        uint64_t v133 = *(char *)(v204 + 1120);
        uint64_t v134 = (uint8_t *)swift_slowAlloc();
        v205[0] = swift_slowAlloc();
        *(_WORD *)uint64_t v134 = 770;
        v134[2] = 32;
        swift_release();
        v134[3] = 8;
        swift_release();
        *(void *)(v204 + 768) = sub_422E0(*(void *)&aLaunch[8 * v133], *(void *)&aLaunchNlaunchB[8 * v133 + 24], v205);
        sub_86D40();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v134[12] = 34;
        swift_release();
        v134[13] = 8;
        swift_release();
        sub_3F8A8(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
        uint64_t v135 = sub_86490();
        if (v136)
        {
          uint64_t v137 = v135;
          unint64_t v138 = v136;
        }
        else
        {
          if (qword_CC4D0 != -1) {
            swift_once();
          }
          uint64_t v137 = qword_D0D58;
          unint64_t v138 = unk_D0D60;
          swift_bridgeObjectRetain();
        }
        v160 = *(void **)(v204 + 1088);
        uint64_t v144 = *(void *)(v204 + 1064);
        uint64_t v184 = *(void *)(v204 + 1056);
        id v188 = *(id *)(v204 + 1072);
        uint64_t v145 = *(void *)(v204 + 1032);
        os_log_t oslogb = *(os_log_t *)(v204 + 1024);
        uint64_t v172 = *(void *)(v204 + 1040);
        uint64_t v146 = *(void *)(v204 + 952);
        uint64_t v163 = *(void *)(v204 + 944);
        uint64_t v166 = *(void *)(v204 + 968);
        uint64_t v147 = *(void *)(v204 + 936);
        *(void *)(v204 + 752) = sub_422E0(v137, v138, v205);
        uint64_t v106 = v204;
        sub_86D40();

        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v134[22] = 34;
        swift_release();
        v134[23] = 8;
        swift_release();
        swift_bridgeObjectRetain();
        *(void *)(v204 + 760) = sub_422E0(v193, v181, v205);
        sub_86D40();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v192, v179, "JSAPackageProvisioner [%s] Done: Provision succeeded with version=%{public}s, name=%{public}s", v134, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        sub_3F314(v147);
        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v166, v163);
        (*(void (**)(uint64_t, os_log_t))(v145 + 8))(v172, oslogb);
        (*(void (**)(id, uint64_t))(v144 + 8))(v188, v184);
      }
      else
      {
        v139 = *(void **)(v204 + 1088);
        uint64_t v195 = *(void *)(v204 + 1072);
        uint64_t v140 = *(void *)(v204 + 1064);
        uint64_t v141 = *(void *)(v204 + 1056);
        uint64_t v180 = *(void *)(v204 + 1040);
        uint64_t v142 = *(void *)(v204 + 1032);
        uint64_t v174 = *(void *)(v204 + 1024);
        uint64_t v157 = *(void *)(v204 + 968);
        uint64_t v143 = *(void *)(v204 + 952);
        os_log_t loga = *(os_log_t *)(v204 + 944);
        uint64_t v152 = *(void *)(v204 + 936);
        swift_release();

        uint64_t v106 = v204;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();

        sub_3F314(v152);
        (*(void (**)(uint64_t, os_log_t))(v143 + 8))(v157, loga);
        (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v180, v174);
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v195, v141);
      }
      uint64_t v99 = *(void *)(v106 + 1016);
LABEL_43:
      sub_33054(v99, &qword_CC848);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v148 = *(uint64_t (**)(objc_super *))(v106 + 8);
      return v148(v198);
  }
}

uint64_t sub_3A720()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void *)(v0 + 1072);
  uint64_t v2 = *(void *)(v0 + 1064);
  uint64_t v3 = *(void *)(v0 + 1056);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  int v4 = sub_86210();
  os_log_type_t v5 = sub_86C50();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(char *)(v0 + 1120);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v9 = *(void *)&aLaunch[8 * v6];
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 816) = sub_422E0(v9, *(void *)&aLaunchNlaunchB[8 * v6 + 24], &v13);
    sub_86D40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 808) = v10;
    sub_86D40();
    *uint64_t v8 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v4, v5, "JSAPackageProvisioner [%s] Error: Provision failed due to error=%@", (uint8_t *)v7, 0x16u);
    sub_2D920(&qword_CC858);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11(0);
}

uint64_t sub_3AA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_3AA60, 0, 0);
}

uint64_t sub_3AA60()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_3AAFC;
  return static Task<>.sleep(nanoseconds:)(15000000000);
}

uint64_t sub_3AAFC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_3AC2C, 0, 0);
  }
}

uint64_t sub_3AC2C()
{
  sub_2D920(&qword_CC800);
  sub_86B20();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3ACB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_86B10();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_86B00();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_33054(a1, &qword_CCEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_86A90();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_3AE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 208) = a6;
  *(void *)(v6 + 104) = a4;
  *(void *)(v6 + 112) = a5;
  uint64_t v7 = sub_2D920(&qword_CC838);
  *(void *)(v6 + 120) = v7;
  *(void *)(v6 + 128) = *(void *)(v7 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  uint64_t v8 = sub_85EB0();
  *(void *)(v6 + 144) = v8;
  *(void *)(v6 + 152) = *(void *)(v8 - 8);
  *(void *)(v6 + 160) = swift_task_alloc();
  sub_2D920(&qword_CC840);
  *(void *)(v6 + 168) = swift_task_alloc();
  uint64_t v9 = sub_863C0();
  *(void *)(v6 + 176) = v9;
  *(void *)(v6 + 184) = *(void *)(v9 - 8);
  *(void *)(v6 + 192) = swift_task_alloc();
  return _swift_task_switch(sub_3AFEC, 0, 0);
}

uint64_t sub_3AFEC()
{
  uint64_t v1 = v0[23];
  sub_3ECDC(v0[13], (uint64_t)(v0 + 2));
  sub_2D920(&qword_CC808);
  char v2 = swift_dynamicCast();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v2)
  {
    uint64_t v5 = v0[23];
    uint64_t v4 = v0[24];
    uint64_t v7 = v0[21];
    uint64_t v6 = v0[22];
    v3(v7, 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v7, v6);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[25] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_3B1A8;
    uint64_t v9 = v0[20];
    return ValidatedJetPackAssetLocations.BagKeyLocation.url()(v9);
  }
  else
  {
    uint64_t v10 = v0[21];
    v3(v10, 1, 1, v0[22]);
    sub_33054(v10, &qword_CC840);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_3B1A8()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_3B6B4;
  }
  else
  {
    uint64_t v1 = sub_3B2C0;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_3B2C0()
{
  uint64_t v32 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = sub_85E10();
  unint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if (qword_CC478 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = sub_31DE4(v9, (uint64_t)qword_CCD88);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v11(v7, v10, v9);
  sub_86080();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v7, v9);
  uint64_t v13 = *(void *)(v0 + 64);
  if (v13)
  {
    if (*(void *)(v0 + 56) == v4 && v13 == v6)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v29 = v12;
    uint64_t v30 = v4;
    char v14 = sub_87070();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v29 = v12;
    uint64_t v30 = v4;
  }
  uint64_t v15 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 120);
  v11(v15, v10, v16);
  *(void *)(v0 + 72) = v30;
  *(void *)(v0 + 80) = v6;
  swift_bridgeObjectRetain();
  sub_86090();
  v29(v15, v16);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_86210();
  os_log_type_t v18 = sub_86C50();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = *(char *)(v0 + 208);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v21 = *(void *)(v0 + 184);
    uint64_t v27 = *(void *)(v0 + 192);
    uint64_t v28 = *(void *)(v0 + 176);
    *(void *)(v0 + 88) = sub_422E0(*(void *)&aLaunch[8 * v19], *(void *)&aLaunchNlaunchB[8 * v19 + 24], &v31);
    sub_86D40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 96) = sub_422E0(v30, v6, &v31);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v17, v18, "JSAPackageProvisioner [%s] Persisting LastCachedBootURL='%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v27, v28);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 192);
    uint64_t v24 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
  }
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_3B6B4()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_3B754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v51 = a1;
  uint64_t v3 = sub_864F0();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v52 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v45 - v6;
  uint64_t v7 = sub_2D920(&qword_CC838);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_85EB0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v45 - v21;
  if (qword_CC478 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_31DE4(v7, (uint64_t)qword_CCD88);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
  sub_86080();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_85E80();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    if (qword_CC4C8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_31DE4(v14, (uint64_t)qword_D0D40);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    unint64_t v26 = (v15 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v25(v22, v24, v14);
    sub_33054((uint64_t)v13, (uint64_t *)&unk_CD040);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v13, v14);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    unint64_t v26 = (v15 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v49 = v22;
  uint64_t v50 = v2;
  unint64_t v47 = v26;
  uint64_t v48 = (void (*)(char *, char *, uint64_t))v25;
  v25(v20, (uint64_t)v22, v14);
  uint64_t v27 = sub_86210();
  os_log_type_t v28 = sub_86C50();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v56 = sub_422E0(0x6E2D68636E75616CLL, 0xED00006761622D6FLL, &v57);
    sub_86D40();
    *(_WORD *)(v29 + 12) = 2082;
    sub_3F8A8((unint64_t *)&qword_CC8A0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v30 = sub_87040();
    uint64_t v56 = sub_422E0(v30, v31, &v57);
    sub_86D40();
    swift_bridgeObjectRelease();
    uint64_t v32 = v20;
    uint64_t v33 = v14;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v15 + 8);
    v46(v32, v14);
    _os_log_impl(&dword_0, v27, v28, "JSAPackageProvisioner [%s] Obtained fallbackURL='%{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v34 = v20;
    uint64_t v33 = v14;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v15 + 8);
    v46(v34, v14);
  }
  uint64_t v36 = v53;
  uint64_t v35 = v54;
  uint64_t v37 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, enum case for JetPackAssetRequestSourcePolicy.localOnly(_:), v55);
  char v38 = *(unsigned char *)(v50 + OBJC_IVAR___JSAPackageProvisioner_isLaunching);
  if (v38) {
    uint64_t v39 = 0x402E000000000000;
  }
  else {
    uint64_t v39 = 0;
  }
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  *(unsigned char *)(v40 + 24) = v38 ^ 1;
  uint64_t v41 = sub_86390();
  uint64_t v42 = v51;
  v51[3] = v41;
  v42[4] = sub_3F8A8(&qword_CC898, (void (*)(uint64_t))&type metadata accessor for ValidatedJetPackAssetLocations.URLLocation);
  sub_3F758(v42);
  uint64_t v43 = v49;
  v48(v45, v49, v33);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v52, v36, v37);
  sub_863A0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  return ((uint64_t (*)(char *, uint64_t))v46)(v43, v33);
}

uint64_t sub_3BE80(char a1)
{
  *(void *)(v2 + 192) = v1;
  *(unsigned char *)(v2 + 482) = a1;
  *(void *)(v2 + 200) = swift_getObjectType();
  type metadata accessor for BooksJetPackResourceBundle();
  *(void *)(v2 + 208) = swift_task_alloc();
  *(void *)(v2 + 216) = swift_task_alloc();
  uint64_t v3 = sub_86330();
  *(void *)(v2 + 224) = v3;
  *(void *)(v2 + 232) = *(void *)(v3 - 8);
  *(void *)(v2 + 240) = swift_task_alloc();
  uint64_t v4 = sub_86370();
  *(void *)(v2 + 248) = v4;
  *(void *)(v2 + 256) = *(void *)(v4 - 8);
  *(void *)(v2 + 264) = swift_task_alloc();
  *(void *)(v2 + 272) = swift_task_alloc();
  *(void *)(v2 + 280) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  uint64_t v5 = sub_864B0();
  *(void *)(v2 + 296) = v5;
  *(void *)(v2 + 304) = *(void *)(v5 - 8);
  *(void *)(v2 + 312) = swift_task_alloc();
  uint64_t v6 = sub_2D920(&qword_CC7D8);
  *(void *)(v2 + 320) = v6;
  *(void *)(v2 + 328) = *(void *)(v6 - 8);
  *(void *)(v2 + 336) = swift_task_alloc();
  sub_2D920((uint64_t *)&unk_CD040);
  *(void *)(v2 + 344) = swift_task_alloc();
  uint64_t v7 = sub_85EB0();
  *(void *)(v2 + 352) = v7;
  *(void *)(v2 + 360) = *(void *)(v7 - 8);
  *(void *)(v2 + 368) = swift_task_alloc();
  *(void *)(v2 + 376) = swift_task_alloc();
  *(void *)(v2 + 384) = swift_task_alloc();
  *(void *)(v2 + 392) = swift_task_alloc();
  *(void *)(v2 + 400) = swift_task_alloc();
  return _swift_task_switch(sub_3C18C, v1, 0);
}

uint64_t sub_3C18C()
{
  uint64_t v57 = v0;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v3 = sub_86830();
  NSString v4 = sub_86830();
  id v5 = [v2 URLForResource:v3 withExtension:v4];

  if (!v5)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 360) + 56))(*(void *)(v0 + 344), 1, 1, *(void *)(v0 + 352));
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 344);
  sub_85E60();

  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v10(v9, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
LABEL_10:
    sub_33054(*(void *)(v0 + 344), (uint64_t *)&unk_CD040);
    return sub_86F70();
  }
  v10(*(void *)(v0 + 400), *(void *)(v0 + 344), *(void *)(v0 + 352));
  if (qword_CC490 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 328);
  uint64_t v11 = *(void *)(v0 + 336);
  uint64_t v13 = *(void *)(v0 + 320);
  uint64_t v14 = sub_31DE4(v13, (uint64_t)qword_CCDD0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  *(void *)(v0 + 408) = v15;
  *(void *)(v0 + 416) = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v15(v11, v14, v13);
  sub_86080();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  *(void *)(v0 + 424) = v16;
  *(void *)(v0 + 432) = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v11, v13);
  if (*(unsigned char *)(v0 + 481) == 1)
  {
    if (qword_CC430 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 376);
    uint64_t v18 = *(void *)(v0 + 384);
    uint64_t v19 = *(void *)(v0 + 352);
    uint64_t v20 = *(void *)(v0 + 360);
    uint64_t v21 = sub_31DE4(v19, (uint64_t)qword_CC728);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    v22(v17, v21, v19);
    v22(v18, v17, v19);
    v59._countAndFlagsBits = 0x656A2E7865646E69;
    v59._object = (void *)0xED00006B63617074;
    sub_85E50(v59);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }
  else
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 360) + 16);
    v22(*(void *)(v0 + 384), *(void *)(v0 + 400), *(void *)(v0 + 352));
  }
  uint64_t v24 = *(void *)(v0 + 384);
  uint64_t v25 = *(void *)(v0 + 368);
  uint64_t v26 = *(void *)(v0 + 352);
  *(void *)(v0 + 440) = OBJC_IVAR___JSAPackageProvisioner_logger;
  v22(v25, v24, v26);
  uint64_t v27 = sub_86210();
  os_log_type_t v28 = sub_86C50();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = *(char *)(v0 + 482);
    uint64_t v30 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v31 = *(void *)&aLaunch[8 * v29];
    unint64_t v32 = *(void *)&aLaunchNlaunchB[8 * v29 + 24];
    uint64_t v34 = *(void *)(v0 + 360);
    uint64_t v33 = *(void *)(v0 + 368);
    uint64_t v55 = *(void *)(v0 + 352);
    *(void *)(v0 + 184) = sub_422E0(v31, v32, &v56);
    sub_86D40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    uint64_t v35 = sub_85E70();
    *(void *)(v0 + 160) = sub_422E0(v35, v36, &v56);
    sub_86D40();
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v37(v33, v55);
    _os_log_impl(&dword_0, v27, v28, "JSAPackageProvisioner [%s] Step 4: Loading bundled JetPack at %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v39 = *(void *)(v0 + 360);
    uint64_t v38 = *(void *)(v0 + 368);
    uint64_t v40 = *(void *)(v0 + 352);

    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v37(v38, v40);
  }
  *(void *)(v0 + 448) = v37;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v41 = *(void *)(v0 + 312);
  uint64_t v43 = *(void *)(v0 + 296);
  uint64_t v45 = *(void *)(v0 + 232);
  uint64_t v44 = *(void *)(v0 + 240);
  uint64_t v46 = *(void *)(v0 + 224);
  uint64_t v47 = *(void *)(v0 + 192);
  sub_85E70();
  sub_864A0();
  sub_33E8C();
  *(void *)(v0 + 40) = v43;
  *(void *)(v0 + 48) = &protocol witness table for JetPackFileStreamSource;
  uint64_t v48 = sub_3F758((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v42 + 16))(v48, v41, v43);
  uint64_t v49 = *(void **)(v47 + OBJC_IVAR___JSAPackageProvisioner_unpackQueue);
  *(void *)(v0 + 80) = sub_3F6C8();
  *(void *)(v0 + 88) = &protocol witness table for OS_dispatch_queue;
  *(void *)(v0 + 56) = v49;
  id v50 = v49;
  *(void *)(v0 + 456) = sub_86320();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
  sub_3ED88(v0 + 56);
  sub_3ED88(v0 + 16);
  uint64_t v51 = sub_2D920(&qword_CC888);
  uint64_t v52 = sub_3F708(&qword_CC890, &qword_CC888);
  uint64_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v53;
  *uint64_t v53 = v0;
  v53[1] = sub_3C870;
  uint64_t v54 = *(void *)(v0 + 288);
  return dispatch thunk of Future.then()(v54, v51, v52);
}

uint64_t sub_3C870()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  if (v0) {
    NSString v4 = sub_3D004;
  }
  else {
    NSString v4 = sub_3C99C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_3C99C()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 256);
  swift_release();
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v5(v1, v2, v3);
  uint64_t v6 = sub_86210();
  os_log_type_t v7 = sub_86C50();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = *(void *)(v0 + 272);
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v52 = v48;
    v5(v9, v8, v11);
    uint64_t v13 = sub_868A0();
    *(void *)(v0 + 176) = sub_422E0(v13, v14, &v52);
    sub_86D40();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v51(v8, v11);
    _os_log_impl(&dword_0, v6, v7, "JSAPackageProvisioner bundle provision succeeded with bundle %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 248);
    uint64_t v17 = *(void *)(v0 + 256);

    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v51(v15, v16);
  }
  if (qword_CC4E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_CD5A1) {
    goto LABEL_13;
  }
  if (qword_CC4D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_CD5A0) {
    goto LABEL_13;
  }
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  if (*(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant) == 1)
  {
LABEL_13:
    if (qword_CC460 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    uint64_t v20 = *(void *)(v0 + 336);
    uint64_t v21 = *(void *)(v0 + 320);
    uint64_t v22 = sub_31DE4(v21, (uint64_t)qword_CCD40);
    v19(v20, v22, v21);
    sub_86080();
    v18(v20, v21);
    char v23 = *(unsigned char *)(v0 + 480);
  }
  else
  {
    char v23 = 1;
  }
  sub_86490();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  char v49 = v23;
  if (v25)
  {
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    v26._countAndFlagsBits = sub_86490();
    if (!v26._object)
    {
      __break(1u);
      return v26._countAndFlagsBits;
    }
    sub_86930(v26);
    swift_bridgeObjectRelease();
    v56._countAndFlagsBits = 0x64656C646E75622DLL;
    v56._object = (void *)0xE800000000000000;
    sub_86930(v56);
    uint64_t v41 = v52;
    unint64_t v42 = v53;
  }
  else
  {
    uint64_t v41 = 0x64656C646E7562;
    unint64_t v42 = 0xE700000000000000;
  }
  uint64_t v27 = *(char *)(v0 + 482);
  v5(*(void *)(v0 + 264), *(void *)(v0 + 288), *(void *)(v0 + 248));
  uint64_t v28 = *(void *)&aLaunch[8 * v27];
  unint64_t v29 = *(void *)&aLaunchNlaunchB[8 * v27 + 24];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  uint64_t v31 = *(void *)(v0 + 400);
  uint64_t v47 = *(void *)(v0 + 384);
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v33 = *(void *)(v0 + 304);
  uint64_t v46 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 288);
  uint64_t v45 = *(void *)(v0 + 296);
  uint64_t v43 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 208);
  uint64_t v34 = *(uint64_t **)(v0 + 216);
  BooksJetPackResourceBundle.init(memoryJetPack:provisionMode:)(*(char **)(v0 + 264), v28, v29, v34);
  sub_3F2B0((uint64_t)v34, v35);
  unint64_t v36 = (objc_class *)type metadata accessor for Package();
  uint64_t v37 = objc_allocWithZone(v36);
  sub_3F2B0(v35, (uint64_t)&v37[OBJC_IVAR___JSAPackage_jetPack]);
  uint64_t v38 = (uint64_t *)&v37[OBJC_IVAR___JSAPackage_nameForJSContext];
  *uint64_t v38 = v41;
  v38[1] = v42;
  v37[OBJC_IVAR___JSAPackage_isBundled] = v49;
  *(void *)(v0 + 144) = v37;
  *(void *)(v0 + 152) = v36;
  [v0 init];
  sub_3F314(v35);
  sub_3F314((uint64_t)v34);
  v51(v44, v43);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v46, v45);
  v30(v47, v32);
  v30(v31, v32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(id))(v0 + 8);
  v26._countAndFlagsBits = v39(v50);
  return v26._countAndFlagsBits;
}

uint64_t sub_3D004()
{
  swift_release();
  swift_errorRetain();
  uint64_t v1 = sub_86210();
  os_log_type_t v2 = sub_86C50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 168) = v5;
    sub_86D40();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "JSAPackageProvisioner bundle provision failed due to error=%@", v3, 0xCu);
    sub_2D920(&qword_CC858);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  return sub_86F70();
}

uint64_t sub_3D1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  uint64_t v5 = sub_86330();
  v3[15] = v5;
  uint8_t v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_3D2A8, a3, 0);
}

uint64_t sub_3D2A8()
{
  sub_33E8C();
  return _swift_task_switch(sub_3D314, 0, 0);
}

uint64_t sub_3D314()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  sub_86540();
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR___JSAPackageProvisioner_unpackQueue);
  v0[10] = sub_3F6C8();
  v0[11] = &protocol witness table for OS_dispatch_queue;
  v0[7] = v5;
  id v6 = v5;
  v0[18] = sub_86320();
  sub_3ED88((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_3ED88((uint64_t)(v0 + 7));
  uint64_t v7 = sub_2D920(&qword_CC888);
  uint64_t v8 = sub_3F708(&qword_CC890, &qword_CC888);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  void *v9 = v0;
  v9[1] = sub_3D470;
  uint64_t v10 = v0[12];
  return dispatch thunk of Future.then()(v10, v7, v8);
}

uint64_t sub_3D470()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_3D5F0;
  }
  else {
    uint64_t v2 = sub_3D584;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_3D584()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3D5F0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3D65C()
{
  type metadata accessor for BooksJetPackResourceBundle();
  sub_3F8A8(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
  uint64_t v0 = sub_86490();
  if (v1) {
    return v0;
  }
  if (qword_CC4D0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_D0D58;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_3D730(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_85EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  v5._countAndFlagsBits = 0x656A2E7865646E69;
  v5._object = (void *)0xED00006B63617074;
  sub_85E50(v5);
}

id sub_3D7B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = sub_2D920(&qword_CC8A8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = self;
  uint64_t v11 = self;
  id v12 = [v11 currentProcess];
  id v13 = [v10 ams_configurationWithProcessInfo:v12 bag:a1];

  if ((a4 & 1) == 0) {
    [v13 setTimeoutIntervalForRequest:*(double *)&a3];
  }
  swift_unknownObjectRetain();
  sub_866C0();
  uint64_t v14 = sub_866D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  id v15 = [v11 currentProcess];
  sub_864E0();

  sub_33054((uint64_t)v9, &qword_CC8A8);
  return v13;
}

void PackageProvisioner.__allocating_init()()
{
}

void PackageProvisioner.init()()
{
}

uint64_t PackageProvisioner.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR___JSAPackageProvisioner_logger;
  uint64_t v2 = sub_86230();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t PackageProvisioner.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR___JSAPackageProvisioner_logger;
  uint64_t v2 = sub_86230();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t PackageProvisioner.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_3DB44(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  if (qword_CC4C0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_D0D30;
  unint64_t v6 = *(void *)algn_D0D38;
  swift_bridgeObjectRetain();
  sub_422E0(v5, v6, a3);
  uint64_t v7 = *a1 + 8;
  sub_86D40();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v7;
  return result;
}

uint64_t sub_3DBF8(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  void *v3 = v2;
  v3[1] = sub_3DCD8;
  return v5(v2 + 16);
}

uint64_t sub_3DCD8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  void *v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_3DE08(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a1;
  uint64_t v3 = sub_86370();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_85FC0();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  __chkstk_darwin(v7);
  uint64_t v55 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2D920(&qword_CC880);
  __chkstk_darwin(v9 - 8);
  Swift::String v59 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_85F20();
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2D920(&qword_CC848);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_85EB0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3F24C(a2, (uint64_t)v15, &qword_CC848);
  uint64_t v23 = sub_86390();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v15, 1, v23) == 1)
  {
    sub_33054((uint64_t)v15, &qword_CC848);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
LABEL_4:
    uint64_t v25 = (uint64_t *)&unk_CD040;
    uint64_t v26 = (uint64_t)v18;
LABEL_5:
    sub_33054(v26, v25);
    goto LABEL_6;
  }
  sub_86380();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  if (sub_85DE0())
  {
    id v31 = [self defaultManager];
    sub_85E10();
    NSString v32 = sub_86830();
    swift_bridgeObjectRelease();
    id v63 = 0;
    id v33 = [v31 attributesOfItemAtPath:v32 error:&v63];

    id v34 = v63;
    if (v33)
    {
      type metadata accessor for FileAttributeKey(0);
      sub_3F8A8(&qword_CC6F0, type metadata accessor for FileAttributeKey);
      uint64_t v35 = sub_86800();
      id v36 = v34;

      if (*(void *)(v35 + 16))
      {
        uint64_t v37 = NSFileModificationDate;
        unint64_t v38 = sub_59E84((uint64_t)v37);
        if (v39)
        {
          sub_3F66C(*(void *)(v35 + 56) + 32 * v38, (uint64_t)&v64);
        }
        else
        {
          long long v64 = 0u;
          long long v65 = 0u;
        }
      }
      else
      {
        long long v64 = 0u;
        long long v65 = 0u;
      }
      swift_bridgeObjectRelease();
      unint64_t v42 = v59;
      if (*((void *)&v65 + 1))
      {
        uint64_t v43 = v61;
        int v44 = swift_dynamicCast();
        uint64_t v45 = v60;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v42, v44 ^ 1u, 1, v43);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v43) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v58, v42, v43);
          id v46 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
          uint64_t v47 = v55;
          sub_85FB0();
          uint64_t v48 = v45;
          Class isa = sub_85FA0().super.isa;
          (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v57);
          [v46 setTimeZone:isa];

          [v46 setFormatOptions:544];
          *(void *)&long long v64 = 0x5B746F6F72;
          *((void *)&v64 + 1) = 0xE500000000000000;
          Class v50 = sub_85F10().super.isa;
          id v51 = [v46 stringFromDate:v50];

          uint64_t v52 = sub_86860();
          uint64_t v54 = v53;

          v66._countAndFlagsBits = v52;
          v66._object = v54;
          sub_86930(v66);
          swift_bridgeObjectRelease();
          v67._countAndFlagsBits = 93;
          v67._object = (void *)0xE100000000000000;
          sub_86930(v67);

          uint64_t v27 = v64;
          (*(void (**)(char *, uint64_t))(v48 + 8))(v58, v43);
          (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
          return v27;
        }
        goto LABEL_24;
      }
      sub_33054((uint64_t)&v64, &qword_CCEF0);
      uint64_t v41 = v60;
    }
    else
    {
      id v40 = v63;
      sub_85DD0();

      swift_willThrow();
      swift_errorRelease();
      unint64_t v42 = v59;
      uint64_t v41 = v60;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, 1, 1, v61);
LABEL_24:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v25 = &qword_CC880;
    uint64_t v26 = (uint64_t)v42;
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
LABEL_6:
  sub_2D920(&qword_CC850);
  sub_863F0();
  uint64_t v27 = sub_86490();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v29) {
    return 0x72616C75676572;
  }
  return v27;
}

id sub_3E6A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_bridgeObjectRelease();
  swift_defaultActor_initialize();
  uint64_t v11 = OBJC_IVAR___JSAPackageProvisioner_logger;
  uint64_t v12 = qword_CC528;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_86230();
  uint64_t v14 = sub_31DE4(v13, (uint64_t)qword_CD6C0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(&v6[v11], v14, v13);
  v6[OBJC_IVAR___JSAPackageProvisioner_state] = 0;
  uint64_t v15 = OBJC_IVAR___JSAPackageProvisioner_packagePromise;
  sub_2D920(&qword_CC750);
  *(void *)&v6[v15] = sub_86700();
  *(void *)&v6[OBJC_IVAR___JSAPackageProvisioner_processVariant] = a2;
  v6[OBJC_IVAR___JSAPackageProvisioner_isLaunching] = a1 & 1;
  *(void *)&v6[OBJC_IVAR___JSAPackageProvisioner_unpackQueue] = a5;
  id v16 = a5;
  swift_release();
  v18.receiver = v6;
  v18.super_class = ObjectType;
  return [super init];
}

uint64_t sub_3E818()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_3E860(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_3F97C;
  return sub_3478C(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_3E92C()
{
  unint64_t result = qword_CC790;
  if (!qword_CC790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC790);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for HotReloadState(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HotReloadState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PackageProvisionerState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3EAECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_3EB14(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_3EB20(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PackageProvisionerState()
{
  return &type metadata for PackageProvisionerState;
}

uint64_t sub_3EB38()
{
  return type metadata accessor for PackageProvisioner();
}

uint64_t type metadata accessor for PackageProvisioner()
{
  uint64_t result = qword_CC7C8;
  if (!qword_CC7C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3EB8C()
{
  uint64_t result = sub_86230();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PackageProvisioner(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PackageProvisioner);
}

uint64_t dispatch thunk of PackageProvisioner.__allocating_init(launching:processVariant:overridePackageURLCachePath:on:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_3EC90()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3ECC8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_3ECDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_3ED40()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_3ED88(v0 + 40);

  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_3ED88(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_3EDD8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_3EDF0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + 40;
  char v8 = *(unsigned char *)(v1 + 80);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_32DB8;
  return sub_378EC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_3EEBC()
{
  uint64_t v1 = sub_86230();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_unknownObjectRelease();
  sub_3ED88(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_3EF94(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_86230() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + 32;
  uint64_t v9 = v1 + v5;
  char v10 = *(unsigned char *)(v1 + v5 + *(void *)(v4 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_3F97C;
  return sub_3AE3C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_3F0B8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_3F0F8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_32DB8;
  v3[2] = v2;
  return _swift_task_switch(sub_3AA60, 0, 0);
}

uint64_t sub_3F1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_3F97C;
  return sub_3D1E0(a1, a2, v2);
}

uint64_t sub_3F24C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_2D920(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_3F2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BooksJetPackResourceBundle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3F314(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BooksJetPackResourceBundle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3F370()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_3F380(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_3F38C()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return *(void *)&aLaunch[8 * (char)v2];
}

uint64_t sub_3F3E0()
{
  return sub_3D65C();
}

uint64_t sub_3F3FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_3F42C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_3F43C(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_428D0(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_3F444()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F454()
{
  return sub_420D8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_3F45C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_42100(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_3F464()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F474()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F484()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F494()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F4A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F4B4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3F4EC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3F524()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F534()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F544()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3F57C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F58C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F59C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F5AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F5BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F5CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F5DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F5EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F5FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F60C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F61C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F62C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F63C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F64C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F65C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_3F66C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_3F6C8()
{
  unint64_t result = qword_CCE80;
  if (!qword_CCE80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_CCE80);
  }
  return result;
}

uint64_t sub_3F708(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2D964(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_3F758(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_3F7BC()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_3F7CC(uint64_t a1, uint64_t a2)
{
  return sub_3D7B4(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_3F7D8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_3F97C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_CC8B0 + dword_CC8B0);
  return v6(a1, v4);
}

void sub_3F890(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_3F898()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_3F8A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3F8F0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_3F900()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t *sub_3F910(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t BooksJetPackResourceBundle.init(memoryJetPack:provisionMode:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v46 = a3;
  uint64_t v40 = a2;
  Class v50 = a1;
  uint64_t v43 = a4;
  uint64_t v4 = sub_86370();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_86230();
  uint64_t v44 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_85E00();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_85EB0();
  uint64_t v12 = *(void *)(v41 - 8);
  uint64_t v13 = __chkstk_darwin(v41);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v42(v20, (uint64_t)v50, v4);
  uint64_t v47 = v5;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v20, 0, 1, v4);
  sub_2D920(&qword_CC8D0);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + ((*(unsigned int *)(*(void *)v21 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_42178((uint64_t)v20, v21 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v21 + 16));
  sub_421E0((uint64_t)v20);
  uint64_t v22 = v43;
  *uint64_t v43 = v21;
  sub_85E30();
  v52[0] = 0x556B63615074654ALL;
  v52[1] = 0xEF64656B6361706ELL;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for URL.DirectoryHint.inferFromPath(_:), v8);
  sub_42240();
  sub_85EA0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  uint64_t v23 = v41;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v41);
  uint64_t v24 = type metadata accessor for BooksJetPackResourceBundle();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v22 + *(int *)(v24 + 20), v17, v23);
  if (qword_CC500 != -1) {
    swift_once();
  }
  uint64_t v25 = v49;
  uint64_t v26 = sub_31DE4(v49, (uint64_t)qword_CD648);
  uint64_t v27 = v44;
  uint64_t v28 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v48, v26, v25);
  uint64_t v29 = v45;
  v42(v45, (uint64_t)v50, v4);
  unint64_t v30 = v46;
  swift_bridgeObjectRetain();
  id v31 = sub_86210();
  os_log_type_t v32 = sub_86C50();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_422E0(v40, v30, v52);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 12) = 2082;
    uint64_t v34 = sub_86490();
    if (v35)
    {
      unint64_t v36 = v35;
    }
    else
    {
      uint64_t v34 = 0x302E302E30;
      unint64_t v36 = 0xE500000000000000;
    }
    uint64_t v51 = sub_422E0(v34, v36, v52);
    sub_86D40();
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v47 + 8);
    v37(v29, v4);
    _os_log_impl(&dword_0, v31, v32, "Created in-memory JetPack for provisionMode=%s: %{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v37(v50, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v48, v49);
  }
  else
  {

    char v39 = *(void (**)(char *, uint64_t))(v47 + 8);
    v39(v29, v4);
    swift_bridgeObjectRelease_n();
    v39(v50, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v25);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> BooksJetPackResourceBundle.evict()()
{
  uint64_t v2 = sub_86520();
  uint64_t v107 = *(void *)(v2 - 8);
  uint64_t v108 = v2;
  __chkstk_darwin(v2);
  uint64_t v106 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (uint8_t *)sub_86230();
  uint64_t v111 = *((void *)v114 - 1);
  uint64_t v4 = __chkstk_darwin(v114);
  uint64_t v103 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v110 = (char *)&v93 - v6;
  uint64_t v112 = type metadata accessor for BooksJetPackResourceBundle();
  uint64_t v7 = __chkstk_darwin(v112);
  uint64_t v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v93 - v10;
  uint64_t v12 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_86370();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v100 = ((char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_t v113 = (os_log_t)((char *)&v93 - v20);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v93 - v21;
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_421E0((uint64_t)v14);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v14, v15);
  if (qword_CC500 != -1) {
    swift_once();
  }
  uint64_t v104 = v1;
  uint64_t v23 = sub_31DE4((uint64_t)v114, (uint64_t)qword_CD648);
  char v109 = (uint64_t **)v0;
  sub_3F2B0(v0, (uint64_t)v11);
  uint64_t v99 = v23;
  uint64_t v24 = sub_86210();
  os_log_type_t v25 = sub_86C50();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v105 = v22;
  uint64_t v101 = v16;
  uint64_t v102 = v15;
  uint64_t v98 = v9;
  if (v26)
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    id v116 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446210;
    uint64_t v97 = v27 + 4;
    uint64_t v28 = v112;
    sub_85EB0();
    sub_428E0();
    uint64_t v29 = sub_87040();
    uint64_t v115 = sub_422E0(v29, v30, (uint64_t *)&v116);
    uint64_t v16 = v101;
    sub_86D40();
    uint64_t v31 = v28;
    swift_bridgeObjectRelease();
    sub_3F314((uint64_t)v11);
    _os_log_impl(&dword_0, v24, v25, "Purging previous on-disk JetPack files at %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v15 = v102;
    swift_slowDealloc();
  }
  else
  {
    sub_3F314((uint64_t)v11);

    uint64_t v31 = v112;
  }
  os_log_type_t v32 = self;
  id v33 = [v32 defaultManager];
  sub_85E40((NSURL *)*(int *)(v31 + 20));
  unint64_t v35 = v34;
  id v116 = 0;
  unsigned int v36 = [v33 removeItemAtURL:v34 error:&v116];

  os_log_t v37 = v113;
  if (v36)
  {
    id v38 = v116;
  }
  else
  {
    id v39 = v116;
    sub_85DD0();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v104 = 0;
  }
  id v40 = [v32 defaultManager];
  sub_85E40(v41);
  uint64_t v43 = v42;
  id v116 = 0;
  unsigned int v44 = [v40 createDirectoryAtURL:v42 withIntermediateDirectories:1 attributes:0 error:&v116];

  id v45 = v116;
  uint64_t v46 = (uint64_t)v105;
  if (!v44)
  {
    id v61 = v116;
    sub_85DD0();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v46, v15);
    return;
  }
  uint64_t v47 = v110;
  uint64_t v48 = v111;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
  uint64_t v97 = (uint8_t *)(v111 + 16);
  v96 = v49;
  v49(v110, v99, (uint64_t)v114);
  Class v50 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v95 = v16 + 16;
  uint64_t v94 = v50;
  v50((char *)v37, v46, v15);
  id v51 = v45;
  uint64_t v52 = sub_86210();
  os_log_type_t v53 = sub_86C50();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    id v116 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 136446210;
    uint64_t v55 = sub_86490();
    if (v56)
    {
      unint64_t v57 = v56;
    }
    else
    {
      uint64_t v55 = 0x302E302E30;
      unint64_t v57 = 0xE500000000000000;
    }
    uint64_t v115 = sub_422E0(v55, v57, (uint64_t *)&v116);
    sub_86D40();
    swift_bridgeObjectRelease();
    uint64_t v58 = *(void (**)(os_log_t, uint64_t))(v16 + 8);
    v58(v113, v15);
    _os_log_impl(&dword_0, v52, v53, "Persisting JetPack: %{public}s", v54, 0xCu);
    swift_arrayDestroy();
    uint64_t v46 = (uint64_t)v105;
    swift_slowDealloc();
    swift_slowDealloc();

    Swift::String v59 = v110;
    uint64_t v60 = *(void (**)(char *, uint8_t *))(v111 + 8);
  }
  else
  {
    uint64_t v58 = *(void (**)(os_log_t, uint64_t))(v16 + 8);
    v58(v37, v15);

    uint64_t v60 = *(void (**)(char *, uint8_t *))(v48 + 8);
    Swift::String v59 = v47;
  }
  uint64_t v62 = (uint64_t)v114;
  v60(v59, v114);
  uint64_t v63 = v104;
  uint64_t v64 = (uint64_t)v109;
  long long v65 = v106;
  sub_86500();
  uint64_t v66 = sub_86340();
  uint64_t v67 = v63;
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v107 + 8))(v65, v108);
    uint64_t v68 = v46;
LABEL_21:
    v58((os_log_t)v68, v102);
    return;
  }
  uint64_t v69 = v66;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v65, v108);
  sub_40E04(v69, v46, v64);
  swift_bridgeObjectRelease();
  uint64_t v70 = v103;
  v96(v103, v99, v62);
  uint64_t v71 = v100;
  uint64_t v72 = v46;
  uint64_t v73 = v70;
  uint64_t v74 = v102;
  v94((char *)v100, v72, v102);
  uint64_t v75 = sub_86210();
  os_log_type_t v76 = sub_86C50();
  if (os_log_type_enabled(v75, v76))
  {
    os_log_t v113 = v75;
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v110 = (char *)swift_slowAlloc();
    id v116 = v110;
    uint64_t v104 = 0;
    *(_DWORD *)uint64_t v77 = 136446210;
    uint64_t v78 = sub_86490();
    if (v79)
    {
      unint64_t v80 = v79;
    }
    else
    {
      uint64_t v78 = 0x302E302E30;
      unint64_t v80 = 0xE500000000000000;
    }
    uint64_t v115 = sub_422E0(v78, v80, (uint64_t *)&v116);
    uint64_t v67 = v104;
    sub_86D40();
    swift_bridgeObjectRelease();
    v58(v71, v74);
    os_log_t v81 = v113;
    _os_log_impl(&dword_0, v113, v76, "Done persisting JetPack: %{public}s", v77, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v82 = v103;
  }
  else
  {
    v58(v71, v74);

    uint64_t v82 = v73;
  }
  v60(v82, v114);
  uint64_t v83 = (uint64_t)v109;
  uint64_t v84 = **v109;
  uint64_t v85 = (uint64_t)*v109 + *(void *)(class metadata base offset for ManagedBuffer + v84 + 16);
  uint64_t v86 = (os_unfair_lock_s *)((char *)*v109 + ((*(unsigned int *)(v84 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v86);
  sub_41484(v85);
  if (!v67)
  {
    os_unfair_lock_unlock(v86);
    uint64_t v87 = (uint64_t)v98;
    sub_3F2B0(v83, (uint64_t)v98);
    v88 = sub_86210();
    os_log_type_t v89 = sub_86C50();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      id v116 = (id)swift_slowAlloc();
      uint64_t v104 = 0;
      *(_DWORD *)uint64_t v90 = 136446210;
      uint64_t v114 = v90 + 4;
      sub_85EB0();
      sub_428E0();
      uint64_t v91 = sub_87040();
      uint64_t v115 = sub_422E0(v91, v92, (uint64_t *)&v116);
      sub_86D40();
      swift_bridgeObjectRelease();
      sub_3F314(v87);
      _os_log_impl(&dword_0, v88, v89, "Using on-disk JetPack at %{public}s", v90, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_3F314(v87);
    }
    uint64_t v68 = (uint64_t)v105;
    goto LABEL_21;
  }
  os_unfair_lock_unlock(v86);
  __break(1u);
}

uint64_t sub_40E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a3;
  uint64_t v62 = a2;
  uint64_t v55 = sub_85E00();
  uint64_t v5 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  os_log_type_t v53 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_85EB0();
  uint64_t v7 = *(void *)(v54 - 8);
  uint64_t v8 = __chkstk_darwin(v54);
  unsigned int v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v43 - v10;
  uint64_t v11 = sub_86520();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return result;
  }
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v17 = v12 + 16;
  Swift::String v59 = v18;
  uint64_t v19 = a1;
  uint64_t v20 = a1 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
  unsigned int v49 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v47 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v48 = (void (**)(char *, void, uint64_t))(v5 + 104);
  Class v50 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v60 = (void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v58 = *(void *)(v17 + 56);
  uint64_t v43 = v19;
  swift_bridgeObjectRetain();
  id v51 = v15;
  uint64_t v52 = v11;
  uint64_t v45 = v17;
  while (1)
  {
    v59(v15, v20, v11);
    uint64_t v21 = (void *)sub_86340();
    if (v3) {
      break;
    }
    uint64_t v22 = v21;
    id v63 = v21;
    sub_2D920(&qword_CC9C8);
    sub_43A48();
    if (sub_86BF0())
    {
      uint64_t v61 = v16;
      id v57 = [self defaultManager];
      type metadata accessor for BooksJetPackResourceBundle();
      uint64_t v23 = v56;
      id v63 = (id)sub_86510();
      uint64_t v64 = v24;
      os_log_type_t v25 = v53;
      uint64_t v26 = v55;
      (*v48)(v53, v49, v55);
      sub_42240();
      uint64_t v27 = v46;
      sub_85E90();
      (*v47)(v25, v26);
      swift_bridgeObjectRelease();
      sub_85E40(v28);
      unint64_t v30 = v29;
      (*v50)(v27, v54);
      id v63 = 0;
      id v31 = v57;
      unsigned int v32 = [v57 createDirectoryAtURL:v30 withIntermediateDirectories:0 attributes:0 error:&v63];

      id v33 = v63;
      if (!v32)
      {
        unint64_t v42 = v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_85DD0();

        swift_willThrow();
        return ((uint64_t (*)(char *, uint64_t))*v60)(v51, v52);
      }
      sub_40E04(v22, v62, v23);
      uint64_t v15 = v51;
      uint64_t v11 = v52;
      (*v60)(v51, v52);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_86360();
    unint64_t v36 = v35;
    if (v35 >> 60 != 15)
    {
      uint64_t v37 = v34;
      uint64_t v61 = v16;
      id v57 = (id)(v56 + *(int *)(type metadata accessor for BooksJetPackResourceBundle() + 20));
      id v63 = (id)sub_86510();
      uint64_t v64 = v38;
      id v39 = v53;
      uint64_t v40 = v55;
      (*v48)(v53, v49, v55);
      sub_42240();
      uint64_t v41 = v44;
      sub_85E90();
      (*v47)(v39, v40);
      swift_bridgeObjectRelease();
      sub_85EF0();
      sub_43AA4(v37, v36);
      (*v50)(v41, v54);
      uint64_t v15 = v51;
      uint64_t v11 = v52;
      (*v60)(v51, v52);
LABEL_11:
      uint64_t v16 = v61;
      goto LABEL_4;
    }
    (*v60)(v15, v11);
LABEL_4:
    v20 += v58;
    if (!--v16) {
      return swift_bridgeObjectRelease();
    }
  }
  (*v60)(v15, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_41484(uint64_t a1)
{
  sub_421E0(a1);
  uint64_t v2 = sub_86370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t BooksJetPackResourceBundle.fileData(atPath:)(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v22 = sub_85E00();
  uint64_t v1 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_85EB0();
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_86370();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_421E0((uint64_t)v9);
    type metadata accessor for BooksJetPackResourceBundle();
    uint64_t v26 = sub_86510();
    uint64_t v27 = v14;
    uint64_t v15 = v22;
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v22);
    sub_42240();
    sub_85E90();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
    v1 += 8;
    v16(v3, v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = v28;
    uint64_t v18 = sub_85EC0();
    if (!v17) {
      uint64_t v1 = v18;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v19 = v28;
    uint64_t v20 = sub_86360();
    if (!v19) {
      uint64_t v1 = v20;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v1;
}

char *BooksJetPackResourceBundle.data(withName:)()
{
  uint64_t v1 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_86370();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_421E0((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    uint64_t v8 = v7;
    uint64_t v9 = sub_86350();
    if (!v0) {
      uint64_t v8 = (char *)v9;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v8;
}

void *BooksJetPackResourceBundle.contentsOfDirectory(atPath:)(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_86520();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  uint64_t v47 = v3;
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_85E00();
  uint64_t v43 = *(void *)(v5 - 8);
  unsigned int v44 = (void (*)(void, void))v5;
  __chkstk_darwin(v5);
  unint64_t v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_85EB0();
  uint64_t v49 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_86370();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_421E0((uint64_t)v12);
    id v17 = [self defaultManager];
    type metadata accessor for BooksJetPackResourceBundle();
    v50[0] = (id)sub_86510();
    v50[1] = v18;
    uint64_t v20 = v42;
    uint64_t v19 = v43;
    uint64_t v21 = v44;
    (*(void (**)(char *, void, void (*)(void, void)))(v43 + 104))(v42, enum case for URL.DirectoryHint.inferFromPath(_:), v44);
    sub_42240();
    sub_85E90();
    (*(void (**)(char *, void))(v19 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    sub_85E40(v22);
    uint64_t v24 = v23;
    uint64_t v25 = v49;
    unsigned int v44 = *(void (**)(void, void))(v49 + 8);
    uint64_t v45 = v49 + 8;
    v44(v9, v7);
    v50[0] = 0;
    uint64_t v26 = [v17 contentsOfDirectoryAtURL:v24 includingPropertiesForKeys:0 options:16 error:v50];

    id v27 = v50[0];
    if (v26)
    {
      uint64_t v28 = v7;
      uint64_t v29 = sub_86A30();

      int64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        unint64_t v42 = v1;
        v50[0] = &_swiftEmptyArrayStorage;
        sub_42958(0, v30, 0);
        uint64_t v32 = *(void *)(v25 + 16);
        uint64_t v31 = v25 + 16;
        uint64_t v43 = v32;
        uint64_t v33 = *(unsigned __int8 *)(v31 + 64);
        uint64_t v41 = v29;
        uint64_t v34 = v29 + ((v33 + 32) & ~v33);
        uint64_t v49 = v31;
        uint64_t v35 = *(void *)(v31 + 56);
        do
        {
          ((void (*)(char *, uint64_t, uint64_t))v43)(v9, v34, v28);
          sub_85E10();
          sub_86530();
          v44(v9, v28);
          uint64_t v26 = v50[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_42958(0, v26[2] + 1, 1);
            uint64_t v26 = v50[0];
          }
          unint64_t v37 = v26[2];
          unint64_t v36 = v26[3];
          if (v37 >= v36 >> 1)
          {
            sub_42958(v36 > 1, v37 + 1, 1);
            uint64_t v26 = v50[0];
          }
          v26[2] = v37 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))((unint64_t)v26+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v37, v48, v46);
          v50[0] = v26;
          v34 += v35;
          --v30;
          uint64_t v28 = v7;
        }
        while (v30);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        return &_swiftEmptyArrayStorage;
      }
    }
    else
    {
      id v39 = v27;
      sub_85DD0();

      swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v26 = v16;
    uint64_t v38 = sub_86340();
    if (!v1) {
      uint64_t v26 = (void *)v38;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v26;
}

uint64_t sub_420A8(uint64_t a1)
{
  return BooksJetPackResourceBundle.fileData(atPath:)(a1);
}

void *sub_420C0(uint64_t a1)
{
  return BooksJetPackResourceBundle.contentsOfDirectory(atPath:)(a1);
}

uint64_t sub_420D8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_42100(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_422E0(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_86D40();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_42178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CC8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_421E0(uint64_t a1)
{
  uint64_t v2 = sub_2D920(&qword_CC8C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_42240()
{
  unint64_t result = qword_CC8D8;
  if (!qword_CC8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC8D8);
  }
  return result;
}

uint64_t type metadata accessor for BooksJetPackResourceBundle()
{
  uint64_t result = qword_CC938;
  if (!qword_CC938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_422E0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_423B4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_3F66C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_3F66C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_3ED88((uint64_t)v12);
  return v7;
}

uint64_t sub_423B4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_86D50();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_42570(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_86EF0();
  if (!v8)
  {
    sub_86F60();
    __break(1u);
LABEL_17:
    uint64_t result = sub_86FC0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_42570(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_42608(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_42780(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_42780(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_42608(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_6AB50(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_86EB0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_86F60();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_86950();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_86FC0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_86F60();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_42780(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_2D920(&qword_CC9D8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

unsigned char **sub_428D0(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

unint64_t sub_428E0()
{
  unint64_t result = qword_CC8A0;
  if (!qword_CC8A0)
  {
    sub_85EB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC8A0);
  }
  return result;
}

uint64_t sub_42938(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_42FD0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_42958(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_43800(a1, a2, a3, (void *)*v3, &qword_CC9C0, (uint64_t (*)(void))&type metadata accessor for JetPackPath);
  uint64_t *v3 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BooksJetPackResourceBundle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    int64_t v7 = (char *)a1 + v6;
    int64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_85EB0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for BooksJetPackResourceBundle(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_85EB0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for BooksJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_85EB0();
  int64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for BooksJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_85EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for BooksJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_85EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for BooksJetPackResourceBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_85EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksJetPackResourceBundle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_42D38);
}

uint64_t sub_42D38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_85EB0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    size_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BooksJetPackResourceBundle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_42DFC);
}

void *sub_42DFC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_85EB0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_42EA4()
{
  uint64_t result = sub_85EB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_42F40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_43198(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_42F60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4333C(a1, a2, a3, (void *)*v3, &qword_CC970, &qword_CC978);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_42F90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_434E8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_42FB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_43654(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_42FD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2D920(&qword_CC9E0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = &_swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 < a4 || v13 >= v14 + 8 * v8)
    {
      sub_2D920(&qword_CC658);
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      sub_2D920(&qword_CC658);
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_2D920(&qword_CC658);
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_34:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_43198(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2D920(&qword_CC990);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_2D920(&qword_CC998);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_43328(char a1, int64_t a2, char a3, void *a4)
{
  return sub_4333C(a1, a2, a3, a4, &qword_CC980, &qword_CC988);
}

uint64_t sub_4333C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_2D920(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11) {
      memmove(v13 + 4, a4 + 4, 24 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    sub_2D920(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_434E8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2D920(&qword_CC9B8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_43654(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2D920(&qword_CC9A0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_2D920(&qword_CC9A8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_437E0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_43800(a1, a2, a3, a4, &qword_CC9B0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

uint64_t sub_43800(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_2D920(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

unint64_t sub_43A48()
{
  unint64_t result = qword_CC9D0;
  if (!qword_CC9D0)
  {
    sub_2D964(&qword_CC9C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC9D0);
  }
  return result;
}

uint64_t sub_43AA4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_43AB8(a1, a2);
  }
  return a1;
}

uint64_t sub_43AB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_43B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_46984(a1, (uint64_t)v8);
  uint64_t v9 = sub_86B10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_33054((uint64_t)v8, &qword_CCEA0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_86A90();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_86B00();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

unint64_t URLParser.ParserURLType.init(rawValue:)(unint64_t a1)
{
  return sub_45E68(a1);
}

BOOL sub_43D18(void *a1, void *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_43D2C()
{
  Swift::UInt v1 = *v0;
  sub_870F0();
  sub_87100(v1);
  return sub_87130();
}

void sub_43D74()
{
  sub_87100(*v0);
}

Swift::Int sub_43DA0()
{
  Swift::UInt v1 = *v0;
  sub_870F0();
  sub_87100(v1);
  return sub_87130();
}

unint64_t sub_43DE4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_45E68(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_43E18(void *a1@<X8>)
{
  *a1 = *v1;
}

id sub_43E24()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for URLParser()) init];
  qword_CC9E8 = (uint64_t)result;
  return result;
}

uint64_t URLParser.type(for:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return _swift_task_switch(sub_43E7C, 0, 0);
}

uint64_t sub_43E7C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  void *v3 = v0;
  v3[1] = sub_43F78;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x726F662865707974, 0xEA0000000000293ALL, sub_45E78, v2, &type metadata for URLParser.ParserURLType);
}

uint64_t sub_43F78()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_44090, 0, 0);
}

uint64_t sub_44090()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_440A8(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = sub_85EB0();
  uint64_t v3 = *(void *)(v24 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v24);
  uint64_t v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2D920(&qword_CCA70);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self defaultBag];
  id v10 = [objc_allocWithZone((Class)AMSURLParser) initWithBag:v9];

  sub_85E40(v11);
  uint64_t v13 = v12;
  id v21 = [v10 typeForURL:v12];

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23, v5);
  uint64_t v14 = v22;
  uint64_t v15 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v22, a2, v24);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v17 = (v7 + *(unsigned __int8 *)(v3 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v16, v8, v5);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v18 + v17, v14, v15);
  aBlock[4] = sub_46B78;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_6A9D4;
  aBlock[3] = &unk_B4C88;
  uint64_t v19 = _Block_copy(aBlock);
  swift_release();
  id v20 = v21;
  [v21 addFinishBlock:v19];
  _Block_release(v19);
}

uint64_t sub_443AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_85EB0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
LABEL_6:
    if (!a1) {
      goto LABEL_22;
    }
    goto LABEL_9;
  }
  swift_errorRetain();
  if (qword_CC540 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_86230();
  sub_31DE4(v11, (uint64_t)qword_CD708);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_86210();
  os_log_type_t v13 = sub_86C30();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v29 = a1;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = a4;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = v7;
    uint64_t v32 = a2;
    uint64_t v33 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    v28[1] = v15 + 4;
    swift_errorRetain();
    sub_2D920(&qword_CD0D0);
    uint64_t v17 = sub_868A0();
    uint64_t v32 = sub_422E0(v17, v18, &v33);
    sub_86D40();
    a1 = v29;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v12, v13, "Parsing commerce UI URL encountered error: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v7 = v31;
    swift_slowDealloc();
    a4 = v30;
    swift_slowDealloc();

    swift_errorRelease();
    goto LABEL_6;
  }
  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();

  if (!a1)
  {
LABEL_22:
    uint64_t v33 = 0;
    goto LABEL_23;
  }
LABEL_9:
  uint64_t v33 = 0;
  char v34 = 1;
  sub_86BE0();
  if (v34) {
    goto LABEL_22;
  }
  uint64_t v19 = v33;
  if (v33 == 2)
  {
    uint64_t v33 = 3;
  }
  else if (v33 == 1)
  {
    uint64_t v33 = 2;
  }
  else
  {
    if (v33)
    {
      if (qword_CC540 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_86230();
      sub_31DE4(v20, (uint64_t)qword_CD708);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
      id v21 = sub_86210();
      os_log_type_t v22 = sub_86C40();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = v10;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = v19;
        uint64_t v33 = v31;
        *(_DWORD *)uint64_t v24 = 134218242;
        sub_86D40();
        *(_WORD *)(v24 + 12) = 2080;
        sub_428E0();
        uint64_t v25 = sub_87040();
        uint64_t v32 = sub_422E0(v25, v26, &v33);
        sub_86D40();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
        _os_log_impl(&dword_0, v21, v22, "AMSURLParser returned an unknown type value %ld for %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }

      goto LABEL_22;
    }
    uint64_t v33 = 1;
  }
LABEL_23:
  sub_2D920(&qword_CCA70);
  return sub_86AB0();
}

uint64_t sub_44A0C(uint64_t a1, const void *a2, void *a3)
{
  v3[3] = a3;
  uint64_t v6 = sub_85EB0();
  void v3[4] = v6;
  v3[5] = *(void *)(v6 - 8);
  v3[6] = swift_task_alloc();
  v3[7] = _Block_copy(a2);
  sub_85E60();
  id v7 = a3;
  return _swift_task_switch(sub_44B04, 0, 0);
}

uint64_t sub_44B04()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = swift_task_alloc();
  v0[8] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  void *v3 = v0;
  v3[1] = sub_44C00;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x726F662865707974, 0xEA0000000000293ALL, sub_46C60, v2, &type metadata for URLParser.ParserURLType);
}

uint64_t sub_44C00()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_44D18, 0, 0);
}

uint64_t sub_44D18()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void (***)(void, void))(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);

  uint64_t v5 = *(void *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  v2[2](v2, v5);
  _Block_release(v2);
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

id URLParser.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

id URLParser.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

id _s5JSApp9URLParserC6sharedACvgZ_0()
{
  if (qword_CC438 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_CC9E8;

  return v0;
}

Swift::Void __swiftcall URLParser.isCommerceUIURLWithCallback(_:_:)(Swift::String a1, JSValue a2)
{
  object = (objc_class *)a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v6 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  id v10 = (JSValue *)swift_allocObject();
  v10[2].super.Class isa = 0;
  v10[3].super.Class isa = 0;
  v10[4].super.Class isa = v2;
  v10[5].super.Class isa = (Class)countAndFlagsBits;
  v10[6].super.Class isa = object;
  v10[7].super.Class isa = a2.super.isa;
  uint64_t v11 = v2;
  swift_bridgeObjectRetain();
  uint64_t v12 = a2.super.isa;
  sub_43B10((uint64_t)v8, (uint64_t)&unk_CCA00, (uint64_t)v10);
  swift_release();
  sub_33054((uint64_t)v8, &qword_CCEA0);
}

uint64_t sub_45074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a7;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_CCA68 + dword_CCA68);
  id v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  void *v10 = v7;
  v10[1] = sub_4512C;
  return v12(a5, a6);
}

uint64_t sub_4512C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_4522C, 0, 0);
}

uint64_t sub_4522C()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = [self sharedInstance];
  sub_2D920(&qword_CCA60);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_A1CE0;
  *(void *)(v4 + 56) = &type metadata for Bool;
  *(unsigned char *)(v4 + 32) = v1;
  Class isa = sub_86A10().super.isa;
  NSString v6 = sub_86830();
  [v3 enqueueValueCall:v2 arguments:isa file:v6 line:147];

  swift_bridgeObjectRelease();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_454CC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  uint64_t v12[3] = 0;
  v12[4] = a1;
  v12[5] = a3;
  v12[6] = a4;
  v12[7] = a2;
  id v13 = a2;
  id v14 = a1;
  swift_bridgeObjectRetain();
  sub_43B10((uint64_t)v10, (uint64_t)&unk_CCA58, (uint64_t)v12);
  swift_release();
  return sub_33054((uint64_t)v10, &qword_CCEA0);
}

uint64_t sub_45604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  void v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_2D920((uint64_t *)&unk_CD040);
  v7[6] = swift_task_alloc();
  v7[7] = swift_task_alloc();
  uint64_t v8 = sub_85EB0();
  uint8_t v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  return _swift_task_switch(sub_45718, 0, 0);
}

uint64_t sub_45718()
{
  char v1 = (void *)v0[2];
  if (!v1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v5 = self;
  id v6 = v1;
  id v7 = [v5 defaultBag];
  id v8 = objc_allocWithZone((Class)sub_86140());
  v0[12] = sub_86130();
  sub_85E80();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[13] = v9;
  v0[14] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v9(v4, 1, v2) == 1)
  {
    uint64_t v10 = v0[5];
    sub_33054(v0[7], (uint64_t *)&unk_CD040);
    uint64_t v11 = (void *)v0[12];
    if (v10)
    {
      uint64_t v12 = (void *)v0[5];
      id v13 = (void *)v0[2];
      id v14 = self;
      id v15 = v12;
      id v16 = [v14 sharedInstance];
      NSString v17 = sub_86830();
      [v16 enqueueValueCall:v15 arguments:0 file:v17 line:158];
    }
    else
    {
      id v15 = (id)v0[2];
    }
    goto LABEL_10;
  }
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[8];
  uint64_t v20 = v0[9];
  uint64_t v21 = v0[7];
  os_log_type_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v0[15] = v22;
  v0[16] = (v20 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v22(v18, v21, v19);
  uint64_t v23 = (void *)swift_task_alloc();
  v0[17] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_459B8;
  uint64_t v24 = v0[11];
  uint64_t v25 = v0[6];
  return CampaignAttributor.processURL(_:ignoreMarketing:)(v25, v24, 0);
}

uint64_t sub_459B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_45AB4, 0, 0);
}

uint64_t sub_45AB4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, uint64_t))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 88), v1);
    uint64_t v3 = *(void *)(v0 + 40);
    sub_33054(*(void *)(v0 + 48), (uint64_t *)&unk_CD040);
    uint64_t v4 = *(void **)(v0 + 96);
    if (v3)
    {
      uint64_t v5 = *(void **)(v0 + 40);
      id v6 = *(void **)(v0 + 16);
      id v7 = self;
      id v8 = v5;
      id v9 = [v7 sharedInstance];
      NSString v10 = sub_86830();
      [v9 enqueueValueCall:v8 arguments:0 file:v10 line:158];
    }
    else
    {
      id v8 = *(id *)(v0 + 16);
    }
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 96);
    uint64_t v24 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 80);
    id v14 = *(void **)(v0 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120))(v12, v2, v1);
    id v15 = [self sharedInstance];
    sub_2D920(&qword_CCA60);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_A1CE0;
    uint64_t v17 = sub_85E10();
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v18;
    Class isa = sub_86A10().super.isa;
    NSString v20 = sub_86830();
    [v15 enqueueValueCall:v14 arguments:isa file:v20 line:162];

    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v12, v1);
    v21(v24, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

void sub_45D6C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

unint64_t sub_45E68(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

void sub_45E78(uint64_t a1)
{
  sub_440A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_45E84()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_3F97C;
  v5[2] = v4;
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_CCA68 + dword_CCA68);
  id v6 = (void *)swift_task_alloc();
  v5[3] = v6;
  *id v6 = v5;
  v6[1] = sub_4512C;
  return v8(v2, v3);
}

uint64_t sub_45F84(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  void v2[4] = a2;
  sub_2D920((uint64_t *)&unk_CD040);
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_85EB0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_46074, 0, 0);
}

uint64_t sub_46074()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  sub_85E80();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_33054(v0[5], (uint64_t *)&unk_CD040);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4(0);
  }
  else
  {
    uint64_t v6 = v0[8];
    (*(void (**)(uint64_t, void, void))(v0[7] + 32))(v6, v0[5], v0[6]);
    uint64_t v7 = swift_task_alloc();
    v0[9] = v7;
    *(void *)(v7 + 16) = v6;
    id v8 = (void *)swift_task_alloc();
    v0[10] = v8;
    *id v8 = v0;
    v8[1] = sub_4621C;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x726F662865707974, 0xEA0000000000293ALL, sub_46C60, v7, &type metadata for URLParser.ParserURLType);
  }
}

uint64_t sub_4621C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_46334, 0, 0);
}

uint64_t sub_46334()
{
  uint64_t v1 = v0[2];
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(BOOL))v0[1];
  return v2(v1 != 0);
}

void _s5JSApp9URLParserC28processCampaignAttributedURLySo7JSValueCSSF_0(uint64_t a1, uint64_t a2)
{
  id v4 = [self sharedInstance];
  id v5 = [v4 environment];

  id v6 = [v5 context];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  void v10[4] = sub_4683C;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_45D6C;
  v10[3] = &unk_B4BE8;
  id v8 = _Block_copy(v10);
  swift_bridgeObjectRetain();
  swift_release();
  id v9 = [self valueWithNewPromiseInContext:v6 fromExecutor:v8];

  _Block_release(v8);
  if (!v9) {
    __break(1u);
  }
}

unint64_t sub_46534()
{
  unint64_t result = qword_CCA08;
  if (!qword_CCA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CCA08);
  }
  return result;
}

uint64_t type metadata accessor for URLParser()
{
  return self;
}

ValueMetadata *type metadata accessor for URLParser.ParserURLType()
{
  return &type metadata for URLParser.ParserURLType;
}

uint64_t sub_465C0()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_32DB8;
  v5[2] = v4;
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_CCA68 + dword_CCA68);
  id v6 = (void *)swift_task_alloc();
  v5[3] = v6;
  *id v6 = v5;
  v6[1] = sub_4512C;
  return v8(v2, v3);
}

uint64_t sub_466C0()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_46708()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (const void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_3F97C;
  id v6 = (uint64_t (*)(uint64_t, const void *, void *))((char *)&dword_CCA40 + dword_CCA40);
  return v6(v2, v3, v4);
}

uint64_t sub_467C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_46804()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_4683C(void *a1, void *a2)
{
  return sub_454CC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_46844(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_46854()
{
  return swift_release();
}

uint64_t sub_46860()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_468B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  NSString v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_3F97C;
  return sub_45604(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_46984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CCEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_469EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_46A24()
{
  uint64_t v1 = sub_2D920(&qword_CCA70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_85EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_46B78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_2D920(&qword_CCA70) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_85EB0() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_443AC(a1, a2, v2 + v6, v9);
}

id sub_46D4C()
{
  return sub_4793C(type metadata accessor for FigaroEventFieldCell);
}

uint64_t type metadata accessor for FigaroEventFieldCell()
{
  return self;
}

id sub_46D88(uint64_t a1)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v39 = _swiftEmptyArrayStorage;
    uint64_t v4 = v1;
    sub_42F40(0, v3, 0);
    uint64_t v5 = 0;
    int64_t v28 = v3;
    uint64_t v29 = a1 + 32;
    while (1)
    {
      uint64_t v30 = v5;
      uint64_t v6 = *(void *)(v29 + 8 * v5);
      uint64_t v7 = *(void *)(v6 + 16);
      if (v7)
      {
        sub_2D920(&qword_CC980);
        uint64_t v8 = (void *)swift_allocObject();
        size_t v9 = j__malloc_size(v8);
        v8[2] = v7;
        v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
        uint64_t v10 = sub_4881C((uint64_t)&v37, v8 + 4, v7, v6);
        swift_bridgeObjectRetain_n();
        sub_32FE8();
        if (v10 != v7)
        {
          __break(1u);
          id result = (id)swift_release();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _swiftEmptyArrayStorage;
      }
      unint64_t v37 = v8;
      sub_479A8(&v37);
      uint64_t v11 = v37;
      int64_t v12 = v37[2];
      if (v12)
      {
        unint64_t v36 = _swiftEmptyArrayStorage;
        sub_42F60(0, v12, 0);
        uint64_t v13 = _swiftEmptyArrayStorage;
        id v14 = v11 + 6;
        do
        {
          uint64_t v15 = *(v14 - 1);
          uint64_t v16 = *v14;
          uint64_t v33 = *(v14 - 2);
          uint64_t v34 = v15;
          uint64_t v35 = v16;
          swift_bridgeObjectRetain_n();
          swift_unknownObjectRetain_n();
          sub_2D920(&qword_CC988);
          sub_2D920(&qword_CC978);
          swift_dynamicCast();
          uint64_t v17 = v37;
          long long v31 = v38;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_42F60(0, v13[2] + 1, 1);
            uint64_t v13 = v36;
          }
          unint64_t v19 = v13[2];
          unint64_t v18 = v13[3];
          if (v19 >= v18 >> 1)
          {
            sub_42F60(v18 > 1, v19 + 1, 1);
            uint64_t v13 = v36;
          }
          v13[2] = v19 + 1;
          NSString v20 = &v13[3 * v19];
          void v20[4] = v17;
          *(_OWORD *)(v20 + 5) = v31;
          v14 += 3;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v13 = _swiftEmptyArrayStorage;
      }
      uint64_t v21 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_42F40(0, v21[2] + 1, 1);
        uint64_t v21 = v39;
      }
      uint64_t v22 = v30;
      unint64_t v24 = v21[2];
      unint64_t v23 = v21[3];
      if (v24 >= v23 >> 1)
      {
        sub_42F40(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v30;
        uint64_t v21 = v39;
      }
      uint64_t v5 = v22 + 1;
      v21[2] = v24 + 1;
      v21[v24 + 4] = v13;
      if (v5 == v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v27;
        goto LABEL_23;
      }
    }
  }
  uint64_t v25 = v1;
  swift_bridgeObjectRelease();
  uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_23:
  *(void *)&v1[OBJC_IVAR____TtC5JSApp30FigaroEventFieldViewController_data] = v21;

  v32.receiver = v1;
  v32.super_class = (Class)type metadata accessor for FigaroEventFieldViewController();
  return [super initWithStyle:2];
}

uint64_t sub_472A0(void *a1, unint64_t a2)
{
  uint64_t v3 = v2;
  NSString v6 = sub_86830();
  Class isa = sub_85FD0().super.isa;
  id v8 = [a1 dequeueReusableCellWithIdentifier:v6 forIndexPath:isa];

  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC5JSApp30FigaroEventFieldViewController_data);
  unint64_t v10 = sub_86000();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= *(void *)(v9 + 16))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v11 = *(void *)(v9 + 8 * v10 + 32);
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_85FF0();
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= *(void *)(v11 + 16))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v13 = [v8 textLabel];
  if (v13)
  {
    id v14 = v13;
    NSString v15 = sub_86830();
    swift_bridgeObjectRelease();
    [v14 setText:v15];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRetain();
  sub_2D920(&qword_CCAD8);
  if (swift_dynamicCast())
  {
    id v16 = [v8 detailTextLabel];
    if (v16)
    {
      uint64_t v17 = v16;
      sub_49194();
      sub_86820();
      swift_bridgeObjectRelease();
      NSString v18 = sub_86830();
      swift_bridgeObjectRelease();
      [v17 setText:v18];

LABEL_34:
      swift_unknownObjectRelease();
      return (uint64_t)v8;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  swift_unknownObjectRetain();
  sub_2D920(&qword_CCAE0);
  if (!swift_dynamicCast())
  {
    id v29 = [v8 detailTextLabel];
    if (v29)
    {
      uint64_t v30 = v29;
      sub_86F50();
      NSString v31 = sub_86830();
      swift_bridgeObjectRelease();
      [v30 setText:v31];
    }
    goto LABEL_34;
  }
  a2 = v37;
  id v19 = [v8 detailTextLabel];
  if (!v19) {
    goto LABEL_26;
  }
  id v36 = v19;
  if (!(v37 >> 62))
  {
    uint64_t v20 = *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFFF8));
    if (v20) {
      goto LABEL_15;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    sub_49194();
    uint64_t v32 = sub_86820();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = v32;
    v38._object = v34;
    sub_86930(v38);
    swift_bridgeObjectRelease();
    NSString v35 = sub_86830();
    swift_bridgeObjectRelease();
    [v36 setText:v35];

    goto LABEL_34;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_86F80();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_33;
  }
LABEL_15:
  uint64_t result = sub_42F90(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        sub_86ED0();
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v23 = sub_868A0();
      uint64_t v25 = v24;
      unint64_t v27 = _swiftEmptyArrayStorage[2];
      unint64_t v26 = _swiftEmptyArrayStorage[3];
      if (v27 >= v26 >> 1) {
        sub_42F90(v26 > 1, v27 + 1, 1);
      }
      ++v22;
      _swiftEmptyArrayStorage[2] = v27 + 1;
      int64_t v28 = (char *)&_swiftEmptyArrayStorage[2 * v27];
      *((void *)v28 + 4) = v23;
      *((void *)v28 + 5) = v25;
    }
    while (v20 != v22);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

id sub_47924()
{
  return sub_4793C(type metadata accessor for FigaroEventFieldViewController);
}

id sub_4793C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FigaroEventFieldViewController()
{
  return self;
}

Swift::Int sub_479A8(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_49180(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_47A14(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_47A14(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_87030(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_4813C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v106 = result;
  uint64_t v103 = a1;
  if (v3 < 2)
  {
    id v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v105 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v103;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_48224((char *)(v95 + 24 * v98), (char *)(v95 + 24 * *(void *)&v94[16 * v12 + 16]), v95 + 24 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_48808((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v105[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_2D920(&qword_CC988);
    uint64_t v7 = sub_86A70();
    *(void *)(v7 + 16) = v6;
    uint64_t v105 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v104 = *a1 + 8;
  uint64_t v102 = *a1 - 24;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v3;
  uint64_t v108 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    id v14 = (uint64_t *)(v10 + 24 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 24 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_87070();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v104 + 24 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 24 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_87070()))
      {
        goto LABEL_36;
      }
      v21 += 3;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 24 * v20;
        uint64_t v26 = 24 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v26;
            uint64_t v30 = v10 + v25;
            uint64_t v31 = *(void *)(v10 + v26);
            long long v32 = *(_OWORD *)(v10 + v26 + 8);
            long long v33 = *(_OWORD *)(v10 + v25 - 24);
            *(void *)(v29 + 16) = *(void *)(v10 + v25 - 8);
            *(_OWORD *)uint64_t v29 = v33;
            *(void *)(v30 - 24) = v31;
            *(_OWORD *)(v30 - 16) = v32;
          }
          ++v28;
          v25 -= 24;
          v26 += 24;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v106) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_484FC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v45 = *((void *)v11 + 2);
    unint64_t v44 = *((void *)v11 + 3);
    unint64_t v12 = v45 + 1;
    if (v45 >= v44 >> 1) {
      uint64_t v11 = sub_484FC((char *)(v44 > 1), v45 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v46 = v11 + 32;
    uint64_t v47 = &v11[16 * v45 + 32];
    *(void *)uint64_t v47 = v13;
    *((void *)v47 + 1) = v9;
    if (v45)
    {
      uint64_t v10 = v108;
      while (1)
      {
        unint64_t v48 = v12 - 1;
        if (v12 >= 4)
        {
          os_log_type_t v53 = &v46[16 * v12];
          uint64_t v54 = *((void *)v53 - 8);
          uint64_t v55 = *((void *)v53 - 7);
          BOOL v59 = __OFSUB__(v55, v54);
          uint64_t v56 = v55 - v54;
          if (v59) {
            goto LABEL_135;
          }
          uint64_t v58 = *((void *)v53 - 6);
          uint64_t v57 = *((void *)v53 - 5);
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v51 = v57 - v58;
          char v52 = v59;
          if (v59) {
            goto LABEL_136;
          }
          unint64_t v60 = v12 - 2;
          uint64_t v61 = &v46[16 * v12 - 32];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          BOOL v59 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v59) {
            goto LABEL_138;
          }
          BOOL v59 = __OFADD__(v51, v64);
          uint64_t v65 = v51 + v64;
          if (v59) {
            goto LABEL_141;
          }
          if (v65 >= v56)
          {
            uint64_t v83 = &v46[16 * v48];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v59 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v59) {
              goto LABEL_145;
            }
            BOOL v76 = v51 < v86;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v77 = *((void *)v11 + 4);
            uint64_t v78 = *((void *)v11 + 5);
            BOOL v59 = __OFSUB__(v78, v77);
            uint64_t v70 = v78 - v77;
            char v71 = v59;
            goto LABEL_99;
          }
          uint64_t v50 = *((void *)v11 + 4);
          uint64_t v49 = *((void *)v11 + 5);
          BOOL v59 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          char v52 = v59;
        }
        if (v52) {
          goto LABEL_137;
        }
        unint64_t v60 = v12 - 2;
        uint64_t v66 = &v46[16 * v12 - 32];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v70 = v67 - v68;
        char v71 = v69;
        if (v69) {
          goto LABEL_140;
        }
        uint64_t v72 = &v46[16 * v48];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v59 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v59) {
          goto LABEL_143;
        }
        if (__OFADD__(v70, v75)) {
          goto LABEL_144;
        }
        if (v70 + v75 >= v51)
        {
          BOOL v76 = v51 < v75;
LABEL_105:
          if (v76) {
            unint64_t v48 = v60;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v71) {
          goto LABEL_139;
        }
        unint64_t v79 = &v46[16 * v48];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v59 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v59) {
          goto LABEL_142;
        }
        if (v82 < v70) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v87 = v48 - 1;
        if (v48 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v88 = v10;
        os_log_type_t v89 = &v46[16 * v87];
        uint64_t v90 = *(void *)v89;
        uint64_t v91 = &v46[16 * v48];
        uint64_t v92 = *((void *)v91 + 1);
        sub_48224((char *)(v88 + 24 * *(void *)v89), (char *)(v88 + 24 * *(void *)v91), v88 + 24 * v92, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v92 < v90) {
          goto LABEL_132;
        }
        if (v48 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)os_log_type_t v89 = v90;
        *(void *)&v46[16 * v87 + 8] = v92;
        unint64_t v93 = *((void *)v11 + 2);
        if (v48 >= v93) {
          goto LABEL_134;
        }
        unint64_t v12 = v93 - 1;
        memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
        *((void *)v11 + 2) = v93 - 1;
        BOOL v76 = v93 > 2;
        uint64_t v10 = v108;
        if (!v76) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v108;
LABEL_15:
    Swift::Int v3 = v107;
    if (v9 >= v107)
    {
      id v8 = v105;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v106)) {
    goto LABEL_153;
  }
  if (v13 + v106 >= v3) {
    Swift::Int v34 = v3;
  }
  else {
    Swift::Int v34 = v13 + v106;
  }
  if (v34 >= v13)
  {
    if (v9 != v34)
    {
      uint64_t v35 = v102 + 24 * v9;
      do
      {
        id v36 = (uint64_t *)(v10 + 24 * v9);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        Swift::Int v39 = v13;
        uint64_t v40 = v35;
        do
        {
          BOOL v41 = v37 == *(void *)v40 && v38 == *(void *)(v40 + 8);
          if (v41 || (sub_87070() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          long long v42 = *(_OWORD *)(v40 + 32);
          uint64_t v43 = *(void *)(v40 + 16);
          uint64_t v37 = *(void *)(v40 + 24);
          *(_OWORD *)(v40 + 24) = *(_OWORD *)v40;
          *(void *)(v40 + 40) = v43;
          *(void *)uint64_t v40 = v37;
          *(_OWORD *)(v40 + 8) = v42;
          uint64_t v38 = v42;
          v40 -= 24;
          ++v39;
        }
        while (v9 != v39);
        ++v9;
        v35 += 24;
      }
      while (v9 != v34);
      Swift::Int v9 = v34;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_86F60();
  __break(1u);
  return result;
}

uint64_t sub_4813C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3 - 24;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 24 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)v12 && v10 == *(void *)(v12 + 8);
      if (v13 || (Swift::Int result = sub_87070(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v14 = *(_OWORD *)(v12 + 32);
      uint64_t v15 = *(void *)(v12 + 16);
      Swift::Int result = *(void *)(v12 + 24);
      *(_OWORD *)(v12 + 24) = *(_OWORD *)v12;
      *(void *)(v12 + 40) = v15;
      *(void *)uint64_t v12 = result;
      *(_OWORD *)(v12 + 8) = v14;
      uint64_t v10 = v14;
      v12 -= 24;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_48224(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v29 = __src;
  Swift::Int v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v17 = &v4[24 * v11];
      Swift::Int v27 = v17;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = (char *)(v18 + 24);
          uint64_t v21 = *((void *)v19 - 3);
          uint64_t v22 = *((void *)v19 - 2);
          v19 -= 24;
          BOOL v23 = *((void *)v17 - 3) == v21 && *((void *)v17 - 2) == v22;
          if (v23 || (sub_87070() & 1) == 0)
          {
            Swift::Int v27 = v17 - 24;
            if (v20 < v17 || v18 >= (unint64_t)v17 || v20 != v17)
            {
              long long v25 = *(_OWORD *)(v17 - 24);
              *(void *)(v18 + 16) = *((void *)v17 - 1);
              *(_OWORD *)unint64_t v18 = v25;
            }
            int v19 = v6;
            v17 -= 24;
            if (v6 <= v7) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= (unint64_t)v6)
            {
              long long v24 = *(_OWORD *)v19;
              *(void *)(v18 + 16) = *((void *)v19 + 2);
              *(_OWORD *)unint64_t v18 = v24;
            }
            uint64_t v29 = v19;
            if (v19 <= v7) {
              goto LABEL_46;
            }
          }
          v18 -= 24;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    Swift::Int v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v13 || (sub_87070() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v16 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v16;
          }
          v4 += 24;
          Swift::Int v28 = v4;
          long long v14 = v6;
        }
        else
        {
          long long v14 = v6 + 24;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v15;
          }
        }
        v7 += 24;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      uint64_t v29 = v7;
    }
LABEL_46:
    sub_485F8((void **)&v29, (const void **)&v28, &v27);
    return 1;
  }
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

char *sub_484FC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2D920(&qword_CCAD0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  BOOL v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_485F8(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_86FC0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

uint64_t sub_486C8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_85D60();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_86FC0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_48808(uint64_t a1)
{
  return sub_484FC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_4881C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    Swift::Int v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    void *v11 = *v20;
    v11[1] = v21;
    void v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_unknownObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_48A38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_85D60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  BOOL v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v15 = a4 + 64;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 32);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  uint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    Swift::Int v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 56) + v29 * v24, v8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_48D80(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_48F80(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_49180(void *a1)
{
  return sub_43328(0, a1[2], 0, a1);
}

unint64_t sub_49194()
{
  unint64_t result = qword_CCAE8;
  if (!qword_CCAE8)
  {
    sub_2D964(&qword_CCAD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CCAE8);
  }
  return result;
}

uint64_t sub_491F0(void *a1)
{
  return sub_437E0(0, a1[2], 0, a1);
}

uint64_t static BooksLocalizer.load(using:asPartOf:)(uint64_t a1)
{
  v2[7] = v1;
  v2[8] = sub_86670();
  unint64_t v4 = (void *)swift_task_alloc();
  v2[9] = v4;
  void *v4 = v2;
  v4[1] = sub_492B0;
  return static AppleServicesLocalizer.load(using:)(a1);
}

uint64_t sub_492B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    return _swift_task_switch(sub_493FC, 0, 0);
  }
}

uint64_t sub_493FC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v0 + 40) = *(void *)(v0 + 64);
  *(void *)(v0 + 48) = &protocol witness table for AppleServicesLocalizer;
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 56) = 1;
  sub_3EDD8((long long *)(v0 + 16), v2 + 16);
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t static BooksLocalizer.create(basedOn:asPartOf:)(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  unint64_t v3 = sub_494DC(a1, v1);

  return sub_4B2D0((uint64_t)v3, v1, v2);
}

void *sub_494DC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t static BooksLocalizer.fetch(contentsOf:for:asPartOf:)()
{
  return _swift_task_switch(sub_4953C, 0, 0);
}

uint64_t sub_4953C()
{
  return sub_86F70();
}

uint64_t BooksLocalizer.jsExport.getter()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_867D0();
}

uint64_t BooksLocalizer.locale.getter()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_86760();
}

uint64_t BooksLocalizer.hasString(forKey:using:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_867E0() & 1;
}

Swift::Bool __swiftcall BooksLocalizer.isLocalizedString(_:)(Swift::String a1)
{
  sub_494DC((void *)(v1 + 16), *(void *)(v1 + 40));
  return sub_86750() & 1;
}

uint64_t BooksLocalizer.string(forKey:with:using:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_86780();
}

uint64_t BooksLocalizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v16[1] = a4;
  uint64_t v17 = a3;
  uint64_t v7 = sub_866A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16[0] = a5;
  v11(v10, a5, v7);
  sub_494DC((void *)(v5 + 16), *(void *)(v5 + 40));
  LOBYTE(a5) = sub_867E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (a5)
  {
    sub_494DC((void *)(v5 + 16), *(void *)(v5 + 40));
    return sub_86770();
  }
  else
  {
    uint64_t v13 = (void *)sub_86600();
    uint64_t v12 = (uint64_t)v13;
    if (v17)
    {
      uint64_t v12 = sub_4B038(v13, v14, v17);
      swift_bridgeObjectRelease();
    }
  }
  return v12;
}

uint64_t BooksLocalizer.decimal(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_4997C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of Localizer.decimal(forNumber:minimumFractionDigits:maximumFractionDigits:in:));
}

uint64_t BooksLocalizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_4997C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of Localizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:));
}

uint64_t sub_4997C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = a3 & 1;
  uint64_t v14 = a5 & 1;
  uint64_t v15 = v7[5];
  uint64_t v16 = v7[6];
  sub_494DC(v7 + 2, v15);
  return a7(a1, a2, v13, a4, v14, a6, v15, v16);
}

uint64_t BooksLocalizer.integer(for:in:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_867B0();
}

uint64_t BooksLocalizer.string(withCount:forKey:with:using:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_867A0();
}

uint64_t BooksLocalizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  v24[1] = a5;
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v9 = sub_866A0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24[0] = a6;
  v13(v12, a6, v9);
  sub_494DC((void *)(v7 + 16), *(void *)(v7 + 40));
  LOBYTE(a6) = sub_867E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (a6)
  {
    sub_494DC((void *)(v7 + 16), *(void *)(v7 + 40));
    return sub_86790();
  }
  else
  {
    uint64_t v15 = (void *)sub_86600();
    uint64_t v17 = v16;
    sub_2D920((uint64_t *)&unk_CCB00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_A1CE0;
    *(void *)(inited + 32) = 0x746E756F63;
    *(void *)(inited + 40) = 0xE500000000000000;
    uint64_t v27 = v25;
    *(void *)(inited + 48) = sub_87040();
    *(void *)(inited + 56) = v19;
    unint64_t v20 = sub_49D40(inited);
    uint64_t v14 = (void *)sub_4B038(v15, v17, v20);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26)
    {
      uint64_t v14 = (void *)sub_4B038(v14, v22, v26);
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)v14;
}

unint64_t sub_49D40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_2D920(&qword_CCC00);
  uint64_t v2 = (void *)sub_86FB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_59F18(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_49E64(uint64_t a1)
{
  return sub_4A44C(a1, &qword_CCBF0, &qword_CCBF8, (uint64_t (*)(uint64_t))sub_59F90);
}

unint64_t sub_49E8C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_2D920(&qword_CCC08);
  uint64_t v2 = sub_86FB0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_3F24C(v6, (uint64_t)v15, &qword_CCC10);
    unint64_t result = sub_59F94((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_4B3D4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_49FD0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_2D920(&qword_CCBE8);
  uint64_t v2 = (void *)sub_86FB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_59F18(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4A0EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_2D920(&qword_CCBD8);
  uint64_t v2 = sub_86FB0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_3F24C(v6, (uint64_t)&v15, &qword_CCBE0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_59F18(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_4B3D4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4A224(uint64_t a1)
{
  uint64_t v2 = sub_2D920(&qword_CCBC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_2D920(&qword_CCBD0);
  uint64_t v6 = sub_86FB0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_3F24C(v12, (uint64_t)v5, &qword_CCBC8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_59F18(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_85D60();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4A424(uint64_t a1)
{
  return sub_4A44C(a1, &qword_CCBB8, &qword_CCBC0, (uint64_t (*)(uint64_t))sub_59F90);
}

unint64_t sub_4A44C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_2D920(a2);
  uint64_t v7 = sub_86FB0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_3F24C(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_4B3D4(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Swift::String __swiftcall BooksLocalizer.formattedCount(_:)(Swift::Int a1)
{
  sub_494DC((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v2 = sub_86740();
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall BooksLocalizer.fileSize(forBytes:)(Swift::Double forBytes)
{
  sub_494DC((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v2 = sub_867C0();
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t BooksLocalizer.formattedDate(format:date:withContext:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_86730();
}

uint64_t BooksLocalizer.formattedDate(format:date:inSentence:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_86720();
}

uint64_t BooksLocalizer.relativeDate(_:using:)()
{
  sub_494DC((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_86710();
}

uint64_t BooksLocalizer.deinit()
{
  sub_3ED88(v0 + 16);
  return v0;
}

uint64_t BooksLocalizer.__deallocating_deinit()
{
  sub_3ED88(v0 + 16);

  return _swift_deallocClassInstance(v0, 57, 7);
}

uint64_t sub_4A7C0()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_867D0();
}

uint64_t sub_4A808()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86760();
}

uint64_t sub_4A858()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_867E0() & 1;
}

uint64_t sub_4A8C4()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86750() & 1;
}

uint64_t sub_4A928()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86780();
}

uint64_t sub_4A9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v18[1] = a4;
  uint64_t v19 = a3;
  uint64_t v7 = sub_866A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v5;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18[0] = a5;
  v12(v10, a5, v7);
  sub_494DC((void *)(v11 + 16), *(void *)(v11 + 40));
  char v13 = sub_867E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v13)
  {
    sub_494DC((void *)(v11 + 16), *(void *)(v11 + 40));
    return sub_86770();
  }
  else
  {
    uint64_t v15 = (void *)sub_86600();
    uint64_t v14 = (uint64_t)v15;
    if (v19)
    {
      uint64_t v14 = sub_4B038(v15, v16, v19);
      swift_bridgeObjectRelease();
    }
  }
  return v14;
}

uint64_t sub_4AB64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_4ABCC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of Localizer.decimal(forNumber:minimumFractionDigits:maximumFractionDigits:in:));
}

uint64_t sub_4AB98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_4ABCC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of Localizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:));
}

uint64_t sub_4ABCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = a3 & 1;
  uint64_t v15 = a5 & 1;
  uint64_t v16 = *(void *)(*(void *)v9 + 40);
  uint64_t v17 = *(void *)(*(void *)v9 + 48);
  sub_494DC((void *)(*(void *)v9 + 16), v16);
  return a9(a1, a2, v14, a4, v15, a6, v16, v17);
}

uint64_t sub_4AC64()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_867B0();
}

uint64_t sub_4ACC4()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_867A0();
}

uint64_t sub_4AD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return BooksLocalizer.string(withCount:forKey:with:defaultValue:using:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_4AD68()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86740();
}

uint64_t sub_4ADB8()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_867C0();
}

uint64_t sub_4AE10()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86730();
}

uint64_t sub_4AE88()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86720();
}

uint64_t sub_4AF08()
{
  sub_494DC((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_86710();
}

uint64_t sub_4AF68@<X0>(Swift::String *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_86930(*a1);
  v7._uint64_t countAndFlagsBits = 16448;
  v7._object = (void *)0xE200000000000000;
  sub_86930(v7);
  sub_42240();
  uint64_t v3 = sub_86D90();
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_4B038(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v5 = a1;
  uint64_t v28 = (uint64_t)a1;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = 16 * i;
    uint64_t v19 = (uint64_t *)(*(void *)(a3 + 48) + v18);
    uint64_t v20 = *v19;
    uint64_t v5 = (void *)v19[1];
    uint64_t v21 = (uint64_t *)(*(void *)(a3 + 56) + v18);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    v25._uint64_t countAndFlagsBits = v20;
    v25._object = v5;
    uint64_t v26 = v22;
    uint64_t v27 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4AF68(&v25, v24);
    swift_bridgeObjectRelease();
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = (void *)v24[0];
    uint64_t v28 = v24[0];
    uint64_t v29 = v24[1];
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16) {
        goto LABEL_16;
      }
      int64_t v17 = v12 + 2;
      if (v12 + 2 >= v10) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16) {
        goto LABEL_16;
      }
      int64_t v17 = v12 + 3;
      if (v12 + 3 >= v10) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16)
      {
LABEL_16:
        int64_t v12 = v17;
        goto LABEL_17;
      }
      int64_t v17 = v12 + 4;
      if (v12 + 4 < v10)
      {
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          while (1)
          {
            int64_t v12 = v17 + 1;
            if (__OFADD__(v17, 1)) {
              goto LABEL_29;
            }
            if (v12 >= v10) {
              goto LABEL_26;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v12);
            ++v17;
            if (v16) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_release();
      return (uint64_t)v5;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_4B23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  uint64_t v5 = sub_3F758((uint64_t *)&v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(v5, a1, a2);
  type metadata accessor for BooksLocalizer();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 56) = 1;
  sub_3EDD8(&v8, v6 + 16);
  return v6;
}

uint64_t sub_4B2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  return sub_4B23C((uint64_t)v6, a2, a3);
}

uint64_t type metadata accessor for BooksLocalizer()
{
  return self;
}

uint64_t method lookup function for BooksLocalizer(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BooksLocalizer);
}

_OWORD *sub_4B3D4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_4B3E4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_86DF0();
    sub_32FAC(0, &qword_CC660);
    sub_32C74(&qword_CC668, &qword_CC660);
    sub_86BD0();
    uint64_t v1 = v18;
    uint64_t v16 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_86E20()) {
      goto LABEL_37;
    }
    sub_32FAC(0, &qword_CC660);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v17;
    swift_unknownObjectRelease();
    uint64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v17) {
      goto LABEL_37;
    }
LABEL_33:
    self;
    if (swift_dynamicCastObjCClass())
    {
      sub_86A00();
      if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_86A60();
      }
      sub_86A80();
      sub_86A50();
    }
    else
    {
    }
    uint64_t v3 = v11;
    unint64_t v4 = v9;
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
LABEL_32:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    uint64_t v11 = v3 + 1;
    if (!v14)
    {
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (!v14)
      {
        uint64_t v11 = v3 + 3;
        if (v3 + 3 >= v8) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v11);
        if (!v14)
        {
          uint64_t v11 = v3 + 4;
          if (v3 + 4 >= v8) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v16 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v3 + 5;
            if (v3 + 5 >= v8) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v16 + 8 * v11);
            if (!v14)
            {
              uint64_t v15 = v3 + 6;
              while (v8 != v15)
              {
                unint64_t v14 = *(void *)(v16 + 8 * v15++);
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_37:
              sub_32FE8();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_4B718()
{
  type metadata accessor for HotReloadStatusHUDManager();
  uint64_t result = swift_initStaticObject();
  qword_D0D28 = result;
  return result;
}

void sub_4B744(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_86DF0();
    sub_32FAC(0, &qword_CC680);
    sub_32C74((unint64_t *)&qword_CC688, &qword_CC680);
    sub_86BD0();
    uint64_t v1 = v26[4];
    uint64_t v23 = v26[5];
    uint64_t v2 = v26[6];
    uint64_t v3 = v26[7];
    unint64_t v4 = v26[8];
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  int64_t v22 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v24 = v1;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
    goto LABEL_29;
  }
  int64_t v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 < v22)
    {
      unint64_t v15 = *(void *)(v23 + 8 * v14);
      uint64_t v11 = v3 + 1;
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v22) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v11);
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 3;
      if (v3 + 3 >= v22) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v11);
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 4;
      if (v3 + 4 >= v22) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v11);
      if (v15)
      {
LABEL_28:
        uint64_t v9 = (v15 - 1) & v15;
        unint64_t v10 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_29:
        id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v13)
        {
          while (1)
          {
            swift_beginAccess();
            id v17 = objc_getAssociatedObject(v13, &off_CCC18);
            swift_endAccess();
            if (v17)
            {
              sub_86DC0();
              swift_unknownObjectRelease();
            }
            else
            {
              memset(v25, 0, sizeof(v25));
            }
            sub_4C2FC((uint64_t)v25, (uint64_t)v26);
            if (v26[3])
            {
              type metadata accessor for HotReloadStatusHUD();
              if (swift_dynamicCast())
              {
                uint64_t v18 = v26[11];
                goto LABEL_38;
              }
            }
            else
            {
              sub_4C364((uint64_t)v26);
            }
            type metadata accessor for HotReloadStatusHUD();
            uint64_t v18 = swift_allocObject();
            *(_OWORD *)(v18 + 24) = xmmword_A11C0;
            *(_OWORD *)(v18 + 40) = xmmword_A11D0;
            *(void *)(v18 + 56) = 0;
            *(void *)(v18 + 64) = 0x3FB999999999999ALL;
            *(_WORD *)(v18 + 72) = 0;
            *(unsigned char *)(v18 + 74) = 0;
            *(void *)(v18 + 80) = &_swiftEmptyArrayStorage;
            id v19 = objc_allocWithZone((Class)type metadata accessor for HotReloadStatusHUDWindow());
            id v20 = v13;
            *(void *)(v18 + 16) = [v19 initWithWindowScene:v20];

            swift_beginAccess();
            swift_retain();
            objc_setAssociatedObject(v20, &off_CCC18, (id)v18, &stru_2E8.segname[9]);
            swift_endAccess();
            swift_release();
            uint64_t v1 = v24;
LABEL_38:
            char v21 = *(unsigned char *)(v18 + 73);
            swift_release();
            if (v21) {
              goto LABEL_41;
            }

            uint64_t v3 = v11;
            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            uint64_t v12 = sub_86E20();
            if (v12)
            {
              *(void *)&v25[0] = v12;
              sub_32FAC(0, &qword_CC680);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v13 = (id)v26[0];
              swift_unknownObjectRelease();
              uint64_t v11 = v3;
              uint64_t v9 = v4;
              if (v13) {
                continue;
              }
            }
            goto LABEL_41;
          }
        }
        goto LABEL_41;
      }
      uint64_t v11 = v3 + 5;
      if (v3 + 5 < v22)
      {
        unint64_t v15 = *(void *)(v23 + 8 * v11);
        if (!v15)
        {
          uint64_t v16 = v3 + 6;
          do
          {
            if (v22 == v16) {
              goto LABEL_41;
            }
            unint64_t v15 = *(void *)(v23 + 8 * v16++);
          }
          while (!v15);
          uint64_t v11 = v16 - 1;
        }
        goto LABEL_28;
      }
    }
LABEL_41:
    sub_32FE8();
    return;
  }
  __break(1u);
}

uint64_t sub_4BBD8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_86DF0();
    sub_32FAC(0, &qword_CC680);
    sub_32C74((unint64_t *)&qword_CC688, &qword_CC680);
    uint64_t result = sub_86BD0();
    uint64_t v1 = v26[4];
    uint64_t v24 = v26[5];
    uint64_t v3 = v26[6];
    uint64_t v4 = v26[7];
    unint64_t v5 = v26[8];
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v23 = (unint64_t)(v3 + 64) >> 6;
  while (v1 < 0)
  {
    uint64_t v17 = sub_86E20();
    if (!v17) {
      return sub_32FE8();
    }
    *(void *)&v25[0] = v17;
    sub_32FAC(0, &qword_CC680);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v18 = (id)v26[0];
    swift_unknownObjectRelease();
    uint64_t v16 = v4;
    uint64_t v14 = v5;
    if (!v18) {
      return sub_32FE8();
    }
LABEL_34:
    swift_beginAccess();
    id v22 = objc_getAssociatedObject(v18, &off_CCC18);
    swift_endAccess();
    if (v22)
    {
      sub_86DC0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v25, 0, sizeof(v25));
    }
    sub_4C2FC((uint64_t)v25, (uint64_t)v26);
    if (!v26[3])
    {
      sub_4C364((uint64_t)v26);
LABEL_9:
      type metadata accessor for HotReloadStatusHUD();
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 24) = xmmword_A11C0;
      *(_OWORD *)(v9 + 40) = xmmword_A11D0;
      *(void *)(v9 + 56) = 0;
      *(void *)(v9 + 64) = 0x3FB999999999999ALL;
      *(_WORD *)(v9 + 72) = 0;
      *(unsigned char *)(v9 + 74) = 0;
      *(void *)(v9 + 80) = &_swiftEmptyArrayStorage;
      id v10 = objc_allocWithZone((Class)type metadata accessor for HotReloadStatusHUDWindow());
      id v11 = v18;
      *(void *)(v9 + 16) = [v10 initWithWindowScene:v11];

      swift_beginAccess();
      swift_retain();
      objc_setAssociatedObject(v11, &off_CCC18, (id)v9, &stru_2E8.segname[9]);
      swift_endAccess();
      swift_release();
      goto LABEL_10;
    }
    type metadata accessor for HotReloadStatusHUD();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v18;
    id v13 = v18;
    sub_6348C((uint64_t *)sub_4C3FC, v12);

    swift_release();
    uint64_t result = swift_release();
    uint64_t v4 = v16;
    unint64_t v5 = v14;
  }
  if (v5)
  {
    uint64_t v14 = (v5 - 1) & v5;
    unint64_t v15 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v16 = v4;
LABEL_33:
    id v18 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    if (!v18) {
      return sub_32FE8();
    }
    goto LABEL_34;
  }
  int64_t v19 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v19 >= v23) {
      return sub_32FE8();
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    uint64_t v16 = v4 + 1;
    if (!v20)
    {
      uint64_t v16 = v4 + 2;
      if (v4 + 2 >= v23) {
        return sub_32FE8();
      }
      unint64_t v20 = *(void *)(v24 + 8 * v16);
      if (!v20)
      {
        uint64_t v16 = v4 + 3;
        if (v4 + 3 >= v23) {
          return sub_32FE8();
        }
        unint64_t v20 = *(void *)(v24 + 8 * v16);
        if (!v20)
        {
          uint64_t v16 = v4 + 4;
          if (v4 + 4 >= v23) {
            return sub_32FE8();
          }
          unint64_t v20 = *(void *)(v24 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v4 + 5;
            if (v4 + 5 >= v23) {
              return sub_32FE8();
            }
            unint64_t v20 = *(void *)(v24 + 8 * v16);
            if (!v20)
            {
              uint64_t v21 = v4 + 6;
              while (v23 != v21)
              {
                unint64_t v20 = *(void *)(v24 + 8 * v21++);
                if (v20)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_32;
                }
              }
              return sub_32FE8();
            }
          }
        }
      }
    }
LABEL_32:
    uint64_t v14 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_4C090(void *a1)
{
  return swift_endAccess();
}

uint64_t sub_4C0F0()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for HotReloadStatusHUDManager()
{
  return self;
}

void *sub_4C124()
{
  uint64_t v0 = sub_862D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_32FAC(0, (unint64_t *)&qword_CCE80);
  uint64_t *v3 = sub_86CB0();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = sub_862F0();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    uint64_t result = (void *)_sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
    if (result)
    {
      uint64_t v6 = result;
      id v7 = [result connectedScenes];
      sub_32FAC(0, &qword_CC660);
      sub_32C74(&qword_CC668, &qword_CC660);
      uint64_t v8 = sub_86BB0();

      sub_4B3E4(v8);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_7C3CC(v10);

      swift_bridgeObjectRelease();
      sub_4BBD8(v11);
      return (void *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_4C2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CCEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4C364(uint64_t a1)
{
  uint64_t v2 = sub_2D920(&qword_CCEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4C3C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_4C3FC()
{
  return sub_4C090(*(void **)(v0 + 16));
}

void *sub_4C404()
{
  uint64_t v0 = sub_862D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (uint64_t *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_32FAC(0, (unint64_t *)&qword_CCE80);
  uint64_t *v3 = sub_86CB0();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = sub_862F0();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    uint64_t result = (void *)_sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
    if (result)
    {
      uint64_t v6 = result;
      id v7 = [result connectedScenes];
      sub_32FAC(0, &qword_CC660);
      sub_32C74(&qword_CC668, &qword_CC660);
      uint64_t v8 = sub_86BB0();

      sub_4B3E4(v8);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_7C3CC(v10);

      swift_bridgeObjectRelease();
      sub_4B744(v11);
      id v13 = v12;
      swift_bridgeObjectRelease();
      if (v13)
      {

        return &dword_0 + 1;
      }
      else
      {
        return 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_4C5F4()
{
  qword_CCCC8 = 0x65696B6F6F43;
  unk_CCCD0 = 0xE600000000000000;
}

id RequestEncoder.__allocating_init(tokenService:bag:cookiesToSuppress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___JSARequestEncoder_cookiesToSuppress] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  id v8 = [super initWithTokenService:a1 bag:a2];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v8;
}

id RequestEncoder.init(tokenService:bag:cookiesToSuppress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___JSARequestEncoder_cookiesToSuppress] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for RequestEncoder();
  id v6 = [super initWithTokenService:a1 bag:a2];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t type metadata accessor for RequestEncoder()
{
  return self;
}

void sub_4C7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void *)&v2[OBJC_IVAR___JSARequestEncoder_cookiesToSuppress];
  swift_bridgeObjectRetain();
  Class v7 = sub_85C80();
  sub_4C9FC(a2, (uint64_t)aBlock);
  objc_super v8 = v20;
  if (v20)
  {
    unint64_t v9 = sub_494DC(aBlock, (uint64_t)v20);
    uint64_t v10 = *(v8 - 1);
    __chkstk_darwin(v9);
    uint64_t v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = sub_87060();
    (*(void (**)(char *, void *))(v10 + 8))(v12, v8);
    sub_3ED88((uint64_t)aBlock);
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = (objc_class *)type metadata accessor for RequestEncoder();
  v23.receiver = v3;
  v23.super_class = v14;
  id v15 = [super requestByEncodingRequest:v7 parameters:v13];

  swift_unknownObjectRelease();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v6;
  *(void *)(v16 + 24) = ObjectType;
  uint64_t v21 = sub_4CA9C;
  uint64_t v22 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_4CE54;
  unint64_t v20 = &unk_B4D00;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  id v18 = [v15 jsa_mapWithBlock:v17];
  _Block_release(v17);

  if (!v18) {
    __break(1u);
  }
}

uint64_t sub_4C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CCEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4CA64()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_4CA9C(void *a1)
{
  uint64_t v2 = sub_4D2C0(a1, *(void *)(v1 + 16));
  id v3 = v2;
  return v2;
}

uint64_t sub_4CACC(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_86230();
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    return 1;
  }
  uint64_t v27 = v7;
  uint64_t v28 = v6;
  uint64_t v29 = v2;
  uint64_t v12 = *a1;
  uint64_t v11 = (void *)a1[1];
  swift_bridgeObjectRetain();
  for (unint64_t i = (void **)(a2 + 40); ; i += 2)
  {
    uint64_t v14 = *i;
    v32._uint64_t countAndFlagsBits = (uint64_t)*(i - 1);
    v32._object = v14;
    swift_bridgeObjectRetain_n();
    v34._uint64_t countAndFlagsBits = 61;
    v34._object = (void *)0xE100000000000000;
    sub_86930(v34);
    BOOL v15 = sub_869B0(v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      break;
    }
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v27;
  uint64_t v17 = v28;
  if (qword_CC530 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_31DE4(v17, (uint64_t)qword_CD6D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v9, v19, v17);
  swift_bridgeObjectRetain_n();
  unint64_t v20 = sub_86210();
  os_log_type_t v21 = sub_86C10();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    v32._uint64_t countAndFlagsBits = v12;
    v32._object = v11;
    uint64_t v30 = 61;
    unint64_t v31 = 0xE100000000000000;
    sub_42240();
    objc_super v23 = (void *)sub_86D60();
    if (v23[2])
    {
      uint64_t v25 = v23[4];
      unint64_t v24 = v23[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v24 = 0xE900000000000029;
      uint64_t v25 = 0x6E776F6E6B6E7528;
    }
    swift_bridgeObjectRelease();
    v32._uint64_t countAndFlagsBits = sub_422E0(v25, v24, &v33);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v20, v21, "Suppressing cookie %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  }
  return 0;
}

id sub_4CE54(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3(a2);
  swift_release();

  return v5;
}

uint64_t sub_4CEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_4CED0()
{
  return swift_release();
}

id RequestEncoder.__allocating_init(tokenService:bag:)(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone(v2) initWithTokenService:a1 bag:a2];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3;
}

void RequestEncoder.init(tokenService:bag:)()
{
}

id RequestEncoder.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RequestEncoder();
  [super dealloc];
}

uint64_t method lookup function for RequestEncoder(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RequestEncoder);
}

uint64_t dispatch thunk of RequestEncoder.__allocating_init(tokenService:bag:cookiesToSuppress:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_4D15C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = a2;
    unint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(result + 40);
    uint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v15 = *(void *)(result + 16);
    while (v6 < *(void *)(v3 + 16))
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v10 = *v7;
      v17[0] = v9;
      v17[1] = v10;
      swift_bridgeObjectRetain();
      char v11 = sub_4CACC(v17, v5);
      if (v2)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_42F90(0, v8[2] + 1, 1);
          uint64_t v8 = v18;
        }
        unint64_t v13 = v8[2];
        unint64_t v12 = v8[3];
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_42F90(v12 > 1, v13 + 1, 1);
          uint64_t v8 = v18;
        }
        v8[2] = v13 + 1;
        uint64_t v14 = &v8[2 * v13];
        v14[4] = v9;
        v14[5] = v10;
        uint64_t v4 = v15;
        uint64_t v5 = a2;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v4 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  return result;
}

void *sub_4D2C0(void *a1, uint64_t a2)
{
  uint64_t v36 = sub_85D10();
  uint64_t v4 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a2;
  uint64_t v7 = sub_2D920(&qword_CCAD8);
  uint64_t v8 = sub_4D6D4(&qword_CCD08);
  if ((sub_86BF0() & 1) != 0 && a1)
  {
    if (qword_CC448 != -1) {
      swift_once();
    }
    NSString v9 = sub_86830();
    id v10 = [a1 valueForHTTPHeaderField:v9];

    if (v10)
    {
      uint64_t v34 = v4;
      uint64_t v35 = v8;
      uint64_t v11 = sub_86860();
      uint64_t v13 = v12;

      uint64_t v39 = v11;
      uint64_t v40 = v13;
      uint64_t v37 = (void *)(&stru_20 + 27);
      unint64_t v38 = 0xE100000000000000;
      sub_42240();
      uint64_t v14 = sub_86D60();
      swift_bridgeObjectRelease();
      int64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v31 = a2;
        uint64_t v32 = v7;
        uint64_t v33 = a1;
        uint64_t v37 = _swiftEmptyArrayStorage;
        sub_42F90(0, v15, 0);
        uint64_t v16 = (void (**)(char *, uint64_t))(v34 + 8);
        uint64_t v34 = v14;
        uint64_t v17 = (uint64_t *)(v14 + 40);
        do
        {
          uint64_t v18 = *v17;
          uint64_t v39 = *(v17 - 1);
          uint64_t v40 = v18;
          swift_bridgeObjectRetain();
          sub_85CF0();
          uint64_t v19 = sub_86D80();
          uint64_t v21 = v20;
          (*v16)(v6, v36);
          swift_bridgeObjectRelease();
          uint64_t v22 = v37;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_42F90(0, v22[2] + 1, 1);
            uint64_t v22 = v37;
          }
          unint64_t v24 = v22[2];
          unint64_t v23 = v22[3];
          if (v24 >= v23 >> 1)
          {
            sub_42F90(v23 > 1, v24 + 1, 1);
            uint64_t v22 = v37;
          }
          v17 += 2;
          v22[2] = v24 + 1;
          uint64_t v25 = &v22[2 * v24];
          v25[4] = v19;
          v25[5] = v21;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        a1 = v33;
        a2 = v31;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_4D15C((uint64_t)v22, a2);
      swift_bridgeObjectRelease();
      uint64_t v39 = v26;
      if (sub_86BF0())
      {
        uint64_t v39 = v26;
        sub_4D6D4((unint64_t *)&qword_CCAE8);
        sub_86820();
        swift_bridgeObjectRelease();
        NSString v27 = sub_86830();
        swift_bridgeObjectRelease();
        NSString v28 = sub_86830();
        [a1 setValue:v27 forHTTPHeaderField:v28];
      }
      else
      {
        swift_bridgeObjectRelease();
        NSString v28 = sub_86830();
        [a1 setValue:0 forHTTPHeaderField:v28];
      }
    }
  }
  return a1;
}

uint64_t sub_4D6D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2D964(&qword_CCAD8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Defaults.alwaysReloadJS.getter()
{
  return sub_4E0D4(&qword_CC480, (uint64_t)qword_CCDA0);
}

uint64_t static Defaults.launchWithBundleJS.getter()
{
  return sub_4E0D4(&qword_CC460, (uint64_t)qword_CCD40);
}

uint64_t static Defaults.allowUnsignedJetpack.getter()
{
  return sub_4E0D4(&qword_CC488, (uint64_t)qword_CCDB8);
}

uint64_t static Defaults.lastCachedBootURL.getter()
{
  return sub_4D81C(&qword_CC478, (uint64_t)qword_CCD88);
}

uint64_t static Defaults.lastCachedBootURL.setter(uint64_t a1, uint64_t a2)
{
  return sub_4E4E8(a1, a2, &qword_CC478, (uint64_t)qword_CCD88);
}

uint64_t static Defaults.loadBundledJetPackFromJSRoot.getter()
{
  return sub_4E0D4(&qword_CC490, (uint64_t)qword_CCDD0);
}

uint64_t static Defaults.bootURL.getter()
{
  return sub_4D81C(&qword_CC470, (uint64_t)qword_CCD70);
}

uint64_t sub_4D81C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CC838);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_31DE4(v4, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_86080();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_4D94C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_86940();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_86940();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_87070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_86940();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_86940();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t static Defaults.figaroTestingModeEnabled.getter()
{
  return sub_4E0D4(&qword_CC450, (uint64_t)qword_CCD10);
}

uint64_t static Defaults.figaroTestingModeEnabled.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC450, (uint64_t)qword_CCD10);
}

uint64_t (*static Defaults.figaroTestingModeEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC450 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCD10);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4DC30(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCD10, (SEL *)&selRef_bu_groupUserDefaults);
}

uint64_t static Defaults.hotReloadEnabled.getter()
{
  return sub_4E0D4(&qword_CC458, (uint64_t)qword_CCD28);
}

uint64_t static Defaults.hotReloadEnabled.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC458, (uint64_t)qword_CCD28);
}

uint64_t (*static Defaults.hotReloadEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC458 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCD28);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4DDD4(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCD28, (SEL *)&selRef_standardUserDefaults);
}

uint64_t static Defaults.launchWithBundleJS.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC460, (uint64_t)qword_CCD40);
}

uint64_t (*static Defaults.launchWithBundleJS.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC460 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCD40);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4DF54(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCD40, (SEL *)&selRef_standardUserDefaults);
}

uint64_t static Defaults.showDebugMenu.getter()
{
  return sub_4E0D4(&qword_CC468, (uint64_t)qword_CCD58);
}

uint64_t sub_4E0D4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CC7D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_31DE4(v4, a2);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_86080();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return v10[15];
}

uint64_t static Defaults.showDebugMenu.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC468, (uint64_t)qword_CCD58);
}

uint64_t (*static Defaults.showDebugMenu.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC468 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCD58);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4E490(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCD58, (SEL *)&selRef_standardUserDefaults);
}

uint64_t static Defaults.bootURL.setter(uint64_t a1, uint64_t a2)
{
  return sub_4E4E8(a1, a2, &qword_CC470, (uint64_t)qword_CCD70);
}

uint64_t sub_4E4E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_2D920(&qword_CC838);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_31DE4(v8, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v14[0] = a1;
  v14[1] = a2;
  sub_86090();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t (*static Defaults.bootURL.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC838);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC470 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCD70);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4E758(uint64_t a1)
{
  return sub_4E8CC(a1, qword_CCD70);
}

uint64_t (*static Defaults.lastCachedBootURL.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC838);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC478 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCD88);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4E8A8(uint64_t a1)
{
  return sub_4E8CC(a1, qword_CCD88);
}

uint64_t sub_4E8CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2D920(&qword_CC838);
  sub_3F910(v3, a2);
  sub_31DE4(v3, (uint64_t)a2);
  id v4 = [self bu_groupUserDefaults];
  sub_2D920(&qword_CCE28);
  return sub_860A0();
}

uint64_t static Defaults.alwaysReloadJS.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC480, (uint64_t)qword_CCDA0);
}

uint64_t (*static Defaults.alwaysReloadJS.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC480 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCDA0);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4EAD0(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCDA0, (SEL *)&selRef_bu_groupUserDefaults);
}

uint64_t static Defaults.allowUnsignedJetpack.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC488, (uint64_t)qword_CCDB8);
}

uint64_t (*static Defaults.allowUnsignedJetpack.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC488 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCDB8);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

uint64_t sub_4EC50(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCDB8, (SEL *)&selRef_bu_groupUserDefaults);
}

uint64_t static Defaults.loadBundledJetPackFromJSRoot.setter(char a1)
{
  return sub_4ECA0(a1, &qword_CC490, (uint64_t)qword_CCDD0);
}

uint64_t sub_4ECA0(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_2D920(&qword_CC7D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_31DE4(v6, a3);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v12[15] = a1 & 1;
  sub_86090();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t (*static Defaults.loadBundledJetPackFromJSRoot.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2D920(&qword_CC7D8);
  void v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_CC490 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_31DE4(v3, (uint64_t)qword_CCDD0);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_86070();
  return sub_4DC2C;
}

void sub_4EF10(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t sub_4EF88(uint64_t a1)
{
  return sub_4EFB4(a1, qword_CCDD0, (SEL *)&selRef_bu_groupUserDefaults);
}

uint64_t sub_4EFB4(uint64_t a1, uint64_t *a2, SEL *a3)
{
  uint64_t v5 = sub_2D920(&qword_CC7D8);
  sub_3F910(v5, a2);
  sub_31DE4(v5, (uint64_t)a2);
  id v6 = [self *a3];
  return sub_860A0();
}

uint64_t sub_4F060()
{
  uint64_t v0 = sub_2D920(&qword_CCE30);
  sub_3F910(v0, qword_CCDE8);
  sub_31DE4(v0, (uint64_t)qword_CCDE8);
  id v1 = [self standardUserDefaults];
  sub_2D920(&qword_CCE38);
  return sub_860A0();
}

id Defaults.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Defaults();
  return [super init];
}

id Defaults.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Defaults();
  [super dealloc];
}

uint64_t _s5JSApp8DefaultsC14bootURLIsLocalSbvgZ_0()
{
  uint64_t v0 = sub_2D920(&qword_CC838);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_CC470 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_31DE4(v0, (uint64_t)qword_CCD70);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v5(v3, v4, v0);
  sub_86080();
  id v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  if (v11 && (char v7 = sub_4D94C(), swift_bridgeObjectRelease(), (v7 & 1) != 0))
  {
    char v8 = 1;
  }
  else
  {
    v5(v3, v4, v0);
    sub_86080();
    v6(v3, v0);
    if (v11)
    {
      char v8 = sub_4D94C();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = 0;
    }
  }
  return v8 & 1;
}

uint64_t type metadata accessor for Defaults()
{
  return self;
}

uint64_t sub_4F3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  uint64_t v5 = sub_85EB0();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  sub_86AD0();
  v4[24] = sub_86AC0();
  uint64_t v7 = sub_86A90();
  v4[25] = v7;
  v4[26] = v6;
  return _swift_task_switch(sub_4F4E8, v7, v6);
}

uint64_t sub_4F4E8()
{
  uint64_t v30 = v0;
  uint64_t v1 = _sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
  v0[27] = v1;
  if (v1)
  {
    uint64_t v3 = (void *)v1;
    sub_85E40(v2);
    uint64_t v5 = v4;
    unsigned __int8 v6 = [v3 canOpenURL:v4];

    if (v6)
    {
      sub_85E40(v7);
      uint64_t v9 = v8;
      v0[28] = v8;
      sub_49E64((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_5CD3C(&qword_CC700, type metadata accessor for OpenExternalURLOptionsKey);
      Class isa = sub_867F0().super.isa;
      v0[29] = isa;
      swift_bridgeObjectRelease();
      v0[2] = v0;
      v0[7] = v0 + 30;
      v0[3] = sub_4F91C;
      uint64_t v11 = swift_continuation_init();
      v0[10] = _NSConcreteStackBlock;
      v0[11] = 0x40000000;
      v0[12] = sub_4FCD0;
      v0[13] = &unk_B5538;
      v0[14] = v11;
      [v3 jsa_openExternalURL:v9 options:isa completionHandler:v0 + 10];
      return _swift_continuation_await(v0 + 2);
    }
    swift_release();
    if (qword_CC4E8 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[21];
    uint64_t v12 = v0[22];
    uint64_t v15 = v0[19];
    uint64_t v14 = v0[20];
    uint64_t v16 = sub_86230();
    sub_31DE4(v16, (uint64_t)qword_CD600);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
    uint64_t v17 = sub_86210();
    os_log_type_t v18 = sub_86C30();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v21 = v0[21];
    uint64_t v20 = v0[22];
    uint64_t v22 = v0[20];
    if (v19)
    {
      uint64_t v28 = v0[20];
      uint64_t v23 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      v0[15] = sub_422E0(0xD000000000000013, 0x800000000009D5B0, &v29);
      sub_86D40();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v24 = sub_85E10();
      v0[16] = sub_422E0(v24, v25, &v29);
      sub_86D40();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v28);
      _os_log_impl(&dword_0, v17, v18, "%s cannot open %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_4F91C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  return _swift_task_switch(sub_4FA24, v2, v1);
}

uint64_t sub_4FA24()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 232);
  swift_release();
  char v3 = *(unsigned char *)(v0 + 240);

  if (v3)
  {
  }
  else
  {
    if (qword_CC4E8 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = sub_86230();
    sub_31DE4(v8, (uint64_t)qword_CD600);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    uint64_t v9 = sub_86210();
    os_log_type_t v10 = sub_86C30();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void **)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 168);
    if (v11)
    {
      uint64_t v20 = *(void *)(v0 + 160);
      uint64_t v21 = *(void **)(v0 + 216);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      *(void *)(v0 + 136) = sub_422E0(0xD000000000000013, 0x800000000009D5B0, &v22);
      sub_86D40();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v16 = sub_85E10();
      *(void *)(v0 + 144) = sub_422E0(v16, v17, &v22);
      sub_86D40();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
      _os_log_impl(&dword_0, v9, v10, "%s failed to handle %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v14 + 8))(*(void *)(v0 + 184), *(void *)(v0 + 160));
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_4FCD0(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return _swift_continuation_resume();
}

uint64_t sub_4FCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  uint64_t v23 = a3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v4 = sub_2D920(&qword_CD068);
  uint64_t v21 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_85EB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v4);
  sub_86AD0();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_86AC0();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + *(unsigned __int8 *)(v5 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  os_log_type_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v15;
  *((void *)v18 + 3) = &protocol witness table for MainActor;
  *((void *)v18 + 4) = v25;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v18[v17], v22, v21);
  *(void *)&v18[(v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8] = v20;
  sub_339CC((uint64_t)v13, (uint64_t)&unk_CD078, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_4FFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  void v7[4] = a4;
  void v7[5] = a5;
  uint64_t v8 = sub_2D920(&qword_CD068);
  uint8_t v7[8] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[9] = v9;
  v7[10] = *(void *)(v9 + 64);
  v7[11] = swift_task_alloc();
  uint64_t v10 = sub_85EB0();
  v7[12] = v10;
  v7[13] = *(void *)(v10 - 8);
  v7[14] = swift_task_alloc();
  sub_86AD0();
  v7[15] = sub_86AC0();
  uint64_t v12 = sub_86A90();
  return _swift_task_switch(sub_50140, v12, v11);
}

uint64_t sub_50140()
{
  receiver = (char *)v0[2].receiver;
  swift_release();
  if (receiver == (unsigned char *)&dword_0 + 3)
  {
    id v7 = [self defaultBag];
    id v8 = objc_allocWithZone((Class)AMSUIDynamicViewController);
    sub_85E40(v9);
    uint64_t v11 = v10;
    id v5 = [v8 initWithBag:v7 URL:v10];

    id v12 = [self sharedProvider];
    id v13 = [v12 activeStoreAccount];

    [v5 setAccount:v13];
    id v6 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v5];
    id v14 = [self jsa_topMostViewControllerForWindow:];
    [v14 present:v6 :1];
    sub_86AB0();

    goto LABEL_6;
  }
  if (receiver == (unsigned char *)&dword_0 + 2)
  {
    Class super_class = v0[6].super_class;
    id v15 = v0[7].receiver;
    id v17 = v0[6].receiver;
    Class v18 = v0[4].super_class;
    Class v38 = v0[5].super_class;
    Class v19 = v0[3].super_class;
    id v20 = v0[4].receiver;
    id v37 = v0[3].receiver;
    (*((void (**)(id, Class, id))super_class + 2))(v15, v0[2].super_class, v17);
    uint64_t v21 = (objc_class *)type metadata accessor for AccountPageViewController();
    uint64_t v22 = objc_allocWithZone(v21);
    uint64_t v23 = OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType;
    v22[OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType] = 0;
    uint64_t v24 = &v22[OBJC_IVAR____TtC5JSApp25AccountPageViewController_contentID];
    *uint64_t v24 = 0;
    v24[1] = 0;
    uint64_t v25 = &v22[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    *uint64_t v25 = 0;
    v25[1] = 0;
    v22[v23] = 0;
    *uint64_t v24 = 0;
    v24[1] = 0;
    swift_bridgeObjectRelease();
    sub_85E40(v26);
    uint64_t v28 = v27;
    v0[1].receiver = v22;
    v0[1].Class super_class = v21;
    uint64_t v29 = (char *)[v0 initWithAccountURL:v27];

    [v29 setDelegate:v29];
    (*((void (**)(id, id))super_class + 1))(v15, v17);
    (*((void (**)(Class, id, id))v18 + 2))(v38, v37, v20);
    unint64_t v30 = (*((unsigned __int8 *)v18 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v18 + 80);
    uint64_t v31 = swift_allocObject();
    (*((void (**)(unint64_t, Class, id))v18 + 4))(v31 + v30, v38, v20);
    uint64_t v32 = &v29[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    uint64_t v33 = *(void *)&v29[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    *(void *)uint64_t v32 = sub_5C790;
    *((void *)v32 + 1) = v31;
    sub_31BA8(v33);
    if (v19) {
      Class v34 = v19;
    }
    else {
      Class v34 = (Class)&_swiftEmptyDictionarySingleton;
    }
    swift_bridgeObjectRetain();
    _sSo16UIViewControllerC5JSAppE7present_7options8animated10completionyAB_SDys11AnyHashableVypGSbyycSgtFZ_0(v29, (uint64_t)v34, 1, 0, 0);

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (receiver == (unsigned char *)&dword_0 + 1)
  {
    uint64_t v2 = (uint64_t)v0[7].receiver;
    (*((void (**)(uint64_t, Class, id))v0[6].super_class + 2))(v2, v0[2].super_class, v0[6].receiver);
    id v3 = objc_allocWithZone((Class)type metadata accessor for WebViewController());
    id v4 = sub_812D4(v2);
    id v5 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v4];

    [self jsa_topMostViewControllerForWindow:];
    [v6 present:v5 :1];
    sub_86AB0();
LABEL_6:

    goto LABEL_12;
  }
  sub_86AB0();
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0->super_class;
  return v35();
}

id sub_505A0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for AccountController()) init];
  qword_CCE40 = (uint64_t)result;
  return result;
}

uint64_t AccountController.add(observer:)(uint64_t a1)
{
  id v3 = *(NSObject **)&v1[OBJC_IVAR___JSAAccountController_observerQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_507E4;
  *(void *)(v5 + 24) = v4;
  void v10[4] = sub_507FC;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_2E904;
  v10[3] = &unk_B4D78;
  id v6 = _Block_copy(v10);
  id v7 = v1;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_50740(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR___JSAAccountController_observers);
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_86A00();
  if (*(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                 + (*v1 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_86A60();
  sub_86A80();
  sub_86A50();
  return swift_endAccess();
}

uint64_t sub_507E4()
{
  return sub_50740(*(void *)(v0 + 16));
}

uint64_t sub_507EC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_507FC()
{
  return sub_2E8A4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_50804(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_50814()
{
  return swift_release();
}

uint64_t AccountController.remove(observer:)(uint64_t a1)
{
  id v3 = *(NSObject **)&v1[OBJC_IVAR___JSAAccountController_observerQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_50A78;
  *(void *)(v5 + 24) = v4;
  void v10[4] = sub_5DAC0;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_2E904;
  v10[3] = &unk_B4DF0;
  id v6 = _Block_copy(v10);
  id v7 = v1;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_5099C(uint64_t a1, uint64_t a2)
{
  id v3 = (uint64_t *)(a1 + OBJC_IVAR___JSAAccountController_observers);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v4 = sub_5AA80(v3, a2);
  uint64_t result = swift_unknownObjectRelease();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_86F80();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 >= v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
    if (v6 >= v4)
    {
LABEL_3:
      sub_703B4(v4, v6);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_50A78()
{
  return sub_5099C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_50A80()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_50AA8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);

  return swift_unknownObjectRelease();
}

uint64_t AccountController.signIn(enableAccountCreation:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  return _swift_task_switch(sub_50B30, 0, 0);
}

uint64_t sub_50B30()
{
  if (*(unsigned char *)(v0 + 64) == 1)
  {
    id v1 = [objc_allocWithZone((Class)AMSAuthenticateOptions) init];
    uint64_t v2 = v1;
    if (v1) {
      [v1 setEnableAccountCreation:1];
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(void *)(v0 + 24) = v2;
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  void *v4 = v0;
  v4[1] = sub_50C30;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[11] = v2;
  v4[12] = v5;
  return _swift_task_switch(sub_50E70, 0, 0);
}

uint64_t sub_50C30(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 40) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = sub_50DE4;
  }
  else
  {

    *(void *)(v8 + 48) = a3;
    *(void *)(v8 + 56) = a2;
    *(unsigned char *)(v8 + 65) = a1 & 1;
    uint64_t v9 = sub_50D78;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_50D78()
{
  id v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 65);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  return v1(v2, v3, v4);
}

uint64_t sub_50DE4()
{
  id v1 = *(void **)(v0 + 24);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_50E50(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return _swift_task_switch(sub_50E70, 0, 0);
}

uint64_t sub_50E70()
{
  unsigned int v1 = [[self sharedInstance] isAccountModificationAllowed];
  swift_unknownObjectRelease();
  if (v1)
  {
    uint64_t v2 = (char *)v0[12];
    uint64_t v3 = *(NSObject **)&v2[OBJC_IVAR___JSAAccountController_observerQueue];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_5D684;
    *(void *)(v5 + 24) = v4;
    v0[6] = sub_5DAC0;
    v0[7] = v5;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_2E904;
    v0[5] = &unk_B5798;
    uint64_t v6 = _Block_copy(v0 + 2);
    uint64_t v7 = v2;
    swift_retain();
    swift_release();
    dispatch_sync(v3, v6);
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t v8 = swift_release();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = v0[11];
      id v17 = self;
      id v18 = [v17 sharedProvider];
      id v19 = [v18 activeStoreAccount];

      id v20 = [objc_allocWithZone((Class)AMSAuthenticateRequest) initWithAccount:v19 options:v16];
      v0[13] = v20;

      id v21 = [v17 sharedProvider];
      id v22 = [v21 currentStorefront];

      if (v22)
      {
        uint64_t v23 = sub_86860();
        uint64_t v25 = v24;
      }
      else
      {
        uint64_t v23 = 0;
        uint64_t v25 = 0;
      }
      v0[14] = v25;
      uint64_t v28 = v0[12];
      uint64_t v29 = (void *)swift_task_alloc();
      v0[15] = v29;
      v29[2] = v20;
      v29[3] = v28;
      v29[4] = v23;
      v29[5] = v25;
      unint64_t v30 = (void *)swift_task_alloc();
      v0[16] = v30;
      uint64_t v15 = sub_2D920(&qword_CD120);
      void *v30 = v0;
      v30[1] = sub_51204;
      id v13 = sub_5D6B8;
      uint64_t v8 = (uint64_t)(v0 + 8);
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0x77286E496E676973;
      unint64_t v12 = 0xED0000293A687469;
      id v14 = v29;
    }
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    uint64_t v26 = (uint64_t (*)(void, void, unint64_t))v0[1];
    return v26(0, 0, 0xE000000000000000);
  }
}

uint64_t sub_51204()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_51394;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_51328;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_51328()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v2, v3);
}

uint64_t sub_51394()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_51588(char a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  id v6 = a3;
  uint64_t v7 = swift_task_alloc();
  void v3[4] = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_5165C;
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 64) = a1;
  return _swift_task_switch(sub_50B30, 0, 0);
}

uint64_t sub_5165C(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 16);
  uint64_t v6 = *v2;
  swift_task_dealloc();

  uint64_t v7 = *(void (***)(void, void, void, void))(v4 + 24);
  if (v1)
  {
    uint64_t v8 = (void *)sub_85DC0();
    swift_errorRelease();
    ((void (**)(void, void, void, void *))v7)[2](v7, 0, 0, v8);

    _Block_release(v7);
  }
  else
  {
    NSString v9 = sub_86830();
    ((void (**)(void, void, NSString, void))v7)[2](v7, a1 & 1, v9, 0);

    _Block_release(v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v6 + 8);
  return v10();
}

uint64_t AccountController.signOut()()
{
  *(void *)(v1 + 64) = v0;
  return _swift_task_switch(sub_5184C, 0, 0);
}

uint64_t sub_5184C()
{
  id v1 = objc_msgSend(objc_msgSend(self, "sharedInstance"), "isAccountModificationAllowed");
  swift_unknownObjectRelease();
  if (v1
    && (id v2 = [self sharedProvider],
        id v3 = [v2 activeStoreAccount],
        v0[9] = v3,
        v2,
        v3))
  {
    uint64_t v4 = (char *)v0[8];
    uint64_t v5 = *(NSObject **)&v4[OBJC_IVAR___JSAAccountController_observerQueue];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_58B48;
    *(void *)(v7 + 24) = v6;
    v0[6] = sub_5DAC0;
    v0[7] = v7;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_2E904;
    v0[5] = &unk_B4E68;
    uint64_t v8 = _Block_copy(v0 + 2);
    NSString v9 = v4;
    swift_retain();
    swift_release();
    dispatch_sync(v5, v8);
    _Block_release(v8);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t v10 = swift_release();
    if (v5)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = v0[8];
      uint64_t v19 = swift_task_alloc();
      v0[10] = v19;
      *(void *)(v19 + 16) = v3;
      *(void *)(v19 + 24) = v18;
      id v20 = (void *)swift_task_alloc();
      v0[11] = v20;
      *id v20 = v0;
      v20[1] = sub_51B44;
      id v17 = &type metadata for Bool;
      uint64_t v15 = sub_58B7C;
      uint64_t v10 = (uint64_t)(v0 + 12);
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0x2874754F6E676973;
      unint64_t v14 = 0xE900000000000029;
      uint64_t v16 = v19;
    }
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    id v21 = (uint64_t (*)(id))v0[1];
    return v21(v1);
  }
}

uint64_t sub_51B44()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_51C5C, 0, 0);
}

uint64_t sub_51C5C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 96);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_51CC0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_2D920(&qword_CD118);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a2 bu_signOut];
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_5D5EC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_52340;
  void aBlock[3] = &unk_B56A8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [v7 addFinishBlock:v11];
  _Block_release(v11);
}

void sub_51EB4(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v6 = sub_86230();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    int v26 = a1;
    uint64_t v12 = *(NSObject **)(Strong + OBJC_IVAR___JSAAccountController_observerQueue);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v11;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_5DB4C;
    *(void *)(v14 + 24) = v13;
    aBlock[4] = (uint64_t)sub_5DAC0;
    aBlock[5] = v14;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2E904;
    void aBlock[3] = (uint64_t)&unk_B5720;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    id v16 = v11;
    swift_release();
    dispatch_sync(v12, v15);
    _Block_release(v15);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v12)
    {
      __break(1u);
    }
    else
    {
      if (!a2)
      {
LABEL_8:
        LOBYTE(aBlock[0]) = v26 & 1;
        sub_2D920(&qword_CD118);
        sub_86AB0();

        return;
      }
      swift_errorRetain();
      if (qword_CC4E8 == -1)
      {
LABEL_5:
        uint64_t v17 = sub_31DE4(v6, (uint64_t)qword_CD600);
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v18 = sub_86210();
        os_log_type_t v19 = sub_86C30();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = swift_slowAlloc();
          uint64_t v25 = v7;
          uint64_t v21 = v20;
          uint64_t v24 = swift_slowAlloc();
          aBlock[0] = v24;
          *(_DWORD *)uint64_t v21 = 136315394;
          uint64_t v28 = sub_422E0(0x2874754F6E676973, 0xE900000000000029, aBlock);
          sub_86D40();
          *(_WORD *)(v21 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v22 = sub_870C0();
          uint64_t v28 = sub_422E0(v22, v23, aBlock);
          sub_86D40();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl(&dword_0, v18, v19, "%s Unable to sign out due to %s", (uint8_t *)v21, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();

          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        goto LABEL_8;
      }
    }
    swift_once();
    goto LABEL_5;
  }
}

void sub_52340(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t AccountController.presentGiftViewController(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_523DC, 0, 0);
}

uint64_t sub_523DC()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_524E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000024, 0x800000000009D240, sub_58B84, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_524E4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_52618, 0, 0);
}

uint64_t sub_52618()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_5262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a2;
  uint64_t v7 = sub_2D920(&qword_CD068);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_86AD0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_86AC0();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v15;
  *((void *)v18 + 3) = &protocol witness table for MainActor;
  *((void *)v18 + 4) = v21;
  *((void *)v18 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  *(void *)&v18[v17] = a4;
  sub_339CC((uint64_t)v13, (uint64_t)&unk_CD110, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_52850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  void v7[4] = a4;
  void v7[5] = a5;
  uint64_t v8 = sub_2D920(&qword_CD068);
  uint8_t v7[8] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[9] = v9;
  v7[10] = *(void *)(v9 + 64);
  v7[11] = swift_task_alloc();
  sub_2D920((uint64_t *)&unk_CD040);
  v7[12] = swift_task_alloc();
  uint64_t v10 = sub_85EB0();
  v7[13] = v10;
  v7[14] = *(void *)(v10 - 8);
  v7[15] = swift_task_alloc();
  v7[16] = swift_task_alloc();
  sub_86AD0();
  v7[17] = sub_86AC0();
  uint64_t v12 = sub_86A90();
  return _swift_task_switch(sub_529F0, v12, v11);
}

uint64_t sub_529F0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  swift_release();
  sub_86860();
  sub_85E80();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 32);
    unint64_t v6 = *(void *)(v0 + 40);
    (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v7) {
      sub_85E50(*(Swift::String *)(v0 + 32));
    }
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 104);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v31 = *(void *)(v0 + 88);
    uint64_t v32 = *(void **)(v0 + 56);
    uint64_t v29 = *(void *)(v0 + 48);
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v11 = *(void *)(v0 + 120);
    (*(void (**)(void))(v8 + 16))();
    uint64_t v12 = (objc_class *)type metadata accessor for AccountPageViewController();
    uint64_t v13 = objc_allocWithZone(v12);
    uint64_t v14 = OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType;
    v13[OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType] = 0;
    uint64_t v15 = &v13[OBJC_IVAR____TtC5JSApp25AccountPageViewController_contentID];
    *uint64_t v15 = 0;
    v15[1] = 0;
    unint64_t v16 = &v13[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    void *v16 = 0;
    v16[1] = 0;
    v13[v14] = 1;
    *uint64_t v15 = v10;
    v15[1] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_85E40(v17);
    os_log_type_t v19 = v18;
    *(void *)(v0 + 16) = v13;
    *(void *)(v0 + 24) = v12;
    uint64_t v20 = (char *)[v0 initWithAccountURL:v18];

    [v20 setDelegate:v20];
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v21(v11, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v31, v29, v30);
    unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v23 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v23 + v22, v31, v30);
    uint64_t v24 = &v20[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    uint64_t v25 = *(void *)&v20[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    *(void *)uint64_t v24 = sub_5C790;
    *((void *)v24 + 1) = v23;
    sub_31BA8(v25);
    if (v32) {
      int v26 = v32;
    }
    else {
      int v26 = &_swiftEmptyDictionarySingleton;
    }
    swift_bridgeObjectRetain();
    _sSo16UIViewControllerC5JSAppE7present_7options8animated10completionyAB_SDys11AnyHashableVypGSbyycSgtFZ_0(v20, (uint64_t)v26, 1, 0, 0);

    swift_bridgeObjectRelease();
    v21(v33, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  return result;
}

uint64_t sub_52EAC(int a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_86860();
  uint64_t v9 = v8;
  if (a2) {
    uint64_t v10 = sub_86800();
  }
  else {
    uint64_t v10 = 0;
  }
  v4[4] = v10;
  v4[5] = v9;
  v4[6] = v7;
  id v11 = a4;
  return _swift_task_switch(sub_52F80, 0, 0);
}

uint64_t sub_52F80()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_53088;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000024, 0x800000000009D240, sub_5DAC8, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_53088()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_531BC, 0, 0);
}

uint64_t sub_531BC()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = (void (**)(void))v0[3];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t AccountController.presentRedeemViewController(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_53270, 0, 0);
}

uint64_t sub_53270()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_53378;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000026, 0x800000000009D270, sub_58B90, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_53378()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_5DB60, 0, 0);
}

uint64_t sub_534AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a2;
  uint64_t v7 = sub_2D920(&qword_CD068);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_86AD0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_86AC0();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v15;
  *((void *)v18 + 3) = &protocol witness table for MainActor;
  *((void *)v18 + 4) = v21;
  *((void *)v18 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  *(void *)&v18[v17] = a4;
  sub_339CC((uint64_t)v13, (uint64_t)&unk_CD100, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_536D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  void v7[4] = a4;
  void v7[5] = a5;
  uint64_t v8 = sub_2D920(&qword_CD068);
  uint8_t v7[8] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[9] = v9;
  v7[10] = *(void *)(v9 + 64);
  v7[11] = swift_task_alloc();
  sub_2D920((uint64_t *)&unk_CD040);
  v7[12] = swift_task_alloc();
  uint64_t v10 = sub_85EB0();
  v7[13] = v10;
  v7[14] = *(void *)(v10 - 8);
  v7[15] = swift_task_alloc();
  v7[16] = swift_task_alloc();
  sub_86AD0();
  v7[17] = sub_86AC0();
  uint64_t v12 = sub_86A90();
  return _swift_task_switch(sub_53870, v12, v11);
}

uint64_t sub_53870()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  swift_release();
  sub_86860();
  sub_85E80();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 40);
    (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 96), *(void *)(v0 + 104));
    unint64_t v6 = *(void *)(v0 + 40);
    if (v5)
    {
      v7._uint64_t countAndFlagsBits = *(void *)(v0 + 32);
      uint64_t v8 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v8 = v7._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
      }
      if (v8)
      {
        v7._object = *(void **)(v0 + 40);
        sub_85E50(v7);
        unint64_t v6 = *(void *)(v0 + 40);
      }
    }
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v34 = *(void *)(v0 + 128);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v32 = *(void *)(v0 + 88);
    uint64_t v33 = *(void **)(v0 + 56);
    uint64_t v30 = *(void *)(v0 + 48);
    uint64_t v31 = *(void *)(v0 + 64);
    uint64_t v13 = *(void *)(v0 + 32);
    (*(void (**)(uint64_t))(v10 + 16))(v9);
    uint64_t v14 = (objc_class *)type metadata accessor for AccountPageViewController();
    uint64_t v15 = objc_allocWithZone(v14);
    uint64_t v16 = OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType;
    v15[OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType] = 0;
    unint64_t v17 = &v15[OBJC_IVAR____TtC5JSApp25AccountPageViewController_contentID];
    *unint64_t v17 = 0;
    v17[1] = 0;
    uint64_t v18 = &v15[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    void *v18 = 0;
    v18[1] = 0;
    v15[v16] = 2;
    *unint64_t v17 = v13;
    v17[1] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_85E40(v19);
    uint64_t v21 = v20;
    *(void *)(v0 + 16) = v15;
    *(void *)(v0 + 24) = v14;
    unint64_t v22 = (char *)objc_msgSendSuper2((objc_super *)(v0 + 16), "initWithAccountURL:", v20);

    [v22 setDelegate:v22];
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v23(v9, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v32, v30, v31);
    unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v25 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v25 + v24, v32, v31);
    int v26 = &v22[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    uint64_t v27 = *(void *)&v22[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    *(void *)int v26 = sub_5C790;
    *((void *)v26 + 1) = v25;
    sub_31BA8(v27);
    if (v33) {
      uint64_t v28 = v33;
    }
    else {
      uint64_t v28 = &_swiftEmptyDictionarySingleton;
    }
    swift_bridgeObjectRetain();
    _sSo16UIViewControllerC5JSAppE7present_7options8animated10completionyAB_SDys11AnyHashableVypGSbyycSgtFZ_0(v22, (uint64_t)v28, 1, 0, 0);

    swift_bridgeObjectRelease();
    v23(v34, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
  return result;
}

uint64_t sub_53D38(uint64_t a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  if (a1)
  {
    v4[4] = sub_86860();
    v4[5] = v8;
    if (a2)
    {
LABEL_3:
      uint64_t v9 = sub_86800();
      goto LABEL_6;
    }
  }
  else
  {
    v4[4] = 0;
    v4[5] = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  v4[6] = v9;
  id v10 = a4;
  return _swift_task_switch(sub_53E18, 0, 0);
}

uint64_t sub_53E18()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_53F20;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000026, 0x800000000009D270, sub_5DAC4, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_53F20()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_54054, 0, 0);
}

uint64_t sub_54054()
{
  uint64_t v1 = *(void (***)(void))(v0 + 24);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id AccountController.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_86CA0();
  uint64_t v1 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_86C80();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_862A0();
  __chkstk_darwin(v5 - 8);
  *(void *)&v0[OBJC_IVAR___JSAAccountController_observers] = _swiftEmptyArrayStorage;
  uint64_t v9 = OBJC_IVAR___JSAAccountController_observerQueue;
  v8[1] = sub_3F6C8();
  unint64_t v6 = v0;
  sub_86270();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_5CD3C(&qword_CC590, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_2D920((uint64_t *)&unk_CCE90);
  sub_2DCCC(&qword_CC598, (uint64_t *)&unk_CCE90);
  sub_86DD0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10);
  *(void *)&v0[v9] = sub_86CD0();

  v12.receiver = v6;
  v12.Class super_class = ObjectType;
  return [super init];
}

id _s5JSApp17AccountControllerC6sharedACvgZ_0()
{
  if (qword_CC4A0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_CCE40;

  return v0;
}

Swift::Void __swiftcall AccountController.openIForgot()()
{
}

uint64_t sub_544F0()
{
  uint64_t v1 = sub_86230();
  v0[23] = v1;
  v0[24] = *(void *)(v1 - 8);
  v0[25] = swift_task_alloc();
  sub_2D920(&qword_CCEA0);
  v0[26] = swift_task_alloc();
  uint64_t v2 = sub_85EB0();
  v0[27] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[28] = v3;
  v0[29] = *(void *)(v3 + 64);
  v0[30] = swift_task_alloc();
  v0[31] = swift_task_alloc();
  return _swift_task_switch(sub_54650, 0, 0);
}

uint64_t sub_54650()
{
  id v1 = [self defaultBag];
  id v2 = [v1 forgottenPassword];
  v0[32] = v2;

  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_54798;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_54D60;
  v0[13] = &unk_B55A0;
  v0[14] = v3;
  [v2 jsa_valueWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_54798()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 264) = v1;
  if (v1) {
    id v2 = sub_54A6C;
  }
  else {
    id v2 = sub_548A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_548A8()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 208);
  unint64_t v6 = *(void **)(v0 + 144);

  sub_85E60();
  uint64_t v7 = sub_86B10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_86AD0();
  uint64_t v8 = sub_86AC0();
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v9, v2, v3);
  sub_339CC(v5, (uint64_t)&unk_CD0F0, v10);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_54A6C()
{
  os_log_type_t v19 = v0;
  uint64_t v1 = (void *)v0[32];
  swift_willThrow();

  if (qword_CC4E8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = sub_31DE4(v2, (uint64_t)qword_CD600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v5, v2);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = sub_86210();
  os_log_type_t v7 = sub_86C30();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[24];
  uint64_t v9 = v0[25];
  uint64_t v11 = v0[23];
  if (v8)
  {
    uint64_t v17 = v0[25];
    uint64_t v12 = swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    v0[21] = sub_422E0(0x726F46496E65706FLL, 0xED00002928746F67, v18);
    sub_86D40();
    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_870C0();
    v0[22] = sub_422E0(v13, v14, v18);
    sub_86D40();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v6, v7, "%s Unable to retrieve forgottenPassword from AMSBag due to %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v11);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

Swift::Void __swiftcall AccountController.openTermsAndConditions()()
{
}

uint64_t sub_54E04()
{
  sub_2D920(&qword_CCEA0);
  v0[23] = swift_task_alloc();
  sub_2D920((uint64_t *)&unk_CD040);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  uint64_t v1 = sub_85EB0();
  v0[26] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[27] = v2;
  v0[28] = *(void *)(v2 + 64);
  v0[29] = swift_task_alloc();
  v0[30] = swift_task_alloc();
  return _swift_task_switch(sub_54F48, 0, 0);
}

uint64_t sub_54F48()
{
  id v1 = [self defaultBag];
  id v2 = [v1 p2ServiceTermsURL];
  v0[31] = v2;

  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_55090;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_54D60;
  v0[13] = &unk_B54F8;
  v0[14] = v3;
  [v2 jsa_valueWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_55090()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 256) = v1;
  if (v1) {
    id v2 = sub_553CC;
  }
  else {
    id v2 = sub_551A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_551A0()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void **)(v0 + 144);

  sub_86860();
  sub_85E80();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {

    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v17 = v10;
    uint64_t v11 = *(void (**)(uint64_t))(v8 + 32);
    v11(v7);
    uint64_t v12 = sub_86B10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
    sub_86AD0();
    uint64_t v13 = sub_86AC0();
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v13;
    *(void *)(v15 + 24) = &protocol witness table for MainActor;
    ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v15 + v14, v6, v9);
    sub_339CC(v17, (uint64_t)&unk_CD0C0, v15);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  return result;
}

uint64_t sub_553CC()
{
  uint64_t v25 = v0;
  uint64_t v1 = (void *)v0[31];
  swift_willThrow();

  if (qword_CC4E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_86230();
  sub_31DE4(v2, (uint64_t)qword_CD600);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_86210();
  os_log_type_t v4 = sub_86C30();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    v0[21] = sub_422E0(0xD000000000000018, 0x800000000009D590, v24);
    sub_86D40();
    *(_WORD *)(v5 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v6 = sub_870C0();
    v0[22] = sub_422E0(v6, v7, v24);
    sub_86D40();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v3, v4, "%s Unable to retrieve p2ServiceTermsURL from AMSBag due to %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = v0[26];
  uint64_t v9 = v0[27];
  uint64_t v10 = v0[24];
  sub_85E80();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_errorRelease();
    uint64_t v12 = v0[29];
    uint64_t v13 = v0[30];
    uint64_t v14 = v0[27];
    uint64_t v15 = v0[26];
    uint64_t v16 = v0[23];
    uint64_t v23 = v16;
    uint64_t v17 = *(void (**)(uint64_t))(v14 + 32);
    v17(v13);
    uint64_t v18 = sub_86B10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v13, v15);
    sub_86AD0();
    uint64_t v19 = sub_86AC0();
    unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = &protocol witness table for MainActor;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v21 + v20, v12, v15);
    sub_339CC(v23, (uint64_t)&unk_CD0C0, v21);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  return result;
}

uint64_t sub_557E8(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_2D920(&qword_CD0D0);
    uint64_t v6 = swift_allocError();
    *unint64_t v7 = a4;
    id v8 = a4;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  else
  {
    if (a2)
    {
      uint64_t v9 = *(void *)(*(void *)(v4 + 64) + 40);
      *(void *)uint64_t v9 = a2;
      *(unsigned char *)(v9 + 8) = a3;
      id v10 = a2;
      a1 = v4;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

Swift::Void __swiftcall AccountController.presentGiftViewController(for:_:_:)(Swift::String_optional a1, JSValue _, Swift::OpaquePointer_optional a3)
{
  rawValue = (objc_class *)a3.value._rawValue;
  object = (objc_class *)a1.value._object;
  uint64_t countAndFlagsBits = a1.value._countAndFlagsBits;
  uint64_t v8 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!object) {
    goto LABEL_6;
  }
  uint64_t v11 = ((unint64_t)object >> 56) & 0xF;
  if (((unint64_t)object & 0x2000000000000000) == 0) {
    uint64_t v11 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    uint64_t v12 = sub_86B10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
    uint64_t v13 = (JSValue *)swift_allocObject();
    v13[2].super.Class isa = 0;
    v13[3].super.Class isa = 0;
    v13[4].super.Class isa = v3;
    v13[5].super.Class isa = (Class)countAndFlagsBits;
    v13[6].super.Class isa = object;
    v13[7].super.Class isa = rawValue;
    v13[8].super.Class isa = _.super.isa;
    swift_bridgeObjectRetain();
    uint64_t v14 = v3;
    uint64_t v15 = _.super.isa;
    swift_bridgeObjectRetain();
    sub_339CC((uint64_t)v10, (uint64_t)&unk_CCEB0, (uint64_t)v13);
    swift_release();
  }
  else
  {
LABEL_6:
    id v16 = [self sharedInstance];
    NSString v19 = sub_86830();
    [v16 enqueueValueCall:_.super.isa arguments:0 file:v19 line:368];

    uint64_t v17 = v19;
  }
}

uint64_t sub_55AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[4] = a7;
  void v8[5] = a8;
  void v8[2] = a5;
  v8[3] = a6;
  return _swift_task_switch(sub_55B08, 0, 0);
}

uint64_t sub_55B08()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_55C10;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000024, 0x800000000009D240, sub_5DAC8, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_55C10()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_55D44, 0, 0);
}

uint64_t sub_55D44()
{
  uint64_t v1 = *(void *)(v0 + 40);
  id v2 = [self sharedInstance];
  NSString v3 = sub_86830();
  [v2 enqueueValueCall:v1 arguments:0 file:v3 line:374];

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

Swift::Void __swiftcall AccountController.presentRedeemViewController(for:_:_:)(JSValue a1, Swift::OpaquePointer_optional _, JSValue a3)
{
  uint64_t v4 = *(objc_class **)&_.is_nil;
  rawValue = (objc_class *)_.value._rawValue;
  uint64_t v7 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (JSValue *)swift_allocObject();
  v11[2].super.Class isa = 0;
  v11[3].super.Class isa = 0;
  v11[4].super.Class isa = a1.super.isa;
  v11[5].super.Class isa = v3;
  v11[6].super.Class isa = rawValue;
  v11[7].super.Class isa = v4;
  swift_bridgeObjectRetain();
  uint64_t v12 = a1.super.isa;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  sub_339CC((uint64_t)v9, (uint64_t)&unk_CCEC0, (uint64_t)v11);
  swift_release();
}

uint64_t sub_56004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  uint8_t v7[8] = a4;
  v7[9] = a5;
  return _swift_task_switch(sub_56028, 0, 0);
}

uint64_t sub_56028()
{
  if ([*(id *)(v0 + 64) isString]
    && (id v1 = [*(id *)(v0 + 64) toString]) != 0)
  {
    id v2 = v1;
    uint64_t v3 = sub_86860();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 96) = v5;
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  v7[2] = v3;
  v7[3] = v5;
  void v7[4] = v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_56180;
  return withCheckedContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000026, 0x800000000009D270, sub_5DAC4, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_56180()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_562B4, 0, 0);
}

uint64_t sub_562B4()
{
  uint64_t v1 = (char *)v0[9];
  swift_bridgeObjectRelease();
  id v2 = *(NSObject **)&v1[OBJC_IVAR___JSAAccountController_observerQueue];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_5CA7C;
  *(void *)(v4 + 24) = v3;
  v0[6] = sub_5DAC0;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_2E904;
  v0[5] = &unk_B5480;
  uint64_t v5 = _Block_copy(v0 + 2);
  uint64_t v6 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v0[11];
    id v9 = [self sharedInstance];
    NSString v10 = sub_86830();
    [v9 enqueueValueCall:v8 arguments:0 file:v10 line:384];

    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  return result;
}

Swift::Void __swiftcall AccountController.viewAppleID(_:_:)(JSValue a1, Swift::OpaquePointer_optional a2)
{
  rawValue = (objc_class *)a2.value._rawValue;
  uint64_t v4 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (JSValue *)swift_allocObject();
  v8[2].super.Class isa = 0;
  v8[3].super.Class isa = 0;
  v8[4].super.Class isa = rawValue;
  v8[5].super.Class isa = a1.super.isa;
  swift_bridgeObjectRetain();
  id v9 = a1.super.isa;
  sub_339CC((uint64_t)v6, (uint64_t)&unk_CCED0, (uint64_t)v8);
  swift_release();
}

uint64_t sub_56750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_56770, 0, 0);
}

uint64_t sub_56770()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  void *v3 = v0;
  v3[1] = sub_5685C;
  return withCheckedContinuation<A>(isolation:function:_:)(v3, 0, 0, 0xD000000000000011, 0x800000000009D510, sub_5C85C, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_5685C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_56974, 0, 0);
}

uint64_t sub_56974()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = [self sharedInstance];
  NSString v3 = sub_86830();
  [v2 enqueueValueCall:v1 arguments:0 file:v3 line:412];

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_56A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CD068);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_86AD0();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_86AC0();
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v13, v7, v4);
  *(void *)(v15 + v14) = a2;
  sub_339CC((uint64_t)v10, (uint64_t)&unk_CD090, v15);
  return swift_release();
}

uint64_t sub_56C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[4] = a4;
  void v5[5] = a5;
  uint64_t v6 = sub_2D920(&qword_CD068);
  void v5[6] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[7] = v7;
  v5[8] = *(void *)(v7 + 64);
  v5[9] = swift_task_alloc();
  sub_2D920((uint64_t *)&unk_CD040);
  v5[10] = swift_task_alloc();
  uint64_t v8 = sub_85EB0();
  v5[11] = v8;
  v5[12] = *(void *)(v8 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  sub_86AD0();
  v5[15] = sub_86AC0();
  uint64_t v10 = sub_86A90();
  return _swift_task_switch(sub_56DE8, v10, v9);
}

uint64_t sub_56DE8()
{
  Class super_class = v0[5].super_class;
  receiver = (uint64_t (**)(id, uint64_t, Class))v0[6].receiver;
  id v3 = v0[5].receiver;
  swift_release();
  sub_86860();
  sub_85E80();
  swift_bridgeObjectRelease();
  uint64_t result = receiver[6](v3, 1, super_class);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    Class v5 = v0[6].super_class;
    id v6 = v0[7].receiver;
    Class v8 = v0[5].super_class;
    uint64_t v7 = (void (**)(id))v0[6].receiver;
    Class v9 = v0[3].super_class;
    id v29 = v6;
    id v10 = v0[3].receiver;
    Class v30 = v0[2].super_class;
    id v27 = v0[2].receiver;
    Class v28 = v0[4].super_class;
    v7[4](v6);
    ((void (*)(Class, id, Class))v7[2])(v5, v6, v8);
    uint64_t v11 = (objc_class *)type metadata accessor for AccountPageViewController();
    uint64_t v12 = objc_allocWithZone(v11);
    uint64_t v13 = OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType;
    v12[OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType] = 0;
    unint64_t v14 = &v12[OBJC_IVAR____TtC5JSApp25AccountPageViewController_contentID];
    *unint64_t v14 = 0;
    v14[1] = 0;
    uint64_t v15 = &v12[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    *uint64_t v15 = 0;
    v15[1] = 0;
    v12[v13] = 3;
    *unint64_t v14 = 0;
    v14[1] = 0;
    swift_bridgeObjectRelease();
    sub_85E40(v16);
    uint64_t v18 = v17;
    v0[1].receiver = v12;
    v0[1].Class super_class = v11;
    NSString v19 = [super initWithAccountURL:v17];

    [v19 setDelegate:v19];
    unint64_t v20 = v7[1];
    ((void (*)(Class, Class))v20)(v5, v8);
    (*((void (**)(Class, id, id))v9 + 2))(v28, v27, v10);
    unint64_t v21 = (*((unsigned __int8 *)v9 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v9 + 80);
    uint64_t v22 = swift_allocObject();
    (*((void (**)(unint64_t, Class, id))v9 + 4))(v22 + v21, v28, v10);
    uint64_t v23 = &v19[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    uint64_t v24 = *(void *)&v19[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
    *(void *)uint64_t v23 = sub_5C790;
    *((void *)v23 + 1) = v22;
    sub_31BA8(v24);
    if (v30) {
      Class v25 = v30;
    }
    else {
      Class v25 = (Class)&_swiftEmptyDictionarySingleton;
    }
    swift_bridgeObjectRetain();
    _sSo16UIViewControllerC5JSAppE7present_7options8animated10completionyAB_SDys11AnyHashableVypGSbyycSgtFZ_0(v19, (uint64_t)v25, 1, 0, 0);

    swift_bridgeObjectRelease();
    ((void (*)(id, Class))v20)(v29, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0->super_class;
    return v26();
  }
  return result;
}

Swift::Void __swiftcall AccountController.signIn(_:)(JSValue a1)
{
  uint64_t v3 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v3 - 8);
  Class v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)AMSAuthenticateOptions) init];
  [v6 setEnableAccountCreation:1];
  uint64_t v7 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  Class v8 = (JSValue *)swift_allocObject();
  v8[2].super.Class isa = 0;
  v8[3].super.Class isa = 0;
  v8[4].super.Class isa = v1;
  v8[5].super.Class isa = (Class)v6;
  v8[6].super.Class isa = a1.super.isa;
  Class v9 = v1;
  id v10 = a1.super.isa;
  sub_339CC((uint64_t)v5, (uint64_t)&unk_CCEE0, (uint64_t)v8);
  swift_release();
}

uint64_t sub_5737C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  Class v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v9;
  void *v9 = v6;
  v9[1] = sub_57430;
  v9[11] = a5;
  v9[12] = a4;
  return _swift_task_switch(sub_50E70, 0, 0);
}

uint64_t sub_57430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v4;
  *(void *)(*v4 + 32) = v3;
  swift_task_dealloc();
  if (v3)
  {
    Class v8 = sub_57698;
  }
  else
  {
    *(void *)(v7 + 40) = a3;
    *(void *)(v7 + 48) = a2;
    Class v8 = sub_57564;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_57564()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[2];
  id v4 = [self sharedInstance];
  sub_2D920(&qword_CCA60);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_A1CE0;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v2;
  Class isa = sub_86A10().super.isa;
  NSString v7 = sub_86830();
  [v4 enqueueValueCall:v3 arguments:isa file:v7 line:423];

  swift_bridgeObjectRelease();
  Class v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_57698()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = [self sharedInstance];
  sub_2D920(&qword_CCA60);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_A1CE0;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 32) = 0x64656C696146;
  *(void *)(v3 + 40) = 0xE600000000000000;
  Class isa = sub_86A10().super.isa;
  NSString v5 = sub_86830();
  [v2 enqueueValueCall:v1 arguments:isa file:v5 line:425];

  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

Swift::Void __swiftcall AccountController.signOut(_:)(JSValue a1)
{
  id v3 = [self sharedProvider];
  id v4 = [v3 activeStoreAccount];

  if (v4)
  {
    NSString v5 = *(NSObject **)&v1[OBJC_IVAR___JSAAccountController_observerQueue];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v1;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_5DB2C;
    *(void *)(v7 + 24) = v6;
    uint64_t v24 = sub_5DAC0;
    uint64_t v25 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_2E904;
    uint64_t v23 = &unk_B4F80;
    uint64_t v8 = _Block_copy(&aBlock);
    Class v9 = v1;
    swift_retain();
    swift_release();
    dispatch_sync(v5, v8);
    _Block_release(v8);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      id v11 = [v4 bu_signOut];
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v13 = (JSValue *)swift_allocObject();
      v13[2].super.Class isa = (Class)v12;
      v13[3].super.Class isa = a1.super.isa;
      uint64_t v24 = sub_5B3A4;
      uint64_t v25 = (uint64_t)v13;
      aBlock = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      uint64_t v22 = sub_52340;
      uint64_t v23 = &unk_B4FF8;
      unint64_t v14 = _Block_copy(&aBlock);
      uint64_t v15 = a1.super.isa;
      swift_release();
      [v11 addFinishBlock:v14];
      _Block_release(v14);
    }
  }
  else
  {
    id v16 = [self sharedInstance];
    sub_2D920(&qword_CCA60);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_A1CE0;
    *(void *)(v17 + 56) = &type metadata for Bool;
    *(unsigned char *)(v17 + 32) = 1;
    Class isa = sub_86A10().super.isa;
    id v19 = sub_86830();
    [v16 enqueueValueCall:a1.super.isa arguments:isa file:v19 line:439];

    swift_bridgeObjectRelease();
  }
}

void sub_57CEC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    Class v9 = *(NSObject **)(Strong + OBJC_IVAR___JSAAccountController_observerQueue);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_5C828;
    *(void *)(v11 + 24) = v10;
    aBlock[4] = sub_5DAC0;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2E904;
    void aBlock[3] = &unk_B53B8;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v8;
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    _Block_release(v12);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v9)
    {
      __break(1u);
    }
    else
    {
      id v14 = [self sharedInstance];
      sub_2D920(&qword_CCA60);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_A1F70;
      *(void *)(v15 + 56) = &type metadata for Bool;
      *(unsigned char *)(v15 + 32) = a1 & 1;
      *(void *)(v15 + 88) = sub_2D920(&qword_CD080);
      *(void *)(v15 + 64) = a2;
      swift_errorRetain();
      Class isa = sub_86A10().super.isa;
      NSString v17 = sub_86830();
      [v14 enqueueValueCall:a4 arguments:isa file:v17 line:436];

      swift_bridgeObjectRelease();
    }
  }
}

Swift::Void __swiftcall AccountController.reauthenticateSignIn(with:_:)(Swift::OpaquePointer_optional with, JSValue _)
{
  id v3 = v2;
  id v4 = *(void **)&with.is_nil;
  rawValue = with.value._rawValue;
  uint64_t v6 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)AMSAuthenticateOptions) init];
  if (!rawValue)
  {
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_10:
    sub_33054((uint64_t)&v24, &qword_CCEF0);
    goto LABEL_11;
  }
  unint64_t v21 = 0x695474706D6F7270;
  unint64_t v22 = 0xEB00000000656C74;
  sub_86E60();
  if (rawValue[2] && (unint64_t v10 = sub_59F94((uint64_t)&v23), (v11 & 1) != 0))
  {
    sub_3F66C(rawValue[7] + 32 * v10, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_5B478((uint64_t)&v23);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    NSString v12 = sub_86830();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  NSString v12 = 0;
LABEL_12:
  [v9 setPromptTitle:v12];

  if (!rawValue)
  {
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_21:
    sub_33054((uint64_t)&v24, &qword_CCEF0);
    goto LABEL_22;
  }
  unint64_t v21 = 0xD000000000000011;
  unint64_t v22 = 0x800000000009D350;
  sub_86E60();
  if (rawValue[2] && (unint64_t v13 = sub_59F94((uint64_t)&v23), (v14 & 1) != 0))
  {
    sub_3F66C(rawValue[7] + 32 * v13, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_5B478((uint64_t)&v23);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_21;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    NSString v15 = 0;
    goto LABEL_23;
  }
  NSString v15 = sub_86830();
  swift_bridgeObjectRelease();
LABEL_23:
  [v9 setReason:v15];

  uint64_t v16 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  NSString v17 = (void *)swift_allocObject();
  uint64_t v17[2] = 0;
  v17[3] = 0;
  void v17[4] = v3;
  uint64_t v17[5] = v9;
  uint64_t v17[6] = v4;
  id v18 = v3;
  id v19 = v4;
  sub_339CC((uint64_t)v8, (uint64_t)&unk_CCF00, (uint64_t)v17);
  swift_release();
}

uint64_t sub_58304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  id v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v9;
  void *v9 = v6;
  v9[1] = sub_583B8;
  v9[11] = a5;
  v9[12] = a4;
  return _swift_task_switch(sub_50E70, 0, 0);
}

uint64_t sub_583B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v4;
  *(void *)(*v4 + 32) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v8 = sub_58620;
  }
  else
  {
    *(void *)(v7 + 40) = a3;
    *(void *)(v7 + 48) = a2;
    uint64_t v8 = sub_584EC;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_584EC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[2];
  id v4 = [self sharedInstance];
  sub_2D920(&qword_CCA60);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_A1CE0;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v2;
  Class isa = sub_86A10().super.isa;
  NSString v7 = sub_86830();
  [v4 enqueueValueCall:v3 arguments:isa file:v7 line:450];

  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_58620()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = [self sharedInstance];
  sub_2D920(&qword_CCA60);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_A1CE0;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 32) = 0x64656C696146;
  *(void *)(v3 + 40) = 0xE600000000000000;
  Class isa = sub_86A10().super.isa;
  NSString v5 = sub_86830();
  [v2 enqueueValueCall:v1 arguments:isa file:v5 line:452];

  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_5880C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a7;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  void *v10 = v7;
  v10[1] = sub_588C0;
  v10[5] = a4;
  void v10[6] = a6;
  return _swift_task_switch(sub_5A3AC, 0, 0);
}

uint64_t sub_588C0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_589BC, 0, 0);
}

uint64_t sub_589BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = [self sharedInstance];
  NSString v3 = sub_86830();
  [v2 enqueueValueCall:v1 arguments:0 file:v3 line:465];

  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_58B48()
{
  return sub_58B9C(*(void *)(v0 + 16), (SEL *)&selRef_accountControllerWillAttemptSignOut_);
}

uint64_t sub_58B6C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_58B7C(uint64_t a1)
{
  sub_51CC0(a1, *(void **)(v1 + 16));
}

uint64_t sub_58B84(uint64_t a1)
{
  return sub_5262C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_58B90(uint64_t a1)
{
  return sub_534AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_58B9C(uint64_t a1, SEL *a2)
{
  id v4 = (unint64_t *)(a1 + OBJC_IVAR___JSAAccountController_observers);
  swift_beginAccess();
  unint64_t v5 = *v4;
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_86F80();
  uint64_t v6 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v9 = (void *)sub_86ED0();
      }
      else
      {
        id v9 = *(void **)(v5 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if ([v9 respondsToSelector:*a2]) {
        [v9 *a2:a1];
      }
      swift_unknownObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_58CCC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v8 = sub_2D920(&qword_CD128);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_86AD0();
  swift_bridgeObjectRetain();
  id v16 = a2;
  id v17 = a3;
  uint64_t v18 = sub_86AC0();
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v18;
  *((void *)v21 + 3) = &protocol witness table for MainActor;
  *((void *)v21 + 4) = v16;
  *((void *)v21 + 5) = v17;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v21[v19], v11, v8);
  unint64_t v22 = &v21[v20];
  uint64_t v23 = v25;
  *(void *)unint64_t v22 = v26;
  *((void *)v22 + 1) = v23;
  sub_339CC((uint64_t)v14, (uint64_t)&unk_CD138, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_58F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  uint8_t v8[8] = a4;
  uint64_t v9 = sub_2D920(&qword_CD128);
  v8[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[14] = v10;
  v8[15] = *(void *)(v10 + 64);
  v8[16] = swift_task_alloc();
  sub_86AD0();
  v8[17] = sub_86AC0();
  uint64_t v12 = sub_86A90();
  return _swift_task_switch(sub_59010, v12, v11);
}

uint64_t sub_59010()
{
  swift_release();
  id v1 = [self jsa_topMostViewControllerForWindow:0];
  self;
  id v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = [v2 topViewController];
    if (v3)
    {
      id v4 = v3;

      id v1 = v4;
    }
  }
  uint64_t v5 = v0[16];
  uint64_t v7 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v24 = v0[12];
  uint64_t v8 = v0[10];
  uint64_t v22 = v0[15];
  uint64_t v23 = v0[11];
  uint64_t v9 = v0[9];
  id v10 = [objc_allocWithZone((Class)AMSUIAuthenticateTask) initWithRequest:v0[8] presentingViewController:v1];
  [v10 setDelegate:v9];
  id v11 = [self defaultBag];
  [v10 setBag:v11];

  id v21 = [v10 performAuthentication];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v15 = (v22 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v16 + v14, v13, v7);
  id v17 = (void *)(v16 + v15);
  *id v17 = v23;
  v17[1] = v24;
  *(void *)(v16 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8)) = v12;
  v0[6] = sub_5D9CC;
  v0[7] = v16;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_812CC;
  v0[5] = &unk_B5810;
  uint64_t v18 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain();
  swift_release();
  [v21 addFinishBlock:v18];

  _Block_release(v18);
  swift_task_dealloc();
  unint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

void sub_59304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_3;
  }
  id v11 = (void *)Strong;
  uint64_t v12 = *(NSObject **)(Strong + OBJC_IVAR___JSAAccountController_observerQueue);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_5DA8C;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_5DAC0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2E904;
  void aBlock[3] = &unk_B5888;
  unint64_t v15 = _Block_copy(aBlock);
  id v16 = v11;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();

  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  else {
LABEL_3:
  }
    sub_594EC(a2, a3, a1, a4, a5);
}

uint64_t sub_594EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    swift_errorRetain();
    sub_2D920(&qword_CD128);
    return sub_86AA0();
  }
  else
  {
    if (a3)
    {
      id v8 = [self sharedProvider];
      id v9 = [v8 currentStorefront];

      if (v9)
      {
        uint64_t v10 = sub_86860();
        uint64_t v12 = v11;

        if (a5)
        {
          if (v10 != a4 || v12 != a5) {
            sub_87070();
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    sub_2D920(&qword_CD128);
    return sub_86AB0();
  }
}

uint64_t AccountController.authenticateTask(_:handle:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_5B85C(a2, a3, a4);
}

void sub_5968C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = self;
  id v7 = a1;
  id v8 = [v6 jsa_topMostViewControllerForWindow:0];
  id v9 = [objc_allocWithZone((Class)AMSUIAlertDialogTask) initWithRequest:v7 presentingViewController:v8];

  id v10 = [v9 present];
  v12[4] = a2;
  v12[5] = a3;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_812CC;
  uint64_t v12[3] = &unk_B52C8;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  [v10 addFinishBlock:v11];
  _Block_release(v11);
}

uint64_t sub_59890(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_5996C;
  return v6(a1);
}

uint64_t sub_5996C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_59A64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_3F97C;
  return v6();
}

uint64_t sub_59B30(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_3F97C;
  return v7();
}

uint64_t sub_59BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_86B10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_86B00();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_33054(a1, &qword_CCEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_86A90();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_59DA8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_5DB64;
  return v6(a1);
}

unint64_t sub_59E84(uint64_t a1)
{
  sub_86860();
  sub_870F0();
  sub_86900();
  Swift::Int v2 = sub_87130();
  swift_bridgeObjectRelease();

  return sub_5A068(a1, v2);
}

unint64_t sub_59F18(uint64_t a1, uint64_t a2)
{
  sub_870F0();
  sub_86900();
  Swift::Int v4 = sub_87130();

  return sub_5A1E0(a1, a2, v4);
}

unint64_t sub_59F94(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_86E40(*(void *)(v2 + 40));

  return sub_5A2C4(a1, v4);
}

unint64_t sub_59FD8(uint64_t a1)
{
  sub_86860();
  sub_870F0();
  sub_86900();
  Swift::Int v2 = sub_87130();
  swift_bridgeObjectRelease();
  return sub_5A068(a1, v2);
}

unint64_t sub_5A068(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_86860();
    uint64_t v8 = v7;
    if (v6 == sub_86860() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_87070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_86860();
          uint64_t v15 = v14;
          if (v13 == sub_86860() && v15 == v16) {
            break;
          }
          char v18 = sub_87070();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_5A1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_87070() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_87070() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_5A2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_5C794(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_86E50();
      sub_5B478((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_5A38C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return _swift_task_switch(sub_5A3AC, 0, 0);
}

uint64_t sub_5A3AC()
{
  uint64_t v1 = qword_CC438;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[7] = v3;
  *(void *)(v3 + 16) = v2;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  void *v4 = v0;
  v4[1] = sub_5A4E0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x726F662865707974, 0xEA0000000000293ALL, sub_45E78, v3, &type metadata for URLParser.ParserURLType);
}

uint64_t sub_5A4E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_5A5F8, 0, 0);
}

uint64_t sub_5A5F8()
{
  BOOL v14 = v0;
  uint64_t v1 = v0[2];
  if (qword_CC4E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_86230();
  sub_31DE4(v2, (uint64_t)qword_CD600);
  uint64_t v3 = sub_86210();
  os_log_type_t v4 = sub_86C50();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    v0[3] = v1;
    uint64_t v6 = sub_868C0();
    v0[4] = sub_422E0(v6, v7, &v13);
    sub_86D40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v3, v4, "Handling commerce URL: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  id v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  void v10[2] = v1;
  v10[3] = v9;
  void v10[4] = v8;
  BOOL v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  void *v11 = v0;
  v11[1] = sub_5A858;
  return withCheckedContinuation<A>(isolation:function:_:)(v11, 0, 0, 0xD000000000000014, 0x800000000009D4F0, sub_5C474, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_5A858()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_52618, 0, 0);
}

uint64_t sub_5A98C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  uint64_t v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_86ED0();
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRelease();
      if (v6 == a2) {
        break;
      }
      uint64_t v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_11:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_86F80();
        swift_bridgeObjectRelease();
        uint64_t v5 = 0;
        if (!v4) {
          return v5;
        }
      }
      else
      {
        ++v5;
        if (v7 == v4) {
          return 0;
        }
      }
    }
  }
  return v5;
}

uint64_t sub_5AA80(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_5A98C(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_86F80();
      swift_bridgeObjectRelease();
      if (v9 != v22) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((char *)&dword_10 + (*a1 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        uint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = sub_86ED0();
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v11 >= *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_45;
          }
          uint64_t v13 = *(void *)(v12 + 8 * i);
          swift_unknownObjectRetain();
        }
        swift_unknownObjectRelease();
        if (v13 != a2) {
          break;
        }
LABEL_32:
        uint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_86F80();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v19 = *(void *)((char *)&dword_10 + (*a1 & 0xFFFFFFFFFFFFFF8));
        }
        if (v9 == v19) {
          return v6;
        }
      }
      if (v11 == v6)
      {
LABEL_31:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      uint64_t v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = sub_86ED0();
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_51;
          }
          uint64_t v15 = *(void *)(v9 + 8 * i);
          swift_unknownObjectRetain();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_49;
        }
        uint64_t v14 = *(void *)(v9 + 8 * v6 + 32);
        swift_unknownObjectRetain();
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v15 = sub_86ED0();
      uint64_t v9 = *a1;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
      {
        uint64_t v9 = sub_70334(v9);
        *a1 = v9;
      }
      *(void *)((char *)&stru_20.cmd + 8 * v6 + (v9 & 0xFFFFFFFFFFFFFF8)) = v15;
      swift_unknownObjectRelease();
      sub_86A50();
      uint64_t v9 = *a1;
      int v17 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v17 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
      {
        uint64_t v9 = sub_70334(v9);
        *a1 = v9;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_53;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v14;
      swift_unknownObjectRelease();
      sub_86A50();
      goto LABEL_31;
    }
    return v6;
  }
  unint64_t v20 = *a1;
  if (!(v20 >> 62)) {
    return *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_86F80();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_5ADA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_86B10();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_33054((uint64_t)v6, &qword_CCEA0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_86B00();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (*(void *)(v9 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_86A90();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    _OWORD v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_5AFC4()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_5B01C()
{
  long long v6 = *(_OWORD *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_3F97C;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return _swift_task_switch(sub_55B08, 0, 0);
}

uint64_t sub_5B0E4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_3F97C;
  *(void *)(v4 + 80) = v2;
  *(void *)(v4 + 88) = v3;
  *(_OWORD *)(v4 + 64) = v5;
  return _swift_task_switch(sub_56028, 0, 0);
}

uint64_t sub_5B1A4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_3F97C;
  return _swift_task_switch(sub_56770, 0, 0);
}

uint64_t sub_5B254(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_3F97C;
  return sub_5737C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_5B31C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5B32C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_5B364()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_5B3A4(char a1, uint64_t a2)
{
  sub_57CEC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_5B3B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_3F97C;
  return sub_58304(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_5B478(uint64_t a1)
{
  return a1;
}

uint64_t _s5JSApp17AccountControllerC04showb4ViewC04with__ySS_So7JSValueCSDys11AnyHashableVypGSgtF_0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v7 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_85EB0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  int v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    sub_85E80();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      return sub_33054((uint64_t)v12, (uint64_t *)&unk_CD040);
    }
    else
    {
      uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
      uint64_t v36 = v14 + 32;
      id v37 = v22;
      Class v38 = a3;
      v22((unint64_t)v20, v12, v13);
      uint64_t v42 = sub_85E70();
      uint64_t v43 = v23;
      unint64_t v40 = 0xD000000000000048;
      unint64_t v41 = 0x800000000009D4A0;
      sub_42240();
      char v24 = sub_86DB0();
      swift_bridgeObjectRelease();
      if (v24) {
        int v25 = 4;
      }
      else {
        int v25 = 0;
      }
      int v35 = v25;
      uint64_t v26 = sub_86B10();
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
      uint64_t v34 = v9;
      v27(v9, 1, 1, v26);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v13);
      unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v29 = v28 + v15;
      uint64_t v30 = v39;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = 0;
      *(void *)(v31 + 24) = 0;
      v37(v31 + v28, v17, v13);
      *(unsigned char *)(v31 + v29) = v35;
      *(void *)((v29 & 0xFFFFFFFFFFFFFFF8) + v31 + 8) = v30;
      uint64_t v32 = v38;
      *(void *)(v31 + (((v29 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) = v38;
      swift_bridgeObjectRetain();
      id v33 = v32;
      sub_339CC((uint64_t)v34, (uint64_t)&unk_CD058, v31);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    }
  }
  return result;
}

uint64_t sub_5B85C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_86260();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_862A0();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3F6C8();
  uint64_t v13 = (void *)sub_86CB0();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_5C22C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2DC18;
  void aBlock[3] = &unk_B52A0;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_retain();
  swift_release();
  sub_86270();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_5CD3C((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_2D920((uint64_t *)&unk_CD030);
  sub_2DCCC((unint64_t *)&qword_CC5B8, (uint64_t *)&unk_CD030);
  sub_86DD0();
  sub_86CC0();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t type metadata accessor for AccountController()
{
  return self;
}

uint64_t sub_5BB50()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_5BB88(uint64_t a1, uint64_t a2)
{
  return sub_812D0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_5BB94()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_5BBE8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_5BC34()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_5BC90()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_3F97C;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, void *, void *))((char *)&dword_CCFA8 + dword_CCFA8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_5BD54()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_3F97C;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_CCFB8 + dword_CCFB8);
  return v6(v2, v3, v4);
}

uint64_t sub_5BE18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_3F97C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_CCFC8 + dword_CCFC8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_5BEE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5BF1C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_3F97C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_CCFD8 + dword_CCFD8);
  return v6(a1, v4);
}

uint64_t sub_5BFD8()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_5C028()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_3F97C;
  uint64_t v7 = (uint64_t (*)(int, uint64_t, void *, void *))((char *)&dword_CCFE8 + dword_CCFE8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_5C0F0()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_5C130()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_3F97C;
  uint64_t v6 = (uint64_t (*)(char, void *, void *))((char *)&dword_CD008 + dword_CD008);
  return v6(v2, v4, v3);
}

uint64_t sub_5C1EC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_5C22C()
{
  sub_5968C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_5C238()
{
  uint64_t v1 = sub_85EB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_5C330(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_85EB0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFFF8) + v1 + 8);
  uint64_t v11 = *(void *)(v1 + (((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *(unsigned __int8 *)(v1 + v6);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_3F97C;
  return sub_5880C(a1, v7, v8, v9, v12, v10, v11);
}

uint64_t sub_5C474(uint64_t a1)
{
  return sub_4FCF4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_5C480()
{
  uint64_t v1 = sub_85EB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = sub_2D920(&qword_CD068);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_5C5F0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_85EB0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_2D920(&qword_CD068) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = *(void *)((char *)v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  id v16 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v16;
  void *v16 = v3;
  v16[1] = sub_3F97C;
  return sub_4FFE0(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_5C794(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_5C7F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_5C828()
{
  return sub_58B9C(*(void *)(v0 + 16), (SEL *)&selRef_accountControllerDidAttemptSignOut_);
}

uint64_t sub_5C84C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5C85C(uint64_t a1)
{
  return sub_56A44(a1, *(void *)(v1 + 16));
}

uint64_t sub_5C864()
{
  uint64_t v1 = sub_2D920(&qword_CD068);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_5C950(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2D920(&qword_CD068) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_3F97C;
  return sub_56C4C(a1, v6, v7, v8, v9);
}

uint64_t sub_5CA7C()
{
  return sub_58B9C(*(void *)(v0 + 16), (SEL *)&selRef_accountControllerDidAttemptToRedeemCode_);
}

uint64_t sub_5CAA0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5CAB0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5CAE8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_3F97C;
  return sub_54E04();
}

uint64_t sub_5CB94(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_3F97C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_CD0A8 + dword_CD0A8);
  return v6(a1, v4);
}

uint64_t sub_5CC50(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_85EB0() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_3F97C;
  return sub_4F3E4(a1, v5, v6, v7);
}

uint64_t sub_5CD3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5CD84()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_3F97C;
  return sub_544F0();
}

uint64_t sub_5CE30(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_32DB8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_CD0A8 + dword_CD0A8);
  return v6(a1, v4);
}

uint64_t sub_5CEEC()
{
  uint64_t v1 = sub_85EB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_5CFB8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_85EB0() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_32DB8;
  return sub_4F3E4(a1, v5, v6, v7);
}

uint64_t sub_5D0A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2D920(&qword_CD068) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_3F97C;
  return sub_536D0(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_5D1EC()
{
  uint64_t v1 = sub_2D920(&qword_CD068);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_5D2E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2D920(&qword_CD068) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_3F97C;
  return sub_52850(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_5D420()
{
  uint64_t v1 = sub_2D920(&qword_CD068);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_5D4B4()
{
  return sub_86AB0();
}

uint64_t sub_5D51C()
{
  uint64_t v1 = sub_2D920(&qword_CD118);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_5D5EC(int a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_2D920(&qword_CD118) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_51EB4(a1, a2, v6, v7);
}

uint64_t sub_5D674()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5D684()
{
  return sub_58B9C(*(void *)(v0 + 16), (SEL *)&selRef_accountControllerWillAttemptSignIn_);
}

uint64_t sub_5D6A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5D6B8(uint64_t a1)
{
  return sub_58CCC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_5D6C4()
{
  uint64_t v1 = sub_2D920(&qword_CD128);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_5D7C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2D920(&qword_CD128) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_3F97C;
  return sub_58F08(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_5D908()
{
  uint64_t v1 = sub_2D920(&qword_CD128);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_5D9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_2D920(&qword_CD128) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);

  sub_59304(a1, a2, v2 + v6, v8, v9);
}

uint64_t sub_5DA8C()
{
  return sub_58B9C(*(void *)(v0 + 16), (SEL *)&selRef_accountControllerDidAttemptSignIn_);
}

uint64_t sub_5DAB0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5DB68()
{
  sub_2D920(&qword_CD240);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_A1FD0;
  uint64_t v1 = sub_86110();
  uint64_t v2 = sub_5E5F0(&qword_CD248, (void (*)(uint64_t))&type metadata accessor for BooksAppleAccountFeatureFlag);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = sub_860C0();
  uint64_t v4 = sub_5E5F0(&qword_CD250, (void (*)(uint64_t))&type metadata accessor for BooksFeatureFlag);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = sub_860D0();
  uint64_t result = sub_5E5F0(&qword_CD258, (void (*)(uint64_t))&type metadata accessor for BooksUIKitFeatureFlag);
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = result;
  off_CD200 = (int *)v0;
  return result;
}

uint64_t sub_5DC80()
{
  if (qword_CC4A8 != -1) {
    swift_once();
  }
  uint64_t v0 = off_CD200;
  int64_t v1 = *(void *)((char *)&dword_10 + (void)off_CD200);
  uint64_t v2 = (int *)_swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v14 = (int *)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_42FB0(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v2 = (int *)_swiftEmptyArrayStorage;
    do
    {
      long long v13 = *(_OWORD *)&v0[4 * v3 + 8];
      sub_86100();
      uint64_t v4 = sub_86EC0();
      uint64_t v6 = v5;
      uint64_t v14 = v2;
      unint64_t v8 = *((void *)v2 + 2);
      unint64_t v7 = *((void *)v2 + 3);
      if (v8 >= v7 >> 1)
      {
        sub_42FB0(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v14;
      }
      ++v3;
      *((void *)v2 + 2) = v8 + 1;
      uint64_t v9 = &v2[8 * v8];
      *((void *)v9 + 4) = v4;
      *((void *)v9 + 5) = v6;
      *((_OWORD *)v9 + 3) = v13;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
  }
  if (*((void *)v2 + 2))
  {
    sub_2D920(&qword_CD238);
    uint64_t v10 = (int *)sub_86FB0();
  }
  else
  {
    uint64_t v10 = (int *)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v14 = v10;
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_5DF0C(v11, 1, &v14);
  uint64_t result = swift_bridgeObjectRelease();
  off_CD208 = v14;
  return result;
}

uint64_t type metadata accessor for JSAOSFeatureFlags()
{
  return self;
}

uint64_t sub_5DF0C(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  long long v40 = *(_OWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_59F18(v8, v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_75B80();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    unint64_t v20 = (uint64_t *)(v19[6] + 16 * v11);
    *unint64_t v20 = v8;
    v20[1] = v7;
    *(_OWORD *)(v19[7] + 16 * v11) = v40;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v19[2] = v23;
    uint64_t v24 = v4 - 1;
    if (v4 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (unint64_t i = (_OWORD *)(a1 + 80); ; i += 2)
    {
      uint64_t v27 = *((void *)i - 2);
      uint64_t v26 = *((void *)i - 1);
      long long v41 = *i;
      unint64_t v28 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_59F18(v27, v26);
      uint64_t v31 = v28[2];
      BOOL v32 = (v30 & 1) == 0;
      BOOL v22 = __OFADD__(v31, v32);
      uint64_t v33 = v31 + v32;
      if (v22) {
        break;
      }
      char v34 = v30;
      if (v28[3] < v33)
      {
        sub_76390(v33, 1);
        unint64_t v29 = sub_59F18(v27, v26);
        if ((v34 & 1) != (v35 & 1)) {
          goto LABEL_25;
        }
      }
      if (v34) {
        goto LABEL_10;
      }
      uint64_t v36 = (void *)*a3;
      *(void *)(*a3 + 8 * (v29 >> 6) + 64) |= 1 << v29;
      id v37 = (uint64_t *)(v36[6] + 16 * v29);
      *id v37 = v27;
      v37[1] = v26;
      *(_OWORD *)(v36[7] + 16 * v29) = v41;
      uint64_t v38 = v36[2];
      BOOL v22 = __OFADD__(v38, 1);
      uint64_t v39 = v38 + 1;
      if (v22) {
        goto LABEL_24;
      }
      v36[2] = v39;
      if (!--v24) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_76390(v14, a2 & 1);
  unint64_t v16 = sub_59F18(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_2D920(&qword_CD0D0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_870B0();
  __break(1u);
LABEL_26:
  sub_86EA0(30);
  v42._object = (void *)0x800000000009D7D0;
  v42._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  sub_86930(v42);
  sub_86F50();
  v43._uint64_t countAndFlagsBits = 39;
  v43._object = (void *)0xE100000000000000;
  sub_86930(v43);
  uint64_t result = sub_86F70();
  __break(1u);
  return result;
}

uint64_t sub_5E2A0(int a1, int a2, id a3)
{
  uint64_t v4 = 0x736B6F6F42;
  if ([a3 isString]
    && (id v5 = [a3 toString]) != 0)
  {
    uint64_t v6 = v5;
    uint64_t v4 = sub_86860();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v8 = 0xE500000000000000;
  }
  if (qword_CC4B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = off_CD208;
  if (!*(void *)((char *)&dword_10 + (void)off_CD208)) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_59F18(v4, v8);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  long long v21 = *(_OWORD *)(*(void *)&stru_20.segname[(void)v9 + 16] + 16 * v10);
  swift_endAccess();
  swift_bridgeObjectRelease_n();
  uint64_t v12 = v21;
  uint64_t v13 = sub_86D30();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v22[-2] - v15;
  swift_bridgeObjectRetain();
  sub_860F0();
  uint64_t v17 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v12) != 1)
  {
    *(_OWORD *)&v22[3] = v21;
    unint64_t v20 = sub_3F758(v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(v20, v16, v12);
    sub_3EDD8((long long *)v22, (uint64_t)v23);
    sub_494DC(v23, v23[3]);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_860E0();
    swift_getWitnessTable();
    char v18 = sub_869E0();
    sub_3ED88((uint64_t)v23);
    return v18 & 1;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_13:
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_5E5F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static JSADateComponentsFormatter.localizedHrMinDuration(second:locale:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_5E97C(a5, a1, a2, a3, a4, 96);
}

uint64_t static JSADateComponentsFormatter.localizedHrMinSecDuration(second:locale:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_5E97C(a5, a1, a2, a3, a4, 224);
}

uint64_t static JSADateComponentsFormatter.localizedMinSecDuration(second:locale:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_5E97C(a5, a1, a2, a3, a4, 192);
}

id sub_5E668(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_86860();
  uint64_t v10 = v9;
  uint64_t v11 = sub_86860();
  sub_5E97C(a1, v8, v10, v11, v12, a6);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    NSString v15 = sub_86830();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }

  return v15;
}

uint64_t sub_5E730(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74754F6C6C657073 && a2 == 0xE800000000000000 || (sub_87070() & 1) != 0) {
    return 4;
  }
  if (a1 == 1819047270 && a2 == 0xE400000000000000 || (sub_87070() & 1) != 0) {
    return 3;
  }
  if (a1 == 0x74726F6873 && a2 == 0xE500000000000000 || (sub_87070() & 1) != 0) {
    return 2;
  }
  if (a1 == 0x6665697262 && a2 == 0xE500000000000000 || (sub_87070() & 1) != 0) {
    return 5;
  }
  if (a1 == 0x6169766572626261 && a2 == 0xEB00000000646574 || (sub_87070() & 1) != 0) {
    return 1;
  }
  if (a1 != 0x6E6F697469736F70 || a2 != 0xEA00000000006C61) {
    sub_87070();
  }
  return 0;
}

uint64_t sub_5E97C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_2D920(&qword_CD288);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_85F90();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_85F80();
  swift_bridgeObjectRetain();
  sub_85F30();
  uint64_t v17 = sub_85F50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 0, 1, v17);
  sub_85F70();
  id v18 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v18 setAllowedUnits:a6];
  [v18 setUnitsStyle:sub_5E730(a4, a5)];
  Class isa = sub_85F60().super.isa;
  [v18 setCalendar:isa];

  id v20 = [v18 stringFromTimeInterval:a1];
  if (v20)
  {
    long long v21 = v20;
    uint64_t v22 = sub_86860();
  }
  else
  {

    uint64_t v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v22;
}

uint64_t type metadata accessor for JSADateComponentsFormatter()
{
  return self;
}

id static ProcessEnvironment.current.getter()
{
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_CD290;

  return v0;
}

unint64_t ProcessEnvironmentVariant.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_5EC68@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

id sub_5EC84()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ProcessEnvironment()) init];
  qword_CD290 = (uint64_t)result;
  return result;
}

uint64_t sub_5ED20()
{
  return *(void *)(v0 + OBJC_IVAR___JSAProcessEnvironment__variant);
}

id ProcessEnvironment.init()()
{
  *(void *)&v0[OBJC_IVAR___JSAProcessEnvironment__variant] = 0;
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for ProcessEnvironment();
  return [super init];
}

uint64_t type metadata accessor for ProcessEnvironment()
{
  return self;
}

void sub_5EDE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_862D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_3F6C8();
  *id v5 = sub_86CB0();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = sub_862F0();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v7 = [self processInfo];
    id v8 = [v7 environment];

    uint64_t v9 = sub_86800();
    if (*(void *)(v9 + 16))
    {
      sub_59F18(0xD00000000000001BLL, 0x800000000009D930);
      char v11 = v10;
      swift_bridgeObjectRelease();
      if (v11)
      {
        uint64_t v12 = 2;
LABEL_10:
        *(void *)(v1 + OBJC_IVAR___JSAProcessEnvironment__variant) = v12;
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = (void *)_sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0();
    uint64_t v12 = 0;
    if (v13)
    {
      uint64_t v14 = v13;
      unsigned __int8 v15 = [v13 launchedToTest];

      if (v15) {
        uint64_t v12 = 1;
      }
    }
    goto LABEL_10;
  }
  __break(1u);
}

id ProcessEnvironment.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for ProcessEnvironment();
  return [super dealloc];
}

unint64_t sub_5F05C()
{
  unint64_t result = qword_CD2A0;
  if (!qword_CD2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CD2A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessEnvironmentVariant()
{
  return &type metadata for ProcessEnvironmentVariant;
}

uint64_t method lookup function for ProcessEnvironment(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ProcessEnvironment);
}

uint64_t dispatch thunk of ProcessEnvironment.variant.getter()
{
  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of ProcessEnvironment.setup()()
{
  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

id Package.__allocating_init(jetPack:name:isBundled:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = objc_allocWithZone(v4);
  sub_3F2B0(a1, (uint64_t)&v9[OBJC_IVAR___JSAPackage_jetPack]);
  char v10 = &v9[OBJC_IVAR___JSAPackage_nameForJSContext];
  void *v10 = a2;
  v10[1] = a3;
  v9[OBJC_IVAR___JSAPackage_isBundled] = a4;
  v13.receiver = v9;
  v13.Class super_class = v4;
  id v11 = [super init];
  sub_3F314(a1);
  return v11;
}

uint64_t sub_5F1E4()
{
  uint64_t v0 = sub_86260();
  uint64_t v23 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  __chkstk_darwin(v0);
  objc_super v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_862A0();
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  __chkstk_darwin(v3);
  id v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2D920(&qword_CC838);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)[self isInternalBuild];
  if (result)
  {
    uint64_t result = Package.isSupported.getter();
    if ((result & 1) == 0)
    {
      if (qword_CC470 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_31DE4(v6, (uint64_t)qword_CCD70);
      uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v12(v9, v11, v6);
      sub_86080();
      objc_super v13 = *(void (**)(char *, uint64_t))(v7 + 8);
      v13(v9, v6);
      uint64_t v14 = v26;
      uint64_t result = swift_bridgeObjectRelease();
      if (v14)
      {
        v12(v9, v11, v6);
        sub_86080();
        v13(v9, v6);
        unint64_t v15 = v26;
        if (!v26) {
          goto LABEL_10;
        }
        uint64_t v16 = aBlock;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v17 = HIBYTE(v15) & 0xF;
        if ((v15 & 0x2000000000000000) == 0) {
          uint64_t v17 = (unint64_t)v16 & 0xFFFFFFFFFFFFLL;
        }
        if (v17)
        {
LABEL_10:
          sub_3F6C8();
          id v18 = (void *)sub_86CB0();
          unint64_t v29 = sub_61AD4;
          uint64_t v30 = 0;
          aBlock = _NSConcreteStackBlock;
          uint64_t v26 = 1107296256;
          uint64_t v27 = sub_2DC18;
          unint64_t v28 = &unk_B58E0;
          uint64_t v19 = _Block_copy(&aBlock);
          sub_86270();
          aBlock = (void **)&_swiftEmptyArrayStorage;
          sub_62024((unint64_t *)&qword_CC5B0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_2D920((uint64_t *)&unk_CD030);
          sub_6206C();
          uint64_t v20 = v24;
          sub_86DD0();
          sub_86CC0();
          _Block_release(v19);

          (*(void (**)(char *, uint64_t))(v23 + 8))(v2, v20);
          return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v22);
        }
      }
    }
  }
  return result;
}

uint64_t Package.version.getter()
{
  type metadata accessor for BooksJetPackResourceBundle();
  sub_62024(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
  uint64_t v0 = sub_86490();
  if (v1) {
    return v0;
  }
  if (qword_CC4D0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_D0D58;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Package.isSupported.getter()
{
  type metadata accessor for BooksJetPackResourceBundle();
  sub_62024(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
  sub_86490();
  if (!v0)
  {
    if (qword_CC4D0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
  }
  if (qword_CC4C0 != -1) {
    swift_once();
  }
  sub_42240();
  char v1 = sub_86DB0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    char v2 = 1;
  }
  else
  {
    uint64_t v3 = sub_86490();
    if (v4)
    {
      uint64_t v5 = v3;
      uint64_t v6 = v4;
      if (qword_CC4D0 != -1) {
        swift_once();
      }
    }
    else
    {
      if (qword_CC4D0 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_D0D58;
      uint64_t v6 = unk_D0D60;
      swift_bridgeObjectRetain();
    }
    if (v5 == qword_D0D58 && v6 == unk_D0D60) {
      char v2 = 1;
    }
    else {
      char v2 = sub_87070();
    }
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t Package.nameForJSContext.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___JSAPackage_nameForJSContext);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Package.isBundled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___JSAPackage_isBundled);
}

void sub_5F9C4()
{
  qword_D0D30 = 14198;
  *(void *)algn_D0D38 = 0xE200000000000000;
}

uint64_t sub_5F9DC()
{
  uint64_t v0 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v0 - 8);
  char v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_85EB0();
  sub_3F910(v3, qword_D0D40);
  uint64_t v4 = sub_31DE4(v3, (uint64_t)qword_D0D40);
  sub_85E80();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

void sub_5FB0C()
{
  qword_D0D58 = 0x302E302E30;
  unk_D0D60 = 0xE500000000000000;
}

id Package.init(jetPack:name:isBundled:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_3F2B0(a1, (uint64_t)&v4[OBJC_IVAR___JSAPackage_jetPack]);
  char v10 = &v4[OBJC_IVAR___JSAPackage_nameForJSContext];
  void *v10 = a2;
  v10[1] = a3;
  v4[OBJC_IVAR___JSAPackage_isBundled] = a4;
  v13.receiver = v4;
  v13.Class super_class = ObjectType;
  id v11 = [super init];
  sub_3F314(a1);
  return v11;
}

uint64_t Package.metadata(withName:)()
{
  uint64_t v0 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v0);
  char v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_86370();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_861C0();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_421E0((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
    uint64_t v7 = sub_86350();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t Package.data(atPath:)(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_85E00();
  uint64_t v22 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_85EB0();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_86370();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  objc_super v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_86520();
  uint64_t v27 = *(void *)(v14 - 8);
  uint64_t v28 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_86530();
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_421E0((uint64_t)v9);
    type metadata accessor for BooksJetPackResourceBundle();
    uint64_t v29 = sub_86510();
    uint64_t v30 = v17;
    uint64_t v19 = v22;
    uint64_t v18 = v23;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v23);
    sub_42240();
    sub_85E90();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v18);
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_85EC0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v20 = sub_86360();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v28);
  return v20;
}

void *sub_603C0(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v28 = sub_85E00();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_85EB0();
  uint64_t v25 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_86370();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_86520();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_86530();
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_421E0((uint64_t)v7);
    type metadata accessor for BooksJetPackResourceBundle();
    uint64_t v32 = sub_86510();
    uint64_t v33 = v15;
    uint64_t v16 = v26;
    uint64_t v17 = v28;
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v2, enum case for URL.DirectoryHint.inferFromPath(_:), v28);
    sub_42240();
    uint64_t v18 = v27;
    sub_85E90();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v17);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_85EC0();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v3);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
LABEL_5:
    sub_61FB4(v19, v21);
    uint64_t v23 = sub_61DF8(v19, v21);
    sub_43AB8(v19, v21);
    sub_43AB8(v19, v21);
    return v23;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t v19 = sub_86360();
  unint64_t v21 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
  if (v21 >> 60 != 15) {
    goto LABEL_5;
  }
  return 0;
}

Swift::String_optional __swiftcall Package.string(atPath:)(Swift::String atPath)
{
  uint64_t countAndFlagsBits = atPath._countAndFlagsBits;
  uint64_t v1 = sub_86890();
  __chkstk_darwin(v1 - 8);
  uint64_t v31 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_85E00();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_85EB0();
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2D920(&qword_CC8C8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_86370();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_86520();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_86530();
  sub_861C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_421E0((uint64_t)v8);
    type metadata accessor for BooksJetPackResourceBundle();
    uint64_t v40 = sub_86510();
    unint64_t v41 = v16;
    uint64_t v17 = v34;
    uint64_t v18 = v32;
    uint64_t v19 = v36;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v32, enum case for URL.DirectoryHint.inferFromPath(_:), v36);
    sub_42240();
    unint64_t v20 = v35;
    sub_85E90();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v19);
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_85EC0();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v4);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
LABEL_6:
    uint64_t v40 = v23;
    unint64_t v41 = v25;
    sub_86880();
    sub_61A80();
    uint64_t v21 = sub_86870();
    unint64_t v22 = v27;
    sub_43AB8(v23, v25);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v23 = sub_86360();
  unint64_t v25 = v26;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  if (v25 >> 60 != 15) {
    goto LABEL_6;
  }
  uint64_t v21 = 0;
  unint64_t v22 = 0;
LABEL_7:
  uint64_t v28 = v21;
  uint64_t v29 = v22;
  result.value._object = v29;
  result.value._uint64_t countAndFlagsBits = v28;
  return result;
}

void *Package.dir(atPath:)()
{
  uint64_t v0 = sub_86520();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v21 - v5;
  swift_bridgeObjectRetain();
  sub_86530();
  uint64_t v7 = BooksJetPackResourceBundle.contentsOfDirectory(atPath:)((uint64_t)v6);
  unint64_t v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v25 = v1 + 8;
  v24(v6, v0);
  int64_t v8 = v7[2];
  if (v8)
  {
    unint64_t v26 = _swiftEmptyArrayStorage;
    sub_42F90(0, v8, 0);
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    uint64_t v9 = v1 + 16;
    uint64_t v11 = *(unsigned __int8 *)(v9 + 64);
    v21[1] = v7;
    uint64_t v12 = (char *)v7 + ((v11 + 32) & ~v11);
    uint64_t v22 = *(void *)(v9 + 56);
    uint64_t v23 = v10;
    do
    {
      v23(v4, v12, v0);
      uint64_t v13 = sub_86510();
      uint64_t v15 = v14;
      v24(v4, v0);
      unint64_t v16 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_42F90(0, v16[2] + 1, 1);
        unint64_t v16 = v26;
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1)
      {
        sub_42F90(v17 > 1, v18 + 1, 1);
        unint64_t v16 = v26;
      }
      void v16[2] = v18 + 1;
      uint64_t v19 = &v16[2 * v18];
      void v19[4] = v13;
      v19[5] = v15;
      v12 += v22;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v16;
}

void *Package.allLocalizationPaths.getter()
{
  uint64_t v0 = Package.dir(atPath:)();
  uint64_t v1 = v0[2];
  if (v1)
  {
    sub_42240();
    uint64_t v2 = v0 + 5;
    do
    {
      uint64_t v4 = *(v2 - 1);
      uint64_t v3 = *v2;
      swift_bridgeObjectRetain();
      if (sub_86DB0())
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_42F90(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v6 = _swiftEmptyArrayStorage[2];
        unint64_t v5 = _swiftEmptyArrayStorage[3];
        if (v6 >= v5 >> 1) {
          sub_42F90(v5 > 1, v6 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v6 + 1;
        uint64_t v7 = &_swiftEmptyArrayStorage[2 * v6];
        void v7[4] = v4;
        void v7[5] = v3;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v2 += 2;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

Class sub_613BC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  v5.super.Class isa = sub_86A10().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

void Package.allLocales.getter()
{
  uint64_t v0 = Package.allLocalizationPaths.getter();
  int64_t v1 = v0[2];
  if (v1)
  {
    sub_42F90(0, v1, 0);
    uint64_t v2 = v0 + 5;
    while (1)
    {
      swift_bridgeObjectRetain();
      NSString v3 = sub_86830();
      id v4 = [v3 lastPathComponent];

      if (!v4) {
        break;
      }
      id v5 = [v4 stringByDeletingPathExtension];

      uint64_t v6 = sub_86860();
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();

      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_42F90(v9 > 1, v10 + 1, 1);
      }
      v2 += 2;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      void v11[5] = v8;
      if (!--v1) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

Swift::String __swiftcall Package.localizationPath(forLocale:)(Swift::String forLocale)
{
  object = forLocale._object;
  uint64_t countAndFlagsBits = forLocale._countAndFlagsBits;
  NSString v3 = self;
  Package.allLocales.getter();
  Class isa = sub_86A10().super.isa;
  swift_bridgeObjectRelease();
  sub_2D920(&qword_CC9B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_A1CE0;
  *(void *)(v5 + 32) = countAndFlagsBits;
  *(void *)(v5 + 40) = object;
  swift_bridgeObjectRetain();
  Class v6 = sub_86A10().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 preferredLocalizationsFromArray:isa forPreferences:v6];

  sub_86A30();
  uint64_t v8 = Package.allLocalizationPaths.getter();
  uint64_t v9 = v8[2];
  if (v9)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = v8 + 5;
    while (1)
    {
      uint64_t v12 = *(v10 - 1);
      unint64_t v11 = *v10;
      swift_bridgeObjectRetain();
      v17._uint64_t countAndFlagsBits = sub_86A40();
      sub_86930(v17);
      swift_bridgeObjectRelease();
      v18._uint64_t countAndFlagsBits = 46;
      v18._object = (void *)0xE100000000000000;
      sub_86930(v18);
      sub_42240();
      char v13 = sub_86DB0();
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      v10 += 2;
      swift_bridgeObjectRelease();
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v12 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  uint64_t v14 = v12;
  uint64_t v15 = (void *)v11;
  result._object = v15;
  result._uint64_t countAndFlagsBits = v14;
  return result;
}

Swift::Void __swiftcall Package.startEviction()()
{
  BooksJetPackResourceBundle.evict()();
  if (v0)
  {
    if (qword_CC500 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_86230();
    sub_31DE4(v1, (uint64_t)qword_CD648);
    swift_errorRetain();
    swift_errorRetain();
    oslog = sub_86210();
    os_log_type_t v2 = sub_86C30();
    if (os_log_type_enabled(oslog, v2))
    {
      NSString v3 = (uint8_t *)swift_slowAlloc();
      id v4 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v3 = 138412290;
      swift_errorRetain();
      uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
      sub_86D40();
      void *v4 = v6;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, oslog, v2, "In-memory JetPack eviction failed: %@", v3, 0xCu);
      sub_2D920(&qword_CC858);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

unint64_t sub_61A80()
{
  unint64_t result = qword_CD2D0;
  if (!qword_CD2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CD2D0);
  }
  return result;
}

uint64_t sub_61AD4()
{
  NSString v0 = sub_86830();
  NSString v1 = sub_86830();
  id v2 = [self alertControllerWithTitle:v0 message:v1 preferredStyle:1];

  NSString v3 = sub_86830();
  id v4 = [self actionWithTitle:v3 style:0 handler:0];

  [v2 addAction:v4];
  unint64_t v5 = sub_49E8C((uint64_t)&_swiftEmptyArrayStorage);
  _sSo16UIViewControllerC5JSAppE7present_7options8animated10completionyAB_SDys11AnyHashableVypGSbyycSgtFZ_0(v2, v5, 1, 0, 0);

  return swift_bridgeObjectRelease();
}

void Package.init()()
{
}

uint64_t sub_61CC4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_61CD4()
{
  return type metadata accessor for Package();
}

uint64_t type metadata accessor for Package()
{
  uint64_t result = qword_CD300;
  if (!qword_CD300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_61D28()
{
  uint64_t result = type metadata accessor for BooksJetPackResourceBundle();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Package(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Package);
}

uint64_t dispatch thunk of Package.__allocating_init(jetPack:name:isBundled:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void *sub_61DF8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_85F00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_2D920(&qword_CC9D8);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          void v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_61FB4(a1, a2);
        uint64_t v13 = sub_85ED0();
        sub_43AB8(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x61FA4);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_61FB4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_6200C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6201C()
{
  return swift_release();
}

uint64_t sub_62024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_6206C()
{
  unint64_t result = qword_CC5B8;
  if (!qword_CC5B8)
  {
    sub_2D964((uint64_t *)&unk_CD030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC5B8);
  }
  return result;
}

id sub_6219C()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_activityIndicatorView];
  [v1 bounds];
  double v3 = v2;
  double v5 = v4;
  [v0 frame];
  CGFloat v6 = (CGRectGetHeight(v13) - v5) * 0.5;
  [v1 setFrame:10.0, v6, v3, v5];
  v14.origin.x = 10.0;
  v14.origin.y = v6;
  v14.size.width = v3;
  v14.size.height = v5;
  double v7 = CGRectGetMaxY(v14) + 10.0;
  [v0 frame];
  double v9 = v8 + -10.0 - v7;
  [v0 frame];
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_label];

  return [v10 setFrame:v7, 0.0, v9];
}

char *sub_622A0(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone((Class)UIActivityIndicatorView);
  uint64_t v10 = v4;
  id v11 = [v9 initWithFrame:a1, a2, 50.0, 50.0];
  *(void *)&v10[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_activityIndicatorView] = v11;
  id v12 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  *(void *)&v10[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_label] = v12;

  v33.receiver = v10;
  v33.Class super_class = (Class)type metadata accessor for HotReloadStatusHUDView();
  [super initWithFrame:a1, a2, a3, a4];
  CGRect v14 = self;
  uint64_t v15 = (char *)v13;
  id v16 = [v14 secondarySystemBackgroundColor];
  [v15 setBackgroundColor:v16];

  id v17 = [v15 layer];
  [v17 setCornerRadius:15.0];

  id v18 = [v15 layer];
  id v19 = [v14 blackColor];
  id v20 = [v19 CGColor];

  [v18 setShadowColor:v20];
  id v21 = [v15 layer];
  [v21 setShadowOffset:0.0, 1.0];

  id v22 = [v15 layer];
  [v22 setShadowRadius:10.0];

  id v23 = [v15 layer];
  LODWORD(v24) = 0.25;
  [v23 setShadowOpacity:v24];

  uint64_t v25 = *(void **)&v15[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_activityIndicatorView];
  [v25 startAnimating];
  [v15 addSubview:v25];
  uint64_t v26 = OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_label;
  uint64_t v27 = *(void **)&v15[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_label];
  uint64_t v28 = self;
  id v29 = v27;
  id v30 = [v28 boldSystemFontOfSize:18.0];
  [v29 setFont:v30];

  uint64_t v31 = *(void **)&v15[v26];
  [v31 setAdjustsFontSizeToFitWidth:1];
  [v15 addSubview:v31];

  return v15;
}

id sub_62658()
{
  return sub_63034((uint64_t (*)(void))type metadata accessor for HotReloadStatusHUDView);
}

uint64_t type metadata accessor for HotReloadStatusHUDView()
{
  return self;
}

void sub_626E0()
{
  v11.receiver = v0;
  v11.Class super_class = (Class)type metadata accessor for HotReloadStatusHUDViewController();
  [super viewDidLoad];
  id v1 = [objc_allocWithZone((Class)type metadata accessor for HotReloadStatusHUDView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v2 = OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_hudView;
  double v3 = *(void **)&v0[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_hudView];
  *(void *)&v0[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_hudView] = v1;

  double v4 = *(char **)&v0[v2];
  if (v4)
  {
    double v5 = *(void **)&v4[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_label];
    if (*(void *)&v0[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_text
                      + 8])
    {
      CGFloat v6 = v4;
      swift_bridgeObjectRetain();
      NSString v7 = sub_86830();
      swift_bridgeObjectRelease();
    }
    else
    {
      double v8 = v4;
      NSString v7 = 0;
    }
    [v5 setText:v7];
  }
  id v9 = [v0 view];
  if (v9)
  {
    if (*(void *)&v0[v2])
    {
      uint64_t v10 = v9;
      [v9 addSubview:];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_6286C()
{
  v19.receiver = v0;
  v19.Class super_class = (Class)type metadata accessor for HotReloadStatusHUDViewController();
  [super viewDidLayoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_hudView];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (v3)
    {
      double v4 = v3;
      [v3 bounds];
      CGFloat v6 = v5;
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;

      v20.origin.x = v6;
      v20.origin.y = v8;
      v20.size.width = v10;
      v20.size.height = v12;
      double Width = CGRectGetWidth(v20);
      [v2 layoutMargins];
      double v15 = Width - v14;
      [v2 layoutMargins];
      if (v15 - v16 <= 330.0) {
        double v17 = v15 - v16;
      }
      else {
        double v17 = 330.0;
      }
      [v2 layoutMargins];
      [v2 setFrame:(Width - v17) * 0.5, v18 + 5.0, v17, 60.0];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_62B40()
{
  return sub_63034((uint64_t (*)(void))type metadata accessor for HotReloadStatusHUDViewController);
}

uint64_t type metadata accessor for HotReloadStatusHUDViewController()
{
  return self;
}

void sub_62BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2
                 + OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA224HotReloadStatusHUDWindow_hudViewController);
  double v4 = (void *)(v3 + OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_text);
  void *v4 = a1;
  v4[1] = a2;
  swift_bridgeObjectRelease();
  double v5 = *(char **)(v3
                + OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA232HotReloadStatusHUDViewController_hudView);
  if (v5)
  {
    CGFloat v6 = *(void **)&v5[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA222HotReloadStatusHUDView_label];
    if (v4[1])
    {
      double v7 = v5;
      swift_bridgeObjectRetain();
      id v9 = sub_86830();
      swift_bridgeObjectRelease();
    }
    else
    {
      CGFloat v8 = v5;
      id v9 = 0;
    }
    [v6 setText:v9];
  }
}

char *sub_62CB8(void *a1)
{
  type metadata accessor for HotReloadStatusHUDViewController();
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v4 = v1;
  id v5 = [v3 init];
  *(void *)&v4[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA224HotReloadStatusHUDWindow_hudViewController] = v5;

  v22.receiver = v4;
  v22.Class super_class = (Class)type metadata accessor for HotReloadStatusHUDWindow();
  id v6 = [super initWithWindowScene:a1];
  double v7 = self;
  CGFloat v8 = (char *)v6;
  id v9 = [v7 mainScreen];
  [v9 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  [v8 setBounds:v11, v13, v15, v17];
  [v8 setRootViewController:*(void *)&v8[OBJC_IVAR____TtC5JSAppP33_E222B00B621AE7255E22C290E7F82EA224HotReloadStatusHUDWindow_hudViewController]];
  type metadata accessor for Level(0);
  sub_639F8();
  double v18 = v8;
  sub_86240();
  [v18 setWindowLevel:v21];

  objc_super v19 = v18;
  [v19 makeKeyWindow];

  return v19;
}

id sub_6301C()
{
  return sub_63034((uint64_t (*)(void))type metadata accessor for HotReloadStatusHUDWindow);
}

id sub_63034(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.Class super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t type metadata accessor for HotReloadStatusHUDWindow()
{
  return self;
}

void sub_630A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_862D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = (uint64_t *)((char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_3F6C8();
  uint64_t *v9 = sub_86CB0();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = sub_862F0();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  double v11 = *(void **)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_62BCC(a1, a2);
  if (*(unsigned char *)(v3 + 74))
  {
    if (qword_CC4F8 == -1)
    {
LABEL_4:
      uint64_t v12 = sub_86230();
      sub_31DE4(v12, (uint64_t)qword_CD630);
      double v13 = sub_86210();
      os_log_type_t v14 = sub_86C10();
      if (os_log_type_enabled(v13, v14))
      {
        double v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v15 = 0;
        swift_slowDealloc();
      }

      return;
    }
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  if ((*(unsigned char *)(v3 + 72) & 1) == 0 && (*(unsigned char *)(v3 + 73) & 1) == 0)
  {
    *(unsigned char *)(v3 + 72) = 1;
    [v11 frame];
    [v11 setFrame:];
    [v11 setHidden:0];
    double v16 = self;
    id v23 = sub_63990;
    uint64_t v24 = v3;
    aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    double v21 = sub_2DC18;
    objc_super v22 = &unk_B5980;
    double v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v23 = sub_639EC;
    uint64_t v24 = v3;
    aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    double v21 = sub_63438;
    objc_super v22 = &unk_B59A8;
    double v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v16 animateWithDuration:0 delay:v17 usingSpringWithDamping:v18 initialSpringVelocity:0.5 options:0.0 animations:0.9 completion:0.1];
    _Block_release(v18);
    _Block_release(v17);
  }
}

uint64_t sub_63438(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_6348C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_862D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = (uint64_t *)((char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_3F6C8();
  uint64_t *v9 = sub_86CB0();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  uint64_t v10 = sub_862F0();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    uint64_t v6 = (uint64_t)sub_66EE0(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
    *a1 = v6;
    goto LABEL_4;
  }
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  a1 = (uint64_t *)(v3 + 80);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 80);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 80) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_11;
  }
LABEL_4:
  unint64_t v13 = *(void *)(v6 + 16);
  unint64_t v12 = *(void *)(v6 + 24);
  if (v13 >= v12 >> 1)
  {
    uint64_t v6 = (uint64_t)sub_66EE0((char *)(v12 > 1), v13 + 1, 1, (char *)v6);
    *a1 = v6;
  }
  *(void *)(v6 + 16) = v13 + 1;
  uint64_t v14 = v6 + 16 * v13;
  *(void *)(v14 + 32) = sub_2E8DC;
  *(void *)(v14 + 40) = v10;
  swift_endAccess();
LABEL_7:
  if ((*(unsigned char *)(v3 + 74) & 1) == 0)
  {
    *(_WORD *)(v3 + 73) = 256;
    double v15 = self;
    objc_super v22 = sub_638DC;
    uint64_t v23 = v3;
    aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_2DC18;
    double v21 = &unk_B5908;
    double v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_super v22 = sub_63950;
    uint64_t v23 = v3;
    aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_63438;
    double v21 = &unk_B5930;
    double v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v15 animateWithDuration:0 delay:v16 usingSpringWithDamping:v17 initialSpringVelocity:0.5 options:0.0 animations:0.9 completion:0.1];
    _Block_release(v17);
    _Block_release(v16);
  }
}

uint64_t sub_637D0(uint64_t a1, uint64_t a2)
{
  [*(id *)(a2 + 16) setHidden:1];
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(a2 + 80);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v4 + 40;
    do
    {
      uint64_t v7 = *(void (**)(uint64_t))(v6 - 8);
      uint64_t v8 = swift_retain();
      v7(v8);
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_63878()
{
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for HotReloadStatusHUD()
{
  return self;
}

id sub_638DC()
{
  id v1 = *(void **)(v0 + 16);
  [v1 frame];

  return [v1 setFrame:];
}

uint64_t sub_63938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_63948()
{
  return swift_release();
}

uint64_t sub_63950(uint64_t a1)
{
  return sub_637D0(a1, v1);
}

uint64_t sub_63958()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_63990()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 frame];

  return [v1 setFrame:];
}

void sub_639EC()
{
  *(_WORD *)(v0 + 72) = 256;
}

unint64_t sub_639F8()
{
  unint64_t result = qword_CD518[0];
  if (!qword_CD518[0])
  {
    type metadata accessor for Level(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_CD518);
  }
  return result;
}

uint64_t sub_63A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t initializeBufferWithCopyOfBuffer for FigaroClickEvent.Location(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_63AB8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_63AD8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for Weak()
{
  return sub_63B18();
}

uint64_t sub_63B18()
{
  return swift_getGenericMetadata();
}

unint64_t static OfflineCache.cachePath.getter()
{
  return 0xD000000000000025;
}

id sub_63BA4()
{
  id result = sub_63BC8();
  byte_CD5A0 = result & 1;
  return result;
}

id sub_63BC8()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_86830();
  id v2 = [v0 BOOLForKey:v1];

  if (v2)
  {
    if (qword_CC520 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_86230();
    sub_31DE4(v3, (uint64_t)qword_CD6A8);
    uint64_t v4 = sub_86210();
    os_log_type_t v5 = sub_86C50();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "Generating the offline cache", v6, 2u);
      swift_slowDealloc();
    }
  }
  return v2;
}

uint64_t static OfflineCache.generateCache.getter()
{
  return sub_64014(&qword_CC4D8, (unsigned __int8 *)&byte_CD5A0);
}

uint64_t static OfflineCache.generateCache.setter(char a1)
{
  return sub_64110(a1, &qword_CC4D8, &byte_CD5A0);
}

uint64_t (*static OfflineCache.generateCache.modify())()
{
  if (qword_CC4D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_63E24()
{
  uint64_t result = sub_63E48();
  byte_CD5A1 = result & 1;
  return result;
}

uint64_t sub_63E48()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_86830();
  unsigned int v2 = [v0 BOOLForKey:v1];

  if (!v2) {
    return 0;
  }
  if (qword_CC4D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_CD5A0) {
    return 0;
  }
  if (qword_CC520 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_86230();
  sub_31DE4(v4, (uint64_t)qword_CD6A8);
  os_log_type_t v5 = sub_86210();
  os_log_type_t v6 = sub_86C50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Running from offline cache", v7, 2u);
    swift_slowDealloc();
  }

  return 1;
}

uint64_t static OfflineCache.runFromCache.getter()
{
  return sub_64014(&qword_CC4E0, (unsigned __int8 *)&byte_CD5A1);
}

uint64_t sub_64014(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *a2;
}

uint64_t sub_64090(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *a4;
}

uint64_t static OfflineCache.runFromCache.setter(char a1)
{
  return sub_64110(a1, &qword_CC4E0, &byte_CD5A1);
}

uint64_t sub_64110(char a1, void *a2, unsigned char *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a3 = a1 & 1;
  return result;
}

uint64_t sub_64198(uint64_t a1, uint64_t a2, char a3, void *a4, unsigned char *a5)
{
  if (*a4 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a5 = a3;
  return result;
}

uint64_t (*static OfflineCache.runFromCache.modify())()
{
  if (qword_CC4E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_64288(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_66FF0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_643DC(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_66FF0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_48F80((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_32FE8();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_66FF0((void *)(v22 > 1), v2 + 1, 1, v4);
  int64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    uint64_t v24 = &v4[2 * v2 + 4];
    *uint64_t v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

void *static OfflineCache.cacheFileCandidatesForHTTPPreLaunch()()
{
  return sub_64898((void *)0x800000000009E030, (void *)0x800000000009E050);
}

void *static OfflineCache.cacheDirCandidatesForHTTPPostLaunch()()
{
  return sub_65B38((void *)0x800000000009E010);
}

void *static OfflineCache.cacheFileCandidatesForTUIPreLaunch()()
{
  return sub_64898((void *)0x800000000009DFB0, (void *)0x800000000009DFD0);
}

void *sub_64898(void *a1, void *a2)
{
  int64_t v4 = _s5JSApp12OfflineCacheC011alternativeC5NamesSaySSGyFZ_0();
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v5 = v4[2];
  if (v5)
  {
    swift_bridgeObjectRetain();
    int64_t v6 = v4 + 5;
    do
    {
      uint64_t v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain();
      sub_64998(v10, a1, a2, &v9);
      v6 += 2;
      swift_bridgeObjectRelease();
      sub_64288(v9);
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    return v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_64998@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5 = *a1;
  int64_t v6 = (void *)a1[1];
  sub_2D920(&qword_CC9B8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_A1F70;
  sub_86EA0(34);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = v5;
  v17._object = v6;
  sub_86930(v17);
  v18._uint64_t countAndFlagsBits = 0x7473696C702ELL;
  v18._object = (void *)0xE600000000000000;
  sub_86930(v18);
  v19._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v19._object = a2;
  uint64_t v8 = sub_868D0(v19);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  sub_86EA0(24);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = v5;
  v20._object = v6;
  sub_86930(v20);
  v21._uint64_t countAndFlagsBits = 0x7473696C702ELL;
  v21._object = (void *)0xE600000000000000;
  sub_86930(v21);
  v22._uint64_t countAndFlagsBits = 0xD000000000000010;
  v22._object = a3;
  uint64_t v11 = sub_868D0(v22);
  uint64_t v13 = v12;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v7 + 48) = v11;
  *(void *)(v7 + 56) = v13;
  *a4 = v7;
  return result;
}

Class sub_64B38(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjCClassMetadata();
  a3();
  v4.super.Class isa = sub_86A10().super.isa;
  swift_bridgeObjectRelease();

  return v4.super.isa;
}

void *static OfflineCache.cacheDirCandidatesForTUIPostLaunch()()
{
  return sub_65B38((void *)0x800000000009DF90);
}

Class sub_64BD4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_65B38(a3);
  v3.super.Class isa = sub_86A10().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

id OfflineCache.init()()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for OfflineCache();
  return [super init];
}

id OfflineCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for OfflineCache();
  return [super dealloc];
}

unint64_t sub_64CD4()
{
  sub_2D920(&qword_CD5D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_A22C0;
  *(void *)(inited + 32) = 0x50413032314ALL;
  *(void *)(inited + 40) = 0xE600000000000000;
  sub_2D920(&qword_CC9B8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_A1F70;
  *(void *)(v1 + 32) = 0x50413032314ALL;
  *(void *)(v1 + 40) = 0xE600000000000000;
  *(void *)(v1 + 48) = 0x50413132314ALL;
  *(void *)(v1 + 56) = 0xE600000000000000;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = 0x50413132314ALL;
  *(void *)(inited + 64) = 0xE600000000000000;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_A1F70;
  *(void *)(v2 + 32) = 0x50413032314ALL;
  *(void *)(v2 + 40) = 0xE600000000000000;
  *(void *)(v2 + 48) = 0x50413132314ALL;
  *(void *)(v2 + 56) = 0xE600000000000000;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0x504131374ALL;
  *(void *)(inited + 88) = 0xE500000000000000;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_A22D0;
  *(void *)(v3 + 32) = 0x504131374ALL;
  *(void *)(v3 + 40) = 0xE500000000000000;
  *(void *)(v3 + 48) = 0x504132374ALL;
  *(void *)(v3 + 56) = 0xE500000000000000;
  *(void *)(v3 + 64) = 0x504133374ALL;
  *(void *)(v3 + 72) = 0xE500000000000000;
  *(void *)(v3 + 80) = 0x50417331374ALL;
  *(void *)(v3 + 88) = 0xE600000000000000;
  *(void *)(v3 + 96) = 0x50417332374ALL;
  *(void *)(v3 + 104) = 0xE600000000000000;
  *(void *)(inited + 96) = ((uint64_t (*)(void))URLParser.ParserURLType.rawValue.getter)();
  *(void *)(inited + 104) = 0x504132374ALL;
  *(void *)(inited + 112) = 0xE500000000000000;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = sub_61CC4(v4, 5);
  *int64_t v6 = 0x504131374ALL;
  v6[1] = 0xE500000000000000;
  int v6[2] = 0x504132374ALL;
  v6[3] = 0xE500000000000000;
  void v6[4] = 0x504133374ALL;
  void v6[5] = 0xE500000000000000;
  v6[6] = 0x50417331374ALL;
  v6[7] = 0xE600000000000000;
  v6[8] = 0x50417332374ALL;
  v6[9] = 0xE600000000000000;
  *(void *)(inited + 120) = URLParser.ParserURLType.rawValue.getter(v5);
  *(void *)(inited + 128) = 0x504133374ALL;
  *(void *)(inited + 136) = 0xE500000000000000;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_61CC4(v7, 5);
  void *v9 = 0x504131374ALL;
  v9[1] = 0xE500000000000000;
  void v9[2] = 0x504132374ALL;
  v9[3] = 0xE500000000000000;
  void v9[4] = 0x504133374ALL;
  void v9[5] = 0xE500000000000000;
  v9[6] = 0x50417331374ALL;
  v9[7] = 0xE600000000000000;
  v9[8] = 0x50417332374ALL;
  v9[9] = 0xE600000000000000;
  *(void *)(inited + 144) = URLParser.ParserURLType.rawValue.getter(v8);
  *(void *)(inited + 152) = 0x50417331374ALL;
  *(void *)(inited + 160) = 0xE600000000000000;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_61CC4(v10, 5);
  *uint64_t v12 = 0x504131374ALL;
  v12[1] = 0xE500000000000000;
  void v12[2] = 0x504132374ALL;
  uint64_t v12[3] = 0xE500000000000000;
  v12[4] = 0x504133374ALL;
  v12[5] = 0xE500000000000000;
  void v12[6] = 0x50417331374ALL;
  v12[7] = 0xE600000000000000;
  char v12[8] = 0x50417332374ALL;
  v12[9] = 0xE600000000000000;
  *(void *)(inited + 168) = URLParser.ParserURLType.rawValue.getter(v11);
  *(void *)(inited + 176) = 0x50417332374ALL;
  *(void *)(inited + 184) = 0xE600000000000000;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_61CC4(v13, 5);
  *BOOL v15 = 0x504131374ALL;
  v15[1] = 0xE500000000000000;
  _OWORD v15[2] = 0x504132374ALL;
  v15[3] = 0xE500000000000000;
  void v15[4] = 0x504133374ALL;
  v15[5] = 0xE500000000000000;
  v15[6] = 0x50417331374ALL;
  v15[7] = 0xE600000000000000;
  v15[8] = 0x50417332374ALL;
  v15[9] = 0xE600000000000000;
  *(void *)(inited + 192) = URLParser.ParserURLType.rawValue.getter(v14);
  *(void *)(inited + 200) = 0x504131384ALL;
  *(void *)(inited + 208) = 0xE500000000000000;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_61CC4(v16, 3);
  void *v18 = 0x504131384ALL;
  v18[1] = 0xE500000000000000;
  uint64_t v18[2] = 0x504132384ALL;
  v18[3] = 0xE500000000000000;
  void v18[4] = 0x504133384ALL;
  void v18[5] = 0xE500000000000000;
  *(void *)(inited + 216) = URLParser.ParserURLType.rawValue.getter(v17);
  *(void *)(inited + 224) = 0x504132384ALL;
  *(void *)(inited + 232) = 0xE500000000000000;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = sub_61CC4(v19, 3);
  void *v21 = 0x504131384ALL;
  v21[1] = 0xE500000000000000;
  void v21[2] = 0x504132384ALL;
  v21[3] = 0xE500000000000000;
  v21[4] = 0x504133384ALL;
  v21[5] = 0xE500000000000000;
  *(void *)(inited + 240) = URLParser.ParserURLType.rawValue.getter(v20);
  *(void *)(inited + 248) = 0x504133384ALL;
  *(void *)(inited + 256) = 0xE500000000000000;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = sub_61CC4(v22, 3);
  *uint64_t v24 = 0x504131384ALL;
  v24[1] = 0xE500000000000000;
  uint64_t v24[2] = 0x504132384ALL;
  v24[3] = 0xE500000000000000;
  v24[4] = 0x504133384ALL;
  void v24[5] = 0xE500000000000000;
  *(void *)(inited + 264) = URLParser.ParserURLType.rawValue.getter(v23);
  *(void *)(inited + 272) = 0x50413730324ALL;
  *(void *)(inited + 280) = 0xE600000000000000;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = sub_61CC4(v25, 2);
  *int64_t v27 = 0x50413730324ALL;
  v27[1] = 0xE600000000000000;
  _OWORD v27[2] = 0x50413830324ALL;
  v27[3] = 0xE600000000000000;
  *(void *)(inited + 288) = URLParser.ParserURLType.rawValue.getter(v26);
  *(void *)(inited + 296) = 0x50413830324ALL;
  *(void *)(inited + 304) = 0xE600000000000000;
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = sub_61CC4(v28, 2);
  void *v30 = 0x50413730324ALL;
  v30[1] = 0xE600000000000000;
  v30[2] = 0x50413830324ALL;
  v30[3] = 0xE600000000000000;
  *(void *)(inited + 312) = URLParser.ParserURLType.rawValue.getter(v29);
  *(void *)(inited + 320) = 0x504138394ALL;
  *(void *)(inited + 328) = 0xE500000000000000;
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = sub_61CC4(v31, 4);
  *unint64_t v33 = 0x504138394ALL;
  v33[1] = 0xE500000000000000;
  v33[2] = 0x504139394ALL;
  v33[3] = 0xE500000000000000;
  v33[4] = 0x50416138394ALL;
  void v33[5] = 0xE600000000000000;
  v33[6] = 0x50416139394ALL;
  v33[7] = 0xE600000000000000;
  *(void *)(inited + 336) = URLParser.ParserURLType.rawValue.getter(v32);
  *(void *)(inited + 344) = 0x504139394ALL;
  *(void *)(inited + 352) = 0xE500000000000000;
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = sub_61CC4(v34, 4);
  *int64_t v36 = 0x504138394ALL;
  v36[1] = 0xE500000000000000;
  v36[2] = 0x504139394ALL;
  v36[3] = 0xE500000000000000;
  v36[4] = 0x50416138394ALL;
  v36[5] = 0xE600000000000000;
  v36[6] = 0x50416139394ALL;
  v36[7] = 0xE600000000000000;
  *(void *)(inited + 360) = URLParser.ParserURLType.rawValue.getter(v35);
  *(void *)(inited + 368) = 0x50416138394ALL;
  *(void *)(inited + 376) = 0xE600000000000000;
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = sub_61CC4(v37, 4);
  *uint64_t v39 = 0x504138394ALL;
  v39[1] = 0xE500000000000000;
  v39[2] = 0x504139394ALL;
  void v39[3] = 0xE500000000000000;
  v39[4] = 0x50416138394ALL;
  v39[5] = 0xE600000000000000;
  v39[6] = 0x50416139394ALL;
  v39[7] = 0xE600000000000000;
  *(void *)(inited + 384) = URLParser.ParserURLType.rawValue.getter(v38);
  *(void *)(inited + 392) = 0x50416139394ALL;
  *(void *)(inited + 400) = 0xE600000000000000;
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = sub_61CC4(v40, 4);
  void *v42 = 0x504138394ALL;
  v42[1] = 0xE500000000000000;
  v42[2] = 0x504139394ALL;
  v42[3] = 0xE500000000000000;
  v42[4] = 0x50416138394ALL;
  v42[5] = 0xE600000000000000;
  v42[6] = 0x50416139394ALL;
  v42[7] = 0xE600000000000000;
  *(void *)(inited + 408) = URLParser.ParserURLType.rawValue.getter(v41);
  *(void *)(inited + 416) = 0x504136364ELL;
  *(void *)(inited + 424) = 0xE500000000000000;
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = sub_61CC4(v43, 2);
  *unint64_t v45 = 0x504136364ELL;
  v45[1] = 0xE500000000000000;
  v45[2] = 0x50416D36364ELL;
  v45[3] = 0xE600000000000000;
  *(void *)(inited + 432) = URLParser.ParserURLType.rawValue.getter(v44);
  *(void *)(inited + 440) = 0x50416D36364ELL;
  *(void *)(inited + 448) = 0xE600000000000000;
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = sub_61CC4(v46, 2);
  *unint64_t v48 = 0x504136364ELL;
  v48[1] = 0xE500000000000000;
  v48[2] = 0x50416D36364ELL;
  v48[3] = 0xE600000000000000;
  *(void *)(inited + 456) = URLParser.ParserURLType.rawValue.getter(v47);
  *(void *)(inited + 464) = 0x5041303144;
  *(void *)(inited + 472) = 0xE500000000000000;
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = sub_61CC4(v49, 2);
  *uint64_t v51 = 0x5041303144;
  v51[1] = 0xE500000000000000;
  v51[2] = 0x504131303144;
  v51[3] = 0xE600000000000000;
  *(void *)(inited + 480) = URLParser.ParserURLType.rawValue.getter(v50);
  *(void *)(inited + 488) = 0x504131303144;
  *(void *)(inited + 496) = 0xE600000000000000;
  uint64_t v52 = swift_allocObject();
  uint64_t v53 = sub_61CC4(v52, 2);
  *uint64_t v54 = 0x5041303144;
  v54[1] = 0xE500000000000000;
  v54[2] = 0x504131303144;
  v54[3] = 0xE600000000000000;
  *(void *)(inited + 504) = URLParser.ParserURLType.rawValue.getter(v53);
  *(void *)(inited + 512) = 0x5041313144;
  *(void *)(inited + 520) = 0xE500000000000000;
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = sub_61CC4(v55, 2);
  *uint64_t v57 = 0x5041313144;
  v57[1] = 0xE500000000000000;
  v57[2] = 0x504131313144;
  v57[3] = 0xE600000000000000;
  *(void *)(inited + 528) = URLParser.ParserURLType.rawValue.getter(v56);
  *(void *)(inited + 536) = 0x504131313144;
  *(void *)(inited + 544) = 0xE600000000000000;
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = sub_61CC4(v58, 2);
  void *v60 = 0x5041313144;
  v60[1] = 0xE500000000000000;
  v60[2] = 0x504131313144;
  v60[3] = 0xE600000000000000;
  *(void *)(inited + 552) = URLParser.ParserURLType.rawValue.getter(v59);
  *(void *)(inited + 560) = 0x5041313244;
  *(void *)(inited + 568) = 0xE500000000000000;
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = sub_61CC4(v61, 2);
  *uint64_t v63 = 0x5041313244;
  v63[1] = 0xE500000000000000;
  v63[2] = 0x504131313244;
  v63[3] = 0xE600000000000000;
  *(void *)(inited + 576) = URLParser.ParserURLType.rawValue.getter(v62);
  *(void *)(inited + 584) = 0x504131313244;
  *(void *)(inited + 592) = 0xE600000000000000;
  uint64_t v64 = swift_allocObject();
  uint64_t v65 = sub_61CC4(v64, 2);
  *uint64_t v66 = 0x5041313244;
  v66[1] = 0xE500000000000000;
  v66[2] = 0x504131313244;
  v66[3] = 0xE600000000000000;
  *(void *)(inited + 600) = URLParser.ParserURLType.rawValue.getter(v65);
  *(void *)(inited + 608) = 0x5041323244;
  *(void *)(inited + 616) = 0xE500000000000000;
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = sub_61CC4(v67, 2);
  *BOOL v69 = 0x5041323244;
  v69[1] = 0xE500000000000000;
  v69[2] = 0x504131323244;
  v69[3] = 0xE600000000000000;
  *(void *)(inited + 624) = URLParser.ParserURLType.rawValue.getter(v68);
  *(void *)(inited + 632) = 0x504131323244;
  *(void *)(inited + 640) = 0xE600000000000000;
  uint64_t v70 = swift_allocObject();
  uint64_t v71 = sub_61CC4(v70, 2);
  void *v72 = 0x5041323244;
  v72[1] = 0xE500000000000000;
  v72[2] = 0x504131323244;
  v72[3] = 0xE600000000000000;
  *(void *)(inited + 648) = URLParser.ParserURLType.rawValue.getter(v71);
  uint64_t v73 = URLParser.ParserURLType.rawValue.getter(inited);
  return sub_49FD0(v73);
}

uint64_t sub_65338(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return static String._fromUTF8Repairing(_:)(a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return static String._fromUTF8Repairing(_:)(a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return static String._fromUTF8Repairing(_:)(a1, a2);
}

uint64_t sub_65380()
{
  size_t v5 = 0;
  sysctlbyname("hw.model", 0, &v5, 0, 0);
  size_t v0 = v5;
  if ((v5 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_86F60();
    __break(1u);
  }
  else
  {
    if (v5)
    {
      uint64_t v1 = (void *)sub_86A70();
      v1[2] = v0;
      bzero(v1 + 4, v0);
    }
    else
    {
      uint64_t v1 = _swiftEmptyArrayStorage;
    }
    sysctlbyname("hw.model", v1 + 4, &v5, 0, 0);
    uint64_t v3 = sub_65338((uint64_t)v1, v2);
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t *_s5JSApp12OfflineCacheC011alternativeC5NamesSaySSGyFZ_0()
{
  uint64_t v1 = sub_65380();
  uint64_t v3 = v2;
  uint64_t v41 = _swiftEmptyArrayStorage;
  unint64_t v4 = sub_64CD4();
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_59F18(v1, v3);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_2D920(&qword_CC9B8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_A1CE0;
  *(void *)(v7 + 32) = v1;
  *(void *)(v7 + 40) = v3;
LABEL_6:
  uint64_t v8 = (uint64_t *)&v41;
  sub_64288(v7);
  id v9 = [self mainScreen];
  [v9 bounds];
  double v11 = v10;
  double v13 = v12;
  [v9 scale];
  if (v11 > v13) {
    double v15 = v11;
  }
  else {
    double v15 = v13;
  }
  double v16 = v14 * v15;
  if (v13 >= v11) {
    double v17 = v11;
  }
  else {
    double v17 = v13;
  }
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  double v18 = v14 * v17;
  uint64_t v40 = (uint64_t)v16;
  uint64_t v38 = sub_87040();
  uint64_t v39 = v19;
  uint64_t v8 = &v38;
  v42._uint64_t countAndFlagsBits = 120;
  v42._object = (void *)0xE100000000000000;
  sub_86930(v42);
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v18 < 9.22337204e18)
  {
    uint64_t v40 = (uint64_t)v18;
    v43._uint64_t countAndFlagsBits = sub_87040();
    sub_86930(v43);
    swift_bridgeObjectRelease();
    uint64_t v7 = v38;
    uint64_t v0 = v39;
    uint64_t v8 = v41;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t v8 = sub_66FF0(0, v8[2] + 1, 1, v8);
LABEL_19:
  unint64_t v21 = v8[2];
  unint64_t v20 = v8[3];
  if (v21 >= v20 >> 1) {
    uint64_t v8 = sub_66FF0((void *)(v20 > 1), v21 + 1, 1, v8);
  }
  void v8[2] = v21 + 1;
  uint64_t v22 = &v8[2 * v21];
  void v22[4] = v7;
  void v22[5] = v0;
  id v23 = [self currentDevice];
  uint64_t v24 = (char *)[v23 userInterfaceIdiom];

  BOOL v25 = v24 == (unsigned char *)&dword_0 + 1;
  if (v24 == (unsigned char *)&dword_0 + 1) {
    uint64_t v26 = 1684099177;
  }
  else {
    uint64_t v26 = 0x656E6F685069;
  }
  if (v25) {
    unint64_t v27 = 0xE400000000000000;
  }
  else {
    unint64_t v27 = 0xE600000000000000;
  }
  unint64_t v29 = v8[2];
  unint64_t v28 = v8[3];
  if (v29 >= v28 >> 1) {
    uint64_t v8 = sub_66FF0((void *)(v28 > 1), v29 + 1, 1, v8);
  }
  void v8[2] = v29 + 1;
  int64_t v30 = &v8[2 * v29];
  v30[4] = v26;
  v30[5] = v27;
  uint64_t v41 = v8;
  if (qword_CC520 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_86230();
  sub_31DE4(v31, (uint64_t)qword_CD6A8);
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_86210();
  os_log_type_t v33 = sub_86C50();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446210;
    uint64_t v35 = sub_86A40();
    uint64_t v40 = sub_422E0(v35, v36, &v38);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v32, v33, "Offline Cache names to try: %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v41;
}

void *_s5JSApp12OfflineCacheC25cacheFileCandidatesForBagSaySSGyFZ_0()
{
  uint64_t v0 = _s5JSApp12OfflineCacheC011alternativeC5NamesSaySSGyFZ_0();
  int64_t v1 = v0[2];
  if (v1)
  {
    sub_42F90(0, v1, 0);
    uint64_t v2 = (void **)(v0 + 5);
    do
    {
      uint64_t v3 = (uint64_t)*(v2 - 1);
      unint64_t v4 = *v2;
      swift_bridgeObjectRetain();
      sub_86EA0(27);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = v3;
      v12._object = v4;
      sub_86930(v12);
      v13._uint64_t countAndFlagsBits = 0x7473696C702ELL;
      v13._object = (void *)0xE600000000000000;
      sub_86930(v13);
      v14._uint64_t countAndFlagsBits = 0xD000000000000013;
      v14._object = (void *)0x800000000009DFF0;
      uint64_t v5 = sub_868D0(v14);
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_42F90(v8 > 1, v9 + 1, 1);
      }
      v2 += 2;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      double v10 = &_swiftEmptyArrayStorage[2 * v9];
      void v10[4] = v5;
      v10[5] = v7;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_65B38(void *a1)
{
  int64_t v1 = _s5JSApp12OfflineCacheC011alternativeC5NamesSaySSGyFZ_0();
  int64_t v2 = v1[2];
  if (v2)
  {
    sub_42F90(0, v2, 0);
    uint64_t v3 = (void **)(v1 + 5);
    do
    {
      uint64_t v4 = (uint64_t)*(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      sub_86EA0(29);
      swift_bridgeObjectRelease();
      v14._uint64_t countAndFlagsBits = v4;
      v14._object = v5;
      sub_86930(v14);
      v15._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v15._object = a1;
      uint64_t v6 = sub_868D0(v15);
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_42F90(v9 > 1, v10 + 1, 1);
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      double v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      void v11[5] = v8;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for OfflineCache()
{
  return self;
}

id HarConfiguration.init()()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for HarConfiguration();
  return [super init];
}

id HarConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for HarConfiguration();
  return [super dealloc];
}

id _s5JSApp16HarConfigurationC5setupyyFZ_0()
{
  uint64_t v0 = sub_2D920(&qword_CC7D8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned int v4 = [self isInternalBuild];
  uint64_t v5 = self;
  uint64_t v6 = v5;
  if (v4)
  {
    [v5 setIncludeFullResponseInHARLogging:1];
    if (qword_CC450 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_31DE4(v0, (uint64_t)qword_CCD10);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v7, v0);
    sub_86080();
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    int v8 = v11[15];
    unint64_t v9 = self;
    if (v8 == 1)
    {
      [v9 setHARLoggingItemLimit:200];
      return [v6 setIncludeFullRequestInHARLogging:1];
    }
    else
    {
      [v9 setHARLoggingItemLimit:50];
      return [v6 setIncludeFullRequestInHARLogging:0];
    }
  }
  else
  {
    [v5 setIncludeFullResponseInHARLogging:0];
    return [v6 setIncludeFullRequestInHARLogging:0];
  }
}

uint64_t type metadata accessor for HarConfiguration()
{
  return self;
}

uint64_t sub_65FB8(uint64_t a1)
{
  return sub_66318(a1, qword_CD600);
}

uint64_t static Logger.accountController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC4E8, (uint64_t)qword_CD600, a1);
}

uint64_t sub_66000(uint64_t a1)
{
  return sub_66318(a1, qword_CD618);
}

uint64_t static Logger.figaroEvents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC4F0, (uint64_t)qword_CD618, a1);
}

uint64_t sub_66048(uint64_t a1)
{
  return sub_66318(a1, qword_CD630);
}

uint64_t static Logger.hotReload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC4F8, (uint64_t)qword_CD630, a1);
}

uint64_t sub_66098(uint64_t a1)
{
  return sub_66318(a1, qword_CD648);
}

uint64_t static Logger.jetPack.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC500, (uint64_t)qword_CD648, a1);
}

uint64_t sub_660E8(uint64_t a1)
{
  return sub_66318(a1, qword_CD660);
}

uint64_t static Logger.localization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC508, (uint64_t)qword_CD660, a1);
}

uint64_t sub_66130(uint64_t a1)
{
  return sub_66318(a1, qword_CD678);
}

uint64_t static Logger.lookup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC510, (uint64_t)qword_CD678, a1);
}

uint64_t sub_6617C(uint64_t a1)
{
  return sub_66318(a1, qword_CD690);
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC518, (uint64_t)qword_CD690, a1);
}

uint64_t sub_661CC(uint64_t a1)
{
  return sub_66318(a1, qword_CD6A8);
}

uint64_t static Logger.offlineCache.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC520, (uint64_t)qword_CD6A8, a1);
}

uint64_t sub_66214(uint64_t a1)
{
  return sub_66318(a1, qword_CD6C0);
}

uint64_t static Logger.packageProvisioner.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC528, (uint64_t)qword_CD6C0, a1);
}

uint64_t sub_6625C(uint64_t a1)
{
  return sub_66318(a1, qword_CD6D8);
}

uint64_t static Logger.requestEncoder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC530, (uint64_t)qword_CD6D8, a1);
}

uint64_t sub_662A4(uint64_t a1)
{
  return sub_66318(a1, qword_CD6F0);
}

uint64_t static Logger.uiApplicationHelper.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC538, (uint64_t)qword_CD6F0, a1);
}

uint64_t sub_662EC(uint64_t a1)
{
  return sub_66318(a1, qword_CD708);
}

uint64_t sub_66318(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_86230();
  sub_3F910(v3, a2);
  sub_31DE4(v3, (uint64_t)a2);
  return sub_86220();
}

uint64_t static Logger.urlParser.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_663B4(&qword_CC540, (uint64_t)qword_CD708, a1);
}

uint64_t sub_663B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_86230();
  uint64_t v6 = sub_31DE4(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

id JSValue.isNullish.getter()
{
  if ([v0 isUndefined]) {
    return &dword_0 + 1;
  }
  else {
    return [v0 isNull];
  }
}

uint64_t sub_66630(uint64_t a1)
{
  uint64_t v3 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_85EB0();
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int64_t v30 = (char *)&v26 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v26 = a1;
    uint64_t v27 = v1;
    uint64_t v13 = a1 + 32;
    uint64_t v32 = (void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    Swift::String v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v29 = v10;
    Swift::String v15 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    swift_bridgeObjectRetain();
    double v16 = _swiftEmptyArrayStorage;
    uint64_t v31 = (char *)&type metadata for Any + 8;
    unint64_t v28 = v9;
    do
    {
      sub_3F66C(v13, (uint64_t)v35);
      sub_3F66C((uint64_t)v35, (uint64_t)v34);
      sub_67970();
      if (swift_dynamicCast())
      {
        id v17 = v33;
        id v18 = [v33 activityItem];
        sub_86DC0();

        swift_unknownObjectRelease();
      }
      else
      {
        sub_3F66C((uint64_t)v35, (uint64_t)v34);
      }
      int v19 = swift_dynamicCast();
      (*v32)(v5, v19 ^ 1u, 1, v6);
      sub_3ED88((uint64_t)v35);
      if ((*v14)(v5, 1, v6) == 1)
      {
        sub_679B0((uint64_t)v5);
      }
      else
      {
        unint64_t v20 = *v15;
        unint64_t v21 = v30;
        (*v15)(v30, v5, v6);
        v20(v9, v21, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v16 = (void *)sub_67100(0, v16[2] + 1, 1, (unint64_t)v16);
        }
        unint64_t v23 = v16[2];
        unint64_t v22 = v16[3];
        if (v23 >= v22 >> 1) {
          double v16 = (void *)sub_67100(v22 > 1, v23 + 1, 1, (unint64_t)v16);
        }
        void v16[2] = v23 + 1;
        unint64_t v24 = (unint64_t)v16
            + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
            + *(void *)(v29 + 72) * v23;
        unint64_t v9 = v28;
        v20((char *)v24, v28, v6);
      }
      v13 += 32;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v1 = v27;
  }
  else
  {
    double v16 = _swiftEmptyArrayStorage;
  }
  *(void *)(v1 + OBJC_IVAR___JSACopyLinkActivity_items) = v16;
  return swift_bridgeObjectRelease();
}

id sub_66A10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)&v1[OBJC_IVAR___JSACopyLinkActivity_items];
  if (v5 && *(void *)(v5 + 16))
  {
    uint64_t v6 = self;
    swift_bridgeObjectRetain();
    id result = [v6 generalPasteboard];
    if (*(void *)(v5 + 16))
    {
      uint64_t v8 = result;
      uint64_t v9 = sub_85EB0();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v4, v5 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
      {
        sub_679B0((uint64_t)v4);
        NSString v11 = 0;
      }
      else
      {
        sub_85E10();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
        NSString v11 = sub_86830();
        swift_bridgeObjectRelease();
      }
      [v8 setString:v11];

      return [v1 activityDidFinish:1];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    return [v1 activityDidFinish:1];
  }
  return result;
}

id CopyLinkActivity.init()()
{
  *(void *)&v0[OBJC_IVAR___JSACopyLinkActivity_items] = 0;
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CopyLinkActivity();
  return [super init];
}

id CopyLinkActivity.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CopyLinkActivity();
  return [super dealloc];
}

char *sub_66D88(char *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2D920(&qword_CC9E0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || (unint64_t)v13 >= a4 + 32 + 8 * v8)
        {
          sub_2D920(&qword_CC658);
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (char *)a4)
        {
          sub_2D920(&qword_CC658);
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_67474(0, v8, (unint64_t)v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_66EE0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2D920(&qword_CD758);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_67368(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_66FF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2D920(&qword_CC9B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      uint64_t v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_67580(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_67100(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_2D920(&qword_CD768);
  uint64_t v10 = *(void *)(sub_85EB0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_86F60();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_85EB0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_67A4C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_67368(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2D920(&qword_CD760);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_67474(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_2D920(&qword_CC658);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_67580(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

uint64_t sub_67674()
{
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v2 = sub_86830();
  NSString v3 = sub_86830();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = sub_86860();
  return v5;
}

uint64_t sub_67750(uint64_t a1)
{
  uint64_t v2 = sub_85EB0();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v15 = v6;
  uint64_t v16 = a1;
  uint64_t v10 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_3F66C(v10, (uint64_t)v19);
    sub_3F66C((uint64_t)v19, (uint64_t)v18);
    sub_67970();
    if (!swift_dynamicCast()) {
      break;
    }
    id v11 = v17;
    id v12 = [v17 activityItem];
    sub_86DC0();

    swift_unknownObjectRelease();
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v2);
      goto LABEL_11;
    }
LABEL_4:
    sub_3ED88((uint64_t)v19);
    v10 += 32;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  sub_3F66C((uint64_t)v19, (uint64_t)v18);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v2);
LABEL_11:
  sub_3ED88((uint64_t)v19);
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_67970()
{
  unint64_t result = qword_CD720;
  if (!qword_CD720)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_CD720);
  }
  return result;
}

uint64_t sub_679B0(uint64_t a1)
{
  uint64_t v2 = sub_2D920((uint64_t *)&unk_CD040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CopyLinkActivity()
{
  return self;
}

uint64_t method lookup function for CopyLinkActivity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CopyLinkActivity);
}

uint64_t sub_67A4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_85EB0() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

id sub_67C84()
{
  return sub_6887C(type metadata accessor for FigaroEventCell);
}

uint64_t type metadata accessor for FigaroEventCell()
{
  return self;
}

void sub_67D1C()
{
  v7.receiver = v0;
  v7.Class super_class = (Class)type metadata accessor for FigaroEventViewController();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  sub_6BAD8();
  NSString v2 = sub_86830();
  swift_bridgeObjectRelease();
  [v1 setTitle:v2];

  id v3 = [v0 tableView];
  if (v3)
  {
    uint64_t v4 = v3;
    type metadata accessor for FigaroEventCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v6 = sub_86830();
    [v4 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v6];
  }
  else
  {
    __break(1u);
  }
}

id sub_67F30(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = sub_86830();
  v5.super.Class isa = sub_85FD0().super.isa;
  id v6 = [a1 dequeueReusableCellWithIdentifier:v4 forIndexPath:v5.super.isa];

  if (sub_86000())
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC5JSApp25FigaroEventViewController_baseFields);
    unint64_t v7 = sub_85FF0();
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v7 < *(void *)(v2 + 16)) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC5JSApp25FigaroEventViewController_eventFields);
  unint64_t v9 = sub_85FF0();
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v9 >= *(void *)(v8 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_7:
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v10 = [v6 textLabel];
  if (v10)
  {
    unint64_t v11 = v10;
    swift_bridgeObjectRetain();
    NSString v12 = sub_86830();
    swift_bridgeObjectRelease();
    [v11 setText:v12];
  }
  swift_unknownObjectRetain_n();
  sub_2D920(&qword_CCAE0);
  if (swift_dynamicCast())
  {
    swift_unknownObjectRetain();
    sub_2D920(&qword_CCAD8);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      id v13 = [v6 detailTextLabel];
      if (v13)
      {
        uint64_t v14 = v13;
        sub_49194();
        sub_86820();
        swift_bridgeObjectRelease();
        NSString v15 = sub_86830();
        swift_bridgeObjectRelease();
        [v14 setText:v15];

LABEL_20:
        uint64_t v19 = 1;
        goto LABEL_21;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    unint64_t v20 = (objc_class *)[v6 detailTextLabel];
    if (!v20) {
      goto LABEL_19;
    }
    v5.super.Class isa = v20;
    if (!(v23 >> 62))
    {
LABEL_18:
      swift_bridgeObjectRelease();
      sub_87040();
      v24._uint64_t countAndFlagsBits = 0x746E656D656C6520;
      v24._object = (void *)0xEB00000000297328;
      sub_86930(v24);
      NSString v21 = sub_86830();
      swift_bridgeObjectRelease();
      [(objc_class *)v5.super.isa setText:v21];

      goto LABEL_20;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    sub_86F80();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  id v16 = [v6 detailTextLabel];
  if (v16)
  {
    id v17 = v16;
    sub_86F50();
    NSString v18 = sub_86830();
    swift_bridgeObjectRelease();
    [v17 setText:v18];
  }
  uint64_t v19 = 0;
LABEL_21:
  [v6 setAccessoryType:v19];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  return v6;
}

unint64_t sub_68470(void *a1)
{
  uint64_t v2 = v1;
  Class isa = sub_85FD0().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  if (!sub_86000())
  {
LABEL_5:
    uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC5JSApp25FigaroEventViewController_eventFields];
    unint64_t result = sub_85FF0();
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(v7 + 16)) {
        goto LABEL_7;
      }
LABEL_19:
      __break(1u);
      return result;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC5JSApp25FigaroEventViewController_baseFields];
  unint64_t result = sub_85FF0();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(void *)(v5 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
LABEL_7:
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_2D920(&qword_CD7D8);
  if (swift_dynamicCast())
  {
    if (*(void *)(v15 + 16))
    {
      id v8 = objc_allocWithZone((Class)type metadata accessor for FigaroEventFieldViewController());
      id v9 = sub_46D88(v15);
      id v10 = [v9 navigationItem];
      Class v11 = sub_85FD0().super.isa;
      NSString v12 = [a1 cellForRowAtIndexPath:v11];

      if (v12)
      {
        id v13 = [v12 textLabel];

        if (v13)
        {
          NSString v12 = [v13 text];

          if (v12)
          {
            sub_86860();

            NSString v12 = sub_86830();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          NSString v12 = 0;
        }
      }
      [v10 setTitle:v12];

      id v14 = [v2 navigationController];
      [v14 pushViewController:v9 animated:1];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_68864()
{
  return sub_6887C(type metadata accessor for FigaroEventViewController);
}

id sub_6887C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.Class super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FigaroEventViewController()
{
  return self;
}

id sub_68934(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5JSApp25FigaroEventViewController_event] = a1;
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain_n();
  NSString v4 = v1;
  swift_retain();
  uint64_t v5 = sub_7407C(v3);
  swift_bridgeObjectRelease();
  id v13 = v5;
  sub_479A8(&v13);
  swift_bridgeObjectRelease();
  id v6 = sub_68AAC((uint64_t)v13);
  swift_release();
  *(void *)&v4[OBJC_IVAR____TtC5JSApp25FigaroEventViewController_eventFields] = v6;
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain_n();
  id v8 = sub_7407C(v7);
  swift_bridgeObjectRelease();
  NSString v12 = v8;
  sub_479A8(&v12);
  swift_bridgeObjectRelease();
  id v9 = sub_68AAC((uint64_t)v12);
  swift_release();
  *(void *)&v4[OBJC_IVAR____TtC5JSApp25FigaroEventViewController_baseFields] = v9;

  v11.receiver = v4;
  v11.Class super_class = (Class)type metadata accessor for FigaroEventViewController();
  return [super initWithStyle:2];
}

void *sub_68AAC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_42F60(0, v1, 0);
    uint64_t v3 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      sub_2D920(&qword_CC988);
      sub_2D920(&qword_CC978);
      swift_dynamicCast();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_42F60(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_42F60(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      id v6 = &_swiftEmptyArrayStorage[3 * v5];
      void v6[4] = v8;
      *(_OWORD *)(v6 + 5) = v9;
      v3 += 24;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_68C28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_86F20();
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      sub_86F00();
      sub_86F30();
      sub_86F40();
      sub_86F10();
      v4 += 16;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

float sub_68D2C()
{
  return *(float *)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest__priority);
}

void sub_68D4C(float a1)
{
  *(float *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest__priority) = a1;
}

float (*sub_68D5C(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___JSAStoreContentLookupRequest__priority;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2);
  return sub_68D90;
}

float sub_68D90(uint64_t a1)
{
  float result = *(float *)(a1 + 16);
  *(float *)(*(void *)a1 + *(void *)(a1 + 8)) = result;
  return result;
}

uint64_t sub_68E1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_68EB4(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0) {
    *(void *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions) = a1;
  }
  return swift_bridgeObjectRelease();
}

void *sub_68EDC(void *result, void *a2)
{
  if ((*(unsigned char *)(*a2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0)
  {
    *(void *)(*a2 + OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions) = *result;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_68F44(void *a1))(void *a1, char a2)
{
  uint64_t v2 = OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions;
  a1[2] = OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions;
  *a1 = *(void *)(v1 + v2);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_68F9C;
}

uint64_t sub_68F9C(void *a1, char a2)
{
  uint64_t v2 = a1[1];
  if (a2)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) != 1)
    {
      *(void *)(v2 + a1[2]) = *a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  else if ((*(unsigned char *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0)
  {
    *(void *)(v2 + a1[2]) = *a1;
  }

  return swift_bridgeObjectRelease();
}

void *sub_690DC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest__itemIdentifiers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  float result = _swiftEmptyArrayStorage;
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_86F20();
    uint64_t v5 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      sub_86F00();
      sub_86F30();
      sub_86F40();
      sub_86F10();
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_69278(unint64_t a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0)
  {
    uint64_t v4 = (void *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest__itemIdentifiers);
    swift_beginAccess();
    void *v4 = _swiftEmptyArrayStorage;
    uint64_t result = swift_bridgeObjectRelease();
    if (!a1) {
      return result;
    }
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_86F80();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
      if (v5)
      {
LABEL_8:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; v5 != i; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0)
          {
            uint64_t v8 = sub_86ED0();
          }
          else
          {
            uint64_t v8 = *(void *)(a1 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          uint64_t v32 = v8;
          swift_unknownObjectRetain();
          if (swift_dynamicCast())
          {
            uint64_t v9 = v30;
            uint64_t v10 = v31;
            swift_beginAccess();
            objc_super v11 = (void *)*v4;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            void *v4 = v11;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              objc_super v11 = sub_66FF0(0, v11[2] + 1, 1, v11);
              void *v4 = v11;
            }
            unint64_t v14 = v11[2];
            unint64_t v13 = v11[3];
            if (v14 >= v13 >> 1)
            {
              objc_super v11 = sub_66FF0((void *)(v13 > 1), v14 + 1, 1, v11);
              void *v4 = v11;
            }
            void v11[2] = v14 + 1;
            uint64_t v7 = &v11[2 * v14];
            void v7[4] = v9;
            void v7[5] = v10;
            swift_endAccess();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
            uint64_t v30 = v8;
            swift_unknownObjectRetain();
            if (!swift_dynamicCast())
            {
              swift_unknownObjectRelease();
              if (qword_CC510 != -1) {
                swift_once();
              }
              uint64_t v23 = sub_86230();
              sub_31DE4(v23, (uint64_t)qword_CD678);
              swift_unknownObjectRetain_n();
              Swift::String v24 = sub_86210();
              os_log_type_t v25 = sub_86C30();
              if (os_log_type_enabled(v24, v25))
              {
                uint64_t v26 = swift_slowAlloc();
                v29[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v26 = 136315138;
                uint64_t v30 = v8;
                swift_unknownObjectRetain();
                uint64_t v27 = sub_868A0();
                *(void *)(v26 + 4) = sub_422E0(v27, v28, v29);
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v24, v25, "Invalid item identifier %s", (uint8_t *)v26, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                swift_unknownObjectRelease();
              }
              else
              {

                swift_unknownObjectRelease_n();
              }
              continue;
            }
            v29[0] = v32;
            uint64_t v15 = sub_87040();
            uint64_t v17 = v16;
            swift_beginAccess();
            NSString v18 = (void *)*v4;
            char v19 = swift_isUniquelyReferenced_nonNull_native();
            void *v4 = v18;
            if ((v19 & 1) == 0)
            {
              NSString v18 = sub_66FF0(0, v18[2] + 1, 1, v18);
              void *v4 = v18;
            }
            unint64_t v21 = v18[2];
            unint64_t v20 = v18[3];
            if (v21 >= v20 >> 1)
            {
              NSString v18 = sub_66FF0((void *)(v20 > 1), v21 + 1, 1, v18);
              void *v4 = v18;
            }
            uint64_t v18[2] = v21 + 1;
            unint64_t v22 = &v18[2 * v21];
            void v22[4] = v15;
            void v22[5] = v17;
            swift_endAccess();
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_69750@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_68C28(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

void (*sub_697C4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = v1;
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_68C28(v4);
  swift_bridgeObjectRelease();
  v3[3] = v5;
  return sub_6985C;
}

void sub_6985C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  unint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    unint64_t v4 = swift_bridgeObjectRetain();
    sub_69278(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_69278(v3);
  }

  free(v2);
}

void *sub_698D0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse);
  id v2 = v1;
  return v1;
}

void sub_69964(void *a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0)
  {
    id v2 = *(void **)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse);
    *(void *)(v1 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse) = a1;
    a1 = v2;
  }
}

void sub_6998C(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if ((*(unsigned char *)(*a2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0)
  {
    unint64_t v3 = *a1;
    id v5 = *(id *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse);
    *(void *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse) = *a1;
    id v4 = v3;
  }
}

uint64_t (*sub_699F8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = OBJC_IVAR___JSAStoreContentLookupRequest__onResponse;
  a1[1] = v1;
  a1[2] = v2;
  unint64_t v3 = *(void **)(v1 + v2);
  *a1 = v3;
  id v4 = v3;
  return sub_69A50;
}

uint64_t sub_69A50(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (a2)
  {
    unint64_t v3 = *(void **)a1;
    if (*(unsigned char *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) != 1)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      id v5 = *(void **)(v2 + v4);
      *(void *)(v2 + v4) = v3;
      id v9 = v3;

      unint64_t v3 = v9;
    }
  }
  else
  {
    unint64_t v3 = *(void **)a1;
    if ((*(unsigned char *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) == 0)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(void **)(v2 + v6);
      *(void *)(v2 + v6) = v3;
      unint64_t v3 = v7;
    }
  }

  return _objc_release_x1(a1, v3);
}

id StoreContentLookupRequest.init()()
{
  *(void *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions] = 0;
  *(void *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest__itemIdentifiers] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest__onResponse] = 0;
  *(void *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest_lookup] = 0;
  *(void *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise] = 0;
  v0[OBJC_IVAR___JSAStoreContentLookupRequest_frozen] = 0;
  *(_DWORD *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest__priority] = 2143289344;
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for StoreContentLookupRequest();
  return [super init];
}

id StoreContentLookupRequest.__deallocating_deinit()
{
  if ((v0[OBJC_IVAR___JSAStoreContentLookupRequest_frozen] & 1) == 0)
  {
    uint64_t v1 = *(void **)&v0[OBJC_IVAR___JSAStoreContentLookupRequest__onResponse];
    *(void *)&v0[OBJC_IVAR___JSAStoreContentLookupRequest__onResponse] = 0;
  }
  v3.receiver = v0;
  v3.Class super_class = (Class)type metadata accessor for StoreContentLookupRequest();
  [super dealloc];
}

void sub_69CE8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse);
  if (v1)
  {
    uint64_t v2 = v0;
    swift_beginAccess();
    id v3 = v1;
    uint64_t v4 = swift_bridgeObjectRetain();
    unint64_t v5 = (unint64_t)sub_68C28(v4);
    swift_bridgeObjectRelease();
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_86F80();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    if (v6 < 1 || (*(unsigned char *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) & 1) != 0) {
      goto LABEL_42;
    }
    *(unsigned char *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) = 1;
    uint64_t v7 = OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions;
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions);
    if (v8 && *(void *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      sub_59F18(0x72656C6C6163, 0xE600000000000000);
      if (v9)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (swift_dynamicCast())
        {
          uint64_t v10 = *(void *)(v2 + v7);
          if (!v10) {
            goto LABEL_22;
          }
          goto LABEL_17;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    id v11 = [self mainBundle];
    id v12 = [v11 bundleIdentifier];

    if (v12)
    {
      sub_86860();

      uint64_t v10 = *(void *)(v2 + v7);
      if (!v10) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = *(void *)(v2 + v7);
      if (!v10) {
        goto LABEL_22;
      }
    }
LABEL_17:
    if (*(void *)(v10 + 16))
    {
      swift_bridgeObjectRetain();
      sub_59F18(112, 0xE100000000000000);
      if (v13)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (swift_dynamicCast()) {
          goto LABEL_23;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
LABEL_22:
    sub_86860();
LABEL_23:
    id v14 = [self defaultBag];
    id v15 = objc_allocWithZone((Class)AMSLookup);
    NSString v16 = sub_86830();
    swift_bridgeObjectRelease();
    NSString v17 = sub_86830();
    swift_bridgeObjectRelease();
    id v18 = [v15 initWithBag:v14 caller:v16 keyProfile:v17];

    uint64_t v19 = OBJC_IVAR___JSAStoreContentLookupRequest_lookup;
    unint64_t v20 = *(void **)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_lookup);
    *(void *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_lookup) = v18;

    uint64_t v21 = *(void *)(v2 + v7);
    if (v21 && *(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain();
      sub_59F18(0x6E6F6973726576, 0xE700000000000000);
      if ((v22 & 1) == 0)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      if (swift_dynamicCast())
      {
        unint64_t v23 = HIBYTE(v55) & 0xF;
        uint64_t v24 = aBlock & 0xFFFFFFFFFFFFLL;
        if ((v55 & 0x2000000000000000) != 0) {
          unint64_t v25 = HIBYTE(v55) & 0xF;
        }
        else {
          unint64_t v25 = aBlock & 0xFFFFFFFFFFFFLL;
        }
        if (v25)
        {
          if ((v55 & 0x1000000000000000) != 0)
          {
            uint64_t v27 = (uint64_t)sub_6ACF0(aBlock, v55, 10);
            char v29 = v53;
            goto LABEL_78;
          }
          if ((v55 & 0x2000000000000000) == 0)
          {
            if ((aBlock & 0x1000000000000000) != 0) {
              uint64_t v26 = (unsigned __int8 *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else {
              uint64_t v26 = (unsigned __int8 *)sub_86EF0();
            }
            uint64_t v27 = (uint64_t)sub_6B1A0(v26, v24, 10);
            char v29 = v28 & 1;
LABEL_78:
            swift_bridgeObjectRelease();
            if ((v29 & 1) == 0) {
              [*(id *)(v2 + v19) setVersion:v27];
            }
            goto LABEL_37;
          }
          v55 &= 0xFFFFFFFFFFFFFFuLL;
          if (aBlock == 43)
          {
            if (!v23) {
              goto LABEL_90;
            }
            if (v23 == 1 || (BYTE1(aBlock) - 48) > 9u) {
              goto LABEL_65;
            }
            uint64_t v27 = (BYTE1(aBlock) - 48);
            if (v23 != 2)
            {
              if ((BYTE2(aBlock) - 48) > 9u) {
                goto LABEL_65;
              }
              uint64_t v27 = 10 * (BYTE1(aBlock) - 48) + (BYTE2(aBlock) - 48);
              unint64_t v41 = v23 - 3;
              if (v41)
              {
                Swift::String v42 = (unsigned __int8 *)&aBlock + 3;
                while (1)
                {
                  unsigned int v43 = *v42 - 48;
                  if (v43 > 9) {
                    goto LABEL_65;
                  }
                  uint64_t v44 = 10 * v27;
                  if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
                    goto LABEL_65;
                  }
                  uint64_t v27 = v44 + v43;
                  if (__OFADD__(v44, v43)) {
                    goto LABEL_65;
                  }
                  char v29 = 0;
                  ++v42;
                  if (!--v41) {
                    goto LABEL_78;
                  }
                }
              }
            }
          }
          else
          {
            if (aBlock == 45)
            {
              if (v23)
              {
                if (v23 != 1 && (BYTE1(aBlock) - 48) <= 9u)
                {
                  if (v23 == 2)
                  {
                    char v29 = 0;
                    uint64_t v27 = -(uint64_t)(BYTE1(aBlock) - 48);
                    goto LABEL_78;
                  }
                  if ((BYTE2(aBlock) - 48) <= 9u)
                  {
                    uint64_t v27 = -10 * (BYTE1(aBlock) - 48) - (BYTE2(aBlock) - 48);
                    unint64_t v49 = v23 - 3;
                    if (!v49) {
                      goto LABEL_77;
                    }
                    uint64_t v50 = (unsigned __int8 *)&aBlock + 3;
                    while (1)
                    {
                      unsigned int v51 = *v50 - 48;
                      if (v51 > 9) {
                        break;
                      }
                      uint64_t v52 = 10 * v27;
                      if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
                        break;
                      }
                      uint64_t v27 = v52 - v51;
                      if (__OFSUB__(v52, v51)) {
                        break;
                      }
                      char v29 = 0;
                      ++v50;
                      if (!--v49) {
                        goto LABEL_78;
                      }
                    }
                  }
                }
LABEL_65:
                uint64_t v27 = 0;
                char v29 = 1;
                goto LABEL_78;
              }
              __break(1u);
LABEL_90:
              __break(1u);
              return;
            }
            if (!v23 || (aBlock - 48) > 9u) {
              goto LABEL_65;
            }
            uint64_t v27 = (aBlock - 48);
            if (v23 != 1)
            {
              if ((BYTE1(aBlock) - 48) > 9u) {
                goto LABEL_65;
              }
              uint64_t v27 = 10 * (aBlock - 48) + (BYTE1(aBlock) - 48);
              unint64_t v45 = v23 - 2;
              if (v45)
              {
                uint64_t v46 = (unsigned __int8 *)&aBlock + 2;
                while (1)
                {
                  unsigned int v47 = *v46 - 48;
                  if (v47 > 9) {
                    goto LABEL_65;
                  }
                  uint64_t v48 = 10 * v27;
                  if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
                    goto LABEL_65;
                  }
                  uint64_t v27 = v48 + v47;
                  if (__OFADD__(v48, v47)) {
                    goto LABEL_65;
                  }
                  char v29 = 0;
                  ++v46;
                  if (!--v45) {
                    goto LABEL_78;
                  }
                }
              }
            }
          }
LABEL_77:
          char v29 = 0;
          goto LABEL_78;
        }
        goto LABEL_36;
      }
    }
LABEL_37:
    uint64_t v30 = *(void **)(v2 + v19);
    if (v30)
    {
      id v31 = v30;
      swift_bridgeObjectRetain();
      Class isa = sub_86A10().super.isa;
      swift_bridgeObjectRelease();
      id v33 = [v31 performLookupWithBundleIdentifiers:0 itemIdentifiers:isa];
    }
    else
    {
      id v33 = 0;
    }
    uint64_t v34 = OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise;
    uint64_t v35 = *(void **)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise);
    *(void *)(v2 + OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise) = v33;

    unint64_t v36 = *(void **)(v2 + v34);
    if (v36)
    {
      uint64_t v37 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v3;
      *(void *)(v38 + 24) = v37;
      uint64_t v58 = sub_6ACD0;
      uint64_t v59 = v38;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v55 = 1107296256;
      uint64_t v56 = sub_6A9D4;
      uint64_t v57 = &unk_B5A78;
      uint64_t v39 = _Block_copy(&aBlock);
      id v40 = v3;
      id v3 = v36;
      swift_release();
      [v3 addFinishBlock:v39];

      _Block_release(v39);
    }
LABEL_42:
  }
}

void sub_6A4B4(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_CC510 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_86230();
    sub_31DE4(v5, (uint64_t)qword_CD678);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = sub_86210();
    os_log_type_t v7 = sub_86C30();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v35 = a3;
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(void *)&v37[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_getErrorValue();
      uint64_t v9 = sub_870C0();
      *(void *)&v36[0] = sub_422E0(v9, v10, (uint64_t *)v37);
      sub_86D40();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v6, v7, "Invalid item identifier %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v35;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  unint64_t v11 = sub_4A0EC((uint64_t)_swiftEmptyArrayStorage);
  if (a1)
  {
    id v12 = [a1 valueForProperty:AMSLookupPropertyIsAuthenticated];
    sub_86DC0();
    swift_unknownObjectRelease();
    sub_4B3D4(v36, v37);
    uint64_t v13 = sub_86860();
    uint64_t v15 = v14;
    sub_3F66C((uint64_t)v37, (uint64_t)v36);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_70004(v36, v13, v15, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3ED88((uint64_t)v37);
    id v17 = [a1 valueForProperty:AMSLookupPropertyResults];
    sub_86DC0();
    swift_unknownObjectRelease();
    sub_4B3D4(v36, v37);
    uint64_t v18 = sub_86860();
    uint64_t v20 = v19;
    sub_3F66C((uint64_t)v37, (uint64_t)v36);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_70004(v36, v18, v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3ED88((uint64_t)v37);
    id v22 = [a1 valueForProperty:AMSLookupPropertyStatus];
    sub_86DC0();
    swift_unknownObjectRelease();
    sub_4B3D4(v36, v37);
    uint64_t v23 = sub_86860();
    uint64_t v25 = v24;
    sub_3F66C((uint64_t)v37, (uint64_t)v36);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_70004(v36, v23, v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3ED88((uint64_t)v37);
  }
  id v27 = [self sharedInstance];
  sub_2D920(&qword_CCA60);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_A1CE0;
  *(void *)(v28 + 56) = sub_2D920(&qword_CD840);
  *(void *)(v28 + 32) = v11;
  Class isa = sub_86A10().super.isa;
  NSString v30 = sub_86830();
  [v27 enqueueValueCall:a3 arguments:isa file:v30 line:133];

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v32 = (unsigned char *)Strong;
    id v33 = *(void **)(Strong + OBJC_IVAR___JSAStoreContentLookupRequest_lookup);
    *(void *)(Strong + OBJC_IVAR___JSAStoreContentLookupRequest_lookup) = 0;

    uint64_t v34 = *(void **)&v32[OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise];
    *(void *)&v32[OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise] = 0;

    v32[OBJC_IVAR___JSAStoreContentLookupRequest_frozen] = 0;
  }
}

void sub_6A9D4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_6AAA8()
{
  uint64_t v1 = OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise;
  [*(id *)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest_lookupPromise) cancel];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest_lookup);
  *(void *)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest_lookup) = 0;

  id v3 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  *(unsigned char *)(v0 + OBJC_IVAR___JSAStoreContentLookupRequest_frozen) = 0;
}

void *sub_6AB50(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_2D920(&qword_CC9D8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_6ABB8(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_869A0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_86970();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t type metadata accessor for StoreContentLookupRequest()
{
  return self;
}

uint64_t sub_6AC58()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_6AC90()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_6ACD0(void *a1, uint64_t a2)
{
  sub_6A4B4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_6ACD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6ACE8()
{
  return swift_release();
}

unsigned __int8 *sub_6ACF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_869C0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_6B41C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_86EF0();
  }
LABEL_7:
  uint64_t v11 = sub_6B1A0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

float sub_6ADD8@<S0>(void *a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(*a1 + OBJC_IVAR___JSAStoreContentLookupRequest__priority);
  *a2 = result;
  return result;
}

float sub_6ADF0(float *a1, void *a2)
{
  float result = *a1;
  *(float *)(*a2 + OBJC_IVAR___JSAStoreContentLookupRequest__priority) = *a1;
  return result;
}

uint64_t sub_6AE08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR___JSAStoreContentLookupRequest__requestOptions);
  return swift_bridgeObjectRetain();
}

uint64_t sub_6AE28()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  return sub_69278(v0);
}

id sub_6AE54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*a1 + OBJC_IVAR___JSAStoreContentLookupRequest__onResponse);
  *a2 = v2;
  return v2;
}

uint64_t method lookup function for StoreContentLookupRequest(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for StoreContentLookupRequest);
}

uint64_t dispatch thunk of StoreContentLookupRequest.priority.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.priority.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.priority.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.requestOptions.getter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of StoreContentLookupRequest.requestOptions.setter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of StoreContentLookupRequest.requestOptions.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.itemIdentifiers.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.itemIdentifiers.setter()
{
  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of StoreContentLookupRequest.itemIdentifiers.modify()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of StoreContentLookupRequest.onResponse.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.onResponse.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.onResponse.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.send()()
{
  return (*(uint64_t (**)(void))((char *)&stru_158.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of StoreContentLookupRequest.cancel()()
{
  return (*(uint64_t (**)(void))((char *)&stru_158.reserved2 + (swift_isaMask & *v0)))();
}

unsigned __int8 *sub_6B1A0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_6B41C()
{
  unint64_t v0 = sub_869D0();
  uint64_t v4 = sub_6B49C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_6B49C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_6B5F4(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_6AB50(v9, 0),
          unint64_t v12 = sub_6B6F4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_868F0();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_868F0();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_86EF0();
LABEL_4:

  return sub_868F0();
}

uint64_t sub_6B5F4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_6ABB8(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_6ABB8(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_6B6F4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    float result = v12;
    if (v17 == v15) {
      float result = sub_6ABB8(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      float result = sub_86990();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        float result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          float result = sub_86EF0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    float result = sub_6ABB8(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_86960();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _sSo13UIApplicationC5JSAppE20sharedIfNotExtensionABSgvgZ_0()
{
  if (_UIApplicationIsExtension())
  {
    if (qword_CC538 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_86230();
    sub_31DE4(v0, (uint64_t)qword_CD6F0);
    unint64_t v1 = sub_86210();
    os_log_type_t v2 = sub_86C40();
    if (os_log_type_enabled(v1, v2))
    {
      unint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v3 = 0;
      _os_log_impl(&dword_0, v1, v2, "Detected an extension trying to invoke sharedIfNotExtension", v3, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_6BA98();
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v5 = [ObjCClassFromMetadata performSelector:sub_86020()];
    id v6 = ObjCClassFromMetadata;
    if (v5)
    {
      swift_unknownObjectRetain();
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        return result;
      }
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

unint64_t sub_6BA98()
{
  unint64_t result = qword_CD848;
  if (!qword_CD848)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_CD848);
  }
  return result;
}

uint64_t sub_6BAD8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_706C4(1);
  swift_bridgeObjectRelease();
  sub_71068();
  uint64_t v3 = sub_86D70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_70760(1uLL, v1, v2);
  swift_bridgeObjectRelease();
  sub_710BC();
  swift_bridgeObjectRetain();
  sub_86920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_6BBF0()
{
  return sub_6BC1C(0x6570795465676170, 0xE800000000000000);
}

uint64_t sub_6BC08()
{
  return sub_6BC1C(0x644965676170, 0xE600000000000000);
}

uint64_t sub_6BC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 32);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_59F18(a1, a2);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v14 = v9;
      if (swift_dynamicCast()) {
        return v13;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    return 0;
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(v11 + 32) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_59F18(a1, a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (swift_dynamicCast()) {
    return v14;
  }
  else {
    return 0;
  }
}

uint64_t sub_6BD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = 0;
  v4[2] = a1;
  v4[3] = a2;
  sub_2D920(&qword_CC9B8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_A23E0;
  *(void *)(v6 + 32) = 0xD000000000000011;
  *(void *)(v6 + 40) = 0x800000000009E930;
  *(void *)(v6 + 48) = 7368801;
  *(void *)(v6 + 56) = 0xE300000000000000;
  *(void *)(v6 + 64) = 0x6973726556707061;
  *(void *)(v6 + 72) = 0xEA00000000006E6FLL;
  *(void *)(v6 + 80) = 0x7372655665736162;
  *(void *)(v6 + 88) = 0xEB000000006E6F69;
  *(void *)(v6 + 96) = 0x6449746E65696C63;
  *(void *)(v6 + 104) = 0xE800000000000000;
  *(void *)(v6 + 112) = 0x7365696B6F6F63;
  *(void *)(v6 + 120) = 0xE700000000000000;
  *(void *)(v6 + 128) = 1682535268;
  *(void *)(v6 + 136) = 0xE400000000000000;
  *(void *)(v6 + 144) = 0x6D6954746E657665;
  *(void *)(v6 + 152) = 0xE900000000000065;
  *(void *)(v6 + 160) = 0x707954746E657665;
  *(void *)(v6 + 168) = 0xE900000000000065;
  strcpy((char *)(v6 + 176), "hardwareFamily");
  *(unsigned char *)(v6 + 191) = -18;
  strcpy((char *)(v6 + 192), "hardwareModel");
  *(_WORD *)(v6 + 206) = -4864;
  *(void *)(v6 + 208) = 0x70704174736F68;
  *(void *)(v6 + 216) = 0xE700000000000000;
  strcpy((char *)(v6 + 224), "hostAppVersion");
  *(unsigned char *)(v6 + 239) = -18;
  *(void *)(v6 + 240) = 28777;
  *(void *)(v6 + 248) = 0xE200000000000000;
  *(void *)(v6 + 256) = 0x75746974614C7069;
  *(void *)(v6 + 264) = 0xEA00000000006564;
  *(void *)(v6 + 272) = 0x7469676E6F4C7069;
  *(void *)(v6 + 280) = 0xEB00000000656475;
  *(void *)(v6 + 288) = 0x726F7774654E7069;
  *(void *)(v6 + 296) = 0xE90000000000006BLL;
  strcpy((char *)(v6 + 304), "ipNetworkType");
  *(_WORD *)(v6 + 318) = -4864;
  strcpy((char *)(v6 + 320), "mescalStatus");
  *(unsigned char *)(v6 + 333) = 0;
  *(_WORD *)(v6 + 334) = -5120;
  *(void *)(v6 + 336) = 29551;
  *(void *)(v6 + 344) = 0xE200000000000000;
  strcpy((char *)(v6 + 352), "osBuildNumber");
  *(_WORD *)(v6 + 366) = -4864;
  strcpy((char *)(v6 + 368), "osMajorVersion");
  *(unsigned char *)(v6 + 383) = -18;
  *(void *)(v6 + 384) = 0x6F6973726556736FLL;
  *(void *)(v6 + 392) = 0xE90000000000006ELL;
  *(void *)(v6 + 400) = 1701273968;
  *(void *)(v6 + 408) = 0xE400000000000000;
  *(void *)(v6 + 416) = 0x746E6F4365676170;
  *(void *)(v6 + 424) = 0xEB00000000747865;
  *(void *)(v6 + 432) = 0x6174654465676170;
  *(void *)(v6 + 440) = 0xEB00000000736C69;
  *(void *)(v6 + 448) = 0x644965676170;
  *(void *)(v6 + 456) = 0xE600000000000000;
  *(void *)(v6 + 464) = 0x6570795465676170;
  *(void *)(v6 + 472) = 0xE800000000000000;
  *(void *)(v6 + 480) = 0x6C725565676170;
  *(void *)(v6 + 488) = 0xE700000000000000;
  *(void *)(v6 + 496) = 0x7461526C65786970;
  *(void *)(v6 + 504) = 0xEA00000000006F69;
  *(void *)(v6 + 512) = 0x656D695474736F70;
  *(void *)(v6 + 520) = 0xE800000000000000;
  *(void *)(v6 + 528) = 0x5474706965636572;
  *(void *)(v6 + 536) = 0xEB00000000656D69;
  strcpy((char *)(v6 + 544), "screenHeight");
  *(unsigned char *)(v6 + 557) = 0;
  *(_WORD *)(v6 + 558) = -5120;
  *(void *)(v6 + 560) = 0x69576E6565726373;
  *(void *)(v6 + 568) = 0xEB00000000687464;
  *(void *)(v6 + 576) = 0xD000000000000010;
  *(void *)(v6 + 584) = 0x800000000009E950;
  strcpy((char *)(v6 + 592), "timezoneOffset");
  *(unsigned char *)(v6 + 607) = -18;
  *(void *)(v6 + 608) = 0x6369706F74;
  *(void *)(v6 + 616) = 0xE500000000000000;
  *(void *)(v6 + 624) = 0x6E65674172657375;
  *(void *)(v6 + 632) = 0xE900000000000074;
  *(void *)(v6 + 640) = 0x6570795472657375;
  *(void *)(v6 + 648) = 0xE800000000000000;
  *(void *)(v6 + 656) = 0xD000000000000011;
  *(void *)(v6 + 664) = 0x800000000009E970;
  *(void *)(v6 + 672) = 0xD000000000000010;
  *(void *)(v6 + 680) = 0x800000000009E990;
  *(void *)(v6 + 688) = 0xD000000000000011;
  *(void *)(v6 + 696) = 0x800000000009E9B0;
  *(void *)(v6 + 704) = 0xD000000000000011;
  *(void *)(v6 + 712) = 0x800000000009E9D0;
  *(void *)(v6 + 720) = 0xD000000000000010;
  *(void *)(v6 + 728) = 0x800000000009E9F0;
  *(void *)(v6 + 736) = 0xD000000000000014;
  *(void *)(v6 + 744) = 0x800000000009EA10;
  strcpy((char *)(v6 + 752), "eventVersion");
  *(unsigned char *)(v6 + 765) = 0;
  *(_WORD *)(v6 + 766) = -5120;
  *(void *)(v6 + 768) = 0x64656E6769537369;
  *(void *)(v6 + 776) = 0xEA00000000006E49;
  *(void *)(v6 + 784) = 0x65676175676E616CLL;
  *(void *)(v6 + 792) = 0xE800000000000000;
  *(void *)(v6 + 800) = 0x69536C616373656DLL;
  *(void *)(v6 + 808) = 0xEF65727574616E67;
  *(void *)(v6 + 816) = 0x6D726F6674616C70;
  *(void *)(v6 + 824) = 0xEA00000000006449;
  strcpy((char *)(v6 + 832), "platformName");
  *(unsigned char *)(v6 + 845) = 0;
  *(_WORD *)(v6 + 846) = -5120;
  *(void *)(v6 + 848) = 0x6F724665726F7473;
  *(void *)(v6 + 856) = 0xEA0000000000746ELL;
  *(void *)(v6 + 864) = 0xD000000000000011;
  *(void *)(v6 + 872) = 0x800000000009EA30;
  *(void *)(v6 + 880) = 0x54726573776F7262;
  *(void *)(v6 + 888) = 0xEB00000000657079;
  strcpy((char *)(v6 + 896), "browserVersion");
  *(unsigned char *)(v6 + 911) = -18;
  strcpy((char *)(v6 + 912), "clientVersion");
  *(_WORD *)(v6 + 926) = -4864;
  *(void *)(v6 + 928) = 0x697463656E6E6F63;
  *(void *)(v6 + 936) = 0xEA00000000006E6FLL;
  *(void *)(v6 + 944) = 0x6D726F6674616C70;
  *(void *)(v6 + 952) = 0xE800000000000000;
  strcpy((char *)(v6 + 960), "resourceRevNum");
  *(unsigned char *)(v6 + 975) = -18;
  *(void *)(v6 + 976) = 0x6167656C65447078;
  *(void *)(v6 + 984) = 0xEF6F666E49736574;
  *(void *)(v6 + 992) = 0x724674736F507078;
  *(void *)(v6 + 1000) = 0xEF79636E65757165;
  strcpy((char *)(v6 + 1008), "xpSendMethod");
  *(unsigned char *)(v6 + 1021) = 0;
  *(_WORD *)(v6 + 1022) = -5120;
  *(void *)(v6 + 1024) = 0xD000000000000013;
  *(void *)(v6 + 1032) = 0x800000000009EA50;
  strcpy((char *)(v6 + 1040), "capacityData");
  *(unsigned char *)(v6 + 1053) = 0;
  *(_WORD *)(v6 + 1054) = -5120;
  *(void *)(v6 + 1056) = 0xD000000000000015;
  *(void *)(v6 + 1064) = 0x800000000009EA70;
  strcpy((char *)(v6 + 1072), "capacityDisk");
  *(unsigned char *)(v6 + 1085) = 0;
  *(_WORD *)(v6 + 1086) = -5120;
  strcpy((char *)(v6 + 1088), "capacitySystem");
  *(unsigned char *)(v6 + 1103) = -18;
  *(void *)(v6 + 1104) = 0xD000000000000017;
  *(void *)(v6 + 1112) = 0x800000000009EA90;
  uint64_t v64 = URLParser.ParserURLType.rawValue.getter(v6);
  int64_t v7 = 0;
  v4[4] = &_swiftEmptyDictionarySingleton;
  char v8 = v4 + 4;
  v4[5] = &_swiftEmptyDictionarySingleton;
  unint64_t v60 = v4;
  uint64_t v61 = v4 + 5;
  uint64_t v65 = a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v10 = a3 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v62 = v10;
  int64_t v63 = (unint64_t)(v12 + 63) >> 6;
  if ((v13 & v9) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    if ((char v20 = (uint64_t *)(*(void *)(v65 + 48) + 16 * i),
          uint64_t v22 = *v20,
          uint64_t v21 = v20[1],
          uint64_t v23 = *(void *)(*(void *)(v65 + 56) + 8 * i),
          *v20 == 0xD000000000000011)
      && v21 == 0x800000000009E930
      || (sub_87070() & 1) != 0
      || (v22 == 7368801 ? (BOOL v24 = v21 == 0xE300000000000000) : (BOOL v24 = 0), v24))
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    else
    {
      char v25 = sub_87070();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      if ((v25 & 1) == 0)
      {
        for (uint64_t j = 0; j != 1056; j += 16)
        {
          BOOL v27 = *(void *)(v64 + j + 64) == v22 && *(void *)(v64 + j + 72) == v21;
          if (v27 || (sub_87070() & 1) != 0) {
            goto LABEL_40;
          }
        }
        swift_beginAccess();
        swift_unknownObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v29 = (void *)*v61;
        void *v61 = 0x8000000000000000;
        unint64_t v31 = sub_59F18(v22, v21);
        uint64_t v32 = v29[2];
        BOOL v33 = (v30 & 1) == 0;
        uint64_t v34 = v32 + v33;
        if (__OFADD__(v32, v33)) {
          goto LABEL_66;
        }
        char v35 = v30;
        if (v29[3] < v34)
        {
          sub_769A0(v34, isUniquelyReferenced_nonNull_native);
          unint64_t v36 = sub_59F18(v22, v21);
          if ((v35 & 1) != (v37 & 1)) {
            goto LABEL_68;
          }
          unint64_t v31 = v36;
          if ((v35 & 1) == 0) {
            goto LABEL_58;
          }
LABEL_50:
          uint64_t v50 = v29[7];
          swift_unknownObjectRelease();
          *(void *)(v50 + 8 * v31) = v23;
LABEL_60:
          void *v61 = v29;
          goto LABEL_55;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v30) {
            goto LABEL_50;
          }
        }
        else
        {
          sub_75F14();
          if (v35) {
            goto LABEL_50;
          }
        }
LABEL_58:
        v29[(v31 >> 6) + 8] |= 1 << v31;
        unint64_t v55 = (uint64_t *)(v29[6] + 16 * v31);
        *unint64_t v55 = v22;
        v55[1] = v21;
        *(void *)(v29[7] + 8 * v31) = v23;
        uint64_t v56 = v29[2];
        BOOL v53 = __OFADD__(v56, 1);
        uint64_t v57 = v56 + 1;
        if (v53) {
          goto LABEL_67;
        }
        v29[2] = v57;
        swift_bridgeObjectRetain();
        goto LABEL_60;
      }
    }
LABEL_40:
    swift_beginAccess();
    swift_unknownObjectRetain();
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = (void *)*v8;
    uint64_t v66 = (void *)*v8;
    *char v8 = 0x8000000000000000;
    unint64_t v41 = sub_59F18(v22, v21);
    uint64_t v42 = v39[2];
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    char v45 = v40;
    if (v39[3] >= v44)
    {
      if (v38)
      {
        uint64_t v48 = v66;
        if (v40) {
          goto LABEL_47;
        }
      }
      else
      {
        sub_75F14();
        uint64_t v48 = v66;
        if (v45) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      sub_769A0(v44, v38);
      unint64_t v46 = sub_59F18(v22, v21);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_68;
      }
      unint64_t v41 = v46;
      uint64_t v48 = v66;
      if (v45)
      {
LABEL_47:
        uint64_t v49 = v48[7];
        swift_unknownObjectRelease();
        *(void *)(v49 + 8 * v41) = v23;
        goto LABEL_54;
      }
    }
    v48[(v41 >> 6) + 8] |= 1 << v41;
    unsigned int v51 = (uint64_t *)(v48[6] + 16 * v41);
    *unsigned int v51 = v22;
    v51[1] = v21;
    *(void *)(v48[7] + 8 * v41) = v23;
    uint64_t v52 = v48[2];
    BOOL v53 = __OFADD__(v52, 1);
    uint64_t v54 = v52 + 1;
    if (v53) {
      goto LABEL_63;
    }
    v48[2] = v54;
    swift_bridgeObjectRetain();
LABEL_54:
    *char v8 = v48;
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_64;
    }
    if (v17 >= v63)
    {
LABEL_61:
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = (uint64_t)v60;
      v60[6] = a4;
      return result;
    }
    unint64_t v18 = *(void *)(v62 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v63) {
        goto LABEL_61;
      }
      unint64_t v18 = *(void *)(v62 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v63) {
          goto LABEL_61;
        }
        unint64_t v18 = *(void *)(v62 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v14 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v63) {
    goto LABEL_61;
  }
  unint64_t v18 = *(void *)(v62 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v63) {
      goto LABEL_61;
    }
    unint64_t v18 = *(void *)(v62 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_870B0();
  __break(1u);
  return result;
}

uint64_t sub_6CA08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 56) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 56);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_6CA8C()
{
  sub_6CA08();

  return _swift_deallocClassInstance(v0, 64, 7);
}

id sub_6CAC0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MetricsController()) init];
  qword_CD850 = (uint64_t)result;
  return result;
}

id MetricsController.metrics.getter()
{
  return *(id *)(v0 + OBJC_IVAR___JSAMetricsController_metrics);
}

char *MetricsController.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_86260();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  __chkstk_darwin(v2);
  BOOL v43 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_86CA0();
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_86C80();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_862A0();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR___JSAMetricsController_metrics;
  uint64_t v12 = self;
  uint64_t v13 = v1;
  id v14 = [v12 defaultBag];
  id v15 = objc_allocWithZone((Class)AMSMetrics);
  NSString v16 = sub_86830();
  id v17 = [v15 initWithContainerID:v16 bag:v14];

  uint64_t v18 = sub_86C00();
  *(void *)&v1[v11] = v18;
  *(void *)&v13[OBJC_IVAR___JSAMetricsController_experienceEvents] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR___JSAMetricsController__performanceEvents] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR___JSAMetricsController_acknowledgementObservation] = 0;
  uint64_t v19 = OBJC_IVAR___JSAMetricsController_submissionQueue;
  sub_32FAC(0, (unint64_t *)&qword_CCE80);
  sub_86290();
  sub_86C70();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v40);
  *(void *)&v13[v19] = sub_86CD0();
  uint64_t v20 = OBJC_IVAR___JSAMetricsController_isSuspended;
  sub_2D920(&qword_CD890);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 20) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  *(void *)&v13[v20] = v21;
  *(void *)&v13[OBJC_IVAR___JSAMetricsController_suspensionAssertionProvider] = 0;

  uint64_t v22 = (objc_class *)type metadata accessor for MetricsController();
  v53.receiver = v13;
  v53.Class super_class = v22;
  id v23 = [super init];
  id v24 = objc_allocWithZone((Class)BUCountingAssertionProvider);
  char v25 = (char *)v23;
  id v26 = [v24 initWithDelegate:v25];
  BOOL v27 = *(void **)&v25[OBJC_IVAR___JSAMetricsController_suspensionAssertionProvider];
  *(void *)&v25[OBJC_IVAR___JSAMetricsController_suspensionAssertionProvider] = v26;

  id v28 = [self defaultCenter];
  if (qword_CC550 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_CD858;
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unsigned int v51 = sub_6FA4C;
  uint64_t v52 = v30;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v49 = sub_6D210;
  uint64_t v50 = &unk_B5B08;
  unint64_t v31 = _Block_copy(&aBlock);
  swift_release();
  id v32 = [v28 addObserverForName:v29 object:0 queue:0 usingBlock:v31];
  _Block_release(v31);

  *(void *)&v25[OBJC_IVAR___JSAMetricsController_acknowledgementObservation] = v32;
  swift_unknownObjectRelease();
  [*(id *)&v25[OBJC_IVAR___JSAMetricsController_metrics] setFlushTimerEnabled:0];
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unsigned int v51 = sub_6FA6C;
  uint64_t v52 = v33;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v49 = sub_2DC18;
  uint64_t v50 = &unk_B5B30;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  sub_86270();
  unint64_t v46 = _swiftEmptyArrayStorage;
  sub_6FA74();
  sub_2D920((uint64_t *)&unk_CD030);
  sub_6206C();
  char v35 = v10;
  unint64_t v36 = v43;
  uint64_t v37 = v45;
  sub_86DD0();
  sub_86CC0();

  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
  swift_release();
  swift_release();
  return v25;
}

uint64_t type metadata accessor for MetricsController()
{
  return self;
}

void sub_6D1BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_6D61C();
  }
}

uint64_t sub_6D210(uint64_t a1)
{
  uint64_t v2 = sub_85D30();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_85D20();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_6D304()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    NSString v2 = (id)BUOnboardingBooksBundleID();
    if (!v2)
    {
      sub_86860();
      NSString v2 = sub_86830();
      swift_bridgeObjectRelease();
    }
    unsigned __int8 v3 = [self acknowledgementNeededForPrivacyIdentifier:v2];

    if ((v3 & 1) == 0)
    {
      if (qword_CC518 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_86230();
      sub_31DE4(v4, (uint64_t)qword_CD690);
      uint64_t v5 = sub_86210();
      os_log_type_t v6 = sub_86C50();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_0, v5, v6, "Enabling auto flushing: User has acknowledged privacy.", v7, 2u);
        swift_slowDealloc();
      }

      [*(id *)&v1[OBJC_IVAR___JSAMetricsController_metrics] setFlushTimerEnabled:1];
    }
  }
}

id MetricsController.__deallocating_deinit()
{
  dispatch_activate(*(dispatch_object_t *)&v0[OBJC_IVAR___JSAMetricsController_submissionQueue]);
  uint64_t v1 = *(void *)&v0[OBJC_IVAR___JSAMetricsController_acknowledgementObservation];
  if (v1)
  {
    NSString v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  v5.receiver = v0;
  v5.Class super_class = (Class)type metadata accessor for MetricsController();
  return [super dealloc];
}

void sub_6D61C()
{
  uint64_t v1 = v0;
  NSString v2 = (id)BUOnboardingBooksBundleID();
  if (!v2)
  {
    sub_86860();
    NSString v2 = sub_86830();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v3 = [self acknowledgementNeededForPrivacyIdentifier:v2];

  if (qword_CC518 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_86230();
  sub_31DE4(v4, (uint64_t)qword_CD690);
  objc_super v5 = sub_86210();
  os_log_type_t v6 = sub_86C50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    sub_86D40();
    _os_log_impl(&dword_0, v5, v6, "Privacy acknowledgement changed to %{BOOL}d", v7, 8u);
    swift_slowDealloc();
  }

  if ((v3 & 1) == 0)
  {
    dispatch_activate(*(dispatch_object_t *)&v1[OBJC_IVAR___JSAMetricsController_submissionQueue]);
    uint64_t v8 = sub_86210();
    os_log_type_t v9 = sub_86C50();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "Enabling autoflushing because user has acknowledged privacy, and flushing right away", v10, 2u);
      swift_slowDealloc();
    }

    [*(id *)&v1[OBJC_IVAR___JSAMetricsController_metrics] setFlushTimerEnabled:1];
    [v1 flushUnreportedEvents];
  }
}

uint64_t sub_6D838()
{
  return sub_6D850(&OBJC_IVAR___JSAMetricsController_experienceEvents);
}

uint64_t sub_6D844()
{
  return sub_6D850(&OBJC_IVAR___JSAMetricsController__performanceEvents);
}

uint64_t sub_6D850(void *a1)
{
  NSString v2 = (void *)(v1 + *a1);
  swift_beginAccess();
  void *v2 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

void sub_6D8A4()
{
  uint64_t v1 = v0;
  NSString v2 = (id)BUOnboardingBooksBundleID();
  if (!v2)
  {
    sub_86860();
    NSString v2 = sub_86830();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v3 = [self acknowledgementNeededForPrivacyIdentifier:v2];

  if ((v3 & 1) == 0)
  {
    if (qword_CC518 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_86230();
    sub_31DE4(v4, (uint64_t)qword_CD690);
    objc_super v5 = sub_86210();
    os_log_type_t v6 = sub_86C50();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_0, v5, v6, "Starting event submission", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v8 = *(NSObject **)(v1 + OBJC_IVAR___JSAMetricsController_submissionQueue);
    dispatch_activate(v8);
  }
}

id sub_6DA48()
{
  id result = *(id *)(v0 + OBJC_IVAR___JSAMetricsController_suspensionAssertionProvider);
  if (result) {
    return [result newAssertion];
  }
  __break(1u);
  return result;
}

uint64_t sub_6DA88(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_70338(v3);
    unint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_86A50();
      return v10;
    }
  }
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

unint64_t sub_6DB6C(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v65 = a4;
  unint64_t v9 = 0xE90000000000003ELL;
  uint64_t v72 = 0x6E776F6E6B6E753CLL;
  uint64_t v10 = sub_86260();
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_862A0();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v66 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2D920(&qword_CC7D8);
  unint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  NSString v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v17 = a2;
  unint64_t v73 = a3;
  NSString v18 = sub_86830();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t aBlock = a1;
  sub_70158((uint64_t)v18, 0x6369706F74, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  unint64_t v20 = aBlock;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16))
  {
    uint64_t v28 = a2;
    goto LABEL_26;
  }
  unint64_t v21 = sub_59F18(0x6144746E6576655FLL, 0xEA00000000006174);
  if ((v22 & 1) == 0) {
    goto LABEL_21;
  }
  unint64_t aBlock = *(void *)(*(void *)(a1 + 56) + 8 * v21);
  swift_unknownObjectRetain();
  sub_2D920(&qword_CDA90);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v23 = v74[2];
  uint64_t v64 = v74;
  if (v23
    && (unint64_t v24 = sub_59F18(0x707954746E657665, 0xE900000000000065), (v25 & 1) != 0)
    && (uint64_t v74 = *(void **)(v64[7] + 8 * v24), swift_unknownObjectRetain(), swift_dynamicCast())
    || *(void *)(a1 + 16)
    && (unint64_t v26 = sub_59F18(0x7954746E6576655FLL, 0xEA00000000006570), (v27 & 1) != 0)
    && (uint64_t v74 = *(void **)(*(void *)(a1 + 56) + 8 * v26),
        swift_unknownObjectRetain(),
        swift_dynamicCast()))
  {
    unint64_t v9 = v76;
    uint64_t v72 = aBlock;
  }
  uint64_t v28 = a2;
  if (qword_CC468 != -1) {
    goto LABEL_54;
  }
  while (1)
  {
    uint64_t v29 = sub_31DE4(v13, (uint64_t)qword_CCD58);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v29, v13);
    sub_86080();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (aBlock != 1) {
      break;
    }
    type metadata accessor for FigaroEvent();
    uint64_t v13 = swift_allocObject();
    swift_bridgeObjectRetain();
    sub_6BD8C(v72, v9, (uint64_t)v64, v20);
    uint64_t v30 = (unint64_t *)(v5 + OBJC_IVAR___JSAMetricsController__performanceEvents);
    swift_beginAccess();
    unint64_t v20 = *v30;
    unint64_t v14 = v73;
    if (*v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_86F80();
      swift_bridgeObjectRelease();
      unint64_t v20 = *v30;
      if (v61 < 100) {
        goto LABEL_18;
      }
    }
    else if (*(uint64_t *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8)) < 100)
    {
      goto LABEL_18;
    }
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_86F80();
      swift_bridgeObjectRelease();
      unint64_t result = v62 - 1;
      if (__OFSUB__(v62, 1))
      {
LABEL_59:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
      unint64_t result = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_59;
      }
    }
    sub_6DA88(result);
    swift_release();
    unint64_t v20 = *v30;
LABEL_18:
    if (!(v20 >> 62)) {
      goto LABEL_35;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_86F80();
    swift_bridgeObjectRelease();
    if ((v33 & 0x8000000000000000) == 0) {
      goto LABEL_36;
    }
    __break(1u);
LABEL_21:
    uint64_t v28 = v17;
    if (*(void *)(a1 + 16))
    {
      unint64_t v34 = sub_59F18(0x707954746E657665, v9 + 39);
      if (v35)
      {
        uint64_t v74 = *(void **)(*(void *)(a1 + 56) + 8 * v34);
        swift_unknownObjectRetain();
        if (swift_dynamicCast())
        {
          unint64_t v9 = v76;
          uint64_t v72 = aBlock;
        }
      }
    }
LABEL_26:
    if (qword_CC468 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_31DE4(v13, (uint64_t)qword_CCD58);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v36, v13);
    sub_86080();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (aBlock != 1) {
      goto LABEL_38;
    }
    type metadata accessor for FigaroEvent();
    uint64_t v13 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_6BD8C(v72, v9, a1, v20);
    uint64_t v37 = (unint64_t *)(v5 + OBJC_IVAR___JSAMetricsController_experienceEvents);
    swift_beginAccess();
    unint64_t v20 = *v37;
    unint64_t v14 = v73;
    if (*v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_86F80();
      swift_bridgeObjectRelease();
      unint64_t v20 = *v37;
      if (v59 < 100) {
        goto LABEL_34;
      }
    }
    else if (*(uint64_t *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8)) < 100)
    {
      goto LABEL_34;
    }
    if (v20 >> 62) {
      goto LABEL_51;
    }
    uint64_t v28 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
    unint64_t v38 = v28 - 1;
    while (!__OFSUB__(v28, 1))
    {
      sub_6DA88(v38);
      swift_release();
      unint64_t v20 = *v37;
LABEL_34:
      if (!(v20 >> 62))
      {
LABEL_35:
        swift_retain();
LABEL_36:
        sub_6FD1C(0, 0, v13);
        swift_endAccess();
        swift_release();
        uint64_t v28 = v17;
        goto LABEL_39;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_86F80();
      swift_bridgeObjectRelease();
      if ((v60 & 0x8000000000000000) == 0) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_51:
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_86F80();
      swift_bridgeObjectRelease();
      unint64_t v38 = v28 - 1;
    }
    __break(1u);
LABEL_54:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_bridgeObjectRelease();
LABEL_39:
  if (qword_CC518 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_86230();
  sub_31DE4(v39, (uint64_t)qword_CD690);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_86210();
  os_log_type_t v41 = sub_86C50();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    unint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v74 = (void *)sub_422E0(v28, v73, (uint64_t *)&aBlock);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    uint64_t v64 = (void *)v5;
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v74 = (void *)sub_422E0(v72, v9, (uint64_t *)&aBlock);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_86810();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v74 = (void *)sub_422E0(v43, v45, (uint64_t *)&aBlock);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v40, v41, "recordEvent - topic: %s, eventType: %s, eventDictionary: %s", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v46 = objc_allocWithZone((Class)AMSMetricsEvent);
  swift_bridgeObjectRetain();
  NSString v47 = sub_86830();
  swift_bridgeObjectRelease();
  id v48 = [v46 initWithTopic:v47];

  sub_6E83C(a1);
  Class isa = sub_867F0().super.isa;
  swift_bridgeObjectRelease();
  [v48 addPropertiesWithDictionary:isa];

  if (v65)
  {
    id v50 = [self sharedProvider];
    id v51 = [v50 activeStoreAccount];

    [v48 setAccount:v51];
  }
  uint64_t v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v52;
  *(void *)(v53 + 24) = v48;
  unint64_t v79 = sub_71208;
  uint64_t v80 = v53;
  unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
  uint64_t v76 = 1107296256;
  uint64_t v77 = sub_2DC18;
  uint64_t v78 = &unk_B5C28;
  uint64_t v54 = _Block_copy(&aBlock);
  swift_retain();
  id v55 = v48;
  uint64_t v56 = v66;
  sub_86270();
  uint64_t v74 = _swiftEmptyArrayStorage;
  sub_6FA74();
  sub_2D920((uint64_t *)&unk_CD030);
  sub_6206C();
  uint64_t v57 = v68;
  uint64_t v58 = v71;
  sub_86DD0();
  sub_86CC0();
  _Block_release(v54);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v58);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v56, v69);
  swift_release();
  return swift_release();
}

unint64_t sub_6E83C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_2D920(&qword_CCBD8);
    NSString v2 = (void *)sub_86FB0();
  }
  else
  {
    NSString v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = &v37;
  unint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v11 = (char *)&type metadata for Any + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_32FE8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_4B3D4(v6, v7);
    sub_4B3D4(v7, v40);
    sub_4B3D4(v40, &v38);
    unint64_t result = sub_59F18(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      NSString v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      unint64_t v6 = v13;
      unint64_t v7 = v12;
      int64_t i = v33;
      NSString v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_3ED88((uint64_t)v18);
      unint64_t result = (unint64_t)sub_4B3D4(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v27 = (uint64_t *)(v2[6] + 16 * result);
    *char v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_4B3D4(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_6EBA4(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR___JSAMetricsController_metrics);

    sub_2D920(&qword_CDA98);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_A23F0;
    *(void *)(v6 + 32) = a2;
    uint64_t v9 = v6;
    sub_86A50();
    sub_32FAC(0, &qword_CDAA0);
    id v7 = a2;
    Class isa = sub_86A10().super.isa;
    swift_bridgeObjectRelease();
    [v5 enqueueEvents:isa v9];
  }
}

id _s5JSApp17MetricsControllerC6sharedACvgZ_0()
{
  if (qword_CC548 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_CD850;

  return v0;
}

Swift::Void __swiftcall MetricsController.recordEvent(_:_:)(Swift::String a1, Swift::OpaquePointer a2)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if (a1._countAndFlagsBits == 0xD000000000000010 && a1._object == (void *)0x800000000009E730) {
    char v5 = 1;
  }
  else {
    char v5 = sub_87070();
  }

  sub_6DB6C((uint64_t)a2._rawValue, countAndFlagsBits, (unint64_t)object, v5 & 1);
}

Swift::Void __swiftcall MetricsController.recordPersonalizedEvent(_:_:)(Swift::String a1, Swift::OpaquePointer a2)
{
}

Swift::Void __swiftcall MetricsController.flushUnreportedEvents()()
{
  uint64_t v0 = sub_2D920(&qword_CCEA0);
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_86B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v5 = (void *)swift_allocObject();
  uint64_t v5[2] = 0;
  v5[3] = 0;
  void v5[4] = v4;
  sub_43B10((uint64_t)v2, (uint64_t)&unk_CD8A8, (uint64_t)v5);
  swift_release();
  sub_6FCBC((uint64_t)v2);
}

uint64_t sub_6F0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = sub_86260();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_862A0();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_6F1EC, 0, 0);
}

uint64_t sub_6F1EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v2 = (char *)Strong;
    NSString v3 = (id)BUOnboardingBooksBundleID();
    if (!v3)
    {
      sub_86860();
      NSString v3 = sub_86830();
      swift_bridgeObjectRelease();
    }
    unsigned __int8 v4 = [self acknowledgementNeededForPrivacyIdentifier:v3];

    if (v4)
    {
      if (qword_CC518 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_86230();
      sub_31DE4(v5, (uint64_t)qword_CD690);
      uint64_t v6 = sub_86210();
      os_log_type_t v7 = sub_86C50();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_0, v6, v7, "Skipping flushing: User has not acknowledged privacy yet.", v8, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      if (qword_CC518 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_86230();
      sub_31DE4(v9, (uint64_t)qword_CD690);
      uint64_t v10 = sub_86210();
      os_log_type_t v11 = sub_86C50();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_0, v10, v11, "Flushing events", v12, 2u);
        swift_slowDealloc();
      }
      uint64_t v14 = v0[16];
      uint64_t v13 = v0[17];
      uint64_t v15 = v0[14];
      uint64_t v24 = v0[15];
      uint64_t v17 = v0[12];
      uint64_t v16 = v0[13];

      sub_86280();
      sub_86250();
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v0[6] = sub_71174;
      v0[7] = v18;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_2DC18;
      v0[5] = &unk_B5BB0;
      unint64_t v19 = _Block_copy(v0 + 2);
      swift_retain();
      sub_86CC0();
      _Block_release(v19);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v24);
      swift_release();
      swift_release();
      int64_t v20 = *(os_unfair_lock_s **)&v2[OBJC_IVAR___JSAMetricsController_isSuspended];
      *(void *)(swift_task_alloc() + 16) = v2;
      unint64_t v21 = v20 + 4;
      v20 += 5;
      os_unfair_lock_lock(v20);
      sub_71110(v21);
      os_unfair_lock_unlock(v20);

      swift_task_dealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

void sub_6F5F4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR___JSAMetricsController_metrics);

    id v3 = [v2 flush];
    aBlock[4] = sub_6F6FC;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_6A9D4;
    void aBlock[3] = &unk_B5BD8;
    unsigned __int8 v4 = _Block_copy(aBlock);
    [v3 addFinishBlock:v4];
    _Block_release(v4);
  }
}

void sub_6F6FC()
{
  if (qword_CC518 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_86230();
  sub_31DE4(v0, (uint64_t)qword_CD690);
  oslog = sub_86210();
  os_log_type_t v1 = sub_86C50();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v2 = 0;
    _os_log_impl(&dword_0, oslog, v1, "Finished flushing events", v2, 2u);
    swift_slowDealloc();
  }
}

NSString sub_6F9DC()
{
  NSString result = sub_86830();
  qword_CD858 = (uint64_t)result;
  return result;
}

uint64_t sub_6FA14()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_6FA4C()
{
}

uint64_t sub_6FA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6FA64()
{
  return swift_release();
}

void sub_6FA6C()
{
}

unint64_t sub_6FA74()
{
  unint64_t result = qword_CC5B0;
  if (!qword_CC5B0)
  {
    sub_86260();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC5B0);
  }
  return result;
}

id static NSNotificationName.privacyAcknowledgementDidChange.getter()
{
  if (qword_CC550 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_CD858;

  return v0;
}

uint64_t static MetricsController.privacyAcknowledgementDidChange.getter()
{
  if (qword_CC550 != -1) {
    swift_once();
  }

  return sub_86860();
}

uint64_t sub_6FC08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *os_log_type_t v7 = v2;
  v7[1] = sub_3F97C;
  return sub_6F0D0(a1, v4, v5, v6);
}

uint64_t sub_6FCBC(uint64_t a1)
{
  uint64_t v2 = sub_2D920(&qword_CCEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6FD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8)) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_86F80();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_86F80();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8));
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((char *)&dword_18 + (v11 & 0xFFFFFFFFFFFFFF8)) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_86EE0();
      swift_bridgeObjectRelease();
      unint64_t *v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_86F80();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for FigaroEvent();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_86F80();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = sub_86FC0();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_86F80();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;

  return sub_86A50();
}

_OWORD *sub_70004(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_59F18(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_75D2C();
      goto LABEL_7;
    }
    sub_766A0(v15, a4 & 1);
    unint64_t v21 = sub_59F18(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_870B0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_3ED88((uint64_t)v19);
    return sub_4B3D4(a1, v19);
  }
LABEL_13:
  sub_702C8(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_70158(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_59F18(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_75F14();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_769A0(v15, a4 & 1);
  unint64_t v21 = sub_59F18(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_870B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v18[2] = v26;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_702C8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_4B3D4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_70338(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_86F80();
    swift_bridgeObjectRelease();
  }

  return sub_86EE0();
}

uint64_t sub_703B4(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8)) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_86F80();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_86F80();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((char *)&dword_18 + (v9 & 0xFFFFFFFFFFFFFF8)) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t *v3 = sub_86EE0();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_86F80();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  uint64_t v13 = (char *)(v11 + 32 + 8 * v4);
  sub_2D920(&qword_CDAA8);
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_86F80();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = sub_86FC0();
          __break(1u);
          return result;
        }
        char v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8)) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_86F80();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return sub_86A50();
}

uint64_t sub_706C4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_86910();
    return sub_869D0();
  }
  return result;
}

unint64_t sub_70760(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_86910();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_869D0();
}

uint64_t sub_70810()
{
  os_log_type_t v1 = (void *)(v0 + OBJC_IVAR___JSAMetricsController__performanceEvents);
  swift_beginAccess();
  uint64_t v22 = v1;
  uint64_t v2 = *v1;
  if (*v1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return *v22;
  }
LABEL_3:
  unint64_t v4 = v2 & 0xC000000000000001;
  uint64_t v21 = (uint64_t *)(v0 + OBJC_IVAR___JSAMetricsController_experienceEvents);
  swift_beginAccess();
  unint64_t v5 = 0;
  uint64_t v6 = v2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v7 = v2 + 32;
  unint64_t v19 = v2 & 0xC000000000000001;
  uint64_t v20 = v2;
  uint64_t v17 = v2 + 32;
  uint64_t v18 = v2 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    if (v4)
    {
      uint64_t v8 = sub_86ED0();
      BOOL v9 = __OFADD__(v5++, 1);
      if (v9) {
        goto LABEL_33;
      }
    }
    else
    {
      if (v5 >= *(void *)(v6 + 16)) {
        goto LABEL_34;
      }
      uint64_t v8 = *(void *)(v7 + 8 * v5);
      swift_retain();
      BOOL v9 = __OFADD__(v5++, 1);
      if (v9)
      {
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_86F80();
        if (!v3) {
          goto LABEL_36;
        }
        goto LABEL_3;
      }
    }
    if (!*(void *)(v8 + 56))
    {
      swift_beginAccess();
      uint64_t v0 = *(void *)(v8 + 40);
      if (*(void *)(v0 + 16))
      {
        swift_bridgeObjectRetain();
        sub_59F18(0xD000000000000014, 0x800000000009E910);
        if ((v10 & 1) == 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (swift_dynamicCast()) {
          break;
        }
      }
    }
    swift_release();
LABEL_5:
    if (v5 == v3) {
      goto LABEL_36;
    }
  }
  uint64_t v11 = *v21;
  if (!((unint64_t)*v21 >> 62))
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_86F80();
  uint64_t v12 = result;
  if (!result)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v4 = v19;
    uint64_t v2 = v20;
    uint64_t v7 = v17;
    uint64_t v6 = v18;
    goto LABEL_5;
  }
LABEL_18:
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    while (1)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = sub_86ED0();
      }
      else
      {
        uint64_t v15 = *(void *)(v11 + 8 * v14 + 32);
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v0 = *(void *)(v15 + 40);
      if (!*(void *)(v0 + 16)) {
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      sub_59F18(0xD000000000000014, 0x800000000009E910);
      if (v16) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_21:
      if (v12 == ++v14) {
        goto LABEL_32;
      }
    }
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_dynamicCast())
    {
      uint64_t v0 = v23;
      swift_bridgeObjectRelease();
      *(void *)(v8 + 56) = v15;
    }
LABEL_29:
    swift_release();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void _s5JSApp17MetricsControllerC32countingAssertProviderTransition9toNonZeroySo019BUCountingAssertionF0C_tF_0()
{
  if (qword_CC518 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_86230();
  sub_31DE4(v0, (uint64_t)qword_CD690);
  os_log_type_t v1 = sub_86210();
  os_log_type_t v2 = sub_86C50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "Pausing event submission due to assertion", v3, 2u);
    swift_slowDealloc();
  }

  __chkstk_darwin(v4);
  uint64_t v6 = v5 + 4;
  uint64_t v7 = v5 + 5;
  os_unfair_lock_lock(v5 + 5);
  sub_71128(v6);
  os_unfair_lock_unlock(v7);
}

void _s5JSApp17MetricsControllerC32countingAssertProviderTransition6toZeroySo019BUCountingAssertionF0C_tF_0()
{
  if (qword_CC518 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_86230();
  sub_31DE4(v0, (uint64_t)qword_CD690);
  os_log_type_t v1 = sub_86210();
  os_log_type_t v2 = sub_86C50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "Resuming event submission due to assertion invalidation", v3, 2u);
    swift_slowDealloc();
  }

  __chkstk_darwin(v4);
  uint64_t v6 = v5 + 4;
  uint64_t v7 = v5 + 5;
  os_unfair_lock_lock(v5 + 5);
  sub_71110(v6);
  os_unfair_lock_unlock(v7);
}

uint64_t type metadata accessor for FigaroEvent()
{
  return self;
}

uint64_t method lookup function for MetricsController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MetricsController);
}

uint64_t dispatch thunk of MetricsController.clearExperienceEvents()()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of MetricsController.clearPerformanceEvents()()
{
  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of MetricsController.startSubmissionIfAllowed()()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of MetricsController.newSuspensionAssertion()()
{
  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t sub_70F74()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_70FB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_32DB8;
  return sub_6F0D0(a1, v4, v5, v6);
}

unint64_t sub_71068()
{
  unint64_t result = qword_CDA80;
  if (!qword_CDA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDA80);
  }
  return result;
}

unint64_t sub_710BC()
{
  unint64_t result = qword_CDA88;
  if (!qword_CDA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDA88);
  }
  return result;
}

void sub_71110(unsigned char *a1)
{
}

void sub_71128(unsigned char *a1)
{
  if ((*a1 & 1) == 0)
  {
    dispatch_suspend(*(dispatch_object_t *)(*(void *)(v1 + 16) + OBJC_IVAR___JSAMetricsController_submissionQueue));
    *a1 = 1;
  }
}

void sub_71174()
{
}

void sub_7117C(unsigned char *a1)
{
  if (*a1 == 1)
  {
    dispatch_resume(*(dispatch_object_t *)(*(void *)(v1 + 16) + OBJC_IVAR___JSAMetricsController_submissionQueue));
    *a1 = 0;
  }
}

uint64_t sub_711C8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_71208()
{
  sub_6EBA4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_71230(char a1)
{
  return *(void *)&aUnknown_4[8 * a1];
}

uint64_t sub_71250(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D657449626174;
  }
  else {
    uint64_t v3 = 0x6E6F74747562;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6D657449626174;
  }
  else {
    uint64_t v5 = 0x6E6F74747562;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_87070();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_712F0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x800000000009C4A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x736569726553;
      break;
    case 2:
      unint64_t v5 = 0x6553736569726553;
      unint64_t v3 = 0xEC0000006C6C4165;
      break;
    case 3:
      break;
    default:
      unint64_t v5 = 0x68536E6F69746361;
      unint64_t v3 = 0xEB00000000746565;
      break;
  }
  unint64_t v6 = 0x800000000009C4A0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v2 = 0x736569726553;
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0xEC0000006C6C4165;
      if (v5 == 0x6553736569726553) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 3:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
      goto LABEL_12;
    default:
      unint64_t v6 = 0xEB00000000746565;
      if (v5 != 0x68536E6F69746361) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_87070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_71494(char a1, char a2)
{
  if (*(void *)&aButton_1[8 * a1] == *(void *)&aButton_1[8 * a2]
    && *(void *)&aReadthisdontsh[8 * a1 + 16] == *(void *)&aReadthisdontsh[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_87070();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_7151C(char a1, char a2)
{
  if (*(void *)&aActioncoaction[8 * a1] == *(void *)&aActioncoaction[8 * a2]
    && *(void *)&aActioncoaction[8 * a1 + 64] == *(void *)&aActioncoaction[8 * a2 + 64])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_87070();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_715A4(char a1, char a2)
{
  if (*(void *)&aUnknown_4[8 * a1] == *(void *)&aUnknown_4[8 * a2]
    && *(void *)&aTerminat_0[8 * a1 + 8] == *(void *)&aTerminat_0[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_87070();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Int sub_7162C()
{
  return sub_87130();
}

Swift::Int sub_71698()
{
  return sub_87130();
}

Swift::Int sub_71784()
{
  return sub_87130();
}

Swift::Int sub_71804()
{
  return sub_87130();
}

uint64_t sub_71870()
{
  sub_86900();

  return swift_bridgeObjectRelease();
}

uint64_t sub_718D8()
{
  sub_86900();

  return swift_bridgeObjectRelease();
}

uint64_t sub_719B0()
{
  sub_86900();

  return swift_bridgeObjectRelease();
}

uint64_t sub_71A04()
{
  sub_86900();

  return swift_bridgeObjectRelease();
}

uint64_t sub_71A58()
{
  sub_86900();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_71AAC()
{
  return sub_87130();
}

Swift::Int sub_71B14()
{
  return sub_87130();
}

Swift::Int sub_71B7C()
{
  return sub_87130();
}

Swift::Int sub_71BE4()
{
  return sub_87130();
}

Swift::Int sub_71CCC()
{
  return sub_87130();
}

uint64_t sub_71D48(char *a1, char *a2)
{
  return sub_715A4(*a1, *a2);
}

Swift::Int sub_71D54()
{
  return sub_7162C();
}

uint64_t sub_71D5C()
{
  return sub_71A58();
}

Swift::Int sub_71D64()
{
  return sub_71AAC();
}

uint64_t sub_71D6C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_72490(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_71D9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_71230(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_71DC8()
{
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 32) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  unint64_t v2 = (__CFString *)sub_86830();
  swift_bridgeObjectRelease();
  CFNotificationCenterAddObserver(v1, (const void *)v0, (CFNotificationCallback)sub_72130, v2, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  char v3 = (__CFString *)sub_86830();
  swift_bridgeObjectRelease();
  CFNotificationCenterAddObserver(v1, (const void *)v0, (CFNotificationCallback)sub_72130, v3, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  uint64_t v4 = (__CFString *)sub_86830();
  swift_bridgeObjectRelease();
  CFNotificationCenterAddObserver(v1, (const void *)v0, (CFNotificationCallback)sub_72130, v4, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  unint64_t v5 = (__CFString *)sub_86830();
  swift_bridgeObjectRelease();
  CFNotificationCenterAddObserver(v1, (const void *)v0, (CFNotificationCallback)sub_72130, v5, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  return v0;
}

void sub_72130(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = a1;
  id v9 = a3;
  id v10 = a5;
  sub_72504(a2, a3);
}

uint64_t sub_721B0()
{
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v1, v0);

  sub_724DC((uint64_t)v0 + 24);

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for HotReloadNotificationObserver()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for HotReloadState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x722FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HotReloadState()
{
  return &type metadata for HotReloadState;
}

unint64_t sub_72338()
{
  unint64_t result = qword_CDB90;
  if (!qword_CDB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDB90);
  }
  return result;
}

uint64_t sub_7238C()
{
  return 1;
}

Swift::Int sub_72394()
{
  return sub_87130();
}

Swift::Int sub_723E0()
{
  return sub_87130();
}

uint64_t sub_72430()
{
  return sub_86900();
}

uint64_t sub_72444(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B3698;
  v6._object = a2;
  unint64_t v4 = sub_86FE0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_72490(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B3718;
  v6._object = a2;
  unint64_t v4 = sub_86FE0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_724DC(uint64_t a1)
{
  return a1;
}

void sub_72504(uint64_t a1, void *a2)
{
  if (!a1) {
    goto LABEL_7;
  }
  type metadata accessor for HotReloadNotificationObserver();
  swift_unknownObjectRetain();
  uint64_t v3 = swift_dynamicCastClass();
  if (!v3 || !a2)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_86860();
  char v7 = v6;
  uint64_t v14 = a2;
  int v8 = sub_72444(v5, v7);
  if (v8 == 4)
  {
    swift_unknownObjectRelease();

LABEL_7:
    if (qword_CC4F8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_86230();
    sub_31DE4(v9, (uint64_t)qword_CD630);
    uint64_t v14 = sub_86210();
    os_log_type_t v10 = sub_86C30();
    if (os_log_type_enabled(v14, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_0, v14, v10, "An unexpected error has occurred during darwin notification handling. Hot Reload may not work correctly.", v11, 2u);
      swift_slowDealloc();
    }
    goto LABEL_14;
  }
  char v12 = *(unsigned char *)(v4 + 16);
  uint64_t v13 = (v8 + 1);
  *(unsigned char *)(v4 + 16) = v8 + 1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_32248(v12, v13);
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
LABEL_14:
}

id sub_726BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v3[OBJC_IVAR____TtC5JSApp25AccountPageViewController_pageType] = 0;
  char v7 = &v3[OBJC_IVAR____TtC5JSApp25AccountPageViewController_contentID];
  *char v7 = 0;
  v7[1] = 0;
  int v8 = &v3[OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish];
  *int v8 = 0;
  v8[1] = 0;
  if (a2)
  {
    NSString v9 = sub_86830();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v3;
  v12.Class super_class = ObjectType;
  id v10 = [super initWithNibName:v9 bundle:a3];

  return v10;
}

uint64_t type metadata accessor for AccountPageViewController()
{
  return self;
}

void sub_72B20(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    if (v4 == v1)
    {
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish);
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish + 8);
      uint64_t v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      int v8 = (void *)swift_allocObject();
      void v8[2] = v5;
      v8[3] = v6;
      void v8[4] = v7;
      v11[4] = sub_72F48;
      void v11[5] = v8;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      void v11[2] = sub_2DC18;
      void v11[3] = &unk_B5DC0;
      NSString v9 = _Block_copy(v11);
      sub_2DC74(v5);
      sub_2DC74(v5);
      id v10 = a1;
      swift_release();
      [v10 dismissViewControllerAnimated:1 completion:v9];
      _Block_release(v9);
      sub_31BA8(v5);
    }
  }
}

void sub_72C8C(void (*a1)(void))
{
  if (a1) {
    a1();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = (void *)(Strong + OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish);
    uint64_t v4 = *(void *)(Strong + OBJC_IVAR____TtC5JSApp25AccountPageViewController_onFinish);
    void *v3 = 0;
    v3[1] = 0;
    sub_31BA8(v4);
  }
}

unsigned char *storeEnumTagSinglePayload for AccountPageViewController.PageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x72E38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountPageViewController.PageType()
{
  return &type metadata for AccountPageViewController.PageType;
}

unint64_t sub_72E74()
{
  unint64_t result = qword_CDC40;
  if (!qword_CDC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDC40);
  }
  return result;
}

uint64_t sub_72EC8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_72F00()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_72F48()
{
  sub_72C8C(*(void (**)(void))(v0 + 16));
}

uint64_t sub_72F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_72F64()
{
  return swift_release();
}

uint64_t sub_72F6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_87070();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  NSString v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_87070() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t NSURL.isSafeExternalURL.getter()
{
  id v1 = [v0 scheme];
  if (!v1)
  {
    char v13 = 0;
    return v13 & 1;
  }
  uint64_t v2 = v1;
  sub_86860();

  uint64_t v3 = sub_868B0();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  id v6 = [self defaultBag];
  id v7 = [v6 mobileURLHandlers];

  uint64_t v18 = 0;
  id v8 = [v7 jsa_valueWithError:&v18];
  NSString v9 = v18;
  if (!v8)
  {
    uint64_t v14 = v18;
    sub_85DD0();

    swift_willThrow();
    swift_errorRelease();
    goto LABEL_10;
  }
  id v10 = v8;
  uint64_t v18 = 0;
  uint64_t v11 = v9;
  sub_86A20();

  if (!v18)
  {
LABEL_10:
    sub_2D920(&qword_CC9B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_A2740;
    *(void *)(inited + 32) = 1886680168;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 48) = 0x7370747468;
    *(void *)(inited + 56) = 0xE500000000000000;
    *(void *)(inited + 64) = 1936553065;
    *(void *)(inited + 72) = 0xE400000000000000;
    *(void *)(inited + 80) = 0x7070612D736D7469;
    *(void *)(inited + 88) = 0xE900000000000073;
    *(void *)(inited + 96) = 0x6F6F622D736D7469;
    *(void *)(inited + 104) = 0xEA0000000000736BLL;
    *(void *)(inited + 112) = 0x6973756D2D737469;
    *(void *)(inited + 120) = 0xE900000000000063;
    *(void *)(inited + 128) = 0x656469762D737469;
    *(void *)(inited + 136) = 0xEA0000000000736FLL;
    *(void *)(inited + 144) = 0x73736D7469;
    *(void *)(inited + 152) = 0xE500000000000000;
    *(void *)(inited + 160) = 0x7070612D736D7469;
    *(void *)(inited + 168) = 0xEA00000000007373;
    *(void *)(inited + 176) = 0x6F6F622D736D7469;
    *(void *)(inited + 184) = 0xEB0000000073736BLL;
    *(void *)(inited + 192) = 0x6F746C69616DLL;
    *(void *)(inited + 200) = 0xE600000000000000;
    *(void *)(inited + 208) = 0x7366657270;
    *(void *)(inited + 216) = 0xE500000000000000;
    *(void *)(inited + 224) = 1702065510;
    *(void *)(inited + 232) = 0xE400000000000000;
    *(void *)(inited + 240) = 0x636973756DLL;
    *(void *)(inited + 248) = 0xE500000000000000;
    *(void *)(inited + 256) = 0x73636973756DLL;
    *(void *)(inited + 264) = 0xE600000000000000;
    *(void *)(inited + 272) = 0x63672D736D7469;
    *(void *)(inited + 280) = 0xE700000000000000;
    *(void *)(inited + 288) = 0x7363672D736D7469;
    *(void *)(inited + 296) = 0xE800000000000000;
    strcpy((char *)(inited + 304), "itms-itunesu");
    *(unsigned char *)(inited + 317) = 0;
    *(_WORD *)(inited + 318) = -5120;
    strcpy((char *)(inited + 320), "itms-itunesus");
    *(_WORD *)(inited + 334) = -4864;
    *(void *)(inited + 336) = 0x6973756D2D737469;
    *(void *)(inited + 344) = 0xEA00000000007363;
    *(void *)(inited + 352) = 0x656469762D737469;
    *(void *)(inited + 360) = 0xEB0000000073736FLL;
    strcpy((char *)(inited + 368), "itms-podcasts");
    *(_WORD *)(inited + 382) = -4864;
    strcpy((char *)(inited + 384), "itms-podcastss");
    *(unsigned char *)(inited + 399) = -18;
    *(void *)(inited + 400) = 0x786F62656F6873;
    *(void *)(inited + 408) = 0xE700000000000000;
    *(void *)(inited + 416) = 0x6F69646172737469;
    *(void *)(inited + 424) = 0xE800000000000000;
    *(void *)(inited + 432) = 0x6974616E6576696CLL;
    *(void *)(inited + 440) = 0xEA00000000006E6FLL;
    *(void *)(inited + 448) = 0xD000000000000014;
    *(void *)(inited + 456) = 0x800000000009EC90;
    *(void *)(inited + 464) = 0x656764697262;
    *(void *)(inited + 472) = 0xE600000000000000;
    char v16 = (void *)URLParser.ParserURLType.rawValue.getter(inited);
    char v13 = sub_72F6C(v3, v5, v16);
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();

    return v13 & 1;
  }
  char v12 = sub_72F6C(v3, v5, v18);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0 && (v3 != 0x656764697262 || v5 != 0xE600000000000000))
  {
    char v13 = sub_87070();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();

  char v13 = 1;
  return v13 & 1;
}

void __swiftcall NSURL.parametrize(_:)(NSURL *__return_ptr retstr, Swift::OpaquePointer a2)
{
  uint64_t v3 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_85D60();
  uint64_t v106 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v110 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  char v109 = (char *)v89 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v105 = (char *)v89 - v12;
  __chkstk_darwin(v11);
  uint64_t v104 = (char *)v89 - v13;
  uint64_t v14 = sub_85EB0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v96 = (char *)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)v89 - v18;
  uint64_t v20 = sub_2D920(&qword_CDC48);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_85DB0();
  uint64_t v24 = *(void *)(v23 - 8);
  id v25 = (id)__chkstk_darwin(v100);
  uint64_t v97 = (char *)v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  rawValue = (char *)a2._rawValue;
  if (!*((void *)a2._rawValue + 2))
  {
LABEL_4:
    id v27 = v25;
    return;
  }
  sub_85E60();
  sub_85D90();
  uint64_t v95 = *(void (**)(char *, uint64_t))(v15 + 8);
  v95(v19, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_33054((uint64_t)v22, &qword_CDC48);
    id v25 = v100;
    goto LABEL_4;
  }
  uint64_t v90 = v24;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v91 = v23;
  v28(v97, v22, v23);
  uint64_t v29 = sub_85D70();
  uint64_t v108 = v6;
  uint64_t v93 = v14;
  uint64_t v94 = v5;
  uint64_t v92 = v15;
  v89[1] = v15 + 8;
  if (v29)
  {
    uint64_t v30 = *(void *)(v29 + 16);
    v89[0] = v29;
    if (v30)
    {
      int64_t v31 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
      uint64_t v102 = v106 + 16;
      uint64_t v103 = v31;
      unint64_t v32 = v29 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
      uint64_t v33 = *(void *)(v106 + 72);
      uint64_t v98 = (void (**)(unint64_t, char *, uint64_t))(v106 + 40);
      uint64_t v99 = (void (**)(unint64_t, char *, uint64_t))(v106 + 32);
      unint64_t v101 = (void (**)(char *, uint64_t))(v106 + 8);
      uint64_t v34 = &_swiftEmptyDictionarySingleton;
      uint64_t v35 = v104;
      while (1)
      {
        uint64_t v36 = v103;
        v103(v35, (char *)v32, v6);
        uint64_t v37 = sub_85D50();
        uint64_t v39 = v38;
        v36(v105, v35, v6);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v111 = v34;
        unint64_t v42 = sub_59F18(v37, v39);
        uint64_t v43 = v34[2];
        BOOL v44 = (v41 & 1) == 0;
        uint64_t v45 = v43 + v44;
        if (__OFADD__(v43, v44))
        {
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        char v46 = v41;
        if (v34[3] >= v45)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v49 = v111;
            if (v41) {
              goto LABEL_10;
            }
          }
          else
          {
            sub_760CC();
            uint64_t v49 = v111;
            if (v46) {
              goto LABEL_10;
            }
          }
        }
        else
        {
          sub_76CB8(v45, isUniquelyReferenced_nonNull_native);
          unint64_t v47 = sub_59F18(v37, v39);
          if ((v46 & 1) != (v48 & 1)) {
            goto LABEL_66;
          }
          unint64_t v42 = v47;
          uint64_t v49 = v111;
          if (v46)
          {
LABEL_10:
            uint64_t v6 = v108;
            (*v98)(v49[7] + v42 * v33, v105, v108);
            goto LABEL_11;
          }
        }
        v49[(v42 >> 6) + 8] |= 1 << v42;
        id v50 = (uint64_t *)(v49[6] + 16 * v42);
        *id v50 = v37;
        v50[1] = v39;
        uint64_t v6 = v108;
        (*v99)(v49[7] + v42 * v33, v105, v108);
        uint64_t v51 = v49[2];
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (v52) {
          goto LABEL_64;
        }
        v49[2] = v53;
        swift_bridgeObjectRetain();
LABEL_11:
        uint64_t v34 = v111;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = v104;
        (*v101)(v104, v6);
        v32 += v33;
        if (!--v30) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v34 = &_swiftEmptyDictionarySingleton;
LABEL_25:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = (void *)sub_4A224((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v54 = *((void *)rawValue + 8);
  uint64_t v103 = (void (*)(char *, char *, uint64_t))(rawValue + 64);
  uint64_t v55 = 1 << rawValue[32];
  uint64_t v56 = -1;
  if (v55 < 64) {
    uint64_t v56 = ~(-1 << v55);
  }
  unint64_t v57 = v56 & v54;
  uint64_t v104 = (char *)((unint64_t)(v55 + 63) >> 6);
  uint64_t v105 = (char *)(v106 + 16);
  unint64_t v101 = (void (**)(char *, uint64_t))(v106 + 40);
  uint64_t v102 = v106 + 32;
  uint64_t v58 = (void (**)(char *, uint64_t))(v106 + 8);
  swift_bridgeObjectRetain();
  uint64_t v59 = 0;
  while (1)
  {
    if (v57)
    {
      unint64_t v60 = __clz(__rbit64(v57));
      v57 &= v57 - 1;
      unint64_t v61 = v60 | (v59 << 6);
      goto LABEL_47;
    }
    uint64_t v62 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      goto LABEL_62;
    }
    if (v62 >= (uint64_t)v104)
    {
LABEL_56:
      swift_release();
      swift_bridgeObjectRetain_n();
      uint64_t v82 = sub_74174((uint64_t)v34);
      swift_bridgeObjectRelease();
      uint64_t v111 = v82;
      sub_743B0(&v111);
      swift_bridgeObjectRelease();
      uint64_t v83 = v97;
      sub_85D80();
      uint64_t v84 = (uint64_t)v94;
      sub_85DA0();
      uint64_t v85 = v92;
      uint64_t v86 = v93;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v84, 1, v93) == 1)
      {
        (*(void (**)(char *, uint64_t))(v90 + 8))(v83, v91);
        sub_33054(v84, (uint64_t *)&unk_CD040);
        v100;
      }
      else
      {
        unint64_t v87 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v96, v84, v86);
        sub_85E40(v88);
        v95(v87, v86);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v83, v91);
      }
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v63 = *((void *)v103 + v62);
    ++v59;
    if (!v63)
    {
      uint64_t v59 = v62 + 1;
      if (v62 + 1 >= (uint64_t)v104) {
        goto LABEL_56;
      }
      unint64_t v63 = *((void *)v103 + v59);
      if (!v63)
      {
        uint64_t v59 = v62 + 2;
        if (v62 + 2 >= (uint64_t)v104) {
          goto LABEL_56;
        }
        unint64_t v63 = *((void *)v103 + v59);
        if (!v63) {
          break;
        }
      }
    }
LABEL_46:
    unint64_t v57 = (v63 - 1) & v63;
    unint64_t v61 = __clz(__rbit64(v63)) + (v59 << 6);
LABEL_47:
    int v65 = (uint64_t *)(*((void *)rawValue + 6) + 16 * v61);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = v109;
    sub_85D40();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))v105)(v110, v68, v6);
    int v69 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v111 = v34;
    unint64_t v71 = sub_59F18(v67, v66);
    uint64_t v72 = v34[2];
    BOOL v73 = (v70 & 1) == 0;
    uint64_t v74 = v72 + v73;
    if (__OFADD__(v72, v73))
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    char v75 = v70;
    if (v34[3] >= v74)
    {
      if ((v69 & 1) == 0) {
        sub_760CC();
      }
    }
    else
    {
      sub_76CB8(v74, v69);
      unint64_t v76 = sub_59F18(v67, v66);
      if ((v75 & 1) != (v77 & 1)) {
        goto LABEL_66;
      }
      unint64_t v71 = v76;
    }
    uint64_t v6 = v108;
    uint64_t v78 = v111;
    if (v75)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v106 + 40))(v111[7] + *(void *)(v106 + 72) * v71, v110, v108);
    }
    else
    {
      v111[(v71 >> 6) + 8] |= 1 << v71;
      unint64_t v79 = (uint64_t *)(v78[6] + 16 * v71);
      *unint64_t v79 = v67;
      v79[1] = v66;
      (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v78[7] + *(void *)(v106 + 72) * v71, v110, v6);
      uint64_t v80 = v78[2];
      BOOL v52 = __OFADD__(v80, 1);
      uint64_t v81 = v80 + 1;
      if (v52) {
        goto LABEL_61;
      }
      v78[2] = v81;
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v58)(v109, v6);
  }
  uint64_t v64 = v62 + 3;
  if (v64 >= (uint64_t)v104) {
    goto LABEL_56;
  }
  unint64_t v63 = *((void *)v103 + v64);
  if (v63)
  {
    uint64_t v59 = v64;
    goto LABEL_46;
  }
  while (1)
  {
    uint64_t v59 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      break;
    }
    if (v59 >= (uint64_t)v104) {
      goto LABEL_56;
    }
    unint64_t v63 = *((void *)v103 + v59);
    ++v64;
    if (v63) {
      goto LABEL_46;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  sub_870B0();
  __break(1u);
  swift_release();
  __break(1u);
}

void *sub_7407C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_2D920(&qword_CC980);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_4881C((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_32FE8();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_74174(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_2D920(&qword_CC9B0);
  uint64_t v3 = *(void *)(sub_85D60() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      int v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_48A38(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_32FE8();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_742C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_2D920(&qword_CC9B8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_48D80((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_32FE8();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

Swift::Int sub_743B0(void **a1)
{
  uint64_t v2 = *(void *)(sub_85D60() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_491F0(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_74458(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_74458(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_85D60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  os_log_type_t v165 = (char *)&v145 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v168 = (char *)&v145 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v167 = (char *)&v145 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v148 = (char *)&v145 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v155 = (char *)&v145 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v151 = (char *)&v145 - v19;
  __chkstk_darwin(v18);
  v150 = (char *)&v145 - v20;
  uint64_t v170 = a1;
  Swift::Int v21 = a1[1];
  Swift::Int result = sub_87030(v21);
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_7516C(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  Swift::Int v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)_swiftEmptyArrayStorage;
    unint64_t v156 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = _swiftEmptyArrayStorage;
    if (v21 != 1)
    {
      unint64_t v30 = _swiftEmptyArrayStorage[2];
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          unint64_t v138 = v28;
          v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_754B8(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v138 = sub_48808((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          uint64_t v143 = &v138[16 * v137 + 32];
          *(void *)uint64_t v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      v145[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_86A70();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = (void *)v25;
    unint64_t v156 = v25 + v27;
  }
  Swift::Int v29 = 0;
  uint64_t v161 = v26 + 16;
  uint64_t v162 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)_swiftEmptyArrayStorage;
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    Swift::Int v31 = v29;
    Swift::Int v32 = v29 + 1;
    Swift::Int v154 = v29;
    if (v29 + 1 >= v21)
    {
      Swift::Int v40 = v29 + 1;
      goto LABEL_69;
    }
    Swift::Int v163 = v21;
    v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    uint64_t v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_85D50();
    uint64_t v38 = v37;
    if (v36 != sub_85D50()) {
      goto LABEL_20;
    }
    if (v38 == v39) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_87070();
    char v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    Swift::Int v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      BOOL v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        Swift::Int v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_85D50();
        uint64_t v50 = v49;
        if (v48 == sub_85D50() && v50 == v51) {
          int v52 = 0;
        }
        else {
          int v52 = sub_87070();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        Swift::Int v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          Swift::Int v54 = v163;
          Swift::Int v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      Swift::Int v40 = v46;
    }
    Swift::Int v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    Swift::Int v31 = v154;
    uint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    Swift::Int v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        unint64_t v63 = &v56[v58];
        v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        uint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    Swift::Int v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    Swift::Int v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_484FC(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    Swift::Int v163 = v40;
    if (v85 >= v84 >> 1)
    {
      uint64_t v135 = sub_484FC((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    uint64_t v86 = v28 + 32;
    unint64_t v87 = &v28[16 * v85 + 32];
    Swift::Int v88 = v163;
    *(void *)unint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          uint64_t v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            uint64_t v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        Swift::Int v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        os_log_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        uint64_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        uint64_t v129 = v28;
        uint64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_754B8(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    Swift::Int v21 = v170[1];
    Swift::Int v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    Swift::Int v65 = v54;
  }
  else {
    Swift::Int v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      uint64_t v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      Swift::Int v67 = v40 * v66;
      Swift::Int v152 = v65;
      do
      {
        uint64_t v70 = 0;
        Swift::Int v71 = v31;
        Swift::Int v163 = v40;
        v160 = (char *)v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = v67 + v70 + *v170;
          uint64_t v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_85D50();
          uint64_t v77 = v76;
          if (v75 == sub_85D50() && v77 == v78) {
            break;
          }
          char v79 = sub_87070();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          Swift::Int v67 = (Swift::Int)v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          uint64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          Swift::Int v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        Swift::Int v69 = v163;
        Swift::Int v67 = (Swift::Int)v160;
LABEL_60:
        Swift::Int v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        Swift::Int v31 = v154;
      }
      while (v40 != v152);
      Swift::Int v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  Swift::Int result = sub_86F60();
  __break(1u);
  return result;
}

uint64_t sub_7516C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  Swift::Int v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_85D60();
  uint64_t v7 = __chkstk_darwin(v6);
  BOOL v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      uint64_t v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_85D50();
      uint64_t v25 = v24;
      if (v23 == sub_85D50() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = sub_87070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      Swift::Int v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_754B8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_85D60();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v63 = (char *)&v58 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v58 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          BOOL v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_85D50();
          uint64_t v49 = v48;
          if (v47 == sub_85D50() && v49 == v50) {
            char v51 = 0;
          }
          else {
            char v51 = sub_87070();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_486C8(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      unint64_t v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_85D50();
        uint64_t v30 = v29;
        if (v28 == sub_85D50() && v30 == v31) {
          break;
        }
        char v34 = sub_87070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_86FC0();
  __break(1u);
  return result;
}

void *sub_75B80()
{
  uint64_t v1 = v0;
  sub_2D920(&qword_CD238);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_86F90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_75D2C()
{
  uint64_t v1 = v0;
  sub_2D920(&qword_CCBD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_86F90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_3F66C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_4B3D4(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_75F14()
{
  uint64_t v1 = v0;
  sub_2D920(&qword_CDC60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_86F90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_760CC()
{
  uint64_t v35 = sub_85D60();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2D920(&qword_CCBD0);
  uint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_86F90();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    char v27 = v30;
LABEL_25:
    *char v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    unint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *unint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    char v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_76390(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2D920(&qword_CD238);
  char v38 = a2;
  uint64_t v6 = sub_86FA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    int64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_870F0();
    sub_86900();
    uint64_t result = sub_87130();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    uint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *uint64_t v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_766A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2D920(&qword_CCBD8);
  uint64_t v6 = sub_86FA0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_4B3D4(v24, v35);
      }
      else
      {
        sub_3F66C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_870F0();
      sub_86900();
      uint64_t result = sub_87130();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_4B3D4(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_769A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2D920(&qword_CDC60);
  char v36 = a2;
  uint64_t v6 = sub_86FA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_870F0();
    sub_86900();
    uint64_t result = sub_87130();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_76CB8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_85D60();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_2D920(&qword_CCBD0);
  int v47 = a2;
  uint64_t v8 = sub_86FA0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  BOOL v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_870F0();
    sub_86900();
    uint64_t result = sub_87130();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_770A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2D920(&qword_CCC00);
  char v42 = a2;
  uint64_t v6 = sub_86FA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_870F0();
    sub_86900();
    uint64_t result = sub_87130();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t _sSo5NSURLC5JSAppE11queryString3for13escapedValuesSSSDys11AnyHashableVypG_SbtFZ_0(uint64_t a1, int a2)
{
  int v41 = a2;
  uint64_t v40 = sub_85D10();
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v42 = 1;
  uint64_t v7 = 1 << v6;
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = (char *)v51 + 8;
  uint64_t v12 = &v56;
  uint64_t v38 = (void (**)(char *, uint64_t))(v3 + 8);
  int64_t v36 = v10 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v44 = 0;
  int64_t v43 = (char *)&type metadata for Any + 8;
  if (!v9) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v15 = v14 | (v44 << 6);
  while (2)
  {
    sub_5C794(*(void *)(a1 + 48) + 40 * v15, (uint64_t)&v49);
    sub_3F66C(*(void *)(a1 + 56) + 32 * v15, (uint64_t)v11);
    while (1)
    {
      sub_77964((uint64_t)&v49, (uint64_t)&v53);
      if (!*((void *)&v54 + 1))
      {
        swift_release();
        return v57;
      }
      long long v49 = v53;
      long long v50 = v54;
      *(void *)&v51[0] = v55;
      sub_4B3D4(v12, v48);
      sub_3F66C((uint64_t)v48, (uint64_t)&v46);
      sub_779CC();
      if (swift_dynamicCast())
      {
        uint64_t countAndFlagsBits = (void *)v45._countAndFlagsBits;
        id v20 = [(id)v45._countAndFlagsBits stringValue];
        uint64_t v21 = sub_86860();
        int64_t v23 = v22;

        int v47 = &type metadata for String;
        v46._uint64_t countAndFlagsBits = v21;
        v46._object = v23;
        sub_3ED88((uint64_t)v48);
        sub_4B3D4(&v46, v48);
      }
      sub_3F66C((uint64_t)v48, (uint64_t)&v46);
      if (swift_dynamicCast())
      {
        object = v45._object;
        uint64_t v24 = v45._countAndFlagsBits;
        if (v41)
        {
          uint64_t v26 = a1;
          char v27 = v12;
          unint64_t v28 = v11;
          int64_t v29 = v10;
          Swift::String v46 = v45;
          uint64_t v30 = v39;
          sub_85CE0();
          v59._uint64_t countAndFlagsBits = 723926335;
          v59._object = (void *)0xE400000000000000;
          sub_85D00(v59);
          sub_42240();
          uint64_t v31 = sub_86DA0();
          uint64_t v33 = v32;
          (*v38)(v30, v40);
          if (v33)
          {
            swift_bridgeObjectRelease();
            uint64_t v24 = v31;
            object = v33;
          }
          int64_t v10 = v29;
          uint64_t v11 = v28;
          uint64_t v12 = v27;
          a1 = v26;
        }
        if (v42)
        {
          v46._uint64_t countAndFlagsBits = sub_86E30();
          v46._object = v34;
        }
        else
        {
          v46._uint64_t countAndFlagsBits = 38;
          v46._object = (void *)0xE100000000000000;
          v60._uint64_t countAndFlagsBits = sub_86E30();
          sub_86930(v60);
          swift_bridgeObjectRelease();
        }
        v61._uint64_t countAndFlagsBits = 61;
        v61._object = (void *)0xE100000000000000;
        sub_86930(v61);
        v62._uint64_t countAndFlagsBits = v24;
        v62._object = object;
        sub_86930(v62);
        swift_bridgeObjectRelease();
        sub_86930(v46);
        swift_bridgeObjectRelease();
        sub_3ED88((uint64_t)v48);
        uint64_t result = sub_5B478((uint64_t)&v49);
        uint64_t v42 = 0;
        if (v9) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_3ED88((uint64_t)v48);
        uint64_t result = sub_5B478((uint64_t)&v49);
        if (v9) {
          goto LABEL_6;
        }
      }
LABEL_8:
      int64_t v16 = v44 + 1;
      if (__OFADD__(v44, 1))
      {
        __break(1u);
        goto LABEL_41;
      }
      if (v16 < v10)
      {
        unint64_t v17 = *(void *)(v37 + 8 * v16);
        if (v17) {
          goto LABEL_11;
        }
        int64_t v18 = v44 + 2;
        ++v44;
        if (v16 + 1 < v10)
        {
          unint64_t v17 = *(void *)(v37 + 8 * v18);
          if (v17) {
            goto LABEL_14;
          }
          int64_t v44 = v16 + 1;
          if (v16 + 2 < v10)
          {
            unint64_t v17 = *(void *)(v37 + 8 * (v16 + 2));
            if (v17)
            {
              v16 += 2;
              goto LABEL_11;
            }
            int64_t v18 = v16 + 3;
            int64_t v44 = v16 + 2;
            if (v16 + 3 < v10) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v9 = 0;
      uint64_t v52 = 0;
      memset(v51, 0, sizeof(v51));
      long long v49 = 0u;
      long long v50 = 0u;
    }
    unint64_t v17 = *(void *)(v37 + 8 * v18);
    if (v17)
    {
LABEL_14:
      int64_t v16 = v18;
LABEL_11:
      unint64_t v9 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
      int64_t v44 = v16;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v10)
    {
      int64_t v44 = v36;
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v37 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_11;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_77964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CDC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_779CC()
{
  unint64_t result = qword_CDC58;
  if (!qword_CDC58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_CDC58);
  }
  return result;
}

void *sub_77A0C(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_643DC(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t BooksLocalizerFactory.__allocating_init(package:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_7CB6C((uint64_t)a1 + OBJC_IVAR___JSAPackage_jetPack, v2 + OBJC_IVAR____TtC5JSApp21BooksLocalizerFactory_jetPack, (uint64_t (*)(void))type metadata accessor for BooksJetPackResourceBundle);

  return v2;
}

uint64_t BooksLocalizerFactory.init(package:)(void *a1)
{
  sub_7CB6C((uint64_t)a1 + OBJC_IVAR___JSAPackage_jetPack, v1 + OBJC_IVAR____TtC5JSApp21BooksLocalizerFactory_jetPack, (uint64_t (*)(void))type metadata accessor for BooksJetPackResourceBundle);

  return v1;
}

uint64_t sub_77C48(uint64_t a1, uint64_t a2)
{
  v3[62] = a2;
  v3[63] = v2;
  v3[61] = a1;
  v3[64] = *v2;
  uint64_t v4 = sub_86650();
  v3[65] = v4;
  v3[66] = *(void *)(v4 - 8);
  v3[67] = swift_task_alloc();
  v3[68] = swift_task_alloc();
  uint64_t v5 = sub_865E0();
  v3[69] = v5;
  v3[70] = *(void *)(v5 - 8);
  v3[71] = swift_task_alloc();
  uint64_t v6 = sub_866D0();
  v3[72] = v6;
  v3[73] = *(void *)(v6 - 8);
  v3[74] = swift_task_alloc();
  v3[75] = swift_task_alloc();
  v3[76] = type metadata accessor for BooksBagLanguageSource(0);
  v3[77] = swift_task_alloc();
  v3[78] = swift_task_alloc();
  sub_86520();
  v3[79] = swift_task_alloc();
  return _swift_task_switch(sub_77E78, 0, 0);
}

uint64_t sub_77E78()
{
  uint64_t v1 = v0[63];
  sub_2D920(&qword_CDC70);
  sub_86560();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_A1FD0;
  sub_32FAC(0, &qword_CDC78);
  sub_86550();
  sub_32FAC(0, &qword_CDC80);
  sub_86550();
  sub_2D920(&qword_CDC88);
  sub_86550();
  v0[58] = v2;
  sub_2D920(&qword_CDC90);
  sub_797AC();
  v0[80] = sub_865A0();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1 + OBJC_IVAR____TtC5JSApp21BooksLocalizerFactory_jetPack;
  v0[20] = type metadata accessor for BooksJetPackResourceBundle();
  v0[21] = sub_7CB24(&qword_CC878, (void (*)(uint64_t))type metadata accessor for BooksJetPackResourceBundle);
  uint64_t v4 = sub_3F758(v0 + 17);
  sub_7CB6C(v3, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BooksJetPackResourceBundle);
  sub_86530();
  v0[15] = sub_86690();
  v0[16] = &protocol witness table for LocalizedStringsBundle;
  sub_3F758(v0 + 12);
  sub_86680();
  sub_3EDD8((long long *)v0 + 6, (uint64_t)(v0 + 7));
  uint64_t v5 = sub_7C5B8();
  if (v5)
  {
    uint64_t v6 = v5;
    swift_bridgeObjectRetain_n();
    int64_t v7 = sub_77A0C(v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_7C520((uint64_t)v7);
    swift_bridgeObjectRelease();
    int64_t v9 = sub_742C8(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[84] = v6;
    v0[83] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[85] = v10;
    void *v10 = v0;
    v10[1] = sub_786A8;
    uint64_t v11 = v0[75];
    uint64_t v12 = v0[72];
    return BaseObjectGraph.inject<A>(_:)(v11, v12, v12);
  }
  else
  {
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[11];
    sub_494DC(v0 + 7, v13);
    unint64_t v15 = (void *)swift_task_alloc();
    v0[81] = v15;
    *unint64_t v15 = v0;
    v15[1] = sub_78510;
    return dispatch thunk of LocalizedStringsDataSource.fetchLanguages()(v13, v14);
  }
}

uint64_t sub_78510(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[82] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_78D98, 0, 0);
  }
  else
  {
    v4[84] = 0;
    v4[83] = a1;
    uint64_t v5 = (void *)swift_task_alloc();
    v4[85] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_786A8;
    uint64_t v6 = v4[75];
    uint64_t v7 = v4[72];
    return BaseObjectGraph.inject<A>(_:)(v6, v7, v7);
  }
}

uint64_t sub_786A8()
{
  *(void *)(*(void *)v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_78E7C;
  }
  else
  {
    uint64_t v2 = sub_787D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_787D0()
{
  uint64_t v21 = *(void *)(v0 + 624);
  uint64_t v22 = *(void *)(v0 + 672);
  uint64_t v1 = *(void *)(v0 + 616);
  uint64_t v18 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  uint64_t v5 = *(void *)(v0 + 576);
  uint64_t v6 = *(void *)(v0 + 568);
  uint64_t v7 = *(void *)(v0 + 560);
  uint64_t v19 = *(void *)(v0 + 552);
  uint64_t v20 = *(void *)(v0 + 664);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v1, v2, v5);
  v8(v3, v2, v5);
  uint64_t v9 = v0 + 176;
  sub_865C0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v1 + *(int *)(v18 + 20), v6, v19);
  *(void *)(v1 + *(int *)(v18 + 24)) = v20;
  sub_7CAC0(v1, v21);
  sub_3ECDC(v0 + 56, v0 + 176);
  if (v22)
  {
    uint64_t v10 = *(void *)(v0 + 672);
    *(void *)(v0 + 240) = &type metadata for NativeDataSource;
    *(void *)(v0 + 248) = sub_7CA6C();
    *(void *)(v0 + 216) = v10;
    uint64_t v11 = v0 + 216;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = v0 + 216;
    *(void *)(v0 + 248) = 0;
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
  }
  *(void *)(v0 + 696) = v10;
  uint64_t v12 = *(void *)(v0 + 624);
  uint64_t v13 = *(char **)(v0 + 544);
  *(void *)(v0 + 40) = *(void *)(v0 + 608);
  *(void *)(v0 + 48) = sub_7CB24(&qword_CDCA8, (void (*)(uint64_t))type metadata accessor for BooksBagLanguageSource);
  uint64_t v14 = sub_3F758((uint64_t *)(v0 + 16));
  sub_7CB6C(v12, (uint64_t)v14, type metadata accessor for BooksBagLanguageSource);
  swift_bridgeObjectRetain();
  sub_7985C(v9, v11, v0 + 16, v13);
  sub_3ED88(v9);
  sub_3ED88(v0 + 16);
  sub_33054(v11, &qword_CDCB0);
  *(void *)(v0 + 704) = sub_86670();
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 712) = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_78AA4;
  uint64_t v16 = *(void *)(v0 + 544);
  return static AppleServicesLocalizer.load(using:)(v16);
}

uint64_t sub_78AA4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[52] = v2;
  v3[53] = a1;
  v3[54] = v1;
  v3[90] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_78F60;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_78BC8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_78BC8()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 624);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);
  uint64_t v6 = *(uint64_t **)(v0 + 488);
  *(void *)(v0 + 280) = *(void *)(v0 + 704);
  *(void *)(v0 + 288) = &protocol witness table for AppleServicesLocalizer;
  *(void *)(v0 + 256) = v1;
  uint64_t v7 = type metadata accessor for BooksLocalizer();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 56) = 1;
  sub_3EDD8((long long *)(v0 + 256), v8 + 16);
  v6[3] = v7;
  void v6[4] = sub_7CB24(&qword_CDCC0, (void (*)(uint64_t))type metadata accessor for BooksLocalizer);
  swift_release();
  *uint64_t v6 = v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_7CC28(v2, type metadata accessor for BooksBagLanguageSource);
  sub_3ED88(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_78D98()
{
  swift_release();
  sub_3ED88(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_78E7C()
{
  swift_release();
  sub_3ED88(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_78F60()
{
  uint64_t v1 = v0 + 56;
  if (qword_CC508 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_86230();
  sub_31DE4(v2, (uint64_t)qword_CD660);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_86210();
  os_log_type_t v4 = sub_86C30();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 472) = v7;
    sub_86D40();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v3, v4, "Failed to create AppleServicesLocalizer: %@. Falling back to native language source.", v5, 0xCu);
    sub_2D920(&qword_CC858);
    swift_arrayDestroy();
    uint64_t v1 = v0 + 56;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 672);

  sub_3ECDC(v1, v0 + 296);
  if (v8)
  {
    uint64_t v9 = *(void *)(v0 + 696);
    *(void *)(v0 + 360) = &type metadata for NativeDataSource;
    *(void *)(v0 + 368) = sub_7CA6C();
    *(void *)(v0 + 336) = v9;
  }
  else
  {
    *(void *)(v0 + 368) = 0;
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
  }
  uint64_t v10 = *(char **)(v0 + 536);
  *(void *)(v0 + 400) = &type metadata for NativeLanguageSource;
  *(void *)(v0 + 408) = sub_7CBD4();
  sub_7985C(v0 + 296, v0 + 336, v0 + 376, v10);
  sub_3ED88(v0 + 296);
  sub_3ED88(v0 + 376);
  sub_33054(v0 + 336, &qword_CDCB0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v11;
  void *v11 = v0;
  v11[1] = sub_79248;
  uint64_t v12 = *(void *)(v0 + 536);
  return static AppleServicesLocalizer.load(using:)(v12);
}

uint64_t sub_79248(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[55] = v2;
  v3[56] = a1;
  v3[57] = v1;
  v3[92] = v1;
  swift_task_dealloc();
  if (v1) {
    os_log_type_t v4 = sub_79564;
  }
  else {
    os_log_type_t v4 = sub_79364;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_79364()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 520);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 448);
  uint64_t v5 = *(void *)(v0 + 624);
  uint64_t v6 = *(void *)(v0 + 544);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(uint64_t **)(v0 + 488);
  *(void *)(v0 + 280) = *(void *)(v0 + 704);
  *(void *)(v0 + 288) = &protocol witness table for AppleServicesLocalizer;
  *(void *)(v0 + 256) = v4;
  uint64_t v10 = type metadata accessor for BooksLocalizer();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 56) = 1;
  sub_3EDD8((long long *)(v0 + 256), v11 + 16);
  v9[3] = v10;
  void v9[4] = sub_7CB24(&qword_CDCC0, (void (*)(uint64_t))type metadata accessor for BooksLocalizer);
  swift_release();
  uint64_t *v9 = v11;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_7CC28(v5, type metadata accessor for BooksBagLanguageSource);
  sub_3ED88(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_79564()
{
  uint64_t v1 = v0[78];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  uint64_t v4 = v0[66];
  uint64_t v5 = v0[65];
  swift_release();
  swift_errorRelease();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v3, v5);
  v6(v2, v5);
  sub_7CC28(v1, type metadata accessor for BooksBagLanguageSource);
  sub_3ED88((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t type metadata accessor for BooksBagLanguageSource(uint64_t a1)
{
  return sub_7CCB0(a1, qword_CDE78);
}

id sub_796D0@<X0>(void *a1@<X8>)
{
  return sub_796F8((SEL *)&selRef_defaultSession, a1);
}

id sub_796E4@<X0>(void *a1@<X8>)
{
  return sub_796F8((SEL *)&selRef_currentProcess, a1);
}

id sub_796F8@<X0>(SEL *a1@<X1>, void *a2@<X8>)
{
  id result = [self *a1];
  *a2 = result;
  return result;
}

uint64_t sub_79738@<X0>(void *a1@<X8>)
{
  id v2 = [self bu_sharedAccountStore];
  uint64_t result = sub_32FAC(0, &qword_CDF18);
  a1[3] = result;
  a1[4] = &protocol witness table for ACAccountStore;
  *a1 = v2;
  return result;
}

unint64_t sub_797AC()
{
  unint64_t result = qword_CDC98;
  if (!qword_CDC98)
  {
    sub_2D964(&qword_CDC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDC98);
  }
  return result;
}

uint64_t sub_79808(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_7985C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a2;
  uint64_t v6 = sub_866A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_86650();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  sub_3ECDC(a1, (uint64_t)v25);
  sub_3ECDC(a3, (uint64_t)&v23);
  swift_retain();
  sub_86610();
  uint64_t v26 = &type metadata for BooksLocalizerPreference;
  unint64_t v27 = sub_7DB40();
  sub_86620();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v18 = v14;
  uint64_t v19 = v21;
  v17(v18, v10);
  sub_33054((uint64_t)v25, &qword_CDF00);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for LocalizerLookupStrategy.dataSourceThenNative(_:), v6);
  sub_86630();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17(v16, v10);
  sub_7DB94(v22, (uint64_t)&v23);
  if (!v24) {
    return sub_33054((uint64_t)&v23, &qword_CDCB0);
  }
  sub_3EDD8(&v23, (uint64_t)v25);
  sub_86640();
  sub_3ED88((uint64_t)v25);
  v17(v19, v10);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v19, v16, v10);
}

uint64_t BooksLocalizerFactory.deinit()
{
  sub_7CC28(v0 + OBJC_IVAR____TtC5JSApp21BooksLocalizerFactory_jetPack, (uint64_t (*)(void))type metadata accessor for BooksJetPackResourceBundle);
  return v0;
}

uint64_t BooksLocalizerFactory.__deallocating_deinit()
{
  sub_7CC28(v0 + OBJC_IVAR____TtC5JSApp21BooksLocalizerFactory_jetPack, (uint64_t (*)(void))type metadata accessor for BooksJetPackResourceBundle);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_79BDC()
{
  return 0;
}

uint64_t sub_79BE4()
{
  v1[4] = v0;
  v1[5] = type metadata accessor for BooksBagLanguageSource(0);
  uint64_t v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  void *v2 = v1;
  v2[1] = sub_79C8C;
  return BagLanguageSource.fetchLanguages()();
}

uint64_t sub_79C8C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_79DC0, 0, 0);
  }
}

uint64_t sub_79DC0()
{
  uint64_t v20 = v0;
  uint64_t v1 = self;
  Class isa = sub_86A10().super.isa;
  Class v3 = sub_86A10().super.isa;
  id v4 = [v1 preferredLocalizationsFromArray:isa forPreferences:v3];

  uint64_t v5 = sub_86A30();
  if (qword_CC508 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_86230();
  sub_31DE4(v6, (uint64_t)qword_CD660);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_86210();
  os_log_type_t v8 = sub_86C50();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    os_log_type_t type = v8;
    uint64_t v10 = sub_86A40();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[2] = sub_422E0(v10, v12, &v19);
    sub_86D40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_86A40();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    v0[3] = sub_422E0(v13, v15, &v19);
    sub_86D40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v7, type, "BooksBagLanguageSource: languages from bag %s coerced to %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  return v16(v5);
}

void sub_7A0E4(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_85F50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BooksBagLanguageSource(0);
  sub_865D0();
  if (qword_CC508 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_86230();
  sub_31DE4(v6, (uint64_t)qword_CD660);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v7 = sub_86210();
  os_log_type_t v8 = sub_86C50();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_7CB24(&qword_CDEE8, (void (*)(uint64_t))&type metadata accessor for Locale);
    uint64_t v10 = sub_87040();
    uint64_t v12 = sub_422E0(v10, v11, &v13);
    sub_86D40();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_0, v7, v8, "BooksBagLanguageSource: Computed locale=%s based on bag languages", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_7A398()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_7A424;
  return sub_79BE4();
}

uint64_t sub_7A424(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

BOOL sub_7A528()
{
  uint64_t v0 = sub_2D920(&qword_CCE30);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_CC498 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_31DE4(v0, (uint64_t)qword_CCDE8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_86080();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return (v6[15] & 1) == 0;
}

uint64_t sub_7A660()
{
  return sub_865F0();
}

uint64_t sub_7A67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_7A6A0, 0, 0);
}

uint64_t sub_7A6A0()
{
  uint64_t v16 = v0;
  if (qword_CC508 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_86230();
  sub_31DE4(v1, (uint64_t)qword_CD660);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_86210();
  os_log_type_t v3 = sub_86C10();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[5];
  if (v4)
  {
    uint64_t v6 = v0[4];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_422E0(v6, v5, &v15);
    sub_86D40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v2, v3, "Using '%{public}s' strings from JetTranslations.json", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  unint64_t v11 = (uint64_t *)v0[3];
  uint64_t v10 = v0[4];
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_7D740(v9, v10, v8);
  swift_bridgeObjectRelease();
  void v11[3] = (uint64_t)&type metadata for NativeDataSource.NativeLocalizedStrings;
  v11[4] = sub_7DAEC();
  uint64_t *v11 = v12;
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_7A8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_59F18(a1, a2);
  if (v7)
  {
    uint64_t v8 = *(void *)(*(void *)(a3 + 56) + 16 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_7A960(uint64_t a1, uint64_t a2)
{
  return sub_7A8D4(a1, a2, *v2);
}

uint64_t sub_7A968()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_7A98C, 0, 0);
}

uint64_t sub_7A98C()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_77A0C(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_7C520((uint64_t)v2);
  swift_bridgeObjectRelease();
  BOOL v4 = sub_742C8(v3);
  swift_bridgeObjectRelease();
  unint64_t v5 = *(uint64_t (**)(void *))(v0 + 8);
  return v5(v4);
}

uint64_t sub_7AA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_32DB8;
  void v9[5] = a3;
  v9[6] = v8;
  v9[3] = a1;
  void v9[4] = a2;
  return _swift_task_switch(sub_7A6A0, 0, 0);
}

uint64_t sub_7AB00()
{
  return _swift_task_switch(sub_7AB1C, 0, 0);
}

uint64_t sub_7AB1C()
{
  uint64_t v1 = sub_85F40();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_7AB7C()
{
  swift_bridgeObjectRetain();

  return sub_85F30();
}

uint64_t sub_7ABD0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_86E10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_32FAC(0, &qword_CC680);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_86E00();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_7B020(v7, result + 1);
    unint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_7B218();
      long long v23 = v28;
    }
    else
    {
      long long v23 = (void *)v22;
      id v24 = v8;
    }
    sub_7B798((uint64_t)v8, v23);
    uint64_t *v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_86D00(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_32FAC(0, &qword_CC680);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_86D10();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_86D10();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    id v8 = a2;
    sub_7B81C((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_7AE70(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_870F0();
  swift_bridgeObjectRetain();
  sub_86900();
  Swift::Int v8 = sub_87130();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    Swift::Int v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_87070() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_87070() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_7B9A4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

Swift::Int sub_7B020(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_2D920(&qword_CDF20);
    uint64_t v2 = sub_86E90();
    uint64_t v14 = v2;
    sub_86DF0();
    if (sub_86E20())
    {
      sub_32FAC(0, &qword_CC680);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_7B218();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_86D00(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_86E20());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_7B218()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2D920(&qword_CDF20);
  uint64_t v3 = sub_86E80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_86D00(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_7B4B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2D920(&qword_CDF08);
  uint64_t v3 = sub_86E80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_870F0();
      sub_86900();
      uint64_t result = sub_87130();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_7B798(uint64_t a1, void *a2)
{
  sub_86D00(a2[5]);
  unint64_t result = sub_86DE0();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_7B81C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_7B218();
  }
  else
  {
    if (v7 > v6)
    {
      sub_7BB40();
      goto LABEL_14;
    }
    sub_7BEA0();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_86D00(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_32FAC(0, &qword_CC680);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_86D10();

    if (v12)
    {
LABEL_13:
      sub_870A0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_86D10();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

Swift::Int sub_7B9A4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_7B4B8();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_7BCEC();
      goto LABEL_22;
    }
    sub_7C11C();
  }
  uint64_t v11 = *v4;
  sub_870F0();
  sub_86900();
  unint64_t result = sub_87130();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    char v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_87070(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_870A0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_87070();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

id sub_7BB40()
{
  uint64_t v1 = v0;
  sub_2D920(&qword_CDF20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_86E70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_7BCEC()
{
  uint64_t v1 = v0;
  sub_2D920(&qword_CDF08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_86E70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_7BEA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2D920(&qword_CDF20);
  uint64_t v3 = sub_86E80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_86D00(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_7C11C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2D920(&qword_CDF08);
  uint64_t v3 = sub_86E80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    Swift::Int v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_870F0();
    swift_bridgeObjectRetain();
    sub_86900();
    uint64_t result = sub_87130();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_7C3CC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_86F80();
    swift_bridgeObjectRelease();
  }
  sub_32FAC(0, &qword_CC680);
  sub_7DBFC();
  uint64_t result = sub_86BC0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_86F80();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)sub_86ED0();
        sub_7ABD0(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_7ABD0(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_7C520(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_86BC0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_7AE70(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_7C5B8()
{
  uint64_t v0 = sub_2D920((uint64_t *)&unk_CD040);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_85EB0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::Int v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)v29 - v8;
  type metadata accessor for NativeDataSource.BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v12 = sub_86830();
  NSString v13 = sub_86830();
  id v14 = [v11 URLForResource:v12 withExtension:v13];

  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_5;
  }
  sub_85E60();

  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v15(v2, v7, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_5:
    sub_33054((uint64_t)v2, (uint64_t *)&unk_CD040);
    goto LABEL_6;
  }
  v15(v9, v2, v3);
  uint64_t v21 = sub_85EC0();
  unint64_t v23 = v22;
  unint64_t v24 = self;
  Class isa = sub_85EE0().super.isa;
  v30[0] = 0;
  id v26 = [v24 JSONObjectWithData:isa options:0 error:v30];

  if (v26)
  {
    id v27 = v30[0];
    sub_86DC0();
    sub_43AB8(v21, v23);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    sub_2D920(&qword_CDF10);
    if (swift_dynamicCast()) {
      return v29[1];
    }
  }
  else
  {
    id v28 = v30[0];
    sub_85DD0();

    swift_willThrow();
    sub_43AB8(v21, v23);
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
LABEL_6:
  if (qword_CC508 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_86230();
  sub_31DE4(v16, (uint64_t)qword_CD660);
  unint64_t v17 = sub_86210();
  os_log_type_t v18 = sub_86C30();
  if (os_log_type_enabled(v17, v18))
  {
    Swift::Int v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::Int v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "Can't decode JetTranslations.json, ignoring bundled translations!", v19, 2u);
    swift_slowDealloc();
  }

  return 0;
}

unint64_t sub_7CA6C()
{
  unint64_t result = qword_CDCA0;
  if (!qword_CDCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDCA0);
  }
  return result;
}

uint64_t sub_7CAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BooksBagLanguageSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7CB24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7CB6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_7CBD4()
{
  unint64_t result = qword_CDCB8;
  if (!qword_CDCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDCB8);
  }
  return result;
}

uint64_t sub_7CC28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_7CC88()
{
  return type metadata accessor for BooksLocalizerFactory(0);
}

uint64_t type metadata accessor for BooksLocalizerFactory(uint64_t a1)
{
  return sub_7CCB0(a1, (uint64_t *)&unk_CDCF0);
}

uint64_t sub_7CCB0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7CCE8()
{
  uint64_t result = type metadata accessor for BooksJetPackResourceBundle();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BooksLocalizerFactory(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BooksLocalizerFactory);
}

uint64_t dispatch thunk of BooksLocalizerFactory.__allocating_init(package:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BooksLocalizerFactory.storeLocalizer(asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 96) + **(int **)(*(void *)v2 + 96));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_32DB8;
  return v8(a1, a2);
}

uint64_t type metadata accessor for NativeDataSource.BundleFinder()
{
  return self;
}

ValueMetadata *type metadata accessor for NativeLanguageSource()
{
  return &type metadata for NativeLanguageSource;
}

ValueMetadata *type metadata accessor for NativeDataSource()
{
  return &type metadata for NativeDataSource;
}

uint64_t *sub_7CEF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_866D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_865E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_7D018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_866D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_865E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_7D0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_866D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_865E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_7D1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_866D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_865E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_7D280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_866D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_865E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_7D34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_866D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_865E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_7D420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7D434);
}

uint64_t sub_7D434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_866D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_865E0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_7D548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7D55C);
}

uint64_t sub_7D55C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_866D0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_865E0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_7D66C()
{
  uint64_t result = sub_866D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_865E0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_7D740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 64;
  int64_t v44 = (char *)&_swiftEmptyDictionarySingleton;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v46 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v8) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v13 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v13 >= v46) {
    goto LABEL_44;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v13);
  int64_t v15 = i + 1;
  if (!v14)
  {
    int64_t v15 = i + 2;
    if (i + 2 >= v46) {
      goto LABEL_44;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      int64_t v15 = i + 3;
      if (i + 3 >= v46) {
        goto LABEL_44;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = i + 4;
        if (i + 4 >= v46) {
          goto LABEL_44;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v15);
        if (!v14)
        {
          int64_t v16 = i + 5;
          if (i + 5 < v46)
          {
            unint64_t v14 = *(void *)(v5 + 8 * v16);
            if (v14)
            {
              int64_t v15 = i + 5;
              goto LABEL_23;
            }
            while (1)
            {
              int64_t v15 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_47;
              }
              if (v15 >= v46) {
                break;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v15);
              ++v16;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
LABEL_44:
          sub_32FE8();
          return (uint64_t)v44;
        }
      }
    }
  }
LABEL_23:
  unint64_t v8 = (v14 - 1) & v14;
  unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
  for (i = v15; ; unint64_t v12 = v11 | (i << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v21)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v8) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_59F18(a2, a3);
    if (v23)
    {
      id v27 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v22);
      uint64_t v42 = v27[1];
      uint64_t v43 = *v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (!*(void *)(v20 + 16)) {
        goto LABEL_6;
      }
      unint64_t v24 = sub_59F18(0x73752D6E65, 0xE500000000000000);
      if ((v25 & 1) == 0) {
        goto LABEL_6;
      }
      id v26 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v24);
      uint64_t v42 = v26[1];
      uint64_t v43 = *v26;
      swift_bridgeObjectRetain();
    }
    id v28 = v44;
    unint64_t v29 = *((void *)v44 + 2);
    if (*((void *)v44 + 3) <= v29)
    {
      sub_770A0(v29 + 1, 1);
      id v28 = (char *)&_swiftEmptyDictionarySingleton;
    }
    int64_t v44 = v28;
    sub_870F0();
    sub_86900();
    uint64_t result = sub_87130();
    uint64_t v30 = v44 + 64;
    uint64_t v31 = -1 << v44[32];
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)&v44[8 * (v32 >> 6) + 64]) == 0) {
      break;
    }
    unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)&v44[8 * (v32 >> 6) + 64])) | v32 & 0x7FFFFFFFFFFFFFC0;
LABEL_42:
    *(void *)&v30[(v34 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v34;
    uint64_t v39 = 16 * v34;
    uint64_t v40 = (void *)(*((void *)v44 + 6) + v39);
    void *v40 = v19;
    v40[1] = v18;
    int v41 = (void *)(*((void *)v44 + 7) + v39);
    *int v41 = v43;
    v41[1] = v42;
    ++*((void *)v44 + 2);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
  }
  char v35 = 0;
  unint64_t v36 = (unint64_t)(63 - v31) >> 6;
  while (++v33 != v36 || (v35 & 1) == 0)
  {
    BOOL v37 = v33 == v36;
    if (v33 == v36) {
      unint64_t v33 = 0;
    }
    v35 |= v37;
    uint64_t v38 = *(void *)&v30[8 * v33];
    if (v38 != -1)
    {
      unint64_t v34 = __clz(__rbit64(~v38)) + (v33 << 6);
      goto LABEL_42;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

unint64_t sub_7DAEC()
{
  unint64_t result = qword_CDEE0;
  if (!qword_CDEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDEE0);
  }
  return result;
}

unint64_t sub_7DB40()
{
  unint64_t result = qword_CDEF8;
  if (!qword_CDEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CDEF8);
  }
  return result;
}

uint64_t sub_7DB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2D920(&qword_CDCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_7DBFC()
{
  unint64_t result = qword_CC688;
  if (!qword_CC688)
  {
    sub_32FAC(255, &qword_CC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CC688);
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksLocalizerPreference()
{
  return &type metadata for BooksLocalizerPreference;
}

ValueMetadata *type metadata accessor for NativeDataSource.NativeLocalizedStrings()
{
  return &type metadata for NativeDataSource.NativeLocalizedStrings;
}

uint64_t sub_7DC84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_7DC94(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a5)
  {
    void v10[4] = a5;
    v10[5] = a6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    uint64_t v10[2] = sub_2DC18;
    v10[3] = &unk_B5F18;
    uint64_t v9 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v9 = 0;
  }
  [a2 presentViewController:a3 animated:a4 & 1 completion:v9];
  _Block_release(v9);
}

uint64_t sub_7DD70(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void _sSo16UIViewControllerC5JSAppE7present_7options8animated10completionyAB_SDys11AnyHashableVypGSbyycSgtFZ_0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  strcpy((char *)v65, "preferredSize");
  HIWORD(v65[1]) = -4864;
  sub_86E60();
  if (*(void *)(a2 + 16) && (unint64_t v10 = sub_59F94((uint64_t)&aBlock), (v11 & 1) != 0))
  {
    sub_3F66C(*(void *)(a2 + 56) + 32 * v10, (uint64_t)&v66);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  sub_5B478((uint64_t)&aBlock);
  if (!*((void *)&v67 + 1))
  {
    sub_4C364((uint64_t)&v66);
    goto LABEL_20;
  }
  sub_2D920(&qword_CDF28);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    id v23 = a1;
    goto LABEL_21;
  }
  uint64_t v12 = v65[0];
  if (!*(void *)(v65[0] + 16)
    || (unint64_t v13 = sub_59F18(0x6874646977, 0xE500000000000000), (v14 & 1) == 0)
    || !*(void *)(v12 + 16)
    || (double v15 = *(double *)(*(void *)(v12 + 56) + 8 * v13),
        unint64_t v16 = sub_59F18(0x746867696568, 0xE600000000000000),
        (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  double v18 = *(double *)(*(void *)(v12 + 56) + 8 * v16);
  swift_bridgeObjectRelease();
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {
    id v23 = a1;
    goto LABEL_37;
  }
  uint64_t v20 = (void *)v19;
  id v21 = objc_allocWithZone((Class)UIViewController);
  id v22 = a1;
  id v23 = [v21 init];
  [v23 addChildViewController:v20];
  id v24 = [v20 view];
  if (!v24)
  {
    __break(1u);
    goto LABEL_39;
  }
  char v25 = v24;
  unint64_t v58 = v22;
  [v24 setAutoresizingMask:18];

  id v26 = [v20 view];
  if (!v26)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id v27 = v26;
  id v28 = [v23 view];
  if (!v28)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v29 = v28;
  [v28 bounds];
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;
  double v37 = v36;

  [v27 setFrame:v31, v33, v35, v37];
  id v38 = [v23 view];
  if (!v38)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v39 = v38;
  id v40 = [v20 view];
  if (!v40)
  {
LABEL_42:
    __break(1u);
    return;
  }
  int v41 = v40;
  [v39 addSubview:v40];

  [v20 didMoveToParentViewController:v23];
LABEL_37:
  [v23 setPreferredContentSize:v15, v18];
LABEL_21:
  id v42 = [self sharedInstance];
  id v43 = [v42 windowManager];

  Class isa = sub_867F0().super.isa;
  id v45 = [v43 windowFromOptions:isa];

  id v46 = [self jsa_topMostViewControllerForWindow:v45];
  id v47 = [v46 traitCollection];
  id v48 = [v47 userInterfaceStyle];

  [v23 setOverrideUserInterfaceStyle:v48];
  v65[0] = 0xD000000000000011;
  v65[1] = 0x800000000009ED80;
  sub_86E60();
  if (*(void *)(a2 + 16) && (unint64_t v49 = sub_59F94((uint64_t)&aBlock), (v50 & 1) != 0))
  {
    sub_3F66C(*(void *)(a2 + 56) + 32 * v49, (uint64_t)&v66);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  sub_5B478((uint64_t)&aBlock);
  if (*((void *)&v67 + 1))
  {
    if (swift_dynamicCast()) {
      [v23 setModalPresentationStyle:v65[0]];
    }
  }
  else
  {
    sub_4C364((uint64_t)&v66);
  }
  id v51 = [v46 transitionCoordinator];
  if (v51)
  {
    uint64_t v52 = v51;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v46;
    *(void *)(v53 + 24) = v23;
    *(unsigned char *)(v53 + 32) = a3 & 1;
    *(void *)(v53 + 40) = a4;
    *(void *)(v53 + 48) = a5;
    unint64_t v63 = sub_7E624;
    uint64_t v64 = v53;
    unint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    Swift::String v61 = sub_7DD70;
    Swift::String v62 = &unk_B5EF0;
    long long v54 = _Block_copy(&aBlock);
    id v55 = v46;
    sub_2DC74(a4);
    id v56 = v23;
    swift_release();
    [v52 animateAlongsideTransition:0 completion:v54];

    _Block_release(v54);
    swift_unknownObjectRelease();
    id v23 = v45;
  }
  else
  {
    if (a4)
    {
      unint64_t v63 = (void (*)(uint64_t))a4;
      uint64_t v64 = a5;
      unint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v60 = 1107296256;
      Swift::String v61 = sub_2DC18;
      Swift::String v62 = &unk_B5EA0;
      uint64_t v57 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v57 = 0;
    }
    [v46 presentViewController:v23 animated:a3 & 1 completion:v57];

    _Block_release(v57);
  }
}

uint64_t sub_7E574()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_7E5AC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_7E5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_7E5CC()
{
  return swift_release();
}

uint64_t sub_7E5D4()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_7E624(uint64_t a1)
{
  sub_7DC94(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

Swift::Void __swiftcall JSABridge.enqueueValueCall(_:arguments:f:l:)(JSValue _, Swift::OpaquePointer_optional arguments, Swift::String f, Swift::Int l)
{
  object = f._object;
  if (arguments.value._rawValue) {
    v7.super.Class isa = sub_86A10().super.isa;
  }
  else {
    v7.super.Class isa = 0;
  }
  id v8 = sub_86830();
  [v4 enqueueValueCall:_.super.isa arguments:v7.super.isa file:v8 line:object];
}

void JSABridge.enqueueBlockPrefersSync(_:f:l:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v9[4] = a1;
  void v9[5] = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_7E7E4;
  v9[3] = &unk_B5F40;
  NSArray v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  NSString v8 = sub_86830();
  [v5 enqueueBlockPrefersSync:v7 file:v8 line:a5];

  _Block_release(v7);
}

void sub_7E7E4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_7E84C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_7E85C()
{
  return swift_release();
}

void sub_7E8A0()
{
  v12.receiver = v0;
  v12.Class super_class = (Class)type metadata accessor for FigaroSummaryCell();
  [super layoutSubviews];
  [v0 frame];
  CGFloat v1 = CGRectGetWidth(v13) + -60.0;
  uint64_t v2 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView;
  [*(id *)&v0[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView] setFrame:20.0, 15.0, 30.0, 30.0];
  uint64_t v3 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel;
  id v4 = *(void **)&v0[v2];
  id v5 = *(id *)&v0[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel];
  [v4 frame];
  double MinY = CGRectGetMinY(v14);
  [*(id *)&v0[v2] frame];
  [v5 setFrame:CGRectMake(60.0, MinY, CGRectGetWidth(v1), CGRectGetHeight(v15))];

  uint64_t v7 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel;
  NSString v8 = *(void **)&v0[v3];
  id v9 = *(id *)&v0[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel];
  [v8 frame];
  [v9 setFrame:CGRectMake(60.0, CGRectGetMaxY(v16) + 2.5, v1, 15.0)];

  unint64_t v10 = *(void **)&v0[v7];
  id v11 = *(id *)&v0[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel];
  [v10 frame];
  [v11 setFrame:CGRectMake(60.0, CGRectGetMaxY(v17) + 2.5, v1, 15.0)];
}

void sub_7EA8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_figaroEvent;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_figaroEvent);
  if (v3)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v4 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    if (v4)
    {
      BOOL v6 = v5 == 0x746E756F636361 && v4 == 0xE700000000000000;
      if (v6
        || (sub_87070() & 1) != 0
        || (v5 == 0x636E75614C707061 ? (BOOL v7 = v4 == 0xE900000000000068) : (BOOL v7 = 0),
            v7
         || (sub_87070() & 1) != 0
         || (v5 == 0x6B63696C63 ? (BOOL v8 = v4 == 0xE500000000000000) : (BOOL v8 = 0),
             v8
          || (sub_87070() & 1) != 0
          || (v5 == 0x676F6C616964 ? (BOOL v9 = v4 == 0xE600000000000000) : (BOOL v9 = 0),
              v9
           || (sub_87070() & 1) != 0
           || (v5 == 0x44646E4167617264 ? (BOOL v10 = v4 == 0xEB00000000706F72) : (BOOL v10 = 0),
               v10
            || (sub_87070() & 1) != 0
            || v5 == 0x7265746E65 && v4 == 0xE500000000000000
            || (sub_87070() & 1) != 0
            || v5 == 1953069157 && v4 == 0xE400000000000000
            || (sub_87070() & 1) != 0
            || v5 == 0x6973736572706D69 && v4 == 0xEB00000000736E6FLL
            || (sub_87070() & 1) != 0
            || v5 == 0x616964656DLL && v4 == 0xE500000000000000
            || (sub_87070() & 1) != 0
            || v5 == 1701273968 && v4 == 0xE400000000000000
            || (sub_87070() & 1) != 0
            || v5 == 0x646E655265676170 && v4 == 0xEA00000000007265
            || (sub_87070() & 1) != 0
            || v5 == 0x686372616573 && v4 == 0xE600000000000000)))))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_87070();
        swift_bridgeObjectRelease();
      }
    }
  }
  id v11 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView);
  NSString v12 = sub_86830();
  swift_bridgeObjectRelease();
  id v13 = [self systemImageNamed:v12];

  [v11 setImage:v13];
  if (*(void *)(v1 + v2))
  {
    swift_retain();
    sub_6BAD8();
    swift_release();
    id v14 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel);
    NSString v15 = sub_86830();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel);
    NSString v15 = sub_86830();
  }
  [v14 setText:v15];

  if (*(void *)(v1 + v2) && (swift_retain(), v16 = sub_6BBF0(), double v18 = v17, swift_release(), v18))
  {
    id v19 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel);
    v27._uint64_t countAndFlagsBits = v16;
    v27._object = v18;
    sub_86930(v27);
    swift_bridgeObjectRelease();
    NSString v20 = sub_86830();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v19 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel);
    NSString v20 = sub_86830();
  }
  [v19 setText:v20];

  if (*(void *)(v1 + v2) && (swift_retain(), v21 = sub_6BC08(), id v23 = v22, swift_release(), v23))
  {
    id v24 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel);
    v28._uint64_t countAndFlagsBits = v21;
    v28._object = v23;
    sub_86930(v28);
    swift_bridgeObjectRelease();
    id v25 = sub_86830();
    swift_bridgeObjectRelease();
    [v24 setText:v25];
  }
  else
  {
    id v24 = *(id *)(v1 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel);
    id v25 = sub_86830();
    [v24 setText:v25];
  }
}

id sub_7F330()
{
  return sub_80524(type metadata accessor for FigaroSummaryCell);
}

id FigaroSummaryViewController.init()()
{
  uint64_t v1 = qword_CC548;
  uint64_t v2 = v0;
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)(qword_CD850 + OBJC_IVAR___JSAMetricsController_experienceEvents);
  swift_beginAccess();
  *(void *)&v2[OBJC_IVAR___JSAFigaroSummaryViewController_experienceEvents] = *v3;
  swift_bridgeObjectRetain();
  *(void *)&v2[OBJC_IVAR___JSAFigaroSummaryViewController_performanceEvents] = sub_70810();
  sub_2D920(&qword_CCA60);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_A1F70;
  *(void *)(v4 + 32) = 0x6E65697265707845;
  *(void *)(v4 + 40) = 0xEA00000000006563;
  *(void *)(v4 + 88) = &type metadata for String;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = 0x616D726F66726550;
  *(void *)(v4 + 72) = 0xEB0000000065636ELL;
  id v5 = objc_allocWithZone((Class)UISegmentedControl);
  swift_bridgeObjectRetain();
  Class isa = sub_86A10().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithItems:isa];

  *(void *)&v2[OBJC_IVAR___JSAFigaroSummaryViewController_segmentedControl] = v7;
  id v8 = [objc_allocWithZone((Class)UIToolbar) init];
  *(void *)&v2[OBJC_IVAR___JSAFigaroSummaryViewController_toolbar] = v8;

  v10.receiver = v2;
  v10.Class super_class = (Class)type metadata accessor for FigaroSummaryViewController();
  return [super initWithStyle:0];
}

void sub_7F614()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for FigaroSummaryViewController();
  v43.receiver = v0;
  v43.Class super_class = v2;
  [super viewDidLoad];
  id v3 = [v0 tableView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = v3;
  [v3 setAllowsSelectionDuringEditing:0];

  id v5 = [v1 tableView];
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  BOOL v6 = v5;
  [v5 setAllowsMultipleSelectionDuringEditing:1];

  id v7 = [v1 tableView];
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v8 = v7;
  [v7 setRowHeight:95.0];

  id v9 = [v1 navigationItem];
  NSString v10 = sub_86830();
  [v9 setTitle:v10];

  id v11 = [v1 navigationItem];
  sub_2D920(&qword_CDA98);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_A2920;
  id v42 = v2;
  v41[0] = v1;
  id v13 = v1;
  NSString v14 = sub_86830();
  if (v2)
  {
    NSString v15 = sub_494DC(v41, (uint64_t)v2);
    uint64_t v16 = *((void *)v2 - 1);
    __chkstk_darwin(v15);
    double v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v18);
    uint64_t v19 = sub_87060();
    (*(void (**)(char *, objc_class *))(v16 + 8))(v18, v2);
    sub_3ED88((uint64_t)v41);
  }
  else
  {
    uint64_t v19 = 0;
  }
  NSString v20 = &swift_arrayDestroy_ptr;
  id v21 = objc_allocWithZone((Class)UIBarButtonItem);
  id v22 = &selRef_viewDidLoad;
  id v23 = [v21 initWithTitle:v14 style:0 target:v19 action:@"infoTapped:" v41[0]];

  swift_unknownObjectRelease();
  *(void *)(v12 + 32) = v23;
  id v42 = v2;
  v41[0] = v13;
  id v24 = (char *)v13;
  NSString v25 = sub_86830();
  if (v2)
  {
    id v26 = sub_494DC(v41, (uint64_t)v2);
    uint64_t v27 = *((void *)v2 - 1);
    __chkstk_darwin(v26);
    unint64_t v29 = (char *)v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v27 + 16))(v29);
    uint64_t v30 = sub_87060();
    (*(void (**)(char *, objc_class *))(v27 + 8))(v29, v2);
    NSString v20 = &swift_arrayDestroy_ptr;
    id v22 = &selRef_viewDidLoad;
    sub_3ED88((uint64_t)v41);
  }
  else
  {
    uint64_t v30 = 0;
  }
  id v31 = [objc_allocWithZone((Class)v20[313]) v22[113] v25 0 v30 "trashTapped:"];

  swift_unknownObjectRelease();
  *(void *)(v12 + 40) = v31;
  v41[0] = v12;
  sub_86A50();
  sub_805EC();
  Class isa = sub_86A10().super.isa;
  swift_bridgeObjectRelease();
  [v11 setRightBarButtonItems:isa];

  double v33 = *(void **)&v24[OBJC_IVAR___JSAFigaroSummaryViewController_segmentedControl];
  [v33 setSelectedSegmentIndex:0];
  [v33 addTarget:v24 action:"valueChanged:" forControlEvents:4096];
  double v34 = *(void **)&v24[OBJC_IVAR___JSAFigaroSummaryViewController_toolbar];
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_A23F0;
  *(void *)(v35 + 32) = [objc_allocWithZone((Class)v20[313]) initWithCustomView:v33];
  v41[0] = v35;
  sub_86A50();
  Class v36 = sub_86A10().super.isa;
  swift_bridgeObjectRelease();
  [v34 setItems:v36];

  [v34 sizeToFit];
  id v37 = [v24 tableView];
  if (v37)
  {
    id v38 = v37;
    type metadata accessor for FigaroSummaryCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v40 = sub_86830();
    [v38 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v40];

    return;
  }
LABEL_15:
  __break(1u);
}

unint64_t sub_7FE54(void *a1)
{
  NSString v3 = sub_86830();
  Class isa = sub_85FD0().super.isa;
  id v5 = [a1 dequeueReusableCellWithIdentifier:v3 forIndexPath:isa];

  type metadata accessor for FigaroSummaryCell();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return (unint64_t)v5;
  }
  uint64_t v7 = v6;
  id v8 = *(void **)(v1 + OBJC_IVAR___JSAFigaroSummaryViewController_segmentedControl);
  id v9 = v5;
  id v10 = [v8 selectedSegmentIndex];
  id v11 = &OBJC_IVAR___JSAFigaroSummaryViewController_experienceEvents;
  if (v10) {
    id v11 = &OBJC_IVAR___JSAFigaroSummaryViewController_performanceEvents;
  }
  uint64_t v12 = *(void *)(v1 + *v11);
  swift_bridgeObjectRetain();
  unint64_t result = sub_85FF0();
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = sub_86ED0();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8)))
  {
    uint64_t v14 = *(void *)(v12 + 8 * result + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    *(void *)(v7 + OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_figaroEvent) = v14;
    swift_retain();
    swift_release();
    sub_7EA8C();

    swift_release();
    return v7;
  }
  __break(1u);
  return result;
}

void sub_800E4(void *a1)
{
  if ([a1 isEditing]) {
    return;
  }
  Class isa = sub_85FD0().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  id v4 = [*(id *)&v1[OBJC_IVAR___JSAFigaroSummaryViewController_segmentedControl] selectedSegmentIndex];
  id v5 = &OBJC_IVAR___JSAFigaroSummaryViewController_experienceEvents;
  if (v4) {
    id v5 = &OBJC_IVAR___JSAFigaroSummaryViewController_performanceEvents;
  }
  uint64_t v6 = *(void *)&v1[*v5];
  swift_bridgeObjectRetain();
  id v7 = [v1 navigationController];
  if (v7)
  {
    id v8 = v7;
    unint64_t v9 = sub_85FF0();
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
      {
        uint64_t v10 = *(void *)(v6 + 8 * v9 + 32);
        swift_retain();
LABEL_9:
        swift_bridgeObjectRelease();
        id v11 = objc_allocWithZone((Class)type metadata accessor for FigaroEventViewController());
        id v12 = sub_68934(v10);
        swift_release();
        [v8 pushViewController:v12 animated:1];

        return;
      }
      __break(1u);
      return;
    }
    uint64_t v10 = sub_86ED0();
    goto LABEL_9;
  }

  swift_bridgeObjectRelease();
}

id FigaroSummaryViewController.__allocating_init(style:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);

  return [v3 initWithStyle:a1];
}

void FigaroSummaryViewController.init(style:)()
{
}

id FigaroSummaryViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    NSString v6 = sub_86830();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

void FigaroSummaryViewController.init(nibName:bundle:)()
{
}

id FigaroSummaryViewController.__deallocating_deinit()
{
  return sub_80524(type metadata accessor for FigaroSummaryViewController);
}

id sub_80524(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.Class super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FigaroSummaryViewController()
{
  return self;
}

unint64_t sub_805EC()
{
  unint64_t result = qword_CDF50;
  if (!qword_CDF50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_CDF50);
  }
  return result;
}

uint64_t type metadata accessor for FigaroSummaryCell()
{
  return self;
}

char *sub_80650(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_figaroEvent] = 0;
  uint64_t v4 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView;
  id v5 = objc_allocWithZone((Class)UIImageView);
  NSString v6 = v2;
  *(void *)&v2[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel;
  *(void *)&v6[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel;
  *(void *)&v6[v9] = [objc_allocWithZone((Class)UILabel) init];

  if (a2)
  {
    NSString v10 = sub_86830();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v36.receiver = v6;
  v36.Class super_class = (Class)type metadata accessor for FigaroSummaryCell();
  id v11 = [super initWithStyle:0 reuseIdentifier:v10];

  uint64_t v12 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView;
  id v13 = *(void **)&v11[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView];
  uint64_t v14 = v11;
  [v13 setContentMode:1];
  NSString v15 = *(void **)&v11[v12];
  uint64_t v16 = self;
  id v17 = v15;
  id v18 = [v16 labelColor];
  [v17 setTintColor:v18];

  uint64_t v19 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel;
  NSString v20 = *(void **)&v14[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel];
  id v21 = self;
  id v22 = v20;
  id v23 = [v21 boldSystemFontOfSize:20.0];
  [v22 setFont:v23];

  uint64_t v24 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel;
  id v25 = *(id *)&v14[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel];
  id v26 = [v21 systemFontOfSize:13.0];
  [v25 setFont:v26];

  uint64_t v27 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel;
  id v28 = *(id *)&v14[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel];
  id v29 = [v21 systemFontOfSize:13.0];
  [v28 setFont:v29];

  *(void *)&v14[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_figaroEvent] = 0;
  swift_release();
  id v30 = [v14 contentView];
  [v30 addSubview:*(void *)&v11[v12]];

  id v31 = [v14 contentView];
  [v31 addSubview:*(void *)&v14[v19]];

  id v32 = [v14 contentView];
  [v32 addSubview:*(void *)&v14[v24]];

  id v33 = [v14 contentView];
  id v34 = *(id *)&v14[v27];
  [v33 addSubview:v34];

  return v14;
}

void sub_809C0()
{
  *(void *)&v0[OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_figaroEvent] = 0;
  uint64_t v1 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_iconImageView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_eventNameLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageTypeLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC5JSApp17FigaroSummaryCell_pageIdLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];

  sub_86F70();
  __break(1u);
}

void sub_80AB0()
{
  NSString v1 = sub_86830();
  NSString v2 = sub_86830();
  id v5 = [self alertControllerWithTitle:v1 message:v2 preferredStyle:1];

  NSString v3 = sub_86830();
  id v4 = [self actionWithTitle:v3 style:0 handler:0];

  [v5 addAction:v4];
  [v0 present:v5 :1];
}

void sub_80BE4()
{
  if ([*(id *)&v0[OBJC_IVAR___JSAFigaroSummaryViewController_segmentedControl] selectedSegmentIndex])
  {
    if (qword_CC548 != -1) {
      swift_once();
    }
    NSString v1 = (void *)(qword_CD850 + OBJC_IVAR___JSAMetricsController__performanceEvents);
    swift_beginAccess();
    NSString v2 = &OBJC_IVAR___JSAFigaroSummaryViewController_performanceEvents;
  }
  else
  {
    if (qword_CC548 != -1) {
      swift_once();
    }
    NSString v1 = (void *)(qword_CD850 + OBJC_IVAR___JSAMetricsController_experienceEvents);
    swift_beginAccess();
    NSString v2 = &OBJC_IVAR___JSAFigaroSummaryViewController_experienceEvents;
  }
  void *v1 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(void *)&v0[*v2] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v3 = [v0 tableView];
  if (v3)
  {
    id v4 = v3;
    [v3 reloadData];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_80D40()
{
  if ([*(id *)(v0 + OBJC_IVAR___JSAFigaroSummaryViewController_segmentedControl) selectedSegmentIndex]) {
    uint64_t v1 = OBJC_IVAR___JSAFigaroSummaryViewController_performanceEvents;
  }
  else {
    uint64_t v1 = OBJC_IVAR___JSAFigaroSummaryViewController_experienceEvents;
  }
  unint64_t v2 = *(void *)(v0 + v1);
  if (!(v2 >> 62)) {
    return *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_86F80();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t method lookup function for FigaroSummaryViewController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FigaroSummaryViewController);
}

uint64_t type metadata accessor for BundleFinder()
{
  return self;
}

Swift::String_optional __swiftcall NSFileManager.pathForCacheDirectory(with:)(Swift::String with)
{
  unint64_t v2 = v1;
  object = with._object;
  uint64_t countAndFlagsBits = (void *)with._countAndFlagsBits;
  uint64_t v5 = sub_85EB0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_CC4B8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant);
  if (v9 == 2)
  {
    uint64_t v12 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
    id v13 = (void *)sub_86A30();

    if (!v13[2])
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    uint64_t v10 = v13[4];
    unint64_t v11 = v13[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0xD000000000000025;
    if (v9 == 1) {
      goto LABEL_12;
    }
    if (v9)
    {
      v32[5] = *(id *)(qword_CD290 + OBJC_IVAR___JSAProcessEnvironment__variant);
      uint64_t v26 = sub_87090();
      __break(1u);
      goto LABEL_24;
    }
    if (qword_CC4D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (byte_CD5A0) {
      goto LABEL_12;
    }
    if (qword_CC4E0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (byte_CD5A1)
    {
LABEL_12:
      unint64_t v11 = 0x800000000009DF10;
    }
    else
    {
      id v14 = [self books];
      id v15 = [v14 containerURL];

      sub_85E60();
      uint64_t v10 = sub_85E70();
      unint64_t v11 = v16;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  v32[0] = countAndFlagsBits;
  v32[1] = object;
  uint64_t v30 = v10;
  unint64_t v31 = v11;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_869C0();
  unint64_t v31 = v17;
  sub_86920();
  swift_bridgeObjectRelease();
  uint64_t v19 = v30;
  id v18 = (void *)v31;
  LOBYTE(v30) = 0;
  NSString v20 = sub_86830();
  unsigned __int8 v21 = [v2 fileExistsAtPath:v20 isDirectory:&v30];

  if ((v21 & 1) == 0)
  {
    NSString v22 = sub_86830();
    v32[0] = 0;
    unsigned int v23 = [v2 createDirectoryAtPath:v22 withIntermediateDirectories:1 attributes:0 error:v32];

    if (v23)
    {
      id v24 = v32[0];
      goto LABEL_22;
    }
    id v25 = v32[0];
    swift_bridgeObjectRelease();
    sub_85DD0();

    swift_willThrow();
    swift_errorRelease();
LABEL_21:
    uint64_t v19 = 0;
    id v18 = 0;
  }
LABEL_22:
  uint64_t v26 = v19;
  uint64_t v27 = v18;
LABEL_24:
  result.value._object = v27;
  result.value._uint64_t countAndFlagsBits = v26;
  return result;
}

id sub_812D4(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC5JSApp17WebViewController_url];
  uint64_t v6 = sub_85EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  id v8 = [self defaultBag];
  id v9 = [self sharedProvider];
  id v10 = [v9 activeStoreAccount];

  v18.receiver = v2;
  v18.Class super_class = ObjectType;
  id v11 = [super initWithBag:v8 account:v10 clientInfo:0];

  id v12 = v11;
  [v12 setDelegate:v12];
  id v13 = v12;
  sub_85E40(v14);
  unint64_t v16 = v15;

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v13;
}

uint64_t sub_8159C()
{
  return type metadata accessor for WebViewController();
}

uint64_t type metadata accessor for WebViewController()
{
  uint64_t result = qword_CE098;
  if (!qword_CE098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_815F0()
{
  uint64_t result = sub_85EB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_817FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_85DC0();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_81A0C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_81A44(uint64_t a1, uint64_t a2)
{
  sub_817FC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_81A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_81A70()
{
  return swift_release();
}

uint64_t sub_81A98@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  id v3 = (void *)a1[1];
  v4._rawValue = &off_B37B0;
  v7._object = v3;
  Swift::Int v5 = sub_86FE0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_81AEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_841A8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_81B14()
{
  return sub_869F0();
}

unint64_t FigaroEventBuilding.build()(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  Swift::String v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  id v9 = &v31[-v8];
  sub_85CD0();
  swift_allocObject();
  sub_85CC0();
  uint64_t v22 = sub_85CB0();
  unint64_t v24 = v23;
  swift_release();
  id v25 = self;
  Class isa = sub_85EE0().super.isa;
  v35[0] = 0;
  id v27 = [v25 JSONObjectWithData:isa options:4 error:v35];

  id v28 = v35[0];
  if (v27)
  {
    sub_86DC0();
    swift_unknownObjectRelease();
    sub_3F66C((uint64_t)v36, (uint64_t)v35);
    sub_2D920(&qword_CE110);
    if (swift_dynamicCast())
    {
      sub_43AB8(v22, v24);
      unint64_t v21 = v34;
    }
    else
    {
      unint64_t v21 = sub_4A424((uint64_t)_swiftEmptyArrayStorage);
      sub_43AB8(v22, v24);
    }
    sub_3ED88((uint64_t)v36);
  }
  else
  {
    uint64_t v29 = v28;
    sub_85DD0();

    swift_willThrow();
    sub_43AB8(v22, v24);
    id v10 = v7;
    if (qword_CC4F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_86230();
    sub_31DE4(v11, (uint64_t)qword_CD618);
    id v12 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
    v12(v9, v2, a1);
    swift_errorRetain();
    swift_errorRetain();
    id v13 = sub_86210();
    os_log_type_t v14 = sub_86C30();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v36[0] = v33;
      *(_DWORD *)uint64_t v16 = 136315394;
      int v32 = v15;
      v12(v10, (uint64_t)v9, a1);
      uint64_t v17 = sub_868A0();
      v35[0] = (id)sub_422E0(v17, v18, v36);
      sub_86D40();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, a1);
      *(_WORD *)(v16 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v19 = sub_870C0();
      v35[0] = (id)sub_422E0(v19, v20, v36);
      sub_86D40();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v13, (os_log_type_t)v32, "Unable to build %s due to error: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, a1);
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v21 = sub_4A424((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();
  }
  return v21;
}

JSApp::FigaroClickEvent::ActionContext_optional __swiftcall FigaroClickEvent.ActionContext.init(rawValue:)(Swift::String rawValue)
{
  return (JSApp::FigaroClickEvent::ActionContext_optional)sub_82644(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_B37E8, v1);
}

unint64_t FigaroClickEvent.ActionContext.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x736569726553;
      break;
    case 2:
      unint64_t result = 0x6553736569726553;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x68536E6F69746361;
      break;
  }
  return result;
}

uint64_t sub_820D4(unsigned __int8 *a1, char *a2)
{
  return sub_712F0(*a1, *a2);
}

Swift::Int sub_820E0()
{
  return sub_71698();
}

uint64_t sub_820E8()
{
  return sub_718D8();
}

Swift::Int sub_820F0()
{
  return sub_71BE4();
}

JSApp::FigaroClickEvent::ActionContext_optional sub_820F8(Swift::String *a1)
{
  return FigaroClickEvent.ActionContext.init(rawValue:)(*a1);
}

unint64_t sub_82104@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FigaroClickEvent.ActionContext.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_8212C()
{
  return sub_869F0();
}

JSApp::FigaroClickEvent::Location::Type_optional __swiftcall FigaroClickEvent.Location.Type.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  unint64_t v3 = v1;
  v4._rawValue = &off_B3868;
  v8._object = object;
  Swift::Int v5 = sub_86FE0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  char *v3 = v7;
  return result;
}

uint64_t FigaroClickEvent.Location.Type.rawValue.getter()
{
  if (*v0) {
    return 0x6D657449626174;
  }
  else {
    return 0x6E6F74747562;
  }
}

uint64_t sub_82218(char *a1, char *a2)
{
  return sub_71250(*a1, *a2);
}

Swift::Int sub_82224()
{
  return sub_71784();
}

uint64_t sub_8222C()
{
  return sub_71870();
}

Swift::Int sub_82234()
{
  return sub_71CCC();
}

JSApp::FigaroClickEvent::Location::Type_optional sub_8223C(Swift::String *a1)
{
  return FigaroClickEvent.Location.Type.init(rawValue:)(*a1);
}

uint64_t sub_82248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FigaroClickEvent.Location.Type.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_82270()
{
  return sub_869F0();
}

void __swiftcall FigaroClickEvent.Location.init(adamId:name:locationPosition:locationType:)(JSApp::FigaroClickEvent::Location *__return_ptr retstr, Swift::String_optional adamId, Swift::String_optional name, Swift::Int locationPosition, JSApp::FigaroClickEvent::Location::Type locationType)
{
  JSApp::FigaroClickEvent::Location::Type v5 = *(unsigned char *)locationType;
  retstr->adamId = adamId;
  retstr->name = name;
  retstr->locationPosition = locationPosition;
  retstr->locationType = v5;
}

unint64_t sub_822D8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    default:
      unint64_t result = 0x64496D616461;
      break;
  }
  return result;
}

unint64_t sub_8236C()
{
  return sub_822D8(*v0);
}

uint64_t sub_82374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_841BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_8239C()
{
  return 0;
}

void sub_823A8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_823B4(uint64_t a1)
{
  unint64_t v2 = sub_82D94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_823F0(uint64_t a1)
{
  unint64_t v2 = sub_82D94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FigaroClickEvent.Location.encode(to:)(void *a1)
{
  uint64_t v3 = sub_2D920(&qword_CE118);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v7;
  uint64_t v13 = *(void *)(v1 + 32);
  int v12 = *(unsigned __int8 *)(v1 + 40);
  sub_494DC(a1, a1[3]);
  sub_82D94();
  sub_87140();
  char v21 = 0;
  uint64_t v8 = v16;
  sub_86FF0();
  if (!v8)
  {
    char v9 = v12;
    char v20 = 1;
    sub_86FF0();
    char v19 = 2;
    sub_87010();
    char v18 = v9;
    char v17 = 3;
    sub_82DE8();
    sub_87020();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_82620(void *a1)
{
  return FigaroClickEvent.Location.encode(to:)(a1);
}

JSApp::FigaroClickEvent::TargetType_optional __swiftcall FigaroClickEvent.TargetType.init(rawValue:)(Swift::String rawValue)
{
  return (JSApp::FigaroClickEvent::TargetType_optional)sub_82644(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_B38B8, v1);
}

uint64_t sub_82644@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._uint64_t countAndFlagsBits = a1;
  v10._object = a2;
  unint64_t v7 = sub_86FE0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  char v9 = 4;
  if (v7 < 4) {
    char v9 = v7;
  }
  *a4 = v9;
  return result;
}

uint64_t FigaroClickEvent.TargetType.rawValue.getter()
{
  return *(void *)&aButton_2[8 * *v0];
}

uint64_t sub_826C0(char *a1, char *a2)
{
  return sub_71494(*a1, *a2);
}

Swift::Int sub_826CC()
{
  return sub_71804();
}

uint64_t sub_826D4()
{
  return sub_719B0();
}

Swift::Int sub_826DC()
{
  return sub_71B7C();
}

JSApp::FigaroClickEvent::TargetType_optional sub_826E4(Swift::String *a1)
{
  return FigaroClickEvent.TargetType.init(rawValue:)(*a1);
}

uint64_t sub_826F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FigaroClickEvent.TargetType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_82718()
{
  return sub_869F0();
}

void FigaroClickEvent.actionContext.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FigaroClickEvent.actionDetails.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FigaroClickEvent.actionType.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FigaroClickEvent.actionURLString.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FigaroClickEvent.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FigaroClickEvent.targetId.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void FigaroClickEvent.targetType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t sub_827FC(char a1)
{
  return *(void *)&aActioncoaction_0[8 * a1];
}

uint64_t sub_8281C(char *a1, char *a2)
{
  return sub_7151C(*a1, *a2);
}

Swift::Int sub_82828()
{
  return sub_71B14();
}

uint64_t sub_82834()
{
  return sub_71A04();
}

Swift::Int sub_8283C()
{
  return sub_71B14();
}

uint64_t sub_82844@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_84358(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_82874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_827FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_828A0()
{
  return sub_827FC(*v0);
}

uint64_t sub_828A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_84358(a1, a2);
  *a3 = result;
  return result;
}

void sub_828D0(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_828DC(uint64_t a1)
{
  unint64_t v2 = sub_82E3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_82918(uint64_t a1)
{
  unint64_t v2 = sub_82E3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 FigaroClickEvent.init(actionContext:actionDetails:actionType:actionURLString:locations:targetId:targetType:)@<Q0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, unsigned __int8 *a10)
{
  unsigned __int8 v10 = *a10;
  a9->n128_u8[0] = *a1;
  a9->n128_u64[1] = a2;
  __n128 result = *a3;
  a9[1] = *a3;
  a9[2].n128_u64[0] = a4;
  a9[2].n128_u64[1] = a5;
  a9[3].n128_u64[0] = a6;
  a9[3].n128_u64[1] = a7;
  a9[4].n128_u64[0] = a8;
  a9[4].n128_u8[8] = v10;
  return result;
}

uint64_t FigaroClickEvent.encode(to:)(void *a1)
{
  uint64_t v3 = sub_86580();
  uint64_t v31 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2D920(&qword_CE130);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *v1;
  uint64_t v11 = *((void *)v1 + 1);
  uint64_t v12 = *((void *)v1 + 3);
  uint64_t v29 = *((void *)v1 + 2);
  uint64_t v30 = v12;
  uint64_t v28 = *((void *)v1 + 4);
  uint64_t v13 = *((void *)v1 + 5);
  uint64_t v26 = v11;
  uint64_t v27 = v13;
  uint64_t v14 = *((void *)v1 + 6);
  v24[1] = *((void *)v1 + 7);
  uint64_t v25 = v14;
  v24[0] = *((void *)v1 + 8);
  int v35 = v1[72];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1;
  uint64_t v18 = v17;
  sub_494DC(v16, v15);
  sub_82E3C();
  sub_87140();
  LOBYTE(v33) = v10;
  char v36 = 0;
  sub_82E90();
  char v19 = v32;
  sub_87020();
  if (!v19)
  {
    int v32 = v5;
    uint64_t v20 = v31;
    LOBYTE(v33) = 2;
    sub_87000();
    LOBYTE(v33) = 3;
    sub_86FF0();
    uint64_t v21 = v26;
    LOBYTE(v33) = 4;
    sub_82EE4();
    sub_87020();
    uint64_t v33 = v25;
    char v36 = 5;
    sub_2D920(&qword_CE150);
    sub_82F38();
    sub_87020();
    LOBYTE(v33) = 6;
    sub_87000();
    LOBYTE(v33) = v35;
    char v36 = 7;
    sub_83000();
    sub_87020();
    uint64_t v34 = sub_2D920(&qword_CD840);
    uint64_t v33 = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = v32;
    sub_86570();
    LOBYTE(v33) = 1;
    sub_83054();
    sub_87020();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v3);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v18);
}

uint64_t sub_82D7C(void *a1)
{
  return FigaroClickEvent.encode(to:)(a1);
}

unint64_t sub_82D94()
{
  unint64_t result = qword_CE120;
  if (!qword_CE120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE120);
  }
  return result;
}

unint64_t sub_82DE8()
{
  unint64_t result = qword_CE128;
  if (!qword_CE128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE128);
  }
  return result;
}

unint64_t sub_82E3C()
{
  unint64_t result = qword_CE138;
  if (!qword_CE138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE138);
  }
  return result;
}

unint64_t sub_82E90()
{
  unint64_t result = qword_CE140;
  if (!qword_CE140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE140);
  }
  return result;
}

unint64_t sub_82EE4()
{
  unint64_t result = qword_CE148;
  if (!qword_CE148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE148);
  }
  return result;
}

unint64_t sub_82F38()
{
  unint64_t result = qword_CE158;
  if (!qword_CE158)
  {
    sub_2D964(&qword_CE150);
    sub_82FAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE158);
  }
  return result;
}

unint64_t sub_82FAC()
{
  unint64_t result = qword_CE160;
  if (!qword_CE160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE160);
  }
  return result;
}

unint64_t sub_83000()
{
  unint64_t result = qword_CE168;
  if (!qword_CE168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE168);
  }
  return result;
}

unint64_t sub_83054()
{
  unint64_t result = qword_CE170;
  if (!qword_CE170)
  {
    sub_86580();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE170);
  }
  return result;
}

unint64_t sub_830B0()
{
  unint64_t result = qword_CE178;
  if (!qword_CE178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE178);
  }
  return result;
}

unint64_t sub_83108()
{
  unint64_t result = qword_CE180;
  if (!qword_CE180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE180);
  }
  return result;
}

unint64_t sub_83160()
{
  unint64_t result = qword_CE188;
  if (!qword_CE188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE188);
  }
  return result;
}

unint64_t sub_831B4(uint64_t a1)
{
  unint64_t result = sub_831DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_831DC()
{
  unint64_t result = qword_CE190;
  if (!qword_CE190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE190);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FigaroActionType(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FigaroActionType()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for FigaroActionType(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FigaroActionType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for FigaroActionType(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FigaroActionType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FigaroActionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_83390(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_833A8(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FigaroActionType()
{
  return &type metadata for FigaroActionType;
}

uint64_t destroy for FigaroClickEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FigaroClickEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FigaroClickEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for FigaroClickEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FigaroClickEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FigaroClickEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FigaroClickEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FigaroClickEvent()
{
  return &type metadata for FigaroClickEvent;
}

ValueMetadata *type metadata accessor for FigaroClickEvent.ActionContext()
{
  return &type metadata for FigaroClickEvent.ActionContext;
}

uint64_t destroy for FigaroClickEvent.Location()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FigaroClickEvent.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FigaroClickEvent.Location(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for FigaroClickEvent.Location(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FigaroClickEvent.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FigaroClickEvent.Location(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FigaroClickEvent.Location(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FigaroClickEvent.Location()
{
  return &type metadata for FigaroClickEvent.Location;
}

uint64_t getEnumTagSinglePayload for FigaroClickEvent.Location.Type(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FigaroClickEvent.Location.Type(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x83A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_83ABC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FigaroClickEvent.Location.Type()
{
  return &type metadata for FigaroClickEvent.Location.Type;
}

ValueMetadata *type metadata accessor for FigaroClickEvent.TargetType()
{
  return &type metadata for FigaroClickEvent.TargetType;
}

uint64_t getEnumTagSinglePayload for FigaroEventType(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FigaroEventType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x83BD8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_83C00()
{
  return 0;
}

ValueMetadata *type metadata accessor for FigaroEventType()
{
  return &type metadata for FigaroEventType;
}

uint64_t getEnumTagSinglePayload for FigaroClickEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FigaroClickEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x83D74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FigaroClickEvent.CodingKeys()
{
  return &type metadata for FigaroClickEvent.CodingKeys;
}

uint64_t _s5JSApp16FigaroClickEventV13ActionContextOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s5JSApp16FigaroClickEventV13ActionContextOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x83F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FigaroClickEvent.Location.CodingKeys()
{
  return &type metadata for FigaroClickEvent.Location.CodingKeys;
}

unint64_t sub_83F44()
{
  unint64_t result = qword_CE198;
  if (!qword_CE198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE198);
  }
  return result;
}

unint64_t sub_83F9C()
{
  unint64_t result = qword_CE1A0;
  if (!qword_CE1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1A0);
  }
  return result;
}

unint64_t sub_83FF4()
{
  unint64_t result = qword_CE1A8;
  if (!qword_CE1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1A8);
  }
  return result;
}

unint64_t sub_8404C()
{
  unint64_t result = qword_CE1B0;
  if (!qword_CE1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1B0);
  }
  return result;
}

unint64_t sub_840A4()
{
  unint64_t result = qword_CE1B8;
  if (!qword_CE1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1B8);
  }
  return result;
}

unint64_t sub_840FC()
{
  unint64_t result = qword_CE1C0;
  if (!qword_CE1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1C0);
  }
  return result;
}

unint64_t sub_84154()
{
  unint64_t result = qword_CE1C8;
  if (!qword_CE1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1C8);
  }
  return result;
}

uint64_t sub_841A8()
{
  return 0x6B63696C63;
}

uint64_t sub_841BC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64496D616461 && a2 == 0xE600000000000000;
  if (v3 || (sub_87070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_87070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000000009F1F0 || (sub_87070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_87070();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_84358(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B3938;
  v6._object = a2;
  unint64_t v4 = sub_86FE0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

unint64_t sub_843A4()
{
  unint64_t result = qword_CE1D0;
  if (!qword_CE1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1D0);
  }
  return result;
}

unint64_t sub_843F8()
{
  unint64_t result = qword_CE1D8;
  if (!qword_CE1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1D8);
  }
  return result;
}

unint64_t sub_8444C()
{
  unint64_t result = qword_CE1E0;
  if (!qword_CE1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1E0);
  }
  return result;
}

unint64_t sub_844A0()
{
  unint64_t result = qword_CE1E8;
  if (!qword_CE1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_CE1E8);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_84528(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_0, a2, OS_LOG_TYPE_FAULT, "%@", (uint8_t *)&v2, 0xCu);
}

void sub_845A0(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Unable to invoke parental approval JS callback due to missing JSValue", v1, 2u);
}

void sub_845E4(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 context];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_fault_impl(&dword_0, a2, OS_LOG_TYPE_FAULT, "JS code error: Some native JS API that uses globalThis.App as the owner for JSManagedValue is called too early, before JS evaluation is complete. Context: %@", (uint8_t *)&v4, 0xCu);
}

void sub_8467C(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "JSAEnvironment too many recursive exceptions, bailing out", v1, 2u);
}

void sub_846C0(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "JSAEnvironment exception: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_84738(uint64_t a1, NSObject *a2)
{
  int v2 = 136446466;
  uint64_t v3 = "-[JSAEnvironment loadScript:name:version:isBundled:completion:]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "JSAEnvironment %{public}s Loading script caused an exception: %@", (uint8_t *)&v2, 0x16u);
}

void sub_847C4(os_log_t log)
{
  int v1 = 136446210;
  int v2 = "-[JSAEnvironment loadScript:name:version:isBundled:completion:]_block_invoke";
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "JSAEnvironment %{public}s unable to encode the string using ASCII encoding, something is wrong with javascript app", (uint8_t *)&v1, 0xCu);
}

void sub_84848(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "JSAEnvironment failed to register objects due to invalid nativeJSObject", v1, 2u);
}

void sub_8488C(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[JSAMetricsAppLaunchEvent metricsDictionary]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "%s: %@", (uint8_t *)&v2, 0x16u);
}

void sub_84918(int a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[JSAMetricsAppLaunchEvent metricsDictionary]_block_invoke";
  __int16 v4 = 1026;
  int v5 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "%s: Could not read processStartTime, reason: %{public}d", (uint8_t *)&v2, 0x12u);
}

void sub_849A4(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Only string is allowed for request header or URL param values. Dropping this value: %@.", (uint8_t *)&v2, 0xCu);
}

void sub_84A1C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Only non-empty string is allowed for request header or URL param keys. Dropping this key: %@.", (uint8_t *)&v2, 0xCu);
}

void sub_84A94(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "_managedCallback should be released already", v1, 2u);
}

void sub_84AD8(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "[JSALocalStorage] Failed to create dedicated app group user defaults", v1, 2u);
}

void sub_84B1C()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "[JSAFileStorage] Failed to unarchive data with error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_84B84()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "[JSAFileStorage] Failed to write data with error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_84BEC()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "[JSAFileStorage] Failed to archive data with error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_84C54()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "[JSAFileStorage] Failed to write file with error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_84CBC()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "[JSAFileStorage] Failed to create enclosing directory with error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_84D24(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_84D9C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_84E14(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_84E80()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "The following key is not in the bag: %{public}@", v2, v3, v4, v5, v6);
}

void sub_84EE8()
{
  sub_10040();
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  _os_log_error_impl(&dword_0, v1, OS_LOG_TYPE_ERROR, "An error occurred while trying to get the bag key %{public}@, error=%{public}@", v2, 0x16u);
}

void sub_84F6C(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "Offline cache bag is nil.", v1, 2u);
}

void sub_84FB0()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "could not write cache to disk (error): %@", v2, v3, v4, v5, v6);
}

void sub_85018()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "could not create keyed archive: %@", v2, v3, v4, v5, v6);
}

void sub_85080(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[JSAThread enqueueBlockSync:]";
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "%s must not be run on JSAThread!", (uint8_t *)&v1, 0xCu);
}

void sub_85104()
{
  sub_10040();
  sub_10024(&dword_0, v0, v1, "Could not read cache dir from disk: %{public}@", v2, v3, v4, v5, v6);
}

void sub_8516C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Could not decode cached response.", v1, 2u);
}

void sub_851B0()
{
  sub_18580();
  sub_18598(&dword_0, v0, (uint64_t)v0, "Could not decode cached response. jsonError: %{public}@, unarchiveError: %{public}@", v1);
}

void sub_85220()
{
  sub_18580();
  sub_18598(&dword_0, v0, (uint64_t)v0, "Unable to serialize offline cache response for key: %{public}@, error: %{public}@", v1);
}

void sub_85290(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 absoluteString];
  sub_10040();
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "request not found in offline cache: %{public}@", v4, 0xCu);
}

void sub_85328(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 64);
  int v5 = 136446978;
  uint8_t v6 = "-[JSAStoreHTTPRequest _enqueue]_block_invoke_3";
  __int16 v7 = 2114;
  uint64_t v8 = v4;
  __int16 v9 = 2112;
  uint64_t v10 = v3;
  __int16 v11 = 2114;
  uint64_t v12 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "%{public}s %{public}@ request to %@ failed with error: %{public}@", (uint8_t *)&v5, 0x2Au);
}

void sub_853D4()
{
  v2[0] = 136446466;
  sub_185B0();
  sub_18598(&dword_0, v0, v1, "%{public}s failed to make an NSURL with string \"%{public}@\"", (uint8_t *)v2);
}

void sub_8544C()
{
  v2[0] = 136446466;
  sub_185B0();
  sub_18598(&dword_0, v0, v1, "%{public}s setting an invalid HTTP method \"%{public}@\"", (uint8_t *)v2);
}

void sub_854C4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_85548()
{
  sub_23778();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x20u);
}

void sub_855D8()
{
  sub_23778();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x1Cu);
}

void sub_85670()
{
  sub_23764();
  sub_23748(&dword_0, v0, v1, "%{public}s %p: Failed to take session assertion.", v2, v3, v4, v5, 2u);
}

void sub_856E4()
{
  sub_23764();
  sub_23748(&dword_0, v0, v1, "%{public}s %p: Failed to take session assertion.", v2, v3, v4, v5, 2u);
}

void sub_85758()
{
  sub_23764();
  sub_23748(&dword_0, v0, v1, "%{public}s %p: Failed to take session assertion.", v2, v3, v4, v5, 2u);
}

void sub_857CC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Incoming parameter is either UIViewController or NSDictionary. Makes no sense to create a BSUIFeedController with no options. viewControllerOrOptions=%@", (uint8_t *)&v2, 0xCu);
}

void sub_85844()
{
  sub_23778();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x16u);
}

void sub_858C8()
{
  sub_26AC8();
  sub_26AAC(&dword_0, v0, v1, "initializeEnvironmentWithDataSource called more than once", v2, v3, v4, v5, v6);
}

void sub_858FC()
{
  sub_26AC8();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "Failed to provision package for launch", v1, 2u);
}

void sub_8593C()
{
  sub_26AC8();
  sub_26AAC(&dword_0, v0, v1, "Unable to provision any JS, Books failed to launch!", v2, v3, v4, v5, v6);
}

void sub_85970(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_859E8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_85A60()
{
  sub_26AC8();
  sub_26AAC(&dword_0, v0, v1, "JSABridge: templateBundleRegistrar is not set", v2, v3, v4, v5, v6);
}

void sub_85A94(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_85B0C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Failed to set unhandled promise rejection handler: %@", (uint8_t *)&v2, 0xCu);
}

void sub_85B84(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Invalid type for unhandled promise rejection handler: %@", (uint8_t *)&v2, 0xCu);
}

void sub_85BFC(os_log_t log)
{
  int v1 = 136446210;
  int v2 = "-[JSAStore platform]";
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "%{public}s unable to get the platform correctly", (uint8_t *)&v1, 0xCu);
}

Class sub_85C80()
{
  return URLRequest._bridgeToObjectiveC()().super.isa;
}

uint64_t sub_85C90()
{
  return static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_85CA0()
{
  return type metadata accessor for URLRequest();
}

uint64_t sub_85CB0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_85CC0()
{
  return JSONEncoder.init()();
}

uint64_t sub_85CD0()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_85CE0()
{
  return static CharacterSet.urlQueryAllowed.getter();
}

uint64_t sub_85CF0()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

void sub_85D00(Swift::String charactersIn)
{
}

uint64_t sub_85D10()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_85D20()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_85D30()
{
  return type metadata accessor for Notification();
}

uint64_t sub_85D40()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_85D50()
{
  return URLQueryItem.name.getter();
}

uint64_t sub_85D60()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_85D70()
{
  return URLComponents.queryItems.getter();
}

uint64_t sub_85D80()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_85D90()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t sub_85DA0()
{
  return URLComponents.url.getter();
}

uint64_t sub_85DB0()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_85DC0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_85DD0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_85DE0()
{
  return URL.isFileURL.getter();
}

uint64_t sub_85DF0()
{
  return URL.description.getter();
}

uint64_t sub_85E00()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_85E10()
{
  return URL.absoluteString.getter();
}

uint64_t sub_85E20()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t sub_85E30()
{
  return static URL.temporaryDirectory.getter();
}

void sub_85E40(NSURL *retstr@<X8>)
{
}

void sub_85E50(Swift::String a1)
{
}

uint64_t sub_85E60()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_85E70()
{
  return URL.path.getter();
}

uint64_t sub_85E80()
{
  return URL.init(string:)();
}

uint64_t sub_85E90()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_85EA0()
{
  return URL.appending<A>(component:directoryHint:)();
}

uint64_t sub_85EB0()
{
  return type metadata accessor for URL();
}

uint64_t sub_85EC0()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_85ED0()
{
  return Data._copyContents(initializing:)();
}

NSData sub_85EE0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_85EF0()
{
  return Data.write(to:options:)();
}

uint64_t sub_85F00()
{
  return type metadata accessor for Data.Iterator();
}

NSDate sub_85F10()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_85F20()
{
  return type metadata accessor for Date();
}

uint64_t sub_85F30()
{
  return Locale.init(identifier:)();
}

uint64_t sub_85F40()
{
  return static Locale.preferredLanguages.getter();
}

uint64_t sub_85F50()
{
  return type metadata accessor for Locale();
}

NSCalendar sub_85F60()
{
  return Calendar._bridgeToObjectiveC()();
}

uint64_t sub_85F70()
{
  return Calendar.locale.setter();
}

uint64_t sub_85F80()
{
  return static Calendar.current.getter();
}

uint64_t sub_85F90()
{
  return type metadata accessor for Calendar();
}

NSTimeZone sub_85FA0()
{
  return TimeZone._bridgeToObjectiveC()();
}

uint64_t sub_85FB0()
{
  return static TimeZone.current.getter();
}

uint64_t sub_85FC0()
{
  return type metadata accessor for TimeZone();
}

NSIndexPath sub_85FD0()
{
  return IndexPath._bridgeToObjectiveC()();
}

uint64_t sub_85FE0()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_85FF0()
{
  return IndexPath.row.getter();
}

uint64_t sub_86000()
{
  return IndexPath.section.getter();
}

uint64_t sub_86010()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_86020()
{
  return Selector.init(_:)();
}

uint64_t sub_86040()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86050()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86060()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_86070()
{
  return UserDefault.wrappedValue.modify();
}

uint64_t sub_86080()
{
  return UserDefault.wrappedValue.getter();
}

uint64_t sub_86090()
{
  return UserDefault.wrappedValue.setter();
}

uint64_t sub_860A0()
{
  return UserDefault.init(_:defaults:defaultValue:)();
}

uint64_t sub_860B0()
{
  return static Capabilities.isInternalBuild.getter();
}

uint64_t sub_860C0()
{
  return type metadata accessor for BooksFeatureFlag();
}

uint64_t sub_860D0()
{
  return type metadata accessor for BooksUIKitFeatureFlag();
}

uint64_t sub_860E0()
{
  return type metadata accessor for StaticFeatureFlagsKey();
}

uint64_t sub_860F0()
{
  return dispatch thunk of DynamicFeatureFlagsKey.init(key:)();
}

uint64_t sub_86100()
{
  return static DynamicFeatureFlagsKey.domain.getter();
}

uint64_t sub_86110()
{
  return type metadata accessor for BooksAppleAccountFeatureFlag();
}

uint64_t sub_86130()
{
  return CampaignAttributor.init(appBag:)();
}

uint64_t sub_86140()
{
  return type metadata accessor for CampaignAttributor();
}

uint64_t sub_86150()
{
  return OSSignpostID.init(log:)();
}

uint64_t sub_86160()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_86170()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_86180()
{
  return OSSignposter.init(logHandle:)();
}

uint64_t sub_86190()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_861A0()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_861B0()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_861C0()
{
  return OSAllocatedUnfairLock.valueWithLock.getter();
}

uint64_t sub_861D0()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_861E0()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_861F0()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_86200()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_86210()
{
  return Logger.logObject.getter();
}

uint64_t sub_86220()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_86230()
{
  return type metadata accessor for Logger();
}

uint64_t sub_86240()
{
  return static _UIKitNumericRawRepresentable.+ infix(_:_:)();
}

uint64_t sub_86250()
{
  return static DispatchWorkItemFlags.enforceQoS.getter();
}

uint64_t sub_86260()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_86270()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_86280()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t sub_86290()
{
  return static DispatchQoS.utility.getter();
}

uint64_t sub_862A0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_862B0()
{
  return static DispatchTime.now()();
}

uint64_t sub_862C0()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_862D0()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t sub_862E0()
{
  return + infix(_:_:)();
}

uint64_t sub_862F0()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t sub_86300()
{
  return InMemoryJetPackLoader.init(signingPolicy:keyProvider:)();
}

uint64_t sub_86310()
{
  return static InMemoryJetPackLoader.sharedUnpackQueue.getter();
}

uint64_t sub_86320()
{
  return InMemoryJetPackLoader.bundle(from:on:)();
}

uint64_t sub_86330()
{
  return type metadata accessor for InMemoryJetPackLoader();
}

uint64_t sub_86340()
{
  return InMemoryJetPackResourceBundle.contentsOfDirectory(atPath:)();
}

uint64_t sub_86350()
{
  return InMemoryJetPackResourceBundle.data(withName:)();
}

uint64_t sub_86360()
{
  return InMemoryJetPackResourceBundle.fileData(atPath:)();
}

uint64_t sub_86370()
{
  return type metadata accessor for InMemoryJetPackResourceBundle();
}

uint64_t sub_86380()
{
  return ValidatedJetPackAssetLocations.URLLocation.url.getter();
}

uint64_t sub_86390()
{
  return type metadata accessor for ValidatedJetPackAssetLocations.URLLocation();
}

uint64_t sub_863A0()
{
  return ValidatedJetPackAssetLocations.URLLocation.init(_:sourcePolicy:requestConfiguration:)();
}

uint64_t sub_863C0()
{
  return type metadata accessor for ValidatedJetPackAssetLocations.BagKeyLocation();
}

uint64_t sub_863D0()
{
  return ValidatedJetPackAssetLocations.BagKeyLocation.init(_:bag:sourcePolicy:urlTransformer:requestConfiguration:)();
}

uint64_t sub_863F0()
{
  return ValidatedJetPackLoadingCoordinator.ValidatedJetPackResult.bundle.getter();
}

uint64_t sub_86400()
{
  return ValidatedJetPackLoadingCoordinator.init(session:assetLocation:bag:)();
}

uint64_t sub_86410()
{
  return type metadata accessor for ValidatedJetPackLoadingCoordinator();
}

uint64_t sub_86420()
{
  return JetPackAssetSession.Configuration.init(cache:)();
}

uint64_t sub_86430()
{
  return type metadata accessor for JetPackAssetSession.Configuration();
}

uint64_t sub_86440()
{
  return JetPackAssetSession.init(configuration:)();
}

uint64_t sub_86450()
{
  return type metadata accessor for JetPackAssetSession();
}

uint64_t sub_86460()
{
  return type metadata accessor for JetPackSigningPolicy();
}

uint64_t sub_86470()
{
  return JetPackAssetDiskCache.__allocating_init()();
}

uint64_t sub_86480()
{
  return type metadata accessor for JetPackAssetDiskCache();
}

uint64_t sub_86490()
{
  return JetPackResourceBundle.version.getter();
}

uint64_t sub_864A0()
{
  return JetPackFileStreamSource.init(path:)();
}

uint64_t sub_864B0()
{
  return type metadata accessor for JetPackFileStreamSource();
}

uint64_t sub_864C0()
{
  return JetPackManagedKeyProvider.init()();
}

uint64_t sub_864D0()
{
  return type metadata accessor for JetPackManagedKeyProvider();
}

uint64_t sub_864E0()
{
  return static JetPackAMSRemoteStreamSource.defaultURLEncoder(forContentsOf:using:from:)();
}

uint64_t sub_864F0()
{
  return type metadata accessor for JetPackAssetRequestSourcePolicy();
}

uint64_t sub_86500()
{
  return JetPackPath.init(components:)();
}

uint64_t sub_86510()
{
  return JetPackPath.string.getter();
}

uint64_t sub_86520()
{
  return type metadata accessor for JetPackPath();
}

uint64_t sub_86530()
{
  return JetPackPath.init(_:)();
}

uint64_t sub_86540()
{
  return JetPackAsset.streamSource.getter();
}

uint64_t sub_86550()
{
  return Dependency.init<A>(satisfying:with:)();
}

uint64_t sub_86560()
{
  return type metadata accessor for Dependency();
}

uint64_t sub_86570()
{
  return JSONObject.init(wrapping:)();
}

uint64_t sub_86580()
{
  return type metadata accessor for JSONObject();
}

uint64_t sub_865A0()
{
  return dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)();
}

uint64_t sub_865C0()
{
  return BagLanguageSource.init(bag:timeout:defaultLanguages:)();
}

uint64_t sub_865D0()
{
  return BagLanguageSource.locale(forLanguage:)();
}

uint64_t sub_865E0()
{
  return type metadata accessor for BagLanguageSource();
}

uint64_t sub_865F0()
{
  return LocalizerPreferences.preferredPluralCategory(forCount:in:)();
}

uint64_t sub_86600()
{
  return LocalizerDefaultValue.description.getter();
}

uint64_t sub_86610()
{
  return AppleServicesLocalizer.Configuration.init(dataSource:languageSource:objectGraph:)();
}

uint64_t sub_86620()
{
  return AppleServicesLocalizer.Configuration.withClientPreferences(_:)();
}

uint64_t sub_86630()
{
  return AppleServicesLocalizer.Configuration.withDefaultLookupStrategy(_:)();
}

uint64_t sub_86640()
{
  return AppleServicesLocalizer.Configuration.withNativeStringsDataSource(_:)();
}

uint64_t sub_86650()
{
  return type metadata accessor for AppleServicesLocalizer.Configuration();
}

uint64_t sub_86670()
{
  return type metadata accessor for AppleServicesLocalizer();
}

uint64_t sub_86680()
{
  return LocalizedStringsBundle.init(resourceBundle:indexPath:)();
}

uint64_t sub_86690()
{
  return type metadata accessor for LocalizedStringsBundle();
}

uint64_t sub_866A0()
{
  return type metadata accessor for LocalizerLookupStrategy();
}

uint64_t sub_866C0()
{
  return Bag.init(from:)();
}

uint64_t sub_866D0()
{
  return type metadata accessor for Bag();
}

uint64_t sub_866F0()
{
  return Promise.resolve(_:)();
}

uint64_t sub_86700()
{
  return Promise.__allocating_init()();
}

uint64_t sub_86710()
{
  return dispatch thunk of Localizer.relativeDate(_:using:)();
}

uint64_t sub_86720()
{
  return dispatch thunk of Localizer.formattedDate(format:date:inSentence:)();
}

uint64_t sub_86730()
{
  return dispatch thunk of Localizer.formattedDate(format:date:withContext:)();
}

uint64_t sub_86740()
{
  return dispatch thunk of Localizer.formattedCount(_:)();
}

uint64_t sub_86750()
{
  return dispatch thunk of Localizer.isLocalizedString(_:)();
}

uint64_t sub_86760()
{
  return dispatch thunk of Localizer.locale.getter();
}

uint64_t sub_86770()
{
  return dispatch thunk of Localizer.string(forKey:with:defaultValue:using:)();
}

uint64_t sub_86780()
{
  return dispatch thunk of Localizer.string(forKey:with:using:)();
}

uint64_t sub_86790()
{
  return dispatch thunk of Localizer.string(withCount:forKey:with:defaultValue:using:)();
}

uint64_t sub_867A0()
{
  return dispatch thunk of Localizer.string(withCount:forKey:with:using:)();
}

uint64_t sub_867B0()
{
  return dispatch thunk of Localizer.integer(for:in:)();
}

uint64_t sub_867C0()
{
  return dispatch thunk of Localizer.fileSize(forBytes:)();
}

uint64_t sub_867D0()
{
  return dispatch thunk of Localizer.jsExport.getter();
}

uint64_t sub_867E0()
{
  return dispatch thunk of Localizer.hasString(forKey:using:)();
}

NSDictionary sub_867F0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_86800()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_86810()
{
  return Dictionary.description.getter();
}

uint64_t sub_86820()
{
  return BidirectionalCollection<>.joined(separator:)();
}

NSString sub_86830()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_86840()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86850()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86860()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_86870()
{
  return String.init<A>(bytes:encoding:)();
}

uint64_t sub_86880()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_86890()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_868A0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_868B0()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_868C0()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_868D0(Swift::String pathComponent)
{
  return String.append(pathComponent:)(pathComponent)._countAndFlagsBits;
}

uint64_t sub_868F0()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_86900()
{
  return String.hash(into:)();
}

uint64_t sub_86910()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_86920()
{
  return String.append<A>(contentsOf:)();
}

void sub_86930(Swift::String a1)
{
}

uint64_t sub_86940()
{
  return String.Iterator.next()().value._countAndFlagsBits;
}

Swift::Int sub_86950()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_86960()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_86970()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_86990()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_869A0()
{
  return String.UTF16View.index(_:offsetBy:)();
}

BOOL sub_869B0(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

uint64_t sub_869C0()
{
  return String.init<A>(_:)();
}

uint64_t sub_869D0()
{
  return String.subscript.getter();
}

uint64_t sub_869E0()
{
  return RawRepresentable<>.isEnabled.getter();
}

uint64_t sub_869F0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_86A00()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_86A10()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_86A20()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86A30()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_86A40()
{
  return Array.description.getter();
}

uint64_t sub_86A50()
{
  return specialized Array._endMutation()();
}

uint64_t sub_86A60()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_86A70()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_86A80()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_86A90()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_86AA0()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_86AB0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_86AC0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_86AD0()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_86AE0()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_86AF0()
{
  return TaskPriority.init(rawValue:)();
}

uint64_t sub_86B00()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_86B10()
{
  return type metadata accessor for TaskPriority();
}

void sub_86B20()
{
}

uint64_t sub_86B70()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86B80()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86B90()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_86BB0()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_86BC0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_86BD0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_86BE0()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_86BF0()
{
  return Collection.isNotEmpty.getter();
}

uint64_t sub_86C00()
{
  return AMSMetrics.withRemoteInspection.getter();
}

uint64_t sub_86C10()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_86C20()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_86C30()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_86C40()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_86C50()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_86C60()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_86C70()
{
  return static OS_dispatch_queue.Attributes.initiallyInactive.getter();
}

uint64_t sub_86C80()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_86C90()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_86CA0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_86CB0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_86CC0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_86CD0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_86CE0()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_86CF0()
{
  return static os_signpost_type_t.begin.getter();
}

Swift::Int sub_86D00(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_86D10()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_86D20()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_86D30()
{
  return type metadata accessor for Optional();
}

uint64_t sub_86D40()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_86D50()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_86D60()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_86D70()
{
  return StringProtocol.capitalized.getter();
}

uint64_t sub_86D80()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_86D90()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_86DA0()
{
  return StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
}

uint64_t sub_86DB0()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_86DC0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_86DD0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_86DE0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_86DF0()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_86E00()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_86E10()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_86E20()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_86E30()
{
  return AnyHashable.description.getter();
}

Swift::Int sub_86E40(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_86E50()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_86E60()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_86E70()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_86E80()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_86E90()
{
  return static _SetStorage.convert(_:capacity:)();
}

void sub_86EA0(Swift::Int a1)
{
}

uint64_t sub_86EB0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_86EC0()
{
  return StaticString.description.getter();
}

uint64_t sub_86ED0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_86EE0()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_86EF0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_86F00()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_86F10()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_86F20()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_86F30()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_86F40()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_86F50()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_86F60()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_86F70()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_86F80()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_86F90()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_86FA0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_86FB0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_86FC0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_86FD0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_86FE0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_86FF0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_87000()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_87010()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_87020()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_87030(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_87040()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_87060()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_87070()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_87090()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_870A0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_870B0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_870C0()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_870F0()
{
  return Hasher.init(_seed:)();
}

void sub_87100(Swift::UInt a1)
{
}

void sub_87110(Swift::UInt32 a1)
{
}

void sub_87120(Swift::UInt64 a1)
{
}

Swift::Int sub_87130()
{
  return Hasher._finalize()();
}

uint64_t sub_87140()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t BUCrashBreakpoint()
{
  return _BUCrashBreakpoint();
}

uint64_t BUCrashFinalThrow()
{
  return _BUCrashFinalThrow();
}

uint64_t BUDynamicCast()
{
  return _BUDynamicCast();
}

uint64_t BUIsRunningTests()
{
  return _BUIsRunningTests();
}

uint64_t BUOnboardingBooksBundleID()
{
  return _BUOnboardingBooksBundleID();
}

uint64_t BUReportAssertionFailureWithMessage()
{
  return _BUReportAssertionFailureWithMessage();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFRelease(CFTypeRef cf)
{
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

void CFRunLoopRun(void)
{
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return _CFRunLoopSourceCreate(allocator, order, context);
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

JSValueRef JSEvaluateScript(JSContextRef ctx, JSStringRef script, JSObjectRef thisObject, JSStringRef sourceURL, int startingLineNumber, JSValueRef *exception)
{
  return _JSEvaluateScript(ctx, script, thisObject, sourceURL, startingLineNumber, exception);
}

void JSGarbageCollect(JSContextRef ctx)
{
}

uint64_t JSGlobalContextSetUnhandledRejectionCallback()
{
  return _JSGlobalContextSetUnhandledRejectionCallback();
}

uint64_t JSRemoteInspectorSetLogToSystemConsole()
{
  return _JSRemoteInspectorSetLogToSystemConsole();
}

JSStringRef JSStringCreateWithCFString(CFStringRef string)
{
  return _JSStringCreateWithCFString(string);
}

JSStringRef JSStringCreateWithUTF8CString(const char *string)
{
  return _JSStringCreateWithUTF8CString(string);
}

void JSStringRelease(JSStringRef string)
{
}

JSObjectRef JSValueToObject(JSContextRef ctx, JSValueRef value, JSValueRef *exception)
{
  return _JSValueToObject(ctx, value, exception);
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

uint64_t NSStringFromBagValueType()
{
  return _NSStringFromBagValueType();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return _SCNetworkReachabilityCreateWithAddress(allocator, address);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return _SCNetworkReachabilityGetFlags(target, flags);
}

Boolean SCNetworkReachabilityScheduleWithRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityScheduleWithRunLoop(target, runLoop, runLoopMode);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return _SCNetworkReachabilitySetCallback(target, callout, context);
}

Boolean SCNetworkReachabilityUnscheduleFromRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityUnscheduleFromRunLoop(target, runLoop, runLoopMode);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return _SecItemUpdate(query, attributesToUpdate);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _UIApplicationIsExtension()
{
  return __UIApplicationIsExtension();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return _dispatch_block_create_with_qos_class(flags, qos_class, relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_initially_inactive(dispatch_queue_attr_t attr)
{
  return _dispatch_queue_attr_make_initially_inactive(attr);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return _getpid();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_lock_lock_with_options()
{
  return _os_unfair_lock_lock_with_options();
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return _sysctl(a1, a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

id objc_msgSend_JSGlobalContextRef(void *a1, const char *a2, ...)
{
  return _[a1 JSGlobalContextRef];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return [a1 JSONObjectWithData:options:error:];
}

id objc_msgSend_JSValueRef(void *a1, const char *a2, ...)
{
  return _[a1 JSValueRef];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLForKey_(void *a1, const char *a2, ...)
{
  return [a1 URLForKey:];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__aq_loadPostLaunchCaches(void *a1, const char *a2, ...)
{
  return [_aq_loadPostLaunchCaches];
}

id objc_msgSend__aq_saveOfflineCache(void *a1, const char *a2, ...)
{
  return [a1 _aq_saveOfflineCache];
}

id objc_msgSend__beforeJSAppLaunchBlock(void *a1, const char *a2, ...)
{
  return _[a1 _beforeJSAppLaunchBlock];
}

id objc_msgSend__colorWithHexValue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorWithHexValue:alpha:");
}

id objc_msgSend__convertOrCreateViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertOrCreateViewController:completion:");
}

id objc_msgSend__error(void *a1, const char *a2, ...)
{
  return _[a1 _error];
}

id objc_msgSend__errorForAirplaneMode(void *a1, const char *a2, ...)
{
  return _[a1 _errorForAirplaneMode];
}

id objc_msgSend__exceptionHandlerReentrantCountPtr(void *a1, const char *a2, ...)
{
  return _[a1 _exceptionHandlerReentrantCountPtr];
}

id objc_msgSend__exposeObjectsAndClassesToContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exposeObjectsAndClassesToContext:");
}

id objc_msgSend__httpBody(void *a1, const char *a2, ...)
{
  return _[a1 _httpBody];
}

id objc_msgSend__initWithSuiteName_container_(void *a1, const char *a2, ...)
{
  return [a1 _initWithSuiteName:container:];
}

id objc_msgSend__loadCacheFromCandidatePaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadCacheFromCandidatePaths:");
}

id objc_msgSend__performPendingBlocks(void *a1, const char *a2, ...)
{
  return _[a1 _performPendingBlocks];
}

id objc_msgSend__saveOfflineCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveOfflineCache:");
}

id objc_msgSend__sceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _sceneIdentifier];
}

id objc_msgSend__setPreferredTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPreferredTransition:");
}

id objc_msgSend__updateRestrictionsAndNotifyIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateRestrictionsAndNotifyIfNeeded];
}

id objc_msgSend_abandoned(void *a1, const char *a2, ...)
{
  return _[a1 abandoned];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_access(void *a1, const char *a2, ...)
{
  return _[a1 access];
}

id objc_msgSend_accessQueue(void *a1, const char *a2, ...)
{
  return _[a1 accessQueue];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_accountDidAttemptSignOut_(void *a1, const char *a2, ...)
{
  return [a1 accountDidAttemptSignOut:];
}

id objc_msgSend_accountHandlers(void *a1, const char *a2, ...)
{
  return _[a1 accountHandlers];
}

id objc_msgSend_accountWillAttemptSignOut_(void *a1, const char *a2, ...)
{
  return [a1 accountWillAttemptSignOut:];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _[a1 activationState];
}

id objc_msgSend_activeStoreAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeStoreAccount];
}

id objc_msgSend_activityItem(void *a1, const char *a2, ...)
{
  return _[a1 activityItem];
}

id objc_msgSend_addBagKey_valueType_defaultValue_(void *a1, const char *a2, ...)
{
  return [a1 addBagKey:valueType:defaultValue:];
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addEntriesFromDictionary:];
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return [a1 addFinishBlock:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_accountTypes_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:accountTypes:];
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPath:options:context:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return [a1 addTimer:forMode:];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return [a1 allocWithZone:];
}

id objc_msgSend_ams_DSID(void *a1, const char *a2, ...)
{
  return [a1 ams_DSID];
}

id objc_msgSend_ams_addCookies_(void *a1, const char *a2, ...)
{
  return [a1 ams_addCookies:];
}

id objc_msgSend_ams_cookies(void *a1, const char *a2, ...)
{
  return [a1 ams_cookies];
}

id objc_msgSend_ams_filterUsingTest_(void *a1, const char *a2, ...)
{
  return [a1 ams_filterUsingTest:];
}

id objc_msgSend_ams_firstName(void *a1, const char *a2, ...)
{
  return [a1 ams_firstName];
}

id objc_msgSend_ams_fullName(void *a1, const char *a2, ...)
{
  return [a1 ams_fullName];
}

id objc_msgSend_ams_lastName(void *a1, const char *a2, ...)
{
  return [a1 ams_lastName];
}

id objc_msgSend_ams_removeCookiesMatchingProperties_error_(void *a1, const char *a2, ...)
{
  return [a1 ams_removeCookiesMatchingProperties:error:];
}

id objc_msgSend_ams_saveAccount_verifyCredentials_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_saveAccount:verifyCredentials:");
}

id objc_msgSend_analyticsTrackerForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 analyticsTrackerForFeedController:];
}

id objc_msgSend_appForOwnership(void *a1, const char *a2, ...)
{
  return _[a1 appForOwnership];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return [a1 archivedDataWithRootObject:requiringSecureCoding:error:];
}

id objc_msgSend_arguments(void *a1, const char *a2, ...)
{
  return _[a1 arguments];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayForKey_(void *a1, const char *a2, ...)
{
  return [a1 arrayForKey:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_bag(void *a1, const char *a2, ...)
{
  return _[a1 bag];
}

id objc_msgSend_bagChangeHandler(void *a1, const char *a2, ...)
{
  return _[a1 bagChangeHandler];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedStringWithOptions:];
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return _[a1 block];
}

id objc_msgSend_books(void *a1, const char *a2, ...)
{
  return _[a1 books];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bridgeCompletion(void *a1, const char *a2, ...)
{
  return _[a1 bridgeCompletion];
}

id objc_msgSend_bu_errorWithDomain_code_alertTitle_alertMessage_(void *a1, const char *a2, ...)
{
  return [a1 bu_errorWithDomain:code:alertTitle:alertMessage:];
}

id objc_msgSend_bu_errorWithDomain_code_description_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 bu_errorWithDomain:code:description:underlyingError:];
}

id objc_msgSend_bu_groupUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 bu_groupUserDefaults];
}

id objc_msgSend_bu_gzipDeflate(void *a1, const char *a2, ...)
{
  return [a1 bu_gzipDeflate];
}

id objc_msgSend_bu_gzipInflate(void *a1, const char *a2, ...)
{
  return [a1 bu_gzipInflate];
}

id objc_msgSend_bu_objectsMatching_(void *a1, const char *a2, ...)
{
  return [a1 bu_objectsMatching:];
}

id objc_msgSend_bu_sharedAccountStore(void *a1, const char *a2, ...)
{
  return [a1 bu_sharedAccountStore];
}

id objc_msgSend_bu_signOut(void *a1, const char *a2, ...)
{
  return [a1 bu_signOut];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return _[a1 bundlePath];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cacheDirCandidatesForHTTPPostLaunch(void *a1, const char *a2, ...)
{
  return _[a1 cacheDirCandidatesForHTTPPostLaunch];
}

id objc_msgSend_cacheFileCandidatesForBag(void *a1, const char *a2, ...)
{
  return _[a1 cacheFileCandidatesForBag];
}

id objc_msgSend_cacheFileCandidatesForHTTPPreLaunch(void *a1, const char *a2, ...)
{
  return _[a1 cacheFileCandidatesForHTTPPreLaunch];
}

id objc_msgSend_cachePath(void *a1, const char *a2, ...)
{
  return _[a1 cachePath];
}

id objc_msgSend_calendar(void *a1, const char *a2, ...)
{
  return _[a1 calendar];
}

id objc_msgSend_calendarIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 calendarIdentifier];
}

id objc_msgSend_callWithArguments_(void *a1, const char *a2, ...)
{
  return [a1 callWithArguments:];
}

id objc_msgSend_callback(void *a1, const char *a2, ...)
{
  return _[a1 callback];
}

id objc_msgSend_callbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 callbackQueue];
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return [a1 canOpenURL:];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return [a1 characterSetWithCharactersInString:];
}

id objc_msgSend_checkForUpgradeWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 checkForUpgradeWithCompletion:];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_comment(void *a1, const char *a2, ...)
{
  return _[a1 comment];
}

id objc_msgSend_commentURL(void *a1, const char *a2, ...)
{
  return _[a1 commentURL];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_constructWithArguments_(void *a1, const char *a2, ...)
{
  return [a1 constructWithArguments:];
}

id objc_msgSend_consumePendingLaunchEvent(void *a1, const char *a2, ...)
{
  return _[a1 consumePendingLaunchEvent];
}

id objc_msgSend_containerURL(void *a1, const char *a2, ...)
{
  return _[a1 containerURL];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return [a1 contentsOfDirectoryAtPath:error:];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_cookieStorageChangeHandler(void *a1, const char *a2, ...)
{
  return _[a1 cookieStorageChangeHandler];
}

id objc_msgSend_cookiesForURL_(void *a1, const char *a2, ...)
{
  return [a1 cookiesForURL:];
}

id objc_msgSend_cookiesToSuppress(void *a1, const char *a2, ...)
{
  return _[a1 cookiesToSuppress];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createDataTaskWithRequest_activity_dataTaskCreationCompletionHandler_requestCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 createDataTaskWithRequest:activity:dataTaskCreationCompletionHandler:requestCompletionHandler:];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return [a1 createDirectoryAtPath:withIntermediateDirectories:attributes:error:];
}

id objc_msgSend_currentArguments(void *a1, const char *a2, ...)
{
  return _[a1 currentArguments];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentPackage(void *a1, const char *a2, ...)
{
  return _[a1 currentPackage];
}

id objc_msgSend_currentProcess(void *a1, const char *a2, ...)
{
  return _[a1 currentProcess];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentStackNameForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 currentStackNameForFeedController:];
}

id objc_msgSend_currentStorefront(void *a1, const char *a2, ...)
{
  return _[a1 currentStorefront];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return _[a1 currentThread];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataAtPath_(void *a1, const char *a2, ...)
{
  return [a1 dataAtPath:];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 dataTaskWithRequest:];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return [a1 dataUsingEncoding:];
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfFile:];
}

id objc_msgSend_dataWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfFile:options:error:];
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfURL:];
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithJSONObject:options:error:];
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithPropertyList:format:options:error:];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_debugAssertRunningOnJSAThread(void *a1, const char *a2, ...)
{
  return _[a1 debugAssertRunningOnJSAThread];
}

id objc_msgSend_defaultBag(void *a1, const char *a2, ...)
{
  return _[a1 defaultBag];
}

id objc_msgSend_defaultBagKeysDictionary(void *a1, const char *a2, ...)
{
  return _[a1 defaultBagKeysDictionary];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultSessionConfiguration];
}

id objc_msgSend_defaultURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultURL];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_dequeueAllRecords(void *a1, const char *a2, ...)
{
  return _[a1 dequeueAllRecords];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_deviceGUID(void *a1, const char *a2, ...)
{
  return _[a1 deviceGUID];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryForKey:];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didFinishLaunchingWithMetrics_(void *a1, const char *a2, ...)
{
  return [a1 didFinishLaunchingWithMetrics:];
}

id objc_msgSend_disableATS(void *a1, const char *a2, ...)
{
  return _[a1 disableATS];
}

id objc_msgSend_diskUsage(void *a1, const char *a2, ...)
{
  return _[a1 diskUsage];
}

id objc_msgSend_displayGamut(void *a1, const char *a2, ...)
{
  return _[a1 displayGamut];
}

id objc_msgSend_displayNameForKey_value_(void *a1, const char *a2, ...)
{
  return [a1 displayNameForKey:value:];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return [a1 doubleForKey:];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_enqueueBlock_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBlock:];
}

id objc_msgSend_enqueueBlock_file_line_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBlock:file:line:];
}

id objc_msgSend_enqueueBlockForInitialLaunch_file_line_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBlockForInitialLaunch:file:line:];
}

id objc_msgSend_enqueueBlockPrefersSync_file_line_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBlockPrefersSync:file:line:];
}

id objc_msgSend_enqueueBlockSync_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBlockSync:];
}

id objc_msgSend_enqueueManagedValueCall_arguments_file_line_(void *a1, const char *a2, ...)
{
  return [a1 enqueueManagedValueCall:arguments:file:line:];
}

id objc_msgSend_enqueueRecord_(void *a1, const char *a2, ...)
{
  return [a1 enqueueRecord:];
}

id objc_msgSend_enqueueValueCall_arguments_file_line_(void *a1, const char *a2, ...)
{
  return [a1 enqueueValueCall:arguments:file:line:];
}

id objc_msgSend_enqueueValueInvocation_method_arguments_file_line_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueValueInvocation:method:arguments:file:line:");
}

id objc_msgSend_ensureDirectoryExists(void *a1, const char *a2, ...)
{
  return _[a1 ensureDirectoryExists];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _[a1 environment];
}

id objc_msgSend_errorOnlyCompletionHandlerAdapter(void *a1, const char *a2, ...)
{
  return _[a1 errorOnlyCompletionHandlerAdapter];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_expiresDate(void *a1, const char *a2, ...)
{
  return _[a1 expiresDate];
}

id objc_msgSend_feed(void *a1, const char *a2, ...)
{
  return _[a1 feed];
}

id objc_msgSend_feedBridged(void *a1, const char *a2, ...)
{
  return _[a1 feedBridged];
}

id objc_msgSend_feedController_addAlphaOverrideToItem_alpha_animated_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:addAlphaOverrideToItem:alpha:animated:duration:");
}

id objc_msgSend_feedController_addObserver_forTrigger_(void *a1, const char *a2, ...)
{
  return [a1 feedController:addObserver:forTrigger:];
}

id objc_msgSend_feedController_collectAndFlush_accumulatedImpressionsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 feedController:collectAndFlush:accumulatedImpressionsWithCompletion:];
}

id objc_msgSend_feedController_collectStatsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:collectStatsWithCompletion:");
}

id objc_msgSend_feedController_collectVisibleImpressionsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 feedController:collectVisibleImpressionsWithCompletion:];
}

id objc_msgSend_feedController_didLoadCardResource_(void *a1, const char *a2, ...)
{
  return [a1 feedController:didLoadCardResource:];
}

id objc_msgSend_feedController_dismissKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:dismissKeyboard:");
}

id objc_msgSend_feedController_removeAlphaOverrideFromItem_animated_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:removeAlphaOverrideFromItem:animated:duration:");
}

id objc_msgSend_feedController_removeObserver_forTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:removeObserver:forTrigger:");
}

id objc_msgSend_feedController_requestToRenderSharableImage_completion_(void *a1, const char *a2, ...)
{
  return [a1 feedController:requestToRenderSharableImage:completion:];
}

id objc_msgSend_feedController_requestToSetNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 feedController:requestToSetNavigationBarHidden:animated:];
}

id objc_msgSend_feedController_scrollToItem_animated_skipVoiceOverFocus_(void *a1, const char *a2, ...)
{
  return [a1 feedController:scrollToItem:animated:skipVoiceOverFocus:];
}

id objc_msgSend_feedController_viewStateDidUpdate_fromPreviousState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:viewStateDidUpdate:fromPreviousState:");
}

id objc_msgSend_feedController_wantsToAppendCards_options_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToAppendCards:options:];
}

id objc_msgSend_feedController_wantsToCreateNewFeedWithOptions_completion_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToCreateNewFeedWithOptions:completion:];
}

id objc_msgSend_feedController_wantsToDismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToDismissViewControllerAnimated:completion:");
}

id objc_msgSend_feedController_wantsToPerformRawActionModel_shouldReportFigaro_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToPerformRawActionModel:shouldReportFigaro:];
}

id objc_msgSend_feedController_wantsToPopToRootViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToPopToRootViewControllerAnimated:completion:");
}

id objc_msgSend_feedController_wantsToPopViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToPopViewController:completion:");
}

id objc_msgSend_feedController_wantsToPresentCardsWithCardArray_focusedIndex_animated_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToPresentCardsWithCardArray:focusedIndex:animated:options:completion:");
}

id objc_msgSend_feedController_wantsToPresentViewController_animated_params_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToPresentViewController:animated:params:");
}

id objc_msgSend_feedController_wantsToPresentViewControllerInPopover_withParams_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToPresentViewControllerInPopover:withParams:");
}

id objc_msgSend_feedController_wantsToPushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToPushViewController:animated:];
}

id objc_msgSend_feedController_wantsToReplaceCurrentViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToReplaceCurrentViewController:animated:];
}

id objc_msgSend_feedController_wantsToSlideInFeedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToSlideInFeedViewController:");
}

id objc_msgSend_feedController_wantsToUpdateContentWithData_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToUpdateContentWithData:];
}

id objc_msgSend_feedController_wantsToUpdateNavBarBackgroundOpacity_(void *a1, const char *a2, ...)
{
  return [a1 feedController:wantsToUpdateNavBarBackgroundOpacity:];
}

id objc_msgSend_feedController_wantsToUpdateSearchText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedController:wantsToUpdateSearchText:");
}

id objc_msgSend_feedControllerDidUpdateMetadata_(void *a1, const char *a2, ...)
{
  return [a1 feedControllerDidUpdateMetadata:];
}

id objc_msgSend_feedControllerIsOnScreen_(void *a1, const char *a2, ...)
{
  return [a1 feedControllerIsOnScreen:];
}

id objc_msgSend_feedControllerWillHotReload_(void *a1, const char *a2, ...)
{
  return [a1 feedControllerWillHotReload:];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:];
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:isDirectory:];
}

id objc_msgSend_filePathWithName_(void *a1, const char *a2, ...)
{
  return [a1 filePathWithName:];
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return [a1 finishWithResult:];
}

id objc_msgSend_firstWeekday(void *a1, const char *a2, ...)
{
  return _[a1 firstWeekday];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_generalExecutionRecordQueue(void *a1, const char *a2, ...)
{
  return _[a1 generalExecutionRecordQueue];
}

id objc_msgSend_generateCache(void *a1, const char *a2, ...)
{
  return _[a1 generateCache];
}

id objc_msgSend_get_completion_(void *a1, const char *a2, ...)
{
  return [a1 get:completion:];
}

id objc_msgSend_getItem_(void *a1, const char *a2, ...)
{
  return [a1 getItem:];
}

id objc_msgSend_globalObject(void *a1, const char *a2, ...)
{
  return _[a1 globalObject];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasProperty_(void *a1, const char *a2, ...)
{
  return [a1 hasProperty:];
}

id objc_msgSend_hasReachabilityCallbackScheduled(void *a1, const char *a2, ...)
{
  return _[a1 hasReachabilityCallbackScheduled];
}

id objc_msgSend_hasRecommendationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasRecommendationsEnabled];
}

id objc_msgSend_hasStarted(void *a1, const char *a2, ...)
{
  return _[a1 hasStarted];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return [a1 hasSuffix:];
}

id objc_msgSend_headers(void *a1, const char *a2, ...)
{
  return _[a1 headers];
}

id objc_msgSend_hideLoadingViewForFeedController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideLoadingViewForFeedController:");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hostViewControllerForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 hostViewControllerForFeedController:];
}

id objc_msgSend_hosting(void *a1, const char *a2, ...)
{
  return _[a1 hosting];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithData:];
}

id objc_msgSend_incrementPostLaunchCacheCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementPostLaunchCacheCount];
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObjectPassingTest:];
}

id objc_msgSend_indexedCookies(void *a1, const char *a2, ...)
{
  return _[a1 indexedCookies];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_initByReferencingFileURL_MIMEType_(void *a1, const char *a2, ...)
{
  return [a1 initByReferencingFileURL:MIMEType:];
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityItems:applicationActivities:];
}

id objc_msgSend_initWithArray_ownerObject_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:ownerObject:];
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithBase64EncodedString:options:];
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithBlock:];
}

id objc_msgSend_initWithCallback_callbackArgs_ownerObject_repeating_interval_timer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallback:callbackArgs:ownerObject:repeating:interval:timer:");
}

id objc_msgSend_initWithClientIdentifier_bag_(void *a1, const char *a2, ...)
{
  return [a1 initWithClientIdentifier:bag];
}

id objc_msgSend_initWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:delegate:delegateQueue:];
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:encoding:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionary:];
}

id objc_msgSend_initWithFireDate_interval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 initWithFireDate:interval:target:selector:userInfo:repeats:];
}

id objc_msgSend_initWithHosting_(void *a1, const char *a2, ...)
{
  return [a1 initWithHosting:];
}

id objc_msgSend_initWithItemProvider_properties_placeholderImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithItemProvider:properties:placeholderImage:];
}

id objc_msgSend_initWithKey_valueType_(void *a1, const char *a2, ...)
{
  return [a1 initWithKey:valueType:];
}

id objc_msgSend_initWithLaunching_(void *a1, const char *a2, ...)
{
  return [a1 initWithLaunching:];
}

id objc_msgSend_initWithLaunching_onQueue_(void *a1, const char *a2, ...)
{
  return [a1 initWithLaunching:onQueue:];
}

id objc_msgSend_initWithManagedValue_method_arguments_type_(void *a1, const char *a2, ...)
{
  return [a1 initWithManagedValue:method:arguments:type:];
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:];
}

id objc_msgSend_initWithName_value_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:value:];
}

id objc_msgSend_initWithNativeCookie_(void *a1, const char *a2, ...)
{
  return [a1 initWithNativeCookie:];
}

id objc_msgSend_initWithNotifyBlock_blockDescription_(void *a1, const char *a2, ...)
{
  return [a1 initWithNotifyBlock:blockDescription:];
}

id objc_msgSend_initWithProperties_(void *a1, const char *a2, ...)
{
  return [a1 initWithProperties:];
}

id objc_msgSend_initWithRequest_bag_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequest:bag:presentingViewController:];
}

id objc_msgSend_initWithRequest_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequest:presentingViewController:];
}

id objc_msgSend_initWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:selector:object:];
}

id objc_msgSend_initWithTitle_block_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:block:];
}

id objc_msgSend_initWithTokenService_(void *a1, const char *a2, ...)
{
  return [a1 initWithTokenService:];
}

id objc_msgSend_initWithTokenService_bag_cookiesToSuppress_(void *a1, const char *a2, ...)
{
  return [a1 initWithTokenService:bag:cookiesToSuppress:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:cachePolicy:timeoutInterval:];
}

id objc_msgSend_initWithValue_method_arguments_type_(void *a1, const char *a2, ...)
{
  return [a1 initWithValue:method:arguments:type:];
}

id objc_msgSend_initWithWindowProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithWindowProvider:];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return [a1 integerForKey:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interval(void *a1, const char *a2, ...)
{
  return _[a1 interval];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidationTimers(void *a1, const char *a2, ...)
{
  return _[a1 invalidationTimers];
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return [a1 invocationWithMethodSignature:];
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _[a1 invoke];
}

id objc_msgSend_invokeMethod_withArguments_(void *a1, const char *a2, ...)
{
  return [a1 invokeMethod:withArguments:];
}

id objc_msgSend_isAccountModificationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAccountModificationAllowed];
}

id objc_msgSend_isArray(void *a1, const char *a2, ...)
{
  return _[a1 isArray];
}

id objc_msgSend_isBookStoreAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isBookStoreAllowed];
}

id objc_msgSend_isBoolean(void *a1, const char *a2, ...)
{
  return _[a1 isBoolean];
}

id objc_msgSend_isBundled(void *a1, const char *a2, ...)
{
  return _[a1 isBundled];
}

id objc_msgSend_isDate(void *a1, const char *a2, ...)
{
  return _[a1 isDate];
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _[a1 isDirty];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToArray:];
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToNumber:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isExplicitContentAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitContentAllowed];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isGlobalICloudDriveSyncOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 isGlobalICloudDriveSyncOptedIn];
}

id objc_msgSend_isInstanceOf_(void *a1, const char *a2, ...)
{
  return [a1 isInstanceOf:];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return _[a1 isInternalBuild];
}

id objc_msgSend_isKeyWindow(void *a1, const char *a2, ...)
{
  return _[a1 isKeyWindow];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isLoaded];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isNull(void *a1, const char *a2, ...)
{
  return _[a1 isNull];
}

id objc_msgSend_isNumber(void *a1, const char *a2, ...)
{
  return _[a1 isNumber];
}

id objc_msgSend_isObject(void *a1, const char *a2, ...)
{
  return _[a1 isObject];
}

id objc_msgSend_isPresentedForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 isPresentedForFeedController:];
}

id objc_msgSend_isReachable(void *a1, const char *a2, ...)
{
  return _[a1 isReachable];
}

id objc_msgSend_isRepeating(void *a1, const char *a2, ...)
{
  return _[a1 isRepeating];
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isRunningInStoreDemoMode];
}

id objc_msgSend_isRunningOfflineCache(void *a1, const char *a2, ...)
{
  return _[a1 isRunningOfflineCache];
}

id objc_msgSend_isRunningOnThread(void *a1, const char *a2, ...)
{
  return _[a1 isRunningOnThread];
}

id objc_msgSend_isScriptLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isScriptLoaded];
}

id objc_msgSend_isSecure(void *a1, const char *a2, ...)
{
  return _[a1 isSecure];
}

id objc_msgSend_isSessionOnly(void *a1, const char *a2, ...)
{
  return _[a1 isSessionOnly];
}

id objc_msgSend_isStoreAccountManagedAppleID(void *a1, const char *a2, ...)
{
  return _[a1 isStoreAccountManagedAppleID];
}

id objc_msgSend_isString(void *a1, const char *a2, ...)
{
  return _[a1 isString];
}

id objc_msgSend_isUserSignedInToiCloud(void *a1, const char *a2, ...)
{
  return _[a1 isUserSignedInToiCloud];
}

id objc_msgSend_isValueManaged(void *a1, const char *a2, ...)
{
  return _[a1 isValueManaged];
}

id objc_msgSend_jsBootstrapEndTime(void *a1, const char *a2, ...)
{
  return _[a1 jsBootstrapEndTime];
}

id objc_msgSend_jsBootstrapStartTime(void *a1, const char *a2, ...)
{
  return _[a1 jsBootstrapStartTime];
}

id objc_msgSend_jsValuesWithContext_(void *a1, const char *a2, ...)
{
  return [a1 jsValuesWithContext:];
}

id objc_msgSend_jsa_colorWithHexString_alpha_(void *a1, const char *a2, ...)
{
  return [a1 jsa_colorWithHexString:alpha:];
}

id objc_msgSend_jsa_initWithScriptingCookie_(void *a1, const char *a2, ...)
{
  return [a1 jsa_initWithScriptingCookie:];
}

id objc_msgSend_jsa_isSafeExternalURL(void *a1, const char *a2, ...)
{
  return [a1 jsa_isSafeExternalURL];
}

id objc_msgSend_jsa_normalizedArtworkURLOfSize_withFormat_(void *a1, const char *a2, ...)
{
  return [a1 jsa_normalizedArtworkURLOfSize:withFormat:];
}

id objc_msgSend_jsa_openExternalURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 jsa_openExternalURL:options:completionHandler:];
}

id objc_msgSend_jsa_parametrize_(void *a1, const char *a2, ...)
{
  return [a1 jsa_parametrize:];
}

id objc_msgSend_jsa_queryStringForParameters_escapedValues_(void *a1, const char *a2, ...)
{
  return [a1 jsa_queryStringForParameters:escapedValues:];
}

id objc_msgSend_jsa_sharedApplicationIfNotExtension(void *a1, const char *a2, ...)
{
  return [a1 jsa_sharedApplicationIfNotExtension];
}

id objc_msgSend_jsa_stringDictionaryForRequestHeaderOrURLParam(void *a1, const char *a2, ...)
{
  return [a1 jsa_stringDictionaryForRequestHeaderOrURLParam];
}

id objc_msgSend_jsa_topMostViewControllerForWindow_(void *a1, const char *a2, ...)
{
  return [a1 jsa_topMostViewControllerForWindow:];
}

id objc_msgSend_jsa_validBooleanValueForProperty_(void *a1, const char *a2, ...)
{
  return [a1 jsa_validBooleanValueForProperty:];
}

id objc_msgSend_jsa_validIntegerValueForProperty_(void *a1, const char *a2, ...)
{
  return [a1 jsa_validIntegerValueForProperty:];
}

id objc_msgSend_jsa_validURLValueForProperty_(void *a1, const char *a2, ...)
{
  return [a1 jsa_validURLValueForProperty:];
}

id objc_msgSend_jsa_valueWithError_(void *a1, const char *a2, ...)
{
  return [a1 jsa_valueWithError:];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyEntries(void *a1, const char *a2, ...)
{
  return _[a1 keyEntries];
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _[a1 keyWindow];
}

id objc_msgSend_keyWindowSceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 keyWindowSceneIdentifier];
}

id objc_msgSend_keyWindowSize(void *a1, const char *a2, ...)
{
  return _[a1 keyWindowSize];
}

id objc_msgSend_lastBagStorefront(void *a1, const char *a2, ...)
{
  return _[a1 lastBagStorefront];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastScriptCacheDate(void *a1, const char *a2, ...)
{
  return _[a1 lastScriptCacheDate];
}

id objc_msgSend_launchCorrelationKey(void *a1, const char *a2, ...)
{
  return _[a1 launchCorrelationKey];
}

id objc_msgSend_launchEndTime(void *a1, const char *a2, ...)
{
  return _[a1 launchEndTime];
}

id objc_msgSend_launchExecutionRecordQueue(void *a1, const char *a2, ...)
{
  return _[a1 launchExecutionRecordQueue];
}

id objc_msgSend_launchPackageProvisioner(void *a1, const char *a2, ...)
{
  return _[a1 launchPackageProvisioner];
}

id objc_msgSend_launchiCloudFamilySettings(void *a1, const char *a2, ...)
{
  return _[a1 launchiCloudFamilySettings];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_loadScript_name_version_isBundled_completion_(void *a1, const char *a2, ...)
{
  return [a1 loadScript:name:version:isBundled:completion:];
}

id objc_msgSend_loadScriptFromPackage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadScriptFromPackage:completion:");
}

id objc_msgSend_localApproveRequestWithItemIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 localApproveRequestWithItemIdentifier:completion:];
}

id objc_msgSend_localStoreAccount(void *a1, const char *a2, ...)
{
  return _[a1 localStoreAccount];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localeIdentifier];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_logUUID(void *a1, const char *a2, ...)
{
  return _[a1 logUUID];
}

id objc_msgSend_lowercaseRestrictedHeaders(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseRestrictedHeaders];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_makeKeyWindow(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyWindow];
}

id objc_msgSend_managedArgs(void *a1, const char *a2, ...)
{
  return _[a1 managedArgs];
}

id objc_msgSend_managedCallback(void *a1, const char *a2, ...)
{
  return _[a1 managedCallback];
}

id objc_msgSend_managedValue(void *a1, const char *a2, ...)
{
  return _[a1 managedValue];
}

id objc_msgSend_managedValueWithValue_(void *a1, const char *a2, ...)
{
  return [a1 managedValueWithValue:];
}

id objc_msgSend_managedValueWithValue_andOwner_(void *a1, const char *a2, ...)
{
  return [a1 managedValueWithValue:andOwner:];
}

id objc_msgSend_markJSBootstrapEndTime(void *a1, const char *a2, ...)
{
  return _[a1 markJSBootstrapEndTime];
}

id objc_msgSend_markJSBootstrapStartTime(void *a1, const char *a2, ...)
{
  return _[a1 markJSBootstrapStartTime];
}

id objc_msgSend_markLaunchEndTime(void *a1, const char *a2, ...)
{
  return _[a1 markLaunchEndTime];
}

id objc_msgSend_maximumAge(void *a1, const char *a2, ...)
{
  return _[a1 maximumAge];
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_method(void *a1, const char *a2, ...)
{
  return _[a1 method];
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return [a1 methodSignatureForSelector:];
}

id objc_msgSend_metricsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 metricsDictionary];
}

id objc_msgSend_metricsForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 metricsForFeedController:];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameForJSContext(void *a1, const char *a2, ...)
{
  return _[a1 nameForJSContext];
}

id objc_msgSend_nativeJSObject(void *a1, const char *a2, ...)
{
  return _[a1 nativeJSObject];
}

id objc_msgSend_navigationBarInitialBackgroundOpacity(void *a1, const char *a2, ...)
{
  return _[a1 navigationBarInitialBackgroundOpacity];
}

id objc_msgSend_networkCallbackValue(void *a1, const char *a2, ...)
{
  return _[a1 networkCallbackValue];
}

id objc_msgSend_newAnalyticsSessionAssertionForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 newAnalyticsSessionAssertionForFeedController];
}

id objc_msgSend_newAnalyticsSessionExtendingAssertionForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 newAnalyticsSessionExtendingAssertionForFeedController];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_objectRegistrationsForBridge_(void *a1, const char *a2, ...)
{
  return [a1 objectRegistrationsForBridge:];
}

id objc_msgSend_onResponse(void *a1, const char *a2, ...)
{
  return _[a1 onResponse];
}

id objc_msgSend_onTimeoutManagedValue(void *a1, const char *a2, ...)
{
  return _[a1 onTimeoutManagedValue];
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:withOptions:];
}

id objc_msgSend_openURL_referrerURL_referrerApplicationName_options_(void *a1, const char *a2, ...)
{
  return [a1 openURL:referrerURL:referrerApplicationName:options:];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_originURL(void *a1, const char *a2, ...)
{
  return _[a1 originURL];
}

id objc_msgSend_packagePromise(void *a1, const char *a2, ...)
{
  return _[a1 packagePromise];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pendingBlocks(void *a1, const char *a2, ...)
{
  return _[a1 pendingBlocks];
}

id objc_msgSend_pendingPackageVersion(void *a1, const char *a2, ...)
{
  return _[a1 pendingPackageVersion];
}

id objc_msgSend_performAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 performAuthentication];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_personalized(void *a1, const char *a2, ...)
{
  return _[a1 personalized];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_portList(void *a1, const char *a2, ...)
{
  return _[a1 portList];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:userInfo:];
}

id objc_msgSend_preferredLocalizations(void *a1, const char *a2, ...)
{
  return _[a1 preferredLocalizations];
}

id objc_msgSend_present(void *a1, const char *a2, ...)
{
  return _[a1 present];
}

id objc_msgSend_presentEngagement(void *a1, const char *a2, ...)
{
  return _[a1 presentEngagement];
}

id objc_msgSend_presentViewController_::(void *a1, const char *a2, ...)
{
  return [a1 presentViewController];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_promiseWithError_(void *a1, const char *a2, ...)
{
  return [a1 promiseWithError:];
}

id objc_msgSend_promiseWithResult_(void *a1, const char *a2, ...)
{
  return [a1 promiseWithResult:];
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_provisionWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 provisionWithCompletionHandler:];
}

id objc_msgSend_reachabilityRef(void *a1, const char *a2, ...)
{
  return _[a1 reachabilityRef];
}

id objc_msgSend_recordValue(void *a1, const char *a2, ...)
{
  return _[a1 recordValue];
}

id objc_msgSend_records(void *a1, const char *a2, ...)
{
  return _[a1 records];
}

id objc_msgSend_registerBagKeySet_forProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return [a1 registerBagKeySet:forProfile:profileVersion:];
}

id objc_msgSend_registerItemForTypeIdentifier_loadHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerItemForTypeIdentifier:loadHandler:];
}

id objc_msgSend_registerObjects_(void *a1, const char *a2, ...)
{
  return [a1 registerObjects:];
}

id objc_msgSend_registerTemplateBundlesFromPackage_(void *a1, const char *a2, ...)
{
  return [a1 registerTemplateBundlesFromPackage:];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeItem_(void *a1, const char *a2, ...)
{
  return [a1 removeItem:];
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtPath:error:];
}

id objc_msgSend_removeManagedReference_withOwner_(void *a1, const char *a2, ...)
{
  return [a1 removeManagedReference:withOwner:];
}

id objc_msgSend_removeManagedReferences(void *a1, const char *a2, ...)
{
  return _[a1 removeManagedReferences];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_accountTypes_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:accountTypes:];
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:context:];
}

id objc_msgSend_replaceOccurrencesOfString_withString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceOccurrencesOfString:withString:options:range:");
}

id objc_msgSend_requestEntriesCompletionBlock(void *a1, const char *a2, ...)
{
  return _[a1 requestEntriesCompletionBlock];
}

id objc_msgSend_requestEntriesWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 requestEntriesWithCompletion:];
}

id objc_msgSend_requestStartDate(void *a1, const char *a2, ...)
{
  return _[a1 requestStartDate];
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return [a1 requestWithURL:];
}

id objc_msgSend_requestWithURL_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestWithURL:completionHandler:];
}

id objc_msgSend_requiredBlockingBagLoad(void *a1, const char *a2, ...)
{
  return _[a1 requiredBlockingBagLoad];
}

id objc_msgSend_resetImpressionsForFeedController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetImpressionsForFeedController:");
}

id objc_msgSend_resourceFetchType(void *a1, const char *a2, ...)
{
  return _[a1 resourceFetchType];
}

id objc_msgSend_responseCorrelationId(void *a1, const char *a2, ...)
{
  return _[a1 responseCorrelationId];
}

id objc_msgSend_responseEndDate(void *a1, const char *a2, ...)
{
  return _[a1 responseEndDate];
}

id objc_msgSend_responseForKey_(void *a1, const char *a2, ...)
{
  return [a1 responseForKey:];
}

id objc_msgSend_responseHeaders(void *a1, const char *a2, ...)
{
  return _[a1 responseHeaders];
}

id objc_msgSend_responseStartDate(void *a1, const char *a2, ...)
{
  return _[a1 responseStartDate];
}

id objc_msgSend_responseStatusCode(void *a1, const char *a2, ...)
{
  return _[a1 responseStatusCode];
}

id objc_msgSend_restrictionHandler(void *a1, const char *a2, ...)
{
  return _[a1 restrictionHandler];
}

id objc_msgSend_restrictionsQueue(void *a1, const char *a2, ...)
{
  return _[a1 restrictionsQueue];
}

id objc_msgSend_resultWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 resultWithCompletion:];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_runFromCache(void *a1, const char *a2, ...)
{
  return _[a1 runFromCache];
}

id objc_msgSend_runLoop(void *a1, const char *a2, ...)
{
  return _[a1 runLoop];
}

id objc_msgSend_runLoopSource(void *a1, const char *a2, ...)
{
  return _[a1 runLoopSource];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scanHexInt_(void *a1, const char *a2, ...)
{
  return [a1 scanHexInt:];
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return [a1 scannerWithString:];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 sessionWithConfiguration:];
}

id objc_msgSend_setAccount_(void *a1, const char *a2, ...)
{
  return [a1 setAccount:];
}

id objc_msgSend_setAccountHandlers_(void *a1, const char *a2, ...)
{
  return [a1 setAccountHandlers:];
}

id objc_msgSend_setActivityItem_(void *a1, const char *a2, ...)
{
  return [a1 setActivityItem:];
}

id objc_msgSend_setAllowsCellularAccess_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsCellularAccess:];
}

id objc_msgSend_setArgument_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 setArgument:atIndex:];
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBarButtonItem:];
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return [a1 setBody:];
}

id objc_msgSend_setCallback_(void *a1, const char *a2, ...)
{
  return [a1 setCallback:];
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return [a1 setCharactersToBeSkipped:];
}

id objc_msgSend_setCoalescingDelay_(void *a1, const char *a2, ...)
{
  return [a1 setCoalescingDelay:];
}

id objc_msgSend_setCompletionWithItemsHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionWithItemsHandler:];
}

id objc_msgSend_setCookieStorageChangeHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCookieStorageChangeHandler:];
}

id objc_msgSend_setCurrentPackage_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentPackage:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setExceptionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setExceptionHandler:];
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 setExcludedActivityTypes:];
}

id objc_msgSend_setFeed_(void *a1, const char *a2, ...)
{
  return [a1 setFeed:];
}

id objc_msgSend_setFeedBridged_(void *a1, const char *a2, ...)
{
  return [a1 setFeedBridged:];
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPBody:];
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPMethod:];
}

id objc_msgSend_setHTTPShouldUsePipelining_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPShouldUsePipelining:];
}

id objc_msgSend_setHasReachabilityCallbackScheduled_(void *a1, const char *a2, ...)
{
  return [a1 setHasReachabilityCallbackScheduled:];
}

id objc_msgSend_setHasStarted_(void *a1, const char *a2, ...)
{
  return [a1 setHasStarted:];
}

id objc_msgSend_setHeaders_(void *a1, const char *a2, ...)
{
  return [a1 setHeaders:];
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return [a1 setHost:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setIndexedCookies_(void *a1, const char *a2, ...)
{
  return [a1 setIndexedCookies:];
}

id objc_msgSend_setInspectable_(void *a1, const char *a2, ...)
{
  return [a1 setInspectable:];
}

id objc_msgSend_setInvalidationTimers_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidationTimers:];
}

id objc_msgSend_setIsLoadingScript_(void *a1, const char *a2, ...)
{
  return [a1 setIsLoadingScript:];
}

id objc_msgSend_setIsScriptLoaded_(void *a1, const char *a2, ...)
{
  return [a1 setIsScriptLoaded:];
}

id objc_msgSend_setItem::(void *a1, const char *a2, ...)
{
  return [a1 setItem:];
}

id objc_msgSend_setKeyWindow_(void *a1, const char *a2, ...)
{
  return [a1 setKeyWindow:];
}

id objc_msgSend_setKeyWindowSceneIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setKeyWindowSceneIdentifier:];
}

id objc_msgSend_setKeyWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 setKeyWindowSize:];
}

id objc_msgSend_setLastBagStorefront_(void *a1, const char *a2, ...)
{
  return [a1 setLastBagStorefront:];
}

id objc_msgSend_setLastScriptCacheDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastScriptCacheDate:];
}

id objc_msgSend_setLaunchExecutionRecordQueue_(void *a1, const char *a2, ...)
{
  return [a1 setLaunchExecutionRecordQueue:];
}

id objc_msgSend_setLaunchPackageProvisioner_(void *a1, const char *a2, ...)
{
  return [a1 setLaunchPackageProvisioner:];
}

id objc_msgSend_setLocalizedDateFormatFromTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setLocalizedDateFormatFromTemplate:];
}

id objc_msgSend_setMethod_(void *a1, const char *a2, ...)
{
  return [a1 setMethod:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNetworkCallbackValue_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkCallbackValue:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return [a1 setOptions:];
}

id objc_msgSend_setOutput_(void *a1, const char *a2, ...)
{
  return [a1 setOutput:];
}

id objc_msgSend_setPackagePromise_(void *a1, const char *a2, ...)
{
  return [a1 setPackagePromise:];
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return [a1 setPath:];
}

id objc_msgSend_setPendingPackageVersion_(void *a1, const char *a2, ...)
{
  return [a1 setPendingPackageVersion:];
}

id objc_msgSend_setPerformanceMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setPerformanceMetrics:];
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingViewController:];
}

id objc_msgSend_setProtocolHandler_(void *a1, const char *a2, ...)
{
  return [a1 setProtocolHandler:];
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return [a1 setQualityOfService:];
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return [a1 setQueryItems:];
}

id objc_msgSend_setReachabilityRef_(void *a1, const char *a2, ...)
{
  return [a1 setReachabilityRef:];
}

id objc_msgSend_setRequestCachePolicy_(void *a1, const char *a2, ...)
{
  return [a1 setRequestCachePolicy:];
}

id objc_msgSend_setRequestEntriesCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setRequestEntriesCompletionBlock:];
}

id objc_msgSend_setResponse_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setResponse:forKey:];
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return [a1 setScheme:];
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return [a1 setSelector:];
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return [a1 setSession:];
}

id objc_msgSend_setSource_(void *a1, const char *a2, ...)
{
  return [a1 setSource:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return [a1 setState:];
}

id objc_msgSend_setStatusCode_(void *a1, const char *a2, ...)
{
  return [a1 setStatusCode:];
}

id objc_msgSend_setSummary_(void *a1, const char *a2, ...)
{
  return [a1 setSummary:];
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return [a1 setTarget:];
}

id objc_msgSend_setTemplateRegistrationPromise_(void *a1, const char *a2, ...)
{
  return [a1 setTemplateRegistrationPromise:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 setTimeZone:];
}

id objc_msgSend_setTimeoutInterval_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutInterval:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setURLCache_(void *a1, const char *a2, ...)
{
  return [a1 setURLCache:];
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return [a1 setUrl:];
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forHTTPHeaderField:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setValue_forProperty_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forProperty:];
}

id objc_msgSend_setWindowManager_(void *a1, const char *a2, ...)
{
  return [a1 setWindowManager:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_set_atsContext_(void *a1, const char *a2, ...)
{
  return [a1 set_atsContext:];
}

id objc_msgSend_set_error_(void *a1, const char *a2, ...)
{
  return [a1 set_error:];
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _[a1 setup];
}

id objc_msgSend_setupWithPackage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWithPackage:completion:");
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedHTTPCookieStorage(void *a1, const char *a2, ...)
{
  return _[a1 sharedHTTPCookieStorage];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedOfflineCache(void *a1, const char *a2, ...)
{
  return _[a1 sharedOfflineCache];
}

id objc_msgSend_sharedProvider(void *a1, const char *a2, ...)
{
  return _[a1 sharedProvider];
}

id objc_msgSend_sharedURLCache(void *a1, const char *a2, ...)
{
  return _[a1 sharedURLCache];
}

id objc_msgSend_shouldSuppressResponseDialogs(void *a1, const char *a2, ...)
{
  return _[a1 shouldSuppressResponseDialogs];
}

id objc_msgSend_showLoadingViewForFeedController_(void *a1, const char *a2, ...)
{
  return [a1 showLoadingViewForFeedController:];
}

id objc_msgSend_signOutWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 signOutWithCompletion:];
}

id objc_msgSend_signalWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 signalWithCompletion:];
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingSelector:];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 startWithCompletion:];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _[a1 statusCode];
}

id objc_msgSend_storeDidAttemptSignOut_(void *a1, const char *a2, ...)
{
  return [a1 storeDidAttemptSignOut:];
}

id objc_msgSend_storeWillAttemptSignOut_(void *a1, const char *a2, ...)
{
  return [a1 storeWillAttemptSignOut:];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathComponent:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringFromDate_dateFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:dateFormat:];
}

id objc_msgSend_stringFromDate_dateStyle_timeStyle_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:dateStyle:timeStyle:];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithContentsOfFile_encoding_error_(void *a1, const char *a2, ...)
{
  return [a1 stringWithContentsOfFile:encoding:error:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return [a1 stringWithString:];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return [a1 subarrayWithRange:];
}

id objc_msgSend_subscribe_(void *a1, const char *a2, ...)
{
  return [a1 subscribe:];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_taskMetrics(void *a1, const char *a2, ...)
{
  return _[a1 taskMetrics];
}

id objc_msgSend_tearDownWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 tearDownWithCompletion:];
}

id objc_msgSend_templateBundleRegistrar(void *a1, const char *a2, ...)
{
  return _[a1 templateBundleRegistrar];
}

id objc_msgSend_templateRegistrationPromise(void *a1, const char *a2, ...)
{
  return _[a1 templateRegistrationPromise];
}

id objc_msgSend_thenWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 thenWithBlock:];
}

id objc_msgSend_thread(void *a1, const char *a2, ...)
{
  return _[a1 thread];
}

id objc_msgSend_threadDictionary(void *a1, const char *a2, ...)
{
  return _[a1 threadDictionary];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeZoneForSecondsFromGMT_(void *a1, const char *a2, ...)
{
  return [a1 timeZoneForSecondsFromGMT:];
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _[a1 timer];
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 timerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_toArray(void *a1, const char *a2, ...)
{
  return _[a1 toArray];
}

id objc_msgSend_toBool(void *a1, const char *a2, ...)
{
  return _[a1 toBool];
}

id objc_msgSend_toDate(void *a1, const char *a2, ...)
{
  return _[a1 toDate];
}

id objc_msgSend_toDictionary(void *a1, const char *a2, ...)
{
  return _[a1 toDictionary];
}

id objc_msgSend_toNumber(void *a1, const char *a2, ...)
{
  return _[a1 toNumber];
}

id objc_msgSend_toObject(void *a1, const char *a2, ...)
{
  return _[a1 toObject];
}

id objc_msgSend_toObjectOfClass_(void *a1, const char *a2, ...)
{
  return [a1 toObjectOfClass:];
}

id objc_msgSend_toString(void *a1, const char *a2, ...)
{
  return _[a1 toString];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_transactionMetrics(void *a1, const char *a2, ...)
{
  return _[a1 transactionMetrics];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unregisterOnNetworkChange(void *a1, const char *a2, ...)
{
  return _[a1 unregisterOnNetworkChange];
}

id objc_msgSend_unsubscribe_(void *a1, const char *a2, ...)
{
  return [a1 unsubscribe:];
}

id objc_msgSend_updateContentWithData_(void *a1, const char *a2, ...)
{
  return [a1 updateContentWithData:];
}

id objc_msgSend_updateQueue(void *a1, const char *a2, ...)
{
  return _[a1 updateQueue];
}

id objc_msgSend_updateWindowSizeIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 updateWindowSizeIfNeeded:];
}

id objc_msgSend_upgradePackage_completion_(void *a1, const char *a2, ...)
{
  return [a1 upgradePackage:completion:];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_usedBootstrapFallback(void *a1, const char *a2, ...)
{
  return _[a1 usedBootstrapFallback];
}

id objc_msgSend_userAgentForProcessInfo_(void *a1, const char *a2, ...)
{
  return [a1 userAgentForProcessInfo:];
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return _[a1 userDefaults];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return [a1 valueForProperty:];
}

id objc_msgSend_valueType(void *a1, const char *a2, ...)
{
  return _[a1 valueType];
}

id objc_msgSend_valueWithBytes_objCType_(void *a1, const char *a2, ...)
{
  return [a1 valueWithBytes:objCType:];
}

id objc_msgSend_valueWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCompletion:];
}

id objc_msgSend_valueWithError_(void *a1, const char *a2, ...)
{
  return [a1 valueWithError:];
}

id objc_msgSend_valueWithJSValueRef_inContext_(void *a1, const char *a2, ...)
{
  return [a1 valueWithJSValueRef:inContext:];
}

id objc_msgSend_valueWithNewObjectInContext_(void *a1, const char *a2, ...)
{
  return [a1 valueWithNewObjectInContext:];
}

id objc_msgSend_valueWithObject_inContext_(void *a1, const char *a2, ...)
{
  return [a1 valueWithObject:inContext:];
}

id objc_msgSend_values(void *a1, const char *a2, ...)
{
  return _[a1 values];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _[a1 viewIfLoaded];
}

id objc_msgSend_viewState(void *a1, const char *a2, ...)
{
  return _[a1 viewState];
}

id objc_msgSend_virtualMachine(void *a1, const char *a2, ...)
{
  return _[a1 virtualMachine];
}

id objc_msgSend_weakToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 weakToStrongObjectsMapTable];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowFromOptions_(void *a1, const char *a2, ...)
{
  return [a1 windowFromOptions:];
}

id objc_msgSend_windowHostingWindowSize(void *a1, const char *a2, ...)
{
  return _[a1 windowHostingWindowSize];
}

id objc_msgSend_windowManager(void *a1, const char *a2, ...)
{
  return _[a1 windowManager];
}

id objc_msgSend_windowProvider(void *a1, const char *a2, ...)
{
  return _[a1 windowProvider];
}

id objc_msgSend_windowProviderForBridge_(void *a1, const char *a2, ...)
{
  return [a1 windowProviderForBridge:];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_writeToFile_options_error_(void *a1, const char *a2, ...)
{
  return [a1 writeToFile:options:error:];
}

id objc_msgSend_zoomWithSourceViewProvider_(void *a1, const char *a2, ...)
{
  return [a1 zoomWithSourceViewProvider:];
}