void sub_6080(id a1)
{
  uint64_t vars8;

  qword_409A90 = objc_alloc_init(BEContentBlockingRules);

  _objc_release_x1();
}

void sub_6538(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_655C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    [*(id *)(a1 + 32) removeAllContentRuleLists];
    [*(id *)(a1 + 32) addContentRuleList:v5];
    [*(id *)(a1 + 40) setBe_appliedContentBlockingRule:*(void *)(a1 + 72)];
  }
  if (v6)
  {
    v7 = _BookEPUBLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138412290;
      id v13 = v6;
      _os_log_impl(&def_7BFC0, v7, OS_LOG_TYPE_ERROR, "Error creating content blocking rule list - %@", (uint8_t *)&v12, 0xCu);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v9 = [WeakRetained cachedRules];
  [v9 setObject:v5 forKeyedSubscript:*(void *)(a1 + 48)];

  id v10 = objc_retainBlock(*(id *)(a1 + 56));
  v11 = v10;
  if (v10) {
    (*((void (**)(id, uint64_t, id))v10 + 2))(v10, 1, v6);
  }
}

void sub_66AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    if (*(void *)(a1 + 56) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(a1 + 56);
    }
    if (v7 == 1)
    {
      v8 = &off_3BE7B0;
    }
    else
    {
      if (v7 != 2) {
        goto LABEL_11;
      }
      v8 = off_3BE7A8;
    }
    v9 = [(__objc2_class *)*v8 source];
    if (v9)
    {
LABEL_14:
      [*(id *)(a1 + 32) compileContentRuleListForIdentifier:*(void *)(a1 + 40) encodedContentRuleList:v9 completionHandler:*(void *)(a1 + 48)];

      goto LABEL_15;
    }
LABEL_11:
    id v10 = _BookEPUBLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      v11 = +[NSNumber numberWithUnsignedInteger:v7];
      int v12 = 138412290;
      id v13 = v11;
      _os_log_impl(&def_7BFC0, v10, OS_LOG_TYPE_ERROR, "Unsupported content blocking rule '%@'", (uint8_t *)&v12, 0xCu);
    }
    v9 = 0;
    goto LABEL_14;
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_15:
}

void ITEpubContainerParser::ITEpubContainerParser(ITEpubContainerParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C00C8;
  *(void *)(v1 + 128) = 0;
  *(void *)(v1 + 136) = 0;
  *(void *)(v1 + 120) = 0;
  *(_DWORD *)(v1 + 144) = 0;
}

{
  uint64_t v1;

  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C00C8;
  *(void *)(v1 + 128) = 0;
  *(void *)(v1 + 136) = 0;
  *(void *)(v1 + 120) = 0;
  *(_DWORD *)(v1 + 144) = 0;
}

void ITEpubContainerParser::~ITEpubContainerParser(void **this)
{
  *this = off_3C00C8;
  if (*((char *)this + 143) < 0) {
    operator delete(this[15]);
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler((ITEpubXmlParseHandler *)this);
}

{
  uint64_t vars8;

  ITEpubContainerParser::~ITEpubContainerParser(this);

  operator delete();
}

uint64_t ITEpubContainerParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  uint64_t result = ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"rootfile");
  if (result)
  {
    ++*((_DWORD *)this + 36);
    if (*((char *)this + 143) < 0)
    {
      if (this[16]) {
        return result;
      }
    }
    else if (*((unsigned char *)this + 143))
    {
      return result;
    }
    uint64_t result = (uint64_t)ITEpubXmlParseHandler::doesAttributeMatch((ITEpubXmlParseHandler *)this, @"media-type", @"application/oebps-package+xml", a3);
    if (result)
    {
      CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"full-path");
      return ITStrUtil::toString(Value, (uint64_t)(this + 15));
    }
  }
  return result;
}

std::string *ITEpubContainerParser::opfFile(uint64_t a1, std::string *this)
{
  v3 = (const std::string::value_type *)(a1 + 120);
  if (*(char *)(a1 + 143) < 0) {
    v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

id sub_6DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v18[0] = @"forDisplay";
  v9 = +[NSNumber numberWithBool:a1];
  v19[0] = v9;
  v18[1] = @"level";
  id v10 = +[NSNumber numberWithInteger:a2];
  v19[1] = v10;
  v18[2] = @"imageFilter";
  v11 = +[NSNumber numberWithUnsignedInteger:a3];
  v19[2] = v11;
  v18[3] = @"singleTapEnabled";
  int v12 = +[NSNumber numberWithBool:a4];
  v19[3] = v12;
  v18[4] = @"lineGuideEnabled";
  id v13 = +[NSNumber numberWithBool:a5];
  v19[4] = v13;
  v14 = +[NSDictionary dictionaryWithObjects:v19 forKeys:v18 count:5];

  v15 = +[NSJSONSerialization dataWithJSONObject:v14 options:4 error:0];
  id v16 = [objc_alloc((Class)NSString) initWithData:v15 encoding:4];

  return v16;
}

id BookEPUBBundle()
{
  if (qword_409AA8 != -1) {
    dispatch_once(&qword_409AA8, &stru_3C0118);
  }
  v0 = (void *)qword_409AA0;

  return v0;
}

void sub_73E4(id a1)
{
  qword_409AA0 = +[NSBundle bundleForClass:objc_opt_class()];

  _objc_release_x1();
}

void ITEpubPageListParser::ITEpubPageListParser(ITEpubPageListParser *this, atomic_uint *a2)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  void *v3 = off_3C0148;
  v3[15] = 0;
  v3[16] = 0;
  v3[17] = a2;
  if (a2) {
    ITRetain::retain(a2);
  }
}

void sub_749C(_Unwind_Exception *a1)
{
  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void ITEpubPageListParser::~ITEpubPageListParser(ITEpubPageListParser *this)
{
  *(void *)this = off_3C0148;
  uint64_t v2 = (atomic_uint *)*((void *)this + 17);
  if (v2)
  {
    ITRetain::release(v2);
    *((void *)this + 17) = 0;
  }
  v3 = (atomic_uint *)*((void *)this + 16);
  if (v3)
  {
    ITRetain::release(v3);
    *((void *)this + 16) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubPageListParser::~ITEpubPageListParser(this);

  operator delete();
}

void sub_7528(void *a1)
{
}

void ITEpubPageListParser::StartNode(ITEpubPageListParser *this, CFStringRef theString, const __CFDictionary *a3)
{
  if (*((_DWORD *)this + 30))
  {
    if (*((void *)this + 16))
    {
      if (ITEpubXmlParseHandler::doesNodeMatch(this, theString, @"pageTarget"))
      {
        ++*((_DWORD *)this + 31);
        CFDictionaryGetValue(a3, @"id");
        operator new();
      }
      if (ITEpubXmlParseHandler::doesNodeMatch(this, theString, @"content"))
      {
        CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"src");
        if (Value)
        {
          CFStringRef v9 = Value;
          CFStringRef v10 = ITEpubXmlParseHandler::copyHrefStrippingHash(Value, v8);
          if (v10)
          {
            CFStringRef v11 = v10;
            if (CFStringGetLength(v10)) {
              ITNavPoint::setContentFile(*((ITNavPoint **)this + 16), v9);
            }
            CFRelease(v11);
          }
        }
      }
    }
  }
  else if (ITEpubXmlParseHandler::doesNodeMatch(this, theString, @"pageList"))
  {
    id v6 = (atomic_uint *)*((void *)this + 16);
    if (v6)
    {
      ITRetain::release(v6);
      *((void *)this + 16) = 0;
    }
    operator new();
  }
}

void sub_7780()
{
}

void ITEpubPageListParser::EndNode(ITEpubPageListParser *this, const __CFString *a2, const char *a3)
{
  if (*((_DWORD *)this + 30) && *((void *)this + 16))
  {
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"pageList"))
    {
      *((_DWORD *)this + 30) = 0;
    }
    else if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"pageTarget"))
    {
      int v6 = *((_DWORD *)this + 31);
      if (v6)
      {
        *((_DWORD *)this + 31) = v6 - 1;
        uint64_t v7 = (ITNavPoint *)*((void *)this + 16);
        uint64_t v8 = *((void *)v7 + 5);
        if (v8) {
          *((void *)this + 16) = v8;
        }
        CFStringRef v9 = (const __CFString *)ITNavPoint::contentFileIncludingHash(v7);
        if (!v9 || !CFStringGetLength(v9))
        {
          if (v7 == *((ITNavPoint **)this + 16))
          {
            *((void *)this + 16) = 0;
          }
          else
          {
            ITRetain::retain((atomic_uint *)v7);
            ITNavPoint::removeChild(*((void *)this + 16), (atomic_uint *)v7);
            unint64_t v10 = *((void *)v7 + 3) - *((void *)v7 + 2);
            if ((int)(v10 >> 3) >= 1)
            {
              unint64_t v11 = 0;
              uint64_t v12 = (v10 >> 3);
              do
              {
                id v13 = (atomic_uint *)ITNavPoint::childAtIndex(v7, v11++);
                ITNavPoint::addChild(*((ITNavPoint **)this + 16), v13);
              }
              while (v12 != v11);
            }
          }
          ITRetain::release((atomic_uint *)v7);
        }
      }
    }
    else
    {
      BOOL doesNodeMatch = ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"text");
      if (a3)
      {
        if (doesNodeMatch)
        {
          if (*a3)
          {
            CFStringRef v15 = CFStringCreateWithCString(kCFAllocatorDefault, a3, 0x8000100u);
            ITNavPoint::setContentName(*((ITNavPoint **)this + 16), v15);
            if (v15)
            {
              CFRelease(v15);
            }
          }
        }
      }
    }
  }
}

atomic_uint *ITEpubPageListParser::copyPageLists(ITEpubPageListParser *this)
{
  uint64_t result = (atomic_uint *)*((void *)this + 16);
  if (result)
  {
    ITRetain::retain(result);
    return (atomic_uint *)*((void *)this + 16);
  }
  return result;
}

void sub_7D9C(id a1)
{
  qword_409AB0 = objc_alloc_init(BETestDriver);

  _objc_release_x1();
}

void sub_7F24(id a1)
{
  id v4 = +[NSBundle mainBundle];
  uint64_t v1 = [v4 infoDictionary];
  uint64_t v2 = [v1 objectForKey:@"CFBundleShortVersionString"];
  v3 = (void *)qword_409AC0;
  qword_409AC0 = v2;
}

id sub_87E4(uint64_t a1, uint64_t a2)
{
  +[BEJavascriptUtilities rectFromRectDictionary:a2];
  CGFloat x = v10.origin.x;
  CGFloat y = v10.origin.y;
  CGFloat width = v10.size.width;
  CGFloat height = v10.size.height;
  if (CGRectIsNull(v10))
  {
    int v6 = 0;
  }
  else
  {
    *(CGFloat *)uint64_t v8 = x;
    *(CGFloat *)&v8[1] = y;
    *(CGFloat *)&v8[2] = width;
    *(CGFloat *)&v8[3] = height;
    int v6 = +[NSValue valueWithBytes:v8 objCType:"{CGRect={CGPoint=dd}{CGSize=dd}}"];
  }

  return v6;
}

id sub_89F8(uint64_t a1, void *a2)
{
  id v2 = a2;
  v3 = +[NSMutableArray array];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v17;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v17 != v7) {
          objc_enumerationMutation(v4);
        }
        +[BEJavascriptUtilities rectFromRectDictionary:*(void *)(*((void *)&v16 + 1) + 8 * i)];
        CGFloat x = v22.origin.x;
        CGFloat y = v22.origin.y;
        CGFloat width = v22.size.width;
        CGFloat height = v22.size.height;
        if (!CGRectIsNull(v22))
        {
          *(CGFloat *)CFStringRef v15 = x;
          *(CGFloat *)&v15[1] = y;
          *(CGFloat *)&v15[2] = width;
          *(CGFloat *)&v15[3] = height;
          id v13 = +[NSValue valueWithBytes:v15 objCType:"{CGRect={CGPoint=dd}{CGSize=dd}}"];
          [v3 addObject:v13];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v6);
  }

  return v3;
}

void ITNavPoint::ITNavPoint(ITNavPoint *this)
{
  ITRetain::ITRetain(this);
  *(void *)uint64_t v1 = off_3C0290;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(void *)(v1 + 96) = 0;
}

{
  uint64_t v1;

  ITRetain::ITRetain(this);
  *(void *)uint64_t v1 = off_3C0290;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(void *)(v1 + 96) = 0;
}

void ITNavPoint::~ITNavPoint(ITNavPoint *this, ITRetain *a2)
{
  *(void *)this = off_3C0290;
  v3 = (atomic_uint **)*((void *)this + 2);
  id v4 = (atomic_uint **)*((void *)this + 3);
  while (v3 != v4)
    ITRetain::for_each_release(*v3++, a2);
  *((void *)this + 5) = 0;
  id v5 = (const void *)*((void *)this + 6);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 6) = 0;
  }
  id v6 = (const void *)*((void *)this + 7);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 7) = 0;
  }
  uint64_t v7 = (const void *)*((void *)this + 8);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 8) = 0;
  }
  uint64_t v8 = (const void *)*((void *)this + 9);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 9) = 0;
  }
  CFStringRef v9 = (const void *)*((void *)this + 10);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 10) = 0;
  }
  CGRect v10 = (const void *)*((void *)this + 11);
  if (v10)
  {
    CFRelease(v10);
    *((void *)this + 11) = 0;
  }
  unint64_t v11 = (const void *)*((void *)this + 12);
  if (v11)
  {
    CFRelease(v11);
    *((void *)this + 12) = 0;
  }
  uint64_t v12 = (void *)*((void *)this + 2);
  if (v12)
  {
    *((void *)this + 3) = v12;
    operator delete(v12);
  }

  ITRetain::~ITRetain(this);
}

{
  uint64_t vars8;

  ITNavPoint::~ITNavPoint(this, a2);

  operator delete();
}

void ITNavPoint::setRelativeHrefBase(ITNavPoint *this, CFTypeRef cf)
{
  id v4 = (const void *)*((void *)this + 11);
  if (v4) {
    CFRelease(v4);
  }
  *((void *)this + 11) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

void ITNavPoint::setNavPointId(ITNavPoint *this, CFTypeRef cf)
{
  id v4 = (const void *)*((void *)this + 6);
  if (v4) {
    CFRelease(v4);
  }
  *((void *)this + 6) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

void ITNavPoint::setNavPointType(ITNavPoint *this, CFTypeRef cf)
{
  id v4 = (const void *)*((void *)this + 7);
  if (v4) {
    CFRelease(v4);
  }
  *((void *)this + 7) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

void ITNavPoint::setNavPointValue(ITNavPoint *this, CFTypeRef cf)
{
  id v4 = (const void *)*((void *)this + 8);
  if (v4) {
    CFRelease(v4);
  }
  *((void *)this + 8) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

const __CFString *ITNavPoint::setContentFile(ITNavPoint *this, CFStringRef originalString)
{
  id v4 = (const void *)*((void *)this + 9);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 9) = 0;
  }
  CFStringRef result = ITEpubXmlParseHandler::createHrefString(originalString, originalString);
  *((void *)this + 9) = result;
  return result;
}

void ITNavPoint::setContentName(ITNavPoint *this, CFTypeRef cf)
{
  id v4 = (const void *)*((void *)this + 10);
  if (v4) {
    CFRelease(v4);
  }
  *((void *)this + 10) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

void ITNavPoint::setContentHTML(ITNavPoint *this, CFTypeRef cf)
{
  id v4 = (const void *)*((void *)this + 12);
  if (v4) {
    CFRelease(v4);
  }
  *((void *)this + 12) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

uint64_t ITNavPoint::countHref(ITNavPoint *this, CFStringRef theString2)
{
  uint64_t v3 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  if (v3 == v2) {
    return 0;
  }
  uint64_t v6 = 0;
  do
  {
    CFStringRef v7 = *(const __CFString **)(*(void *)v3 + 72);
    if (v7)
    {
      if (CFStringCompare(v7, theString2, 0)) {
        uint64_t v6 = v6;
      }
      else {
        uint64_t v6 = (v6 + 1);
      }
      uint64_t v2 = *((void *)this + 3);
    }
    v3 += 8;
  }
  while (v3 != v2);
  return v6;
}

uint64_t ITNavPoint::contentFileIncludingHash(ITNavPoint *this)
{
  return *((void *)this + 9);
}

void ITNavPoint::addChild(ITNavPoint *this, atomic_uint *a2)
{
  if (a2)
  {
    ITRetain::retain(a2);
    unint64_t v4 = *((void *)this + 4);
    id v5 = (atomic_uint **)*((void *)this + 3);
    if ((unint64_t)v5 >= v4)
    {
      uint64_t v7 = *((void *)this + 2);
      uint64_t v8 = ((uint64_t)v5 - v7) >> 3;
      if ((unint64_t)(v8 + 1) >> 61) {
        sub_9E38();
      }
      uint64_t v9 = v4 - v7;
      uint64_t v10 = v9 >> 2;
      if (v9 >> 2 <= (unint64_t)(v8 + 1)) {
        uint64_t v10 = v8 + 1;
      }
      if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11) {
        uint64_t v12 = (char *)sub_9EE0((uint64_t)this + 32, v11);
      }
      else {
        uint64_t v12 = 0;
      }
      id v13 = (atomic_uint **)&v12[8 * v8];
      v14 = &v12[8 * v11];
      *id v13 = a2;
      uint64_t v6 = v13 + 1;
      long long v16 = (char *)*((void *)this + 2);
      CFStringRef v15 = (char *)*((void *)this + 3);
      if (v15 != v16)
      {
        do
        {
          long long v17 = (atomic_uint *)*((void *)v15 - 1);
          v15 -= 8;
          *--id v13 = v17;
        }
        while (v15 != v16);
        CFStringRef v15 = (char *)*((void *)this + 2);
      }
      *((void *)this + 2) = v13;
      *((void *)this + 3) = v6;
      *((void *)this + 4) = v14;
      if (v15) {
        operator delete(v15);
      }
    }
    else
    {
      *id v5 = a2;
      uint64_t v6 = v5 + 1;
    }
    *((void *)this + 3) = v6;
    *((void *)a2 + 5) = this;
  }
}

uint64_t ITNavPoint::setParent(uint64_t this, ITNavPoint *a2)
{
  *(void *)(this + 40) = a2;
  return this;
}

uint64_t ITNavPoint::childAtIndex(ITNavPoint *this, unint64_t a2)
{
  uint64_t v2 = *((void *)this + 2);
  if (a2 >= (*((void *)this + 3) - v2) >> 3) {
    return 0;
  }
  else {
    return *(void *)(v2 + 8 * a2);
  }
}

uint64_t ITNavPoint::removeChild(uint64_t this, atomic_uint *a2)
{
  uint64_t v2 = *(void *)(this + 16);
  uint64_t v3 = *(ITNavPoint ***)(this + 24);
  if ((ITNavPoint **)v2 != v3)
  {
    uint64_t v4 = this;
    uint64_t v5 = -v2;
    while (*(atomic_uint **)v2 != a2)
    {
      v2 += 8;
      v5 -= 8;
      if ((ITNavPoint **)v2 == v3) {
        return this;
      }
    }
    this = ITRetain::release(a2);
    uint64_t v6 = -v5;
    uint64_t v7 = (const void *)(8 - v5);
    size_t v8 = *(void *)(v4 + 24) - (8 - v5);
    if (v8) {
      this = (uint64_t)memmove((void *)v6, v7, v8);
    }
    *(void *)(v4 + 24) = v6 + v8;
  }
  return this;
}

CFStringRef ITNavPoint::copyContentFileWithoutHash(const __CFString **this, const __CFString *a2)
{
  return ITEpubXmlParseHandler::copyHrefStrippingHash(this[9], a2);
}

void sub_9E38()
{
}

void sub_9E50(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_9EAC(exception, a1);
}

void sub_9E98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_9EAC(std::logic_error *a1, const char *a2)
{
  CFStringRef result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_9EE0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_9F18();
  }
  return operator new(8 * a2);
}

void sub_9F18()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

id CFStringGetXmlCharPtr(__CFString *a1)
{
  uint64_t v1 = a1;

  return [(__CFString *)v1 UTF8String];
}

void sub_9FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)ITEpubXmlParseDelegate;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_A134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id ITParseXMLInObjectiveCWithData(ITEpubXmlParseHandler *a1, const __CFData *a2)
{
  uint64_t v4 = objc_opt_new();
  [v4 setDecoder:a1];
  id v5 = [objc_alloc((Class)NSXMLParser) initWithData:a2];
  [v5 setDelegate:v4];
  [v5 setShouldProcessNamespaces:1];
  [v5 parse];
  uint64_t v6 = [v5 parserError];
  uint64_t v7 = v6;
  if (v6) {
    id v8 = [v6 code];
  }
  else {
    id v8 = 0;
  }
  [v4 setDecoder:0];
  [v5 setDelegate:0];

  return v8;
}

void sub_A460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GR7MfHLOwbW53iI3X2X0XHFzhK::GR7MfHLOwbW53iI3X2X0XHFzhK(GR7MfHLOwbW53iI3X2X0XHFzhK *this, const char *a2)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v4 = off_3C02C8;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(void *)(v4 + 160) = 0;
  *((void *)this + 15) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  if (a2)
  {
    if (*a2) {
      *((void *)this + 20) = CFStringCreateWithCString(kCFAllocatorDefault, a2, 0x8000100u);
    }
  }
}

void sub_B6C0(_Unwind_Exception *a1)
{
  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void GR7MfHLOwbW53iI3X2X0XHFzhK::~GR7MfHLOwbW53iI3X2X0XHFzhK(GR7MfHLOwbW53iI3X2X0XHFzhK *this)
{
  *(void *)this = off_3C02C8;
  uint64_t v2 = (const void *)*((void *)this + 15);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 15) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 16);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 16) = 0;
  }
  uint64_t v4 = (const void *)*((void *)this + 17);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 17) = 0;
  }
  id v5 = (const void *)*((void *)this + 18);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 18) = 0;
  }
  uint64_t v6 = (const void *)*((void *)this + 19);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 19) = 0;
  }
  uint64_t v7 = (const void *)*((void *)this + 20);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 20) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  GR7MfHLOwbW53iI3X2X0XHFzhK::~GR7MfHLOwbW53iI3X2X0XHFzhK(this);

  operator delete();
}

void GR7MfHLOwbW53iI3X2X0XHFzhK::StartElement(GR7MfHLOwbW53iI3X2X0XHFzhK *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement((CFMutableArrayRef *)this, a2, a3);
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"EncryptedData"))
  {
    uint64_t v6 = (const void *)*((void *)this + 16);
    if (v6)
    {
      CFRelease(v6);
      *((void *)this + 16) = 0;
    }
    uint64_t v7 = (const void *)*((void *)this + 17);
    if (v7)
    {
      CFRelease(v7);
      *((void *)this + 17) = 0;
    }
    id v8 = (const void *)*((void *)this + 18);
    if (v8)
    {
      CFRelease(v8);
      *((void *)this + 18) = 0;
    }
    uint64_t v9 = (const void *)*((void *)this + 19);
    if (v9)
    {
      CFRelease(v9);
      *((void *)this + 19) = 0;
    }
    CFStringRef Value = CFDictionaryGetValue(a3, @"deenc:compression");
    if (Value || (CFStringRef Value = CFDictionaryGetValue(a3, @"compression")) != 0)
    {
      *((void *)this + 19) = Value;
LABEL_17:
      CFRetain(Value);
    }
  }
  else if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"EncryptionMethod"))
  {
    unint64_t v11 = (const void *)*((void *)this + 16);
    if (v11)
    {
      CFRelease(v11);
      *((void *)this + 16) = 0;
    }
    CFStringRef Value = CFDictionaryGetValue(a3, @"Algorithm");
    *((void *)this + 16) = Value;
    if (Value) {
      goto LABEL_17;
    }
  }
  else
  {
    if (!ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"CipherReference")) {
      return;
    }
    uint64_t v12 = (const void *)*((void *)this + 17);
    if (v12)
    {
      CFRelease(v12);
      *((void *)this + 17) = 0;
    }
    CFStringRef v13 = (const __CFString *)CFDictionaryGetValue(a3, @"URI");
    CFStringRef v15 = ITEpubXmlParseHandler::copyHrefStrippingHash(v13, v14);
    CFStringRef v16 = v15;
    if (*((void *)this + 20))
    {
      Mutable = CFStringCreateMutable(kCFAllocatorDefault, 0);
      CFStringAppend(Mutable, v16);
      v19.length = CFStringGetLength(*((CFStringRef *)this + 20)) + 1;
      v19.location = 0;
      CFStringFindAndReplace(Mutable, *((CFStringRef *)this + 20), &stru_3D7B70, v19, 0);
      *((void *)this + 17) = Mutable;
      if (!v16) {
        return;
      }
    }
    else
    {
      *((void *)this + 17) = v15;
      if (!v15) {
        return;
      }
      CFRetain(v15);
    }
    CFRelease(v16);
  }
}

void GR7MfHLOwbW53iI3X2X0XHFzhK::EndElement(GR7MfHLOwbW53iI3X2X0XHFzhK *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"EncryptedData"))
  {
    if (*((void *)this + 16) && *((void *)this + 17))
    {
      Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
      CFDictionaryAddValue(Mutable, @"encryptionAlgorithm", *((const void **)this + 16));
      id v5 = (const void *)*((void *)this + 18);
      if (v5) {
        CFDictionaryAddValue(Mutable, @"fairplay-id", v5);
      }
      uint64_t v6 = (const void *)*((void *)this + 19);
      if (v6) {
        CFDictionaryAddValue(Mutable, @"compressionAlgorithm", v6);
      }
      CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 15), *((const void **)this + 17), Mutable);
      CFRelease(Mutable);
    }
  }
  else if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"KeyName"))
  {
    uint64_t v7 = (const void *)*((void *)this + 18);
    if (v7)
    {
      CFRelease(v7);
      *((void *)this + 18) = 0;
    }
    id v8 = (char *)this + 72;
    if (*((char *)this + 95) < 0) {
      id v8 = *(const char **)v8;
    }
    *((void *)this + 18) = CFStringCreateWithCString(kCFAllocatorDefault, v8, 0x8000100u);
  }

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

void sub_BCA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_BCB8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_BCC8(uint64_t a1)
{
}

uint64_t sub_BCD0(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [*(id *)(a1[4] + 64) objectForKeyedSubscript:a1[5]];

  return _objc_release_x1();
}

void sub_BE00(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 48) copy];
  [*(id *)(*(void *)(a1 + 32) + 64) setObject:v2 forKeyedSubscript:*(void *)(a1 + 40)];
}

void ITBlissFolder::ITBlissFolder(ITBlissFolder *this, const __CFString *a2, const __CFString *a3)
{
  ITEpubFolder::ITEpubFolder(this, a2, a3);
  void *v3 = &off_3C0378;
}

{
  void *v3;

  ITEpubFolder::ITEpubFolder(this, a2, a3);
  void *v3 = &off_3C0378;
}

BOOL ITBlissFolder::isMimeCorrect(const __CFString **this)
{
  uint64_t v1 = off_409000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409AD8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v7 = (ITBlissFolder *)this;
    int v5 = __cxa_guard_acquire(&qword_409AD8);
    uint64_t v1 = off_409000;
    int v6 = v5;
    this = (const __CFString **)v7;
    if (v6)
    {
      qword_409AD0 = strlen(aApplicationXIb);
      __cxa_guard_release(&qword_409AD8);
      uint64_t v1 = off_409000;
      this = (const __CFString **)v7;
    }
  }
  CFStringRef v2 = this[2];
  uint64_t v3 = (const char *)v1[346];

  return ITEpubFolder::isMimeCorrect(v2, (__CFString *)aApplicationXIb, v3);
}

const __CFString *ITBlissFolder::defaultExtension(ITBlissFolder *this)
{
  return @"ibooks";
}

void sub_C0C4(ITEpubFolder *a1)
{
  ITEpubFolder::~ITEpubFolder(a1);

  operator delete();
}

uint64_t sub_C0FC(uint64_t a1)
{
  return *(void *)(a1 + 328);
}

const void *sub_C104(uint64_t a1)
{
  CFStringRef result = *(const void **)(a1 + 16);
  if (result)
  {
    CFRetain(result);
    return *(const void **)(a1 + 16);
  }
  return result;
}

const void *sub_C134(uint64_t a1)
{
  CFStringRef result = *(const void **)(a1 + 24);
  if (result)
  {
    CFRetain(result);
    return *(const void **)(a1 + 24);
  }
  return result;
}

uint64_t sub_C164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 224) = a2;
  return result;
}

uint64_t __BookContentLayoutControllerLogsLogLevelEnabled()
{
  return 1;
}

void _BookContentLayoutControllerLogsSetLogToLevel(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  int v5 = sub_C23C();
  id v8 = [v5 mutableCopy];

  [v8 setObject:v3 forKeyedSubscript:v4];
  id v6 = [v8 copy];
  uint64_t v7 = +[NSUserDefaults standardUserDefaults];
  [v7 setObject:v6 forKey:@"BookContentLayoutControllerLogs"];
}

id sub_C23C()
{
  v0 = +[NSUserDefaults standardUserDefaults];
  uint64_t v1 = [v0 objectForKey:@"BookContentLayoutControllerLogs"];
  CFStringRef v2 = v1;
  if (!v1) {
    uint64_t v1 = &__NSDictionary0__struct;
  }
  id v3 = v1;

  return v3;
}

id _BookContentLayoutControllerLogsLevelForLog(void *a1)
{
  id v1 = a1;
  CFStringRef v2 = sub_C23C();
  id v3 = [v2 objectForKeyedSubscript:v1];

  return v3;
}

void ITEpubAppleDisplayOptionsParser::ITEpubAppleDisplayOptionsParser(ITEpubAppleDisplayOptionsParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C0460;
  *(_DWORD *)(v1 + 120) = 0;
  *(void *)(v1 + 136) = 0;
  *(void *)(v1 + 144) = 0;
  *(void *)(v1 + 128) = 0;
}

{
  uint64_t v1;

  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C0460;
  *(_DWORD *)(v1 + 120) = 0;
  *(void *)(v1 + 136) = 0;
  *(void *)(v1 + 144) = 0;
  *(void *)(v1 + 128) = 0;
}

void ITEpubAppleDisplayOptionsParser::~ITEpubAppleDisplayOptionsParser(ITEpubAppleDisplayOptionsParser *this)
{
  *(void *)this = off_3C0460;
  CFStringRef v2 = (const void *)*((void *)this + 18);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 18) = 0;
  }
  id v3 = (const void *)*((void *)this + 16);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 16) = 0;
  }
  id v4 = (const void *)*((void *)this + 17);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 17) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubAppleDisplayOptionsParser::~ITEpubAppleDisplayOptionsParser(this);

  operator delete();
}

uint64_t ITEpubAppleDisplayOptionsParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  uint64_t result = ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"display_options");
  if (result)
  {
    *((_DWORD *)this + 30) = 1;
    CFMutableArrayRef v7 = this[18];
    if (v7)
    {
      CFRelease(v7);
      this[18] = 0;
    }
    uint64_t result = (uint64_t)CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    this[18] = (CFMutableArrayRef)result;
  }
  else if (*((_DWORD *)this + 30))
  {
    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"platform"))
    {
      CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"name");
      CFMutableArrayRef v9 = this[16];
      if (v9)
      {
        CFRelease(v9);
        this[16] = 0;
      }
      uint64_t result = CFStringGetLength(Value);
      if (result)
      {
        if (Value) {
          uint64_t result = (uint64_t)CFRetain(Value);
        }
        this[16] = (CFMutableArrayRef)Value;
      }
    }
    else
    {
      uint64_t result = ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"option");
      if (result)
      {
        CFStringRef v10 = (const __CFString *)CFDictionaryGetValue(a3, @"name");
        CFMutableArrayRef v11 = this[17];
        if (v11)
        {
          CFRelease(v11);
          this[17] = 0;
        }
        uint64_t result = CFStringGetLength(v10);
        if (result)
        {
          if (v10) {
            uint64_t result = (uint64_t)CFRetain(v10);
          }
          this[17] = (CFMutableArrayRef)v10;
        }
      }
    }
  }
  return result;
}

void ITEpubAppleDisplayOptionsParser::EndElement(ITEpubAppleDisplayOptionsParser *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"display_options"))
  {
    *((_DWORD *)this + 30) = 0;
    goto LABEL_3;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"platform"))
  {
    id v4 = (const void *)*((void *)this + 16);
    if (v4)
    {
      CFRelease(v4);
      *((void *)this + 16) = 0;
    }
    goto LABEL_3;
  }
  if (!ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"option")) {
    goto LABEL_3;
  }
  int v5 = (char *)this + 72;
  if ((*((char *)this + 95) & 0x80000000) == 0)
  {
    if (!*((unsigned char *)this + 95)) {
      goto LABEL_16;
    }
LABEL_15:
    CFStringRef v6 = CFStringCreateWithCString(kCFAllocatorDefault, v5, 0x8000100u);
    goto LABEL_17;
  }
  if (*((void *)this + 10))
  {
    int v5 = *(const char **)v5;
    goto LABEL_15;
  }
LABEL_16:
  CFStringRef v6 = 0;
LABEL_17:
  if (*((_DWORD *)this + 30))
  {
    CFMutableArrayRef v7 = (const void *)*((void *)this + 16);
    if (v7)
    {
      if (*((void *)this + 17) && v6)
      {
        CFStringRef Value = (void *)CFDictionaryGetValue(*((CFDictionaryRef *)this + 18), v7);
        if (!Value)
        {
          CFStringRef Value = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
          CFDictionarySetValue(*((CFMutableDictionaryRef *)this + 18), *((const void **)this + 16), Value);
          CFRelease(Value);
        }
        CFDictionarySetValue((CFMutableDictionaryRef)Value, *((const void **)this + 17), v6);
      }
    }
  }
  CFMutableArrayRef v9 = (const void *)*((void *)this + 17);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 17) = 0;
  }
  if (v6) {
    CFRelease(v6);
  }
LABEL_3:

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

const __CFDictionary *ITEpubAppleDisplayOptionsParser::platformOptions(uint64_t a1, int a2)
{
  CFDictionaryRef result = *(const __CFDictionary **)(a1 + 144);
  if (result)
  {
    if (a2 == 2)
    {
      CFDictionaryRef result = (const __CFDictionary *)CFDictionaryGetValue(result, @"iphone");
      if (result) {
        return result;
      }
      CFDictionaryRef result = *(const __CFDictionary **)(a1 + 144);
      CFStringRef v4 = @"iPhone";
    }
    else if (a2 == 1)
    {
      CFDictionaryRef result = (const __CFDictionary *)CFDictionaryGetValue(result, @"ipad");
      if (result) {
        return result;
      }
      CFDictionaryRef result = *(const __CFDictionary **)(a1 + 144);
      CFStringRef v4 = @"iPad";
    }
    else
    {
      if (a2) {
        return 0;
      }
      CFStringRef v4 = @"*";
    }
    return (const __CFDictionary *)CFDictionaryGetValue(result, v4);
  }
  return result;
}

void sub_CFB4(uint64_t a1)
{
  CFStringRef v2 = _BookEPUBLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) styleManager];
    CFStringRef v4 = [v3 font];
    int v8 = 138543362;
    CFMutableArrayRef v9 = v4;
    _os_log_impl(&def_7BFC0, v2, OS_LOG_TYPE_DEFAULT, "Attempting deferred #fontReg of #fontFamily '%{public}@'", (uint8_t *)&v8, 0xCu);
  }
  [*(id *)(a1 + 40) be_willProcessDeferredFontRegistration];
  int v5 = *(void **)(a1 + 40);
  CFStringRef v6 = [*(id *)(a1 + 32) styleManager];
  CFMutableArrayRef v7 = [*(id *)(a1 + 32) fontRegistrationHandler];
  [v5 be_configureFontWithStyleManager:v6 completion:v7];
}

id sub_D2F8(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) be_fontRegistrationCompleted:a2];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  [*(id *)(a1 + 32) setAttemptingFontRegistration:0];
  id v3 = *(void **)(a1 + 32);

  return [v3 be_processPendingFontRegistration];
}

void sub_D8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_D928(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  int v5 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_12;
  }
  CFStringRef v6 = [WeakRetained fontsAttemptingRegistration];
  [v6 removeObject:*(void *)(a1 + 32)];

  CFMutableArrayRef v7 = _BookEPUBLog();
  int v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v15 = 138543362;
      uint64_t v16 = v9;
      _os_log_impl(&def_7BFC0, v8, OS_LOG_TYPE_DEFAULT, "Success #fontReg #fontFamily '%{public}@'", (uint8_t *)&v15, 0xCu);
    }

    CFStringRef v10 = [v5 registeredFonts];
    [v10 addObject:*(void *)(a1 + 32)];

    [v5 be_fontFamilySuccessfullyRegistered:*(void *)(a1 + 32)];
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
    {
      CFMutableArrayRef v11 = _BookEPUBLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v15 = 138543362;
        uint64_t v16 = v12;
        _os_log_impl(&def_7BFC0, v11, OS_LOG_TYPE_ERROR, "Skipping #fontReg Completion due to timeout for #fontFamily '%{public}@'", (uint8_t *)&v15, 0xCu);
      }

      goto LABEL_14;
    }
    CFStringRef v14 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
LABEL_13:
    v14();
    goto LABEL_14;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    int v15 = 138543362;
    uint64_t v16 = v13;
    _os_log_impl(&def_7BFC0, v8, OS_LOG_TYPE_ERROR, "Failure #fontReg #fontFamily '%{public}@'", (uint8_t *)&v15, 0xCu);
  }

  [v5 be_fontFamilyFailedToRegister:*(void *)(a1 + 32)];
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
LABEL_12:
    CFStringRef v14 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    goto LABEL_13;
  }
LABEL_14:
}

void sub_F0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_F120(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    int v5 = _BookEPUBLog();
    CFStringRef v6 = v5;
    if (a2)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        int v12 = 138543362;
        uint64_t v13 = v7;
        int v8 = "Success ThemePreview #fontReg #fontFamily '%{public}@'";
        uint64_t v9 = v6;
        os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
LABEL_7:
        _os_log_impl(&def_7BFC0, v9, v10, v8, (uint8_t *)&v12, 0xCu);
      }
    }
    else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138543362;
      uint64_t v13 = v11;
      int v8 = "Failure ThemePreview #fontReg #fontFamily '%{public}@'";
      uint64_t v9 = v6;
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
      goto LABEL_7;
    }
  }
}

UIColor *__cdecl sub_F2C8(id a1, UITraitCollection *a2)
{
  CFStringRef v2 = a2;
  id v3 = +[UIColor systemBlueColor];
  CFStringRef v4 = [(UITraitCollection *)v2 userInterfaceStyle];

  if (v4 == (unsigned char *)&def_7BFC0 + 2)
  {
    uint64_t v5 = +[UIColor colorWithRed:0.274509804 green:0.576470588 blue:1.0 alpha:1.0];

    id v3 = (void *)v5;
  }

  return (UIColor *)v3;
}

id sub_F43C(uint64_t a1)
{
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)_BEFixedLayoutWKWebView;
  [super setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  return [*(id *)(a1 + 32) be_applyViewportArgumentsIfNeeded];
}

void sub_FD90(id a1)
{
  qword_409AE0 = (uint64_t)NSClassFromString(@"_UIPageViewControllerContentView");
}

void sub_FDE0(id a1)
{
  uint64_t v1 = +[UIView bepageCurlViewClass];
  if (v1) {
    BESwizzleInstanceMethods(v1, "pointInside:withEvent:", "be_curlContentViewPointInside:withEvent:");
  }

  +[_UIPageCurl be_swizzlePageCurlFilter];
}

void sub_FE68(id a1)
{
  uint64_t v1 = (objc_class *)objc_opt_class();
  BESwizzleInstanceMethods(v1, "_newCurlFilter", "bepageCurlHack_newFilter");

  BESwizzleInstanceMethods(v1, "_newAnimationForState:withKeyPath:duration:fromValue:", "bepageCurlHack_newAnimationForState:withKeyPath:duration:fromValue:");
}

void sub_10100(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v18 = [v16 defaults:v17];
  CFRange v19 = (void *)v16[8];
  v16[8] = v18;
}

void sub_1019C(id a1)
{
  qword_409B00 = objc_alloc_init(BEPageCurlConfig);

  _objc_release_x1();
}

id _BookEPUBLog()
{
  if (qword_409B18 != -1) {
    dispatch_once(&qword_409B18, &stru_3C06B0);
  }
  v0 = (void *)qword_409B10;

  return v0;
}

void sub_10574(id a1)
{
  qword_409B10 = (uint64_t)os_log_create("com.apple.iBooks", "BookEPUB");

  _objc_release_x1();
}

uint64_t ITStrUtil::toString(CFStringRef theString, uint64_t a2)
{
  if ((*(char *)(a2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 23) = 0;
    if (theString) {
      goto LABEL_3;
    }
    return 0;
  }
  **(unsigned char **)a2 = 0;
  *(void *)(a2 + 8) = 0;
  if (!theString) {
    return 0;
  }
LABEL_3:
  CFIndex Length = CFStringGetLength(theString);
  CFIndex v5 = 5 * Length;
  if ((unint64_t)(5 * Length) < 0x101)
  {
    CFStringRef v6 = v9;
    CFIndex v5 = 256;
  }
  else
  {
    CFStringRef v6 = (std::string::value_type *)malloc_type_malloc(5 * Length, 0x7768EFB5uLL);
    if (!v6) {
      return 1;
    }
  }
  if (CFStringGetCString(theString, v6, v5, 0x8000100u))
  {
    std::string::assign((std::string *)a2, v6);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  if (v6 != v9) {
    free(v6);
  }
  return v7;
}

std::string *ITStrUtil::trim(std::string *a1, char *__s)
{
  if (!__s || (objc_super v3 = __s, !*__s)) {
    objc_super v3 = "\t \r\n";
  }
  int v4 = SHIBYTE(a1->__r_.__value_.__r.__words[2]);
  CFIndex v5 = (unsigned char *)a1->__r_.__value_.__r.__words[0];
  if (v4 >= 0) {
    CFStringRef v6 = a1;
  }
  else {
    CFStringRef v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (v4 >= 0) {
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
  }
  CFDictionaryRef result = (std::string *)strlen(v3);
  size_t v9 = (size_t)result;
  os_log_type_t v10 = (char *)&v6[-1].__r_.__value_.__s + 23;
  do
  {
    if (!size)
    {
      if (v4 < 0)
      {
        *CFIndex v5 = 0;
        a1->__r_.__value_.__l.__size_ = 0;
      }
      else
      {
        a1->__r_.__value_.__s.__data_[0] = 0;
        *((unsigned char *)&a1->__r_.__value_.__s + 23) = 0;
      }
      return result;
    }
    std::string::size_type v11 = size;
    if (!v9) {
      break;
    }
    CFDictionaryRef result = (std::string *)memchr(v3, (char)v10[size--], v9);
  }
  while (result);
  std::string::erase(a1, v11, 0xFFFFFFFFFFFFFFFFLL);
  int v12 = SHIBYTE(a1->__r_.__value_.__r.__words[2]);
  if (v12 >= 0) {
    uint64_t v13 = a1;
  }
  else {
    uint64_t v13 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (v12 >= 0) {
    std::string::size_type v14 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = a1->__r_.__value_.__l.__size_;
  }
  CFDictionaryRef result = (std::string *)strlen(v3);
  if (v14)
  {
    int v15 = v13;
    size_t v16 = (size_t)result;
    if (result)
    {
      while (1)
      {
        CFDictionaryRef result = (std::string *)memchr(v3, v15->__r_.__value_.__s.__data_[0], v16);
        if (!result) {
          break;
        }
        int v15 = (std::string *)((char *)v15 + 1);
        if (!--v14) {
          return result;
        }
      }
    }
    if ((char *)v15 - (char *)v13 != -1)
    {
      return std::string::erase(a1, 0, (char *)v15 - (char *)v13);
    }
  }
  return result;
}

void ITEpubMediaOverlayParser::ITEpubMediaOverlayParser(ITEpubMediaOverlayParser *this, const char *a2)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v3 = off_3C06E0;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 168) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(_OWORD *)(v3 + 216) = 0u;
  *(_OWORD *)(v3 + 232) = 0u;
  *(void *)(v3 + 248) = 0;
  if (a2)
  {
    if (*a2) {
      *(void *)(v3 + 120) = CFStringCreateWithCString(kCFAllocatorDefault, a2, 0x8000100u);
    }
  }
}

void sub_10CFC(_Unwind_Exception *a1)
{
  CFIndex v5 = (void *)*((void *)v1 + 29);
  if (v5)
  {
    *((void *)v1 + 30) = v5;
    operator delete(v5);
  }
  sub_2FAFD0(v3, v2, (uint64_t)v1);
  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void ITEpubMediaOverlayParser::~ITEpubMediaOverlayParser(ITEpubMediaOverlayParser *this)
{
  *(void *)this = off_3C06E0;
  CFStringRef v2 = (const void *)*((void *)this + 15);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 15) = 0;
  }
  ITEpubMediaOverlayParser::clearBodyMemory((const void ***)this);
  int v4 = (CFTypeRef *)*((void *)this + 29);
  CFIndex v5 = (CFTypeRef *)*((void *)this + 30);
  if (v4 != v5)
  {
    do
      ITRetain::for_each_cfrelease(*v4++, v3);
    while (v4 != v5);
    int v4 = (CFTypeRef *)*((void *)this + 29);
  }
  *((void *)this + 30) = v4;
  if (v4) {
    operator delete(v4);
  }
  CFStringRef v6 = (void *)*((void *)this + 26);
  if (v6)
  {
    *((void *)this + 27) = v6;
    operator delete(v6);
  }
  uint64_t v7 = (void *)*((void *)this + 23);
  if (v7)
  {
    *((void *)this + 24) = v7;
    operator delete(v7);
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubMediaOverlayParser::~ITEpubMediaOverlayParser(this);

  operator delete();
}

void ITEpubMediaOverlayParser::clearBodyMemory(const void ***this)
{
  ITEpubMediaOverlayParser::clearParMemory((ITEpubMediaOverlayParser *)this);
  uint64_t v3 = this[23];
  int v4 = this[24];
  while (v3 != v4)
  {
    CFIndex v5 = *v3++;
    ITRetain::for_each_cfrelease(v5, v2);
  }
  CFStringRef v6 = this[26];
  uint64_t v7 = this[27];
  if (v6 != v7)
  {
    do
    {
      int v8 = *v6++;
      ITRetain::for_each_cfrelease(v8, v2);
    }
    while (v6 != v7);
    CFStringRef v6 = this[26];
  }
  this[24] = this[23];
  this[27] = v6;
}

void ITEpubMediaOverlayParser::clearParMemory(ITEpubMediaOverlayParser *this)
{
  *((_DWORD *)this + 33) = 0;
  CFStringRef v2 = (const void *)*((void *)this + 18);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 18) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 17);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 17) = 0;
  }
  int v4 = (const void *)*((void *)this + 19);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 19) = 0;
  }
  CFIndex v5 = (const void *)*((void *)this + 20);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 20) = 0;
  }
  CFStringRef v6 = (const void *)*((void *)this + 21);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 21) = 0;
  }
  uint64_t v7 = (const void *)*((void *)this + 22);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 22) = 0;
  }
}

void ITEpubMediaOverlayParser::clearSeqMemory(ITEpubMediaOverlayParser *this)
{
  uint64_t v2 = *((void *)this + 24);
  if (v2 != *((void *)this + 23))
  {
    CFRelease(*(CFTypeRef *)(v2 - 8));
    *((void *)this + 24) -= 8;
  }
  uint64_t v3 = *((void *)this + 27);
  if (v3 != *((void *)this + 26))
  {
    CFRelease(*(CFTypeRef *)(v3 - 8));
    *((void *)this + 27) -= 8;
  }
}

void ITEpubMediaOverlayParser::handleSeqElementAttributes(ITEpubMediaOverlayParser *this, CFDictionaryRef theDict)
{
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"epub:textref");
  CFStringRef v5 = (const __CFString *)CFDictionaryGetValue(theDict, @"epub:type");
  if (!Value) {
    CFStringRef Value = &stru_3D7B70;
  }
  if (!v5 || (CFStringRef v6 = v5, !CFStringGetLength(v5)))
  {
    uint64_t v7 = *((void *)this + 27);
    if (v7 == *((void *)this + 26)) {
      CFStringRef v6 = &stru_3D7B70;
    }
    else {
      CFStringRef v6 = *(const __CFString **)(v7 - 8);
    }
  }
  CFRetain(Value);
  unint64_t v8 = *((void *)this + 25);
  size_t v9 = (const __CFString **)*((void *)this + 24);
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v11 = *((void *)this + 23);
    uint64_t v12 = ((uint64_t)v9 - v11) >> 3;
    if ((unint64_t)(v12 + 1) >> 61) {
      sub_9E38();
    }
    uint64_t v13 = v8 - v11;
    uint64_t v14 = v13 >> 2;
    if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
      uint64_t v14 = v12 + 1;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15) {
      size_t v16 = (char *)sub_9EE0((uint64_t)this + 200, v15);
    }
    else {
      size_t v16 = 0;
    }
    long long v17 = (const __CFString **)&v16[8 * v12];
    uint64_t v18 = &v16[8 * v15];
    *long long v17 = Value;
    os_log_type_t v10 = v17 + 1;
    v20 = (char *)*((void *)this + 23);
    CFRange v19 = (char *)*((void *)this + 24);
    if (v19 != v20)
    {
      do
      {
        CFStringRef v21 = (const __CFString *)*((void *)v19 - 1);
        v19 -= 8;
        *--long long v17 = v21;
      }
      while (v19 != v20);
      CFRange v19 = (char *)*((void *)this + 23);
    }
    *((void *)this + 23) = v17;
    *((void *)this + 24) = v10;
    *((void *)this + 25) = v18;
    if (v19) {
      operator delete(v19);
    }
  }
  else
  {
    NSObject *v9 = Value;
    os_log_type_t v10 = v9 + 1;
  }
  *((void *)this + 24) = v10;
  CFRetain(v6);
  unint64_t v22 = *((void *)this + 28);
  v23 = (const __CFString **)*((void *)this + 27);
  if ((unint64_t)v23 >= v22)
  {
    uint64_t v25 = *((void *)this + 26);
    uint64_t v26 = ((uint64_t)v23 - v25) >> 3;
    if ((unint64_t)(v26 + 1) >> 61) {
      sub_9E38();
    }
    uint64_t v27 = v22 - v25;
    uint64_t v28 = v27 >> 2;
    if (v27 >> 2 <= (unint64_t)(v26 + 1)) {
      uint64_t v28 = v26 + 1;
    }
    if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v29 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v29 = v28;
    }
    if (v29) {
      v30 = (char *)sub_9EE0((uint64_t)this + 224, v29);
    }
    else {
      v30 = 0;
    }
    v31 = (const __CFString **)&v30[8 * v26];
    v32 = &v30[8 * v29];
    *v31 = v6;
    v24 = v31 + 1;
    v34 = (char *)*((void *)this + 26);
    v33 = (char *)*((void *)this + 27);
    if (v33 != v34)
    {
      do
      {
        CFStringRef v35 = (const __CFString *)*((void *)v33 - 1);
        v33 -= 8;
        *--v31 = v35;
      }
      while (v33 != v34);
      v33 = (char *)*((void *)this + 26);
    }
    *((void *)this + 26) = v31;
    *((void *)this + 27) = v24;
    *((void *)this + 28) = v32;
    if (v33) {
      operator delete(v33);
    }
  }
  else
  {
    *v23 = v6;
    v24 = v23 + 1;
  }
  *((void *)this + 27) = v24;
}

CFTypeRef ITEpubMediaOverlayParser::handleParElementAttributes(ITEpubMediaOverlayParser *this, CFDictionaryRef theDict)
{
  *((_DWORD *)this + 33) = 1;
  int v4 = (const void *)*((void *)this + 18);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 18) = 0;
  }
  CFStringRef Value = CFDictionaryGetValue(theDict, @"epub:type");
  *((void *)this + 18) = Value;
  if (Value) {
    CFRetain(Value);
  }
  CFStringRef v6 = (const void *)*((void *)this + 17);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 17) = 0;
  }
  CFTypeRef result = CFDictionaryGetValue(theDict, @"id");
  *((void *)this + 17) = result;
  if (result)
  {
    return CFRetain(result);
  }
  return result;
}

CFTypeRef ITEpubMediaOverlayParser::handleTextElementAttributes(ITEpubMediaOverlayParser *this, CFDictionaryRef theDict)
{
  int v4 = (const void *)*((void *)this + 19);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 19) = 0;
  }
  CFTypeRef result = CFDictionaryGetValue(theDict, @"src");
  *((void *)this + 19) = result;
  if (result)
  {
    return CFRetain(result);
  }
  return result;
}

CFTypeRef ITEpubMediaOverlayParser::handleAudioElementAttributes(ITEpubMediaOverlayParser *this, CFDictionaryRef theDict)
{
  int v4 = (const void *)*((void *)this + 20);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 20) = 0;
  }
  CFStringRef Value = CFDictionaryGetValue(theDict, @"src");
  *((void *)this + 20) = Value;
  if (Value) {
    CFRetain(Value);
  }
  CFStringRef v6 = (const void *)*((void *)this + 21);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 21) = 0;
  }
  uint64_t v7 = CFDictionaryGetValue(theDict, @"clipBegin");
  *((void *)this + 21) = v7;
  if (v7) {
    CFRetain(v7);
  }
  unint64_t v8 = (const void *)*((void *)this + 22);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 22) = 0;
  }
  CFTypeRef result = CFDictionaryGetValue(theDict, @"clipEnd");
  *((void *)this + 22) = result;
  if (result)
  {
    return CFRetain(result);
  }
  return result;
}

void ITEpubMediaOverlayParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"body"))
  {
    *((_DWORD *)this + 32) = 1;
  }
  else if (*((_DWORD *)this + 32))
  {
    if (*((_DWORD *)this + 33))
    {
      if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"text"))
      {
        ITEpubMediaOverlayParser::handleTextElementAttributes((ITEpubMediaOverlayParser *)this, a3);
      }
      else if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"audio"))
      {
        ITEpubMediaOverlayParser::handleAudioElementAttributes((ITEpubMediaOverlayParser *)this, a3);
      }
    }
    else if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"par"))
    {
      ITEpubMediaOverlayParser::handleParElementAttributes((ITEpubMediaOverlayParser *)this, a3);
    }
    else if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"seq"))
    {
      ITEpubMediaOverlayParser::handleSeqElementAttributes((ITEpubMediaOverlayParser *)this, a3);
    }
  }
}

double ITEpubMediaOverlayParser::convertTimeString(ITEpubMediaOverlayParser *this, CFStringRef theString)
{
  CFIndex Length = CFStringGetLength(theString);
  if (CFStringHasSuffix(theString, @"ms"))
  {
    v39.length = Length - 2;
    v39.location = 0;
    CFStringRef v4 = CFStringCreateWithSubstring(kCFAllocatorDefault, theString, v39);
    DoubleCFStringRef Value = CFStringGetDoubleValue(v4) / 1000.0;
    if (!v4) {
      return DoubleValue;
    }
    goto LABEL_12;
  }
  if (CFStringHasSuffix(theString, @"s"))
  {
    v40.length = Length - 1;
    v40.location = 0;
    CFStringRef v4 = CFStringCreateWithSubstring(kCFAllocatorDefault, theString, v40);
    DoubleCFStringRef Value = CFStringGetDoubleValue(v4);
    if (!v4) {
      return DoubleValue;
    }
    goto LABEL_12;
  }
  if (CFStringHasSuffix(theString, @"min"))
  {
    v41.length = Length - 3;
    v41.location = 0;
    CFStringRef v4 = CFStringCreateWithSubstring(kCFAllocatorDefault, theString, v41);
    double v6 = CFStringGetDoubleValue(v4);
    double v7 = 60.0;
    goto LABEL_11;
  }
  if (CFStringHasSuffix(theString, @"h"))
  {
    v42.length = Length - 1;
    v42.location = 0;
    CFStringRef v4 = CFStringCreateWithSubstring(kCFAllocatorDefault, theString, v42);
    double v6 = CFStringGetDoubleValue(v4);
    double v7 = 3600.0;
LABEL_11:
    DoubleCFStringRef Value = v6 * v7;
    if (!v4) {
      return DoubleValue;
    }
LABEL_12:
    CFRelease(v4);
    return DoubleValue;
  }
  CFStringRef theStringa = theString;
  uint64_t v34 = 0;
  CFIndex v35 = Length;
  CharactersPtr = CFStringGetCharactersPtr(theString);
  CStringPtr = 0;
  v32 = CharactersPtr;
  if (!CharactersPtr) {
    CStringPtr = CFStringGetCStringPtr(theString, 0x600u);
  }
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = 0;
  int v14 = 0;
  int64_t v15 = 0;
  UniChar v16 = 0;
  int64_t v36 = 0;
  int64_t v37 = 0;
  v33 = CStringPtr;
  while (1)
  {
    CFIndex v17 = v35;
    if (v35 <= v15) {
      break;
    }
    if (v32)
    {
      UniChar v18 = v32[v34 + v15];
    }
    else if (v33)
    {
      UniChar v18 = v33[v34 + v15];
    }
    else
    {
      if (v37 <= v15 || v11 > v15)
      {
        int64_t v20 = v15 - 4;
        if ((unint64_t)v15 < 4) {
          int64_t v20 = 0;
        }
        if (v20 + 64 < v35) {
          CFIndex v17 = v20 + 64;
        }
        int64_t v36 = v20;
        int64_t v37 = v17;
        v38.location = v34 + v20;
        v38.length = v17 - v20;
        CFStringGetCharacters(theStringa, v38, v30);
        int64_t v11 = v36;
      }
      UniChar v18 = v30[v15 - v11];
    }
    ++v15;
    if (v18 <= 0x3Au && ((1 << v18) & 0x400400000000001) != 0) {
      goto LABEL_37;
    }
    if ((unsigned __int16)(v18 - 48) > 9u)
    {
LABEL_44:
      if (v12) {
        uint64_t v22 = 1000 * v12;
      }
      else {
        uint64_t v22 = 0;
      }
      return (double)(unint64_t)v22 / 1000.0;
    }
    int v13 = v18 + 10 * v13 - 48;
    ++v14;
LABEL_40:
    if (!v18) {
      goto LABEL_44;
    }
  }
  UniChar v18 = 0;
  ++v15;
LABEL_37:
  if (!v16 || v16 == 58)
  {
    int v14 = 0;
    uint64_t v12 = 60 * v12 + v13;
    UniChar v16 = v18;
    int v13 = 0;
    goto LABEL_40;
  }
  if (v14 < 4)
  {
    if (v14 != 3)
    {
      int v24 = 0;
      uint32x4_t v25 = (uint32x4_t)vdupq_n_s32(2 - v14);
      v26.i64[1] = 0x100000001;
      v26.i64[0] = v13 | 0x100000000;
      v27.i64[0] = 0xA0000000ALL;
      v27.i64[1] = 0xA0000000ALL;
      do
      {
        int8x16_t v28 = (int8x16_t)v26;
        int32x4_t v26 = vmulq_s32(v26, v27);
        v24 += 4;
      }
      while (((6 - v14) & 0xFFFFFFFC) != v24);
      int8x16_t v29 = vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vorrq_s8((int8x16_t)vdupq_n_s32(v24 - 4), (int8x16_t)xmmword_32AB40), v25), v28, (int8x16_t)v26);
      *(int32x2_t *)v29.i8 = vmul_s32(*(int32x2_t *)v29.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL));
      int v13 = v29.i32[0] * v29.i32[1];
    }
  }
  else
  {
    unsigned int v23 = v14 + 1;
    do
    {
      v13 /= 10;
      --v23;
    }
    while (v23 > 4);
  }
  uint64_t v22 = 1000 * v12 + v13;
  return (double)(unint64_t)v22 / 1000.0;
}

void ITEpubMediaOverlayParser::splitString(uint64_t a1, const __CFString *a2, const __CFString *a3, void *a4)
{
  *a4 = 0;
  a4[1] = 0;
  CFArrayRef ArrayBySeparatingStrings = CFStringCreateArrayBySeparatingStrings(kCFAllocatorDefault, a2, a3);
  if (ArrayBySeparatingStrings)
  {
    CFArrayRef v6 = ArrayBySeparatingStrings;
    CFIndex Count = CFArrayGetCount(ArrayBySeparatingStrings);
    if (Count >= 1)
    {
      CFIndex v8 = Count;
      ValueAtIndeCGFloat x = CFArrayGetValueAtIndex(v6, 0);
      CFRetain(ValueAtIndex);
      *a4 = ValueAtIndex;
      if (v8 != 1)
      {
        os_log_type_t v10 = CFArrayGetValueAtIndex(v6, 1);
        CFRetain(v10);
        a4[1] = v10;
      }
    }
    CFRelease(v6);
  }
}

void ITEpubMediaOverlayParser::EndElement(ITEpubMediaOverlayParser *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"body"))
  {
    *((_DWORD *)this + 32) = 0;
    ITEpubMediaOverlayParser::clearBodyMemory((const void ***)this);
    goto LABEL_3;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"par") && *((_DWORD *)this + 33))
  {
    if (!*((void *)this + 19))
    {
LABEL_48:
      ITEpubMediaOverlayParser::clearParMemory(this);
      goto LABEL_3;
    }
    Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_TextSource[0], *((const void **)this + 19));
    *(double *)&value = 0.0;
    CFRange v38 = 0;
    ITEpubMediaOverlayParser::splitString(v5, *((const __CFString **)this + 19), @"#", &value);
    CFArrayRef v6 = value;
    if (*(double *)&value != 0.0)
    {
      CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_TextHref[0], value);
      CFRelease(v6);
    }
    double v7 = v38;
    if (v38)
    {
      CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_TextElement[0], v38);
      CFRelease(v7);
    }
    CFIndex v8 = (const void *)*((void *)this + 20);
    if (v8)
    {
      CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_AudioSource[0], v8);
      CFStringRef v10 = (const __CFString *)*((void *)this + 21);
      if (v10)
      {
        *(double *)&value = ITEpubMediaOverlayParser::convertTimeString(v9, v10);
        if (*(double *)&value != 0.0)
        {
          CFNumberRef v11 = CFNumberCreate(kCFAllocatorDefault, kCFNumberDoubleType, &value);
          CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_AudioStart[0], v11);
          CFRelease(v11);
        }
      }
      CFStringRef v12 = (const __CFString *)*((void *)this + 22);
      if (v12)
      {
        *(double *)&value = ITEpubMediaOverlayParser::convertTimeString(v9, v12);
        if (*(double *)&value != 0.0)
        {
          CFNumberRef v13 = CFNumberCreate(kCFAllocatorDefault, kCFNumberDoubleType, &value);
          CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_AudioEnd[0], v13);
          CFRelease(v13);
        }
      }
    }
    uint64_t v14 = *((void *)this + 24) - *((void *)this + 23);
    value = (void *)(v14 >> 3);
    if (v14)
    {
      CFNumberRef v15 = CFNumberCreate(kCFAllocatorDefault, kCFNumberLongLongType, &value);
      CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_IndentationLevel[0], v15);
      CFRelease(v15);
      CFStringRef v16 = *(const __CFString **)(*((void *)this + 24) - 8);
      if (CFStringGetLength(v16)) {
        CFDictionaryAddValue(Mutable, ITEpubMediaOverlayParser_SequenceSource[0], v16);
      }
    }
    CFIndex v17 = (const void *)*((void *)this + 17);
    if (v17) {
      CFDictionaryAddValue(Mutable, @"par_id", v17);
    }
    CFStringRef v18 = (const __CFString *)*((void *)this + 18);
    if (v18)
    {
      CFRange v19 = ITEpubMediaOverlayParser_Category[0];
      int64_t v20 = Mutable;
    }
    else
    {
      uint64_t v30 = *((void *)this + 27);
      if (v30 == *((void *)this + 26)) {
        goto LABEL_26;
      }
      CFStringRef v31 = *(const __CFString **)(v30 - 8);
      if (!CFStringGetLength(v31)) {
        goto LABEL_26;
      }
      CFRange v19 = ITEpubMediaOverlayParser_Category[0];
      int64_t v20 = Mutable;
      CFStringRef v18 = v31;
    }
    CFDictionaryAddValue(v20, v19, v18);
LABEL_26:
    unint64_t v21 = *((void *)this + 31);
    uint64_t v22 = (__CFDictionary **)*((void *)this + 30);
    if ((unint64_t)v22 >= v21)
    {
      uint64_t v24 = *((void *)this + 29);
      uint64_t v25 = ((uint64_t)v22 - v24) >> 3;
      if ((unint64_t)(v25 + 1) >> 61) {
        sub_9E38();
      }
      uint64_t v26 = v21 - v24;
      uint64_t v27 = v26 >> 2;
      if (v26 >> 2 <= (unint64_t)(v25 + 1)) {
        uint64_t v27 = v25 + 1;
      }
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v28 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v28 = v27;
      }
      if (v28) {
        int8x16_t v29 = (char *)sub_9EE0((uint64_t)this + 248, v28);
      }
      else {
        int8x16_t v29 = 0;
      }
      v32 = (__CFDictionary **)&v29[8 * v25];
      v33 = &v29[8 * v28];
      const UniChar *v32 = Mutable;
      unsigned int v23 = v32 + 1;
      CFIndex v35 = (char *)*((void *)this + 29);
      uint64_t v34 = (char *)*((void *)this + 30);
      if (v34 != v35)
      {
        do
        {
          int64_t v36 = (__CFDictionary *)*((void *)v34 - 1);
          v34 -= 8;
          *--v32 = v36;
        }
        while (v34 != v35);
        uint64_t v34 = (char *)*((void *)this + 29);
      }
      *((void *)this + 29) = v32;
      *((void *)this + 30) = v23;
      *((void *)this + 31) = v33;
      if (v34) {
        operator delete(v34);
      }
    }
    else
    {
      *uint64_t v22 = Mutable;
      unsigned int v23 = v22 + 1;
    }
    *((void *)this + 30) = v23;
    goto LABEL_48;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"seq")) {
    ITEpubMediaOverlayParser::clearSeqMemory(this);
  }
LABEL_3:
  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

const __CFDictionary *ITEpubMediaOverlayParser::textSourceForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_TextSource[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::textHrefForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_TextHref[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::textElementIdForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_TextElement[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::audioHrefForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_AudioSource[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::audioEndForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_AudioEnd[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::audioStartForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_AudioStart[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::indentationLevelForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_IndentationLevel[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::sequenceSourceForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_SequenceSource[0]);
  }
  return this;
}

const __CFDictionary *ITEpubMediaOverlayParser::categoryForElement(const __CFDictionary *this, const __CFDictionary *a2)
{
  if (this) {
    return (const __CFDictionary *)CFDictionaryGetValue(this, ITEpubMediaOverlayParser_Category[0]);
  }
  return this;
}

BOOL BEIsHardwareKeyboardAttached()
{
  return GSEventIsHardwareKeyboardAttached() != 0;
}

void ITEpubOpfParser::ITEpubOpfParser(ITEpubOpfParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C0740;
  *(unsigned char *)(v1 + 412) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_DWORD *)(v1 + 407) = 0;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
  *(_OWORD *)(v1 + 296) = 0u;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(_OWORD *)(v1 + 344) = 0u;
  *(_OWORD *)(v1 + 360) = 0u;
  *(_OWORD *)(v1 + 376) = 0u;
  *(_OWORD *)(v1 + 392) = 0u;
  *(unsigned char *)(v1 + 464) = 0;
  *(_OWORD *)(v1 + 432) = 0u;
  *(_OWORD *)(v1 + 448) = 0u;
  *(_OWORD *)(v1 + 416) = 0u;
  *(_OWORD *)(v1 + 472) = 0u;
  *(_OWORD *)(v1 + 488) = 0u;
  *(_OWORD *)(v1 + 504) = 0u;
  *(_OWORD *)(v1 + 520) = 0u;
  *(_OWORD *)(v1 + 536) = 0u;
  *(_OWORD *)(v1 + 552) = 0u;
  *(_OWORD *)(v1 + 568) = 0u;
  *(_OWORD *)(v1 + 584) = 0u;
  *(_OWORD *)(v1 + 596) = 0u;
  *(_DWORD *)(v1 + 616) = -1;
  *(_DWORD *)(v1 + 624) = 0;
  *(void *)(v1 + 632) = 0;
  *(void *)(v1 + 648) = 0;
  *(void *)(v1 + 640) = 0;
}

{
  uint64_t v1;

  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C0740;
  *(unsigned char *)(v1 + 412) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_DWORD *)(v1 + 407) = 0;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
  *(_OWORD *)(v1 + 296) = 0u;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(_OWORD *)(v1 + 344) = 0u;
  *(_OWORD *)(v1 + 360) = 0u;
  *(_OWORD *)(v1 + 376) = 0u;
  *(_OWORD *)(v1 + 392) = 0u;
  *(unsigned char *)(v1 + 464) = 0;
  *(_OWORD *)(v1 + 432) = 0u;
  *(_OWORD *)(v1 + 448) = 0u;
  *(_OWORD *)(v1 + 416) = 0u;
  *(_OWORD *)(v1 + 472) = 0u;
  *(_OWORD *)(v1 + 488) = 0u;
  *(_OWORD *)(v1 + 504) = 0u;
  *(_OWORD *)(v1 + 520) = 0u;
  *(_OWORD *)(v1 + 536) = 0u;
  *(_OWORD *)(v1 + 552) = 0u;
  *(_OWORD *)(v1 + 568) = 0u;
  *(_OWORD *)(v1 + 584) = 0u;
  *(_OWORD *)(v1 + 596) = 0u;
  *(_DWORD *)(v1 + 616) = -1;
  *(_DWORD *)(v1 + 624) = 0;
  *(void *)(v1 + 632) = 0;
  *(void *)(v1 + 648) = 0;
  *(void *)(v1 + 640) = 0;
}

void ITEpubOpfParser::~ITEpubOpfParser(ITEpubOpfParser *this, const void *a2)
{
  *(void *)this = off_3C0740;
  uint64_t v3 = (const void *)*((void *)this + 39);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 39) = 0;
  }
  CFStringRef v4 = (const void *)*((void *)this + 40);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 40) = 0;
  }
  uint64_t v5 = (const void *)*((void *)this + 41);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 41) = 0;
  }
  CFArrayRef v6 = (const void *)*((void *)this + 42);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 42) = 0;
  }
  double v7 = (const void *)*((void *)this + 43);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 43) = 0;
  }
  CFIndex v8 = (const void *)*((void *)this + 47);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 47) = 0;
  }
  size_t v9 = (const void *)*((void *)this + 48);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 48) = 0;
  }
  CFStringRef v10 = (const void *)*((void *)this + 49);
  if (v10)
  {
    CFRelease(v10);
    *((void *)this + 49) = 0;
  }
  CFNumberRef v11 = (const void *)*((void *)this + 50);
  if (v11)
  {
    CFRelease(v11);
    *((void *)this + 50) = 0;
  }
  CFStringRef v12 = (const void *)*((void *)this + 52);
  if (v12)
  {
    CFRelease(v12);
    *((void *)this + 52) = 0;
  }
  CFNumberRef v13 = (const void *)*((void *)this + 56);
  if (v13)
  {
    CFRelease(v13);
    *((void *)this + 56) = 0;
  }
  uint64_t v14 = (const void *)*((void *)this + 57);
  if (v14)
  {
    CFRelease(v14);
    *((void *)this + 57) = 0;
  }
  CFNumberRef v15 = (const void *)*((void *)this + 62);
  if (v15)
  {
    CFRelease(v15);
    *((void *)this + 62) = 0;
  }
  CFStringRef v16 = (const void *)*((void *)this + 63);
  if (v16)
  {
    CFRelease(v16);
    *((void *)this + 63) = 0;
  }
  CFIndex v17 = (const void *)*((void *)this + 64);
  if (v17)
  {
    CFRelease(v17);
    *((void *)this + 64) = 0;
  }
  CFStringRef v18 = (const void *)*((void *)this + 65);
  if (v18)
  {
    CFRelease(v18);
    *((void *)this + 65) = 0;
  }
  CFRange v19 = (const void *)*((void *)this + 66);
  if (v19)
  {
    CFRelease(v19);
    *((void *)this + 66) = 0;
  }
  int64_t v20 = (const void *)*((void *)this + 75);
  if (v20)
  {
    CFRelease(v20);
    *((void *)this + 75) = 0;
  }
  unint64_t v21 = (const void *)*((void *)this + 79);
  if (v21)
  {
    CFRelease(v21);
    *((void *)this + 79) = 0;
  }
  uint64_t v22 = (const void *)*((void *)this + 81);
  if (v22)
  {
    CFRelease(v22);
    *((void *)this + 81) = 0;
  }
  unsigned int v23 = (const void *)*((void *)this + 80);
  if (v23)
  {
    CFRelease(v23);
    *((void *)this + 80) = 0;
  }
  uint64_t v24 = (const void *)*((void *)this + 53);
  if (v24)
  {
    CFRelease(v24);
    *((void *)this + 53) = 0;
  }
  uint64_t v25 = (const void *)*((void *)this + 54);
  if (v25)
  {
    CFRelease(v25);
    *((void *)this + 54) = 0;
  }
  uint64_t v26 = (const void *)*((void *)this + 55);
  if (v26)
  {
    CFRelease(v26);
    *((void *)this + 55) = 0;
  }
  uint64_t v27 = (const void *)*((void *)this + 44);
  if (v27)
  {
    CFRelease(v27);
    *((void *)this + 44) = 0;
  }
  unint64_t v28 = (const void *)*((void *)this + 45);
  if (v28)
  {
    CFRelease(v28);
    *((void *)this + 45) = 0;
  }
  int8x16_t v29 = (const void *)*((void *)this + 46);
  if (v29)
  {
    CFRelease(v29);
    *((void *)this + 46) = 0;
  }
  uint64_t v30 = (const void *)*((void *)this + 68);
  if (v30)
  {
    CFRelease(v30);
    *((void *)this + 68) = 0;
  }
  CFStringRef v31 = (const void *)*((void *)this + 67);
  if (v31)
  {
    CFRelease(v31);
    *((void *)this + 67) = 0;
  }
  v32 = (CFTypeRef *)*((void *)this + 59);
  v33 = (CFTypeRef *)*((void *)this + 60);
  while (v32 != v33)
    ITRetain::for_each_cfrelease(*v32++, a2);
  if (*((char *)this + 599) < 0) {
    operator delete(*((void **)this + 72));
  }
  if (*((char *)this + 575) < 0) {
    operator delete(*((void **)this + 69));
  }
  uint64_t v34 = (void *)*((void *)this + 59);
  if (v34)
  {
    *((void *)this + 60) = v34;
    operator delete(v34);
  }
  if (*((char *)this + 311) < 0) {
    operator delete(*((void **)this + 36));
  }
  if (*((char *)this + 287) < 0) {
    operator delete(*((void **)this + 33));
  }
  if (*((char *)this + 263) < 0) {
    operator delete(*((void **)this + 30));
  }
  if (*((char *)this + 239) < 0) {
    operator delete(*((void **)this + 27));
  }
  if (*((char *)this + 215) < 0) {
    operator delete(*((void **)this + 24));
  }
  if (*((char *)this + 191) < 0) {
    operator delete(*((void **)this + 21));
  }
  if (*((char *)this + 167) < 0) {
    operator delete(*((void **)this + 18));
  }
  if (*((char *)this + 143) < 0) {
    operator delete(*((void **)this + 15));
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubOpfParser::~ITEpubOpfParser(this, a2);

  operator delete();
}

void ITEpubOpfParser::setFirstPageHref(ITEpubOpfParser *this, CFStringRef originalString)
{
  if (originalString)
  {
    CFStringRef HrefString = ITEpubXmlParseHandler::createHrefString(originalString, originalString);
    CFStringRef v4 = HrefString;
    CFArrayRef v6 = (const __CFString **)*((void *)this + 60);
    unint64_t v5 = *((void *)this + 61);
    if ((unint64_t)v6 >= v5)
    {
      uint64_t v8 = *((void *)this + 59);
      uint64_t v9 = ((uint64_t)v6 - v8) >> 3;
      if ((unint64_t)(v9 + 1) >> 61) {
        sub_9E38();
      }
      uint64_t v10 = v5 - v8;
      uint64_t v11 = v10 >> 2;
      if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
        uint64_t v11 = v9 + 1;
      }
      if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v12 = v11;
      }
      if (v12) {
        CFNumberRef v13 = (char *)sub_9EE0((uint64_t)this + 488, v12);
      }
      else {
        CFNumberRef v13 = 0;
      }
      uint64_t v14 = (const __CFString **)&v13[8 * v9];
      CFNumberRef v15 = &v13[8 * v12];
      const void *v14 = v4;
      double v7 = v14 + 1;
      CFIndex v17 = (char *)*((void *)this + 59);
      CFStringRef v16 = (char *)*((void *)this + 60);
      if (v16 != v17)
      {
        do
        {
          CFStringRef v18 = (const __CFString *)*((void *)v16 - 1);
          v16 -= 8;
          *--uint64_t v14 = v18;
        }
        while (v16 != v17);
        CFStringRef v16 = (char *)*((void *)this + 59);
      }
      *((void *)this + 59) = v14;
      *((void *)this + 60) = v7;
      *((void *)this + 61) = v15;
      if (v16) {
        operator delete(v16);
      }
    }
    else
    {
      *CFArrayRef v6 = HrefString;
      double v7 = v6 + 1;
    }
    *((void *)this + 60) = v7;
  }
}

void ITEpubOpfParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  if (*((unsigned char *)this + 408))
  {
LABEL_2:
    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"item"))
    {
      ITEpubOpfParser::StartItemElement(this, a3);
    }
    return;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"manifest"))
  {
    ITEpubOpfParser::StartManifestElement((ITEpubOpfParser *)this, v6);
    return;
  }
  if (*((unsigned char *)this + 408)) {
    goto LABEL_2;
  }
  if (*((unsigned char *)this + 409)) {
    goto LABEL_12;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"spine"))
  {
    ITEpubOpfParser::StartSpineElement((uint64_t)this, a3);
  }
  else if (*((unsigned char *)this + 409))
  {
LABEL_12:
    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"itemref")) {
      ITEpubOpfParser::StartItemRefElement(this, a3);
    }
  }
  if (*((unsigned char *)this + 412)) {
    goto LABEL_66;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"guide"))
  {
    *((unsigned char *)this + 412) = 1;
    return;
  }
  if (*((unsigned char *)this + 412))
  {
LABEL_66:
    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"reference"))
    {
      ITEpubOpfParser::StartReferenceElement((ITEpubOpfParser *)this, a3);
    }
    return;
  }
  if (*((unsigned char *)this + 410)) {
    goto LABEL_28;
  }
  if (!ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"metadata"))
  {
    if (!*((unsigned char *)this + 410))
    {
LABEL_43:
      if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"package"))
      {
        ITEpubOpfParser::StartPackageElement((ITEpubOpfParser *)this, a3);
      }
      else if (*((unsigned char *)this + 410))
      {
        if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"identifier"))
        {
          ITEpubOpfParser::StartIdentifierElement((const __CFString *)this, a3);
        }
        else if (*((unsigned char *)this + 410))
        {
          if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"description")
            || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:description"))
          {
            ITEpubOpfParser::StartDescriptionElement((ITEpubOpfParser *)this, a3);
          }
          else if (*((unsigned char *)this + 410) {
                 && (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"contributor")
          }
                  || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:contributor")))
          {
            ITEpubOpfParser::StartContributorElement((ITEpubOpfParser *)this, a3);
          }
        }
      }
      return;
    }
LABEL_28:
    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"meta"))
    {
      ITEpubOpfParser::StartMetaElement((ITEpubOpfParser *)this, a3);
      return;
    }
    if (*((unsigned char *)this + 410)
      && (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"date")
       || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:date")))
    {
      ITEpubOpfParser::StartDateElement((ITEpubOpfParser *)this, a3);
      return;
    }
    goto LABEL_43;
  }

  ITEpubOpfParser::StartMetadataElement((ITEpubOpfParser *)this, v7);
}

CFMutableDictionaryRef ITEpubOpfParser::StartManifestElement(ITEpubOpfParser *this, const __CFDictionary *a2)
{
  uint64_t v3 = (const void *)*((void *)this + 39);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 39) = 0;
  }
  CFStringRef v4 = (const void *)*((void *)this + 40);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 40) = 0;
  }
  unint64_t v5 = (const void *)*((void *)this + 41);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 41) = 0;
  }
  *((void *)this + 41) = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
  *((void *)this + 40) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  CFMutableDictionaryRef result = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  *((void *)this + 39) = result;
  *((unsigned char *)this + 408) = 1;
  return result;
}

void ITEpubOpfParser::StartItemElement(CFMutableArrayRef *this, CFDictionaryRef theDict)
{
  if (*((unsigned char *)this + 408))
  {
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"href");
    unint64_t v5 = (void *)CFDictionaryGetValue(theDict, @"id");
    CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(theDict, @"media-type");
    if (Value)
    {
      if (v5)
      {
        CFStringRef v8 = v6;
        if (v6)
        {
          CFStringRef v25 = 0;
          uint64_t v26 = 0;
          uint64_t v27 = 0;
          unint64_t v21 = 0;
          uint64_t v22 = 0;
          uint64_t v23 = 0;
          CFStringRef v9 = ITEpubXmlParseHandler::copyHrefStrippingHash(Value, v7);
          keys[0] = @"id";
          keys[1] = @"unescaped_href";
          values[0] = v5;
          values[1] = (void *)v9;
          keys[2] = @"href";
          keys[3] = @"media-type";
          values[2] = (void *)Value;
          values[3] = (void *)v8;
          uint64_t v10 = CFDictionaryGetValue(theDict, @"fallback");
          if (v10)
          {
            CFStringRef v25 = @"fallback";
            unint64_t v21 = v10;
            CFIndex v11 = 5;
          }
          else
          {
            CFIndex v11 = 4;
          }
          unint64_t v12 = (void *)CFDictionaryGetValue(theDict, @"media-overlay");
          if (v12)
          {
            keys[v11] = @"media-overlay";
            values[v11++] = v12;
          }
          CFStringRef v13 = (const __CFString *)CFDictionaryGetValue(theDict, @"properties");
          CFStringRef v14 = v13;
          if (v13)
          {
            keys[v11] = @"properties";
            values[v11++] = (void *)v13;
          }
          CFDictionaryRef v15 = CFDictionaryCreate(kCFAllocatorDefault, (const void **)keys, (const void **)values, v11, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
          CFArrayAppendValue(this[41], v15);
          CFDictionarySetValue(this[40], v5, v15);
          CFDictionarySetValue(this[39], v9, v15);
          if (v14)
          {
            if (!*((unsigned char *)this + 464) && CFStringFind(v14, @"nav", 0).length >= 1)
            {
              CFMutableArrayRef v16 = this[57];
              if (v16) {
                CFRelease(v16);
              }
              this[57] = (CFMutableArrayRef)v9;
              if (v9) {
                CFRetain(v9);
              }
              *((unsigned char *)this + 464) = 1;
            }
            if (!this[65] && CFStringFind(v14, @"cover-image", 0).length >= 1)
            {
              CFMutableArrayRef v17 = this[66];
              if (v17) {
                CFRelease(v17);
              }
              this[66] = (CFMutableArrayRef)v5;
              CFRetain(v5);
              CFMutableArrayRef v19 = this[65];
              if (v19)
              {
                CFRelease(v19);
                this[65] = 0;
              }
              this[65] = (CFMutableArrayRef)ITEpubXmlParseHandler::createHrefString(Value, v18);
            }
          }
          if (this[57] || CFStringCompare(v8, @"application/x-dtbncx+xml", 0))
          {
            if (!v9) {
              goto LABEL_31;
            }
          }
          else
          {
            this[57] = (CFMutableArrayRef)v9;
            if (!v9)
            {
LABEL_31:
              if (v15) {
                CFRelease(v15);
              }
              return;
            }
            CFRetain(v9);
          }
          CFRelease(v9);
          goto LABEL_31;
        }
      }
    }
  }
}

uint64_t ITEpubOpfParser::StartSpineElement(uint64_t this, const __CFDictionary *a2)
{
  if (!*(unsigned char *)(this + 409))
  {
    uint64_t v3 = this;
    CFStringRef v4 = *(const void **)(this + 336);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(v3 + 336) = 0;
    }
    unint64_t v5 = *(const void **)(v3 + 344);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(v3 + 344) = 0;
    }
    *(void *)(v3 + 336) = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
    *(void *)(v3 + 344) = CFSetCreateMutable(kCFAllocatorDefault, 0, &kCFTypeSetCallBacks);
    if (!*(void *)(v3 + 448) && !*(unsigned char *)(v3 + 464))
    {
      CFStringRef Value = CFDictionaryGetValue(a2, @"toc");
      *(void *)(v3 + 448) = Value;
      if (Value) {
        CFRetain(Value);
      }
      else {
        *(void *)(v3 + 448) = CFStringCreateWithCString(kCFAllocatorDefault, "ncx", 0x8000100u);
      }
    }
    CFStringRef v7 = CFDictionaryGetValue(a2, @"page-progression-direction");
    *(void *)(v3 + 424) = v7;
    if (v7) {
      CFRetain(v7);
    }
    this = ITEpubXmlParseHandler::childIndexInParent((ITEpubXmlParseHandler *)v3);
    *(_DWORD *)(v3 + 616) = this;
    *(unsigned char *)(v3 + 409) = 1;
  }
  return this;
}

void ITEpubOpfParser::StartItemRefElement(CFSetRef *this, CFDictionaryRef theDict)
{
  if (*((unsigned char *)this + 409))
  {
    CFStringRef Value = CFDictionaryGetValue(theDict, @"idref");
    CFStringRef v5 = (const __CFString *)CFDictionaryGetValue(theDict, @"linear");
    CFStringRef v6 = v5;
    if (v5)
    {
      BOOL v7 = CFStringCompare(v5, @"no", 1uLL) != kCFCompareEqualTo;
      if (!Value) {
        return;
      }
    }
    else
    {
      BOOL v7 = 1;
      if (!Value) {
        return;
      }
    }
    if (this[42] && this[43])
    {
      if (qword_409B20 != -1) {
        dispatch_once(&qword_409B20, &stru_3C0788);
      }
      CFIndex Count = CFSetGetCount(this[43]);
      CFSetAddValue(this[43], Value);
      CFIndex v9 = CFSetGetCount(this[43]);
      BOOL v10 = Count != v9 && v7;
      if (v6 && Count == v9) {
        BOOL v10 = CFStringCompare(v6, @"yes", 1uLL) == kCFCompareEqualTo;
      }
      if (v10) {
        CFIndex v11 = &kCFBooleanTrue;
      }
      else {
        CFIndex v11 = &kCFBooleanFalse;
      }
      CFBooleanRef v12 = *v11;
      keys[0] = @"linear";
      keys[1] = @"itemref";
      values[0] = v12;
      values[1] = (void *)Value;
      CFDictionaryRef v13 = CFDictionaryCreate(kCFAllocatorDefault, (const void **)keys, (const void **)values, 2, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
      CFArrayAppendValue(this[42], v13);
      if (v13) {
        CFRelease(v13);
      }
    }
  }
}

void ITEpubOpfParser::StartReferenceElement(ITEpubOpfParser *this, CFDictionaryRef theDict)
{
  if (!*((unsigned char *)this + 412)) {
    return;
  }
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"type");
  if (!Value) {
    return;
  }
  CFStringRef v5 = Value;
  if (CFStringCompare(Value, @"text", 0)
    && CFStringCompare(v5, @"start", 0)
    && CFStringCompare(v5, @"acknowledgements", 0)
    && CFStringCompare(v5, @"dedication", 0)
    && CFStringCompare(v5, @"epigraph", 0)
    && CFStringCompare(v5, @"foreword", 0)
    && CFStringCompare(v5, @"preface", 0))
  {
    if (CFStringCompare(v5, @"toc", 0))
    {
      if (*((void *)this + 65)) {
        goto LABEL_12;
      }
      CFComparisonResult v12 = CFStringCompare(v5, @"cover", 0);
      CFDictionaryRef v13 = (const void *)*((void *)this + 65);
      if (v12)
      {
        if (v13 || CFStringCompare(v5, @"cover-page", 0))
        {
LABEL_12:
          if (!*((void *)this + 62)
            && CFEqual(v5, @"other.reader-start-page"))
          {
            CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(theDict, @"href");
            *((void *)this + 62) = ITEpubXmlParseHandler::createHrefString(v6, v7);
          }
          return;
        }
        CFDictionaryRef v13 = (const void *)*((void *)this + 65);
      }
      if (v13)
      {
        CFRelease(v13);
        *((void *)this + 65) = 0;
      }
      CFStringRef v14 = (const __CFString *)CFDictionaryGetValue(theDict, @"href");
      *((void *)this + 65) = ITEpubXmlParseHandler::createHrefString(v14, v15);
    }
    else
    {
      CFIndex v9 = (const void *)*((void *)this + 64);
      if (v9)
      {
        CFRelease(v9);
        *((void *)this + 64) = 0;
      }
      CFStringRef v10 = (const __CFString *)CFDictionaryGetValue(theDict, @"href");
      *((void *)this + 64) = ITEpubXmlParseHandler::createHrefString(v10, v11);
    }
  }
  else
  {
    CFStringRef v8 = (const __CFString *)CFDictionaryGetValue(theDict, @"href");
    ITEpubOpfParser::setFirstPageHref(this, v8);
  }
}

CFMutableDictionaryRef ITEpubOpfParser::StartMetadataElement(ITEpubOpfParser *this, const __CFDictionary *a2)
{
  *((unsigned char *)this + 410) = 1;
  uint64_t v3 = (const void *)*((void *)this + 47);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 47) = 0;
  }
  CFMutableDictionaryRef result = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  *((void *)this + 47) = result;
  return result;
}

const __CFString *ITEpubOpfParser::StartMetaElement(ITEpubOpfParser *this, CFTypeRef cf)
{
  CFStringRef v4 = (const void *)*((void *)this + 48);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 48) = 0;
  }
  if (cf)
  {
    *((void *)this + 48) = cf;
    CFRetain(cf);
  }
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue((CFDictionaryRef)cf, @"property");
  if (Value)
  {
    CFStringRef v6 = Value;
    CFStringRef result = (const __CFString *)CFStringCompare(Value, @"dcterms:modified", 0);
    if (result)
    {
      CFStringRef result = (const __CFString *)CFStringCompare(v6, @"media:active-class", 0);
      if (result)
      {
        CFStringRef result = (const __CFString *)CFStringCompare(v6, @"ebpaj:guide-version", 0);
        if (result)
        {
          CFStringRef result = (const __CFString *)CFStringCompare(v6, @"ibooks:cover-writing-mode", 0);
          if (result)
          {
            CFStringRef result = (const __CFString *)CFStringCompare(v6, @"ibooks:scroll-axis", 0);
            if (result)
            {
              if (*((void *)this + 44) || *((void *)this + 45))
              {
                return (const __CFString *)ITEpubOpfParser::CaptureAppleDisplayOptionsState((uint64_t)this, v6);
              }
              return result;
            }
            int v11 = 5;
          }
          else
          {
            int v11 = 4;
          }
        }
        else
        {
          int v11 = 3;
        }
      }
      else
      {
        int v11 = 2;
      }
    }
    else
    {
      int v11 = 1;
    }
    *((_DWORD *)this + 156) = v11;
    return result;
  }
  CFStringRef result = (const __CFString *)CFDictionaryGetValue((CFDictionaryRef)cf, @"name");
  CFStringRef v8 = result;
  if (*((void *)this + 66) || !result)
  {
    if (!result) {
      return result;
    }
  }
  else if (CFEqual(result, @"cover"))
  {
    CFIndex v9 = (const void *)*((void *)this + 66);
    if (v9)
    {
      CFRelease(v9);
      *((void *)this + 66) = 0;
    }
    CFStringRef v10 = CFDictionaryGetValue((CFDictionaryRef)cf, @"content");
    *((void *)this + 66) = v10;
    if (v10) {
      CFRetain(v10);
    }
  }
  CFStringRef result = (const __CFString *)CFStringCompare(v8, @"original-resolution", 0);
  if (!result)
  {
    CFComparisonResult v12 = (const void *)*((void *)this + 67);
    if (v12)
    {
      CFRelease(v12);
      *((void *)this + 67) = 0;
    }
    CFStringRef result = (const __CFString *)CFDictionaryGetValue((CFDictionaryRef)cf, @"content");
    *((void *)this + 67) = result;
    if (result)
    {
      return (const __CFString *)CFRetain(result);
    }
  }
  return result;
}

const __CFString *ITEpubOpfParser::StartDateElement(ITEpubOpfParser *this, CFDictionaryRef theDict)
{
  *((unsigned char *)this + 411) = 0;
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"event");
  if (!Value
    && (CFStringRef result = (const __CFString *)CFDictionaryGetValue(theDict, @"opf:event"), (Value = result) == 0)
    || (CFStringRef result = (const __CFString *)CFStringCompare(Value, @"original-publication", 0)) == 0
    || (CFStringRef result = (const __CFString *)CFStringCompare(Value, @"publication", 0)) == 0
    || (CFStringRef result = (const __CFString *)CFStringCompare(Value, @"creation", 0)) == 0)
  {
    *((unsigned char *)this + 411) = 1;
  }
  return result;
}

void ITEpubOpfParser::StartPackageElement(ITEpubOpfParser *this, CFDictionaryRef theDict)
{
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"xmlns");
  if ((Value || (CFStringRef Value = (const __CFString *)*((void *)this + 3)) != 0)
    && CFEqual(Value, @"http://www.idpf.org/2007/opf"))
  {
    CFStringRef v5 = (const void *)*((void *)this + 75);
    if (v5)
    {
      CFRelease(v5);
      *((void *)this + 75) = 0;
    }
    CFStringRef v6 = CFDictionaryGetValue(theDict, @"unique-identifier");
    *((void *)this + 75) = v6;
    if (v6) {
      CFRetain(v6);
    }
    CFStringRef v7 = CFDictionaryGetValue(theDict, @"dir");
    if (v7)
    {
      CFStringRef v8 = v7;
      CFIndex v9 = (const void *)*((void *)this + 52);
      if (v9) {
        CFRelease(v9);
      }
      *((void *)this + 52) = v8;
      CFRetain(v8);
    }
    ITEpubOpfParser::CaptureAppleDisplayOptionsPrefix(this, theDict);
  }
}

const __CFString *ITEpubOpfParser::StartIdentifierElement(const __CFString *this, CFDictionaryRef theDict)
{
  CFStringRef v2 = this;
  uint64_t length = this[18].length;
  if (length)
  {
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"id");
    if (Value)
    {
      CFStringRef v6 = Value;
      this = (const __CFString *)CFStringCompare(Value, (CFStringRef)v2[18].length, 0);
      if (!this)
      {
        LODWORD(length) = 1004;
        goto LABEL_12;
      }
      this = (const __CFString *)CFStringCompare(v6, @"bookid", 1uLL);
      if (!this)
      {
        LODWORD(length) = 1003;
        goto LABEL_12;
      }
    }
    this = (const __CFString *)CFDictionaryGetValue(theDict, @"opf:scheme");
    if ((this || (this = (const __CFString *)CFDictionaryGetValue(theDict, @"scheme")) != 0)
      && (this = (const __CFString *)CFStringCompare(this, @"UUID", 1uLL)) == 0)
    {
      LODWORD(length) = 1002;
    }
    else
    {
      LODWORD(length) = 0;
    }
  }
LABEL_12:
  HIDWORD(v2[19].isa) = length;
  return this;
}

void ITEpubOpfParser::StartDescriptionElement(ITEpubOpfParser *this, CFTypeRef cf)
{
  CFStringRef v4 = (const void *)*((void *)this + 49);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 49) = 0;
  }
  if (cf)
  {
    *((void *)this + 49) = cf;
    CFRetain(cf);
  }
}

void ITEpubOpfParser::StartContributorElement(ITEpubOpfParser *this, CFTypeRef cf)
{
  CFStringRef v4 = (const void *)*((void *)this + 50);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 50) = 0;
  }
  if (cf)
  {
    *((void *)this + 50) = cf;
    CFRetain(cf);
  }
}

void ITEpubOpfParser::EndElement(std::string *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"manifest"))
  {
    this[17].__r_.__value_.__s.__data_[0] = 0;
    goto LABEL_7;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"spine"))
  {
    this[17].__r_.__value_.__s.__data_[1] = 0;
    goto LABEL_7;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"metadata"))
  {
    this[17].__r_.__value_.__s.__data_[2] = 0;
    goto LABEL_7;
  }
  if (this[17].__r_.__value_.__s.__data_[2])
  {
    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"meta"))
    {
      ITEpubOpfParser::EndMetaElement((ITEpubOpfParser *)this);
      goto LABEL_7;
    }
    if (this[17].__r_.__value_.__s.__data_[2])
    {
      if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"title")
        || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:title"))
      {
        if (SHIBYTE(this[6].__r_.__value_.__r.__words[2]) < 0) {
          std::string::size_type size = this[6].__r_.__value_.__l.__size_;
        }
        else {
          std::string::size_type size = HIBYTE(this[6].__r_.__value_.__r.__words[2]);
        }
        if (size) {
          goto LABEL_7;
        }
        CFStringRef v5 = this + 6;
        goto LABEL_21;
      }
      if (this[17].__r_.__value_.__s.__data_[2])
      {
        if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"creator")
          || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:creator"))
        {
          if (SHIBYTE(this[5].__r_.__value_.__r.__words[2]) < 0) {
            std::string::size_type v7 = this[5].__r_.__value_.__l.__size_;
          }
          else {
            std::string::size_type v7 = HIBYTE(this[5].__r_.__value_.__r.__words[2]);
          }
          if (v7) {
            goto LABEL_7;
          }
          CFStringRef v5 = this + 5;
          goto LABEL_21;
        }
        if (this[17].__r_.__value_.__s.__data_[2])
        {
          if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"language")
            || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:language"))
          {
            CFStringRef v5 = this + 7;
            goto LABEL_21;
          }
          if (this[17].__r_.__value_.__s.__data_[2])
          {
            if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"publisher")
              || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:publisher"))
            {
              if (SHIBYTE(this[10].__r_.__value_.__r.__words[2]) < 0) {
                std::string::size_type v8 = this[10].__r_.__value_.__l.__size_;
              }
              else {
                std::string::size_type v8 = HIBYTE(this[10].__r_.__value_.__r.__words[2]);
              }
              if (v8) {
                goto LABEL_7;
              }
              CFStringRef v5 = this + 10;
              goto LABEL_21;
            }
            if (this[17].__r_.__value_.__s.__data_[2])
            {
              if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dateCopyrighted")
                || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:dateCopyrighted"))
              {
                CFStringRef v5 = this + 12;
LABEL_21:
                CFStringRef v6 = (const std::string::value_type *)&this[3];
                if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0) {
                  CFStringRef v6 = *(const std::string::value_type **)v6;
                }
                goto LABEL_23;
              }
              if (this[17].__r_.__value_.__s.__data_[2])
              {
                if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"date")
                  || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:date"))
                {
                  if (this[17].__r_.__value_.__s.__data_[3])
                  {
                    if (!(SHIBYTE(this[12].__r_.__value_.__r.__words[2]) < 0
                         ? this[12].__r_.__value_.__l.__size_
                         : HIBYTE(this[12].__r_.__value_.__r.__words[2])))
                    {
                      CFStringRef v10 = (const std::string::value_type *)&this[3];
                      if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0) {
                        CFStringRef v10 = *(const std::string::value_type **)v10;
                      }
                      std::string::assign(this + 12, v10);
                    }
                  }
                  this[17].__r_.__value_.__s.__data_[3] = 0;
                  goto LABEL_7;
                }
                if (this[17].__r_.__value_.__s.__data_[2])
                {
                  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"type")
                    || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:type"))
                  {
                    if (SHIBYTE(this[9].__r_.__value_.__r.__words[2]) < 0) {
                      std::string::size_type v11 = this[9].__r_.__value_.__l.__size_;
                    }
                    else {
                      std::string::size_type v11 = HIBYTE(this[9].__r_.__value_.__r.__words[2]);
                    }
                    if (v11) {
                      goto LABEL_7;
                    }
                    CFStringRef v5 = this + 9;
                    goto LABEL_21;
                  }
                  if (this[17].__r_.__value_.__s.__data_[2])
                  {
                    if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"subject")
                      || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:subject"))
                    {
                      if (SHIBYTE(this[8].__r_.__value_.__r.__words[2]) < 0) {
                        std::string::size_type v12 = this[8].__r_.__value_.__l.__size_;
                      }
                      else {
                        std::string::size_type v12 = HIBYTE(this[8].__r_.__value_.__r.__words[2]);
                      }
                      if (v12) {
                        goto LABEL_7;
                      }
                      CFStringRef v5 = this + 8;
                      goto LABEL_21;
                    }
                    if (this[17].__r_.__value_.__s.__data_[2])
                    {
                      if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"identifier")
                        || ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:identifier"))
                      {
                        int v13 = HIDWORD(this[25].__r_.__value_.__r.__words[1]);
                        if (!v13)
                        {
                          CFStringRef v14 = (char *)&this[3];
                          if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0) {
                            CFStringRef v14 = *(char **)v14;
                          }
                          if (strstr(v14, "urn:uuid:") || strstr(v14, "URN:UUID:")) {
                            int v13 = 1001;
                          }
                          else {
                            int v13 = 1000;
                          }
                        }
                        if (SLODWORD(this[25].__r_.__value_.__r.__words[1]) < v13)
                        {
                          LODWORD(this[25].__r_.__value_.__r.__words[1]) = v13;
                          CFStringRef v15 = (const std::string::value_type *)&this[3];
                          if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0) {
                            CFStringRef v15 = *(const std::string::value_type **)v15;
                          }
                          std::string::assign(this + 23, v15);
                        }
                        HIDWORD(this[25].__r_.__value_.__r.__words[1]) = 0;
                        p_std::string::pointer data = &this[3].__r_.__value_.__l.__data_;
                        int v17 = SHIBYTE(this[3].__r_.__value_.__r.__words[2]);
                        if (v17 < 0)
                        {
                          CFStringRef v18 = *p_data;
                          if (!strstr(*p_data, "urn:uuid:"))
                          {
                            if (strstr(v18, "URN:UUID:")) {
                              goto LABEL_106;
                            }
                            if (this[3].__r_.__value_.__l.__size_ != 35) {
                              goto LABEL_7;
                            }
                          }
                          CFStringRef v18 = *p_data;
                        }
                        else if (strstr((char *)&this[3], "urn:uuid:") || strstr((char *)&this[3], "URN:UUID:"))
                        {
                          CFStringRef v18 = (char *)&this[3];
                        }
                        else
                        {
                          CFStringRef v18 = (char *)&this[3];
                          if (v17 != 35) {
                            goto LABEL_7;
                          }
                        }
LABEL_106:
                        CFStringRef v5 = this + 24;
                        CFStringRef v6 = v18;
LABEL_23:
                        std::string::assign(v5, v6);
                        goto LABEL_7;
                      }
                      if (this[17].__r_.__value_.__s.__data_[2])
                      {
                        if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"description")|| ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:description"))
                        {
                          CFDictionaryRef v19 = (const __CFDictionary *)this[16].__r_.__value_.__l.__size_;
                          if (v19)
                          {
                            CFStringRef Value = CFDictionaryGetValue(v19, @"id");
                            if (Value && CFEqual(Value, @"ebpaj-guide"))
                            {
                              int v21 = SHIBYTE(this[3].__r_.__value_.__r.__words[2]);
                              if (v21 < 0
                                 ? this[3].__r_.__value_.__l.__size_
                                 : HIBYTE(this[3].__r_.__value_.__r.__words[2]))
                              {
                                CFStringRef v25 = (const void *)this[22].__r_.__value_.__r.__words[2];
                                if (v25)
                                {
                                  CFRelease(v25);
                                  this[22].__r_.__value_.__r.__words[2] = 0;
                                  LOBYTE(v21) = *((unsigned char *)&this[3].__r_.__value_.__s + 23);
                                }
                                uint64_t v26 = (const char *)&this[3];
                                if ((v21 & 0x80) != 0) {
                                  uint64_t v26 = *(const char **)v26;
                                }
                                this[22].__r_.__value_.__r.__words[2] = (std::string::size_type)CFStringCreateWithCString(kCFAllocatorDefault, v26, 0x8000100u);
                              }
                            }
                            uint64_t v27 = (const void *)this[16].__r_.__value_.__l.__size_;
                            if (v27)
                            {
                              CFRelease(v27);
                              this[16].__r_.__value_.__l.__size_ = 0;
                            }
                          }
                        }
                        else if (this[17].__r_.__value_.__s.__data_[2] {
                               && (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"contributor")|| ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"dc:contributor")))
                        }
                        {
                          CFDictionaryRef v23 = (const __CFDictionary *)this[16].__r_.__value_.__r.__words[2];
                          if (v23)
                          {
                            if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0) {
                              std::string::size_type v24 = this[3].__r_.__value_.__l.__size_;
                            }
                            else {
                              std::string::size_type v24 = HIBYTE(this[3].__r_.__value_.__r.__words[2]);
                            }
                            if (v24)
                            {
                              unint64_t v28 = CFDictionaryGetValue(v23, @"id");
                              if (v28)
                              {
                                if (CFEqual(v28, @"bkp"))
                                {
                                  std::string::pointer data = this[27].__r_.__value_.__l.__data_;
                                  if (data)
                                  {
                                    CFRelease(data);
                                    this[27].__r_.__value_.__r.__words[0] = 0;
                                  }
                                  uint64_t v30 = (const char *)&this[3];
                                  if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0) {
                                    uint64_t v30 = *(const char **)v30;
                                  }
                                  this[27].__r_.__value_.__r.__words[0] = (std::string::size_type)CFStringCreateWithCString(kCFAllocatorDefault, v30, 0x8000100u);
                                }
                              }
                            }
                            CFStringRef v31 = (const void *)this[16].__r_.__value_.__r.__words[2];
                            if (v31)
                            {
                              CFRelease(v31);
                              this[16].__r_.__value_.__r.__words[2] = 0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_7:

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

void ITEpubOpfParser::EndMetaElement(ITEpubOpfParser *this)
{
  if (!*((void *)this + 48)) {
    goto LABEL_13;
  }
  CFStringRef v2 = (char *)this + 72;
  if (*((char *)this + 95) < 0)
  {
    if (!*((void *)this + 10)) {
      goto LABEL_11;
    }
    CFStringRef v2 = *(const char **)v2;
LABEL_7:
    CFStringRef v3 = CFStringCreateWithCString(kCFAllocatorDefault, v2, 0x8000100u);
    if (v3)
    {
      CFStringRef v4 = v3;
      int v5 = *((_DWORD *)this + 156);
      if ((v5 - 6) >= 0xC)
      {
        switch(v5)
        {
          case 1:
            std::string::size_type v7 = (const void *)*((void *)this + 79);
            if (v7)
            {
              CFRelease(v7);
              *((void *)this + 79) = 0;
            }
            *((void *)this + 79) = CFRetain(v4);
            break;
          case 2:
            std::string::size_type v8 = (const void *)*((void *)this + 80);
            if (v8)
            {
              CFRelease(v8);
              *((void *)this + 80) = 0;
            }
            *((void *)this + 80) = CFRetain(v4);
            break;
          case 3:
            CFIndex v9 = (const void *)*((void *)this + 68);
            if (v9)
            {
              CFRelease(v9);
              *((void *)this + 68) = 0;
            }
            *((void *)this + 68) = CFRetain(v4);
            break;
          case 4:
            *((void *)this + 54) = CFRetain(v3);
            break;
          case 5:
            *((void *)this + 55) = CFRetain(v3);
            break;
          default:
            ITEpubOpfParser::CaptureFileAsValues((CFDictionaryRef *)this, v3);
            break;
        }
      }
      else
      {
        ITEpubOpfParser::CaptureAppleDisplayOptionsValue(this, v3);
        *((_DWORD *)this + 155) = 0;
      }
      CFRelease(v4);
    }
    goto LABEL_11;
  }
  if (*((unsigned char *)this + 95)) {
    goto LABEL_7;
  }
LABEL_11:
  CFStringRef v6 = (const void *)*((void *)this + 48);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 48) = 0;
  }
LABEL_13:
  *((_DWORD *)this + 156) = 0;
}

void ITEpubOpfParser::CaptureAppleDisplayOptionsPrefix(ITEpubOpfParser *this, CFDictionaryRef theDict)
{
  CFStringRef v4 = (const void *)*((void *)this + 44);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 44) = 0;
  }
  int v5 = (const void *)*((void *)this + 45);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 45) = 0;
  }
  CFStringRef v6 = (const void *)*((void *)this + 46);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 46) = 0;
  }
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"prefix");
  if (Value)
  {
    ArrayWithWhitespaceSplitting = ITEpubXmlParseHandler::createArrayWithWhitespaceSplitting(this, Value);
    if (ArrayWithWhitespaceSplitting)
    {
      CFArrayRef v9 = ArrayWithWhitespaceSplitting;
      CFIndex Count = CFArrayGetCount(ArrayWithWhitespaceSplitting);
      if (Count >= 1)
      {
        unint64_t v11 = Count;
        while (1)
        {
          uint64_t v12 = v11 - 1;
          ValueAtIndeCGFloat x = (const __CFString *)CFArrayGetValueAtIndex(v9, v11 - 1);
          if (ValueAtIndex) {
            break;
          }
LABEL_28:
          unint64_t v11 = v12;
          if (v12 <= 0) {
            goto LABEL_29;
          }
        }
        CFStringRef v14 = ValueAtIndex;
        if (*((void *)this + 45)
          || CFStringCompare(ValueAtIndex, @"http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0/", 0))
        {
          if (*((void *)this + 44)) {
            goto LABEL_28;
          }
          CFComparisonResult v15 = CFStringCompare(v14, @"http://www.idpf.org/vocab/rendition/#", 0);
          BOOL v16 = v11 >= 2;
          CFIndex v17 = v11 - 2;
          if (!v16 || v15) {
            goto LABEL_28;
          }
          CFStringRef v18 = (const __CFString *)CFArrayGetValueAtIndex(v9, v17);
          if (!v18) {
            goto LABEL_27;
          }
          CFStringRef v19 = v18;
          if (!CFStringGetLength(v18)) {
            goto LABEL_27;
          }
          *((void *)this + 44) = v19;
        }
        else
        {
          BOOL v16 = v11 >= 2;
          CFIndex v17 = v11 - 2;
          if (!v16) {
            goto LABEL_29;
          }
          CFStringRef v20 = (const __CFString *)CFArrayGetValueAtIndex(v9, v17);
          if (!v20) {
            goto LABEL_27;
          }
          CFStringRef v19 = v20;
          if (!CFStringGetLength(v20)) {
            goto LABEL_27;
          }
          *((void *)this + 45) = v19;
        }
        CFRetain(v19);
LABEL_27:
        uint64_t v12 = v17;
        goto LABEL_28;
      }
LABEL_29:
      CFRelease(v9);
    }
  }
  if (*((void *)this + 44)
    || (*((void *)this + 44) = @"rendition", CFRetain(@"rendition"), *((void *)this + 44))
    || *((void *)this + 45))
  {
    if (!*((void *)this + 46)) {
      *((void *)this + 46) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    }
  }
}

uint64_t ITEpubOpfParser::CaptureAppleDisplayOptionsState(uint64_t this, CFStringRef theString)
{
  if (!theString) {
    return this;
  }
  uint64_t v3 = this;
  CFStringRef v4 = *(const __CFString **)(this + 360);
  if (!v4 || (this = CFStringHasPrefix(theString, v4), !this))
  {
    CFStringRef v6 = *(const __CFString **)(v3 + 352);
    if (v6)
    {
      this = CFStringHasPrefix(theString, v6);
      if (this)
      {
        *(_DWORD *)(v3 + 620) = 1;
        this = CFStringHasSuffix(theString, @"layout");
        if (this)
        {
          int v7 = 7;
        }
        else
        {
          this = CFStringHasSuffix(theString, @"spread");
          if (this)
          {
            int v7 = 8;
          }
          else
          {
            this = CFStringHasSuffix(theString, @"flow");
            if (this)
            {
              int v7 = 9;
            }
            else
            {
              this = CFStringHasSuffix(theString, @"specified-fonts");
              if (this)
              {
                int v7 = 11;
              }
              else
              {
                this = CFStringHasSuffix(theString, @"open-to-spread");
                if (this)
                {
                  int v7 = 12;
                }
                else
                {
                  this = CFStringHasSuffix(theString, @"orientation");
                  if (this)
                  {
                    int v7 = 15;
                  }
                  else
                  {
                    this = CFStringHasSuffix(theString, @"version");
                    if (!this) {
                      return this;
                    }
                    int v7 = 16;
                  }
                }
              }
            }
          }
        }
        *(_DWORD *)(v3 + 624) = v7;
        return this;
      }
    }
    return this;
  }
  if (CFStringHasSuffix(theString, @"fixed-layout"))
  {
    int v5 = 6;
  }
  else if (CFStringHasSuffix(theString, @"interactive"))
  {
    int v5 = 10;
  }
  else if (CFStringHasSuffix(theString, @"specified-fonts"))
  {
    int v5 = 11;
  }
  else if (CFStringHasSuffix(theString, @"open-to-spread"))
  {
    int v5 = 12;
  }
  else if (CFStringHasSuffix(theString, @"binding"))
  {
    int v5 = 13;
  }
  else if (CFStringHasSuffix(theString, @"orientation-lock"))
  {
    int v5 = 14;
  }
  else if (CFStringHasSuffix(theString, @"version"))
  {
    int v5 = 16;
  }
  else
  {
    this = CFStringHasSuffix(theString, @"respect-image-size-class");
    if (!this)
    {
      if (!*(_DWORD *)(v3 + 624)) {
        return this;
      }
      goto LABEL_38;
    }
    int v5 = 17;
  }
  *(_DWORD *)(v3 + 624) = v5;
LABEL_38:
  *(_DWORD *)(v3 + 620) = 1;
  this = CFStringFind(theString, @":ipad-", 0).location;
  if (this == -1)
  {
    this = CFStringFind(theString, @":iphone-", 0).location;
    if (this == -1) {
      return this;
    }
    int v8 = 3;
  }
  else
  {
    int v8 = 2;
  }
  *(_DWORD *)(v3 + 620) = v8;
  return this;
}

void ITEpubOpfParser::CaptureAppleDisplayOptionsValue(ITEpubOpfParser *this, const __CFString *a2)
{
  int v4 = *((_DWORD *)this + 155);
  CFStringRef v5 = @"iphone";
  CFStringRef v6 = @"ipad";
  BOOL v7 = v4 != 2;
  if (v4 != 2) {
    CFStringRef v6 = 0;
  }
  if (v4 == 3) {
    BOOL v7 = 0;
  }
  else {
    CFStringRef v5 = v6;
  }
  BOOL v8 = v4 != 1 && v7;
  if (v4 == 1) {
    CFStringRef v9 = @"*";
  }
  else {
    CFStringRef v9 = v5;
  }
  CFStringRef Value = (void *)CFDictionaryGetValue(*((CFDictionaryRef *)this + 46), v9);
  if (Value)
  {
    if (v8) {
      return;
    }
  }
  else
  {
    CFStringRef Value = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    CFDictionarySetValue(*((CFMutableDictionaryRef *)this + 46), v9, Value);
    CFRelease(Value);
    if (v8) {
      return;
    }
  }
  switch(*((_DWORD *)this + 156))
  {
    case 6:
      CFStringRef v11 = @"fixed-layout";
      goto LABEL_36;
    case 7:
      if (CFStringCompare(a2, @"pre-paginated", 0)) {
        return;
      }
      CFStringRef v11 = @"fixed-layout";
      CFStringRef v12 = @"true";
      goto LABEL_42;
    case 8:
      if (CFStringCompare(a2, @"none", 0)) {
        return;
      }
      CFStringRef v11 = @"spread";
      goto LABEL_33;
    case 9:
      CFStringRef v11 = @"flow";
      goto LABEL_36;
    case 0xA:
      CFStringRef v11 = @"interactive";
      goto LABEL_36;
    case 0xB:
      CFStringRef v11 = @"specified-fonts";
      goto LABEL_36;
    case 0xC:
      CFStringRef v11 = @"open-to-spread";
      goto LABEL_36;
    case 0xD:
      CFStringRef v11 = @"binding";
      goto LABEL_36;
    case 0xE:
      CFStringRef v11 = @"orientation-lock";
      goto LABEL_36;
    case 0xF:
      if (CFStringCompare(a2, @"portrait", 0))
      {
        if (CFStringCompare(a2, @"landscape", 0))
        {
          if (CFStringCompare(a2, @"auto", 0)) {
            return;
          }
          CFStringRef v11 = @"orientation-lock";
LABEL_33:
          CFStringRef v12 = @"none";
        }
        else
        {
          CFStringRef v11 = @"orientation-lock";
          CFStringRef v12 = @"landscape-only";
        }
      }
      else
      {
        CFStringRef v11 = @"orientation-lock";
        CFStringRef v12 = @"portrait-only";
      }
LABEL_42:
      int v13 = (__CFDictionary *)Value;
LABEL_37:
      CFDictionarySetValue(v13, v11, v12);
      break;
    case 0x10:
      CFStringRef v11 = @"version";
      goto LABEL_36;
    case 0x11:
      CFStringRef v11 = @"respect-image-size-class";
LABEL_36:
      int v13 = (__CFDictionary *)Value;
      CFStringRef v12 = a2;
      goto LABEL_37;
    default:
      return;
  }
}

void ITEpubOpfParser::CaptureFileAsValues(CFDictionaryRef *this, const __CFString *a2)
{
  CFStringRef Value = CFDictionaryGetValue(this[48], @"refines");
  CFStringRef v5 = (const __CFString *)CFDictionaryGetValue(this[48], @"property");
  if (Value) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && CFEqual(v5, @"file-as"))
  {
    BOOL v7 = CFDictionaryGetValue(this[48], @"xml:lang");
    if (!v7) {
      BOOL v7 = CFDictionaryGetValue(this[48], @"lang");
    }
    if (a2)
    {
      *(_OWORD *)keys = *(_OWORD *)&off_3C0778;
      v10[0] = a2;
      v10[1] = v7;
      if (v7) {
        CFIndex v8 = 2;
      }
      else {
        CFIndex v8 = 1;
      }
      CFDictionaryRef v9 = CFDictionaryCreate(kCFAllocatorDefault, (const void **)keys, v10, v8, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
      CFDictionarySetValue(this[47], Value, v9);
      CFRelease(v9);
    }
  }
}

std::string *ITEpubOpfParser::author(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 120);
  if (*(char *)(a1 + 143) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::title(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 144);
  if (*(char *)(a1 + 167) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::language(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 168);
  if (*(char *)(a1 + 191) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::genre(std::string *result, std::string *this)
{
  CFStringRef v2 = (const std::string::value_type *)&result[8];
  if (SHIBYTE(result[8].__r_.__value_.__r.__words[2]) < 0)
  {
    if (!result[8].__r_.__value_.__l.__size_) {
      goto LABEL_7;
    }
    CFStringRef v2 = *(const std::string::value_type **)v2;
    return std::string::assign(this, v2);
  }
  if (*((unsigned char *)&result[8].__r_.__value_.__s + 23)) {
    return std::string::assign(this, v2);
  }
LABEL_7:
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    *this->__r_.__value_.__l.__data_ = 0;
    this->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
  }
  return result;
}

std::string *ITEpubOpfParser::publisherName(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 240);
  if (*(char *)(a1 + 263) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::publisherLocation(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 264);
  if (*(char *)(a1 + 287) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::publisherYear(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 288);
  if (*(char *)(a1 + 311) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::uniqueIdentifier(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 552);
  if (*(char *)(a1 + 575) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

std::string *ITEpubOpfParser::uniqueIdentifierWithUUIDScheme(uint64_t a1, std::string *this)
{
  uint64_t v3 = (const std::string::value_type *)(a1 + 576);
  if (*(char *)(a1 + 599) < 0) {
    uint64_t v3 = *(const std::string::value_type **)v3;
  }
  return std::string::assign(this, v3);
}

uint64_t ITEpubOpfParser::_lowerHrefInSpine(CFArrayRef *this, const __CFString *a2, uint64_t a3)
{
  CFStringRef v5 = ITEpubXmlParseHandler::copyHrefStrippingHash(a2, a2);
  if ((int)a3 < 1)
  {
LABEL_7:
    if (!v5) {
      return a3;
    }
LABEL_8:
    CFRelease(v5);
    return a3;
  }
  uint64_t v6 = a3;
  while (1)
  {
    uint64_t v7 = v6 - 1;
    ValueAtIndeCGFloat x = CFArrayGetValueAtIndex(this[42], (v6 - 1));
    if (ValueAtIndex)
    {
      CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(this[40], ValueAtIndex);
      if (Value)
      {
        CFStringRef v10 = (const __CFString *)CFDictionaryGetValue(Value, @"unescaped_href");
        if (CFEqual(v10, v5)) {
          break;
        }
      }
    }
    --v6;
    if ((unint64_t)(v7 + 1) <= 1) {
      goto LABEL_7;
    }
  }
  a3 = (v6 - 1);
  if (v5) {
    goto LABEL_8;
  }
  return a3;
}

const __CFString *ITEpubOpfParser::_lowestHrefInSpine(ITEpubOpfParser *this)
{
  uint64_t v3 = (const __CFString **)*((void *)this + 59);
  CFStringRef v2 = (const __CFString **)*((void *)this + 60);
  if ((unint64_t)((char *)v2 - (char *)v3) < 9)
  {
    if (v2 == v3) {
      sub_14A20();
    }
    return *v3;
  }
  else
  {
    CFIndex Count = CFArrayGetCount(*((CFArrayRef *)this + 42));
    if (v3 == *((const __CFString ***)this + 60))
    {
      return 0;
    }
    else
    {
      uint64_t v5 = Count;
      CFStringRef v6 = 0;
      do
      {
        uint64_t v7 = ITEpubOpfParser::_lowerHrefInSpine((CFArrayRef *)this, *v3, v5);
        if ((int)v5 > (int)v7)
        {
          CFStringRef v6 = *v3;
          uint64_t v5 = v7;
        }
        if (!v5) {
          break;
        }
        ++v3;
      }
      while (v3 != *((const __CFString ***)this + 60));
    }
  }
  return v6;
}

const __CFString *ITEpubOpfParser::copyFirstHref(ITEpubOpfParser *this)
{
  CFStringRef v1 = (const __CFString *)*((void *)this + 62);
  if (!v1)
  {
    if (*((void *)this + 60) == *((void *)this + 59)) {
      return 0;
    }
    CFStringRef v1 = ITEpubOpfParser::_lowestHrefInSpine(this);
    if (!v1) {
      return v1;
    }
  }
  CFRetain(v1);
  return v1;
}

const void *ITEpubOpfParser::copyReaderStartPageHref(ITEpubOpfParser *this)
{
  CFStringRef result = (const void *)*((void *)this + 62);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 62);
  }
  return result;
}

const void *ITEpubOpfParser::copyFileAsDictionary(ITEpubOpfParser *this)
{
  CFStringRef result = (const void *)*((void *)this + 47);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 47);
  }
  return result;
}

const void *ITEpubOpfParser::copyManifestIdDictionary(ITEpubOpfParser *this)
{
  CFStringRef result = (const void *)*((void *)this + 40);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 40);
  }
  return result;
}

const void *ITEpubOpfParser::copyManifestHrefDictionary(ITEpubOpfParser *this)
{
  CFStringRef result = (const void *)*((void *)this + 39);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 39);
  }
  return result;
}

const void *ITEpubOpfParser::copyManifestArray(ITEpubOpfParser *this)
{
  CFStringRef result = (const void *)*((void *)this + 41);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 41);
  }
  return result;
}

const void *ITEpubOpfParser::copySpineArray(ITEpubOpfParser *this)
{
  CFStringRef result = (const void *)*((void *)this + 42);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 42);
  }
  return result;
}

const void *ITEpubOpfParser::platformOptions(void *a1, unsigned int a2)
{
  if (!a1[45] && !a1[44]) {
    return 0;
  }
  CFDictionaryRef v4 = (const __CFDictionary *)a1[46];
  if (!v4) {
    return 0;
  }
  if (!CFDictionaryGetCount(v4) || a2 > 2) {
    return 0;
  }
  uint64_t v7 = off_3C07C0[a2];
  CFDictionaryRef v8 = (const __CFDictionary *)a1[46];

  return CFDictionaryGetValue(v8, v7);
}

void sub_14A20()
{
}

void sub_14A38(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_14A94(exception, a1);
}

void sub_14A80(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_14A94(std::logic_error *a1, const char *a2)
{
  CFStringRef result = std::logic_error::logic_error(a1, a2);
  return result;
}

uint64_t sub_14D18()
{
  qword_409B28 = (uint64_t)objc_alloc_init((Class)objc_opt_class());

  return _objc_release_x1();
}

void sub_14FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_14FC8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_14FD8(uint64_t a1)
{
}

uint64_t sub_14FE0(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [*(id *)(a1[4] + 8) objectForKeyedSubscript:a1[5]];

  return _objc_release_x1();
}

void sub_150E8(uint64_t a1)
{
  CFStringRef v2 = *(void **)(*(void *)(a1 + 32) + 8);
  uint64_t v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
  [v2 setObject:v3 forKey:*(void *)(a1 + 40)];

  id v4 = +[NSUserDefaults standardUserDefaults];
  [v4 setObject:*(void *)(*(void *)(a1 + 32) + 8) forKey:@"_BCWWebRepExternalLoadApprovalCache"];
}

void sub_15230(uint64_t a1)
{
  id v3 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKeyedSubscript:*(void *)(a1 + 40)];
  if ((objc_opt_respondsToSelector() & 1) != 0 && ([v3 BOOLValue] & 1) == 0)
  {
    [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:*(void *)(a1 + 40)];
    CFStringRef v2 = +[NSUserDefaults standardUserDefaults];
    [v2 setObject:*(void *)(*(void *)(a1 + 32) + 8) forKey:@"_BCWWebRepExternalLoadApprovalCache"];
  }
}

void sub_15340(uint64_t a1)
{
  CFStringRef v2 = +[NSUserDefaults standardUserDefaults];
  if ([v2 BOOLForKey:@"_BCWWebRepExternalLoadApprovalCacheClear"])
  {
    [v2 removeObjectForKey:@"_BCWWebRepExternalLoadApprovalCache"];
    [v2 removeObjectForKey:@"_BCWWebRepExternalLoadApprovalCacheClear"];
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 8);
    *(void *)(v3 + 8) = 0;
  }
  if (!*(void *)(*(void *)(a1 + 32) + 8))
  {
    id v5 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void **)(v6 + 8);
    *(void *)(v6 + 8) = v5;

    objc_opt_class();
    CFIndex v17 = v2;
    CFDictionaryRef v8 = [v2 objectForKey:@"_BCWWebRepExternalLoadApprovalCache"];
    CFDictionaryRef v9 = BUDynamicCast();

    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    CFStringRef v10 = [v9 allKeys];
    id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v19;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v19 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void *)(*((void *)&v18 + 1) + 8 * i);
          BOOL v16 = [v9 objectForKeyedSubscript:v15];
          if ((objc_opt_respondsToSelector() & 1) != 0 && [v16 BOOLValue]) {
            [*(id *)(*(void *)(a1 + 32) + 8) setObject:&__kCFBooleanTrue forKey:v15];
          }
        }
        id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v12);
    }

    CFStringRef v2 = v17;
  }
}

void sub_15654(uint64_t a1)
{
  CFStringRef v1 = [*(id *)(a1 + 32) be_wkContentViewClass];
  if (v1)
  {
    CFStringRef v2 = v1;
    BESwizzleInstanceMethods(v1, "setUpTextSelectionAssistant", "be_setUpTextSelectionAssistant");
    BESwizzleInstanceMethods(v2, "continueContextMenuInteraction:", "be_continueContextMenuInteraction:");
  }
}

void sub_15718(id a1)
{
  qword_409B40 = (uint64_t)NSClassFromString(@"WKContentView");
}

void sub_159C8(uint64_t a1, void *a2)
{
  id v5 = a2;
  [v5 setPreviewProvider:0];
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_15C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_15C90(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_15CA0(uint64_t a1)
{
}

void sub_15CA8(uint64_t a1)
{
  CFStringRef v2 = (void *)qword_409B58;
  if (!qword_409B58)
  {
    uint64_t v3 = +[NSMapTable weakToWeakObjectsMapTable];
    id v4 = (void *)qword_409B58;
    qword_409B58 = v3;

    CFStringRef v2 = (void *)qword_409B58;
  }
  uint64_t v5 = [v2 objectForKey:*(void *)(a1 + 32)];
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    uint64_t v8 = [*(id *)(a1 + 48) _standardProcessPoolWithSingleWebProcess:*(unsigned __int8 *)(a1 + 56) forWebTOC:*(unsigned __int8 *)(a1 + 57)];
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    CFStringRef v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = (void *)qword_409B58;
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    [v11 setObject:v13 forKey:v12];
  }
}

id sub_165B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) be_resumeLoading];
}

uint64_t sub_16E0C(void *a1)
{
  id v1 = a1;
  unint64_t v2 = (unint64_t)[v1 mode];
  if (v2 > 4) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = qword_32ABC0[v2];
  }
  unsigned int v4 = [v1 isHorizontalScroll];

  if (v4) {
    return 1;
  }
  else {
    return v3;
  }
}

uint64_t sub_16FB8(uint64_t a1)
{
  [*(id *)(a1 + 32) setBe_isHorizontalScroll:[*(id *)(a1 + 40) isHorizontalScroll]];
  unint64_t v2 = [*(id *)(a1 + 48) sinfInfo];
  uint64_t v3 = [v2 allKeys];
  id v4 = [v3 count];

  if (v4) {
    [*(id *)(a1 + 32) be_containsProtectedContent];
  }
  [*(id *)(a1 + 32) be_enableAX];
  [*(id *)(a1 + 40) applyToWebView:*(void *)(a1 + 32)];
  [*(id *)(a1 + 64) _setupContentBlockingRulesforWebView:*(void *)(a1 + 32) rule:[*(id *)(a1 + 48) contentBlockingRule]];
  [*(id *)(a1 + 64) _applyMetaViewportOverridesToWebView:*(void *)(a1 + 32) fixedLayoutSize:*(double *)(a1 + 72) fixedLayoutSize:*(double *)(a1 + 80)];
  if (*(void *)(a1 + 88) == 4)
  {
    uint64_t v5 = [*(id *)(a1 + 32) configuration];
    uint64_t v6 = [v5 defaultWebpagePreferences];
    [v6 _setMouseEventPolicy:1];
  }
  [*(id *)(a1 + 64) _modifyScrollViewBehaviors:*(void *)(a1 + 32)];
  uint64_t v7 = *(void **)(a1 + 64);
  uint64_t v8 = [*(id *)(a1 + 32) be_navigationHandler];
  uint64_t v9 = [*(id *)(a1 + 32) be_userContentController];
  [v7 _configureNavigationForCoalescingLoadEvents:v8 userContentController:v9];

  CFStringRef v10 = *(uint64_t (**)(void))(*(void *)(a1 + 56) + 16);

  return v10();
}

uint64_t sub_17478(uint64_t a1)
{
  [*(id *)(a1 + 32) setBe_isHorizontalScroll:[*(id *)(a1 + 40) isHorizontalScroll]];
  [*(id *)(a1 + 40) applyToWebView:*(void *)(a1 + 32)];
  [*(id *)(a1 + 80) _setupContentBlockingRulesforWebView:*(void *)(a1 + 32) rule:[*(id *)(a1 + 48) contentBlockingRule]];
  [*(id *)(a1 + 80) _applyMetaViewportOverridesToWebView:*(void *)(a1 + 32) fixedLayoutSize:CGSizeZero.width, CGSizeZero.height];
  [*(id *)(a1 + 80) _modifyScrollViewBehaviors:*(void *)(a1 + 32)];
  [*(id *)(a1 + 80) _configureNavigationForCoalescingLoadEvents:*(void *)(a1 + 56) userContentController:*(void *)(a1 + 64)];
  unint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 72) + 16);

  return v2();
}

uint64_t sub_17B40(uint64_t a1)
{
  [*(id *)(a1 + 32) setBe_isHorizontalScroll:[*(id *)(a1 + 40) isHorizontalScroll]];
  [*(id *)(a1 + 40) applyToWebView:*(void *)(a1 + 32)];
  [*(id *)(a1 + 80) _setupContentBlockingRulesforWebView:*(void *)(a1 + 32) rule:[*(id *)(a1 + 48) contentBlockingRule]];
  [*(id *)(a1 + 80) _applyMetaViewportOverridesToWebView:*(void *)(a1 + 32) fixedLayoutSize:CGSizeZero.width, CGSizeZero.height];
  [*(id *)(a1 + 80) _modifyScrollViewBehaviors:*(void *)(a1 + 32)];
  [*(id *)(a1 + 80) _configureNavigationForCoalescingLoadEvents:*(void *)(a1 + 56) userContentController:*(void *)(a1 + 64)];
  unint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 72) + 16);

  return v2();
}

id BESupportedImageMimeTypes()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409B68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_409B68))
  {
    qword_409B60 = sub_198B8();
    __cxa_guard_release(&qword_409B68);
  }
  v0 = (void *)qword_409B60;

  return v0;
}

void sub_198A0(_Unwind_Exception *a1)
{
}

id sub_198B8()
{
  id v0 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", @"application/bmp", @"application/jpg", @"application/png", @"application/tif", @"application/tiff", @"application/x-bmp", @"application/x-jpg", @"application/x-png", @"application/x-tif", @"application/x-tiff", @"application/x-win-bitmap", @"image/apng", @"image/bmp", @"image/gif", @"image/gi_", @"image/jp2", @"image/jpeg",
         @"image/jpe_",
         @"image/jpg",
         @"image/jp_",
         @"image/ms-bmp",
         @"image/pipeg",
         @"image/pjpeg",
         @"image/png",
         @"image/tif",
         @"image/tiff",
         @"image/vnd.microsoft.icon",
         @"image/vnd.switfview-jpeg",
         @"image/webp",
         @"image/x-bmp",
         @"image/x-icon",
         @"image/x-ms-bmp",
         @"image/x-tif",
         @"image/x-tiff",
         @"image/x-win-bitmap",
         @"image/x-windows-bmp",
         @"image/x-xbitmap",
         @"image/avif",
         @"image/heic",
         @"image/heic-sequence",
         @"image/heif",
         @"image/heif-sequence",
         @"image/jxl",
         @"image/x-apple-adaptive-glyph",
         0);

  return v0;
}

id BESupportedImageMimeTypesJSON()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409B78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_409B78))
  {
    qword_409B70 = sub_19B3C();
    __cxa_guard_release(&qword_409B78);
  }
  id v0 = (void *)qword_409B70;

  return v0;
}

void sub_19B24(_Unwind_Exception *a1)
{
}

id sub_19B3C()
{
  id v0 = BESupportedImageMimeTypes();
  id v1 = [v0 allObjects];
  id v6 = 0;
  unint64_t v2 = +[NSJSONSerialization dataWithJSONObject:v1 options:0 error:&v6];
  id v3 = v6;

  if ([v2 length]) {
    id v4 = [objc_alloc((Class)NSString) initWithData:v2 encoding:4];
  }
  else {
    id v4 = 0;
  }

  return v4;
}

void sub_19C10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id BEDoesURLPointToAnImageFile(void *a1)
{
  id v1 = a1;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409B88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_409B88))
  {
    qword_409B80 = sub_19D0C();
    __cxa_guard_release(&qword_409B88);
  }
  unint64_t v2 = (void *)qword_409B80;
  id v3 = [v1 pathExtension];
  id v4 = [v2 containsObject:v3];

  return v4;
}

void sub_19CD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_409B88);

  _Unwind_Resume(a1);
}

id sub_19D0C()
{
  id v0 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", @"avif", @"bmp", @"dib", @"gif", @"heic", @"heics", @"heif", @"heifs", @"hif", @"ico", @"j2c", @"j2k", @"jp2", @"jpe", @"jpeg", @"jpf", @"jpg",
         @"jpx",
         @"jxl",
         @"png",
         @"tif",
         @"tiff",
         @"xbm",
         @"webp",
         0);

  return v0;
}

id BEDoesURLPointToAFontFile(void *a1)
{
  id v1 = a1;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409B98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_409B98))
  {
    qword_409B90 = sub_19F08();
    __cxa_guard_release(&qword_409B98);
  }
  unint64_t v2 = (void *)qword_409B90;
  id v3 = [v1 pathExtension];
  id v4 = [v2 containsObject:v3];

  return v4;
}

void sub_19ED4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_409B98);

  _Unwind_Resume(a1);
}

id sub_19F08()
{
  id v0 = [objc_alloc((Class)NSSet) initWithObjects:@"woff", @"woff2", @"otf", @"ttf", @"sfnt", 0];

  return v0;
}

id BEDoesURLPointToUSDZFile(void *a1)
{
  id v1 = [a1 pathExtension];
  id v2 = [v1 isEqualToString:@"usdz"];

  return v2;
}

void sub_19FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ITEpubPrintableParser::ITEpubPrintableParser(ITEpubPrintableParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  void *v1 = off_3C09A8;
  v1[18] = 0;
  v1[17] = 0;
  v1[15] = 0;
  v1[16] = v1 + 17;
}

{
  void *v1;

  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  void *v1 = off_3C09A8;
  v1[18] = 0;
  v1[17] = 0;
  v1[15] = 0;
  v1[16] = v1 + 17;
}

void ITEpubPrintableParser::~ITEpubPrintableParser(ITEpubPrintableParser *this)
{
  *(void *)this = off_3C09A8;
  id v2 = (char *)this + 128;
  sub_1A0D0(*((void **)this + 16), (void *)this + 17, (void (*)(void, void))sub_1A150);
  sub_1A330((uint64_t)v2, *((void **)this + 17));

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubPrintableParser::~ITEpubPrintableParser(this);

  operator delete();
}

void (*sub_1A0D0(void *a1, void *a2, void (*a3)(void, void)))(void, void)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      a3(v5[4], *((unsigned int *)v5 + 10));
      id v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          id v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          uint64_t v5 = v7;
        }
        while (!v8);
      }
      uint64_t v5 = v7;
    }
    while (v7 != a2);
  }
  return a3;
}

void sub_1A150(CFTypeRef cf)
{
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t ITEpubPrintableParser::StartElement(ITEpubPrintableParser *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement((CFMutableArrayRef *)this, a2, a3);
  uint64_t result = ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"printable");
  if (result)
  {
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"xmlns");
    if (!Value && (CFStringRef Value = (const __CFString *)*((void *)this + 3)) == 0
      || (uint64_t result = CFStringCompare(Value, @"http://apple.com/ibooks/printable", 0)) == 0)
    {
      uint64_t result = (uint64_t)CFDictionaryGetValue(a3, @"default");
      if (result)
      {
        uint64_t result = ITEpubXmlParseHandler::BOOLeanForString(this, (CFStringRef)result);
        *((_DWORD *)this + 30) = result;
      }
    }
    *((_DWORD *)this + 31) = 1;
  }
  else if (*((_DWORD *)this + 31))
  {
    uint64_t result = ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"itemref");
    if (result)
    {
      CFStringRef v8 = (const __CFString *)CFDictionaryGetValue(a3, @"idref");
      CFStringRef v10 = v8;
      uint64_t result = (uint64_t)CFDictionaryGetValue(a3, @"printable");
      if (result)
      {
        if (v8)
        {
          BOOL v9 = ITEpubXmlParseHandler::BOOLeanForString(this, (CFStringRef)result);
          CFRetain(v8);
          id v11 = &v10;
          uint64_t result = (uint64_t)sub_1A384((uint64_t **)this + 16, &v10, (uint64_t)&std::piecewise_construct, &v11);
          *(_DWORD *)(result + 40) = v9;
        }
      }
    }
  }
  return result;
}

uint64_t ITEpubPrintableParser::isIdRefPrintable(ITEpubPrintableParser *this, const __CFString *a2)
{
  CFStringRef v6 = a2;
  id v3 = (ITEpubPrintableParser *)sub_1A6CC((uint64_t)this + 128, &v6);
  if ((ITEpubPrintableParser *)((char *)this + 136) == v3) {
    id v4 = (unsigned int *)((char *)this + 120);
  }
  else {
    id v4 = (unsigned int *)((char *)v3 + 40);
  }
  return *v4;
}

void sub_1A330(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1A330(a1, *a2);
    sub_1A330(a1, a2[1]);
    operator delete(a2);
  }
}

void *sub_1A384(uint64_t **a1, CFStringRef *a2, uint64_t a3, void **a4)
{
  CFStringRef v6 = (void **)sub_1A410((uint64_t)a1, &v10, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    CFStringRef v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x30uLL);
    v7[4] = **a4;
    *((_DWORD *)v7 + 10) = 0;
    sub_1A4DC(a1, v10, v8, v7);
  }
  return v7;
}

void *sub_1A410(uint64_t a1, void *a2, CFStringRef *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  id v4 = *(void **)(a1 + 8);
  if (v4)
  {
    while (1)
    {
      uint64_t v7 = v4;
      CFStringRef v8 = *a3;
      CFStringRef v9 = (const __CFString *)v7[4];
      if (*a3) {
        BOOL v10 = v9 == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        if (!v9) {
          goto LABEL_18;
        }
LABEL_11:
        if (v9) {
          BOOL v11 = v8 == 0;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11)
        {
          if (v8) {
            goto LABEL_24;
          }
        }
        else if (CFStringCompare(v9, v8, 0) != kCFCompareLessThan)
        {
          goto LABEL_24;
        }
        uint64_t v5 = v7 + 1;
        id v4 = (void *)v7[1];
        if (!v4) {
          goto LABEL_24;
        }
      }
      else
      {
        if (CFStringCompare(*a3, v9, 0) != kCFCompareLessThan)
        {
          CFStringRef v9 = (const __CFString *)v7[4];
          CFStringRef v8 = *a3;
          goto LABEL_11;
        }
LABEL_18:
        id v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_24;
        }
      }
    }
  }
  uint64_t v7 = (void *)(a1 + 8);
LABEL_24:
  *a2 = v7;
  return v5;
}

uint64_t *sub_1A4DC(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_1A534(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_1A534(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      id v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      id v3 = (uint64_t *)v2[2];
      id v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            CFStringRef v9 = (uint64_t **)a2[2];
          }
          else
          {
            CFStringRef v9 = (uint64_t **)v2[1];
            BOOL v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              id v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            void *v9 = v2;
            v2[2] = (uint64_t)v9;
            id v3 = v9[2];
            id v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *id v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            id v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          id v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        id v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *id v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *uint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t sub_1A6CC(uint64_t a1, const __CFString **a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = sub_1A744(a1, a2, *(void *)(a1 + 8), a1 + 8);
  if (v3 == v4) {
    return v3;
  }
  uint64_t v5 = v4;
  CFStringRef v6 = *(const __CFString **)(v4 + 32);
  if (*a2) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    if (!v6) {
      return v3;
    }
  }
  else if (CFStringCompare(*a2, v6, 0) == kCFCompareLessThan)
  {
    return v3;
  }
  return v5;
}

uint64_t sub_1A744(uint64_t a1, const __CFString **a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    do
    {
      CFStringRef v7 = *(const __CFString **)(v5 + 32);
      CFStringRef v8 = *a2;
      BOOL v9 = *a2 == 0;
      if (v7) {
        BOOL v10 = v8 == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        BOOL v9 = CFStringCompare(v7, v8, 0) == kCFCompareLessThan;
      }
      BOOL v11 = !v9;
      if (v9) {
        uint64_t v12 = (uint64_t *)(v5 + 8);
      }
      else {
        uint64_t v12 = (uint64_t *)v5;
      }
      if (v11) {
        a4 = v5;
      }
      uint64_t v5 = *v12;
    }
    while (*v12);
  }
  return a4;
}

void BESwizzleInstanceMethods(objc_class *a1, const char *a2, const char *a3)
{
  if (a1)
  {
    InstanceMethod = class_getInstanceMethod(a1, a2);
    CFStringRef v7 = class_getInstanceMethod(a1, a3);
    if (InstanceMethod)
    {
      CFStringRef v8 = v7;
      if (v7)
      {
        Implementation = method_getImplementation(v7);
        TypeEncoding = method_getTypeEncoding(v8);
        if (class_addMethod(a1, a2, Implementation, TypeEncoding))
        {
          BOOL v11 = method_getImplementation(InstanceMethod);
          uint64_t v12 = method_getTypeEncoding(InstanceMethod);
          class_replaceMethod(a1, a3, v11, v12);
        }
        else
        {
          method_exchangeImplementations(InstanceMethod, v8);
        }
      }
    }
  }
}

id BEGetWeakAssociatedObject(void *a1, const void *a2)
{
  id v3 = a1;
  uint64_t v4 = objc_getAssociatedObject(v3, a2);
  uint64_t v5 = (void *)v4;
  if (v4)
  {
    CFStringRef v6 = (*(void (**)(uint64_t))(v4 + 16))(v4);
    if (!v6) {
      BESetWeakAssociatedObject(v3, a2, 0);
    }
  }
  else
  {
    CFStringRef v6 = 0;
  }

  return v6;
}

void BESetWeakAssociatedObject(void *a1, const void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  objc_initWeak(&location, v6);
  if (v6)
  {
    BOOL v9 = _NSConcreteStackBlock;
    uint64_t v10 = 3221225472;
    BOOL v11 = sub_1AA68;
    uint64_t v12 = &unk_3C0A00;
    objc_copyWeak(&v13, &location);
    CFStringRef v7 = objc_retainBlock(&v9);
    objc_destroyWeak(&v13);
  }
  else
  {
    CFStringRef v7 = 0;
  }
  id v8 = [v7 copy:v9, v10, v11, v12];
  objc_setAssociatedObject(v5, a2, v8, (char *)&def_7BFC0 + 1);

  objc_destroyWeak(&location);
}

void sub_1AA54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_1AA68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  return WeakRetained;
}

void ITEpub3NavParser::ITEpub3NavParser(ITEpub3NavParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C0A80;
  *(void *)(v1 + 304) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_DWORD *)(v1 + 296) = 0;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
}

{
  uint64_t v1;

  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v1 = off_3C0A80;
  *(void *)(v1 + 304) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_DWORD *)(v1 + 296) = 0;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
}

void ITEpub3NavParser::~ITEpub3NavParser(ITEpub3NavParser *this)
{
  *(void *)this = off_3C0A80;
  id v2 = (atomic_uint *)*((void *)this + 15);
  if (v2)
  {
    ITRetain::release(v2);
    *((void *)this + 15) = 0;
  }
  id v3 = (atomic_uint *)*((void *)this + 16);
  if (v3)
  {
    ITRetain::release(v3);
    *((void *)this + 16) = 0;
  }
  uint64_t v4 = (atomic_uint *)*((void *)this + 17);
  if (v4)
  {
    ITRetain::release(v4);
    *((void *)this + 17) = 0;
  }
  id v5 = (const void *)*((void *)this + 18);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 18) = 0;
  }
  id v6 = (const void *)*((void *)this + 22);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 22) = 0;
  }
  CFStringRef v7 = (const void *)*((void *)this + 19);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 19) = 0;
  }
  id v8 = (const void *)*((void *)this + 20);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 20) = 0;
  }
  BOOL v9 = (const void *)*((void *)this + 21);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 21) = 0;
  }
  uint64_t v10 = (const void *)*((void *)this + 38);
  if (v10)
  {
    CFRelease(v10);
    *((void *)this + 38) = 0;
  }
  sub_1C870((void *)this + 31);
  if (*((char *)this + 231) < 0) {
    operator delete(*((void **)this + 26));
  }
  if (*((char *)this + 207) < 0) {
    operator delete(*((void **)this + 23));
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpub3NavParser::~ITEpub3NavParser(this);

  operator delete();
}

uint64_t ITEpub3NavParser::headNavPoint(ITEpub3NavParser *this)
{
  int v1 = *((_DWORD *)this + 58);
  switch(v1)
  {
    case 3:
      id v2 = (char *)this + 136;
      return *(void *)v2;
    case 2:
      id v2 = (char *)this + 128;
      return *(void *)v2;
    case 1:
      id v2 = (char *)this + 120;
      return *(void *)v2;
  }
  return 0;
}

uint64_t ITEpub3NavParser::setHeadNavPoint(uint64_t this, ITNavPoint *a2)
{
  int v2 = *(_DWORD *)(this + 232);
  switch(v2)
  {
    case 3:
      id v3 = (void *)(this + 136);
      break;
    case 2:
      id v3 = (void *)(this + 128);
      break;
    case 1:
      id v3 = (void *)(this + 120);
      break;
    default:
      return this;
  }
  void *v3 = a2;
  return this;
}

atomic_uint *ITEpub3NavParser::resetHeadNavPoint(atomic_uint *this)
{
  int v1 = this;
  atomic_uint v2 = this[58];
  switch(v2)
  {
    case 3:
      id v3 = (atomic_uint **)(this + 34);
      break;
    case 2:
      id v3 = (atomic_uint **)(this + 32);
      break;
    case 1:
      id v3 = (atomic_uint **)(this + 30);
      break;
    default:
      goto LABEL_9;
  }
  this = *v3;
  if (*v3)
  {
    this = (atomic_uint *)ITRetain::release(this);
    atomic_uint v2 = v1[58];
  }
LABEL_9:
  switch(v2)
  {
    case 3:
      uint64_t v4 = v1 + 34;
      break;
    case 2:
      uint64_t v4 = v1 + 32;
      break;
    case 1:
      uint64_t v4 = v1 + 30;
      break;
    default:
      return this;
  }
  *uint64_t v4 = 0;
  return this;
}

void ITEpub3NavParser::pushDownOneLevel(ITEpub3NavParser *this)
{
}

void sub_1B398()
{
}

uint64_t ITEpub3NavParser::popUpOneLevel(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 232);
  switch(v1)
  {
    case 3:
      atomic_uint v2 = (ITNavPoint **)(this + 136);
      break;
    case 2:
      atomic_uint v2 = (ITNavPoint **)(this + 128);
      break;
    case 1:
      atomic_uint v2 = (ITNavPoint **)(this + 120);
      break;
    default:
      return this;
  }
  id v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = (ITNavPoint *)*((void *)v3 + 5);
    if (v4)
    {
      if (v1 == 3) {
        id v5 = (ITNavPoint **)(this + 136);
      }
      else {
        id v5 = (ITNavPoint **)(v1 == 2 ? this + 128 : this + 120);
      }
      *id v5 = v4;
      this = ITNavPoint::contentFileIncludingHash(v3);
      if (!this)
      {
        ITRetain::retain((atomic_uint *)v3);
        ITNavPoint::removeChild((uint64_t)v4, (atomic_uint *)v3);
        uint64_t v6 = *((void *)v3 + 3) - *((void *)v3 + 2);
        if (v6)
        {
          unint64_t v7 = 0;
          unint64_t v8 = v6 >> 3;
          if (v8 <= 1) {
            uint64_t v9 = 1;
          }
          else {
            uint64_t v9 = v8;
          }
          do
          {
            uint64_t v10 = (atomic_uint *)ITNavPoint::childAtIndex(v3, v7);
            if (v10) {
              ITNavPoint::addChild(v4, v10);
            }
            ++v7;
          }
          while (v9 != v7);
        }
        return ITRetain::release((atomic_uint *)v3);
      }
    }
  }
  return this;
}

void ITEpub3NavParser::takeFoundTextAsName(ITEpub3NavParser *this)
{
  int v2 = *((_DWORD *)this + 58);
  switch(v2)
  {
    case 3:
      id v3 = (ITNavPoint **)((char *)this + 136);
      break;
    case 2:
      id v3 = (ITNavPoint **)((char *)this + 128);
      break;
    case 1:
      id v3 = (ITNavPoint **)((char *)this + 120);
      break;
    default:
      return;
  }
  uint64_t v4 = *v3;
  if (*v3)
  {
    id v5 = (char *)this + 184;
    if (*((char *)this + 207) < 0)
    {
      if (!*((void *)this + 24))
      {
LABEL_16:
        unint64_t v8 = (char *)this + 72;
        if (*((char *)this + 95) < 0)
        {
          if (!*((void *)this + 10)) {
            return;
          }
          unint64_t v8 = *(const char **)v8;
        }
        else if (!*((unsigned char *)this + 95))
        {
          return;
        }
        CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorDefault, v8, 0x8000100u);
        if (!v7) {
          return;
        }
LABEL_24:
        ITNavPoint::setContentName(v4, v7);
        CFRelease(v7);
        return;
      }
      id v5 = *(const char **)v5;
    }
    else if (!*((unsigned char *)this + 207))
    {
      goto LABEL_16;
    }
    CFStringRef v6 = CFStringCreateWithCString(kCFAllocatorDefault, v5, 0x8000100u);
    CFStringRef v7 = v6;
    if (*((char *)this + 207) < 0)
    {
      **((unsigned char **)this + 23) = 0;
      *((void *)this + 24) = 0;
      if (!v6) {
        return;
      }
    }
    else
    {
      *((unsigned char *)this + 184) = 0;
      *((unsigned char *)this + 207) = 0;
      if (!v6) {
        return;
      }
    }
    goto LABEL_24;
  }
}

std::string *ITEpub3NavParser::takeFoundTextAsAccumulatedText(std::string *this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = (const std::string::value_type *)&this[3];
  if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0)
  {
    if (!this[3].__r_.__value_.__l.__size_) {
      return this;
    }
    id v3 = *(const std::string::value_type **)v2;
  }
  else
  {
    id v3 = (const std::string::value_type *)&this[3];
    if (!*((unsigned char *)&this[3].__r_.__value_.__s + 23)) {
      return this;
    }
  }
  std::string::append((std::string *)((char *)this + 184), v3);
  if (*(char *)(v1 + 95) < 0) {
    int v2 = *(const std::string::value_type **)v2;
  }
  this = std::string::append((std::string *)(v1 + 208), v2);
  if (*(char *)(v1 + 95) < 0)
  {
    **(unsigned char **)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 72) = 0;
    *(unsigned char *)(v1 + 95) = 0;
  }
  return this;
}

void ITEpub3NavParser::takeFoundTextAsHTML(ITEpub3NavParser *this)
{
  int v2 = *((_DWORD *)this + 58);
  switch(v2)
  {
    case 3:
      id v3 = (ITNavPoint **)((char *)this + 136);
      break;
    case 2:
      id v3 = (ITNavPoint **)((char *)this + 128);
      break;
    case 1:
      id v3 = (ITNavPoint **)((char *)this + 120);
      break;
    default:
      return;
  }
  uint64_t v4 = *v3;
  if (*v3)
  {
    id v5 = (char *)this + 208;
    if (*((char *)this + 231) < 0)
    {
      if (!*((void *)this + 27))
      {
LABEL_16:
        unint64_t v8 = (char *)this + 72;
        if (*((char *)this + 95) < 0)
        {
          if (!*((void *)this + 10)) {
            return;
          }
          unint64_t v8 = *(const char **)v8;
        }
        else if (!*((unsigned char *)this + 95))
        {
          return;
        }
        CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorDefault, v8, 0x8000100u);
        if (!v7) {
          return;
        }
LABEL_24:
        ITNavPoint::setContentHTML(v4, v7);
        CFRelease(v7);
        return;
      }
      id v5 = *(const char **)v5;
    }
    else if (!*((unsigned char *)this + 231))
    {
      goto LABEL_16;
    }
    CFStringRef v6 = CFStringCreateWithCString(kCFAllocatorDefault, v5, 0x8000100u);
    CFStringRef v7 = v6;
    if (*((char *)this + 231) < 0)
    {
      **((unsigned char **)this + 26) = 0;
      *((void *)this + 27) = 0;
      if (!v6) {
        return;
      }
    }
    else
    {
      *((unsigned char *)this + 208) = 0;
      *((unsigned char *)this + 231) = 0;
      if (!v6) {
        return;
      }
    }
    goto LABEL_24;
  }
}

std::string *ITEpub3NavParser::takeFoundTextAsAccumulatedHTML(std::string *this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = (const std::string::value_type *)&this[3];
  if (SHIBYTE(this[3].__r_.__value_.__r.__words[2]) < 0)
  {
    if (!this[3].__r_.__value_.__l.__size_) {
      return this;
    }
    int v2 = *(const std::string::value_type **)v2;
  }
  else if (!*((unsigned char *)&this[3].__r_.__value_.__s + 23))
  {
    return this;
  }
  this = std::string::append((std::string *)((char *)this + 208), v2);
  if (*(char *)(v1 + 95) < 0)
  {
    **(unsigned char **)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 72) = 0;
    *(unsigned char *)(v1 + 95) = 0;
  }
  return this;
}

void ITEpub3NavParser::StartNavChildElement(ITEpub3NavParser *this, const __CFString *a2, const __CFDictionary *a3)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"ol"))
  {
    int v6 = *((_DWORD *)this + 58);
    switch(v6)
    {
      case 3:
        CFStringRef v7 = (char *)this + 136;
        break;
      case 2:
        CFStringRef v7 = (char *)this + 128;
        break;
      case 1:
        CFStringRef v7 = (char *)this + 120;
        break;
      default:
        goto LABEL_13;
    }
    if (*(void *)v7) {
      return;
    }
LABEL_13:
    ITEpub3NavParser::pushDownOneLevel(this);
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"li"))
  {
    if (*((char *)this + 207) < 0)
    {
      **((unsigned char **)this + 23) = 0;
      *((void *)this + 24) = 0;
    }
    else
    {
      *((unsigned char *)this + 184) = 0;
      *((unsigned char *)this + 207) = 0;
    }
    if (*((char *)this + 231) < 0)
    {
      **((unsigned char **)this + 26) = 0;
      *((void *)this + 27) = 0;
    }
    else
    {
      *((unsigned char *)this + 208) = 0;
      *((unsigned char *)this + 231) = 0;
    }
    ITEpub3NavParser::pushDownOneLevel(this);
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"span"))
  {
    *((_DWORD *)this + 60) = 1;
    unint64_t v8 = ITEpub3NavParser::copyNewId(this);
    __p = 0;
    std::string::size_type v27 = 0;
    uint64_t v28 = 0;
    ITStrUtil::toString(v8, (uint64_t)&__p);
    CFRelease(v8);
    std::string::append((std::string *)((char *)this + 208), "<span id=\"");
    if (v28 >= 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if (v28 >= 0) {
      std::string::size_type v10 = HIBYTE(v28);
    }
    else {
      std::string::size_type v10 = v27;
    }
    std::string::append((std::string *)((char *)this + 208), p_p, v10);
    std::string::append((std::string *)((char *)this + 208), "\">");
    ITEpub3NavParser::takeFoundTextAsAccumulatedText((std::string *)this);
LABEL_24:
    if (SHIBYTE(v28) < 0) {
      operator delete(__p);
    }
    return;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"img"))
  {
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"class");
    CFStringRef v12 = (const __CFString *)CFDictionaryGetValue(a3, @"src");
    if (!Value || !v12) {
      return;
    }
    __p = 0;
    std::string::size_type v27 = 0;
    uint64_t v28 = 0;
    ITStrUtil::toString(v12, (uint64_t)&__p);
    if (CFEqual(Value, @"gaiji")
      || CFEqual(Value, @"gaiji-wide"))
    {
      *((_DWORD *)this + 60) = 1;
      id v13 = (std::string *)((char *)this + 208);
      std::string::append(v13, "<img src=\"");
      if (v28 >= 0) {
        CFStringRef v14 = (const std::string::value_type *)&__p;
      }
      else {
        CFStringRef v14 = (const std::string::value_type *)__p;
      }
      std::string::append(v13, v14);
      std::string::append(v13, "\"/>");
    }
    goto LABEL_24;
  }
  BOOL doesNodeMatch = ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"ruby");
  int v16 = *((_DWORD *)this + 59);
  if (doesNodeMatch)
  {
    *((_DWORD *)this + 59) = v16 + 1;
    *((_DWORD *)this + 60) = 1;
    std::string::append((std::string *)((char *)this + 208), "<ruby>");
LABEL_42:
    ITEpub3NavParser::takeFoundTextAsAccumulatedText((std::string *)this);
    return;
  }
  if (!v16) {
    goto LABEL_54;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"rb")) {
    goto LABEL_42;
  }
  if (!*((_DWORD *)this + 59)) {
    goto LABEL_54;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"rc")) {
    goto LABEL_42;
  }
  if (*((_DWORD *)this + 59) && ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"rt"))
  {
    std::string::append((std::string *)((char *)this + 208), "<rt>");
  }
  else
  {
LABEL_54:
    if (!ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"a")) {
      return;
    }
    if (*((char *)this + 207) < 0)
    {
      **((unsigned char **)this + 23) = 0;
      *((void *)this + 24) = 0;
    }
    else
    {
      *((unsigned char *)this + 184) = 0;
      *((unsigned char *)this + 207) = 0;
    }
    if (*((char *)this + 231) < 0)
    {
      **((unsigned char **)this + 26) = 0;
      *((void *)this + 27) = 0;
    }
    else
    {
      *((unsigned char *)this + 208) = 0;
      *((unsigned char *)this + 231) = 0;
    }
    int v17 = *((_DWORD *)this + 58);
    switch(v17)
    {
      case 3:
        long long v18 = (ITNavPoint **)((char *)this + 136);
        break;
      case 2:
        long long v18 = (ITNavPoint **)((char *)this + 128);
        break;
      case 1:
        long long v18 = (ITNavPoint **)((char *)this + 120);
        break;
      default:
        return;
    }
    long long v19 = *v18;
    if (*v18)
    {
      CFStringRef v20 = (const __CFString *)CFDictionaryGetValue(a3, @"href");
      ITNavPoint::setContentFile(v19, v20);
      CFStringRef v21 = (const __CFString *)CFDictionaryGetValue(a3, @"epub:type");
      ITNavPoint::setNavPointType(v19, v21);
      if (v20)
      {
        int v22 = *((_DWORD *)this + 58);
        if (v22 == 1)
        {
          if (*((void *)this + 18)) {
            return;
          }
          *((void *)this + 18) = v20;
        }
        else
        {
          if (!v21 || v22 != 2) {
            return;
          }
          if (CFStringFind(v21, @"reader-start-page", 0).location == -1)
          {
            if (*((void *)this + 19)) {
              return;
            }
            BOOL v25 = CFEqual(v21, @"bodymatter")
               || CFEqual(v21, @"acknowledgements")
               || CFEqual(v21, @"dedication")
               || CFEqual(v21, @"epigraph")
               || CFEqual(v21, @"foreward")
               || CFEqual(v21, @"preface")
               || CFEqual(v21, @"introduction")
               || CFEqual(v21, @"frontmatter");
            if (!v25 || *((void *)this + 19)) {
              return;
            }
          }
          else
          {
            CFDictionaryRef v23 = (const void *)*((void *)this + 21);
            if (v23)
            {
              CFRelease(v23);
              *((void *)this + 21) = 0;
            }
            *((void *)this + 21) = v20;
            CFRetain(v20);
            std::string::size_type v24 = (const void *)*((void *)this + 19);
            if (v24)
            {
              CFRelease(v24);
              *((void *)this + 19) = 0;
            }
          }
          *((void *)this + 19) = v20;
        }
        CFRetain(v20);
      }
    }
  }
}

void sub_1BE68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__CFString *ITEpub3NavParser::copyNewId(ITEpub3NavParser *this)
{
  Mutable = CFStringCreateMutable(kCFAllocatorDefault, 0);
  uint64_t v3 = *((unsigned int *)this + 61);
  *((_DWORD *)this + 61) = v3 + 1;
  CFStringAppendFormat(Mutable, 0, @"-ibooks-toc-id-%d", v3);
  uint64_t v4 = (__CFDictionary *)*((void *)this + 38);
  if (!v4)
  {
    uint64_t v4 = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    *((void *)this + 38) = v4;
  }
  id v5 = ITEpub3NavParser::copyTocCfi(this);
  CFDictionaryAddValue(v4, v5, Mutable);
  CFRelease(v5);
  return Mutable;
}

std::string *ITEpub3NavParser::FoundText(std::string *this, const __CFString *a2)
{
  ITEpubXmlParseHandler::FoundText(this, a2);
  if (!HIDWORD(this[9].__r_.__value_.__r.__words[2])) {
    goto LABEL_4;
  }
  uint64_t result = (std::string *)ITEpubXmlParseHandler::CurrentNodeName((CFArrayRef *)this);
  if (!result) {
    return result;
  }
  CFStringRef v4 = (const __CFString *)result;
  if (!ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, (CFStringRef)result, @"ruby"))
  {
    uint64_t result = (std::string *)ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, v4, @"rt");
    if (result)
    {
      return ITEpub3NavParser::takeFoundTextAsAccumulatedHTML(this);
    }
  }
  else
  {
LABEL_4:
    return ITEpub3NavParser::takeFoundTextAsAccumulatedText(this);
  }
  return result;
}

void ITEpub3NavParser::StartElement(ITEpub3NavParser *this, const __CFString *a2, const __CFDictionary *a3)
{
  if (!ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"html"))
  {
    *((_DWORD *)this + 74) += 2;
    sub_1C968((void *)this + 31, (_DWORD *)this + 74);
    *((_DWORD *)this + 74) = 0;
  }
  ITEpubXmlParseHandler::StartElement((CFMutableArrayRef *)this, a2, a3);
  int v6 = *((_DWORD *)this + 58);
  if ((v6 - 1) >= 3)
  {
    if (v6) {
      return;
    }
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"nav"))
    {
      CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"epub:type");
      if (!Value) {
        return;
      }
      CFStringRef v8 = Value;
      if (CFStringCompare(Value, @"toc", 0))
      {
        if (CFStringCompare(v8, @"landmarks", 0))
        {
          if (CFStringCompare(v8, @"page-list", 0)) {
            return;
          }
          int v9 = 3;
        }
        else
        {
          int v9 = 2;
        }
      }
      else
      {
        int v9 = 1;
      }
      *((_DWORD *)this + 58) = v9;
      ITEpub3NavParser::resetHeadNavPoint((atomic_uint *)this);
    }
    else if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"title"))
    {
      if (*((char *)this + 207) < 0)
      {
        **((unsigned char **)this + 23) = 0;
        *((void *)this + 24) = 0;
      }
      else
      {
        *((unsigned char *)this + 184) = 0;
        *((unsigned char *)this + 207) = 0;
      }
      if (*((char *)this + 231) < 0)
      {
        **((unsigned char **)this + 26) = 0;
        *((void *)this + 27) = 0;
      }
      else
      {
        *((unsigned char *)this + 208) = 0;
        *((unsigned char *)this + 231) = 0;
      }
    }
  }
  else
  {
    ITEpub3NavParser::StartNavChildElement(this, a2, a3);
  }
}

uint64_t ITEpub3NavParser::setElementOpen(uint64_t result, int a2)
{
  *(_DWORD *)(result + 232) = a2;
  return result;
}

void ITEpub3NavParser::EndNavChildElement(ITEpub3NavParser *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"nav"))
  {
    *((_DWORD *)this + 58) = 0;
    return;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"span"))
  {
    ITEpub3NavParser::takeFoundTextAsAccumulatedText((std::string *)this);
    CFStringRef v4 = (std::string *)((char *)this + 208);
    id v5 = "</span>";
LABEL_6:
    std::string::append(v4, v5);
    return;
  }
  if (*((_DWORD *)this + 59)
    && (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"rbc")
     || *((_DWORD *)this + 59) && ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"rb")))
  {
    ITEpub3NavParser::takeFoundTextAsAccumulatedText((std::string *)this);
  }
  else
  {
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"ruby"))
    {
      ITEpub3NavParser::takeFoundTextAsAccumulatedText((std::string *)this);
      std::string::append((std::string *)((char *)this + 208), "</ruby>");
      --*((_DWORD *)this + 59);
      return;
    }
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"rt"))
    {
      CFStringRef v4 = (std::string *)((char *)this + 208);
      id v5 = "</rt>";
      goto LABEL_6;
    }
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"a"))
    {
      ITEpub3NavParser::takeFoundTextAsName(this);
      if (*((_DWORD *)this + 60)) {
        ITEpub3NavParser::takeFoundTextAsHTML(this);
      }
      *((_DWORD *)this + 60) = 0;
    }
    else
    {
      if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"li")) {
        goto LABEL_25;
      }
      if (!ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"ol")) {
        return;
      }
      int v6 = *((_DWORD *)this + 58);
      switch(v6)
      {
        case 3:
          CFStringRef v7 = (char *)this + 136;
          break;
        case 2:
          CFStringRef v7 = (char *)this + 128;
          break;
        case 1:
          CFStringRef v7 = (char *)this + 120;
          break;
        default:
          return;
      }
      uint64_t v8 = *(void *)v7;
      if (v8)
      {
        if (*(void *)(v8 + 40))
        {
LABEL_25:
          ITEpub3NavParser::popUpOneLevel((uint64_t)this);
        }
      }
    }
  }
}

void ITEpub3NavParser::EndElement(ITEpub3NavParser *this, const __CFString *a2)
{
  uint64_t v4 = *((void *)this + 36);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    *((_DWORD *)this + 74) = *(_DWORD *)(*(void *)(*((void *)this + 32)
                                                   + (((unint64_t)(*((void *)this + 35) + v5) >> 7) & 0x1FFFFFFFFFFFFF8))
                                       + 4 * ((*((void *)this + 35) + v5) & 0x3FF));
    *((void *)this + 36) = v5;
    sub_1D174((void *)this + 31, 1);
  }
  if ((*((_DWORD *)this + 58) - 1) > 2)
  {
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"title"))
    {
      int v6 = (char *)this + 184;
      if (*((char *)this + 207) < 0) {
        int v6 = *(const char **)v6;
      }
      *((void *)this + 22) = CFStringCreateWithCString(kCFAllocatorDefault, v6, 0x8000100u);
    }
  }
  else
  {
    ITEpub3NavParser::EndNavChildElement(this, a2);
  }

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

atomic_uint *ITEpub3NavParser::copyTableOfContents(ITEpub3NavParser *this)
{
  uint64_t result = (atomic_uint *)*((void *)this + 15);
  if (result)
  {
    ITRetain::retain(result);
    return (atomic_uint *)*((void *)this + 15);
  }
  return result;
}

atomic_uint *ITEpub3NavParser::copyPageLists(ITEpub3NavParser *this)
{
  uint64_t result = (atomic_uint *)*((void *)this + 17);
  if (result)
  {
    ITRetain::retain(result);
    return (atomic_uint *)*((void *)this + 17);
  }
  return result;
}

atomic_uint *ITEpub3NavParser::copyLandmarks(ITEpub3NavParser *this)
{
  uint64_t result = (atomic_uint *)*((void *)this + 16);
  if (result)
  {
    ITRetain::retain(result);
    return (atomic_uint *)*((void *)this + 16);
  }
  return result;
}

const void *ITEpub3NavParser::copyFirstChapterHref(ITEpub3NavParser *this)
{
  uint64_t v3 = (char *)this + 152;
  uint64_t result = (const void *)*((void *)this + 19);
  if (!result)
  {
    uint64_t v5 = (const void *)*((void *)this + 18);
    uint64_t v4 = (char *)this + 144;
    uint64_t result = v5;
    if (!v5) {
      return result;
    }
    uint64_t v3 = v4;
  }
  CFRetain(result);
  return *(const void **)v3;
}

const void *ITEpub3NavParser::copyReaderStartPageHref(ITEpub3NavParser *this)
{
  uint64_t result = (const void *)*((void *)this + 21);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 21);
  }
  return result;
}

uint64_t ITEpub3NavParser::firstChapterQuality(ITEpub3NavParser *this)
{
  if (*((void *)this + 19))
  {
    CFStringRef v1 = (const __CFString *)*((void *)this + 20);
    uint64_t v2 = 9;
    if (v1)
    {
      if (CFStringCompare(v1, @"reader-start-page", 0)) {
        return 9;
      }
      else {
        return 10;
      }
    }
  }
  else if (*((void *)this + 18))
  {
    return 9;
  }
  else
  {
    return 0;
  }
  return v2;
}

const void *ITEpub3NavParser::copyTocTitle(ITEpub3NavParser *this)
{
  uint64_t result = (const void *)*((void *)this + 22);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 22);
  }
  return result;
}

__CFString *ITEpub3NavParser::copyTocCfi(ITEpub3NavParser *this)
{
  long long v14 = 0u;
  memset(v13, 0, sizeof(v13));
  CFStringRef v1 = (void *)((char *)this + 248);
  for (uint64_t i = *((void *)this + 36); i; uint64_t i = *((void *)this + 36))
  {
    uint64_t v4 = i - 1;
    unint64_t v5 = *((void *)this + 35) + v4;
    uint64_t v6 = *(void *)(*((void *)this + 32) + ((v5 >> 7) & 0x1FFFFFFFFFFFFF8));
    unsigned int v12 = 0;
    unsigned int v12 = *(_DWORD *)(v6 + 4 * (v5 & 0x3FF));
    *((void *)this + 36) = v4;
    sub_1D174(v1, 1);
    sub_1C968(v13, &v12);
  }
  Mutable = CFStringCreateMutable(kCFAllocatorDefault, 0);
  CFStringAppend(Mutable, @"epubcfi(!");
  for (uint64_t j = *((void *)&v14 + 1); *((void *)&v14 + 1); uint64_t j = *((void *)&v14 + 1))
  {
    uint64_t v9 = j - 1;
    uint64_t v10 = *(void *)(*((void *)&v13[0] + 1) + (((unint64_t)(v14 + v9) >> 7) & 0x1FFFFFFFFFFFFF8));
    unsigned int v12 = 0;
    unsigned int v12 = *(_DWORD *)(v10 + 4 * ((v14 + v9) & 0x3FF));
    *((void *)&v14 + 1) = v9;
    sub_1D174(v13, 1);
    sub_1C968(v1, &v12);
    if (*((void *)&v14 + 1)) {
      CFStringAppendFormat(Mutable, 0, @"/%d", v12);
    }
    else {
      CFStringAppendFormat(Mutable, 0, @",/%d/1,/%d"), v12, v12 + 1);
    }
  }
  sub_1C870(v13);
  return Mutable;
}

void sub_1C7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1C870((uint64_t *)va);
  _Unwind_Resume(a1);
}

CFMutableDictionaryRef ITEpub3NavParser::cfiToIdMap(ITEpub3NavParser *this)
{
  CFMutableDictionaryRef result = (CFMutableDictionaryRef)*((void *)this + 38);
  if (!result)
  {
    CFMutableDictionaryRef result = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    *((void *)this + 38) = result;
  }
  return result;
}

CFMutableDictionaryRef ITEpub3NavParser::copyTocCfiToIdMap(ITEpub3NavParser *this)
{
  CFMutableDictionaryRef Mutable = (CFMutableDictionaryRef)*((void *)this + 38);
  if (Mutable
    || (CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks), (*((void *)this + 38) = Mutable) != 0))
  {
    CFRetain(Mutable);
  }
  return Mutable;
}

uint64_t sub_1C870(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 512;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 1024;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    CFStringRef v7 = *v2++;
    operator delete(v7);
  }

  return sub_1C918((uint64_t)a1);
}

uint64_t sub_1C918(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void sub_1C968(void *a1, _DWORD *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 7) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_1C9F0(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(_DWORD *)(*(void *)(v5 + ((v8 >> 7) & 0x1FFFFFFFFFFFFF8)) + 4 * (v8 & 0x3FF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_1C9F0(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x400;
  unint64_t v4 = v2 - 1024;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_9EE0(v5, v33);
      CFIndex v35 = &v34[8 * (v33 >> 2)];
      int64_t v37 = &v34[8 * v36];
      CFRange v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        CFRange v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)CFRange v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_1CD08(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1CE20((uint64_t)a1, &v54);
    v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_9EE0((uint64_t)(a1 + 3), v46);
      CFIndex v35 = &v34[8 * (v46 >> 2)];
      int64_t v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  v56 = a1 + 3;
  *(void *)&long long v54 = sub_9EE0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_1CF40(&v54, &v53);
  std::string::size_type v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1D058((uint64_t)&v54, v27);
  }
  int8x16_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1CCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1CD08(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      long long v19 = (char *)sub_9EE0(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      std::string::size_type v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_1CE20(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_9EE0(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_1CF40(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_9EE0(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_1D058(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_9EE0(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

uint64_t sub_1D174(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v2 - v3) << 7) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x400) {
    a2 = 1;
  }
  if (v5 < 0x800) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void ITEpubNavMapParser::ITEpubNavMapParser(ITEpubNavMapParser *this, atomic_uint *a2)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *(void *)uint64_t v3 = off_3C0AE0;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(void *)(v3 + 152) = 0;
  *(void *)(v3 + 160) = a2;
  if (a2) {
    ITRetain::retain(a2);
  }
}

void sub_1D54C(_Unwind_Exception *a1)
{
  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void ITEpubNavMapParser::~ITEpubNavMapParser(ITEpubNavMapParser *this)
{
  *(void *)this = off_3C0AE0;
  uint64_t v2 = (atomic_uint *)*((void *)this + 20);
  if (v2)
  {
    ITRetain::release(v2);
    *((void *)this + 20) = 0;
  }
  uint64_t v3 = (atomic_uint *)*((void *)this + 16);
  if (v3)
  {
    ITRetain::release(v3);
    *((void *)this + 16) = 0;
  }
  uint64_t v4 = (const void *)*((void *)this + 17);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 17) = 0;
  }
  unint64_t v5 = (const void *)*((void *)this + 18);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 18) = 0;
  }
  uint64_t v6 = (const void *)*((void *)this + 19);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 19) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubNavMapParser::~ITEpubNavMapParser(this);

  operator delete();
}

void ITEpubNavMapParser::StartNode(ITEpubNavMapParser *this, CFStringRef theString, const __CFDictionary *a3)
{
  if (*((_DWORD *)this + 30)) {
    goto LABEL_23;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, theString, @"navMap"))
  {
    uint64_t v6 = (atomic_uint *)*((void *)this + 16);
    if (v6)
    {
      ITRetain::release(v6);
      *((void *)this + 16) = 0;
    }
    operator new();
  }
  if (*((_DWORD *)this + 30))
  {
LABEL_23:
    if (ITEpubXmlParseHandler::doesNodeMatch(this, theString, @"navPoint"))
    {
      ++*((_DWORD *)this + 31);
      CFDictionaryGetValue(a3, @"id");
      operator new();
    }
    if (ITEpubXmlParseHandler::doesNodeMatch(this, theString, @"content") && *((void *)this + 16))
    {
      CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a3, @"src");
      CFStringRef v8 = Value;
      if (Value)
      {
        CFRetain(Value);
        ITNavPoint::setContentFile(*((ITNavPoint **)this + 16), v8);
        CFRelease(v8);
      }
      CFStringRef v9 = (const __CFString *)*((void *)this + 17);
      if (v9)
      {
        if (!*((void *)this + 18))
        {
          CFStringRef v10 = *(const __CFString **)(*((void *)this + 16) + 48);
          if (v10)
          {
            if (CFEqual(v10, v9))
            {
              *((void *)this + 18) = v8;
              if (v8)
              {
                CFRetain(v8);
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D88C()
{
}

uint64_t ITEpubNavMapParser::isUndesirableTocElement(ITEpubNavMapParser *this, const __CFString **a2, const ITNavPoint *a3, const ITEpubOpfParser *a4)
{
  CFStringRef v7 = ITNavPoint::copyContentFileWithoutHash(a2, (const __CFString *)a2);
  if (v7)
  {
    CFStringRef v8 = v7;
    CFStringRef v9 = (const __CFString *)*((void *)a4 + 64);
    if (v9 && CFEqual(v9, v8)) {
      goto LABEL_24;
    }
    CFStringRef v10 = (const __CFString *)*((void *)a4 + 65);
    if (v10)
    {
      if (CFEqual(v10, v8)) {
        goto LABEL_24;
      }
    }
    CFStringRef v11 = a2[10];
    if (!v11) {
      goto LABEL_19;
    }
    CharacterAtIndeCGFloat x = CFStringGetCharacterAtIndex(a2[10], 0);
    uint64_t v13 = 0;
    if (CharacterAtIndex > 98)
    {
      if (CharacterAtIndex == 116)
      {
LABEL_18:
        if (CFStringCompare(@"Table of Contents", v11, 1uLL)) {
          goto LABEL_19;
        }
        uint64_t v14 = (const void *)*((void *)this + 19);
        if (v14)
        {
          CFRelease(v14);
          *((void *)this + 19) = 0;
        }
        goto LABEL_22;
      }
      if (CharacterAtIndex != 99) {
        goto LABEL_25;
      }
    }
    else if (CharacterAtIndex != 67)
    {
      if (CharacterAtIndex != 84) {
        goto LABEL_25;
      }
      goto LABEL_18;
    }
    uint64_t v13 = 1;
    if (CFStringCompare(@"Cover", v11, 1uLL))
    {
      if (CFStringCompare(@"Contents", v11, 1uLL) == kCFCompareEqualTo)
      {
        if (*((void *)this + 19))
        {
LABEL_24:
          uint64_t v13 = 1;
          goto LABEL_25;
        }
LABEL_22:
        uint64_t v15 = (const void *)ITNavPoint::contentFileIncludingHash((ITNavPoint *)a2);
        *((void *)this + 19) = v15;
        if (v15) {
          CFRetain(v15);
        }
        goto LABEL_24;
      }
LABEL_19:
      uint64_t v13 = 0;
    }
LABEL_25:
    CFRelease(v8);
    return v13;
  }
  return 0;
}

void ITEpubNavMapParser::EndNode(ITEpubNavMapParser *this, const __CFString *a2, const char *a3)
{
  if (*((_DWORD *)this + 30))
  {
    if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"navPoint"))
    {
      if (*((_DWORD *)this + 31))
      {
        uint64_t v7 = *((void *)this + 16);
        if (v7)
        {
          uint64_t v8 = *(void *)(v7 + 40);
          if (v8) {
            *((void *)this + 16) = v8;
          }
          if (ITEpubNavMapParser::isUndesirableTocElement(this, (const __CFString **)v7, v6, *((const ITEpubOpfParser **)this + 20)))
          {
            if (v7 == *((void *)this + 16))
            {
              *((void *)this + 16) = 0;
            }
            else
            {
              ITRetain::retain((atomic_uint *)v7);
              ITNavPoint::removeChild(*((void *)this + 16), (atomic_uint *)v7);
              unint64_t v9 = *(void *)(v7 + 24) - *(void *)(v7 + 16);
              if ((int)(v9 >> 3) >= 1)
              {
                unint64_t v10 = 0;
                uint64_t v11 = (v9 >> 3);
                do
                {
                  uint64_t v12 = (atomic_uint *)ITNavPoint::childAtIndex((ITNavPoint *)v7, v10++);
                  ITNavPoint::addChild(*((ITNavPoint **)this + 16), v12);
                }
                while (v11 != v10);
              }
            }
            ITRetain::release((atomic_uint *)v7);
          }
        }
        --*((_DWORD *)this + 31);
      }
    }
    else if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"text"))
    {
      if (*((void *)this + 16))
      {
        CFStringRef v13 = CFStringCreateWithCString(kCFAllocatorDefault, a3, 0x8000100u);
        ITNavPoint::setContentName(*((ITNavPoint **)this + 16), v13);
        if (v13)
        {
          CFRelease(v13);
        }
      }
    }
    else if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"navMap"))
    {
      *((_DWORD *)this + 30) = 0;
    }
  }
}

atomic_uint *ITEpubNavMapParser::copyNavMap(ITEpubNavMapParser *this)
{
  CFMutableDictionaryRef result = (atomic_uint *)*((void *)this + 16);
  if (result)
  {
    ITRetain::retain(result);
    return (atomic_uint *)*((void *)this + 16);
  }
  return result;
}

const void *ITEpubNavMapParser::copyFirstChapterHref(ITEpubNavMapParser *this)
{
  CFMutableDictionaryRef result = (const void *)*((void *)this + 18);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 18);
  }
  return result;
}

const void *ITEpubNavMapParser::copyTocPageHref(ITEpubNavMapParser *this)
{
  CFMutableDictionaryRef result = (const void *)*((void *)this + 19);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 19);
  }
  return result;
}

id BEJavascriptProviderUniqueURLForFilename(uint64_t a1)
{
  CFStringRef v1 = +[NSString stringWithFormat:@"%@:%@", @"ibooks-script", a1];
  uint64_t v2 = +[NSURL URLWithString:v1];

  return v2;
}

CFStringRef NSStringFromBEBookContentLayoutJustification(uint64_t a1)
{
  CFStringRef v1 = @"unset";
  if (a1 == 1) {
    CFStringRef v1 = @"full-justify";
  }
  if (a1 == 2) {
    return @"no-justify";
  }
  else {
    return v1;
  }
}

CFStringRef NSStringFromBEBookContentPreferredFontWeight(uint64_t a1)
{
  CFStringRef v1 = @"unset";
  if (a1 == 1) {
    CFStringRef v1 = @"light";
  }
  if (a1 == 2) {
    return @"heavy";
  }
  else {
    return v1;
  }
}

void sub_1EB54(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setObserverCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "observerCount") + 1);
  if ((unint64_t)[*(id *)(a1 + 32) observerCount] >= 3)
  {
    uint64_t v2 = _BookEPUBLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&def_7BFC0, v2, OS_LOG_TYPE_ERROR, "While we can support more observers, if we get more than two it is either a bug, or an architectural change.", v4, 2u);
    }
  }
  uint64_t v3 = [*(id *)(a1 + 32) _observers];
  [v3 addObject:*(void *)(a1 + 40)];
}

void sub_1ECB4(uint64_t a1)
{
  [*(id *)(a1 + 32) setObserverCount:[*(id *)(a1 + 32) observerCount] - 1];
  id v2 = [*(id *)(a1 + 32) _observers];
  [v2 removeObject:*(void *)(a1 + 40)];
}

void sub_1EE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1EE4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1EE5C(uint64_t a1)
{
}

void sub_1EE64(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _observers];
  uint64_t v2 = [v5 allObjects];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_1F3B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyLoadCompleteIfNecessary];
}

id sub_1F584(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyLoadFailureError:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_1FBAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1FBC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v3 = [*(id *)(a1 + 32) allObservers];
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v7);
        if (objc_opt_respondsToSelector())
        {
          unint64_t v9 = [*(id *)(a1 + 40) _request];
          unint64_t v10 = [v9 URL];
          [v8 navigationHandler:WeakRetained failedToLoadURL:v10 error:*(void *)(a1 + 48)];
        }
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }
}

void sub_1FF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1FFD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t v3 = [*(id *)(a1 + 32) allObservers];
    id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v11;
      do
      {
        uint64_t v7 = 0;
        do
        {
          if (*(void *)v11 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v7);
          if (objc_opt_respondsToSelector()) {
            [v8 navigationHandler:*(void *)(a1 + 32) failedToLoadURL:*(void *)(a1 + 40) error:*(void *)(a1 + 48)];
          }
          uint64_t v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v5);
    }

    unint64_t v9 = (void *)WeakRetained[10];
    WeakRetained[10] = 0;
  }
}

void sub_2102C(id a1)
{
  CFStringRef v1 = _BookEPUBLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&def_7BFC0, v1, OS_LOG_TYPE_INFO, "Completed handling error", v2, 2u);
  }
}

id sub_2177C(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  [*(id *)(a1 + 32) cachedApproval:a2 forBookID:*(void *)(a1 + 40)];
  if ([*(id *)(a1 + 32) didApproveLoadingExternalContentForBookID:*(void *)(a1 + 40)]) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  id result = [*(id *)(a1 + 48) be_appliedContentBlockingRule];
  if (v2 && (id)v4 != result)
  {
    uint64_t v6 = +[BEContentBlockingRules sharedInstance];
    [v6 applyContentBlockingRule:v4 toWebView:*(void *)(a1 + 48) completion:&stru_3C0C08];

    uint64_t v7 = *(void **)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    return [v7 evaluateJavaScript:v8 completionHandler:&stru_3C0C48];
  }
  return result;
}

void sub_21838(id a1, BOOL a2, NSError *a3)
{
  uint64_t v4 = a3;
  if (v4 || !a2)
  {
    id v5 = _BookEPUBLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      uint64_t v7 = v4;
    }
  }
}

void sub_218F0(id a1, id a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    uint64_t v4 = _BookEPUBLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 138412290;
      int v6 = v3;
      _os_log_impl(&def_7BFC0, v4, OS_LOG_TYPE_ERROR, "Error in refreshing without blocker: \"%@\"", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_219A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    int v5 = _BookEPUBLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      uint64_t v8 = v6;
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl(&def_7BFC0, v5, OS_LOG_TYPE_ERROR, "Error in registering deny list url: \"%@\", with error: \"%@\"", (uint8_t *)&v7, 0x16u);
    }
  }
}

void ITEpubNcxParser::ITEpubNcxParser(ITEpubNcxParser *this, atomic_uint *a2)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  void *v3 = off_3C0CC8;
  v3[16] = 0;
  v3[17] = 0;
  v3[15] = a2;
  if (a2) {
    ITRetain::retain(a2);
  }
  operator new();
}

void sub_21FFC()
{
}

void ITEpubNcxParser::~ITEpubNcxParser(ITEpubNcxParser *this)
{
  *(void *)this = off_3C0CC8;
  int v2 = (atomic_uint *)*((void *)this + 16);
  if (v2)
  {
    ITRetain::release(v2);
    *((void *)this + 16) = 0;
  }
  uint64_t v3 = (atomic_uint *)*((void *)this + 17);
  if (v3)
  {
    ITRetain::release(v3);
    *((void *)this + 17) = 0;
  }
  id v4 = (atomic_uint *)*((void *)this + 15);
  if (v4)
  {
    ITRetain::release(v4);
    *((void *)this + 15) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubNcxParser::~ITEpubNcxParser(this);

  operator delete();
}

uint64_t ITEpubNcxParser::SetXmlPath(ITEpubNcxParser *this, const __CFString *a2)
{
  ITEpubXmlParseHandler::SetXmlPath(this, a2);
  (*(void (**)(void, void))(**((void **)this + 16) + 48))(*((void *)this + 16), *((void *)this + 7));
  uint64_t v3 = *(uint64_t (**)(void))(**((void **)this + 17) + 48);

  return v3();
}

void ITEpubNcxParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  ITEpubNavMapParser::StartNode(this[16], a2, a3);
  uint64_t v6 = this[17];

  ITEpubPageListParser::StartNode(v6, a2, a3);
}

void ITEpubNcxParser::EndElement(ITEpubNcxParser *this, const __CFString *a2)
{
  id v4 = (ITEpubNavMapParser *)*((void *)this + 16);
  int v5 = (char *)this + 72;
  uint64_t v6 = (char *)this + 72;
  if (*((char *)this + 95) < 0) {
    uint64_t v6 = *(const char **)v5;
  }
  ITEpubNavMapParser::EndNode(v4, a2, v6);
  if (*((char *)this + 95) < 0) {
    int v5 = *(const char **)v5;
  }
  ITEpubPageListParser::EndNode(*((ITEpubPageListParser **)this + 17), a2, v5);

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

const void *ITEpubNcxParser::copyTocPageHref(ITEpubNavMapParser **this)
{
  return ITEpubNavMapParser::copyTocPageHref(this[16]);
}

atomic_uint *ITEpubNcxParser::copyNavMap(ITEpubNavMapParser **this)
{
  return ITEpubNavMapParser::copyNavMap(this[16]);
}

const void *ITEpubNcxParser::copyFirstChapterHref(ITEpubNavMapParser **this)
{
  return ITEpubNavMapParser::copyFirstChapterHref(this[16]);
}

atomic_uint *ITEpubNcxParser::copyPageLists(ITEpubPageListParser **this)
{
  return ITEpubPageListParser::copyPageLists(this[17]);
}

uint64_t BEIsInternalInstall()
{
  if (qword_409BA8 != -1) {
    dispatch_once(&qword_409BA8, &stru_3C0D18);
  }
  return byte_409BA0;
}

void sub_222DC(id a1)
{
  byte_409BA0 = MGGetBoolAnswer();
}

BOOL BEShouldEnableDeveloperExtrasSettings(char a1)
{
  if (a1) {
    return 1;
  }
  if (qword_409BA8 != -1) {
    dispatch_once(&qword_409BA8, &stru_3C0D18);
  }
  return byte_409BA0 != 0;
}

id BEAlwaysFullParseEPUB()
{
  id v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"_BEAlwaysFullParse"];

  return v1;
}

void sub_223FC(id a1)
{
  +[NSCharacterSet characterSetWithCharactersInString:@"=,!$&'()*+;@?\n\"<>\t :"];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v3 invertedSet];
  int v2 = (void *)qword_409BB0;
  qword_409BB0 = v1;
}

void sub_227FC(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKeyedSubscript:v9];
  id v7 = v5;
  uint64_t v8 = v7;
  if (v6)
  {
    uint64_t v8 = ((void (**)(void, id, void))v6)[2](v6, v7, *(void *)(a1 + 40));
  }
  [*(id *)(a1 + 48) addResult:v8 forKey:v9];
}

void sub_240DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = _BookEPUBLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      long long v12 = *(_OWORD *)(a1 + 48);
      id v9 = +[NSValue valueWithBytes:&v12 objCType:"{CGPoint=dd}"];
      *(_DWORD *)buf = 138412802;
      uint64_t v14 = v8;
      __int16 v15 = 2112;
      unint64_t v16 = v9;
      __int16 v17 = 2112;
      id v18 = v6;
      _os_log_impl(&def_7BFC0, v7, OS_LOG_TYPE_ERROR, "Failed to set offset of WebView:%@ to %@ - %@", buf, 0x20u);
    }
  }
  id v10 = objc_retainBlock(*(id *)(a1 + 40));
  long long v11 = v10;
  if (v10) {
    (*((void (**)(id))v10 + 2))(v10);
  }
}

uint64_t sub_24E80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_251E0(id *a1)
{
  int v2 = objc_alloc_init(BEEvaluateJavaScriptContext);
  id v3 = objc_retainBlock(a1[5]);
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, BEEvaluateJavaScriptContext *))v3 + 2))(v3, v2);
  }

  id v5 = [(BEEvaluateJavaScriptContext *)v2 scripts];
  id v6 = [v5 count];

  if (v6)
  {
    id v7 = [(BEEvaluateJavaScriptContext *)v2 _jsonRepresentation];
    ((blocks) => {   const results = {};   for (const [name, block] of Object.entries(blocks)) {      let id result = block();      results[name] = result ? result : '';   }   return results;})({__arguments__});
      "stringByReplacingOccurrencesOfString:withString:",
      @"__arguments__",
    uint64_t v8 = v7);

    id v9 = _BookEPUBLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [a1[4] be_identifier];
      long long v11 = [a1[4] URL];
      *(_DWORD *)buf = 138543618;
      uint64_t v19 = v10;
      __int16 v20 = 2112;
      uint64_t v21 = v11;
      _os_log_impl(&def_7BFC0, v9, OS_LOG_TYPE_DEFAULT, "Begin executing JS on %{public}@ %@", buf, 0x16u);
    }
    id v12 = a1[4];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_25408;
    v15[3] = &unk_3C0DD8;
    void v15[4] = v12;
    unint64_t v16 = v2;
    id v17 = a1[6];
    [v12 evaluateJavaScript:v8 completionHandler:v15];
  }
  else
  {
    id v13 = objc_retainBlock(a1[6]);
    uint64_t v14 = v13;
    if (v13) {
      (*((void (**)(id, void))v13 + 2))(v13, 0);
    }
  }
}

void sub_25408(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = _BookEPUBLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = [a1[4] be_identifier];
    id v9 = [a1[4] URL];
    int v16 = 138543618;
    id v17 = v8;
    __int16 v18 = 2112;
    uint64_t v19 = v9;
    _os_log_impl(&def_7BFC0, v7, OS_LOG_TYPE_DEFAULT, "End executing JS on %{public}@ %@", (uint8_t *)&v16, 0x16u);
  }
  if (v6)
  {
    id v10 = _BookEPUBLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
    {
      int v16 = 138543362;
      id v17 = v6;
      _os_log_impl(&def_7BFC0, v10, OS_LOG_TYPE_FAULT, "multi-js evaluation failure - %{public}@", (uint8_t *)&v16, 0xCu);
    }
  }
  objc_opt_class();
  long long v11 = BUDynamicCast();
  if (v11)
  {
    id v12 = [a1[5] _transformResults:v11 error:v6];
  }
  else
  {
    id v13 = _BookEPUBLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
    {
      int v16 = 138543362;
      id v17 = v5;
      _os_log_impl(&def_7BFC0, v13, OS_LOG_TYPE_FAULT, "Unexpected javascript result type for be_evaluateJavaScript - %{public}@", (uint8_t *)&v16, 0xCu);
    }

    id v12 = 0;
  }
  id v14 = objc_retainBlock(a1[6]);
  __int16 v15 = v14;
  if (v14) {
    (*((void (**)(id, void *))v14 + 2))(v14, v12);
  }
}

uint64_t sub_25620(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

BOOL ITFileUtil::IsFile(ITFileUtil *this, const unsigned __int8 *a2)
{
  return this && *(unsigned char *)this && !stat((const char *)this, &v3) && (v3.st_mode & 0xF000) != 0x4000;
}

const char *ITFileUtil::GetSize(const __CFString *this, const __CFString *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v7 = 0;
  ITStrUtil::toString(this, (uint64_t)__p);
  if (v7 >= 0) {
    stat v3 = __p;
  }
  else {
    stat v3 = (void **)__p[0];
  }
  Size = ITFileUtil::GetSize((const char *)v3, v2);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  return Size;
}

void sub_2583C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const char *ITFileUtil::GetSize(const char *this, const unsigned __int8 *a2)
{
  memset(&v2, 0, sizeof(v2));
  if (this)
  {
    if (!*this || stat(this, &v2) || (v2.st_mode & 0xF000) == 0x4000) {
      return 0;
    }
    else {
      return (const char *)v2.st_size;
    }
  }
  return this;
}

uint64_t ITFileUtil::slurp(const __CFString *this, __CFString *a2, char **a3, unint64_t *a4)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v11 = 0;
  ITStrUtil::toString(this, (uint64_t)__p);
  if (v11 >= 0) {
    uint64_t v7 = __p;
  }
  else {
    uint64_t v7 = (void **)__p[0];
  }
  uint64_t v8 = ITFileUtil::slurp((ITFileUtil *)v7, (unsigned __int8 *)a2, a3, v6);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
  return v8;
}

void sub_2593C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ITFileUtil::slurp(ITFileUtil *this, unsigned __int8 *a2, char **a3, unint64_t *a4)
{
  __int16 v20 = off_3C0EA8;
  long long v21 = 0u;
  long long v22 = 0u;
  if (!this || !a3 || !a2 || !*(unsigned char *)this)
  {
    id v12 = _BookEPUBLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      if (this) {
        int v13 = *(unsigned __int8 *)this;
      }
      else {
        int v13 = 0;
      }
      *(_DWORD *)buf = 134218752;
      *(void *)&uint8_t buf[4] = this;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v13;
      __int16 v24 = 2048;
      unint64_t v25 = a2;
      __int16 v26 = 2048;
      std::string::size_type v27 = a3;
      id v9 = "Illegal input: %p [%02x], %p, %p";
      id v10 = v12;
      uint32_t v11 = 38;
      goto LABEL_14;
    }
LABEL_15:
    uint64_t v14 = 0xFFFFFFFFLL;
    goto LABEL_16;
  }
  Size = (char *)ITFileUtil::GetSize((const char *)this, a2);
  if (!Size) {
    goto LABEL_15;
  }
  if (ITFileUtil::OpenToRead((ITFileUtil *)&v20, (std::string::value_type *)this))
  {
    uint64_t v8 = _BookEPUBLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      *(void *)&uint8_t buf[4] = this;
      id v9 = "ITFileUtil Failure OpenToRead: [%s]";
      id v10 = v8;
      uint32_t v11 = 12;
LABEL_14:
      _os_log_impl(&def_7BFC0, v10, OS_LOG_TYPE_ERROR, v9, buf, v11);
      goto LABEL_15;
    }
    goto LABEL_15;
  }
  int v16 = malloc_type_malloc((size_t)(Size + 1), 0xCA8ECAF3uLL);
  *(void *)a2 = v16;
  if (v16)
  {
    bzero(v16, (size_t)(Size + 1));
    *(void *)buf = 0;
    ITFileUtil::Read((ITFileUtil *)&v20, *(void **)a2, (size_t)Size, (unint64_t *)buf);
    if (*(char **)buf != Size)
    {
      id v17 = _BookEPUBLog();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&def_7BFC0, v17, OS_LOG_TYPE_ERROR, "ITFileUtil::slurp didread != file_size, assuming 0 file size", v19, 2u);
      }
      Size = 0;
    }
    uint64_t v14 = 0;
  }
  else
  {
    __int16 v18 = _BookEPUBLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109378;
      *(_DWORD *)&uint8_t buf[4] = Size;
      *(_WORD *)&buf[8] = 2080;
      *(void *)&buf[10] = this;
      _os_log_impl(&def_7BFC0, v18, OS_LOG_TYPE_ERROR, "Mem error: %d [%s]", buf, 0x12u);
    }
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  *a3 = Size;
LABEL_16:
  ITFileUtil::~ITFileUtil((void **)&v20);
  return v14;
}

void sub_25BE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  ITFileUtil::~ITFileUtil((void **)va);
  _Unwind_Resume(a1);
}

void ITFileUtil::ITFileUtil(ITFileUtil *this)
{
  *(void *)this = off_3C0EA8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
}

{
  *(void *)this = off_3C0EA8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
}

uint64_t ITFileUtil::OpenToRead(ITFileUtil *this, std::string::value_type *__s)
{
  if (*((void *)this + 1))
  {
    stat v3 = _BookEPUBLog();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      return 0xFFFFFFFFLL;
    }
    int v4 = *__error();
    int v10 = 136315394;
    uint32_t v11 = __s;
    __int16 v12 = 1024;
    int v13 = v4;
    id v5 = "OpenToRead In Use: [%s] [%d]";
LABEL_4:
    _os_log_impl(&def_7BFC0, v3, OS_LOG_TYPE_ERROR, v5, (uint8_t *)&v10, 0x12u);
    return 0xFFFFFFFFLL;
  }
  std::string::assign((std::string *)((char *)this + 16), __s);
  uint64_t v8 = fopen(__s, "rb");
  *((void *)this + 1) = v8;
  if (!v8)
  {
    if (*__error() == 2) {
      return 0xFFFFFFFFLL;
    }
    stat v3 = _BookEPUBLog();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      return 0xFFFFFFFFLL;
    }
    int v9 = *__error();
    int v10 = 136315394;
    uint32_t v11 = __s;
    __int16 v12 = 1024;
    int v13 = v9;
    id v5 = "OpenToRead fopen Failed: [%s] [%d]";
    goto LABEL_4;
  }
  return 0;
}

uint64_t ITFileUtil::Read(ITFileUtil *this, void *__ptr, size_t a3, unint64_t *a4)
{
  id v6 = (FILE *)*((void *)this + 1);
  if (v6)
  {
    size_t v7 = fread(__ptr, 1uLL, a3, v6);
    int v8 = ferror(*((FILE **)this + 1));
    BOOL v9 = v8 == 0;
    if (v8) {
      uint64_t result = 0xFFFFFFFFLL;
    }
    else {
      uint64_t result = 0;
    }
    if (a4)
    {
      if (v9) {
        unint64_t v11 = v7;
      }
      else {
        unint64_t v11 = 0;
      }
      *a4 = v11;
    }
  }
  else
  {
    __int16 v12 = _BookEPUBLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v13 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        int v13 = (void *)*v13;
      }
      int v14 = 136315138;
      __int16 v15 = v13;
      _os_log_impl(&def_7BFC0, v12, OS_LOG_TYPE_ERROR, "Read not opened [%s]", (uint8_t *)&v14, 0xCu);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

void ITFileUtil::~ITFileUtil(void **this)
{
  *this = off_3C0EA8;
  if (this[1]) {
    ITFileUtil::Close((ITFileUtil *)this);
  }
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }
}

{
  uint64_t vars8;

  ITFileUtil::~ITFileUtil(this);

  operator delete();
}

uint64_t ITFileUtil::Close(ITFileUtil *this)
{
  stat v2 = (FILE *)*((void *)this + 1);
  if (v2)
  {
    fclose(v2);
    uint64_t result = 0;
    *((void *)this + 1) = 0;
  }
  else
  {
    int v4 = _BookEPUBLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        id v5 = (void *)*v5;
      }
      int v6 = 136315138;
      size_t v7 = v5;
      _os_log_impl(&def_7BFC0, v4, OS_LOG_TYPE_ERROR, "Close not opened [%s]", (uint8_t *)&v6, 0xCu);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t ITFileUtil::Create(ITFileUtil *this, std::string::value_type *__s)
{
  if (*((void *)this + 1))
  {
    stat v3 = _BookEPUBLog();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      return 0xFFFFFFFFLL;
    }
    int v4 = *__error();
    int v10 = 136315394;
    unint64_t v11 = __s;
    __int16 v12 = 1024;
    int v13 = v4;
    id v5 = "Create File already in Use: [%s] [%d]";
LABEL_4:
    _os_log_impl(&def_7BFC0, v3, OS_LOG_TYPE_ERROR, v5, (uint8_t *)&v10, 0x12u);
    return 0xFFFFFFFFLL;
  }
  std::string::assign((std::string *)((char *)this + 16), __s);
  int v8 = fopen(__s, "w+b");
  *((void *)this + 1) = v8;
  if (!v8)
  {
    if (*__error() == 2) {
      return 0xFFFFFFFFLL;
    }
    stat v3 = _BookEPUBLog();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      return 0xFFFFFFFFLL;
    }
    int v9 = *__error();
    int v10 = 136315394;
    unint64_t v11 = __s;
    __int16 v12 = 1024;
    int v13 = v9;
    id v5 = "Create fopen Failed: [%s] [%d]";
    goto LABEL_4;
  }
  return 0;
}

uint64_t ITFileUtil::OpenToAppend(ITFileUtil *this, std::string::value_type *__s)
{
  if (*((void *)this + 1))
  {
    stat v3 = _BookEPUBLog();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      return 0xFFFFFFFFLL;
    }
    int v4 = *__error();
    int v10 = 136315394;
    unint64_t v11 = __s;
    __int16 v12 = 1024;
    int v13 = v4;
    id v5 = "OpenToAppend In Use: [%s] [%d]";
LABEL_4:
    _os_log_impl(&def_7BFC0, v3, OS_LOG_TYPE_ERROR, v5, (uint8_t *)&v10, 0x12u);
    return 0xFFFFFFFFLL;
  }
  std::string::assign((std::string *)((char *)this + 16), __s);
  int v8 = fopen(__s, "a+b");
  *((void *)this + 1) = v8;
  if (!v8)
  {
    if (*__error() == 2) {
      return 0xFFFFFFFFLL;
    }
    stat v3 = _BookEPUBLog();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      return 0xFFFFFFFFLL;
    }
    int v9 = *__error();
    int v10 = 136315394;
    unint64_t v11 = __s;
    __int16 v12 = 1024;
    int v13 = v9;
    id v5 = "OpenToAppend Failed: [%s] [%d]";
    goto LABEL_4;
  }
  return 0;
}

uint64_t ITFileUtil::GetPosition(ITFileUtil *this)
{
  stat v2 = (FILE *)*((void *)this + 1);
  if (v2)
  {
    return ftell(v2);
  }
  else
  {
    int v4 = _BookEPUBLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        id v5 = (void *)*v5;
      }
      int v6 = 136315138;
      size_t v7 = v5;
      _os_log_impl(&def_7BFC0, v4, OS_LOG_TYPE_ERROR, "GetPosition not opened: [%s]", (uint8_t *)&v6, 0xCu);
    }
    return -1;
  }
}

uint64_t ITFileUtil::SeekTo(ITFileUtil *this, uint64_t a2)
{
  int v2 = a2;
  int v4 = (FILE *)*((void *)this + 1);
  if (!v4)
  {
    int v10 = _BookEPUBLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      unint64_t v11 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        unint64_t v11 = (void *)*v11;
      }
      int v14 = 67109378;
      int v15 = v2;
      __int16 v16 = 2080;
      id v17 = v11;
      int v8 = "SeekTo not opened: [%d] [%s]";
      int v9 = v10;
      goto LABEL_11;
    }
    return -1;
  }
  if (fseek(v4, a2, 0))
  {
    id v5 = _BookEPUBLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = *__error();
      size_t v7 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        size_t v7 = (void *)*v7;
      }
      int v14 = 67109378;
      int v15 = v6;
      __int16 v16 = 2080;
      id v17 = v7;
      int v8 = "SeekTo Failed: %08x [%s]";
      int v9 = v5;
LABEL_11:
      _os_log_impl(&def_7BFC0, v9, OS_LOG_TYPE_ERROR, v8, (uint8_t *)&v14, 0x12u);
      return -1;
    }
    return -1;
  }
  int v13 = (FILE *)*((void *)this + 1);

  return ftell(v13);
}

uint64_t ITFileUtil::SeekEnd(ITFileUtil *this)
{
  int v2 = (FILE *)*((void *)this + 1);
  if (!v2)
  {
    int v9 = _BookEPUBLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v10 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        int v10 = (void *)*v10;
      }
      int v13 = 136315138;
      v14[0] = v10;
      int v6 = "SeekEnd not opened: [%s]";
      size_t v7 = v9;
      uint32_t v8 = 12;
      goto LABEL_11;
    }
    return -1;
  }
  if (fseek(v2, 0, 2))
  {
    stat v3 = _BookEPUBLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = *__error();
      id v5 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        id v5 = (void *)*v5;
      }
      int v13 = 67109378;
      LODWORD(v14[0]) = v4;
      WORD2(v14[0]) = 2080;
      *(void *)((char *)v14 + 6) = v5;
      int v6 = "SeekEnd Failed: %08x [%s]";
      size_t v7 = v3;
      uint32_t v8 = 18;
LABEL_11:
      _os_log_impl(&def_7BFC0, v7, OS_LOG_TYPE_ERROR, v6, (uint8_t *)&v13, v8);
      return -1;
    }
    return -1;
  }
  __int16 v12 = (FILE *)*((void *)this + 1);

  return ftell(v12);
}

uint64_t ITFileUtil::Write(ITFileUtil *this, const void *__ptr, size_t a3, unint64_t *a4)
{
  int v6 = (FILE *)*((void *)this + 1);
  if (v6)
  {
    size_t v7 = fwrite(__ptr, 1uLL, a3, v6);
    uint64_t result = ferror(*((FILE **)this + 1));
    if (result)
    {
      int v9 = _BookEPUBLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = (void *)((char *)this + 16);
        if (*((char *)this + 39) < 0) {
          int v10 = (void *)*v10;
        }
        int v11 = ferror(*((FILE **)this + 1));
        int v14 = 136315394;
        int v15 = v10;
        __int16 v16 = 1024;
        int v17 = v11;
        _os_log_impl(&def_7BFC0, v9, OS_LOG_TYPE_ERROR, "Write error writing:[%s] error:%d", (uint8_t *)&v14, 0x12u);
      }
      size_t v7 = 0;
      uint64_t result = 0xFFFFFFFFLL;
    }
    if (a4) {
      *a4 = v7;
    }
  }
  else
  {
    __int16 v12 = _BookEPUBLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v13 = (void *)((char *)this + 16);
      if (*((char *)this + 39) < 0) {
        int v13 = (void *)*v13;
      }
      int v14 = 136315138;
      int v15 = v13;
      _os_log_impl(&def_7BFC0, v12, OS_LOG_TYPE_ERROR, "Write not opened [%s]", (uint8_t *)&v14, 0xCu);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

const __CFString *ITFileUtil::hasTrailingSlash(const __CFString *this, const __CFString *a2)
{
  if (this)
  {
    CFStringRef v2 = this;
    this = (const __CFString *)CFStringGetLength(this);
    if (this) {
      return (const __CFString *)(CFStringGetCharacterAtIndex(v2, (CFIndex)&this[-1].length + 7) == 47);
    }
  }
  return this;
}

char *ITFileUtil::createMd5String(const __CFString *this, const __CFString *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v7 = 0;
  ITStrUtil::toString(this, (uint64_t)__p);
  if (v7 >= 0) {
    stat v3 = __p;
  }
  else {
    stat v3 = (void **)__p[0];
  }
  Md5String = ITFileUtil::createMd5String((ITFileUtil *)v3, v2);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  return Md5String;
}

void sub_26880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *ITFileUtil::createMd5String(ITFileUtil *this, const unsigned __int8 *a2)
{
  __int16 v12 = off_3C0EA8;
  long long v13 = 0u;
  long long v14 = 0u;
  if (!this || !*(unsigned char *)this)
  {
LABEL_17:
    Size = 0;
    goto LABEL_18;
  }
  Size = (char *)ITFileUtil::GetSize((const char *)this, a2);
  if (Size)
  {
    if (ITFileUtil::OpenToRead((ITFileUtil *)&v12, (std::string::value_type *)this))
    {
      int v4 = _BookEPUBLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        buf.A = 136315138;
        *(void *)&buf.B = this;
        _os_log_impl(&def_7BFC0, v4, OS_LOG_TYPE_ERROR, "createMd5String Failure: [%s]", (uint8_t *)&buf, 0xCu);
      }
      goto LABEL_17;
    }
    CC_MD5_Init(&buf);
    id v5 = malloc_type_malloc(0x10000uLL, 0x5AA518A7uLL);
    while (1)
    {
      if ((unint64_t)Size <= 0x10000)
      {
        int v6 = 0;
        goto LABEL_13;
      }
      *(void *)bytes = 0;
      ITFileUtil::Read((ITFileUtil *)&v12, v5, 0x10000uLL, (unint64_t *)bytes);
      if (*(void *)bytes != 0x10000) {
        break;
      }
      CC_MD5_Update(&buf, v5, 0x10000u);
      Size -= 0x10000;
    }
    int v6 = -1;
LABEL_13:
    *(void *)bytes = 0;
    ITFileUtil::Read((ITFileUtil *)&v12, v5, (size_t)Size, (unint64_t *)bytes);
    if (*(char **)bytes == Size) {
      CC_MD5_Update(&buf, v5, (CC_LONG)Size);
    }
    else {
      int v6 = -1;
    }
    CC_MD5_Final(md, &buf);
    free(v5);
    if (v6) {
      goto LABEL_17;
    }
    uint64_t v8 = 0;
    char v17 = 0;
    *(_OWORD *)bytes = 0u;
    long long v16 = 0u;
    int v9 = md;
    do
    {
      unsigned int v10 = *v9++;
      int v11 = &bytes[v8];
      UInt8 *v11 = a0123456789abcd[(unint64_t)v10 >> 4];
      v11[1] = a0123456789abcd[v10 & 0xF];
      v8 += 2;
    }
    while (v8 != 32);
    Size = (char *)CFStringCreateWithBytes(0, bytes, 32, 0x600u, 0);
  }
LABEL_18:
  ITFileUtil::~ITFileUtil((void **)&v12);
  return Size;
}

void sub_26AD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  ITFileUtil::~ITFileUtil((void **)va);
  _Unwind_Resume(a1);
}

CFStringRef ITFileUtil::createFastFileHash(const __CFString *this, const __CFString *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v7 = 0;
  ITStrUtil::toString(this, (uint64_t)__p);
  if (v7 >= 0) {
    stat v3 = __p;
  }
  else {
    stat v3 = (void **)__p[0];
  }
  CFStringRef FastFileHash = ITFileUtil::createFastFileHash((std::string::value_type *)v3, v2);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  return FastFileHash;
}

void sub_26B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

CFStringRef ITFileUtil::createFastFileHash(std::string::value_type *__s, const unsigned __int8 *a2)
{
  int v15 = off_3C0EA8;
  long long v16 = 0u;
  long long v17 = 0u;
  if (!__s || !*__s || ITFileUtil::OpenToRead((ITFileUtil *)&v15, __s))
  {
LABEL_4:
    CFStringRef v4 = 0;
    goto LABEL_5;
  }
  Size = ITFileUtil::GetSize(__s, v3);
  uint64_t v8 = Size;
  if ((unint64_t)Size < 0x10000)
  {
    Md5String = ITFileUtil::createMd5String((ITFileUtil *)__s, v7);
    if (Md5String)
    {
      CFStringRef v4 = CFStringCreateWithFormat(kCFAllocatorDefault, 0, @"%llu-%@", v8, Md5String);
      CFRelease(Md5String);
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = 0;
  if ((unint64_t)Size > 0x80000) {
    unint64_t v10 = 0x8000;
  }
  else {
    unint64_t v10 = 4096;
  }
  unsigned int v11 = 12;
  do
  {
    ITFileUtil::SeekTo((ITFileUtil *)&v15, v10);
    unint64_t v13 = 0;
    uint64_t __ptr = 0;
    ITFileUtil::Read((ITFileUtil *)&v15, &__ptr, 8uLL, &v13);
    uint64_t v9 = __ptr ^ __ROR8__(v9, 56);
    if (v11 < 2) {
      break;
    }
    v10 *= 2;
    --v11;
  }
  while (v10 < (unint64_t)v8);
  CFStringRef v4 = CFStringCreateWithFormat(kCFAllocatorDefault, 0, @"%llu-%llu", v8, v9);
LABEL_5:
  ITFileUtil::~ITFileUtil((void **)&v15);
  return v4;
}

void sub_26CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  ITFileUtil::~ITFileUtil((void **)va);
  _Unwind_Resume(a1);
}

void sub_26FBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_270F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_27244(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_409BC8);

  _Unwind_Resume(a1);
}

void sub_272AC(id a1)
{
  uint64_t v1 = NSClassFromString(@"UIVariableDelayLoupeGesture");
  if (v1)
  {
    BESwizzleInstanceMethods(v1, "setDelay:", "be_setDelay:");
  }
}

void ITRetain::ITRetain(ITRetain *this)
{
  *(void *)this = off_3C0EF8;
  *((_DWORD *)this + 2) = 0;
  atomic_fetch_add((atomic_uint *volatile)this + 2, 1u);
}

{
  *(void *)this = off_3C0EF8;
  *((_DWORD *)this + 2) = 0;
  atomic_fetch_add((atomic_uint *volatile)this + 2, 1u);
}

uint64_t ITRetain::retain(atomic_uint *this)
{
  return atomic_fetch_add(this + 2, 1u) + 1;
}

uint64_t ITRetain::release(atomic_uint *this)
{
  int add = atomic_fetch_add(this + 2, 0xFFFFFFFF);
  if (this && add <= 1) {
    (*(void (**)(atomic_uint *))(*(void *)this + 8))(this);
  }
  return (add - 1);
}

void ITRetain::~ITRetain(ITRetain *this)
{
  *(void *)this = off_3C0EF8;
}

{
  *(void *)this = off_3C0EF8;
}

{
  *(void *)this = off_3C0EF8;
  operator delete();
}

atomic_uint *ITRetain::for_each_release(atomic_uint *this, ITRetain *a2)
{
  if (this)
  {
    if ((int)atomic_fetch_add(this + 2, 0xFFFFFFFF) <= 1) {
      return (atomic_uint *)(*(uint64_t (**)(void))(*(void *)this + 8))();
    }
  }
  return this;
}

uint64_t ITRetain::for_each_retain(uint64_t this, ITRetain *a2)
{
  if (this) {
    atomic_fetch_add((atomic_uint *volatile)(this + 8), 1u);
  }
  return this;
}

void ITRetain::for_each_cfrelease(CFTypeRef this, const void *a2)
{
  if (this) {
    CFRelease(this);
  }
}

CFTypeRef ITRetain::for_each_cfretain(CFTypeRef this, const void *a2)
{
  if (this) {
    return CFRetain(this);
  }
  return this;
}

id NSStringFromBERequestedRange(uint64_t a1, uint64_t a2)
{
  stat v3 = +[NSNumber numberWithUnsignedInteger:a1];
  CFStringRef v4 = +[NSNumber numberWithUnsignedInteger:a2];
  id v5 = +[NSString stringWithFormat:@"{%@, %@}", v3, v4];

  return v5;
}

BEURLHandlerAssetInfo *_BEURLHandlerAssetInfoForURLUsingCacheItemIncludingFileSize(void *a1, void *a2, int a3)
{
  id v5 = a1;
  int v6 = a2;
  if (!v6)
  {
    unsigned int v11 = [v5 host];
    __int16 v12 = v11;
    if (!v11 || ![v11 length])
    {

      uint64_t v8 = 0;
      int v6 = 0;
      goto LABEL_28;
    }
    unint64_t v13 = +[BEProtocolCache sharedInstance];
    int v6 = [v13 cacheItemForDatabaseKey:v12];

    if (!v6)
    {
      uint64_t v8 = 0;
      goto LABEL_28;
    }
  }
  id v7 = v5;
  uint64_t v8 = v6;
  int v6 = objc_alloc_init(BEURLHandlerAssetInfo);
  [(BEURLHandlerAssetInfo *)v6 setRequestedURL:v7];
  if ([v7 isFileURL])
  {
    unint64_t v10 = [v7 path];
    [(BEURLHandlerAssetInfo *)v6 setPath:v10];
  }
  else
  {
    long long v14 = [v7 host];
    int v15 = [(BEURLHandlerAssetInfo *)v8 bookID];
    unsigned int v16 = [v14 isEqualToString:v15];

    if (v16)
    {
      [(BEURLHandlerAssetInfo *)v6 setBookID:v14];
      long long v17 = [(BEURLHandlerAssetInfo *)v8 bookEpubId];
      [(BEURLHandlerAssetInfo *)v6 setBookEpubId:v17];

      __int16 v18 = [(BEURLHandlerAssetInfo *)v8 bookEpubIdWithUUIDScheme];
      [(BEURLHandlerAssetInfo *)v6 setBookEpubIdWithUUIDScheme:v18];

      uint64_t v40 = [v7 be_unescapedPath];
      uint64_t v39 = [(BEURLHandlerAssetInfo *)v8 rootPath];
      if ([v40 length] && objc_msgSend(v39, "length"))
      {
        uint64_t v19 = [v39 stringByAppendingPathComponent:v40];
        [(BEURLHandlerAssetInfo *)v6 setPath:v19];

        __int16 v20 = [(BEURLHandlerAssetInfo *)v6 path];
        id v21 = [v20 length];

        if (v21)
        {
          CFRange v38 = +[NSURL fileURLWithPath:v39 isDirectory:1];
          long long v22 = [(BEURLHandlerAssetInfo *)v6 path];
          uint64_t v23 = +[NSURL fileURLWithPath:v22 isDirectory:0];

          __int16 v24 = +[NSFileManager defaultManager];
          -[v6 setAssetIsInsideBookRootPath:[v24 be_doesFolderAtURL:v38 containFileAtURL:v23]];
        }
        unint64_t v25 = [(BEURLHandlerAssetInfo *)v8 infoForDocumentAtPath:v40];
        __int16 v26 = v25;
        if (v25)
        {
          std::string::size_type v27 = [v25 objectForKeyedSubscript:@"mime"];
          [(BEURLHandlerAssetInfo *)v6 setMimeType:v27];

          uint64_t v28 = [v26 objectForKeyedSubscript:@"fileSize"];
          -[BEURLHandlerAssetInfo setFileSize:](v6, "setFileSize:", [v28 unsignedIntegerValue]);

          int8x16_t v29 = [v26 objectForKeyedSubscript:@"compressionAlgorithm"];
          [(BEURLHandlerAssetInfo *)v6 setCompressionAlgorithm:v29];

          long long v30 = [v26 objectForKeyedSubscript:@"encryptionAlgorithm"];
          [(BEURLHandlerAssetInfo *)v6 setEncryptionAlgorithm:v30];

          long long v31 = [v26 objectForKeyedSubscript:@"sinfNumber"];
          long long v32 = [(BEURLHandlerAssetInfo *)v8 dataForSinfNumber:v31];
          [(BEURLHandlerAssetInfo *)v6 setSinfData:v32];

          if (a3 && ![(BEURLHandlerAssetInfo *)v6 fileSize])
          {
            unint64_t v33 = [(BEURLHandlerAssetInfo *)v6 path];
            [(BEURLHandlerAssetInfo *)v6 setFileSize:sub_2B7F8()];
          }
        }
        else
        {
          long long v31 = _BookEPUBLog();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
          {
            [(BEURLHandlerAssetInfo *)v6 path];
            objc_claimAutoreleasedReturnValue();
            sub_2FB070();
          }
        }
      }
    }
  }
  uint64_t v34 = [(BEURLHandlerAssetInfo *)v6 path];
  BOOL v35 = [v34 length] == 0;

  if (v35)
  {
    uint64_t v36 = _BookEPUBLog();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      sub_2FB02C(v36);
    }
  }

LABEL_28:

  return v6;
}

void sub_28A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

id BEURLHandlerAssetInfoPathForBookURL(void *a1)
{
  uint64_t v1 = _BEURLHandlerAssetInfoForURLUsingCacheItemIncludingFileSize(a1, 0, 0);
  CFStringRef v2 = v1;
  if (v1)
  {
    stat v3 = [v1 path];
    CFStringRef v4 = +[NSURL fileURLWithPath:v3];
  }
  else
  {
    CFStringRef v4 = 0;
  }

  return v4;
}

void sub_28C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id BEURLHandleriBooksImgUrlFromiBooksURL(void *a1)
{
  id v1 = a1;
  CFStringRef v2 = [v1 scheme];
  if ([@"ibooksimg" compare:v2 options:1])
  {
    if ([@"ibooks" compare:v2 options:1])
    {
      stat v3 = 0;
      goto LABEL_7;
    }
    [v1 be_URLByReplacingWithScheme:@"ibooksimg"];
    id v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v4 = v1;
  }
  stat v3 = v4;
LABEL_7:

  return v3;
}

void sub_28D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void BEURLHandlerClearCachedInfoForBookWithAssetID(void *a1)
{
  id v6 = a1;
  CFStringRef v2 = +[BEProtocolCache sharedInstance];
  if ([v6 length])
  {
    stat v3 = [v2 cacheItemForDatabaseKey:v6];
    id v4 = [v3 sinfInfo];
    id v5 = [v4 allValues];

    [v2 clearCacheForDatabaseKey:v6];
  }
  else
  {
    id v5 = 0;
    [v2 clearCache];
  }
  +[ft9cupR7u6OrU4m1pyhB FVnIWgVXBigm3P6nj4U9:v5];
}

void sub_28E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id _BEURLHandlerImageDataForiBooksURLUsingCacheItem(NSURL *a1, BEProtocolCacheItem *a2)
{
  id v5 = _BEURLHandlerAssetInfoForURLUsingCacheItemIncludingFileSize(a1, a2, 0);
  id v6 = [v5 path];
  if ([v6 length] && objc_msgSend(v5, "assetIsInsideBookRootPath"))
  {
    id v7 = [v5 sinfData];

    if (v7)
    {
      char v14 = 0;
      uint64_t v8 = [v5 sinfData];
      id v13 = 0;
      uint64_t v9 = +[ft9cupR7u6OrU4m1pyhB pK0gFZ9QOdm17E9p9cpP:v6 sinfData:v8 refetch:&v14 error:&v13];
      id v10 = v13;

      if (v14)
      {
        unsigned int v11 = [v5 path];
        +[ft9cupR7u6OrU4m1pyhB _8g0aKpBRl5gIBvODdOy7:v11 completion:0];
      }
    }
    else
    {
      uint64_t v9 = +[NSData dataWithContentsOfFile:v6];
    }
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

void sub_29008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id BEURLHandlerImageDataForiBooksURLUsingCacheItem(void *a1, void *a2)
{
  stat v3 = a1;
  id v4 = a2;
  if (v4) {
    goto LABEL_2;
  }
  id v6 = [(NSURL *)v3 host];
  if ([v6 length])
  {
    id v7 = +[BEProtocolCache sharedInstance];
    id v4 = [v7 cacheItemForDatabaseKey:v6];

    if (v4)
    {
LABEL_2:
      id v5 = _BEURLHandlerImageDataForiBooksURLUsingCacheItem(v3, v4);
      goto LABEL_8;
    }
  }
  else
  {

    id v4 = 0;
  }
  id v5 = 0;
LABEL_8:

  return v5;
}

void sub_29120(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

id BEURLHandlerSchemeIsOkForBookToLoad(void *a1)
{
  id v1 = a1;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409BE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_409BE0))
  {
    qword_409BD8 = sub_29258();
    __cxa_guard_release(&qword_409BE0);
  }
  if (BEURLHandlerURLIsApprovedToLoad(v1))
  {
    id v2 = &def_7BFC0 + 1;
  }
  else
  {
    stat v3 = (void *)qword_409BD8;
    id v4 = [v1 scheme];
    id v5 = [v4 lowercaseString];
    id v2 = [v3 containsObject:v5];
  }
  return v2;
}

void sub_2921C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_409BE0);

  _Unwind_Resume(a1);
}

id sub_29258()
{
  v3[0] = @"ibooks";
  v3[1] = @"ibooksimg";
  v3[2] = @"data";
  v3[3] = @"blob";
  id v0 = +[NSArray arrayWithObjects:v3 count:4];
  id v1 = +[NSSet setWithArray:v0];

  return v1;
}

void sub_2932C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id BEURLHandlerURLIsApprovedToLoad(void *a1)
{
  id v1 = a1;
  id v2 = [v1 absoluteString];
  stat v3 = [v2 lowercaseString];

  if ([v3 length])
  {
    id v4 = [v1 absoluteString];
    id v5 = [v4 lowercaseString];
    id v6 = [v5 isEqualToString:@"about:blank"];
  }
  else
  {
    id v6 = &def_7BFC0 + 1;
  }

  return v6;
}

void sub_293E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2952C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_297D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_297F8(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  stat v3 = v2[3];
  if (v3)
  {
    dispatch_io_close(v3, 1uLL);
    id v4 = (void *)v2[3];
    v2[3] = 0;
  }
  id v5 = (void *)v2[6];
  v2[6] = 0;

  v2[8] = 0;
  [*(id *)(a1 + 32) setRequest:*(void *)(a1 + 40)];
  v183 = [*(id *)(a1 + 40) URL];
  if (BEURLHandlerSchemeIsOkForBookToLoad(v183))
  {
    id v6 = [*(id *)(a1 + 32) cacheItem];
    id v7 = _BEURLHandlerAssetInfoForURLUsingCacheItemIncludingFileSize(v183, v6, 1);

    uint64_t v8 = [*(id *)(a1 + 40) allHTTPHeaderFields];
    objc_opt_class();
    uint64_t v9 = [v8 objectForKey:@"Range"];
    id v10 = BUDynamicCast();

    if ([v10 length])
    {
      unsigned int v11 = (char *)[v7 fileSize];
      id v12 = v10;
      if ([v12 length])
      {
        id v13 = [v12 componentsSeparatedByString:@"="];
        if ([v13 count] == (char *)&def_7BFC0 + 2
          && ([v13 firstObject],
              char v14 = objc_claimAutoreleasedReturnValue(),
              [v14 lowercaseString],
              int v15 = objc_claimAutoreleasedReturnValue(),
              unsigned __int8 v16 = [@"bytes" isEqualToString:v15],
              v15,
              v14,
              (v16 & 1) != 0))
        {
          context = [v13 lastObject];
          v179 = [context componentsSeparatedByString:@","];
          if ((unint64_t)[v179 count] < 2)
          {
            v171 = [v179 firstObject];
            long long v17 = v11 - 1;
            if ([v171 hasPrefix:@"-"])
            {
              uint64_t v18 = (uint64_t)&v11[(void)[v171 integerValue]];
            }
            else
            {
              v167 = [v171 componentsSeparatedByString:@"-"];
              uint64_t v19 = [v167 firstObject];
              uint64_t v18 = (uint64_t)[v19 integerValue];

              __int16 v20 = [v167 lastObject];
              id v21 = (char *)[v20 integerValue];

              if ((uint64_t)v21 > 0) {
                long long v17 = v21;
              }
            }
          }
          else
          {
            uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
            long long v17 = 0;
          }
        }
        else
        {
          uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
          long long v17 = 0;
        }
      }
      else
      {
        long long v17 = 0;
        uint64_t v18 = 0;
      }

      [v7 setRequestedRange:v18, v17];
    }
  }
  else
  {
    id v7 = 0;
  }
  long long v22 = [v7 bookID];
  uint64_t v23 = [v183 host];
  unsigned __int8 v24 = [v22 isEqualToString:v23];

  if ((v24 & 1) == 0)
  {
    uint64_t v28 = -1003;
    goto LABEL_34;
  }
  unint64_t v25 = [v7 path];
  id v26 = [v25 length];

  if (!v26)
  {
    uint64_t v28 = -1100;
    goto LABEL_34;
  }
  if (![v7 fileSize])
  {
    uint64_t v28 = -1014;
    goto LABEL_34;
  }
  if (![v7 assetIsInsideBookRootPath])
  {
    uint64_t v28 = -1102;
    goto LABEL_34;
  }
  if ([v7 requestedRange] == (id)0x7FFFFFFFFFFFFFFFLL && !v27)
  {
    uint64_t v28 = -1000;
LABEL_34:
    id v29 = *(id *)(a1 + 32);
    long long v30 = +[NSError errorWithDomain:NSURLErrorDomain code:v28 userInfo:0];
    long long v31 = v29;
    id v32 = v30;
    unint64_t v33 = _BookEPUBLog();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      sub_2FB0B8();
    }

    uint64_t v34 = v31[8];
    if ((v34 & 6) == 0)
    {
      v31[8] = v34 | 2;
      BOOL v35 = [v31 delegate];
      [v35 urlHandler:v31 didFailWithError:v32];
      uint64_t v36 = +[BEURLHandler testingDelegate];
      [v36 urlHandler:v31 request:v31[6] didFailWithError:v32];
    }
    goto LABEL_39;
  }
  id v37 = *(id *)(a1 + 32);
  id v38 = v7;
  uint64_t v39 = [v38 requestedURL];
  uint64_t v40 = [v39 scheme];
  if ([@"ibooks" compare:v40 options:1])
  {

    goto LABEL_53;
  }
  CFRange v41 = [v38 mimeType];
  if ([v41 length])
  {
    id v42 = v41;
    v43 = BESupportedImageMimeTypes();
    unsigned __int8 v44 = [v43 containsObject:v42];
  }
  else
  {
    unsigned __int8 v44 = BEDoesURLPointToAnImageFile(v39);
  }

  if ((v44 & 1) == 0)
  {
LABEL_53:
    id v181 = *(id *)(a1 + 32);
    id v62 = v38;
    v63 = [v62 requestedURL];
    v64 = [v63 lastPathComponent];

    if ([v64 caseInsensitiveCompare:@"ibooks.js"]
      && [v64 caseInsensitiveCompare:@"ibook.js"])
    {
      BOOL v65 = 0;
      goto LABEL_72;
    }
    v66 = [v62 sinfData];

    if (v66)
    {
      LOBYTE(v194) = 0;
      v67 = [v62 path];
      v68 = [v62 sinfData];
      block = 0;
      v173 = +[ft9cupR7u6OrU4m1pyhB pK0gFZ9QOdm17E9p9cpP:v67 sinfData:v68 refetch:&v194 error:&block];
      v69 = block;

      if ((_BYTE)v194)
      {
        v70 = [v62 path];
        +[ft9cupR7u6OrU4m1pyhB _8g0aKpBRl5gIBvODdOy7:v70 completion:0];
      }
      if (v69)
      {
        BOOL v65 = 0;
LABEL_71:

LABEL_72:

        if (v65)
        {
          id contextc = *(id *)(a1 + 32);
          id v182 = v62;
          v84 = +[ibooks source];
          v174 = [v84 dataUsingEncoding:4];

          v166 = [v182 mimeType];
          v85 = [v182 requestedURL];
          id v86 = contextc;
          id v87 = v174;
          id v88 = v166;
          id v89 = v85;
          v170 = v87;
          id v90 = [objc_alloc((Class)NSURLResponse) initWithURL:v89 MIMEType:v88 expectedContentLength:[v87 length] textEncodingName:0];
          v91 = v86;
          id v92 = v90;
          uint64_t v93 = v91[8];
          v94 = v92;
          if ((v93 & 1) == 0)
          {
            v91[8] = v93 | 1;
            v95 = +[BEURLHandler testingDelegate];
            BOOL v96 = v95 == 0;

            v94 = v92;
            if (!v96)
            {
              v94 = sub_2C55C(v92);
            }
            v97 = [v91 delegate];
            [v97 urlHandler:v91 didReceiveResponse:v94];
          }
          v98 = v91;
          id v99 = v170;
          if ((v91[8] & 6) == 0)
          {
            v100 = [v98 delegate];
            [v100 urlHandler:v98 didReceiveData:v99];
          }
          v101 = v98;
          v102 = v101;
          uint64_t v103 = v91[8];
          if ((v103 & 6) == 0)
          {
            v91[8] = v103 | 4;
            v104 = [v101 delegate];
            [v104 urlHandlerDidFinish:v102];
            v105 = +[BEURLHandler testingDelegate];
            [v105 urlHandler:v102 didFinishRequest:v102[6]];
          }
        }
        else
        {
          unsigned __int8 v106 = [v62 requestedRangeIsWholeAsset];
          v107 = *(void **)(a1 + 32);
          if (v106)
          {
            char v108 = BEShouldInvertImageURL((uint64_t)v183);
            v109 = v107;
            id v110 = v62;
            v111 = v109[4];
            block = _NSConcreteStackBlock;
            uint64_t v186 = 3221225472;
            v187 = sub_2B898;
            v188 = &unk_3C0F70;
            LOBYTE(v191) = v108;
            id v189 = v110;
            id v190 = v109;
            v112 = v109;
            dispatch_async(v111, &block);
          }
          else
          {
            id v113 = v107;
            id v114 = v62;
            v115 = *((void *)v113 + 3);
            if (v115)
            {
              dispatch_io_close(v115, 1uLL);
              v116 = (void *)*((void *)v113 + 3);
              *((void *)v113 + 3) = 0;
            }
            v194 = 0;
            v195 = &v194;
            uint64_t v196 = 0x4012000000;
            v197 = sub_2D398;
            v198 = nullsub_4;
            v199 = &unk_316DE3;
            id v200 = 0;
            uint64_t v201 = 0;
            id v200 = [v114 requestedRange];
            uint64_t v201 = v117;
            v184[0] = 0;
            v184[1] = v184;
            v184[2] = 0x2020000000;
            v119 = v195[6];
            v118 = v195[7];
            BOOL v120 = v118 >= v119;
            int64_t v121 = (char *)v118 - (char *)v119;
            if (v120) {
              int64_t v122 = v121 + 1;
            }
            else {
              int64_t v122 = 0;
            }
            v184[3] = v122;
            size_t v123 = +[ft9cupR7u6OrU4m1pyhB dataChunkSize];
            id v124 = objc_alloc_init((Class)NSMutableData);
            v125 = (void *)*((void *)v113 + 7);
            *((void *)v113 + 7) = v124;

            size_t v126 = (unint64_t)v119 / v123;
            off_t v127 = v126 * v123;
            v128 = v195;
            unint64_t v129 = (unint64_t)v195[7];
            v195[6] = (__CFString *)((char *)v195[6] - v126 * v123);
            v128[7] = (__CFString *)(v129 - v126 * v123);
            id v130 = [v114 path];
            dispatch_io_t v131 = dispatch_io_create_with_path(1uLL, (const char *)[v130 UTF8String], 0, 0, *((dispatch_queue_t *)v113 + 4), &stru_3C1000);
            v132 = (void *)*((void *)v113 + 3);
            *((void *)v113 + 3) = v131;

            size_t v133 = v123 + v123 * ((unint64_t)(double)(v129 / v123) - v126);
            dispatch_io_set_high_water(*((dispatch_io_t *)v113 + 3), v123);
            dispatch_io_set_low_water(*((dispatch_io_t *)v113 + 3), v123);
            v134 = *((void *)v113 + 3);
            v135 = *((void *)v113 + 4);
            block = _NSConcreteStackBlock;
            uint64_t v186 = 3221225472;
            v187 = sub_2D3A8;
            v188 = &unk_3C1050;
            id v189 = v113;
            id v190 = v114;
            v191 = &v194;
            v192 = v184;
            size_t v193 = v123;
            id v136 = v113;
            id v137 = v114;
            dispatch_io_read(v134, v127, v133, v135, &block);

            _Block_object_dispose(v184, 8);
            _Block_object_dispose(&v194, 8);
          }
        }
        goto LABEL_39;
      }
      uint64_t v72 = (uint64_t)v173;
    }
    else
    {
      v71 = [v62 path];
      uint64_t v72 = +[NSData dataWithContentsOfFile:v71];
    }
    id v73 = [objc_alloc((Class)NSString) initWithData:v72 encoding:4];
    v173 = (void *)v72;
    if ([v73 length])
    {
      v194 = 0;
      +[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", @"iBooks?.VERSION[ ]*=[ ]*'([0-9]+)\\.([0-9]+)';",
        0,
      v169 = &v194);
      v69 = v194;
      v165 = [v169 matchesInString:v73 options:0 range:[v73 length]];
      v74 = [v165 firstObject];
      v75 = v74;
      if (v74
        && (id v76 = [v74 rangeAtIndex:1],
            objc_msgSend(v73, "substringWithRange:", v76, v77),
            v78 = objc_claimAutoreleasedReturnValue(),
            id v79 = [v78 integerValue],
            v78,
            (uint64_t)v79 <= 1))
      {
        id v80 = [v75 rangeAtIndex:2];
        v82 = [v73 substringWithRange:v80, v81];
        id v83 = [v82 integerValue];

        BOOL v65 = (uint64_t)v83 <= 4;
      }
      else
      {
        BOOL v65 = 0;
      }
    }
    else
    {
      v69 = 0;
      BOOL v65 = 0;
    }

    goto LABEL_71;
  }
  id v45 = *(id *)(a1 + 32);
  id v172 = v38;
  contexta = v45;
  unint64_t v46 = [v45 cacheItem];
  v180 = v46;
  uint64_t v47 = [v172 requestedURL];
  v168 = v47;
  v48 = [v46 cachedSVGForURL:v47];
  if (![v48 length])
  {
    uint64_t v49 = (char *)malloc_type_calloc(0x53AuLL, 1uLL, 0x100004077774924uLL);
    if (v49)
    {
      double width = CGSizeZero.width;
      double height = CGSizeZero.height;
      BEURLHandlerImageDataForiBooksURLUsingCacheItem(v47, v46);
      CFDataRef v52 = (const __CFData *)objc_claimAutoreleasedReturnValue();
      v53 = CGImageSourceCreateWithData(v52, 0);
      if (v53)
      {
        v194 = (__CFString *)kCGImageSourceShouldCache;
        block = (void **)&__kCFBooleanFalse;
        CFDictionaryRef v54 = +[NSDictionary dictionaryWithObjects:&block forKeys:&v194 count:1];
        CFDictionaryRef v55 = CGImageSourceCopyPropertiesAtIndex(v53, 0, v54);
        CFDictionaryRef v56 = v55;
        if (v55)
        {
          v57 = CFDictionaryGetValue(v55, kCGImagePropertyPixelWidth);
          v58 = CFDictionaryGetValue(v56, kCGImagePropertyPixelHeight);
          [v57 doubleValue];
          double width = v59;
          [v58 doubleValue];
          double height = v60;
          CFRelease(v56);
        }
        CFRelease(v53);
      }
      id v61 = [objc_alloc((Class)NSData) initWithBytesNoCopy:v49 length:snprintf(v49, 0x53AuLL, "<svg width='%f' height='%f' xmlns='http://www.w3.org/2000/svg'></svg>", width, height) freeWhenDone:1];

      v48 = v61;
      [v180 cacheSVG:v61 url:v47];
    }
    else
    {
      id v138 = contexta;
      v139 = +[NSError errorWithDomain:NSURLErrorDomain code:-1014 userInfo:0];
      v140 = v138;
      id v141 = v139;
      v142 = _BookEPUBLog();
      if (os_log_type_enabled(v142, OS_LOG_TYPE_ERROR)) {
        sub_2FB0B8();
      }

      uint64_t v143 = v140[8];
      if ((v143 & 6) == 0)
      {
        v140[8] = v143 | 2;
        v144 = [v140 delegate];
        [v144 urlHandler:v140 didFailWithError:v141];
        v145 = +[BEURLHandler testingDelegate];
        [v145 urlHandler:v140 request:v140[6] didFailWithError:v141];
      }
      uint64_t v47 = v168;
    }
  }
  id v146 = contexta;
  id v147 = v48;
  id v148 = v47;
  id v149 = [objc_alloc((Class)NSURLResponse) initWithURL:v148 MIMEType:@"image/svg+xml" expectedContentLength:[v147 length] textEncodingName:0];
  v150 = v146;
  id v151 = v149;
  uint64_t v152 = v150[8];
  v153 = v151;
  if ((v152 & 1) == 0)
  {
    v150[8] = v152 | 1;
    v154 = +[BEURLHandler testingDelegate];
    BOOL v155 = v154 == 0;

    v153 = v151;
    if (!v155)
    {
      v153 = sub_2C55C(v151);
    }
    v156 = [v150 delegate];
    [v156 urlHandler:v150 didReceiveResponse:v153];
  }
  v157 = v150;
  id v158 = v147;
  if ((v150[8] & 6) == 0)
  {
    v159 = [v157 delegate];
    [v159 urlHandler:v157 didReceiveData:v158];
  }
  v160 = v157;
  v161 = v160;
  uint64_t v162 = v150[8];
  if ((v162 & 6) == 0)
  {
    v150[8] = v162 | 4;
    v163 = [v160 delegate];
    [v163 urlHandlerDidFinish:v161];
    v164 = +[BEURLHandler testingDelegate];
    [v164 urlHandler:v161 didFinishRequest:v161[6]];
  }
LABEL_39:
}

void sub_2A9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _Unwind_Exception *exception_object, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19, char a20)
{
  _Unwind_Resume(a1);
}

unint64_t BEShouldInvertImageURL(uint64_t a1)
{
  id v1 = +[NSURLComponents componentsWithURL:a1 resolvingAgainstBaseURL:0];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [v1 queryItems];
  unint64_t v3 = (unint64_t)[v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != (void *)v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v4) {
          objc_enumerationMutation(v2);
        }
        id v6 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        id v7 = [v6 name];
        unsigned int v8 = [v7 isEqualToString:@"be_filter"];

        if (v8)
        {
          uint64_t v9 = [v6 value];
          if ([v9 length])
          {
            id v10 = [v6 value];
            unint64_t v3 = [v10 integerValue] == (char *)&def_7BFC0 + 1;
          }
          else
          {
            unint64_t v3 = 0;
          }

          goto LABEL_14;
        }
      }
      unint64_t v3 = (unint64_t)[v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_14:

  return v3;
}

void sub_2B028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2B138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2B14C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = v1[3];
  if (v2)
  {
    uint64_t v4 = v1;
    dispatch_io_close(v2, 1uLL);
    unint64_t v3 = (void *)v1[3];
    v1[3] = 0;
  }
}

void sub_2B2A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2B5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

off_t sub_2B7F8()
{
  if (![(id)__chkstk_darwin() getFileSystemRepresentation:v2 maxLength:4094]) {
    return 0;
  }
  if (lstat(v2, &v1)) {
    return 0;
  }
  return v1.st_size;
}

void sub_2B898(uint64_t a1)
{
  unint64_t v2 = +[ft9cupR7u6OrU4m1pyhB dataChunkSize];
  if (v2 >= (unint64_t)[*(id *)(a1 + 32) fileSize])
  {
    uint64_t v18 = *(void **)(a1 + 32);
    id v100 = 0;
    id v98 = v18;
    uint64_t v19 = [v98 sinfData];

    if (v19)
    {
      char v101 = 0;
      __int16 v20 = [v98 path];
      id v21 = [v98 sinfData];
      v97 = +[ft9cupR7u6OrU4m1pyhB pK0gFZ9QOdm17E9p9cpP:v20 sinfData:v21 refetch:&v101 error:&v100];

      if (v100)
      {
        long long v22 = _BookEPUBLog();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          [v100 description];
          objc_claimAutoreleasedReturnValue();
          sub_2FB120();
        }
      }
    }
    else
    {
      uint64_t v23 = [v98 path];
      v97 = +[NSData dataWithContentsOfFile:v23];
    }
    id v24 = v100;
    id v99 = v24;
    if (*(unsigned char *)(a1 + 48))
    {
      id v25 = *(id *)(a1 + 32);
      id v26 = [v25 mimeType];
      if ([v26 length])
      {
        id v27 = v26;
        uint64_t v28 = BESupportedImageMimeTypes();
        unsigned int v29 = [v28 containsObject:v27];
      }
      else
      {
        id v27 = [v25 requestedURL];
        unsigned int v29 = BEDoesURLPointToAnImageFile(v27);
      }

      id v24 = v99;
      unsigned int v30 = v99 ? 0 : v29;
      if (v30 == 1)
      {
        id v31 = [objc_alloc((Class)UIImage) initWithData:v97];
        id v32 = v31;
        if (v31)
        {
          unint64_t v33 = v31;
          id v34 = [v33 CGImage];
          if (v34)
          {
            if (+[BEImageFilter imageIsFilteringCandidate:v34])
            {
              BOOL v35 = *(void **)(a1 + 32);
              id v36 = *(id *)(a1 + 40);
              id v37 = v35;
              uint64_t v38 = +[BEImageFilter invertedImage:v34];
              if (v38)
              {
                v94 = (void *)v38;
                uint64_t v39 = +[BEImageFilter pngDataForCIImage:](BEImageFilter, "pngDataForCIImage:");
                if ([v39 length])
                {
                  uint64_t v40 = [v37 requestedURL];
                  id v96 = v37;
                  id v41 = v36;
                  id v42 = v39;
                  v43 = v40;
                  v91 = v42;
                  id v44 = [objc_alloc((Class)NSURLResponse) initWithURL:v43 MIMEType:@"image/png" expectedContentLength:[v42 length]:0];
                  id v45 = v41;
                  id v46 = v44;
                  uint64_t v47 = v45[8];
                  id v95 = v46;
                  if ((v47 & 1) == 0)
                  {
                    v45[8] = v47 | 1;
                    v48 = +[BEURLHandler testingDelegate];
                    BOOL v49 = v48 == 0;

                    if (!v49)
                    {
                      sub_2C55C(v46);
                      id v46 = (id)objc_claimAutoreleasedReturnValue();
                    }
                    uint64_t v50 = [v45 delegate];
                    [v50 urlHandler:v45 didReceiveResponse:v46];
                  }
                  v51 = v45;
                  id v52 = v91;
                  if ((v45[8] & 6) == 0)
                  {
                    v53 = [v51 delegate];
                    [v53 urlHandler:v51 didReceiveData:v52];
                  }
                  CFDictionaryRef v54 = v51;
                  CFDictionaryRef v55 = v54;
                  uint64_t v56 = v45[8];
                  if ((v56 & 6) != 0)
                  {
                    v57 = v54;
                    id v92 = v52;
                    id v58 = v54;
LABEL_59:

                    v70 = v43;
                    goto LABEL_60;
                  }
                  v45[8] = v56 | 4;
                  id v78 = [v54 delegate];
                  [v78 urlHandlerDidFinish:v55];
                  id v87 = +[BEURLHandler testingDelegate];
                  [v87 urlHandler:v55 didFinishRequest:v55[6]];
                  v57 = v55;
                  id v92 = v52;
                  id v58 = v55;
LABEL_58:

                  goto LABEL_59;
                }
              }
              id v32 = v33;
            }
          }
        }

        id v24 = v99;
      }
    }
    double v59 = *(void **)(a1 + 32);
    unint64_t v33 = *(id *)(a1 + 40);
    id v58 = v59;
    id v60 = v97;
    id v61 = v24;
    id v62 = [v58 requestedURL];
    v94 = v62;
    id v92 = [v58 path];
    if (!v60)
    {
      if (!v61)
      {
        id v61 = +[NSError errorWithDomain:@"BookUrlHandler" code:0 userInfo:&off_3DD7E0];
      }
      v70 = v33;
      id v96 = v61;
      v71 = _BookEPUBLog();
      if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
        sub_2FB0B8();
      }

      uint64_t v72 = v70[8];
      if ((v72 & 6) != 0)
      {
        v57 = v96;
LABEL_61:

        return;
      }
      v70[8] = v72 | 2;
      v57 = v96;
      id v52 = [v70 delegate];
      [v52 urlHandler:v70 didFailWithError:v96];
      v43 = +[BEURLHandler testingDelegate];
      [v43 urlHandler:v70 request:v70[6] didFailWithError:v96];
LABEL_60:

      goto LABEL_61;
    }
    id v96 = v61;
    if ((v33[8] & 8) != 0)
    {
      v67 = v60;
    }
    else
    {
      v63 = v33;
      id v64 = v58;
      id v65 = v60;
      v66 = [v64 encryptionAlgorithm];
      v67 = v65;
      if ([v66 length])
      {
        if (![@"http://www.idpf.org/2008/embedding" compare:v66 options:1]
          || (v67 = v65, ![@"http://ns.adobe.com/pdf/enc#RC" compare:v66 options:1]))
        {
          v68 = objc_alloc_init(BEFontUnmangler);
          v69 = [v64 requestedURL];
          v67 = [(BEFontUnmangler *)v68 unmangleFontWithAssetInfo:v64 fileData:v65 URL:v69];
        }
      }
      v33[8] |= 8uLL;

      id v62 = v94;
    }
    id v73 = [v58 mimeType];
    v74 = v33;
    id v75 = v67;
    id v95 = v73;
    CFDictionaryRef v55 = v62;
    id v76 = objc_msgSend(objc_alloc((Class)NSURLResponse), "initWithURL:MIMEType:expectedContentLength:textEncodingName:", v55, v95, objc_msgSend(v75, "length", v74, v92, context), 0);
    uint64_t v77 = v74;
    id v78 = v76;
    uint64_t v79 = v33[8];
    id v80 = v78;
    if ((v79 & 1) == 0)
    {
      v33[8] = v79 | 1;
      uint64_t v81 = +[BEURLHandler testingDelegate];
      BOOL v82 = v81 == 0;

      id v80 = v78;
      if (!v82)
      {
        id v80 = sub_2C55C(v78);
      }
      id v83 = [v77 delegate];
      [v83 urlHandler:v77 didReceiveResponse:v80];
    }
    v84 = v77;
    v43 = v75;
    if ((v33[8] & 6) == 0)
    {
      v85 = [v84 delegate];
      [v85 urlHandler:v84 didReceiveData:v43];
    }
    id v86 = v84;
    id v87 = v86;
    uint64_t v88 = v33[8];
    if ((v88 & 6) == 0)
    {
      v33[8] = v88 | 4;
      id v89 = [v86 delegate];
      [v89 urlHandlerDidFinish:v87];
      id v90 = +[BEURLHandler testingDelegate];
      [v90 urlHandler:v87 didFinishRequest:v87[6]];
    }
    id v52 = v87;
    v57 = v95;
    goto LABEL_58;
  }
  uint64_t v4 = a1 + 32;
  unint64_t v3 = *(void **)(a1 + 32);
  id v5 = (dispatch_io_t *)*(id *)(v4 + 8);
  id v6 = v3;
  id v7 = v5[3];
  if (v7)
  {
    dispatch_io_close(v7, 1uLL);
    dispatch_io_t v8 = v5[3];
    v5[3] = 0;
  }
  size_t v9 = +[ft9cupR7u6OrU4m1pyhB dataChunkSize];
  id v10 = [v6 path];
  dispatch_io_t v11 = dispatch_io_create_with_path(0, (const char *)[v10 UTF8String], 0, 0, v5[4], &stru_3C0F90);
  dispatch_io_t v12 = v5[3];
  v5[3] = v11;

  dispatch_io_set_high_water(v5[3], v9);
  dispatch_io_set_low_water(v5[3], v9);
  long long v13 = v5[3];
  id v14 = [v6 fileSize];
  long long v15 = v5[4];
  io_handler[0] = _NSConcreteStackBlock;
  io_handler[1] = 3221225472;
  io_handler[2] = sub_2C7C8;
  io_handler[3] = &unk_3C0FE0;
  uint64_t v103 = v5;
  id v104 = v6;
  size_t v105 = v9;
  unsigned __int8 v16 = v5;
  id v17 = v6;
  dispatch_io_read(v13, 0, (size_t)v14, v15, io_handler);
}

void sub_2C264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, _Unwind_Exception *exception_object, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

id sub_2C55C(void *a1)
{
  id v1 = a1;
  v10[0] = @"Content-Type";
  unint64_t v2 = [v1 MIMEType];
  v11[0] = v2;
  v10[1] = @"Content-Length";
  unint64_t v3 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v1 expectedContentLength]);
  uint64_t v4 = [v3 stringValue];
  v10[2] = @"Cache-Control";
  v11[1] = v4;
  v11[2] = @"no-cache, no-store, must-revalidate";
  id v5 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:3];

  id v6 = objc_alloc((Class)NSHTTPURLResponse);
  id v7 = [v1 URL];
  id v8 = [v6 initWithURL:v7 statusCode:200 HTTPVersion:kCFHTTPVersion1_1 headerFields:v5];

  return v8;
}

void sub_2C6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2C71C(id a1, int a2)
{
  if (a2)
  {
    uint64_t v2 = *(void *)&a2;
    unint64_t v3 = _BookEPUBLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      +[NSNumber numberWithInt:v2];
      objc_claimAutoreleasedReturnValue();
      sub_2FB168();
    }
  }
}

void sub_2C7B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2C7C8(uint64_t a1, int a2, void *a3, int a4)
{
  id v7 = a3;
  id v8 = v7;
  if (a4)
  {
    if (a4 == 89) {
      uint64_t v9 = -999;
    }
    else {
      uint64_t v9 = -3001;
    }
    id v10 = *(id *)(a1 + 32);
    dispatch_io_t v11 = +[NSError errorWithDomain:NSURLErrorDomain code:v9 userInfo:0];
    dispatch_io_t v12 = v10;
    id v13 = v11;
    id v14 = _BookEPUBLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_2FB0B8();
    }

    uint64_t v15 = v12[8];
    if ((v15 & 6) == 0)
    {
      v12[8] = v15 | 2;
      unsigned __int8 v16 = [v12 delegate];
      [v16 urlHandler:v12 didFailWithError:v13];
      id v17 = +[BEURLHandler testingDelegate];
      [v17 urlHandler:v12 request:v12[6] didFailWithError:v13];
    }
    uint64_t v18 = v12;
    goto LABEL_10;
  }
  if (v7 && v7 != &_dispatch_data_empty)
  {
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472;
    applier[2] = sub_2CA8C;
    applier[3] = &unk_3C0FB8;
    id v28 = *(id *)(a1 + 32);
    id v19 = *(id *)(a1 + 40);
    uint64_t v20 = *(void *)(a1 + 48);
    id v29 = v19;
    uint64_t v30 = v20;
    dispatch_data_apply(v8, applier);
  }
  if (a2)
  {
    id v21 = *(void **)(a1 + 32);
    long long v22 = v21[3];
    if (v22)
    {
      uint64_t v23 = v21;
      dispatch_io_close(v22, 1uLL);
      id v24 = (void *)v21[3];
      v21[3] = 0;
    }
    id v25 = *(id *)(a1 + 32);
    uint64_t v18 = v25;
    uint64_t v26 = v25[8];
    if ((v26 & 6) != 0) {
      goto LABEL_11;
    }
    v25[8] = v26 | 4;
    id v13 = [v25 delegate];
    [v13 urlHandlerDidFinish:v18];
    dispatch_io_t v12 = +[BEURLHandler testingDelegate];
    [v12 urlHandler:v18 didFinishRequest:v18[6]];
LABEL_10:

LABEL_11:
  }
}

void sub_2CA28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2CA8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v68 = a2;
  char v70 = 0;
  if (a5)
  {
    id v8 = *(void **)(a1 + 40);
    uint64_t v9 = *(id *)(a1 + 32);
    id v10 = v8;
    dispatch_io_t v11 = v10;
    if ((v9[8] & 1) == 0)
    {
      if ([v10 requestedRangeIsWholeAsset])
      {
        id v12 = objc_alloc((Class)NSURLResponse);
        id v13 = [v11 requestedURL];
        id v14 = [v11 mimeType];
        id v15 = [v12 initWithURL:v13 MIMEType:v14 expectedContentLength:[v11 fileSize] textEncodingName:0];
      }
      else
      {
        id v18 = [v11 requestedRange];
        uint64_t v20 = v19;
        id v21 = +[NSNumber numberWithUnsignedInteger:v18];
        long long v22 = +[NSNumber numberWithUnsignedInteger:v20];
        uint64_t v23 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v11 fileSize]);
        id v24 = +[NSString stringWithFormat:@"bytes %@-%@/%@", v21, v22, v23, context, v68];

        v71[0] = @"Content-Type";
        id v25 = [v11 mimeType];
        v72[0] = v25;
        v71[1] = @"Content-Length";
        id v26 = [v11 requestedRange];
        if (v27 >= (unint64_t)v26) {
          uint64_t v28 = v27 - (void)v26 + 1;
        }
        else {
          uint64_t v28 = 0;
        }
        id v29 = +[NSNumber numberWithUnsignedInteger:v28];
        uint64_t v30 = [v29 stringValue];
        v71[2] = @"Content-Range";
        v72[1] = v30;
        v72[2] = v24;
        id v31 = +[NSDictionary dictionaryWithObjects:v72 forKeys:v71 count:3];

        id v32 = objc_alloc((Class)NSHTTPURLResponse);
        unint64_t v33 = [v11 requestedURL];
        id v15 = [v32 initWithURL:v33 statusCode:206 HTTPVersion:@"HTTP/1.1" headerFields:v31];
      }
      id v34 = v9;
      id v35 = v15;
      uint64_t v36 = v9[8];
      id v37 = v35;
      if ((v36 & 1) == 0)
      {
        v9[8] = v36 | 1;
        uint64_t v38 = +[BEURLHandler testingDelegate];
        BOOL v39 = v38 == 0;

        id v37 = v35;
        if (!v39)
        {
          id v37 = sub_2C55C(v35);
        }
        uint64_t v40 = [v34 delegate];
        [v40 urlHandler:v34 didReceiveResponse:v37];
      }
    }

    id v41 = [*(id *)(a1 + 40) sinfData];
    if (!v41)
    {
      id v16 = [objc_alloc((Class)NSData) initWithBytes:a4 length:a5];
LABEL_23:
      uint64_t v47 = *(void **)(a1 + 32);
      if ((v47[8] & 8) == 0)
      {
        v48 = *(void **)(a1 + 40);
        BOOL v49 = v47;
        id v50 = v48;
        id v51 = v16;
        id v52 = [v50 encryptionAlgorithm];
        id v16 = v51;
        if ([v52 length])
        {
          if (![@"http://www.idpf.org/2008/embedding" compare:v52 options:1]
            || (id v16 = v51, ![@"http://ns.adobe.com/pdf/enc#RC" compare:v52 options:1]))
          {
            v53 = objc_alloc_init(BEFontUnmangler);
            CFDictionaryRef v54 = [v50 requestedURL];
            id v16 = [(BEFontUnmangler *)v53 unmangleFontWithAssetInfo:v50 fileData:v51 URL:v54];
          }
        }
        v47[8] |= 8uLL;

        uint64_t v47 = *(void **)(a1 + 32);
      }
      CFDictionaryRef v55 = v47;
      id v16 = v16;
      if ((v55[64] & 6) == 0)
      {
        uint64_t v56 = [v55 delegate];
        [v56 urlHandler:v55 didReceiveData:v16];
      }
      uint64_t v57 = 1;
      goto LABEL_38;
    }
    id v42 = +[ft9cupR7u6OrU4m1pyhB MNeITI0WyvXBxnLLXXWr:v41];
    v43 = +[NSMutableData dataWithLength:](NSMutableData, "dataWithLength:", (char *)+[ft9cupR7u6OrU4m1pyhB d32lDu5WFQOV5kTab38V]+ *(void *)(a1 + 48));
    v72[0] = 0;
    id v44 = v43;
    id v69 = 0;
    unsigned int v45 = [v42 BaSrRpzcWCyAjSdjbc8j:withSize:into:e2cxKLQOk3W4uL3KXTUm:refetch:error:a4, a5, [v44 mutableBytes], v72, &v70, &v69];
    id v46 = v69;
    if (v46) {
      unsigned int v45 = 0;
    }
    if (v45 == 1)
    {
      [v44 setLength:v72[0]];
      id v16 = v44;
      uint64_t v17 = 0;
    }
    else
    {
      id v16 = 0;
      uint64_t v17 = -1016;
    }

    if (v45) {
      goto LABEL_23;
    }
  }
  else
  {
    id v16 = 0;
    uint64_t v17 = -1014;
  }
  id v58 = *(id *)(a1 + 32);
  double v59 = +[NSError errorWithDomain:NSURLErrorDomain code:v17 userInfo:0];
  id v60 = v58;
  id v61 = v59;
  id v62 = _BookEPUBLog();
  if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
    sub_2FB0B8();
  }

  uint64_t v63 = v60[8];
  if ((v63 & 6) == 0)
  {
    v60[8] = v63 | 2;
    id v64 = [v60 delegate];
    [v64 urlHandler:v60 didFailWithError:v61];
    id v65 = +[BEURLHandler testingDelegate];
    [v65 urlHandler:v60 request:v60[6] didFailWithError:v61];
  }
  if (!v70)
  {
    uint64_t v57 = 0;
    goto LABEL_40;
  }
  CFDictionaryRef v55 = [*(id *)(a1 + 40) path];
  +[ft9cupR7u6OrU4m1pyhB _8g0aKpBRl5gIBvODdOy7:v55 completion:0];
  uint64_t v57 = 0;
LABEL_38:

LABEL_40:

  return v57;
}

void sub_2D118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _Unwind_Exception *exception_object, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_2D2EC(id a1, int a2)
{
  if (a2)
  {
    uint64_t v2 = *(void *)&a2;
    unint64_t v3 = _BookEPUBLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      +[NSNumber numberWithInt:v2];
      objc_claimAutoreleasedReturnValue();
      sub_2FB168();
    }
  }
}

void sub_2D380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 sub_2D398(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

void sub_2D3A8(uint64_t a1, int a2, void *a3, int a4)
{
  id v7 = a3;
  id v8 = v7;
  if (a4)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    if (a4 == 89) {
      uint64_t v10 = -999;
    }
    else {
      uint64_t v10 = -3001;
    }
    id v11 = v9;
    id v12 = +[NSError errorWithDomain:NSURLErrorDomain code:v10 userInfo:0];
    id v13 = v11;
    id v14 = v12;
    id v15 = _BookEPUBLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_2FB0B8();
    }

    uint64_t v16 = v13[8];
    if ((v16 & 6) == 0)
    {
      v13[8] = v16 | 2;
      uint64_t v17 = [v13 delegate];
      [v17 urlHandler:v13 didFailWithError:v14];
      id v18 = +[BEURLHandler testingDelegate];
      [v18 urlHandler:v13 request:v13[6] didFailWithError:v14];
    }
    uint64_t v19 = v13;
    goto LABEL_10;
  }
  if (v7 && v7 != &_dispatch_data_empty)
  {
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472;
    applier[2] = sub_2D704;
    applier[3] = &unk_3C1028;
    id v32 = *(id *)(a1 + 32);
    id v33 = *(id *)(a1 + 40);
    uint64_t v35 = *(void *)(a1 + 64);
    long long v34 = *(_OWORD *)(a1 + 48);
    dispatch_data_apply(v8, applier);
  }
  if (a2)
  {
    uint64_t v20 = *(void **)(a1 + 32);
    id v21 = [v20 pendingRangeRequestedData];
    long long v22 = v20;
    id v23 = v21;
    if ((v22[64] & 6) == 0)
    {
      id v24 = [v22 delegate];
      [v24 urlHandler:v22 didReceiveData:v23];
    }
    [*(id *)(a1 + 32) setPendingRangeRequestedData:0];
    id v25 = *(void **)(a1 + 32);
    id v26 = v25[3];
    if (v26)
    {
      unint64_t v27 = v25;
      dispatch_io_close(v26, 1uLL);
      uint64_t v28 = (void *)v25[3];
      v25[3] = 0;
    }
    id v29 = *(id *)(a1 + 32);
    uint64_t v19 = v29;
    uint64_t v30 = v29[8];
    if ((v30 & 6) != 0) {
      goto LABEL_11;
    }
    v29[8] = v30 | 4;
    id v14 = [v29 delegate];
    [v14 urlHandlerDidFinish:v19];
    id v13 = +[BEURLHandler testingDelegate];
    [v13 urlHandler:v19 didFinishRequest:v19[6]];
LABEL_10:

LABEL_11:
  }
}

void sub_2D67C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_2D704(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v72 = a2;
  char v74 = 0;
  if (a5)
  {
    id v8 = *(void **)(a1 + 40);
    uint64_t v9 = *(id *)(a1 + 32);
    id v10 = v8;
    id v11 = v10;
    if ((v9[8] & 1) == 0)
    {
      if ([v10 requestedRangeIsWholeAsset])
      {
        id v12 = objc_alloc((Class)NSURLResponse);
        id v13 = [v11 requestedURL];
        id v14 = [v11 mimeType];
        id v15 = [v12 initWithURL:v13 MIMEType:v14 expectedContentLength:[v11 fileSize] textEncodingName:0];
      }
      else
      {
        id v18 = [v11 requestedRange];
        uint64_t v20 = v19;
        id v21 = +[NSNumber numberWithUnsignedInteger:v18];
        long long v22 = +[NSNumber numberWithUnsignedInteger:v20];
        id v23 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v11 fileSize]);
        id v24 = +[NSString stringWithFormat:@"bytes %@-%@/%@", v21, v22, v23, context, v72];

        v75[0] = @"Content-Type";
        id v25 = [v11 mimeType];
        v76[0] = v25;
        v75[1] = @"Content-Length";
        id v26 = [v11 requestedRange];
        if (v27 >= (unint64_t)v26) {
          uint64_t v28 = v27 - (void)v26 + 1;
        }
        else {
          uint64_t v28 = 0;
        }
        id v29 = +[NSNumber numberWithUnsignedInteger:v28];
        uint64_t v30 = [v29 stringValue];
        v75[2] = @"Content-Range";
        v76[1] = v30;
        v76[2] = v24;
        id v31 = +[NSDictionary dictionaryWithObjects:v76 forKeys:v75 count:3];

        id v32 = objc_alloc((Class)NSHTTPURLResponse);
        id v33 = [v11 requestedURL];
        id v15 = [v32 initWithURL:v33 statusCode:206 HTTPVersion:@"HTTP/1.1" headerFields:v31];
      }
      long long v34 = v9;
      id v35 = v15;
      uint64_t v36 = v9[8];
      id v37 = v35;
      if ((v36 & 1) == 0)
      {
        v9[8] = v36 | 1;
        uint64_t v38 = +[BEURLHandler testingDelegate];
        BOOL v39 = v38 == 0;

        id v37 = v35;
        if (!v39)
        {
          id v37 = sub_2C55C(v35);
        }
        uint64_t v40 = [v34 delegate];
        [v40 urlHandler:v34 didReceiveResponse:v37];
      }
    }

    id v41 = [*(id *)(a1 + 40) sinfData];
    if (!v41)
    {
      id v16 = [objc_alloc((Class)NSData) initWithBytes:a4 length:a5];
LABEL_23:
      uint64_t v47 = *(void **)(a1 + 32);
      if ((v47[8] & 8) != 0)
      {
        v53 = v16;
      }
      else
      {
        v48 = *(void **)(a1 + 40);
        BOOL v49 = v47;
        id v50 = v48;
        id v51 = v16;
        id v52 = [v50 encryptionAlgorithm];
        v53 = v51;
        if ([v52 length])
        {
          if (![@"http://www.idpf.org/2008/embedding" compare:v52 options:1]
            || (v53 = v51, ![@"http://ns.adobe.com/pdf/enc#RC" compare:v52 options:1]))
          {
            CFDictionaryRef v54 = objc_alloc_init(BEFontUnmangler);
            CFDictionaryRef v55 = [v50 requestedURL];
            v53 = [(BEFontUnmangler *)v54 unmangleFontWithAssetInfo:v50 fileData:v51 URL:v55];
          }
        }
        v47[8] |= 8uLL;
      }
      uint64_t v66 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 48);
      v67 = *(char **)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
      if (v67 >= (char *)[v53 length] - v66) {
        id v68 = (char *)[v53 length] - v66;
      }
      else {
        id v68 = *(char **)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
      }
      [v53 subdataWithRange:v66, v68];
      id v16 = (id)objc_claimAutoreleasedReturnValue();

      *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 48) = 0;
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) -= v68;
      id v69 = [*(id *)(a1 + 32) pendingRangeRequestedData];
      [v69 appendData:v16];

      BOOL v65 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) != 0;
      goto LABEL_41;
    }
    id v42 = +[ft9cupR7u6OrU4m1pyhB MNeITI0WyvXBxnLLXXWr:v41];
    v43 = +[NSMutableData dataWithLength:](NSMutableData, "dataWithLength:", (char *)+[ft9cupR7u6OrU4m1pyhB d32lDu5WFQOV5kTab38V]+ *(void *)(a1 + 64));
    v76[0] = 0;
    id v44 = v43;
    id v73 = 0;
    unsigned int v45 = [v42 BaSrRpzcWCyAjSdjbc8j:withSize:into:e2cxKLQOk3W4uL3KXTUm:refetch:error:a4, a5, [v44 mutableBytes], v76, &v74, &v73];
    id v46 = v73;
    if (v46) {
      unsigned int v45 = 0;
    }
    if (v45 == 1)
    {
      [v44 setLength:v76[0]];
      id v16 = v44;
      uint64_t v17 = 0;
    }
    else
    {
      id v16 = 0;
      uint64_t v17 = -1016;
    }

    if (v45) {
      goto LABEL_23;
    }
  }
  else
  {
    id v16 = 0;
    uint64_t v17 = -1014;
  }
  id v56 = *(id *)(a1 + 32);
  uint64_t v57 = +[NSError errorWithDomain:NSURLErrorDomain code:v17 userInfo:0];
  id v58 = v56;
  id v59 = v57;
  id v60 = _BookEPUBLog();
  if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
    sub_2FB0B8();
  }

  uint64_t v61 = v58[8];
  if ((v61 & 6) == 0)
  {
    v58[8] = v61 | 2;
    id v62 = [v58 delegate];
    [v62 urlHandler:v58 didFailWithError:v59];
    uint64_t v63 = +[BEURLHandler testingDelegate];
    [v63 urlHandler:v58 request:v58[6] didFailWithError:v59];
  }
  if (v74)
  {
    id v64 = [*(id *)(a1 + 40) path];
    +[ft9cupR7u6OrU4m1pyhB _8g0aKpBRl5gIBvODdOy7:v64 completion:0];
  }
  BOOL v65 = 0;
LABEL_41:

  return v65;
}

void sub_2DDFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_2DFCC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_2DFE8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t sub_2E00C(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(void *)(a2 + 4) = result;
  return result;
}

void sub_2E250(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];

  id v3 = [*(id *)(a1 + 32) taskToURLHandlerMap];
  [v3 setObject:*(void *)(a1 + 48) forKey:*(void *)(a1 + 40)];
}

void sub_2E3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2E3E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2E3F8(uint64_t a1)
{
}

void sub_2E400(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) taskToURLHandlerMap];
  uint64_t v2 = [v6 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  [v5 removeObjectForKey:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];

  [v6 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_2E560(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didReceiveResponse:*(void *)(a1 + 48)];
}

void sub_2E67C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didReceiveData:*(void *)(a1 + 48)];
}

void sub_2E76C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didFinish];
  [*(id *)(a1 + 32) _removeTaskForHandler:*(void *)(a1 + 40)];
}

void sub_2E88C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didFailWithError:*(void *)(a1 + 48)];
  [*(id *)(a1 + 32) _removeTaskForHandler:*(void *)(a1 + 40)];
}

void sub_2EA84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2EAA8(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  uint64_t v2 = [v5 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_2EBA8(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  uint64_t v2 = [v4 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = [*(id *)(a1 + 32) taskToURLHandlerMap];
  [v3 removeObjectForKey:v2];

  [v4 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_2EF30(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) delegate];
    if (objc_opt_respondsToSelector())
    {
      id v4 = BookEPUBBundle();
      id v5 = [v4 localizedStringForKey:@"OK" value:&stru_3D7B70 table:0];
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_2F0F8;
      v12[3] = &unk_3C10A0;
      id v13 = *(id *)(a1 + 48);
      id v6 = +[UIAlertAction actionWithTitle:v5 style:0 handler:v12];

      id v7 = +[UIAlertController alertControllerWithTitle:&stru_3D7B70 message:*(void *)(a1 + 40) preferredStyle:1];
      [v7 addAction:v6];
      [v3 handler:*(void *)(a1 + 32) presentAlertController:v7 completion:0];
    }
    else
    {
      id v9 = objc_retainBlock(*(id *)(a1 + 48));
      id v10 = v9;
      if (v9) {
        (*((void (**)(id))v9 + 2))(v9);
      }
    }
  }
  else
  {
    id v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    if (v8)
    {
      id v11 = v8;
      v8[2]();
      id v8 = v11;
    }
  }
}

void sub_2F0F8(uint64_t a1)
{
  id v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    id v1 = v2;
  }
}

void sub_2F208(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) delegate];
    if (objc_opt_respondsToSelector())
    {
      id v4 = BookEPUBBundle();
      id v5 = [v4 localizedStringForKey:@"OK" value:&stru_3D7B70 table:0];
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_2F498;
      v17[3] = &unk_3C10A0;
      id v18 = *(id *)(a1 + 48);
      id v6 = +[UIAlertAction actionWithTitle:v5 style:0 handler:v17];

      id v7 = BookEPUBBundle();
      id v8 = [v7 localizedStringForKey:@"Cancel" value:&stru_3D7B70 table:0];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_2F4E8;
      v15[3] = &unk_3C10A0;
      id v16 = *(id *)(a1 + 48);
      id v9 = +[UIAlertAction actionWithTitle:v8 style:1 handler:v15];

      id v10 = +[UIAlertController alertControllerWithTitle:&stru_3D7B70 message:*(void *)(a1 + 40) preferredStyle:1];
      [v10 addAction:v6];
      [v10 addAction:v9];
      [v3 handler:*(void *)(a1 + 32) presentAlertController:v10 completion:0];
    }
    else
    {
      id v12 = objc_retainBlock(*(id *)(a1 + 48));
      id v13 = v12;
      if (v12) {
        (*((void (**)(id, void))v12 + 2))(v12, 0);
      }
    }
  }
  else
  {
    id v11 = objc_retainBlock(*(id *)(a1 + 48));
    if (v11)
    {
      id v14 = v11;
      (*((void (**)(id, void))v11 + 2))(v11, 0);
      id v11 = v14;
    }
  }
}

void sub_2F498(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, uint64_t))v1 + 2))(v1, 1);
    id v1 = v2;
  }
}

void sub_2F4E8(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, void))v1 + 2))(v1, 0);
    id v1 = v2;
  }
}

void sub_2FB1C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  id v4 = a2;
  v3(v2, 1);
  id v6 = objc_retainBlock(v4);

  id v5 = v6;
  if (v6)
  {
    (*((void (**)(id))v6 + 2))(v6);
    id v5 = v6;
  }
}

UIMenu *__cdecl sub_2FC9C(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  id v13 = sub_2FE70;
  id v14 = sub_2FE80;
  id v15 = 0;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_2FE88;
  v9[3] = &unk_3C1158;
  v9[4] = &v10;
  [(NSArray *)v2 enumerateObjectsUsingBlock:v9];
  if (v11[5])
  {
    uint64_t v16 = v11[5];
    uint64_t v3 = +[NSArray arrayWithObjects:&v16 count:1];
  }
  else
  {
    id v4 = _BookEPUBLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      __int16 v8 = 0;
      _os_log_impl(&def_7BFC0, v4, OS_LOG_TYPE_ERROR, "WebKit native open action (WKElementActionTypeOpenIdentifier) not found to open link - fallback to suggested actions", (uint8_t *)&v8, 2u);
    }

    uint64_t v3 = v2;
  }
  id v5 = v3;
  id v6 = +[UIMenu menuWithChildren:v3];

  _Block_object_dispose(&v10, 8);

  return (UIMenu *)v6;
}

void sub_2FE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2FE70(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2FE80(uint64_t a1)
{
}

void sub_2FE88(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  objc_opt_class();
  BUDynamicCast();
  obuint64_t j = (id)objc_claimAutoreleasedReturnValue();

  id v7 = [obj identifier];
  LODWORD(v6) = [v7 isEqualToString:@"WKElementActionTypeOpen"];

  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), obj);
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setImage:0];
    *a4 = 1;
  }
}

id BEURLIncludePatternsForBooks()
{
  id v0 = [objc_alloc((Class)NSMutableArray) initWithCapacity:3 * *(_OWORD *)off_3C1230 @"file"];
  for (uint64_t i = 0; i != 24; i += 8)
  {
    uint64_t v2 = [*(id *)((char *)&v5 + i) stringByAppendingString:@"://*/*"];
    if (v2) {
      [v0 addObject:v2];
    }
  }
  for (uint64_t j = 16; j != -8; j -= 8)

  return v0;
}

uint64_t sub_302B4()
{
  qword_409BF8 = (uint64_t)objc_alloc_init((Class)objc_opt_class());

  return _objc_release_x1();
}

void ITEpubRightsParser::ITEpubRightsParser(ITEpubRightsParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  *uint64_t v2 = off_3C1258;
  uint8_t v2[16] = 0;
  v2[17] = 0;
  *((void *)this + 15) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
}

void sub_306B4(_Unwind_Exception *a1)
{
  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void ITEpubRightsParser::~ITEpubRightsParser(ITEpubRightsParser *this)
{
  *(void *)this = off_3C1258;
  uint64_t v2 = (const void *)*((void *)this + 15);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 15) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 16);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 16) = 0;
  }
  id v4 = (const void *)*((void *)this + 17);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 17) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubRightsParser::~ITEpubRightsParser(this);

  operator delete();
}

void ITEpubRightsParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  if (ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"sinf"))
  {
    CFMutableArrayRef v5 = this[17];
    if (v5)
    {
      CFRelease(v5);
      this[17] = 0;
    }
    CFMutableArrayRef v6 = this[16];
    if (v6)
    {
      CFRelease(v6);
      this[16] = 0;
    }
  }
}

void ITEpubRightsParser::EndElement(ITEpubRightsParser *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"sID"))
  {
    id v4 = (const void *)*((void *)this + 17);
    if (v4)
    {
      CFRelease(v4);
      *((void *)this + 17) = 0;
    }
    CFMutableArrayRef v5 = (char *)this + 72;
    if (*((char *)this + 95) < 0) {
      CFMutableArrayRef v5 = *(const char **)v5;
    }
    *((void *)this + 17) = CFStringCreateWithCString(kCFAllocatorDefault, v5, 0x8000100u);
    goto LABEL_50;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"sData"))
  {
    CFMutableArrayRef v6 = (const void *)*((void *)this + 16);
    if (v6)
    {
      CFRelease(v6);
      *((void *)this + 16) = 0;
    }
    if (*((char *)this + 95) >= 0) {
      LODWORD(v7) = *((unsigned __int8 *)this + 95);
    }
    else {
      uint64_t v7 = *((void *)this + 10);
    }
    CFIndex v8 = 3 * vcvtpd_u64_f64((double)v7 * 0.25);
    CFMutableDictionaryRef Mutable = CFDataCreateMutable(kCFAllocatorDefault, v8);
    uint64_t v10 = Mutable;
    if (!Mutable) {
      goto LABEL_49;
    }
    CFDataSetLength(Mutable, v8);
    if (*((char *)this + 95) >= 0) {
      id v11 = (unsigned __int8 *)this + 72;
    }
    else {
      id v11 = (unsigned __int8 *)*((void *)this + 9);
    }
    MutableBytePtr = CFDataGetMutableBytePtr(v10);
    CFIndex v13 = 0;
    if (!v11 || !MutableBytePtr)
    {
LABEL_48:
      CFDataSetLength(v10, v13);
LABEL_49:
      *((void *)this + 16) = v10;
      goto LABEL_50;
    }
    if (3 * ((v7 + 3) >> 2) > v8)
    {
      CFIndex v13 = 0;
      goto LABEL_48;
    }
    LODWORD(v17) = MutableBytePtr;
    if (!v7)
    {
LABEL_47:
      CFIndex v13 = (v17 - MutableBytePtr);
      goto LABEL_48;
    }
    int v18 = 0;
    int v19 = 0;
    unsigned int v20 = 0;
    id v21 = (char *)&v11[v7];
    long long v22 = MutableBytePtr;
    do
    {
      unsigned int v24 = *v11++;
      unsigned int v23 = v24;
      int v25 = byte_32AD45[v24];
      if (v25 == 255)
      {
        if (v23 == 61)
        {
          v20 <<= 6;
          ++v18;
        }
      }
      else
      {
        UInt8 v26 = v25 | ((_BYTE)v20 << 6);
        ++v19;
        int v18 = 0;
        if ((v19 & 3) != 0)
        {
          unsigned int v20 = v25 | (v20 << 6);
        }
        else
        {
          unsigned int v27 = v20 << 6;
          *long long v22 = BYTE2(v27);
          v22[1] = BYTE1(v27);
          v22[2] = v26;
          v22 += 3;
          unsigned int v20 = 0;
        }
      }
    }
    while (v11 < (unsigned __int8 *)v21);
    if (v18)
    {
      *long long v22 = BYTE2(v20);
      uint64_t v17 = v22 + 1;
      if (v18 != 1) {
        goto LABEL_47;
      }
    }
    else
    {
      if ((v7 & 3) != 3)
      {
        if ((v7 & 3) != 2)
        {
          LODWORD(v17) = v22;
          goto LABEL_47;
        }
        unsigned int v28 = v20 >> 4;
        int v29 = 1;
        uint64_t v17 = v22;
        goto LABEL_46;
      }
      unsigned int v30 = v20 >> 10;
      v20 <<= 6;
      *long long v22 = v30;
      uint64_t v17 = v22 + 1;
    }
    unsigned int v28 = v20 >> 8;
    int v29 = 2;
LABEL_46:
    *uint64_t v17 = v28;
    LODWORD(v17) = v22 + v29;
    goto LABEL_47;
  }
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"sinf"))
  {
    id v14 = (const void *)*((void *)this + 17);
    if (v14)
    {
      id v15 = (const void *)*((void *)this + 16);
      if (!v15
        || (CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 15), v14, v15),
            (id v14 = (const void *)*((void *)this + 17)) != 0))
      {
        CFRelease(v14);
        *((void *)this + 17) = 0;
      }
    }
    uint64_t v16 = (const void *)*((void *)this + 16);
    if (v16)
    {
      CFRelease(v16);
      *((void *)this + 16) = 0;
    }
  }
LABEL_50:

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

void BKReadableFormat::BKReadableFormat(BKReadableFormat *this, const __CFString *a2, const __CFString *a3)
{
  ITRetain::ITRetain(this);
  *(void *)uint64_t v6 = off_3C12B8;
  *(void *)(v6 + 16) = 0;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(void *)(v6 + 64) = 0;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  if (a2)
  {
    *((void *)this + 2) = CFStringCreateCopy(kCFAllocatorDefault, a2);
    *((void *)this + 3) = CFStringCreateCopy(kCFAllocatorDefault, a3);
  }
}

void sub_30B44(_Unwind_Exception *a1)
{
  ITRetain::~ITRetain(v1);
  _Unwind_Resume(a1);
}

void BKReadableFormat::~BKReadableFormat(BKReadableFormat *this)
{
  *(void *)this = off_3C12B8;
  uint64_t v2 = (const void *)*((void *)this + 3);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 3) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 2);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 2) = 0;
  }
  id v4 = (const void *)*((void *)this + 4);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 4) = 0;
  }
  CFMutableArrayRef v5 = (const void *)*((void *)this + 5);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 5) = 0;
  }
  uint64_t v6 = (const void *)*((void *)this + 6);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 6) = 0;
  }
  uint64_t v7 = (const void *)*((void *)this + 7);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 7) = 0;
  }
  CFIndex v8 = (const void *)*((void *)this + 8);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 8) = 0;
  }
  id v9 = (const void *)*((void *)this + 10);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 10) = 0;
  }
  uint64_t v10 = (const void *)*((void *)this + 11);
  if (v10)
  {
    CFRelease(v10);
    *((void *)this + 11) = 0;
  }
  id v11 = (const void *)*((void *)this + 12);
  if (v11)
  {
    CFRelease(v11);
    *((void *)this + 12) = 0;
  }
  uint64_t v12 = (const void *)*((void *)this + 16);
  if (v12)
  {
    CFRelease(v12);
    *((void *)this + 16) = 0;
  }
  CFIndex v13 = (const void *)*((void *)this + 17);
  if (v13)
  {
    CFRelease(v13);
    *((void *)this + 17) = 0;
  }
  id v14 = (atomic_uint *)*((void *)this + 13);
  if (v14)
  {
    ITRetain::release(v14);
    *((void *)this + 13) = 0;
  }
  id v15 = (atomic_uint *)*((void *)this + 14);
  if (v15)
  {
    ITRetain::release(v15);
    *((void *)this + 14) = 0;
  }
  uint64_t v16 = (atomic_uint *)*((void *)this + 15);
  if (v16)
  {
    ITRetain::release(v16);
    *((void *)this + 15) = 0;
  }

  ITRetain::~ITRetain(this);
}

const void *BKReadableFormat::copyRootPath(BKReadableFormat *this)
{
  __n128 result = (const void *)*((void *)this + 2);
  if (result)
  {
    CFRetain(result);
    return (const void *)*((void *)this + 2);
  }
  return result;
}

void ITEpubFixedLayoutParser::ITEpubFixedLayoutParser(ITEpubFixedLayoutParser *this)
{
  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  void *v1 = off_3C1370;
  v1[15] = 0;
  v1[16] = 0;
}

{
  void *v1;

  ITEpubXmlParseHandler::ITEpubXmlParseHandler(this);
  void *v1 = off_3C1370;
  v1[15] = 0;
  v1[16] = 0;
}

void ITEpubFixedLayoutParser::~ITEpubFixedLayoutParser(ITEpubFixedLayoutParser *this)
{
  *(void *)this = off_3C1370;
  uint64_t v2 = (const void *)*((void *)this + 16);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 16) = 0;
  }

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  ITEpubFixedLayoutParser::~ITEpubFixedLayoutParser(this);

  operator delete();
}

uint64_t ITEpubFixedLayoutParser::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  ITEpubXmlParseHandler::StartElement(this, a2, a3);
  uint64_t result = ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"head");
  if (result)
  {
    *((_DWORD *)this + 30) = 1;
  }
  else if (*((_DWORD *)this + 30))
  {
    if (!*((_DWORD *)this + 31))
    {
      uint64_t result = ITEpubXmlParseHandler::doesNodeMatch((ITEpubXmlParseHandler *)this, a2, @"meta");
      if (result)
      {
        uint64_t result = (uint64_t)CFDictionaryGetValue(a3, @"name");
        if (result)
        {
          CFStringRef v7 = (const __CFString *)result;
          uint64_t result = CFStringGetLength((CFStringRef)result);
          if (result)
          {
            uint64_t result = CFStringCompare(v7, @"viewport", 1uLL);
            if (!result)
            {
              uint64_t result = (uint64_t)CFDictionaryGetValue(a3, @"content");
              if (result)
              {
                CFIndex v8 = (__CFArray *)result;
                uint64_t result = CFStringGetLength((CFStringRef)result);
                if (result)
                {
                  *((_DWORD *)this + 31) = 1;
                  this[16] = v8;
                  return (uint64_t)CFRetain(v8);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void ITEpubFixedLayoutParser::EndElement(ITEpubFixedLayoutParser *this, const __CFString *a2)
{
  if (ITEpubXmlParseHandler::doesNodeMatch(this, a2, @"head")) {
    *((_DWORD *)this + 30) = 0;
  }

  ITEpubXmlParseHandler::EndElement((CFArrayRef *)this, a2);
}

uint64_t ITEpubFixedLayoutParser::dimensionsFromData(ITEpubFixedLayoutParser *this, const __CFData *a2)
{
  if (this && CFDataGetLength(this)) {
    operator new();
  }
  return -1;
}

void sub_31084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ITEpubXmlParseHandler::ITEpubXmlParseHandler(ITEpubXmlParseHandler *this)
{
  ITRetain::ITRetain(this);
  *(void *)uint64_t v2 = off_3C13D0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  int v3 = 0;
  sub_31DFC((void *)(v2 + 96), 1uLL, &v3);
  *((void *)this + 2) = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
}

void sub_31154(_Unwind_Exception *a1)
{
  int v3 = v2;
  CFMutableArrayRef v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 104) = v5;
    operator delete(v5);
  }
  if (*(char *)(v1 + 95) < 0) {
    operator delete(*(void **)(v1 + 72));
  }
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*(void **)(v1 + 32));
  }
  ITRetain::~ITRetain((ITRetain *)v1);
  _Unwind_Resume(a1);
}

void ITEpubXmlParseHandler::~ITEpubXmlParseHandler(ITEpubXmlParseHandler *this)
{
  *(void *)this = off_3C13D0;
  uint64_t v2 = (const void *)*((void *)this + 3);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 3) = 0;
  }
  int v3 = (const void *)*((void *)this + 7);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 7) = 0;
  }
  id v4 = (const void *)*((void *)this + 8);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 8) = 0;
  }
  CFMutableArrayRef v5 = (const void *)*((void *)this + 2);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 2) = 0;
  }
  uint64_t v6 = (void *)*((void *)this + 12);
  if (v6)
  {
    *((void *)this + 13) = v6;
    operator delete(v6);
  }
  if (*((char *)this + 95) < 0) {
    operator delete(*((void **)this + 9));
  }
  if (*((char *)this + 55) < 0) {
    operator delete(*((void **)this + 4));
  }

  ITRetain::~ITRetain(this);
}

{
  uint64_t vars8;

  ITEpubXmlParseHandler::~ITEpubXmlParseHandler(this);

  operator delete();
}

uint64_t ITEpubXmlParseHandler::parse(ITEpubXmlParseHandler *this, char *__s)
{
  size_t v4 = strlen(__s);
  if (!v4) {
    return 0;
  }
  CFStringRef v5 = CFStringCreateWithBytes(kCFAllocatorDefault, (const UInt8 *)__s, v4, 0x8000100u, 0);
  if (!v5) {
    return 0;
  }
  CFStringRef v6 = v5;
  uint64_t v7 = ITEpubXmlParseHandler::parse(this, v5);
  CFRelease(v6);
  return v7;
}

uint64_t ITEpubXmlParseHandler::parse(ITEpubXmlParseHandler *this, CFStringRef theString)
{
  int v18 = 0;
  __big.isa = 0;
  size_t v4 = (const void *)*((void *)this + 7);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 7) = 0;
  }
  if (!theString || !CFStringGetLength(theString)) {
    return 4294967246;
  }
  (*(void (**)(ITEpubXmlParseHandler *, CFStringRef))(*(void *)this + 48))(this, theString);
  uint64_t v6 = ITFileUtil::slurp(*((const __CFString **)this + 7), &__big, &v18, v5);
  uint64_t v7 = v6;
  isa = (char *)__big.isa;
  if (__big.isa && v18)
  {
    if ((unint64_t)v18 >= 0x64)
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409C10, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_409C10))
      {
        qword_409C08 = strlen(aEncoding_0);
        __cxa_guard_release(&qword_409C10);
      }
      id v9 = strnstr(isa, "encoding=", 0x64uLL);
      if (v9)
      {
        uint64_t v10 = &v9[qword_409C08];
        int v11 = v9[qword_409C08];
        if (v11 == 39 || v11 == 34)
        {
          uint64_t v12 = v10 + 1;
          if (v10 + 1 - isa <= 99)
          {
            uint64_t v13 = -5;
            while (*((unsigned __int8 *)v12 + v13 + 5) != v11)
            {
              ++v13;
              if (&v9[qword_409C08] - isa - 99 + v13 == -5) {
                goto LABEL_31;
              }
            }
            if (v13 != -5
              && (!strncasecmp(v10 + 1, "us-ascii", v13 + 5)
               || !strncasecmp(v10 + 1, "ascii", v13 + 5)
               || !strncasecmp(v10 + 1, "iso-8859-1", v13 + 5)))
            {
              if ((unint64_t)(v13 + 6) >= 7) {
                size_t v14 = v13;
              }
              else {
                size_t v14 = 0;
              }
              memset(v10 + 7, 32, v14);
              *uint64_t v12 = 759583829;
              *(_WORD *)(v10 + 5) = 8760;
            }
          }
        }
      }
    }
LABEL_31:
    CFDataRef v15 = CFDataCreateWithBytesNoCopy(kCFAllocatorDefault, (const UInt8 *)__big.isa, (CFIndex)v18, kCFAllocatorMalloc);
    __big.isa = 0;
    if (v15)
    {
      CFDataRef v16 = v15;
      uint64_t v7 = (uint64_t)ITEpubXmlParseHandler::parseData(this, v15, theString);
      CFRelease(v16);
      isa = (char *)__big.isa;
      if (__big.isa) {
        goto LABEL_33;
      }
    }
  }
  else
  {
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 4294967253;
    }
    if (__big.isa) {
LABEL_33:
    }
      free(isa);
  }
  return v7;
}

void ITEpubXmlParseHandler::SetXmlPath(ITEpubXmlParseHandler *this, CFTypeRef cf)
{
  CFTypeRef v3 = (CFTypeRef)*((void *)this + 7);
  if (v3 != cf)
  {
    if (cf)
    {
      CFRetain(cf);
      CFTypeRef v3 = (CFTypeRef)*((void *)this + 7);
    }
    if (v3) {
      CFRelease(v3);
    }
    *((void *)this + 7) = cf;
  }
}

CFStringRef ITEpubXmlParseHandler::RelativePathBase(CFStringRef *this)
{
  if (!this[8])
  {
    CFURLRef v2 = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, this[7], kCFURLPOSIXPathStyle, 0);
    if (v2)
    {
      CFURLRef v3 = v2;
      CFURLRef PathComponent = CFURLCreateCopyDeletingLastPathComponent(kCFAllocatorDefault, v2);
      if (PathComponent)
      {
        CFURLRef v5 = PathComponent;
        this[8] = CFURLCopyPath(PathComponent);
        CFRelease(v5);
      }
      CFRelease(v3);
    }
  }
  return this[8];
}

id ITEpubXmlParseHandler::parseData(ITEpubXmlParseHandler *this, const __CFData *a2, const __CFString *a3)
{
  if (!a2) {
    return 0;
  }
  if (!*((void *)this + 7)) {
    (*(void (**)(ITEpubXmlParseHandler *, const __CFString *))(*(void *)this + 48))(this, a3);
  }

  return ITParseXMLInObjectiveCWithData(this, a2);
}

uint64_t ITEpubXmlParseHandler::childIndexInParent(ITEpubXmlParseHandler *this)
{
  if (*((void *)this + 13) - *((void *)this + 12) < 5uLL) {
    return 0;
  }
  else {
    return (*(_DWORD *)(*((void *)this + 13) - 8) - 1);
  }
}

BOOL ITEpubXmlParseHandler::doesNodeMatch(ITEpubXmlParseHandler *this, CFStringRef theString, const __CFString *a3)
{
  CFRange v5 = CFStringFind(theString, @":", 4uLL);
  if (v5.length < 1)
  {
    CFIndex Length = CFStringGetLength(theString);
    CFIndex v6 = 0;
  }
  else
  {
    CFIndex v6 = v5.location + 1;
    CFIndex Length = CFStringGetLength(theString) - (v5.location + 1);
  }
  if (Length != CFStringGetLength(a3)) {
    return 0;
  }
  v9.id location = v6;
  v9.uint64_t length = Length;
  return CFStringCompareWithOptions(theString, a3, v9, 0) == kCFCompareEqualTo;
}

const __CFString *ITEpubXmlParseHandler::doesAttributeMatch(ITEpubXmlParseHandler *this, const __CFString *a2, const __CFString *a3, CFDictionaryRef theDict)
{
  CFStringRef result = (const __CFString *)CFDictionaryGetValue(theDict, a2);
  if (result) {
    return (const __CFString *)(CFEqual(a3, result));
  }
  return result;
}

__CFArray *ITEpubXmlParseHandler::createArrayWithWhitespaceSplitting(ITEpubXmlParseHandler *this, const __CFString *a2)
{
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
  CFIndex Length = CFStringGetLength(a2);
  CFCharacterSetRef Predefined = CFCharacterSetGetPredefined(kCFCharacterSetWhitespaceAndNewline);
  if (Length)
  {
    CFCharacterSetRef v6 = Predefined;
    CFIndex location = 0;
    v8.uint64_t length = Length;
    do
    {
      v8.CFIndex location = location;
      if (!CFStringFindCharacterFromSet(a2, v6, v8, 0, &v12)) {
        break;
      }
      if (v12.location != location)
      {
        v13.CFIndex location = location;
        v13.uint64_t length = v12.location - location;
        CFStringRef v9 = CFStringCreateWithSubstring(kCFAllocatorDefault, a2, v13);
        CFArrayAppendValue(Mutable, v9);
        CFRelease(v9);
        CFIndex location = v12.location;
      }
      ++location;
      v8.uint64_t length = Length - location;
    }
    while (Length != location);
    if (Length > location)
    {
      v14.CFIndex location = location;
      v14.uint64_t length = Length - location;
      CFStringRef v10 = CFStringCreateWithSubstring(kCFAllocatorDefault, a2, v14);
      CFArrayAppendValue(Mutable, v10);
      CFRelease(v10);
    }
  }
  return Mutable;
}

void ITEpubXmlParseHandler::StartElement(CFMutableArrayRef *this, const __CFString *a2, const __CFDictionary *a3)
{
  if (a2) {
    CFArrayAppendValue(this[2], a2);
  }
  CFMutableArrayRef v4 = this[14];
  CFRange v5 = (char *)this[13];
  ++*((_DWORD *)v5 - 1);
  if (v5 >= (char *)v4)
  {
    CFMutableArrayRef v7 = this[12];
    uint64_t v8 = (v5 - (char *)v7) >> 2;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_9E38();
    }
    unint64_t v9 = v4 - v7;
    unint64_t v10 = (v4 - v7) >> 1;
    if (v10 <= v8 + 1) {
      unint64_t v10 = v8 + 1;
    }
    if (v9 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11)
    {
      CFRange v12 = (char *)sub_31EC4((uint64_t)(this + 14), v11);
      CFMutableArrayRef v7 = this[12];
      CFRange v5 = (char *)this[13];
    }
    else
    {
      CFRange v12 = 0;
    }
    CFRange v13 = (__CFArray *)&v12[4 * v8];
    CFRange v14 = (__CFArray *)&v12[4 * v11];
    *(_DWORD *)CFRange v13 = 0;
    CFCharacterSetRef v6 = (__CFArray *)((char *)v13 + 4);
    while (v5 != (char *)v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      CFRange v13 = (__CFArray *)((char *)v13 - 4);
    }
    this[12] = v13;
    this[13] = v6;
    this[14] = v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)CFRange v5 = 0;
    CFCharacterSetRef v6 = (__CFArray *)(v5 + 4);
  }
  this[13] = v6;
  if (*((char *)this + 95) < 0)
  {
    *(unsigned char *)this[9] = 0;
    this[10] = 0;
  }
  else
  {
    *((unsigned char *)this + 72) = 0;
    *((unsigned char *)this + 95) = 0;
  }
}

void ITEpubXmlParseHandler::PushNodeName(CFMutableArrayRef *this, const __CFString *a2)
{
  if (a2) {
    CFArrayAppendValue(this[2], a2);
  }
}

void ITEpubXmlParseHandler::SetCurrentNamespace(ITEpubXmlParseHandler *this, CFTypeRef cf)
{
  CFTypeRef v3 = (CFTypeRef)*((void *)this + 3);
  if (v3 != cf)
  {
    if (v3) {
      CFRelease(v3);
    }
    *((void *)this + 3) = cf;
    if (cf)
    {
      CFRetain(cf);
    }
  }
}

void ITEpubXmlParseHandler::FoundText(std::string *this, CFStringRef theString)
{
  memset(&__p, 0, sizeof(__p));
  ITStrUtil::toString(theString, (uint64_t)&__p);
  ITStrUtil::trim(&__p, 0);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  std::string::append(this + 3, (const std::string::value_type *)p_p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_31B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ITEpubXmlParseHandler::EndElement(CFArrayRef *this, const __CFString *a2)
{
  this[13] = (CFArrayRef)((char *)this[13] - 4);
  if (*((char *)this + 95) < 0)
  {
    *(unsigned char *)this[9] = 0;
    this[10] = 0;
  }
  else
  {
    *((unsigned char *)this + 72) = 0;
    *((unsigned char *)this + 95) = 0;
  }
}

void ITEpubXmlParseHandler::PopNodeName(CFArrayRef *this)
{
  CFIndex Count = CFArrayGetCount(this[2]);
  CFIndex v3 = Count - 1;
  if (Count >= 1)
  {
    CFMutableArrayRef v4 = this[2];
    CFArrayRemoveValueAtIndex(v4, v3);
  }
}

CFStringRef ITEpubXmlParseHandler::copyHrefStrippingHash(const __CFString *this, const __CFString *a2)
{
  if (!this) {
    return 0;
  }
  CFStringRef v2 = this;
  CFRange v3 = CFStringFind(this, @"#", 0);
  if (v3.length)
  {
    v7.uint64_t length = v3.location;
    CFAllocatorRef v4 = kCFAllocatorDefault;
    v7.CFIndex location = 0;
    CFStringRef v2 = CFStringCreateWithSubstring(kCFAllocatorDefault, v2, v7);
  }
  else
  {
    CFRetain(v2);
    CFAllocatorRef v4 = kCFAllocatorDefault;
  }
  CFStringRef v5 = CFURLCreateStringByReplacingPercentEscapes(v4, v2, &stru_3D7B70);
  if (!v5)
  {
    CFRetain(v2);
    CFStringRef v5 = v2;
    if (!v2) {
      return v5;
    }
    goto LABEL_8;
  }
  if (v2) {
LABEL_8:
  }
    CFRelease(v2);
  return v5;
}

const __CFString *ITEpubXmlParseHandler::createHrefString(const __CFString *originalString, const __CFString *a2)
{
  if (originalString)
  {
    CFStringRef v2 = originalString;
    originalString = CFURLCreateStringByReplacingPercentEscapes(kCFAllocatorDefault, originalString, &stru_3D7B70);
    if (!originalString)
    {
      CFRetain(v2);
      return v2;
    }
  }
  return originalString;
}

std::string *ITEpubXmlParseHandler::FirstChapterQualityToString(unsigned int a1, std::string *this)
{
  if (a1 > 0xA) {
    CFRange v3 = "000: Unknown [4]";
  }
  else {
    CFRange v3 = off_3C1420[a1];
  }
  return std::string::assign(this, v3);
}

BOOL ITEpubXmlParseHandler::BOOLeanForString(ITEpubXmlParseHandler *this, CFStringRef theString1)
{
  return theString1 && CFStringCompare(theString1, @"true", 1uLL) == kCFCompareEqualTo;
}

const void *ITEpubXmlParseHandler::CurrentNodeName(CFArrayRef *this)
{
  CFIndex Count = CFArrayGetCount(this[2]);
  CFIndex v3 = Count - 1;
  if (Count < 1) {
    return 0;
  }
  CFArrayRef v4 = this[2];

  return CFArrayGetValueAtIndex(v4, v3);
}

uint64_t ITEpubXmlParseHandler::DoesNodeStackContain(CFArrayRef *this, const __CFString *a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t Count = CFArrayGetCount(this[2]);
  if (Count < 1) {
    return 0;
  }
  v6.uint64_t length = Count;
  v6.CFIndex location = 0;
  return CFArrayContainsValue(this[2], v6, a2);
}

void *sub_31DFC(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_31E80(a1, a2);
    CFRange v6 = (_DWORD *)a1[1];
    CFRange v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_31E64(_Unwind_Exception *exception_object)
{
  CFIndex v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_31E80(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_9E38();
  }
  CFStringRef result = (char *)sub_31EC4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *sub_31EC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_9F18();
  }
  return operator new(4 * a2);
}

id _BEAreEquivalentURLsIgnoringFragment(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  if (a3)
  {
    uint64_t v7 = [v5 _be_urlWithoutFragment];

    uint64_t v8 = [v6 _be_urlWithoutFragment];

    id v6 = (id)v8;
    id v5 = (id)v7;
  }
  unint64_t v9 = BEURLHandleriBooksImgUrlFromiBooksURL(v5);

  unint64_t v10 = BEURLHandleriBooksImgUrlFromiBooksURL(v6);

  id v11 = [v9 isEqual:v10];
  return v11;
}

void ITEpubFolder::ITEpubFolder(ITEpubFolder *this, const __CFString *a2, const __CFString *a3)
{
  BKReadableFormat::BKReadableFormat(this, a2, a3);
  *(void *)uint64_t v6 = off_3C1488;
  *(void *)(v6 + 216) = 0;
  *(_DWORD *)(v6 + 224) = 0;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_DWORD *)(v6 + 208) = 0;
  *(_OWORD *)(v6 + 248) = 0u;
  *(void *)(v6 + 328) = 0;
  *(_OWORD *)(v6 + 232) = 0u;
  *(_OWORD *)(v6 + 264) = 0u;
  *(_OWORD *)(v6 + 280) = 0u;
  *(_OWORD *)(v6 + 296) = 0u;
  *(_OWORD *)(v6 + 312) = 0u;
  if (!ITFileUtil::hasTrailingSlash(a2, v7))
  {
    unint64_t v9 = (const void *)*((void *)this + 2);
    if (v9)
    {
      CFRelease(v9);
      *((void *)this + 2) = 0;
    }
    MutableCopCGFloat y = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, a2);
    CFStringAppend(MutableCopy, @"/");
    *((void *)this + 2) = MutableCopy;
  }
  if (!ITFileUtil::hasTrailingSlash(a3, v8))
  {
    id v11 = (const void *)*((void *)this + 3);
    if (v11)
    {
      CFRelease(v11);
      *((void *)this + 3) = 0;
    }
    CFRange v12 = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, a3);
    CFStringAppend(v12, @"/");
    *((void *)this + 3) = v12;
  }
}

void sub_3240C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 327) < 0) {
    operator delete(*(void **)(v1 + 304));
  }
  if (*(char *)(v1 + 303) < 0) {
    operator delete(*(void **)(v1 + 280));
  }
  if (*(char *)(v1 + 279) < 0) {
    operator delete(*(void **)(v1 + 256));
  }
  BKReadableFormat::~BKReadableFormat((BKReadableFormat *)v1);
  _Unwind_Resume(a1);
}

void ITEpubFolder::~ITEpubFolder(ITEpubFolder *this)
{
  *(void *)this = off_3C1488;
  CFStringRef v2 = (const void *)*((void *)this + 22);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 22) = 0;
  }
  CFIndex v3 = (const void *)*((void *)this + 20);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 20) = 0;
  }
  uint64_t v4 = (const void *)*((void *)this + 21);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 21) = 0;
  }
  id v5 = (const void *)*((void *)this + 18);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 18) = 0;
  }
  uint64_t v6 = (const void *)*((void *)this + 19);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 19) = 0;
  }
  CFStringRef v7 = (const void *)*((void *)this + 23);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 23) = 0;
  }
  CFStringRef v8 = (atomic_uint *)*((void *)this + 24);
  if (v8)
  {
    ITRetain::release(v8);
    *((void *)this + 24) = 0;
  }
  unint64_t v9 = (const void *)*((void *)this + 16);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 16) = 0;
  }
  unint64_t v10 = (const void *)*((void *)this + 17);
  if (v10)
  {
    CFRelease(v10);
    *((void *)this + 17) = 0;
  }
  id v11 = (const void *)*((void *)this + 25);
  if (v11)
  {
    CFRelease(v11);
    *((void *)this + 25) = 0;
  }
  CFRange v12 = (const void *)*((void *)this + 27);
  if (v12)
  {
    CFRelease(v12);
    *((void *)this + 27) = 0;
  }
  CFRange v13 = (const void *)*((void *)this + 29);
  if (v13)
  {
    CFRelease(v13);
    *((void *)this + 29) = 0;
  }
  CFRange v14 = (const void *)*((void *)this + 30);
  if (v14)
  {
    CFRelease(v14);
    *((void *)this + 30) = 0;
  }
  int v15 = (const void *)*((void *)this + 31);
  if (v15)
  {
    CFRelease(v15);
    *((void *)this + 31) = 0;
  }
  CFDataRef v16 = (const void *)*((void *)this + 41);
  if (v16)
  {
    CFRelease(v16);
    *((void *)this + 41) = 0;
  }
  if (*((char *)this + 327) < 0) {
    operator delete(*((void **)this + 38));
  }
  if (*((char *)this + 303) < 0) {
    operator delete(*((void **)this + 35));
  }
  if (*((char *)this + 279) < 0) {
    operator delete(*((void **)this + 32));
  }

  BKReadableFormat::~BKReadableFormat(this);
}

{
  uint64_t vars8;

  ITEpubFolder::~ITEpubFolder(this);

  operator delete();
}

BOOL ITEpubFolder::isMimetypeFileContentsValid(ITEpubFolder *this, const char *a2, char *__s1, size_t __n)
{
  if (!__s1)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_409C20, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_409C20))
    {
      qword_409C18 = strlen(aApplicationEpu);
      __cxa_guard_release(&qword_409C20);
    }
    __n = qword_409C18;
    __s1 = aApplicationEpu;
  }
  BOOL result = 0;
  if (this)
  {
    if (a2)
    {
      int v8 = strncmp(__s1, (const char *)this, __n);
      BOOL result = v8 == 0;
      if (!v8 && (unint64_t)a2 > __n)
      {
        unint64_t v9 = (char *)this + __n;
        size_t v10 = __n - (void)a2 + 1;
        do
        {
          __darwin_ct_rune_t v11 = *v9;
          if (v11 < 0) {
            __uint32_t v12 = __maskrune(v11, 0x4000uLL);
          }
          else {
            __uint32_t v12 = _DefaultRuneLocale.__runetype[v11] & 0x4000;
          }
          BOOL result = v12 != 0;
          ++v9;
          if (v12) {
            BOOL v13 = v10 == 0;
          }
          else {
            BOOL v13 = 1;
          }
          ++v10;
        }
        while (!v13);
      }
    }
  }
  return result;
}

BOOL ITEpubFolder::isMimeCorrect(CFStringRef theString, __CFString *a2, const char *a3)
{
  unsigned int v20 = 0;
  v21.isa = 0;
  if (!theString)
  {
    size_t v10 = _BookEPUBLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v21.info) = 0;
      __darwin_ct_rune_t v11 = "isMimeCorrect missing folderPath.";
      __uint32_t v12 = v10;
      uint32_t v13 = 2;
      goto LABEL_11;
    }
LABEL_12:

    BOOL isMimetypeFileContentsValid = 0;
LABEL_13:
    isa = v21.isa;
    goto LABEL_14;
  }
  MutableCopCGFloat y = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, theString);
  if (!ITFileUtil::hasTrailingSlash(theString, v7)) {
    CFStringAppend(MutableCopy, @"/");
  }
  CFStringAppend(MutableCopy, @"mimetype");
  int v9 = ITFileUtil::slurp(MutableCopy, &v21, &v20, v8);
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  if (v9)
  {
    size_t v10 = _BookEPUBLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v21.info) = 67109120;
      HIDWORD(v21.info) = v9;
      __darwin_ct_rune_t v11 = "ITEpubFolder isMimeCorrect slurp error:%d";
      __uint32_t v12 = v10;
      uint32_t v13 = 8;
LABEL_11:
      _os_log_impl(&def_7BFC0, v12, OS_LOG_TYPE_ERROR, v11, (uint8_t *)&v21.info, v13);
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  if (!v21.isa)
  {
    uint64_t v17 = _BookEPUBLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v21.info) = 0;
      _os_log_impl(&def_7BFC0, v17, OS_LOG_TYPE_ERROR, "ITEpubFolder isMimeCorrect slurp ERROR.  NULL data", (uint8_t *)&v21.info, 2u);
    }
  }
  int v18 = v20;
  if (!v20)
  {
    int v19 = _BookEPUBLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v21.info) = 0;
      _os_log_impl(&def_7BFC0, v19, OS_LOG_TYPE_ERROR, "ITEpubFolder isMimeCorrect slurp ERROR.  size == 0", (uint8_t *)&v21.info, 2u);
    }

    int v18 = v20;
  }
  BOOL isMimetypeFileContentsValid = 0;
  isa = v21.isa;
  if (v21.isa && v18)
  {
    BOOL isMimetypeFileContentsValid = ITEpubFolder::isMimetypeFileContentsValid((ITEpubFolder *)v21.isa, v18, (char *)a2, (size_t)a3);
    goto LABEL_13;
  }
LABEL_14:
  if (isa) {
    free(isa);
  }
  return isMimetypeFileContentsValid;
}

BOOL ITEpubFolder::isMimeCorrect(CFStringRef *this)
{
  return ITEpubFolder::isMimeCorrect(this[2], 0, 0);
}

const void *ITEpubFolder::copyMimeFromDocumentHref(ITEpubFolder *this, const __CFString *a2)
{
  CFStringRef v2 = 0;
  if (a2)
  {
    CFDictionaryRef v3 = (const __CFDictionary *)*((void *)this + 21);
    if (v3)
    {
      CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(v3, a2);
      if (Value)
      {
        id v5 = CFDictionaryGetValue(Value, @"media-type");
        CFStringRef v2 = v5;
        if (v5) {
          CFRetain(v5);
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return v2;
}

const void *ITEpubFolder::sinfForHref(ITEpubFolder *this, const __CFString *a2)
{
  if (!a2) {
    return 0;
  }
  CFDictionaryRef v3 = (const __CFDictionary *)*((void *)this + 17);
  if (!v3) {
    return 0;
  }
  if (!*((void *)this + 16)) {
    return 0;
  }
  if (!CFDictionaryGetCount(v3)) {
    return 0;
  }
  if (!CFDictionaryGetCount(*((CFDictionaryRef *)this + 16))) {
    return 0;
  }
  CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(*((CFDictionaryRef *)this + 16), a2);
  if (!Value) {
    return 0;
  }
  CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(Value, @"fairplay-id");
  if (!v6) {
    return 0;
  }
  CFStringRef v7 = v6;
  if (CFStringCompare(v6, @"1", 0))
  {
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v15 = 0;
    ITStrUtil::toString(v7, (uint64_t)__p);
    if (v15 >= 0) {
      int v8 = __p;
    }
    else {
      int v8 = (void **)__p[0];
    }
    int valuePtr = atoi((const char *)v8);
    CFNumberRef v9 = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &valuePtr);
    size_t v10 = CFDictionaryGetValue(*((CFDictionaryRef *)this + 17), v9);
    CFRelease(v9);
    if (SHIBYTE(v15) < 0) {
      operator delete(__p[0]);
    }
    return v10;
  }
  CFDictionaryRef v12 = (const __CFDictionary *)*((void *)this + 17);

  return CFDictionaryGetValue(v12, @"1");
}

void sub_32B10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ITEpubFolder::parse(ITEpubFolder *this)
{
  CFStringRef v2 = (atomic_uint *)*((void *)this + 24);
  if (v2)
  {
    ITRetain::release(v2);
    *((void *)this + 24) = 0;
  }
  CFDictionaryRef v3 = (const void *)*((void *)this + 22);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 22) = 0;
  }
  uint64_t v4 = (const void *)*((void *)this + 20);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 20) = 0;
  }
  id v5 = (const void *)*((void *)this + 21);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 21) = 0;
  }
  CFStringRef v6 = (const void *)*((void *)this + 23);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 23) = 0;
  }
  CFStringRef v7 = (const void *)*((void *)this + 4);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 4) = 0;
  }
  int v8 = (const void *)*((void *)this + 5);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 5) = 0;
  }
  CFNumberRef v9 = (const void *)*((void *)this + 6);
  if (v9)
  {
    CFRelease(v9);
    *((void *)this + 6) = 0;
  }
  size_t v10 = (const void *)*((void *)this + 7);
  if (v10)
  {
    CFRelease(v10);
    *((void *)this + 7) = 0;
  }
  __darwin_ct_rune_t v11 = _BookEPUBLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    uint64_t v12 = *((void *)this + 2);
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v12;
    _os_log_impl(&def_7BFC0, v11, OS_LOG_TYPE_INFO, "ITEpubFolder parse mBasePath:%@", (uint8_t *)&buf, 0xCu);
  }

  if (*((void *)this + 2))
  {
    if ((*(unsigned int (**)(ITEpubFolder *))(*(void *)this + 184))(this))
    {
      long long buf = 0uLL;
      uint64_t v22 = 0;
      memset(v16, 0, sizeof(v16));
      ITStrUtil::toString(*((CFStringRef *)this + 2), (uint64_t)&buf);
      ITStrUtil::toString(*((CFStringRef *)this + 3), (uint64_t)v16);
      std::string __p = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      if (v22 >= 0) {
        p_long long buf = (char *)&buf;
      }
      else {
        p_long long buf = (char *)buf;
      }
      sub_34AC0(&v17, p_buf);
      std::string::append(&v17, "META-INF/container.xml");
      operator new();
    }
    CFRange v14 = _BookEPUBLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&def_7BFC0, v14, OS_LOG_TYPE_ERROR, "ITEpubFolder mime incorrect!", (uint8_t *)&buf, 2u);
    }
  }
  return 4294967246;
}

void sub_33D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v35 - 105) < 0) {
    operator delete(*(void **)(v35 - 128));
  }
  _Unwind_Resume(a1);
}

void sub_33F4C(void *key, void *value, CFMutableDictionaryRef theDict)
{
}

const __CFString *ITEpubFolder::defaultExtension(ITEpubFolder *this)
{
  return @"epub";
}

const __CFArray *ITEpubFolder::countDocumentsInManifest(ITEpubFolder *this)
{
  CFArrayRef result = (const __CFArray *)*((void *)this + 22);
  if (result) {
    return (const __CFArray *)CFArrayGetCount(result);
  }
  return result;
}

const void *ITEpubFolder::copyDocumentInfoFromManifestItemRef(ITEpubFolder *this, const __CFString *a2)
{
  CFDictionaryRef v2 = (const __CFDictionary *)*((void *)this + 20);
  if (!v2) {
    return 0;
  }
  CFDictionaryRef Value = CFDictionaryGetValue(v2, a2);
  uint64_t v4 = Value;
  if (Value) {
    CFRetain(Value);
  }
  return v4;
}

const void *ITEpubFolder::copyDocumentInfoFromManifest(ITEpubFolder *this, unsigned int a2)
{
  CFArrayRef v3 = (const __CFArray *)*((void *)this + 22);
  if (!v3 || CFArrayGetCount(v3) <= a2) {
    return 0;
  }
  ValueAtIndeCGFloat x = CFArrayGetValueAtIndex(*((CFArrayRef *)this + 22), a2);
  CFStringRef v6 = ValueAtIndex;
  if (ValueAtIndex) {
    CFRetain(ValueAtIndex);
  }
  return v6;
}

const __CFArray *ITEpubFolder::countDocumentsInReadingOrder(ITEpubFolder *this)
{
  CFArrayRef result = (const __CFArray *)*((void *)this + 23);
  if (result) {
    return (const __CFArray *)CFArrayGetCount(result);
  }
  return result;
}

const void *ITEpubFolder::copyDocumentHrefFromReadingOrder(CFArrayRef *this, unsigned int a2)
{
  if ((*((unsigned int (**)(CFArrayRef *))*this + 7))(this) < a2) {
    return 0;
  }
  ValueAtIndeCGFloat x = (const __CFDictionary *)CFArrayGetValueAtIndex(this[23], a2);
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(ValueAtIndex, @"itemref");
  if (!Value) {
    return 0;
  }
  CFStringRef v6 = Value;
  if (!CFStringGetLength(Value)) {
    return 0;
  }
  CFDictionaryRef v7 = (const __CFDictionary *)CFDictionaryGetValue(this[20], v6);
  if (!v7) {
    return 0;
  }
  int v8 = CFDictionaryGetValue(v7, @"unescaped_href");
  CFNumberRef v9 = v8;
  if (v8) {
    CFRetain(v8);
  }
  return v9;
}

CFBooleanRef ITEpubFolder::copyIsLinearFromReadingOrder(ITEpubFolder *this, unsigned int a2)
{
  CFStringRef Value = kCFBooleanTrue;
  if ((*(unsigned int (**)(ITEpubFolder *))(*(void *)this + 56))(this) >= a2)
  {
    ValueAtIndeCGFloat x = (const __CFDictionary *)CFArrayGetValueAtIndex(*((CFArrayRef *)this + 23), a2);
    CFStringRef Value = (void *)CFDictionaryGetValue(ValueAtIndex, @"linear");
    if ([*((id *)this + 6) caseInsensitiveCompare:@"ja"])
    {
      CFDictionaryRef v6 = (const __CFDictionary *)*((void *)this + 41);
      if (v6)
      {
        CFStringRef v7 = (const __CFString *)CFDictionaryGetValue(v6, @"fixed-layout");
        if (v7)
        {
          if (CFEqual(v7, @"true")) {
            return kCFBooleanTrue;
          }
        }
      }
    }
  }
  return (CFBooleanRef)Value;
}

id ITEpubFolder::copyFirstDocumentHref(ITEpubFolder *this, const __CFString *a2)
{
  id v3 = (id)*((void *)this + 18);
  CFStringRef v4 = (const __CFString *)*((void *)this + 25);
  if (v4)
  {
    id v5 = (__CFString *)ITEpubXmlParseHandler::copyHrefStrippingHash(v4, a2);
    CFDictionaryRef v6 = [(__CFString *)v5 lastPathComponent];
    CFDictionaryRef v7 = (const __CFDictionary *)(*(uint64_t (**)(ITEpubFolder *, void *))(*(void *)this + 48))(this, v6);
    CFDictionaryRef v8 = v7;
    if (v7) {
      CFStringRef Value = (__CFString *)CFDictionaryGetValue(v7, @"href");
    }
    else {
      CFStringRef Value = 0;
    }
    size_t v10 = ITEpubFolder::copyMimeFromDocumentHref(this, v5);
    __darwin_ct_rune_t v11 = v10;
    if (Value)
    {
      uint64_t v12 = ITEpubFolder::copyMimeFromDocumentHref(this, Value);
      uint32_t v13 = v12;
      if (!v11)
      {
        if (v12)
        {
          CFRange v14 = +[NSURL URLWithString:*((void *)this + 25)];
          uint64_t v15 = [v14 fragment];
          id v3 = [(__CFString *)Value mutableCopy];
          if ([v15 length])
          {
            CFDataRef v16 = +[NSString stringWithFormat:@"#%@", v15];
            [v3 appendString:v16];
          }
          if (v3) {
            CFRetain(v3);
          }

          goto LABEL_24;
        }
LABEL_21:
        if (v3) {
          CFRetain(v3);
        }
        uint32_t v13 = 0;
LABEL_24:
        char v17 = 1;
        if (!v5)
        {
LABEL_26:
          if (v8) {
            CFRelease(v8);
          }
          if (v13) {
            CFRelease(v13);
          }
          if ((v17 & 1) == 0) {
            CFRelease(v11);
          }

          return v3;
        }
LABEL_25:
        CFRelease(v5);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v10) {
        goto LABEL_21;
      }
      uint32_t v13 = 0;
    }
    id v3 = (id)*((void *)this + 25);
    if (v3) {
      CFRetain(*((CFTypeRef *)this + 25));
    }
    char v17 = 0;
    if (!v5) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v3) {
    CFRetain(v3);
  }
  return v3;
}

void sub_343B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

const void *ITEpubFolder::copyStartPageHref(ITEpubFolder *this, const __CFString *a2)
{
  CFDictionaryRef v2 = (const void *)*((void *)this + 19);
  if (!v2)
  {
    CFStringRef v4 = (const __CFString *)*((void *)this + 27);
    if (!v4) {
      return 0;
    }
    CFStringRef v5 = ITEpubXmlParseHandler::copyHrefStrippingHash(v4, a2);
    CFDictionaryRef v6 = ITEpubFolder::copyMimeFromDocumentHref(this, v5);
    if (v5) {
      CFRelease(v5);
    }
    if (!v6) {
      return 0;
    }
    CFDictionaryRef v2 = (const void *)*((void *)this + 27);
    CFRelease(v6);
    if (!v2) {
      return v2;
    }
  }
  CFRetain(v2);
  return v2;
}

uint64_t ITEpubFolder::firstDocumentQuality(ITEpubFolder *this)
{
  CFStringRef v1 = (const __CFString *)*((void *)this + 18);
  if (v1)
  {
    CFRetain(*((CFTypeRef *)this + 18));
    unsigned int v2 = 0;
LABEL_6:
    CFRelease(v1);
    char v5 = 1;
    goto LABEL_7;
  }
  CFStringRef v1 = (const __CFString *)(*(uint64_t (**)(ITEpubFolder *))(*(void *)this + 80))(this);
  CFStringRef v4 = (const __CFString *)*((void *)this + 25);
  if (v4 && CFEqual(v4, v1))
  {
    unsigned int v2 = *((_DWORD *)this + 52);
    if (v1) {
      goto LABEL_6;
    }
  }
  else
  {
    unsigned int v2 = 0;
    if (v1) {
      goto LABEL_6;
    }
  }
  char v5 = 0;
LABEL_7:
  if (((v2 == 0) & v5) != 0) {
    return 10;
  }
  else {
    return v2;
  }
}

const void *ITEpubFolder::copyTocPageHref(ITEpubFolder *this)
{
  CFStringRef v1 = (const void *)*((void *)this + 29);
  if (v1 || (CFStringRef v1 = *(const void **)(*((void *)this + 24) + 512)) != 0) {
    CFRetain(v1);
  }
  return v1;
}

uint64_t ITEpubFolder::copyTocTitle(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 30);
  if (v1) {
    CFRetain(*((CFTypeRef *)this + 30));
  }
  return v1;
}

uint64_t ITEpubFolder::copyTocCfiToIdMap(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 31);
  if (v1) {
    CFRetain(*((CFTypeRef *)this + 31));
  }
  return v1;
}

const __CFString *ITEpubFolder::copyCoverArtHref(ITEpubFolder *this)
{
  uint64_t v2 = *((void *)this + 24);
  if (v2)
  {
    CFStringRef v3 = *(const __CFString **)(v2 + 520);
    CFStringRef v4 = (const __CFString *)ITEpubFolder::copyMimeFromDocumentHref(this, v3);
    if (v4)
    {
      CFStringRef v5 = v4;
      HasPrefiCGFloat x = CFStringHasPrefix(v4, @"image/");
      CFRelease(v5);
      if (HasPrefix && v3 != 0)
      {
        CFStringRef v22 = 0;
        CFStringRef v23 = v3;
        goto LABEL_31;
      }
    }
    CFDictionaryRef v8 = *(const void **)(*((void *)this + 24) + 528);
    if (v8)
    {
      CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(*((CFDictionaryRef *)this + 20), v8);
      if (Value)
      {
        CFDictionaryRef v10 = Value;
        CFStringRef v11 = (const __CFString *)CFDictionaryGetValue(Value, @"unescaped_href");
        if (v11)
        {
          CFStringRef v23 = v11;
          CFStringRef v12 = (const __CFString *)CFDictionaryGetValue(v10, @"media-type");
          if (v12)
          {
            int v13 = CFStringHasPrefix(v12, @"image/");
            CFStringRef v22 = v3;
            if (v13) {
              goto LABEL_31;
            }
          }
          if (!v3) {
            CFStringRef v3 = v23;
          }
        }
      }
    }
  }
  else
  {
    CFStringRef v3 = 0;
  }
  CFDictionaryRef v14 = (const __CFDictionary *)CFDictionaryGetValue(*((CFDictionaryRef *)this + 20), @"cover");
  if (v14 && (CFStringRef v15 = (const __CFString *)CFDictionaryGetValue(v14, @"unescaped_href")) != 0)
  {
    CFStringRef v23 = v15;
LABEL_26:
    CFStringRef v22 = v3;
  }
  else
  {
    CFStringRef v23 = 0;
    CFStringRef v16 = @"COVER";
    char v17 = off_3C1550;
    while (1)
    {
      CFDictionaryRef v18 = (const __CFDictionary *)CFDictionaryGetValue(*((CFDictionaryRef *)this + 20), v16);
      if (v18)
      {
        CFDictionaryRef v19 = v18;
        CFStringRef v23 = (const __CFString *)CFDictionaryGetValue(v18, @"unescaped_href");
        if (v23)
        {
          CFStringRef v20 = (const __CFString *)CFDictionaryGetValue(v19, @"media-type");
          if (!v20 || !CFStringHasPrefix(v20, @"image/")) {
            break;
          }
        }
      }
      CFStringRef v21 = *v17++;
      CFStringRef v16 = v21;
      if (!v21) {
        goto LABEL_26;
      }
    }
    if (v3) {
      CFStringRef v22 = v3;
    }
    else {
      CFStringRef v22 = v23;
    }
    CFStringRef v23 = 0;
  }
LABEL_31:
  if (v23) {
    BOOL v24 = 1;
  }
  else {
    BOOL v24 = v22 == 0;
  }
  if (v24) {
    CFStringRef v25 = v23;
  }
  else {
    CFStringRef v25 = v22;
  }
  if (v25) {
    CFRetain(v25);
  }
  return v25;
}

__CFString *ITEpubFolder::copyRootPath(ITEpubFolder *this)
{
  if (*((char *)this + 279) < 0)
  {
    if (*((void *)this + 33)) {
      goto LABEL_3;
    }
LABEL_7:
    CFStringRef v5 = (const void *)*((void *)this + 2);
    if (!v5) {
      return 0;
    }
    CFRetain(v5);
    return (__CFString *)*((void *)this + 2);
  }
  if (!*((unsigned char *)this + 279)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = (char *)this + 256;
  MutableCopCGFloat y = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, *((CFStringRef *)this + 2));
  CFStringRef v4 = MutableCopy;
  if (*((char *)this + 279) < 0) {
    uint64_t v2 = *(const char **)v2;
  }
  CFStringAppendCString(MutableCopy, v2, 0x8000100u);
  return v4;
}

CFStringRef ITEpubFolder::copyOPFPath(ITEpubFolder *this)
{
  uint64_t v1 = (char *)this + 280;
  if (*((char *)this + 303) < 0) {
    uint64_t v1 = *(const char **)v1;
  }
  return CFStringCreateWithCString(kCFAllocatorDefault, v1, 0x8000100u);
}

CFStringRef ITEpubFolder::copyNCXPath(ITEpubFolder *this)
{
  uint64_t v1 = (char *)this + 304;
  if (*((char *)this + 327) < 0) {
    uint64_t v1 = *(const char **)v1;
  }
  return CFStringCreateWithCString(kCFAllocatorDefault, v1, 0x8000100u);
}

uint64_t ITEpubFolder::spineIndexInPackage(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(unsigned int *)(v1 + 616);
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t ITEpubFolder::dcTermsContributor(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 648);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::dcTermsModified(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 632);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::mediaActiveClass(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 640);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::readingDirection(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 416);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::pageProgressionDirection(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 424);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::coverWritingMode(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 432);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::scrollDirection(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 440);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::originalResolution(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 536);
  }
  else {
    return 0;
  }
}

uint64_t ITEpubFolder::ebpajGuideVersion(ITEpubFolder *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1) {
    return *(void *)(v1 + 544);
  }
  else {
    return 0;
  }
}

void ITEpubFolder::countRootfileTags(CFStringRef *this)
{
  v3[0] = 0;
  v3[1] = 0;
  uint64_t v4 = 0;
  ITStrUtil::toString(this[2], (uint64_t)v3);
  if (v4 >= 0) {
    uint64_t v1 = (char *)v3;
  }
  else {
    uint64_t v1 = (char *)v3[0];
  }
  sub_34AC0(&__p, v1);
  std::string::append(&__p, "META-INF/container.xml");
  operator new();
}

void sub_34A5C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void *sub_34AC0(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_34B74();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    CFDictionaryRef v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    CFDictionaryRef v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_34B74()
{
}

void sub_36060(id a1)
{
  qword_409C28 = objc_alloc_init(__BEPaginationLogsLogsLevelObserver);

  _objc_release_x1();
}

uint64_t __BEPaginationLogsLogLevelEnabled()
{
  return 1;
}

void _BEPaginationLogsSetLogToLevel(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  size_t v5 = sub_363B8();
  id v8 = [v5 mutableCopy];

  [v8 setObject:v3 forKeyedSubscript:v4];
  id v6 = [v8 copy];
  uint64_t v7 = +[__BEPaginationLogsLogsLevelObserver shared];
  [v7 setLogLevels:v6];
}

id sub_363B8()
{
  id v0 = +[__BEPaginationLogsLogsLevelObserver shared];
  uint64_t v1 = [v0 logLevels];

  return v1;
}

id _BEPaginationLogsLevelForLog(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_363B8();
  id v3 = [v2 objectForKeyedSubscript:v1];

  return v3;
}

void ITEpubManifest::ITEpubManifest(ITEpubManifest *this, const __CFDictionary *a2, const __CFDictionary *a3, const __CFString *a4)
{
  ITRetain::ITRetain(this);
  *id v8 = off_3C15E0;
  v8[2] = a2;
  v8[3] = a3;
  void v8[4] = a4;
  if (a2)
  {
    CFRetain(a2);
    a3 = (const __CFDictionary *)*((void *)this + 3);
  }
  if (a3) {
    CFRetain(a3);
  }
  CFNumberRef v9 = (const void *)*((void *)this + 4);
  if (v9) {
    CFRetain(v9);
  }
}

void sub_366E8(_Unwind_Exception *a1)
{
  ITRetain::~ITRetain(v1);
  _Unwind_Resume(a1);
}

void ITEpubManifest::~ITEpubManifest(ITEpubManifest *this)
{
  *(void *)this = off_3C15E0;
  uint64_t v2 = (const void *)*((void *)this + 2);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 2) = 0;
  }
  id v3 = (const void *)*((void *)this + 3);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 3) = 0;
  }
  id v4 = (const void *)*((void *)this + 4);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 4) = 0;
  }

  ITRetain::~ITRetain(this);
}

{
  uint64_t vars8;

  ITEpubManifest::~ITEpubManifest(this);

  operator delete();
}

const __CFDictionary *ITEpubManifest::countManifestedFiles(ITEpubManifest *this)
{
  CFDictionaryRef result = (const __CFDictionary *)*((void *)this + 2);
  if (result) {
    return (const __CFDictionary *)CFDictionaryGetCount(result);
  }
  return result;
}

CFArrayRef ITEpubManifest::createManifestedArray(CFDictionaryRef *this)
{
  CFIndex Count = CFDictionaryGetCount(this[2]);
  if (Count < 1) {
    return 0;
  }
  CFIndex v3 = Count;
  id v4 = (const void **)malloc_type_malloc(8 * Count, 0x80040B8603338uLL);
  if (!v4) {
    return 0;
  }
  size_t v5 = v4;
  CFDictionaryGetKeysAndValues(this[2], 0, v4);
  CFArrayRef v6 = CFArrayCreate(kCFAllocatorDefault, v5, v3, &kCFTypeArrayCallBacks);
  free(v5);
  return v6;
}

const __CFString *ITEpubManifest::firstPageHref(ITEpubManifest *this, const __CFString *a2)
{
  CFStringRef result = (const __CFString *)*((void *)this + 4);
  if (a2 && !result)
  {
    CFStringRef v5 = ITEpubXmlParseHandler::copyHrefStrippingHash(a2, a2);
    CFDictionaryRef Value = CFDictionaryGetValue(*((CFDictionaryRef *)this + 3), v5);
    CFRelease(v5);
    if (Value) {
      return a2;
    }
    else {
      return 0;
    }
  }
  return result;
}

const __CFString *ITEpubManifest::doesHrefMatchMimePrefix(CFDictionaryRef *this, const __CFString *a2, const __CFString *a3)
{
  if (!a2) {
    return 0;
  }
  CFStringRef result = (const __CFString *)CFDictionaryGetValue(this[3], a2);
  if (result) {
    return (const __CFString *)CFStringHasPrefix(result, a3);
  }
  return result;
}

id DragDismissGestureManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

char *PaginationQueue.init()()
{
  uint64_t v11 = sub_2FC8B0();
  uint64_t v1 = *(void *)(v11 - 8);
  __chkstk_darwin();
  CFIndex v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2FC850();
  __chkstk_darwin();
  sub_2FBFD0();
  __chkstk_darwin();
  uint64_t v10 = OBJC_IVAR____TtC8BookEPUB15PaginationQueue_queue;
  sub_39F90(0, (unint64_t *)&qword_401700);
  id v4 = v0;
  sub_2FBFC0();
  int v13 = &_swiftEmptyArrayStorage;
  sub_39CC0((unint64_t *)&qword_3FD980, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_371F4((uint64_t *)&unk_404540);
  sub_37238();
  sub_2FCD20();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v11);
  *(void *)(v9 + v10) = sub_2FC8E0();
  if (qword_3FD6D8 != -1) {
    swift_once();
  }
  id v5 = (id)qword_416FE0;
  sub_2FB8B0();

  CFArrayRef v6 = (objc_class *)type metadata accessor for PaginationQueue();
  v12.receiver = v4;
  v12.super_class = v6;
  uint64_t v7 = (char *)[super init];
  [v7 setQualityOfService:25];
  [v7 setUnderlyingQueue:*(void *)&v7[OBJC_IVAR____TtC8BookEPUB15PaginationQueue_queue]];
  [v7 setMaxConcurrentOperationCount:1];

  return v7;
}

uint64_t sub_371F4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_37238()
{
  unint64_t result = qword_3FD990;
  if (!qword_3FD990)
  {
    sub_37294((uint64_t *)&unk_404540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FD990);
  }
  return result;
}

uint64_t sub_37294(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_37300()
{
  id v1 = [v0 operations];
  sub_39F90(0, &qword_3FD9A0);
  unint64_t v2 = sub_2FC3F0();

  id v3 = v0;
  sub_39518((uint64_t)&_swiftEmptyDictionarySingleton, v2);
  swift_bridgeObjectRelease();

  sub_2FCDD0(51);
  v11._countAndFlagsBits = 60;
  v11._object = (void *)0xE100000000000000;
  sub_2FC260(v11);
  id v4 = [v3 description];
  uint64_t v5 = sub_2FC180();
  uint64_t v7 = v6;

  v12._countAndFlagsBits = v5;
  v12._object = v7;
  sub_2FC260(v12);
  swift_bridgeObjectRelease();
  v13._object = (void *)0x800000000030BEE0;
  v13._countAndFlagsBits = 0xD000000000000016;
  sub_2FC260(v13);
  id v8 = [v3 operations];
  unint64_t v9 = sub_2FC3F0();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2FD030();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v14);
  swift_bridgeObjectRelease();
  v15._object = (void *)0x800000000030BF00;
  v15._countAndFlagsBits = 0xD000000000000016;
  sub_2FC260(v15);
  v16._countAndFlagsBits = sub_2FC090();
  sub_2FC260(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_37544(uint64_t *a1, void **a2)
{
  id v3 = *a2;
  type metadata accessor for PaginationOperation(0);
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters;
    uint64_t v6 = *a1;
    if (*(void *)(*a1 + 16))
    {
      uint64_t v8 = *(void *)(v5 + 200);
      uint64_t v7 = *(void *)(v5 + 208);
      id v9 = v3;
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_42238(v8, v7);
      if (v11)
      {
        uint64_t v12 = *(void *)(*(void *)(v6 + 56) + 8 * v10);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      id v21 = v3;
    }
    uint64_t v12 = 0;
LABEL_10:
    if (__OFADD__(v12, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v23 = *(void *)(v5 + 200);
      uint64_t v22 = *(void *)(v5 + 208);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v25 = *a1;
      *a1 = 0x8000000000000000;
      sub_1AE9AC(v12 + 1, v23, v22, isUniquelyReferenced_nonNull_native);
      *a1 = v25;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return;
  }
  id v13 = v3;
  Swift::String v14 = sub_2FB880();
  os_log_type_t v15 = sub_2FC7B0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    char v17 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 138412546;
    id v18 = v13;
    sub_2FCC70();
    *char v17 = v13;

    *(_WORD *)(v16 + 12) = 2080;
    swift_getObjectType();
    uint64_t v19 = sub_2FD3E0();
    sub_38EF0(v19, v20, &v25);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    sub_371F4(&qword_400A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id PaginationQueue.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaginationQueue();
  return [super dealloc];
}

uint64_t PaginationQueue.cancelOperationsNotFor(layout:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = &v2[OBJC_IVAR____TtC8BookEPUB15PaginationQueue_log];
  swift_unknownObjectRetain_n();
  uint64_t v7 = sub_2FB880();
  os_log_type_t v8 = sub_2FC790();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v6;
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2);
    uint64_t v26 = sub_38EF0(v11, v12, &v27);
    sub_2FCC70();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v7, v8, "Cancelling operations not for layout %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  id v13 = [v3 operations];
  sub_39F90(0, &qword_3FD9A0);
  Swift::String v14 = (uint8_t *)sub_2FC3F0();

  swift_unknownObjectRetain();
  id v15 = v3;
  unint64_t v16 = (unint64_t)sub_3964C((unint64_t)v14, (uint64_t)v15, a1, (void *)a2);

  swift_unknownObjectRelease();
  swift_bridgeObjectRetain_n();
  char v17 = sub_2FB880();
  os_log_type_t v18 = sub_2FC790();
  unint64_t v19 = v16 >> 62;
  if (!os_log_type_enabled(v17, v18))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  Swift::String v14 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)Swift::String v14 = 134217984;
  if (v19) {
    goto LABEL_20;
  }
  uint64_t v20 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = v20;
    sub_2FCC70();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v17, v18, "Found %ld stale operations. Cancelling", v14, 0xCu);
    swift_slowDealloc();

LABEL_9:
    if (v19)
    {
      swift_bridgeObjectRetain();
      char v17 = sub_2FD030();
      swift_bridgeObjectRelease();
      if (!v17) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v17 = *(NSObject **)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8));
      if (!v17) {
        return swift_bridgeObjectRelease();
      }
    }
    if ((uint64_t)v17 >= 1) {
      break;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_2FD030();
    swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; i != v17; uint64_t i = ((char *)i + 1))
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v22 = (id)sub_2FCE20();
    }
    else {
      id v22 = *(id *)(v16 + 8 * (void)i + 32);
    }
    uint64_t v23 = v22;
    [v22 cancel:v25, v26, v27];
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_37C9C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  type metadata accessor for PaginationOperation(0);
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6)
  {
    id v16 = v5;
    char v17 = sub_2FB880();
    os_log_type_t v18 = sub_2FC7C0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      log = v17;
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412546;
      id v21 = v16;
      sub_2FCC70();
      void *v20 = v16;

      *(_WORD *)(v19 + 12) = 2080;
      swift_getObjectType();
      uint64_t v22 = sub_2FD3E0();
      sub_38EF0(v22, v23, &v27);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      char v17 = log;
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  uint64_t v7 = (void *)v6;
  uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 200);
  uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 208);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 184);
  id v12 = v5;
  swift_bridgeObjectRetain();
  if (v9 == v11(ObjectType, a4) && v8 == v13)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v15 = sub_2FD1F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {

    return 0;
  }
  unsigned int v25 = [v7 isCancelled];

  return v25 ^ 1;
}

Swift::Void __swiftcall PaginationQueue.cancelOperationsForWebView(webView:)(WKWebView webView)
{
  objc_super v2 = v1;
  id v3 = &v1[OBJC_IVAR____TtC8BookEPUB15PaginationQueue_log];
  uint64_t v4 = webView.super.super.super.isa;
  uint64_t v5 = sub_2FB880();
  os_log_type_t v6 = sub_2FC790();
  uint64_t v7 = &stru_3F4000;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    unint64_t v31 = (unint64_t)v3;
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v30 = (uint64_t)(v8 + 4);
    id v9 = [(objc_class *)v4 be_identifier];
    uint64_t v10 = sub_2FC180();
    unint64_t v12 = v11;

    uint64_t v13 = v10;
    uint64_t v7 = &stru_3F4000;
    sub_38EF0(v13, v12, v32);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v5, v6, "Cancelling operations for webView:%s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = [v2 operations];
  sub_39F90(0, &qword_3FD9A0);
  unint64_t v15 = sub_2FC3F0();

  id v16 = v4;
  id v17 = v2;
  unint64_t v18 = (unint64_t)sub_39800(v15, (uint64_t)v17, v16);

  uint64_t v19 = v16;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v19;
  id v21 = sub_2FB880();
  os_log_type_t v22 = sub_2FC790();
  unint64_t v23 = v18 >> 62;
  if (!os_log_type_enabled(v21, v22))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  unint64_t v15 = swift_slowAlloc();
  uint64_t v30 = swift_slowAlloc();
  v32[0] = v30;
  *(_DWORD *)unint64_t v15 = 134218242;
  unint64_t v31 = v18 >> 62;
  if (v23) {
    goto LABEL_19;
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    sub_2FCC70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v7 = (__objc2_ivar *)[v20 v7[103].type];
    uint64_t v24 = sub_2FC180();
    unint64_t v26 = v25;

    sub_38EF0(v24, v26, v32);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v21, v22, "Found %ld operations for webView:%s. Cancelling", (uint8_t *)v15, 0x16u);
    uint64_t v20 = (objc_class *)v30;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v23 = v31;
LABEL_8:
    if (v23)
    {
      swift_bridgeObjectRetain();
      id v21 = sub_2FD030();
      swift_bridgeObjectRelease();
      if (!v21) {
        goto LABEL_17;
      }
    }
    else
    {
      id v21 = *(NSObject **)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
      if (!v21) {
        goto LABEL_17;
      }
    }
    if ((uint64_t)v21 >= 1) {
      break;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    sub_2FD030();
    swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; i != v21; uint64_t i = ((char *)i + 1))
  {
    if ((v18 & 0xC000000000000001) != 0) {
      id v28 = (id)sub_2FCE20();
    }
    else {
      id v28 = *(id *)(v18 + 8 * (void)i + 32);
    }
    int v29 = v28;
    [v28 cancel];
  }
LABEL_17:
  swift_bridgeObjectRelease();
}

uint64_t sub_38424(void **a1)
{
  id v1 = *a1;
  type metadata accessor for PaginationOperation(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    sub_39F90(0, (unint64_t *)&qword_3FDC50);
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40);
    id v5 = v1;
    id v6 = v4;
    char v7 = sub_2FCA70();

    return v7 & 1;
  }
  else
  {
    id v9 = v1;
    uint64_t v10 = sub_2FB880();
    os_log_type_t v11 = sub_2FC7C0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      log = v10;
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      id v14 = v9;
      sub_2FCC70();
      *uint64_t v13 = v9;

      *(_WORD *)(v12 + 12) = 2080;
      swift_getObjectType();
      uint64_t v15 = sub_2FD3E0();
      sub_38EF0(v15, v16, &v18);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      uint64_t v10 = log;
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
}

uint64_t type metadata accessor for PaginationQueue()
{
  uint64_t result = qword_3FDA30;
  if (!qword_3FDA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_38704(uint64_t a1, uint64_t a2)
{
  return sub_38DE4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_38728(uint64_t a1, uint64_t a2)
{
  return sub_38DE4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_3874C(uint64_t a1, id *a2)
{
  uint64_t result = sub_2FC160();
  *a2 = 0;
  return result;
}

uint64_t sub_387C4(uint64_t a1, id *a2)
{
  char v3 = sub_2FC170();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_38844@<X0>(void *a1@<X8>)
{
  sub_2FC180();
  NSString v2 = sub_2FC140();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *sub_3888C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void SelectionInfo.id.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_388A8(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void sub_388B4(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_388BC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_388D0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_388E4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_38910@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_38934(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_38948@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_3895C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_38970(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_38984(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_38998()
{
  return *v0 == 0;
}

uint64_t sub_389A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_389C0(void *result)
{
  *v1 &= ~*result;
  return result;
}

_DWORD *sub_389D4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

BOOL static DocumentEntityID.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_389F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_38A0C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_38A3C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_38A50(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_38A64()
{
  uint64_t v0 = sub_2FC180();
  uint64_t v2 = v1;
  if (v0 == sub_2FC180() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_38AF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_394E0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_38B30@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_38B3C@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_2FC140();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_38B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2FC180();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_38BB0(uint64_t a1)
{
  uint64_t v2 = sub_39CC0((unint64_t *)&qword_3FDC28, type metadata accessor for Key);
  uint64_t v3 = sub_39CC0(&qword_3FDC30, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_38C6C(uint64_t a1)
{
  uint64_t v2 = sub_39CC0(&qword_3FDCB0, type metadata accessor for BEContentLayoutInfoKey);
  uint64_t v3 = sub_39CC0(&qword_3FDCB8, type metadata accessor for BEContentLayoutInfoKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_38D28(uint64_t a1)
{
  uint64_t v2 = sub_39CC0(&qword_3FDC38, type metadata accessor for UIContentSizeCategory);
  uint64_t v3 = sub_39CC0((unint64_t *)&unk_3FDC40, type metadata accessor for UIContentSizeCategory);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_38DE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_2FC180();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_38E28()
{
  sub_2FC180();
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_38E7C()
{
  sub_2FC180();
  sub_2FD320();
  sub_2FC230();
  Swift::Int v0 = sub_2FD370();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_38EF0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_38FC4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_3A01C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_3A01C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_39FCC((uint64_t)v12);
  return v7;
}

uint64_t sub_38FC4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2FCC80();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_39180(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2FCE40();
  if (!v8)
  {
    sub_2FD000();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2FD080();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_39180(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_39218(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_39390(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_39390(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_39218(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_4E900(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2FCDE0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_2FD000();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2FC270();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_2FD080();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_2FD000();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_39390(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_371F4(&qword_3FE9A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_394E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_39518(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = (void *)a1;
  uint64_t v11 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_2FD030())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a2 & 0xC000000000000001) != 0 ? (id)sub_2FCE20() : *(id *)(a2 + 8 * i);
      unint64_t v4 = v7;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v10 = v7;
      sub_37544(&v11, &v10);
      if (v2)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }

      if (v8 == v5)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

void *sub_3964C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v8 = a1;
  id v21 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8;
      unint64_t v19 = v8 & 0xC000000000000001;
      uint64_t v16 = a2;
      unint64_t v17 = v8;
      while (v19)
      {
        id v11 = (id)sub_2FCE20();
LABEL_9:
        uint64_t v12 = v11;
        unint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_17;
        }
        uint64_t v20 = v11;
        char v14 = sub_37C9C(&v20, a2, a3, (uint64_t)a4);
        if (v4)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a4;
        }
        if (v14)
        {
          sub_2FCE50();
          sub_2FCE90();
          sub_2FCEA0();
          sub_2FCE60();
          a2 = v16;
          unint64_t v8 = v17;
        }
        else
        {
        }
        ++v10;
        if (v13 == v9)
        {
          a4 = v21;
          goto LABEL_20;
        }
      }
      if (v10 < *(void *)(v18 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v9 = sub_2FD030();
      if (!v9) {
        goto LABEL_19;
      }
    }
    id v11 = *(id *)(v8 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a4 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return a4;
}

void *sub_39800(unint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = a1;
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      unint64_t v8 = v5 & 0xC000000000000001;
      unint64_t v15 = v5;
      uint64_t v16 = v5 & 0xFFFFFFFFFFFFFF8;
      uint64_t v14 = v6;
      while (v8)
      {
        id v9 = (id)sub_2FCE20();
LABEL_9:
        unint64_t v10 = v9;
        unint64_t v11 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_17;
        }
        unint64_t v17 = v9;
        char v12 = sub_38424(&v17);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a3;
        }
        if (v12)
        {
          sub_2FCE50();
          sub_2FCE90();
          sub_2FCEA0();
          sub_2FCE60();
          uint64_t v6 = v14;
          unint64_t v5 = v15;
        }
        else
        {
        }
        ++v7;
        if (v11 == v6)
        {
          a3 = v18;
          goto LABEL_20;
        }
      }
      if (v7 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v6 = sub_2FD030();
      if (!v6) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v5 + 8 * v7 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a3 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_399A8()
{
  return type metadata accessor for PaginationQueue();
}

uint64_t sub_399B0()
{
  uint64_t result = sub_2FB8A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PaginationQueue(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PaginationQueue);
}

uint64_t initializeBufferWithCopyOfBuffer for BookContentSelection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for CFIRange(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for LocationHistoryConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocationHistoryConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for TouchType(uint64_t a1)
{
}

void type metadata accessor for BEContentLayoutInfoOptions(uint64_t a1)
{
}

void type metadata accessor for NavigationDirection(uint64_t a1)
{
}

void type metadata accessor for BEImageFilterMode(uint64_t a1)
{
}

void type metadata accessor for BookContentPreferredFontWeight(uint64_t a1)
{
}

void type metadata accessor for BookContentLayoutJustification(uint64_t a1)
{
}

void type metadata accessor for QueuePriority(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

__n128 initializeBufferWithCopyOfBuffer for PageLocation(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PageLocation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PageLocation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for BookLayoutMode(uint64_t a1)
{
}

void type metadata accessor for BEContentBlockingRule(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_39C78()
{
  return sub_39CC0(&qword_3FDBD8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_39CC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_39D08()
{
  return sub_39CC0(&qword_3FDBE0, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_39D50()
{
  return sub_39CC0(&qword_3FDBE8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_39D98()
{
  return sub_39CC0(&qword_3FDBF0, type metadata accessor for Key);
}

uint64_t sub_39DE0()
{
  return sub_39CC0(&qword_3FDBF8, type metadata accessor for Key);
}

uint64_t sub_39E28()
{
  return sub_39CC0(&qword_3FDC00, type metadata accessor for BEContentLayoutInfoOptions);
}

uint64_t sub_39E70()
{
  return sub_39CC0(&qword_3FDC08, type metadata accessor for BEContentLayoutInfoOptions);
}

uint64_t sub_39EB8()
{
  return sub_39CC0(&qword_3FDC10, type metadata accessor for BEContentLayoutInfoOptions);
}

uint64_t sub_39F00()
{
  return sub_39CC0(&qword_3FDC18, type metadata accessor for BEContentLayoutInfoOptions);
}

uint64_t sub_39F48()
{
  return sub_39CC0(&qword_3FDC20, type metadata accessor for Key);
}

uint64_t sub_39F90(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_39FCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_3A01C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for BEWebViewFactoryPaginationMode(uint64_t a1)
{
}

void type metadata accessor for BEContentLayoutInfoKey(uint64_t a1)
{
}

void type metadata accessor for BE_WKPaginationMode(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for BEWKFontRegistrationResult(uint64_t a1)
{
}

void type metadata accessor for ContentMode(uint64_t a1)
{
}

void sub_3A108(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    ForeignTypeMetastd::string::pointer data = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_3A150()
{
  return sub_39CC0(&qword_3FDC98, type metadata accessor for BEContentLayoutInfoKey);
}

uint64_t sub_3A198()
{
  return sub_39CC0(&qword_3FDCA0, type metadata accessor for BEContentLayoutInfoKey);
}

uint64_t sub_3A1E0()
{
  return sub_39CC0(&qword_3FDCA8, type metadata accessor for BEContentLayoutInfoKey);
}

void ReadingLoupeVisibilityState.id.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *BookContentSelection.type.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*ReadingSettingsModuleFactory.ViewConfig.eventHandler.modify())()
{
  return address(of:);
}

uint64_t SpreadPaginationEntity.configuration.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SelectionInfo.cfi.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SearchResultLayoutManager.Configuration.maximumLines.modify())()
{
  return address(of:);
}

uint64_t _AnnotationProvidingOverlap.containingAnnotation.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _AnnotationProvidingOverlap.containingAnnotation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*_AnnotationProvidingOverlap.containingAnnotation.modify())()
{
  return address(of:);
}

uint64_t BookPaginationEntity.documents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BookContentSelection.selectionRects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*ReadingSettingsModuleFactory.ViewConfig.viewModel.modify())()
{
  return address(of:);
}

uint64_t BookEntity.sessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BookContentSelection.contextText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ReadingSettingsModuleFactory.ViewConfig.usePopoverHeader.modify())()
{
  return address(of:);
}

uint64_t BookContentSelection.extendedCFI.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BookContentSelection.extendedCFI.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ContentLoaderDocument.ordinal.modify())()
{
  return address(of:);
}

uint64_t BookContentSelection.intersectingHighlightIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BookContentSelection.intersectingHighlightIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*ContentLoaderDocument.pageCount.modify())()
{
  return address(of:);
}

uint64_t BookContentSelection.containingHighlightID.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BookContentSelection.containingHighlightID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ContentLoaderDocument.protocolCacheItem.modify())()
{
  return address(of:);
}

void PageTransitionCompletionState.hash(into:)()
{
  sub_2FD330(*v0);
}

BOOL static PageTransitionCompletionState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int PageTransitionCompletionState.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  sub_2FD320();
  sub_2FD330(v1);
  return sub_2FD370();
}

Swift::Int sub_3A680()
{
  Swift::UInt v1 = *v0;
  sub_2FD320();
  sub_2FD330(v1);
  return sub_2FD370();
}

BOOL BookContentSelection.isAnnotation.getter()
{
  return *v0 > 1u;
}

BOOL BookContentSelection.isText.getter()
{
  return *v0 < 2u;
}

BOOL sub_3A6E8(void *a1, void *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[7];
  uint64_t v28 = a1[9];
  uint64_t v24 = (void *)a1[10];
  uint64_t v22 = a1[12];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v25 = a2[8];
  uint64_t v26 = a1[8];
  uint64_t v27 = a2[9];
  unint64_t v23 = (void *)a2[10];
  uint64_t v19 = a2[11];
  uint64_t v20 = a1[11];
  uint64_t v21 = a2[12];
  if (a1[1] == a2[1] && a1[2] == a2[2] || (char v12 = sub_2FD1F0(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v8) {
        return 0;
      }
      if (v2 != v7 || v4 != v8)
      {
        char v14 = sub_2FD1F0();
        BOOL result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v8)
    {
      return 0;
    }
    if (v3)
    {
      if (!v10) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = swift_bridgeObjectRetain();
      BOOL v16 = sub_72F2C(v15, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v16) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v6)
    {
      if (!v11) {
        return 0;
      }
      if (v5 != v9 || v6 != v11)
      {
        char v17 = sub_2FD1F0();
        BOOL result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v28)
    {
      if (!v27) {
        return 0;
      }
      if (v26 != v25 || v28 != v27)
      {
        char v18 = sub_2FD1F0();
        BOOL result = 0;
        if ((v18 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    if (sub_72E64(v24, v23))
    {
      if (v22) {
        return v21 && (v20 == v19 && v22 == v21 || (sub_2FD1F0() & 1) != 0);
      }
      if (!v21) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_3A930()
{
  unint64_t result = qword_3FDCC0;
  if (!qword_3FDCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FDCC0);
  }
  return result;
}

uint64_t destroy for BookContentSelection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BookContentSelection(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BookContentSelection(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BookContentSelection(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for BookContentSelection(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentSelection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookContentSelection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookContentSelection()
{
  return &type metadata for BookContentSelection;
}

unsigned char *initializeBufferWithCopyOfBuffer for BookContentSelection.SelectionType(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BookContentSelection.SelectionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BookContentSelection.SelectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3AE7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_3AEA4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_3AEAC(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BookContentSelection.SelectionType()
{
  return &type metadata for BookContentSelection.SelectionType;
}

uint64_t AnnotationStyle.rawValue.getter(char a1)
{
  uint64_t result = 0x776F6C6C6579;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 1802398064;
      break;
    case 4:
      uint64_t result = 0x656C70727570;
      break;
    case 5:
      uint64_t result = 0x6E696C7265646E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t AnnotationStyle.accessibilityDescription.getter()
{
  id v0 = BookEPUBBundle();
  NSString v1 = sub_2FC140();
  NSString v2 = sub_2FC140();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = sub_2FC180();
  return v4;
}

uint64_t AnnotationStyle.accessibilityAdditionalUserInputLabelsForNotes.getter(char a1)
{
  switch(a1)
  {
    case 5:
      sub_371F4(&qword_403ED0);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_32BAD0;
      id v10 = BookEPUBBundle();
      NSString v11 = sub_2FC140();
      NSString v12 = sub_2FC140();
      id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

      uint64_t v14 = sub_2FC180();
      uint64_t v16 = v15;

      *(void *)(v1 + 32) = v14;
      *(void *)(v1 + 40) = v16;
      id v17 = BookEPUBBundle();
      NSString v18 = sub_2FC140();
      NSString v19 = sub_2FC140();
      id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

      uint64_t v21 = sub_2FC180();
      uint64_t v23 = v22;

      *(void *)(v1 + 48) = v21;
      *(void *)(v1 + 56) = v23;
      break;
    default:
      sub_371F4(&qword_403ED0);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_32BAE0;
      id v2 = BookEPUBBundle();
      NSString v3 = sub_2FC140();
      NSString v4 = sub_2FC140();
      id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

      uint64_t v6 = sub_2FC180();
      uint64_t v8 = v7;

      *(void *)(v1 + 32) = v6;
      *(void *)(v1 + 40) = v8;
      break;
  }
  return v1;
}

id AnnotationStyle.color.getter(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = [self greenColor];
      goto LABEL_10;
    case 2:
      id v1 = [self blueColor];
      goto LABEL_10;
    case 3:
      id v2 = objc_allocWithZone((Class)UIColor);
      return [v2 initWithRed:1.0 green:0.31372549 blue:1.0 alpha:1.0];
    case 4:
      id v1 = [self purpleColor];
      goto LABEL_10;
    case 5:
      id v1 = [self blackColor];
      goto LABEL_10;
    default:
      id v1 = [self yellowColor];
LABEL_10:
      return v1;
  }
}

_UNKNOWN **static AnnotationStyle.allCases.getter()
{
  return &off_3C17D8;
}

uint64_t sub_3B6F8(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x776F6C6C6579;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x776F6C6C6579;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x6E65657267;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1702194274;
      break;
    case 3:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1802398064;
      break;
    case 4:
      uint64_t v5 = 0x656C70727570;
      break;
    case 5:
      uint64_t v5 = 0x6E696C7265646E75;
      unint64_t v4 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6E65657267) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702194274) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802398064) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x656C70727570;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x6E696C7265646E75) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_3B8D0()
{
  return sub_2FD370();
}

uint64_t sub_3B9C8()
{
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_3BAA8()
{
  return sub_2FD370();
}

uint64_t sub_3BB9C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s8BookEPUB15AnnotationStyleO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_3BBCC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x776F6C6C6579;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6E65657267;
      goto LABEL_3;
    case 2:
      *a1 = 1702194274;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 1802398064;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x656C70727570;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x6E696C7265646E75;
      a1[1] = 0xE900000000000065;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_3BC8C(void *a1@<X8>)
{
  *a1 = &off_3C17D8;
}

uint64_t PaginationLayoutConfiguration.layoutMode.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_3BCA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  swift_beginAccess();
  uint64_t v4 = sub_2FB530();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_3BD2C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_2FB530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_3BE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  swift_beginAccess();
  uint64_t v4 = sub_2FB530();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_3BECC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3BF38()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_3BF90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_3BFF0())()
{
  return j__swift_endAccess;
}

uint64_t sub_3C050()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2FB530();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_2FCDD0(79);
  uint64_t v19 = v17;
  unint64_t v20 = v18;
  v21._object = (void *)0x800000000030C230;
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  sub_2FC260(v21);
  uint64_t v6 = *(void *)(v0 + 16);
  char v7 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v6;
  v22._object = v7;
  sub_2FC260(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x636F6C202020200ALL;
  v23._object = (void *)0xEF203A6E6F697461;
  sub_2FC260(v23);
  uint64_t v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = (void *)v8[1];
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = v9;
  v24._object = v10;
  sub_2FC260(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 0x646F6D202020200ALL;
  v25._object = (void *)0xEE00203A65746144;
  sub_2FC260(v25);
  uint64_t v11 = v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  sub_436DC();
  uint64_t v12 = sub_2FD1A0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v26._countAndFlagsBits = v12;
  v26._object = v14;
  sub_2FC260(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0x64726F202020200ALL;
  v27._object = (void *)0xEE00203A6C616E69;
  sub_2FC260(v27);
  v16[1] = *(void *)(v1 + 32);
  v28._countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v28);
  swift_bridgeObjectRelease();
  return v19;
}

void *AnnotationEntity.__allocating_init(uniqueID:documentOrdinal:location:modificationDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  uint64_t v12[3] = a2;
  void v12[4] = a3;
  id v13 = (char *)v12 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v14 = sub_2FB530();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a6, v14);
  uint64_t v15 = (void *)((char *)v12 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  void *v15 = a4;
  v15[1] = a5;
  return v12;
}

void *AnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  uint64_t v10 = (char *)v6 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v11 = sub_2FB530();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a6, v11);
  uint64_t v12 = (void *)((char *)v6 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  *uint64_t v12 = a4;
  v12[1] = a5;
  return v6;
}

uint64_t sub_3C438(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  *uint64_t v5 = v4;
  v5[1] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AnnotationEntity.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v2 = sub_2FB530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AnnotationEntity.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v2 = sub_2FB530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_3C5F8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_3C63C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_3C6BC()
{
  return sub_2FBBB0();
}

uint64_t sub_3C730()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_3C7A4()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style, &qword_3FDCD8);
}

uint64_t sub_3C7B8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_3C838()
{
  return sub_2FBBB0();
}

uint64_t sub_3C8AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_3C920()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText, (uint64_t *)&unk_400E90);
}

uint64_t sub_3C934()
{
  uint64_t v6 = sub_3C050();
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = 0x6C79747320202020;
  v7._object = (void *)0xEB00000000203A65;
  sub_2FC260(v7);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v0 = (void *)0xE600000000000000;
  uint64_t v1 = 0x776F6C6C6579;
  switch((char)v6)
  {
    case 1:
      uint64_t v0 = (void *)0xE500000000000000;
      uint64_t v1 = 0x6E65657267;
      break;
    case 2:
      uint64_t v0 = (void *)0xE400000000000000;
      uint64_t v1 = 1702194274;
      break;
    case 3:
      uint64_t v0 = (void *)0xE400000000000000;
      uint64_t v1 = 1802398064;
      break;
    case 4:
      uint64_t v1 = 0x656C70727570;
      break;
    case 5:
      uint64_t v0 = (void *)0xE900000000000065;
      uint64_t v1 = 0x6E696C7265646E75;
      break;
    default:
      break;
  }
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v1;
  v8._object = v0;
  sub_2FC260(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2FCDD0(20);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v5) {
    v2._countAndFlagsBits = 1702195828;
  }
  else {
    v2._countAndFlagsBits = 0x65736C6166;
  }
  if (v5) {
    char v3 = (void *)0xE400000000000000;
  }
  else {
    char v3 = (void *)0xE500000000000000;
  }
  v2._object = v3;
  sub_2FC260(v2);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 10;
  v9._object = (void *)0xE100000000000000;
  sub_2FC260(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 0xD000000000000011;
  v10._object = (void *)0x800000000030C250;
  sub_2FC260(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void *HighlightAnnotationEntity.__allocating_init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_43744(a1, a2, a3, a4, a5, a6, a7, a8, v16);
  swift_release();
  return v17;
}

void *HighlightAnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Swift::String v8 = sub_43744(a1, a2, a3, a4, a5, a6, a7, a8, v10);
  swift_release();
  return v8;
}

uint64_t sub_3CCC0(uint64_t a1)
{
  Swift::String v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  char v5 = (void *)(v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  *char v5 = v4;
  v5[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2FBBB0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2FBBB0();
}

void HighlightAnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:)()
{
}

uint64_t sub_3CE90()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style;
  uint64_t v2 = sub_371F4(&qword_3FDCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText;
  uint64_t v4 = sub_371F4((uint64_t *)&unk_400E90);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t HighlightAnnotationEntity.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v2 = sub_2FB530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style;
  uint64_t v4 = sub_371F4(&qword_3FDCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText;
  uint64_t v6 = sub_371F4((uint64_t *)&unk_400E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t HighlightAnnotationEntity.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v2 = sub_2FB530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style;
  uint64_t v4 = sub_371F4(&qword_3FDCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText;
  uint64_t v6 = sub_371F4((uint64_t *)&unk_400E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v8 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v7, v8);
}

uint64_t sub_3D1A4@<X0>(void *a1@<X8>)
{
  return sub_3D258(a1);
}

uint64_t sub_3D1B8()
{
  return sub_3D2E8();
}

uint64_t sub_3D1CC()
{
  return sub_3D37C();
}

uint64_t sub_3D1E0()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__selectedText, &qword_3FDCF0);
}

uint64_t sub_3D1F4@<X0>(void *a1@<X8>)
{
  return sub_3D258(a1);
}

uint64_t sub_3D208()
{
  return sub_3D2E8();
}

uint64_t sub_3D21C()
{
  return sub_3D37C();
}

uint64_t sub_3D230()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__representativeText, &qword_3FDCF0);
}

uint64_t sub_3D244@<X0>(void *a1@<X8>)
{
  return sub_3D258(a1);
}

uint64_t sub_3D258@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_3D2D4()
{
  return sub_3D2E8();
}

uint64_t sub_3D2E8()
{
  return sub_2FBBB0();
}

uint64_t sub_3D368()
{
  return sub_3D37C();
}

uint64_t sub_3D37C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_3D3E8()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__noteText, &qword_3FDCF0);
}

void *HighlightAnnotationDetailEntity.__allocating_init(uniqueID:documentOrdinal:location:style:creationDate:modificationDate:selectedText:representativeText:noteText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14)
{
  Swift::String v21 = (char *)swift_allocObject();
  Swift::String v22 = sub_438B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v21);
  swift_release();
  return v22;
}

void *HighlightAnnotationDetailEntity.init(uniqueID:documentOrdinal:location:style:creationDate:modificationDate:selectedText:representativeText:noteText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13)
{
  id v13 = sub_438B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v15, v16);
  swift_release();
  return v13;
}

BOOL sub_3D51C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v0 = *(void *)v2 & 0xFFFFFFFFFFFFLL;
  }
  return v0 != 0;
}

void HighlightAnnotationDetailEntity.init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)()
{
}

uint64_t sub_3D5E0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity_creationDate;
  uint64_t v2 = sub_2FB530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__selectedText;
  uint64_t v4 = sub_371F4(&qword_3FDCF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), v3, v4);
  v7(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__representativeText, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__noteText;

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t HighlightAnnotationDetailEntity.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v2 = sub_2FB530();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style;
  uint64_t v5 = sub_371F4(&qword_3FDCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText;
  uint64_t v7 = sub_371F4((uint64_t *)&unk_400E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  v3(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity_creationDate, v2);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__selectedText;
  uint64_t v9 = sub_371F4(&qword_3FDCF0);
  Swift::String v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__representativeText, v9);
  v10(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__noteText, v9);
  return v0;
}

uint64_t HighlightAnnotationDetailEntity.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v2 = sub_2FB530();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style;
  uint64_t v5 = sub_371F4(&qword_3FDCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText;
  uint64_t v7 = sub_371F4((uint64_t *)&unk_400E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  v3(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity_creationDate, v2);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__selectedText;
  uint64_t v9 = sub_371F4(&qword_3FDCF0);
  Swift::String v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__representativeText, v9);
  v10(v0 + OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__noteText, v9);
  uint64_t v11 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v12 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v11, v12);
}

uint64_t PaginationLayoutConfiguration.columnCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_3DABC@<X0>(void *a1@<X8>)
{
  return sub_40610(a1);
}

uint64_t sub_3DAD0()
{
  return sub_406A0();
}

uint64_t sub_3DAE4()
{
  return sub_4072C();
}

uint64_t sub_3DAF8()
{
  return sub_407AC();
}

uint64_t (*sub_3DB0C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  unsigned char v2[6] = sub_2FBB90();
  return sub_3DB98;
}

uint64_t sub_3DB9C()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks, &qword_3FDD10);
}

uint64_t sub_3DBB0(uint64_t a1)
{
  return sub_40B90(a1, &qword_3FDD18, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks, &qword_3FDD10);
}

uint64_t (*sub_3DBCC(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_3FDD18);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4(&qword_3FDD10);
  sub_2FBB70();
  swift_endAccess();
  return sub_3DCDC;
}

uint64_t sub_3DCE0@<X0>(void *a1@<X8>)
{
  return sub_40610(a1);
}

uint64_t sub_3DCF4()
{
  return sub_406A0();
}

uint64_t sub_3DD08()
{
  return sub_4072C();
}

uint64_t sub_3DD1C()
{
  return sub_407AC();
}

uint64_t (*sub_3DD30(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  unsigned char v2[6] = sub_2FBB90();
  return sub_3DB98;
}

uint64_t sub_3DDBC()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights, &qword_3FDD28);
}

uint64_t sub_3DDD0(uint64_t a1)
{
  return sub_40B90(a1, &qword_3FDD30, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights, &qword_3FDD28);
}

uint64_t (*sub_3DDEC(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_3FDD30);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4(&qword_3FDD28);
  sub_2FBB70();
  swift_endAccess();
  return sub_3DCDC;
}

uint64_t sub_3DEFC@<X0>(void *a1@<X8>)
{
  return sub_40610(a1);
}

uint64_t sub_3DF10()
{
  return sub_406A0();
}

uint64_t sub_3DF24()
{
  return sub_4072C();
}

uint64_t sub_3DF38()
{
  return sub_407AC();
}

uint64_t (*sub_3DF4C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  unsigned char v2[6] = sub_2FBB90();
  return sub_3DB98;
}

uint64_t sub_3DFD8()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations, &qword_3FDD40);
}

uint64_t sub_3DFEC(uint64_t a1)
{
  return sub_40B90(a1, &qword_3FDD48, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations, &qword_3FDD40);
}

uint64_t (*sub_3E008(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_3FDD48);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4(&qword_3FDD40);
  sub_2FBB70();
  swift_endAccess();
  return sub_3DCDC;
}

uint64_t DocumentAnnotationsEntity.__allocating_init(documentOrdinal:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DocumentAnnotationsEntity.init(documentOrdinal:)(a1);
  return v2;
}

uint64_t DocumentAnnotationsEntity.init(documentOrdinal:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity_cancellables) = &_swiftEmptySetSingleton;
  *(void *)(v1 + 16) = a1;
  sub_3E660((uint64_t)&_swiftEmptyArrayStorage, &qword_3FE700);
  swift_beginAccess();
  sub_371F4(&qword_3FDD50);
  sub_2FBB60();
  swift_endAccess();
  sub_3E660((uint64_t)&_swiftEmptyArrayStorage, &qword_3FE6F0);
  swift_beginAccess();
  sub_371F4(&qword_3FDD58);
  sub_2FBB60();
  swift_endAccess();
  sub_3F4E8((uint64_t)&_swiftEmptyArrayStorage, &qword_3FE6F8);
  swift_beginAccess();
  sub_371F4(&qword_3FDD60);
  sub_2FBB60();
  swift_endAccess();
  return v1;
}

unint64_t sub_3E2BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE638);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_422B0((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3E3C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE6D8);
  uint64_t v2 = sub_2FD070();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_46A30(v6, (uint64_t)&v15, &qword_3FE6E0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_42238(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_46954(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3E500(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE6A0);
  uint64_t v2 = sub_2FD070();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_46A30(v6, (uint64_t)&v13, &qword_3FE6A8);
    uint64_t v7 = v13;
    unint64_t result = sub_422B0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_46954(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3E630(uint64_t a1)
{
  return sub_3E660(a1, &qword_403EB0);
}

unint64_t sub_3E63C(uint64_t a1)
{
  return sub_3E660(a1, &qword_3FE618);
}

unint64_t sub_3E648(uint64_t a1)
{
  return sub_3E660(a1, (uint64_t *)&unk_403EA0);
}

unint64_t sub_3E654(uint64_t a1)
{
  return sub_3E660(a1, &qword_3FE610);
}

unint64_t sub_3E660(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(a2);
  uint64_t v3 = (void *)sub_2FD070();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_42238(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3E778(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4((uint64_t *)&unk_403EE0);
  uint64_t v2 = sub_2FD070();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v24 = v2 + 64;
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v8 = *(v5 - 1);
    uint64_t v9 = *v5;
    uint64_t v10 = v5[1];
    uint64_t v11 = v5[2];
    uint64_t v12 = v5[3];
    uint64_t v14 = v5[4];
    uint64_t v13 = v5[5];
    uint64_t v15 = v5[7];
    uint64_t v25 = v5[6];
    *(void *)&long long v26 = *(v5 - 4);
    *((void *)&v26 + 1) = v6;
    *(void *)&long long v27 = v7;
    *((void *)&v27 + 1) = v8;
    *(void *)&long long v28 = v9;
    *((void *)&v28 + 1) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_42344((uint64_t *)&v26);
    if (v17) {
      break;
    }
    *(void *)(v24 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v18 = (_OWORD *)(v3[6] + 48 * result);
    long long v19 = v27;
    *unint64_t v18 = v26;
    v18[1] = v19;
    v18[2] = v28;
    unint64_t v20 = (void *)(v3[7] + 48 * result);
    void *v20 = v11;
    v20[1] = v12;
    v20[2] = v14;
    v20[3] = v13;
    v20[4] = v25;
    v20[5] = v15;
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v3[2] = v23;
    v5 += 12;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3E908(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE660);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    unint64_t result = sub_422B0((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3EA20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4((uint64_t *)&unk_404030);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    sub_469BC(v7, v8);
    unint64_t result = sub_42238(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 32;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3EB50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_403EF0);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_42238(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3EC64(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE6B0);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_421AC(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    char v10 = (void *)(v2[7] + 16 * result);
    *char v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3ED74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4((uint64_t *)&unk_403F30);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_42238(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3EE98(uint64_t a1)
{
  return sub_3F4E8(a1, &qword_3FE680);
}

unint64_t sub_3EEA4(uint64_t a1)
{
  return sub_3F4E8(a1, (uint64_t *)&unk_403F60);
}

unint64_t sub_3EEB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_403F70);
  uint64_t v2 = sub_2FD070();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_46A30(v6, (uint64_t)&v15, &qword_3FE668);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_42238(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_469A4(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3EFF4(uint64_t a1)
{
  return sub_3F4E8(a1, &qword_406350);
}

unint64_t sub_3F000(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4((uint64_t *)&unk_403F50);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_42238(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3F11C(uint64_t a1)
{
  return sub_3F4E8(a1, &qword_3FE658);
}

unint64_t sub_3F128(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE640);
  uint64_t v2 = sub_2FD070();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_46A30(v6, (uint64_t)v15, &qword_3FE648);
    unint64_t result = sub_4253C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_46954(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3F26C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE630);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    id v6 = *v4;
    unint64_t result = sub_42420(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3F370(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(&qword_3FE628);
  uint64_t v2 = (void *)sub_2FD070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 16);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    char v8 = v4[1];
    uint64_t v9 = *((void *)v4 + 1);
    uint64_t v10 = *((void *)v4 + 2);
    uint64_t v11 = *((void *)v4 + 3);
    char v12 = v4[32];
    char v13 = v4[33];
    uint64_t v14 = *((void *)v4 + 5);
    swift_bridgeObjectRetain();
    unint64_t result = sub_42420(v5);
    if (v16) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v17 = v2[7] + 56 * result;
    *(void *)uint64_t v17 = v6;
    *(unsigned char *)(v17 + 8) = v7;
    *(unsigned char *)(v17 + 9) = v8;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = v10;
    *(void *)(v17 + 32) = v11;
    *(unsigned char *)(v17 + 40) = v12;
    *(unsigned char *)(v17 + 41) = v13;
    *(void *)(v17 + 48) = v14;
    uint64_t v18 = v2[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v2[2] = v20;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_3F4DC(uint64_t a1)
{
  return sub_3F4E8(a1, &qword_3FE600);
}

unint64_t sub_3F4E8(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_371F4(a2);
  uint64_t v3 = (void *)sub_2FD070();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  unsigned __int8 v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_42238(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_3F600@<X0>(uint64_t a1@<X8>)
{
  sub_2FB490();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  sub_3F6F8(v3, a1);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  sub_3F6F8(v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_3F6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v35 = sub_2FB530();
  __chkstk_darwin(v35);
  id v33 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v28 - v6;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v30 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  id v37 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  id v32 = (void (**)(char *, uint64_t))(v5 + 8);
  int v29 = (void (**)(uint64_t, char *, uint64_t))(v5 + 40);
  uint64_t v34 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v14 = v35;
  BOOL v13 = v36;
  uint64_t v15 = v32;
  while (1)
  {
    if (v10)
    {
      uint64_t v39 = (v10 - 1) & v10;
      int64_t v40 = v12;
      unint64_t v16 = __clz(__rbit64(v10)) | (v12 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v31) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    int64_t v19 = v12 + 1;
    if (!v18)
    {
      int64_t v19 = v12 + 2;
      if (v12 + 2 >= v31) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v30 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v12 + 3;
        if (v12 + 3 >= v31) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v30 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v12 + 4;
          if (v12 + 4 >= v31) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v30 + 8 * v19);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v39 = (v18 - 1) & v18;
    int64_t v40 = v19;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_23:
    uint64_t v21 = *(void *)(*(void *)(v34 + 56) + 8 * v16) + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
    swift_beginAccess();
    BOOL v22 = *v37;
    (*v37)(v13, v21, v14);
    uint64_t v23 = v33;
    v22(v33, v38, v14);
    swift_retain();
    char v24 = sub_2FB4B0();
    uint64_t v25 = *v15;
    (*v15)(v23, v14);
    v25(v13, v14);
    if (v24)
    {
      uint64_t v27 = v35;
      long long v26 = v36;
      v22(v36, v21, v35);
      (*v29)(v38, v26, v27);
    }
    uint64_t result = swift_release();
    int64_t v12 = v40;
    unint64_t v10 = v39;
  }
  uint64_t v20 = v12 + 5;
  if (v12 + 5 >= v31) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v30 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v12 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v31) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v30 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_3FA68()
{
  sub_2FCDD0(38);
  swift_bridgeObjectRelease();
  v16[0] = 0xD000000000000023;
  v16[1] = 0x800000000030C360;
  v15[3] = *(void *)(v0 + 16);
  v17._countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 10;
  v18._object = (void *)0xE100000000000000;
  sub_2FC260(v18);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v1 = MEMORY[0xD000000000000033];
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    sub_3FEE0(v16[0]);
    swift_bridgeObjectRelease();
    sub_371F4((uint64_t *)&unk_400CB0);
    sub_44924((unint64_t *)&qword_4013A0, (uint64_t *)&unk_400CB0);
    uint64_t v2 = sub_2FC0F0();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    strcpy((char *)v16, "  Bookmarks:\n");
    HIWORD(v16[1]) = -4864;
    v19._countAndFlagsBits = v2;
    v19._object = v4;
    sub_2FC260(v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = 10;
    v20._object = (void *)0xE100000000000000;
    sub_2FC260(v20);
    swift_bridgeObjectRelease();
    uint64_t v6 = v16[0];
    uint64_t v5 = (void *)v16[1];
  }
  else
  {
    uint64_t v5 = (void *)0x800000000030C3B0;
    uint64_t v6 = 0xD000000000000010;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v7 = *(void *)(v16[0] + 16);
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v8 = sub_40130(v16[0], (uint64_t)v15, (uint64_t (*)(uint64_t))sub_3C934);
    swift_bridgeObjectRelease();
    v16[0] = (uint64_t)v8;
    sub_371F4((uint64_t *)&unk_400CB0);
    sub_44924((unint64_t *)&qword_4013A0, (uint64_t *)&unk_400CB0);
    uint64_t v9 = sub_2FC0F0();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    strcpy((char *)v16, "  Highlights:\n");
    HIBYTE(v16[1]) = -18;
    v21._countAndFlagsBits = v9;
    v21._object = v11;
    sub_2FC260(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = 10;
    v22._object = (void *)0xE100000000000000;
    sub_2FC260(v22);
    swift_bridgeObjectRelease();
    uint64_t v13 = v16[0];
    int64_t v12 = (void *)v16[1];
  }
  else
  {
    uint64_t v13 = 0xD000000000000011;
    int64_t v12 = (void *)0x800000000030C390;
  }
  v16[0] = 0xD000000000000023;
  v16[1] = 0x800000000030C360;
  swift_bridgeObjectRetain();
  v23._countAndFlagsBits = v6;
  v23._object = v5;
  sub_2FC260(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = v13;
  v24._object = v12;
  sub_2FC260(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16[0];
}

void *sub_3FEE0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1167DC(0, v1, 0);
  uint64_t result = (void *)sub_43548(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v24 = v1;
  int v25 = v4;
  uint64_t v26 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v27 = v6;
    uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 56) + 8 * v5) + 160);
    uint64_t v12 = swift_retain();
    uint64_t v13 = v11(v12);
    uint64_t v15 = v14;
    uint64_t result = (void *)swift_release();
    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v17 = _swiftEmptyArrayStorage[3];
    if (v16 >= v17 >> 1) {
      uint64_t result = (void *)sub_1167DC(v17 > 1, v16 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    Swift::String v18 = (char *)&_swiftEmptyArrayStorage[2 * v16];
    *((void *)v18 + 4) = v13;
    *((void *)v18 + 5) = v15;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v19 = *(void *)(v26 + 8 * v10);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v25;
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v24;
    }
    else
    {
      unint64_t v21 = v10 + 1;
      unint64_t v22 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v24;
      if (v10 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v26 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v10)
          {
            unint64_t v23 = *(void *)(a1 + 80 + 8 * v10++);
            if (v23)
            {
              unint64_t v21 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v27 + 1;
    uint64_t v5 = v8;
    if (v27 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_40130(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  int64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_1167DC(0, v3, 0);
  uint64_t result = (void *)sub_43548(a1);
  uint64_t v7 = (uint64_t)result;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  int64_t v24 = v3;
  int v25 = v6;
  uint64_t v26 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_24;
    }
    uint64_t v13 = swift_retain();
    uint64_t v14 = a3(v13);
    uint64_t v28 = v15;
    uint64_t result = (void *)swift_release();
    unint64_t v17 = _swiftEmptyArrayStorage[2];
    unint64_t v16 = _swiftEmptyArrayStorage[3];
    if (v17 >= v16 >> 1) {
      uint64_t result = (void *)sub_1167DC(v16 > 1, v17 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v17 + 1;
    Swift::String v18 = &_swiftEmptyArrayStorage[2 * v17];
    v18[4] = v14;
    void v18[5] = v28;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v7 >= v10) {
      goto LABEL_25;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v19 = *(void *)(v26 + 8 * v12);
    if ((v19 & (1 << v7)) == 0) {
      goto LABEL_26;
    }
    int v6 = v25;
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v7 & 0x3F));
    if (v20)
    {
      int64_t v10 = __clz(__rbit64(v20)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v24;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v24;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v26 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v12)
          {
            unint64_t v23 = *(void *)(a1 + 80 + 8 * v12++);
            if (v23)
            {
              unint64_t v21 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v7 = v10;
    if (v8 == v11) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t DocumentAnnotationsEntity.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks;
  uint64_t v2 = sub_371F4(&qword_3FDD10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights;
  uint64_t v4 = sub_371F4(&qword_3FDD28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations;
  uint64_t v6 = sub_371F4(&qword_3FDD40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DocumentAnnotationsEntity.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks;
  uint64_t v2 = sub_371F4(&qword_3FDD10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights;
  uint64_t v4 = sub_371F4(&qword_3FDD28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations;
  uint64_t v6 = sub_371F4(&qword_3FDD40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v8 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v7, v8);
}

uint64_t sub_405A8()
{
  return sub_3FA68();
}

uint64_t CFIRange.end.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_405FC@<X0>(void *a1@<X8>)
{
  return sub_40610(a1);
}

uint64_t sub_40610@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_4068C()
{
  return sub_406A0();
}

uint64_t sub_406A0()
{
  return sub_2FBBB0();
}

uint64_t sub_40718()
{
  return sub_4072C();
}

uint64_t sub_4072C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_40798()
{
  return sub_407AC();
}

uint64_t sub_407AC()
{
  return sub_2FBBB0();
}

uint64_t (*sub_40818(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  unsigned char v2[6] = sub_2FBB90();
  return sub_3DB98;
}

void sub_408A4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_4090C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return swift_endAccess();
}

uint64_t sub_4097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = sub_371F4(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v18 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  sub_371F4(a7);
  sub_2FBB80();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_40AF8()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations, &qword_3FDD70);
}

uint64_t sub_40B0C(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_40B74(uint64_t a1)
{
  return sub_40B90(a1, &qword_3FDD78, (uint64_t)&OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations, &qword_3FDD70);
}

uint64_t sub_40B90(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_371F4(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_371F4(a4);
  sub_2FBB80();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_40CC0(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_3FDD78);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4(&qword_3FDD70);
  sub_2FBB70();
  swift_endAccess();
  return sub_3DCDC;
}

void sub_40DD0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_2FBB80();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_2FBB80();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_40F40()
{
  return sub_40F68();
}

uint64_t sub_40F54()
{
  return sub_40F68();
}

uint64_t sub_40F68()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v12 = v13 + 64;
  uint64_t v0 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v1 = -1;
  if (v0 < 64) {
    uint64_t v1 = ~(-1 << v0);
  }
  uint64_t v2 = v1 & *(void *)(v13 + 64);
  int64_t v3 = (unint64_t)(v0 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v5 = 0;
  uint64_t v6 = 0;
  do
  {
    if (v2)
    {
      v2 &= v2 - 1;
    }
    else
    {
      int64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_27;
      }
      if (v9 >= v3)
      {
LABEL_25:
        swift_release();
        swift_bridgeObjectRelease();
        return v6;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v9);
      ++v5;
      if (!v10)
      {
        int64_t v5 = v9 + 1;
        if (v9 + 1 >= v3) {
          goto LABEL_25;
        }
        uint64_t v10 = *(void *)(v12 + 8 * v5);
        if (!v10)
        {
          int64_t v5 = v9 + 2;
          if (v9 + 2 >= v3) {
            goto LABEL_25;
          }
          uint64_t v10 = *(void *)(v12 + 8 * v5);
          if (!v10)
          {
            int64_t v5 = v9 + 3;
            if (v9 + 3 >= v3) {
              goto LABEL_25;
            }
            uint64_t v10 = *(void *)(v12 + 8 * v5);
            if (!v10)
            {
              int64_t v5 = v9 + 4;
              if (v9 + 4 >= v3) {
                goto LABEL_25;
              }
              uint64_t v10 = *(void *)(v12 + 8 * v5);
              if (!v10)
              {
                int64_t v11 = v9 + 5;
                if (v11 >= v3) {
                  goto LABEL_25;
                }
                uint64_t v10 = *(void *)(v12 + 8 * v11);
                if (!v10)
                {
                  while (1)
                  {
                    int64_t v5 = v11 + 1;
                    if (__OFADD__(v11, 1)) {
                      goto LABEL_28;
                    }
                    if (v5 >= v3) {
                      goto LABEL_25;
                    }
                    uint64_t v10 = *(void *)(v12 + 8 * v5);
                    ++v11;
                    if (v10) {
                      goto LABEL_24;
                    }
                  }
                }
                int64_t v5 = v11;
              }
            }
          }
        }
      }
LABEL_24:
      uint64_t v2 = (v10 - 1) & v10;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v7 = *(void *)(v13 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v8 = __OFADD__(v6, v7);
    v6 += v7;
  }
  while (!v8);
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_411AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v49 + 64);
  uint64_t v39 = v49 + 64;
  uint64_t v1 = 1 << *(unsigned char *)(v49 + 32);
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  else {
    uint64_t v2 = -1;
  }
  uint64_t v3 = v2 & v0;
  int64_t v40 = (unint64_t)(v1 + 63) >> 6;
  uint64_t v41 = v49;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v46 = v5;
    if (v3)
    {
      uint64_t v44 = (v3 - 1) & v3;
      int64_t v45 = v4;
      goto LABEL_27;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_85;
    }
    if (v9 >= v40) {
      goto LABEL_78;
    }
    uint64_t v10 = *(void *)(v39 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v40) {
        goto LABEL_78;
      }
      uint64_t v10 = *(void *)(v39 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v40) {
          goto LABEL_78;
        }
        uint64_t v10 = *(void *)(v39 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v40) {
            goto LABEL_78;
          }
          uint64_t v10 = *(void *)(v39 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v40) {
              goto LABEL_78;
            }
            uint64_t v10 = *(void *)(v39 + 8 * v11);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    uint64_t v44 = (v10 - 1) & v10;
    int64_t v45 = v11;
LABEL_27:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v13 = v49;
    char v14 = *(unsigned char *)(v49 + 32);
    unint64_t v43 = (unint64_t)((1 << v14) + 63) >> 6;
    size_t v15 = 8 * v43;
    if ((v14 & 0x3Fu) > 0xD && (swift_stdlib_isStackAllocationSafe() & 1) == 0)
    {
      uint64_t v47 = (char *)swift_slowAlloc();
      bzero(v47, v15);
      uint64_t v48 = 0;
      int64_t v27 = 0;
      uint64_t v28 = v13 + 64;
      uint64_t v29 = 1 << *(unsigned char *)(v13 + 32);
      if (v29 < 64) {
        uint64_t v30 = ~(-1 << v29);
      }
      else {
        uint64_t v30 = -1;
      }
      unint64_t v31 = v30 & *(void *)(v13 + 64);
      int64_t v32 = (unint64_t)(v29 + 63) >> 6;
      while (1)
      {
        if (v31)
        {
          unint64_t v33 = __clz(__rbit64(v31));
          v31 &= v31 - 1;
          unint64_t v34 = v33 | (v27 << 6);
        }
        else
        {
          int64_t v35 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_80;
          }
          if (v35 >= v32) {
            goto LABEL_77;
          }
          unint64_t v36 = *(void *)(v28 + 8 * v35);
          ++v27;
          if (!v36)
          {
            int64_t v27 = v35 + 1;
            if (v35 + 1 >= v32) {
              goto LABEL_77;
            }
            unint64_t v36 = *(void *)(v28 + 8 * v27);
            if (!v36)
            {
              int64_t v27 = v35 + 2;
              if (v35 + 2 >= v32) {
                goto LABEL_77;
              }
              unint64_t v36 = *(void *)(v28 + 8 * v27);
              if (!v36)
              {
                int64_t v37 = v35 + 3;
                if (v37 >= v32) {
                  goto LABEL_77;
                }
                unint64_t v36 = *(void *)(v28 + 8 * v37);
                if (!v36)
                {
                  while (1)
                  {
                    int64_t v27 = v37 + 1;
                    if (__OFADD__(v37, 1)) {
                      goto LABEL_82;
                    }
                    if (v27 >= v32) {
                      break;
                    }
                    unint64_t v36 = *(void *)(v28 + 8 * v27);
                    ++v37;
                    if (v36) {
                      goto LABEL_73;
                    }
                  }
LABEL_77:
                  uint64_t v6 = sub_432C0((unint64_t *)v47, v43, v48, v13);
                  swift_slowDealloc();
                  goto LABEL_6;
                }
                int64_t v27 = v37;
              }
            }
          }
LABEL_73:
          unint64_t v31 = (v36 - 1) & v36;
          unint64_t v34 = __clz(__rbit64(v36)) + (v27 << 6);
        }
        swift_getKeyPath();
        swift_getKeyPath();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2FBBA0();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        if (v49 == 1)
        {
          *(void *)&v47[(v34 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v34;
          BOOL v8 = __OFADD__(v48++, 1);
          if (v8) {
            goto LABEL_86;
          }
        }
      }
    }
    id v42 = &v39;
    __chkstk_darwin();
    uint64_t v47 = (char *)&v39 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v47, v15);
    uint64_t v48 = 0;
    int64_t v16 = 0;
    uint64_t v17 = v13 + 64;
    uint64_t v18 = 1 << *(unsigned char *)(v13 + 32);
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & *(void *)(v13 + 64);
    int64_t v21 = (unint64_t)(v18 + 63) >> 6;
    while (1)
    {
      if (v20)
      {
        unint64_t v22 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v23 = v22 | (v16 << 6);
        goto LABEL_34;
      }
      int64_t v24 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      if (v24 >= v21) {
        goto LABEL_5;
      }
      unint64_t v25 = *(void *)(v17 + 8 * v24);
      ++v16;
      if (!v25)
      {
        int64_t v16 = v24 + 1;
        if (v24 + 1 >= v21) {
          goto LABEL_5;
        }
        unint64_t v25 = *(void *)(v17 + 8 * v16);
        if (!v25)
        {
          int64_t v16 = v24 + 2;
          if (v24 + 2 >= v21) {
            goto LABEL_5;
          }
          unint64_t v25 = *(void *)(v17 + 8 * v16);
          if (!v25) {
            break;
          }
        }
      }
LABEL_49:
      unint64_t v20 = (v25 - 1) & v25;
      unint64_t v23 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_34:
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2FBBA0();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v49 == 1)
      {
        *(void *)&v47[(v23 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v23;
        BOOL v8 = __OFADD__(v48++, 1);
        if (v8) {
          goto LABEL_83;
        }
      }
    }
    int64_t v26 = v24 + 3;
    if (v26 < v21)
    {
      unint64_t v25 = *(void *)(v17 + 8 * v26);
      if (!v25)
      {
        while (1)
        {
          int64_t v16 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            break;
          }
          if (v16 >= v21) {
            goto LABEL_5;
          }
          unint64_t v25 = *(void *)(v17 + 8 * v16);
          ++v26;
          if (v25) {
            goto LABEL_49;
          }
        }
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
      }
      int64_t v16 = v26;
      goto LABEL_49;
    }
LABEL_5:
    uint64_t v6 = sub_432C0((unint64_t *)v47, v43, v48, v13);
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v6 + 16);
    swift_release();
    int64_t v4 = v45;
    BOOL v8 = __OFADD__(v46, v7);
    uint64_t v5 = v46 + v7;
    uint64_t v3 = v44;
    if (v8) {
      goto LABEL_84;
    }
  }
  uint64_t v12 = v4 + 6;
  if (v4 + 6 >= v40) {
    goto LABEL_78;
  }
  uint64_t v10 = *(void *)(v39 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v4 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_87;
    }
    if (v11 >= v40) {
      break;
    }
    uint64_t v10 = *(void *)(v39 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_26;
    }
  }
LABEL_78:
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t BookAnnotationEntity.__allocating_init(assetID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_43D3C(_swiftEmptyArrayStorage, &qword_3FE6E8);
  swift_beginAccess();
  sub_371F4(&qword_3FDD80);
  sub_2FBB60();
  swift_endAccess();
  return v4;
}

uint64_t BookAnnotationEntity.init(assetID:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_43D3C(_swiftEmptyArrayStorage, &qword_3FE6E8);
  swift_beginAccess();
  sub_371F4(&qword_3FDD80);
  sub_2FBB60();
  swift_endAccess();
  return v2;
}

uint64_t sub_419C0(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (*(void *)(v6 + 16) && (unint64_t v2 = sub_42168(a1), (v3 & 1) != 0))
  {
    uint64_t v4 = *(void *)(*(void *)(v6 + 56) + 8 * v2);
    swift_retain();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_41A70(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_445F4(v6, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_41B28()
{
  Swift::String v9 = *(Swift::String *)(v0 + 16);
  unint64_t v7 = 0xD00000000000001ELL;
  unint64_t v8 = 0x800000000030C3D0;
  sub_2FC260(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 10;
  v10._object = (void *)0xE100000000000000;
  sub_2FC260(v10);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v1 = sub_40130(0xD00000000000001ELL, (uint64_t)&v6, (uint64_t (*)(uint64_t))sub_3FA68);
  swift_bridgeObjectRelease();
  unint64_t v7 = (unint64_t)v1;
  sub_371F4((uint64_t *)&unk_400CB0);
  sub_44924((unint64_t *)&qword_4013A0, (uint64_t *)&unk_400CB0);
  uint64_t v2 = sub_2FC0F0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  unint64_t v7 = 0xD00000000000001ELL;
  unint64_t v8 = 0x800000000030C3D0;
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v2;
  v11._object = v4;
  sub_2FC260(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t BookAnnotationEntity.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations;
  uint64_t v2 = sub_371F4(&qword_3FDD70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BookAnnotationEntity.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations;
  uint64_t v2 = sub_371F4(&qword_3FDD70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

unint64_t sub_41DDC()
{
  return sub_41B28();
}

uint64_t AnnotationChange.documentOrdinal.getter()
{
  uint64_t result = *v0;
  switch(*((unsigned char *)v0 + 24))
  {
    case 1:
    case 3:
      uint64_t result = v0[2];
      break;
    case 2:
      return result;
    default:
      uint64_t result = *(void *)(result + 32);
      break;
  }
  return result;
}

BOOL static AnnotationEventType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AnnotationEventType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int AnnotationEventType.hashValue.getter(unsigned __int8 a1)
{
  return sub_2FD370();
}

uint64_t Location.CFIRequest.location.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _ContentLoaderViewSelection.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ElementPaginationEntityReference.rects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _ContentLoaderViewSelection.rects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*_ContentLoaderViewSelection.rects.modify())()
{
  return address(of:);
}

void __swiftcall _AnnotationProvidingOverlap.init(mergedCFI:intersectingAnnotations:containingAnnotation:)(BookEPUB::_AnnotationProvidingOverlap *__return_ptr retstr, Swift::String mergedCFI, Swift::OpaquePointer intersectingAnnotations, Swift::String_optional containingAnnotation)
{
  retstr->mergedCFI = mergedCFI;
  retstr->intersectingAnnotations = intersectingAnnotations;
  retstr->containingAnnotation = containingAnnotation;
}

void _AnnotationProvidingOverlap.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_2FC230();
  swift_bridgeObjectRelease();
  sub_2FD330(*(void *)(v1 + 16));
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2FC230();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  if (v2)
  {
    sub_2FD340(1u);
    swift_bridgeObjectRetain();
    sub_2FC230();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2FD340(0);
  }
}

Swift::Int _AnnotationProvidingOverlap.hashValue.getter()
{
  return sub_2FD370();
}

Swift::Int sub_42114()
{
  return sub_2FD370();
}

unint64_t sub_42168(uint64_t a1)
{
  uint64_t v2 = sub_2FD310();

  return sub_425C4(a1, v2);
}

unint64_t sub_421AC(unsigned __int8 a1)
{
  sub_2FD320();
  BookFontTable.rawValue.getter();
  sub_2FC230();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_2FD370();

  return sub_42660(a1, v2);
}

unint64_t sub_42238(uint64_t a1, uint64_t a2)
{
  sub_2FD320();
  sub_2FC230();
  Swift::Int v4 = sub_2FD370();

  return sub_42AEC(a1, a2, v4);
}

unint64_t sub_422B0(uint64_t a1)
{
  sub_2FC180();
  sub_2FD320();
  sub_2FC230();
  Swift::Int v2 = sub_2FD370();
  swift_bridgeObjectRelease();

  return sub_42BD0(a1, v2);
}

unint64_t sub_42344(uint64_t *a1)
{
  sub_2FD320();
  swift_bridgeObjectRetain();
  sub_2FC230();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2FC230();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2FC230();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_2FD370();

  return sub_42D48(a1, v2);
}

unint64_t sub_42420(unsigned __int8 a1)
{
  sub_2FD320();
  sub_2FC230();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_2FD370();

  return sub_42E9C(a1, v2);
}

unint64_t sub_4253C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_2FCD70(*(void *)(v2 + 40));

  return sub_430EC(a1, v4);
}

unint64_t sub_42580(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_2FCA60(*(void *)(v2 + 40));

  return sub_431B4(a1, v4);
}

unint64_t sub_425C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_42660(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      uint64_t v7 = *(void *)(v2 + 48);
      uint64_t v8 = *(unsigned __int8 *)(v7 + v4);
      unint64_t v9 = 0xE000000000000000;
      switch(*(unsigned char *)(v7 + v4))
      {
        case 1:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28001;
          break;
        case 2:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 29281;
          break;
        case 3:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28258;
          break;
        case 4:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28514;
          break;
        case 5:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v8 = 7497827;
          break;
        case 6:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 30055;
          break;
        case 7:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 25960;
          break;
        case 8:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 26984;
          break;
        case 9:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 31080;
          break;
        case 0xA:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 30057;
          break;
        case 0xB:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 24938;
          break;
        case 0xC:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28011;
          break;
        case 0xD:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28267;
          break;
        case 0xE:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28523;
          break;
        case 0xF:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 28524;
          break;
        case 0x10:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 27757;
          break;
        case 0x11:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 29295;
          break;
        case 0x12:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 24944;
          break;
        case 0x13:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 26995;
          break;
        case 0x14:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 24948;
          break;
        case 0x15:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 25972;
          break;
        case 0x16:
          unint64_t v9 = 0xE200000000000000;
          uint64_t v8 = 26740;
          break;
        case 0x17:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v8 = 0x6E635F687ALL;
          break;
        case 0x18:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v8 = 0x6B685F687ALL;
          break;
        case 0x19:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v8 = 0x77745F687ALL;
          break;
        default:
          break;
      }
      uint64_t v10 = a1;
      unint64_t v11 = 0xE000000000000000;
      switch(a1)
      {
        case 1u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28001;
          break;
        case 2u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 29281;
          break;
        case 3u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28258;
          break;
        case 4u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28514;
          break;
        case 5u:
          unint64_t v11 = 0xE300000000000000;
          uint64_t v10 = 7497827;
          break;
        case 6u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 30055;
          break;
        case 7u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 25960;
          break;
        case 8u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 26984;
          break;
        case 9u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 31080;
          break;
        case 0xAu:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 30057;
          break;
        case 0xBu:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 24938;
          break;
        case 0xCu:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28011;
          break;
        case 0xDu:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28267;
          break;
        case 0xEu:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28523;
          break;
        case 0xFu:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 28524;
          break;
        case 0x10u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 27757;
          break;
        case 0x11u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 29295;
          break;
        case 0x12u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 24944;
          break;
        case 0x13u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 26995;
          break;
        case 0x14u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 24948;
          break;
        case 0x15u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 25972;
          break;
        case 0x16u:
          unint64_t v11 = 0xE200000000000000;
          uint64_t v10 = 26740;
          break;
        case 0x17u:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v10 = 0x6E635F687ALL;
          break;
        case 0x18u:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v10 = 0x6B685F687ALL;
          break;
        case 0x19u:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v10 = 0x77745F687ALL;
          break;
        default:
          break;
      }
      if (v8 == v10 && v9 == v11) {
        break;
      }
      char v13 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_42AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2FD1F0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2FD1F0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_42BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_2FC180();
    uint64_t v8 = v7;
    if (v6 == sub_2FC180() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_2FC180();
          uint64_t v15 = v14;
          if (v13 == sub_2FC180() && v15 == v16) {
            break;
          }
          char v18 = sub_2FD1F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_42D48(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v19 = ~v3;
    uint64_t v20 = *(void *)(v2 + 48);
    uint64_t v5 = *a1;
    uint64_t v6 = a1[1];
    uint64_t v7 = a1[3];
    uint64_t v22 = a1[2];
    uint64_t v8 = a1[4];
    uint64_t v9 = a1[5];
    do
    {
      uint64_t v10 = (void *)(v20 + 48 * v4);
      uint64_t v12 = v10[2];
      uint64_t v11 = v10[3];
      uint64_t v13 = v10[4];
      uint64_t v14 = v10[5];
      BOOL v15 = *v10 == v5 && v10[1] == v6;
      if (v15 || (sub_2FD1F0() & 1) != 0)
      {
        BOOL v16 = v12 == v22 && v11 == v7;
        if (v16 || (sub_2FD1F0() & 1) != 0)
        {
          BOOL v17 = v13 == v8 && v14 == v9;
          if (v17 || (sub_2FD1F0() & 1) != 0) {
            break;
          }
        }
      }
      unint64_t v4 = (v4 + 1) & v19;
    }
    while (((*(void *)(v21 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_42E9C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x6C616E696769726FLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7465697571;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7265706170;
          break;
        case 3:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1684828002;
          break;
        case 4:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1835819363;
          break;
        case 5:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7375636F66;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x6C616E696769726FLL;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE500000000000000;
          if (v8 == 0x7465697571) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x7265706170) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1684828002) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1835819363;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x7375636F66) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_2FD1F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_430EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_468A4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_2FCD80();
      sub_46900((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_431B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_46964();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_2FCA70();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_2FCA70();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_432C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_371F4(&qword_3FE6F0);
  uint64_t result = sub_2FD070();
  uint64_t v9 = result;
  int64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v17 = v15 + 2;
          if (v17 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v17];
          if (!v16)
          {
            while (1)
            {
              uint64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v33) {
                return v9;
              }
              unint64_t v16 = v32[v11];
              ++v17;
              if (v16) {
                goto LABEL_22;
              }
            }
          }
          uint64_t v11 = v17;
        }
      }
LABEL_22:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    char v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    sub_2FD320();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2FC230();
    uint64_t result = sub_2FD370();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    void *v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_43548(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s8BookEPUB27_AnnotationProvidingOverlapV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  unsigned int v6 = (void *)a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_2FD1F0(), uint64_t result = 0, (v9 & 1) != 0))
  {
    if (sub_72E64(v2, v6))
    {
      if (v3)
      {
        if (v7 && (v4 == v5 && v3 == v7 || (sub_2FD1F0() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s8BookEPUB15AnnotationStyleO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawCFDictionaryRef Value = &off_3C1728;
  v6._object = a2;
  unint64_t v4 = sub_2FD0A0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_436DC()
{
  unint64_t result = qword_3FDCC8;
  if (!qword_3FDCC8)
  {
    sub_2FB530();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FDCC8);
  }
  return result;
}

void *sub_43744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  swift_beginAccess();
  swift_retain();
  sub_2FBB60();
  swift_endAccess();
  swift_beginAccess();
  sub_2FBB60();
  swift_endAccess();
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = a3;
  uint64_t v15 = (char *)a9 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  uint64_t v16 = sub_2FB530();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a6, v16);
  uint64_t v17 = (void *)((char *)a9 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  *uint64_t v17 = a4;
  v17[1] = a5;
  return a9;
}

void *sub_438B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14, char *a15)
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  unsigned int v38 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v33 = a1;
  unint64_t v29 = a12;
  uint64_t v30 = a13;
  uint64_t v28 = a11;
  uint64_t v16 = sub_2FB530();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v20(&a15[OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity_creationDate], a7, v16);
  swift_beginAccess();
  uint64_t v39 = a9;
  unint64_t v40 = a10;
  sub_2FBB60();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v39 = v28;
  unint64_t v40 = v29;
  sub_2FBB60();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v21 = v30;
  uint64_t v39 = v30;
  unint64_t v40 = a14;
  swift_bridgeObjectRetain();
  sub_2FBB60();
  swift_endAccess();
  uint64_t v22 = v32;
  v20(v19, v32, v16);
  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(a14) & 0xF;
  if ((a14 & 0x2000000000000000) == 0) {
    uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v24 = sub_43744(v33, v34, v35, v36, v37, (uint64_t)v19, v38, v23 != 0, a15);
  unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v25(v22, v16);
  v25(v31, v16);
  return v24;
}

unint64_t sub_43B48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_371F4(&qword_3FE6B8);
    Swift::OpaquePointer v3 = (void *)sub_2FD070();
    for (unint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_42168(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_43C20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_371F4((uint64_t *)&unk_404020);
    Swift::OpaquePointer v3 = (void *)sub_2FD070();
    for (unint64_t i = (void *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 3);
      long long v13 = *((_OWORD *)i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_42168(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v9 = v3[7] + 24 * result;
      *(_OWORD *)uint64_t v9 = v13;
      *(void *)(v9 + 16) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_43D18(void *a1)
{
  return sub_43D3C(a1, &qword_3FE690);
}

unint64_t sub_43D24(void *a1)
{
  return sub_43E44(a1, &qword_3FE688);
}

unint64_t sub_43D30(void *a1)
{
  return sub_43D3C(a1, &qword_3FE698);
}

unint64_t sub_43D3C(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_371F4(a2);
  unint64_t v4 = (void *)sub_2FD070();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_42168(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v4;
  }
  uint64_t v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v10) = v6;
    *(void *)(v4[7] + v10) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    unint64_t v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_retain();
    unint64_t result = sub_42168(v6);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_43E38(void *a1)
{
  return sub_43E44(a1, (uint64_t *)&unk_404040);
}

unint64_t sub_43E44(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_371F4(a2);
  unint64_t v4 = (void *)sub_2FD070();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_42168(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v10) = v6;
    *(void *)(v4[7] + v10) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    unint64_t v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_42168(v6);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_43F40(uint64_t a1)
{
  return sub_44408(a1, (uint64_t *)&unk_403E50);
}

unint64_t sub_43F4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_371F4((uint64_t *)&unk_404080);
    Swift::OpaquePointer v3 = (void *)sub_2FD070();
    for (uint64_t i = a1 + 32; ; i += 72)
    {
      sub_46A30(i, (uint64_t)&v11, &qword_3FE6C0);
      uint64_t v5 = v11;
      unint64_t result = sub_42168(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      unint64_t result = sub_469D4((uint64_t)&v12, v3[7] + (result << 6));
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_44050(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_371F4(&qword_3FE6C8);
    Swift::OpaquePointer v3 = (void *)sub_2FD070();
    unint64_t v4 = (uint64_t *)(a1 + 48);
    while (1)
    {
      uint64_t v19 = v1;
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v8 = v4[1];
      uint64_t v9 = v4[2];
      uint64_t v10 = v4[3];
      uint64_t v12 = v4[4];
      uint64_t v11 = v4[5];
      unint64_t result = sub_42168(v6);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v6;
      uint64_t v15 = (void *)(v3[7] + 56 * result);
      void *v15 = v5;
      v15[1] = v7;
      _OWORD v15[2] = v8;
      v15[3] = v9;
      void v15[4] = v10;
      void v15[5] = v12;
      v15[6] = v11;
      uint64_t v16 = v3[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_10;
      }
      v4 += 8;
      v3[2] = v18;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v1 = v19 - 1;
      if (v19 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_4417C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_371F4(&qword_3FE6D0);
  Swift::OpaquePointer v3 = (void *)sub_2FD070();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_42168(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    char v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_42168(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_4428C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_371F4((uint64_t *)&unk_403E20);
    Swift::OpaquePointer v3 = (void *)sub_2FD070();
    for (uint64_t i = (uint64_t *)(a1 + 64); ; i += 13)
    {
      uint64_t v5 = *(i - 4);
      char v6 = *((unsigned char *)i - 24);
      uint64_t v8 = *(i - 2);
      uint64_t v7 = *(i - 1);
      uint64_t v10 = *i;
      uint64_t v9 = i[1];
      uint64_t v21 = v1;
      uint64_t v22 = i[2];
      uint64_t v11 = i[3];
      uint64_t v12 = i[4];
      long long v23 = *(_OWORD *)(i + 5);
      uint64_t v13 = i[7];
      uint64_t v14 = i[8];
      unint64_t result = sub_42168(v5);
      if (v16) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v17 = v3[7] + 96 * result;
      *(unsigned char *)uint64_t v17 = v6;
      *(void *)(v17 + 8) = v8;
      *(void *)(v17 + 16) = v7;
      *(void *)(v17 + 24) = v10;
      *(void *)(v17 + 32) = v9;
      *(void *)(v17 + 40) = v22;
      *(void *)(v17 + 48) = v11;
      *(void *)(v17 + 56) = v12;
      *(_OWORD *)(v17 + 64) = v23;
      *(void *)(v17 + 80) = v13;
      *(void *)(v17 + 88) = v14;
      uint64_t v18 = v3[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_10;
      }
      v3[2] = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v1 = v21 - 1;
      if (v21 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_443FC(uint64_t a1)
{
  return sub_44408(a1, &qword_3FE608);
}

unint64_t sub_44408(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_371F4(a2);
    uint64_t v4 = (void *)sub_2FD070();
    for (uint64_t i = (_OWORD *)(a1 + 40); ; uint64_t i = (_OWORD *)((char *)i + 24))
    {
      uint64_t v6 = *((void *)i - 1);
      long long v12 = *i;
      unint64_t result = sub_42168(v6);
      if (v8) {
        break;
      }
      *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v4[6] + 8 * result) = v6;
      *(_OWORD *)(v4[7] + 16 * result) = v12;
      uint64_t v9 = v4[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v4[2] = v11;
      if (!--v2) {
        return (unint64_t)v4;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_444E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_371F4(&qword_3FE670);
    Swift::OpaquePointer v3 = (void *)sub_2FD070();
    for (uint64_t i = a1 + 32; ; i += 48)
    {
      sub_46A30(i, (uint64_t)&v11, &qword_3FE678);
      uint64_t v5 = v11;
      unint64_t result = sub_42168(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      unint64_t result = sub_469A4(&v12, v3[7] + 40 * result);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_445F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v9) {
    goto LABEL_28;
  }
LABEL_6:
  int64_t v12 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  if (v12 < v22)
  {
    unint64_t v13 = *(void *)(v6 + 8 * v12);
    ++i;
    if (v13) {
      goto LABEL_20;
    }
    int64_t i = v12 + 1;
    if (v12 + 1 < v22)
    {
      unint64_t v13 = *(void *)(v6 + 8 * i);
      if (v13) {
        goto LABEL_20;
      }
      int64_t i = v12 + 2;
      if (v12 + 2 < v22)
      {
        unint64_t v13 = *(void *)(v6 + 8 * i);
        if (v13) {
          goto LABEL_20;
        }
        int64_t i = v12 + 3;
        if (v12 + 3 < v22)
        {
          unint64_t v13 = *(void *)(v6 + 8 * i);
          if (v13) {
            goto LABEL_20;
          }
          int64_t v14 = v12 + 4;
          if (v14 < v22)
          {
            unint64_t v13 = *(void *)(v6 + 8 * v14);
            for (int64_t i = v14; !v13; ++v14)
            {
              int64_t i = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_33;
              }
              if (i >= v22) {
                goto LABEL_30;
              }
              unint64_t v13 = *(void *)(v6 + 8 * i);
            }
LABEL_20:
            unint64_t v9 = (v13 - 1) & v13;
            for (unint64_t j = __clz(__rbit64(v13)) + (i << 6); ; unint64_t j = v21 | (i << 6))
            {
              uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * j);
              swift_getKeyPath();
              swift_getKeyPath();
              swift_retain();
              sub_2FBBA0();
              swift_release();
              swift_release();
              if (*(void *)(v23 + 16))
              {
                sub_42238(a2, a3);
                char v18 = v17;
                swift_bridgeObjectRelease();
                if (v18) {
                  goto LABEL_29;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              swift_getKeyPath();
              swift_getKeyPath();
              sub_2FBBA0();
              swift_release();
              swift_release();
              if (*(void *)(v23 + 16))
              {
                sub_42238(a2, a3);
                char v20 = v19;
                swift_bridgeObjectRelease();
                if (v20)
                {
LABEL_29:
                  swift_release();
                  return v16;
                }
                uint64_t result = swift_release();
                if (!v9) {
                  goto LABEL_6;
                }
              }
              else
              {
                swift_release();
                uint64_t result = swift_bridgeObjectRelease();
                if (!v9) {
                  goto LABEL_6;
                }
              }
LABEL_28:
              unint64_t v21 = __clz(__rbit64(v9));
              v9 &= v9 - 1;
            }
          }
        }
      }
    }
  }
LABEL_30:
  swift_release();
  return 0;
}

unint64_t sub_44894()
{
  unint64_t result = qword_3FDD88;
  if (!qword_3FDD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FDD88);
  }
  return result;
}

uint64_t sub_448E8()
{
  return sub_44924(&qword_3FDD90, &qword_3FDD98);
}

uint64_t sub_44924(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_37294(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4496C()
{
  unint64_t result = qword_3FDDA0;
  if (!qword_3FDDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FDDA0);
  }
  return result;
}

unint64_t sub_449C4()
{
  unint64_t result = qword_3FDDA8;
  if (!qword_3FDDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FDDA8);
  }
  return result;
}

uint64_t sub_44A20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  Swift::OpaquePointer v3 = (void *)(*a1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_44A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style, &qword_3FDCD8);
}

uint64_t sub_44AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, &qword_3FE620, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__style, &qword_3FDCD8);
}

uint64_t sub_44AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText, (uint64_t *)&unk_400E90);
}

uint64_t sub_44AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, &qword_400E40, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25HighlightAnnotationEntity__hasNoteText, (uint64_t *)&unk_400E90);
}

uint64_t sub_44B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__selectedText, &qword_3FDCF0);
}

uint64_t sub_44B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, (uint64_t *)&unk_400300, (uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__selectedText, &qword_3FDCF0);
}

uint64_t sub_44B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__representativeText, &qword_3FDCF0);
}

uint64_t sub_44BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, (uint64_t *)&unk_400300, (uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__representativeText, &qword_3FDCF0);
}

uint64_t sub_44BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__noteText, &qword_3FDCF0);
}

uint64_t sub_44C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, (uint64_t *)&unk_400300, (uint64_t)&OBJC_IVAR____TtC8BookEPUB31HighlightAnnotationDetailEntity__noteText, &qword_3FDCF0);
}

uint64_t sub_44C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks, &qword_3FDD10);
}

uint64_t sub_44C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, &qword_3FDD18, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__bookmarks, &qword_3FDD10);
}

uint64_t sub_44C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights, &qword_3FDD28);
}

uint64_t sub_44CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, &qword_3FDD30, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__highlights, &qword_3FDD28);
}

uint64_t sub_44CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations, &qword_3FDD40);
}

uint64_t sub_44D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, &qword_3FDD48, (uint64_t)&OBJC_IVAR____TtC8BookEPUB25DocumentAnnotationsEntity__serializedUpgradeAnnotations, &qword_3FDD40);
}

uint64_t sub_44D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations, &qword_3FDD70);
}

uint64_t sub_44D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4097C(a1, a2, a3, a4, &qword_3FDD78, (uint64_t)&OBJC_IVAR____TtC8BookEPUB20BookAnnotationEntity__documentAnnotations, &qword_3FDD70);
}

uint64_t getEnumTagSinglePayload for AnnotationStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnnotationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x44EF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationStyle()
{
  return &type metadata for AnnotationStyle;
}

uint64_t sub_44F28()
{
  return type metadata accessor for AnnotationEntity(0);
}

uint64_t type metadata accessor for AnnotationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FDDD8);
}

uint64_t sub_44F50()
{
  uint64_t result = sub_2FB530();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AnnotationEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AnnotationEntity);
}

uint64_t dispatch thunk of AnnotationEntity.modificationDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AnnotationEntity.location.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AnnotationEntity.location.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AnnotationEntity.location.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of AnnotationEntity.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AnnotationEntity.__allocating_init(uniqueID:documentOrdinal:location:modificationDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of AnnotationEntity.updateFrom(annotationEntity:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_450FC()
{
  return type metadata accessor for HighlightAnnotationEntity(0);
}

uint64_t type metadata accessor for HighlightAnnotationEntity(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_3FDEE0);
}

void sub_45124()
{
  sub_45584(319, &qword_3FDEF0);
  if (v0 <= 0x3F)
  {
    sub_45584(319, (unint64_t *)&qword_3FDEF8);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for HighlightAnnotationEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HighlightAnnotationEntity);
}

uint64_t dispatch thunk of HighlightAnnotationEntity.style.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of HighlightAnnotationEntity.$style.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of HighlightAnnotationEntity.hasNoteText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of HighlightAnnotationEntity.$hasNoteText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of HighlightAnnotationEntity.__allocating_init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of HighlightAnnotationEntity.updateFrom(highlightAnnotationEntity:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t sub_452FC()
{
  return type metadata accessor for HighlightAnnotationDetailEntity(0);
}

uint64_t type metadata accessor for HighlightAnnotationDetailEntity(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_3FE078);
}

void sub_45324()
{
  sub_2FB530();
  if (v0 <= 0x3F)
  {
    sub_45584(319, (unint64_t *)&unk_3FE088);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for HighlightAnnotationDetailEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HighlightAnnotationDetailEntity);
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.selectedText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.$selectedText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.representativeText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.$representativeText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.noteText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.$noteText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.__allocating_init(uniqueID:documentOrdinal:location:style:creationDate:modificationDate:selectedText:representativeText:noteText:)()
{
  return (*(uint64_t (**)(void))(v0 + 488))();
}

uint64_t dispatch thunk of HighlightAnnotationDetailEntity.hasNote.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

void sub_45584(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2FBBC0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_455CC()
{
  return type metadata accessor for DocumentAnnotationsEntity(0);
}

uint64_t type metadata accessor for DocumentAnnotationsEntity(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_3FE2C8);
}

void sub_455F4()
{
  sub_45D14(319, &qword_3FE2D8, &qword_3FDD50);
  if (v0 <= 0x3F)
  {
    sub_45D14(319, &qword_3FE2E0, &qword_3FDD58);
    if (v1 <= 0x3F)
    {
      sub_45D14(319, (unint64_t *)&unk_3FE2E8, &qword_3FDD60);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DocumentAnnotationsEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DocumentAnnotationsEntity);
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.bookmarks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.bookmarks.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.bookmarks.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$bookmarks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$bookmarks.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$bookmarks.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.highlights.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.highlights.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.highlights.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$highlights.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$highlights.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$highlights.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.serializedUpgradeAnnotations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.serializedUpgradeAnnotations.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.serializedUpgradeAnnotations.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$serializedUpgradeAnnotations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$serializedUpgradeAnnotations.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.$serializedUpgradeAnnotations.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.__allocating_init(documentOrdinal:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of DocumentAnnotationsEntity.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t sub_45A2C()
{
  return type metadata accessor for BookAnnotationEntity(0);
}

uint64_t type metadata accessor for BookAnnotationEntity(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_3FE478);
}

uint64_t sub_45A54(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_45A8C()
{
  sub_45D14(319, (unint64_t *)&unk_3FE488, &qword_3FDD80);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for BookAnnotationEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookAnnotationEntity);
}

uint64_t dispatch thunk of BookAnnotationEntity.documentAnnotations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of BookAnnotationEntity.documentAnnotations.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of BookAnnotationEntity.documentAnnotations.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of BookAnnotationEntity.$documentAnnotations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of BookAnnotationEntity.$documentAnnotations.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of BookAnnotationEntity.$documentAnnotations.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of BookAnnotationEntity.totalBookmarks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of BookAnnotationEntity.totalHighlights.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of BookAnnotationEntity.totalNotes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of BookAnnotationEntity.__allocating_init(assetID:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(containing:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of BookAnnotationEntity.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

void sub_45D14(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_37294(a3);
    unint64_t v4 = sub_2FBBC0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_45D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_45D6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 3 || a4 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a4) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_45D94(uint64_t a1)
{
  return sub_45DA8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_45DA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 3 || a4 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a4) {
    return swift_release();
  }
  return result;
}

uint64_t sub_45DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_45D6C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_45E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_45D6C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_45DA8(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for SelectionInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_45EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_45DA8(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_45F04(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_45F4C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_45F94(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_45F9C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t type metadata accessor for AnnotationChange()
{
  return sub_46A94();
}

uint64_t getEnumTagSinglePayload for AnnotationEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnnotationEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x46118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationEventType()
{
  return &type metadata for AnnotationEventType;
}

uint64_t destroy for _AnnotationProvidingOverlap()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for _AnnotationProvidingOverlap(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for _AnnotationProvidingOverlap(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for _AnnotationProvidingOverlap(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _AnnotationProvidingOverlap(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _AnnotationProvidingOverlap(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _AnnotationProvidingOverlap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _AnnotationProvidingOverlap()
{
  return &type metadata for _AnnotationProvidingOverlap;
}

uint64_t dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnnotationProviding.currentHighlightStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnnotationProviding.annotationsChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnnotationProviding.bookmarkChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnnotationProviding.highlightChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AnnotationProviding.upgrade(annotationCFILocations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AnnotationProviding.bookmark(location:documentOrdinal:pageOffset:eventType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))(*(void *)(a11 + 64) + **(int **)(a11 + 64));
  char v18 = (void *)swift_task_alloc();
  *(void *)(v11 + 16) = v18;
  *char v18 = v11;
  v18[1] = sub_46558;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_46558(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of AnnotationProviding.determineOverlap(cfi:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of AnnotationProviding.delete(annotations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of AnnotationProviding.deleteAnnotationsWithUUIDs(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of AnnotationProviding.deleteAssociatedNotesFromAnnotationsWithUUIDs(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 96) + **(int **)(a3 + 96));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_4679C;
  return v9(a1, a2, a3);
}

uint64_t sub_4679C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of AnnotationProviding.highlightAnnotationDetail(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t sub_468A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_46900(uint64_t a1)
{
  return a1;
}

_OWORD *sub_46954(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_46964()
{
  unint64_t result = qword_3FE650;
  if (!qword_3FE650)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3FE650);
  }
  return result;
}

uint64_t sub_469A4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_469BC(uint64_t a1, char a2)
{
  if (a2 == 4 || a2 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_469D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_46A30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_371F4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_46A94()
{
  return swift_getGenericMetadata();
}

uint64_t sub_46AD0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1751607656;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1751607656;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7827308;
      break;
    case 3:
      uint64_t v5 = 0x726170736E617274;
      unint64_t v3 = 0xEB00000000746E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x6D756964656DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 7827308;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000746E65;
      if (v5 == 0x726170736E617274) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_46C48(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2 = 0x69526F547466656CLL;
  unint64_t v3 = 0xEB00000000746867;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x4C6F547468676972;
    }
    else {
      uint64_t v5 = 0x6C61636974726576;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEB00000000746665;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x69526F547466656CLL;
  unint64_t v6 = 0xEB00000000746867;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v2 = 0x4C6F547468676972;
    }
    else {
      uint64_t v2 = 0x6C61636974726576;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xEB00000000746665;
    }
    else {
      unint64_t v3 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_46D60(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C616E696769726FLL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6C616E696769726FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7465697571;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7265706170;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684828002;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1835819363;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7375636F66;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7465697571) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7265706170) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1684828002) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1835819363;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7375636F66) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_46F34()
{
  uint64_t v0 = BookFontTable.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == BookFontTable.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_46FCC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6574616E69676170;
  }
  else {
    uint64_t v3 = 0x6C6C6F726373;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000064;
  }
  if (a2) {
    uint64_t v5 = 0x6574616E69676170;
  }
  else {
    uint64_t v5 = 0x6C6C6F726373;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000064;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_47074(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x676E696461656CLL;
  }
  else {
    uint64_t v3 = 0x7265746E6563;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x676E696461656CLL;
  }
  else {
    uint64_t v5 = 0x7265746E6563;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_47118(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC00000065766974;
  uint64_t v3 = 0x61767265736E6F63;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x647261646E617473;
    }
    else {
      uint64_t v5 = 0x6973736572676761;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xEA00000000006576;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x61767265736E6F63;
  unint64_t v6 = 0xEC00000065766974;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x647261646E617473;
    }
    else {
      uint64_t v3 = 0x6973736572676761;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE800000000000000;
    }
    else {
      unint64_t v2 = 0xEA00000000006576;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_47244(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6C616974696E69;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C616974696E69;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v6 = "placeholderViewAvailable";
      goto LABEL_8;
    case 2:
      int v7 = "waitingOnContentView";
      goto LABEL_6;
    case 3:
      int v7 = "preparingContentView";
      goto LABEL_6;
    case 4:
      int v7 = "contentViewAvailable";
LABEL_6:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = "preparingForReuse";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xD000000000000018;
      uint64_t v10 = "placeholderViewAvailable";
      goto LABEL_18;
    case 2:
      uint64_t v11 = "waitingOnContentView";
      goto LABEL_14;
    case 3:
      uint64_t v11 = "preparingContentView";
      goto LABEL_14;
    case 4:
      uint64_t v11 = "contentViewAvailable";
LABEL_14:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000014;
      goto LABEL_15;
    case 5:
      unint64_t v9 = 0xD000000000000011;
      uint64_t v10 = "preparingForReuse";
LABEL_18:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == v9) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_21;
      }
LABEL_19:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_21:
      }
        char v12 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_4740C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C616974696E69;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C616974696E69;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x800000000030BB20;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 2:
      unint64_t v5 = 0x676E6964616F6CLL;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x646564616F6CLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x800000000030BB20;
      if (v5 == 0xD000000000000015) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x676E6964616F6CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x646564616F6CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_47594(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x726F68636E61;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x726F68636E61;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6B72616D6B6F6F62;
      break;
    case 2:
      uint64_t v5 = 0x6261646E61707865;
      unint64_t v3 = 0xEA0000000000656CLL;
      break;
    case 3:
      uint64_t v5 = 0x6867696C68676968;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x616964656DLL;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x79726F74736968;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6B72616D6B6F6F62) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEA0000000000656CLL;
      if (v5 != 0x6261646E61707865) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE900000000000074;
      if (v5 != 0x6867696C68676968) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x616964656DLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x79726F74736968) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_477A0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x800000000030BC90;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x6B63696C63;
    }
    else {
      unint64_t v5 = 0x6E6F69746361;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x800000000030BC90;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x6B63696C63;
    }
    else {
      unint64_t v2 = 0x6E6F69746361;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xE500000000000000;
    }
    else {
      unint64_t v3 = 0xE600000000000000;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_478A0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1954047342;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1954047342;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x73756F6976657270;
      break;
    case 2:
      uint64_t v5 = 0x706168437478656ELL;
      unint64_t v3 = 0xEB00000000726574;
      break;
    case 3:
      uint64_t v5 = 0x73756F6976657270;
      unint64_t v3 = 0xEF72657470616843;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x73756F6976657270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x706168437478656ELL;
      unint64_t v6 = 0xEB00000000726574;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF72657470616843;
      if (v5 == 0x73756F6976657270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_47A48(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C6C6F726373;
  }
  else {
    uint64_t v3 = 1684107116;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C6C6F726373;
  }
  else {
    uint64_t v5 = 1684107116;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_47AE4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000012;
  }
  else {
    unint64_t v3 = 0x614D746E65696C63;
  }
  if (v2) {
    unint64_t v4 = 0xED0000646567616ELL;
  }
  else {
    unint64_t v4 = 0x800000000030BE80;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 0x614D746E65696C63;
  }
  if (a2) {
    unint64_t v6 = 0x800000000030BE80;
  }
  else {
    unint64_t v6 = 0xED0000646567616ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_47B9C(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEF6E6F6974636172;
  unint64_t v3 = 0x65746E4972657375;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0x800000000030BE30;
    }
    else {
      unint64_t v4 = 0x800000000030BE50;
    }
    unint64_t v5 = 0xD000000000000013;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  unint64_t v5 = 0x65746E4972657375;
  unint64_t v4 = 0xEF6E6F6974636172;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      unint64_t v2 = 0x800000000030BE30;
    }
    else {
      unint64_t v2 = 0x800000000030BE50;
    }
    unint64_t v3 = 0xD000000000000013;
  }
LABEL_10:
  if (v5 == v3 && v4 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_47CB0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E69686372616573;
  unint64_t v3 = 0xE900000000000067;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E69686372616573;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x646574726F6261;
      break;
    case 2:
      uint64_t v5 = 0x526C616974726170;
      unint64_t v3 = 0xEE0073746C757365;
      break;
    case 3:
      uint64_t v5 = 0x6574656C706D6F63;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701736302;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000067;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x646574726F6261) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEE0073746C757365;
      if (v5 != 0x526C616974726170) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6574656C706D6F63;
      unint64_t v6 = 0xE900000000000064;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701736302) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_47E94(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x69526F547466656CLL;
  unint64_t v3 = 0xEB00000000746867;
  uint64_t v4 = a1;
  uint64_t v5 = 0x69526F547466656CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4C6F547468676972;
      uint64_t v6 = 7628389;
      goto LABEL_5;
    case 2:
      uint64_t v5 = 0x746F426F54706F74;
      uint64_t v6 = 7171956;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x6F546D6F74746F62;
      uint64_t v6 = 7368532;
LABEL_5:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xEB00000000746867;
  switch(a2)
  {
    case 1:
      uint64_t v8 = 0x4C6F547468676972;
      uint64_t v9 = 7628389;
      goto LABEL_12;
    case 2:
      uint64_t v2 = 0x746F426F54706F74;
      unint64_t v7 = 0xEB000000006D6F74;
      goto LABEL_9;
    case 3:
      uint64_t v8 = 0x6F546D6F74746F62;
      uint64_t v9 = 7368532;
LABEL_12:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 == v8) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_15:
      }
        char v10 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t BookThemeViewModel.font.getter()
{
  return swift_retain();
}

uint64_t BookThemeViewModel.accessibilityDescription.getter()
{
  sub_371F4(&qword_403ED0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_32BAE0;
  char v2 = *(unsigned char *)(v0 + 49);
  char v3 = *(unsigned char *)(v0 + 50);
  uint64_t v4 = *(void *)(v0 + 104);
  LOBYTE(v33) = *(unsigned char *)(v0 + 48);
  BYTE1(v33) = v2;
  BYTE2(v33) = v3;
  long long v34 = *(_OWORD *)(v0 + 56);
  long long v35 = *(_OWORD *)(v0 + 72);
  long long v36 = *(_OWORD *)(v0 + 88);
  uint64_t v37 = v4;
  uint64_t v5 = *(void *)(v0 + 16);
  if (v5)
  {
    uint64_t v7 = *(void *)(v5 + 40);
    uint64_t v6 = *(void **)(v5 + 48);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v7;
  v8._object = v6;
  Swift::String v9 = BookThemeEntity.accessibleDescription(fontDisplayName:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(Swift::String *)(v1 + 32) = v9;
  if ((BookThemeViewModel.enabled.getter() & 1) == 0
    || v5
    && (swift_getKeyPath(),
        uint64_t v33 = v5,
        sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel), sub_2FB5D0(), swift_release(), swift_beginAccess(), *(unsigned char *)(v5 + 32) == 1)&& *(void *)(v5 + 24) == 1)
  {
    id v10 = BookEPUBBundle();
    NSString v11 = sub_2FC140();
    NSString v12 = sub_2FC140();
    id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

    uint64_t v14 = sub_2FC180();
    uint64_t v16 = v15;

    unint64_t v18 = *(void *)(v1 + 16);
    unint64_t v17 = *(void *)(v1 + 24);
    if (v18 >= v17 >> 1) {
      uint64_t v1 = (uint64_t)sub_49E88((void *)(v17 > 1), v18 + 1, 1, (void *)v1);
    }
    *(void *)(v1 + 16) = v18 + 1;
    uint64_t v19 = v1 + 16 * v18;
    *(void *)(v19 + 32) = v14;
    *(void *)(v19 + 40) = v16;
  }
  else
  {
    BookThemeViewModel.overlayState.getter(&v32);
    switch((char)v32)
    {
      case 1:
      case 2:
      case 3:
        id v20 = BookEPUBBundle();
        NSString v21 = sub_2FC140();
        NSString v22 = sub_2FC140();
        id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

        uint64_t v24 = sub_2FC180();
        uint64_t v26 = v25;

        unint64_t v28 = *(void *)(v1 + 16);
        unint64_t v27 = *(void *)(v1 + 24);
        if (v28 >= v27 >> 1) {
          uint64_t v1 = (uint64_t)sub_49E88((void *)(v27 > 1), v28 + 1, 1, (void *)v1);
        }
        *(void *)(v1 + 16) = v28 + 1;
        uint64_t v29 = v1 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        break;
      default:
        break;
    }
  }
  uint64_t v32 = v1;
  sub_371F4((uint64_t *)&unk_400CB0);
  sub_49854();
  uint64_t v30 = sub_2FC0F0();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t BookThemeViewModel.enabled.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_getKeyPath();
    sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel);
    sub_2FB5D0();
    swift_release();
    swift_beginAccess();
    if (*(unsigned char *)(v1 + 32) == 1 && !*(void *)(v1 + 24)) {
      goto LABEL_5;
    }
  }
  swift_getKeyPath();
  sub_49FA8(&qword_403B60, (void (*)(uint64_t))type metadata accessor for BookThemeViewModel);
  sub_2FB5D0();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 41))
  {
LABEL_5:
    char v2 = 1;
  }
  else
  {
    uint64_t v3 = *(unsigned __int8 *)(v0 + 48);
    char v2 = 1;
    switch(v3)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        char v2 = sub_2FD1F0();
        break;
      default:
        break;
    }
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t BookThemeViewModel.unavailable.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return 0;
  }
  swift_getKeyPath();
  sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel);
  sub_2FB5D0();
  swift_release();
  swift_beginAccess();
  if (*(void *)(v1 + 24) == 1) {
    return *(unsigned __int8 *)(v1 + 32);
  }
  else {
    return 0;
  }
}

uint64_t BookThemeViewModel.overlayState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
LABEL_7:
    if (*(void *)(v1 + 56)) {
      LOBYTE(v6) = 3;
    }
    else {
      LOBYTE(v6) = 0;
    }
    goto LABEL_12;
  }
  swift_getKeyPath();
  sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel);
  sub_2FB5D0();
  swift_release();
  uint64_t v4 = (uint64_t *)(v3 + 24);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v3 + 32) != 1 || (uint64_t v6 = *v4, *v4 != 1))
  {
    swift_getKeyPath();
    sub_2FB5D0();
    swift_release();
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v3 + 32) == 1 && (unint64_t)*v4 > 1)
    {
      LOBYTE(v6) = 1;
      goto LABEL_12;
    }
    swift_getKeyPath();
    sub_2FB5D0();
    uint64_t result = swift_release();
    if (*(unsigned char *)(v3 + 32) != 1)
    {
      LOBYTE(v6) = 2;
      goto LABEL_12;
    }
    goto LABEL_7;
  }
LABEL_12:
  *a1 = v6;
  return result;
}

uint64_t BookThemeViewModel.accessibilityHint.getter()
{
  uint64_t v1 = v0;
  if ((BookThemeViewModel.enabled.getter() & 1) == 0
    || (uint64_t v2 = *(void *)(v0 + 16)) != 0
    && (swift_getKeyPath(),
        sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel), sub_2FB5D0(), swift_release(), swift_beginAccess(), *(unsigned char *)(v2 + 32) == 1)&& *(void *)(v2 + 24) == 1)
  {
    id v3 = BookEPUBBundle();
    NSString v4 = sub_2FC140();
    NSString v5 = sub_2FC140();
    id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

    sub_2FC180();
    sub_371F4(&qword_3FE718);
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = v7;
    *(_OWORD *)(v7 + 16) = xmmword_32BAE0;
    BOOL v9 = *(unsigned char *)(v1 + 40) == 0;
    if (*(unsigned char *)(v1 + 40)) {
      uint64_t v10 = 1312902231;
    }
    else {
      uint64_t v10 = 0x69462D6957;
    }
    if (v9) {
      unint64_t v11 = 0xE500000000000000;
    }
    else {
      unint64_t v11 = 0xE400000000000000;
    }
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_4A03C();
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v11;
    uint64_t v12 = sub_2FC150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    BookThemeViewModel.overlayState.getter(&v18);
    if (v18 == 1)
    {
      id v13 = BookEPUBBundle();
      NSString v14 = sub_2FC140();
      NSString v15 = sub_2FC140();
      id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

      uint64_t v12 = sub_2FC180();
    }
    else
    {
      return 0;
    }
  }
  return v12;
}

uint64_t BookThemeViewModel.defaultFontAvailable.getter()
{
  swift_getKeyPath();
  sub_49FA8(&qword_403B60, (void (*)(uint64_t))type metadata accessor for BookThemeViewModel);
  sub_2FB5D0();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_48D4C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_49FA8(&qword_403B60, (void (*)(uint64_t))type metadata accessor for BookThemeViewModel);
  sub_2FB5D0();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 41);
  return result;
}

uint64_t sub_48E08()
{
  return swift_release();
}

uint64_t BookThemeViewModel.defaultFontAvailable.setter()
{
  return swift_release();
}

uint64_t sub_48FA8(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a1 + 41) = a2;
  return result;
}

void (*BookThemeViewModel.defaultFontAvailable.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_getKeyPath();
  void v3[4] = OBJC_IVAR____TtC8BookEPUB18BookThemeViewModel___observationRegistrar;
  void *v3 = v1;
  v3[5] = sub_49FA8(&qword_403B60, (void (*)(uint64_t))type metadata accessor for BookThemeViewModel);
  sub_2FB5D0();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_2FB5F0();
  swift_release();
  swift_beginAccess();
  return sub_49124;
}

void sub_49124(void **a1)
{
  uint64_t v1 = *a1;
  swift_endAccess();
  void *v1 = v1[3];
  swift_getKeyPath();
  sub_2FB5E0();
  swift_release();

  free(v1);
}

uint64_t PaginationLayoutConfiguration.pageProgressDirection.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t BookThemeViewModel.title.getter()
{
  return BookThemeType.localizedTitle.getter();
}

uint64_t BookThemeViewModel.fontFamily.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  int v2 = *(unsigned __int8 *)(v0 + 50);
  uint64_t v3 = *(void *)(v0 + 56);
  if (v3 && *(void *)(v3 + 16) && (unint64_t v4 = sub_421AC(v2), (v5 & 1) != 0))
  {
    uint64_t v1 = *(void *)(*(void *)(v3 + 56) + 16 * v4);
    swift_bridgeObjectRetain();
  }
  else
  {
    switch(v1)
    {
      case 1:
        if (v2) {
          goto LABEL_15;
        }
        uint64_t v1 = 0x206F63696C627550;
        break;
      case 2:
        if (v2) {
          goto LABEL_15;
        }
        uint64_t v1 = 0x72657472616843;
        break;
      case 3:
        if (v2) {
          goto LABEL_15;
        }
        uint64_t v1 = 0x752D6D6574737973;
        break;
      case 4:
        if (v2) {
          goto LABEL_15;
        }
        uint64_t v1 = 0x5420616C656E6143;
        break;
      case 5:
        if (v2) {
LABEL_15:
        }
          uint64_t v1 = sub_7DEE4();
        else {
          uint64_t v1 = 0x20616D69786F7250;
        }
        break;
      default:
        return v1;
    }
  }
  return v1;
}

uint64_t BookThemeViewModel.backgroundColor.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_4937C((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))BookThemeEntity.backgroundColor.getter, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t BookThemeViewModel.textColor.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_4937C((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))BookThemeEntity.textColor.getter, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t BookThemeViewModel.textSecondaryColor.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_4937C((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))BookThemeEntity.secondaryLabelColor.getter, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t BookThemeViewModel.textTertiaryColor.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_4937C((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))BookThemeEntity.tertiaryLabel.getter, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_4937C(uint64_t (*a1)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a1(a1, a2, a3, a4, a5, a6, a7, a8);
}

BOOL BookThemeViewModel.isFontBolded.getter()
{
  if (*(void *)(v0 + 56)) {
    return *(unsigned char *)(v0 + 64) & 1;
  }
  else {
    return *(unsigned char *)(v0 + 48) == 3;
  }
}

uint64_t BookThemeViewModel.isDarkTheme.getter()
{
  if (*(unsigned char *)(v0 + 49) == 1) {
    char v1 = 1;
  }
  else {
    char v1 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t BookThemeViewModel.hasDarkBackground.getter()
{
  if (*(unsigned char *)(v0 + 49) == 1)
  {
    char v1 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    return v1 & 1;
  }
  uint64_t v2 = *(unsigned __int8 *)(v0 + 48);
  char v3 = sub_2FD1F0();
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    char v1 = 1;
    switch(v2)
    {
      case 1:
        goto LABEL_7;
      default:
        char v1 = sub_2FD1F0();
        break;
    }
    goto LABEL_7;
  }
  char v1 = 1;
  return v1 & 1;
}

uint64_t BookThemeViewModel.__allocating_init(theme:font:defaultFontFamily:defaultFontAvailable:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  char v11 = *a1;
  char v12 = a1[1];
  char v13 = a1[2];
  long long v17 = *(_OWORD *)(a1 + 24);
  long long v18 = *(_OWORD *)(a1 + 8);
  long long v16 = *(_OWORD *)(a1 + 40);
  uint64_t v14 = *((void *)a1 + 7);
  *(unsigned char *)(v10 + 40) = MGGetBoolAnswer();
  sub_2FB600();
  *(unsigned char *)(v10 + 48) = v11;
  *(unsigned char *)(v10 + 49) = v12;
  *(unsigned char *)(v10 + 50) = v13;
  *(_OWORD *)(v10 + 56) = v18;
  *(_OWORD *)(v10 + 72) = v17;
  *(_OWORD *)(v10 + 88) = v16;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(unsigned char *)(v10 + 41) = a5;
  return v10;
}

uint64_t BookThemeViewModel.init(theme:font:defaultFontFamily:defaultFontAvailable:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v10 = *a1;
  char v11 = a1[1];
  char v12 = a1[2];
  long long v16 = *(_OWORD *)(a1 + 24);
  long long v17 = *(_OWORD *)(a1 + 8);
  long long v15 = *(_OWORD *)(a1 + 40);
  uint64_t v13 = *((void *)a1 + 7);
  *(unsigned char *)(v5 + 40) = MGGetBoolAnswer();
  sub_2FB600();
  *(unsigned char *)(v5 + 48) = v10;
  *(unsigned char *)(v5 + 49) = v11;
  *(unsigned char *)(v5 + 50) = v12;
  *(_OWORD *)(v5 + 56) = v17;
  *(_OWORD *)(v5 + 72) = v16;
  *(_OWORD *)(v5 + 88) = v15;
  *(void *)(v5 + 104) = v13;
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  *(void *)(v5 + 32) = a4;
  *(unsigned char *)(v5 + 41) = a5;
  return v5;
}

BOOL BookThemeViewModel.isOverride.getter()
{
  return *(void *)(v0 + 56) != 0;
}

BOOL BookThemeViewModel.downloadable.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1
    && (swift_getKeyPath(),
        sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel), sub_2FB5D0(), swift_release(), swift_beginAccess(), *(unsigned char *)(v1 + 32) == 1))
  {
    return *(void *)(v1 + 24) > 1uLL;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_49854()
{
  unint64_t result = qword_4013A0;
  if (!qword_4013A0)
  {
    sub_37294((uint64_t *)&unk_400CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4013A0);
  }
  return result;
}

uint64_t BookThemeViewModel.downloading.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_getKeyPath();
    sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel);
    sub_2FB5D0();
    swift_release();
    swift_beginAccess();
    char v2 = *(unsigned char *)(v1 + 32) ^ 1;
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t BookThemeViewModel.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB18BookThemeViewModel___observationRegistrar;
  uint64_t v2 = sub_2FB610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BookThemeViewModel.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB18BookThemeViewModel___observationRegistrar;
  uint64_t v2 = sub_2FB610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

void sub_49AAC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)v1 + 48);
}

uint64_t sub_49ABC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_49FA8((unint64_t *)&qword_3FE708, (void (*)(uint64_t))type metadata accessor for ThemeFontViewModel);
  sub_2FB5D0();
  swift_release();
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 32);
  *(void *)a2 = *(void *)(v3 + 24);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_49B80()
{
  return swift_release();
}

void *sub_49C54(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE878);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      char v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      char v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4B70C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_49D78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4((uint64_t *)&unk_403DF0);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4B7FC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_49E88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_403ED0);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4B8E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_49FA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for BookThemeViewModel()
{
  uint64_t result = qword_3FE758;
  if (!qword_3FE758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_4A03C()
{
  unint64_t result = qword_406860;
  if (!qword_406860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_406860);
  }
  return result;
}

uint64_t sub_4A090()
{
  return sub_4C5A8();
}

unint64_t sub_4A0AC()
{
  unint64_t result = qword_3FE720;
  if (!qword_3FE720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FE720);
  }
  return result;
}

unint64_t sub_4A104()
{
  unint64_t result = qword_3FE728;
  if (!qword_3FE728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FE728);
  }
  return result;
}

uint64_t sub_4A158()
{
  return type metadata accessor for BookThemeViewModel();
}

uint64_t sub_4A160()
{
  uint64_t result = sub_2FB610();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BookThemeViewModel(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookThemeViewModel);
}

uint64_t dispatch thunk of BookThemeViewModel.__allocating_init(theme:font:defaultFontFamily:defaultFontAvailable:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for BookThemeViewModel.OverlayState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4A314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookThemeViewModel.OverlayState()
{
  return &type metadata for BookThemeViewModel.OverlayState;
}

void *sub_4A34C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE808);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4B9DC(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4A470(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE860);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4B70C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4A598(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_4AB5C(a1, a2, a3, a4, &qword_3FE850, &qword_3FE828);
}

void *sub_4A5AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4((uint64_t *)&unk_3FE880);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4BACC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4A6BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_403F90);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4BCAC(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4A7E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE810);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4B70C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4A90C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE868);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4C164(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4AA1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4((uint64_t *)&unk_403E90);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4BD9C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4AB48(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_4AB5C(a1, a2, a3, a4, (uint64_t *)&unk_403F20, &qword_3FE848);
}

void *sub_4AB5C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_371F4(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      _OWORD v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      long long v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      long long v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4C344(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_4AC78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE870);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4C250(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4AD88(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_4AB5C(a1, a2, a3, a4, &qword_3FE820, &qword_3FE828);
}

void *sub_4AD9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_403E60);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4B70C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4AEC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE838);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4BE8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_4AFEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4B37C(a1, a2, a3, a4, (uint64_t *)&unk_404050, type metadata accessor for ContentLoaderViewReusePool.DataEvent, type metadata accessor for ContentLoaderViewReusePool.DataEvent);
}

void *sub_4B010(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_4AB5C(a1, a2, a3, a4, &qword_403E00, &qword_3FE818);
}

void *sub_4B024(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_403E30);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4C06C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4B14C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE858);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4BBC0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4B25C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_407BB0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_4BF84(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_4B358(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4B37C(a1, a2, a3, a4, &qword_3FE840, (uint64_t (*)(void))type metadata accessor for HistoryEntity, (uint64_t (*)(void))type metadata accessor for HistoryEntity);
}

uint64_t sub_4B37C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    long long v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_371F4(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  long long v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_2FD000();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_4C44C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_4B5FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_371F4(&qword_3FE830);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_4C164(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_4B70C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4B7FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4B8E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4B9DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 40 * a1 + 32);
    size_t v6 = 40 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4BACC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4BBC0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4BCAC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4BD9C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 72 * a1 + 32);
    size_t v6 = 72 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4BE8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4BF84(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4C06C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

char *sub_4C164(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4C250(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4C344(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_371F4(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4C44C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_4C5A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 41) = v2;
  return result;
}

uint64_t sub_4C5FC()
{
  return sub_E8608(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t SearchResultEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2FB570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SearchResultEntity.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_2FB570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t SearchResultEntity.result.getter()
{
  type metadata accessor for SearchResultEntity(0);

  return swift_unknownObjectRetain();
}

uint64_t type metadata accessor for SearchResultEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FE908);
}

uint64_t SearchResultEntity.result.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SearchResultEntity(0) + 20);
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SearchResultEntity.result.modify())()
{
  return address(of:);
}

uint64_t SearchResultEntity.chapter.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SearchResultEntity(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultEntity.chapter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchResultEntity(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchResultEntity.chapter.modify())()
{
  return address(of:);
}

uint64_t SearchResultEntity.passage.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultEntity(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_4C8F0(v4, v5);
}

uint64_t sub_4C8F0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SearchResultEntity.passage.setter(__n128 *a1)
{
  __n128 v6 = a1[1];
  __n128 v7 = *a1;
  unint64_t v2 = a1[2].n128_u64[0];
  unint64_t v3 = a1[2].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for SearchResultEntity(0) + 28));
  sub_4C9AC(v4->n128_u64[0], v4->n128_i64[1]);
  __n128 result = v6;
  *uint64_t v4 = v7;
  v4[1] = v6;
  v4[2].n128_u64[0] = v2;
  v4[2].n128_u64[1] = v3;
  return result;
}

uint64_t sub_4C9AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*SearchResultEntity.passage.modify())()
{
  return address(of:);
}

uint64_t SearchResultEntity.pageName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SearchResultEntity(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultEntity.pageName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchResultEntity(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchResultEntity.pageName.modify())()
{
  return address(of:);
}

uint64_t SearchResultEntity.description.getter()
{
  sub_2FCDD0(100);
  v9._countAndFlagsBits = 0xD00000000000001ELL;
  v9._object = (void *)0x800000000030C7E0;
  sub_2FC260(v9);
  sub_2FB570();
  sub_4CD98((unint64_t *)&qword_3FE890);
  v10._countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x736572202020200ALL;
  v11._object = (void *)0xEE00203D20746C75;
  sub_2FC260(v11);
  uint64_t v1 = (int *)type metadata accessor for SearchResultEntity(0);
  sub_371F4(&qword_3FE898);
  sub_2FCFA0();
  v12._countAndFlagsBits = 0x616863202020200ALL;
  v12._object = (void *)0xEF203D2072657470;
  sub_2FC260(v12);
  uint64_t v2 = (uint64_t *)(v0 + v1[6]);
  uint64_t v3 = *v2;
  uint64_t v4 = (void *)v2[1];
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v3;
  v13._object = v4;
  sub_2FC260(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x736170202020200ALL;
  v14._object = (void *)0xEF203D2065676173;
  sub_2FC260(v14);
  sub_4C8F0(*(void *)(v0 + v1[7]), *(void *)(v0 + v1[7] + 8));
  sub_371F4(&qword_3FE8A0);
  v15._countAndFlagsBits = sub_2FC1E0();
  sub_2FC260(v15);
  swift_bridgeObjectRelease();
  v16._object = (void *)0x800000000030C800;
  v16._countAndFlagsBits = 0xD000000000000010;
  sub_2FC260(v16);
  uint64_t v5 = (uint64_t *)(v0 + v1[8]);
  uint64_t v6 = *v5;
  __n128 v7 = (void *)v5[1];
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v6;
  v17._object = v7;
  sub_2FC260(v17);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_4CD64()
{
  return sub_4CD98(&qword_3FE8A8);
}

uint64_t sub_4CD98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2FB570();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2FB570();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    Swift::String v9 = (uint64_t *)((char *)a1 + v8);
    Swift::String v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    Swift::String v13 = (uint64_t *)((char *)a1 + v12);
    Swift::String v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = *(uint64_t *)((char *)a2 + v12 + 8);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      *Swift::String v13 = *v14;
      v13[1] = v15;
      uint64_t v16 = v14[3];
      _OWORD v13[2] = v14[2];
      v13[3] = v16;
      uint64_t v17 = v14[4];
      uint64_t v18 = v14[5];
      v13[4] = v17;
      v13[5] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = *((_OWORD *)v14 + 1);
      *(_OWORD *)Swift::String v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v20;
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    }
    uint64_t v21 = a3[8];
    unint64_t v22 = (uint64_t *)((char *)a1 + v21);
    unint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *unint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2FB570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2FB570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  Swift::String v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  Swift::String v13 = (void *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  if (v14)
  {
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = v13[3];
    v12[2] = v13[2];
    uint64_t v12[3] = v15;
    uint64_t v16 = v13[4];
    uint64_t v17 = v13[5];
    void v12[4] = v16;
    v12[5] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v18;
    *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  }
  uint64_t v19 = a3[8];
  long long v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2FB570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  Swift::String v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = *(void *)(a1 + v10 + 8);
  uint64_t v14 = *(void *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      void *v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11[2] = v12[2];
      void v11[3] = v12[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11[4] = v12[4];
      v11[5] = v12[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_4D300((uint64_t)v11);
      long long v16 = *((_OWORD *)v12 + 1);
      long long v15 = *((_OWORD *)v12 + 2);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v16;
      *((_OWORD *)v11 + 2) = v15;
    }
  }
  else if (v14)
  {
    void *v11 = *v12;
    v11[1] = v12[1];
    v11[2] = v12[2];
    void v11[3] = v12[3];
    v11[4] = v12[4];
    v11[5] = v12[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)v12;
    long long v18 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v18;
    *(_OWORD *)uint64_t v11 = v17;
  }
  uint64_t v19 = a3[8];
  long long v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  void *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_4D300(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SearchResultEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2FB570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (long long *)(a2 + v8);
  long long v12 = v11[2];
  long long v13 = *v11;
  v10[1] = v11[1];
  v10[2] = v12;
  *uint64_t v10 = v13;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for SearchResultEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2FB570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_unknownObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  if (!*(void *)(a1 + v12 + 8)) {
    goto LABEL_5;
  }
  uint64_t v15 = *(void *)(v14 + 8);
  if (!v15)
  {
    sub_4D300(v13);
LABEL_5:
    long long v18 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v18;
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
    goto LABEL_6;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v14 + 40);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  *(void *)(v13 + 40) = v17;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v19 = a3[8];
  long long v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  void *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4D538);
}

uint64_t sub_4D538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2FB570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SearchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4D60C);
}

uint64_t sub_4D60C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2FB570();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_4D6C8()
{
  uint64_t result = sub_2FB570();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_4D774()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager);
  uint64_t v2 = OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController;
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController), "searchString"));
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_2FC180();
    uint64_t v7 = v6;

    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchRecentsPersistence + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(v5, v7, ObjectType, v8);
    swift_bridgeObjectRelease();
    unint64_t v10 = *(void **)(v1 + v2);
    id result = [v10 isSearching];
    if ((result & 1) == 0)
    {
      if (([v10 wasAborted] & 1) != 0
        || (id result = [v10 hasPartialResults], (result & 1) == 0)
        && (id result = [v10 searchWasCompleted], (result & 1) == 0))
      {
        return [v10 beginSearchWithReportAnalytics:1];
      }
    }
  }
  return result;
}

id sub_4D8B4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager);
  uint64_t v2 = OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController;
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController), "searchString"));
  if (result)
  {
    uint64_t v4 = result;
    sub_2FC180();

    uint64_t v5 = sub_2FC240();
    id result = (id)swift_bridgeObjectRelease();
    if (v5 >= 3)
    {
      uint64_t v6 = *(void **)(v1 + v2);
      if (([v6 isSearching] & 1) == 0
        && ([v6 wasAborted] & 1) == 0
        && ([v6 hasPartialResults] & 1) == 0
        && [v6 searchWasCompleted])
      {
        goto LABEL_9;
      }
      char v7 = sub_2FD1F0();
      id result = (id)swift_bridgeObjectRelease();
      if (v7) {
        return result;
      }
      uint64_t v8 = *(void **)(v1 + v2);
      if (([v8 isSearching] & 1) == 0)
      {
        if (([v8 wasAborted] & 1) == 0
          && ([v8 hasPartialResults] & 1) == 0)
        {
          [v8 searchWasCompleted];
        }
        char v9 = sub_2FD1F0();
        id result = (id)swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {
          id v10 = [*(id *)(v1 + v2) results];
          sub_371F4(&qword_3FE898);
          unint64_t v11 = sub_2FC3F0();

          if (v11 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v12 = sub_2FD030();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
          }
          swift_bridgeObjectRelease();
          uint64_t v13 = *(void **)(v1 + v2);
          if (v12)
          {
            uint64_t v14 = "continueSearch";
          }
          else
          {
            uint64_t v14 = "beginSearchWithReportAnalytics:";
          }
          return [v13 v14];
        }
      }
      else
      {
LABEL_9:
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_4DC44(uint64_t result, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v2;
  uint64_t v8 = result;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t)sub_4E9E4(v8, a2, 10);
    char v12 = v31;
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v32[0] = result;
    v32[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v4)
      {
LABEL_67:
        __break(1u);
        return result;
      }
      if (v4 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v10 = (BYTE1(result) - 48);
      if (v4 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v10 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v13 = v4 - 3;
        if (v13)
        {
          uint64_t v14 = (unsigned __int8 *)v32 + 3;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_31;
            }
            uint64_t v16 = 10 * v10;
            if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
              goto LABEL_31;
            }
            uint64_t v10 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              goto LABEL_31;
            }
            char v12 = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (!v4)
        {
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        if (v4 != 1 && (BYTE1(result) - 48) <= 9u)
        {
          if (v4 == 2)
          {
            char v12 = 0;
            uint64_t v10 = -(uint64_t)(BYTE1(result) - 48);
            goto LABEL_44;
          }
          if ((BYTE2(result) - 48) <= 9u)
          {
            uint64_t v10 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
            uint64_t v21 = v4 - 3;
            if (!v21) {
              goto LABEL_43;
            }
            unint64_t v28 = (unsigned __int8 *)v32 + 3;
            while (1)
            {
              unsigned int v29 = *v28 - 48;
              if (v29 > 9) {
                break;
              }
              uint64_t v30 = 10 * v10;
              if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
                break;
              }
              uint64_t v10 = v30 - v29;
              if (__OFSUB__(v30, v29)) {
                break;
              }
              char v12 = 0;
              ++v28;
              if (!--v21) {
                goto LABEL_44;
              }
            }
          }
        }
LABEL_31:
        uint64_t v10 = 0;
        char v12 = 1;
        goto LABEL_44;
      }
      if (!v4 || (result - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v10 = (result - 48);
      if (v4 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v10 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v17 = v4 - 2;
        if (v17)
        {
          long long v18 = (unsigned __int8 *)v32 + 2;
          while (1)
          {
            unsigned int v19 = *v18 - 48;
            if (v19 > 9) {
              goto LABEL_31;
            }
            uint64_t v20 = 10 * v10;
            if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
              goto LABEL_31;
            }
            uint64_t v10 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              goto LABEL_31;
            }
            char v12 = 0;
            ++v18;
            if (!--v17) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    char v12 = 0;
    goto LABEL_44;
  }
  if ((result & 0x1000000000000000) != 0) {
    char v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    char v9 = (unsigned __int8 *)sub_2FCE40();
  }
  uint64_t v10 = (uint64_t)sub_4EACC(v9, v5, 10);
  char v12 = v11 & 1;
LABEL_44:
  if (v12) {
    return 0;
  }
  v32[0] = v10;
  if (sub_2FD1A0() == v8 && v22 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v25 = *(void *)(*(void *)(v7 + OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager)
                  + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_pageNumberProvider
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  id result = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(ObjectType, v25);
  if (result < 1)
  {
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v27 = result;
  id result = 0;
  if (v10 >= 1 && v27 >= v10)
  {
    sub_7AECC(v10);
    return v10;
  }
  return result;
}

id sub_4E014()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager);
  uint64_t v2 = OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
  if (([v3 isSearching] & 1) != 0
    || ([v3 wasAborted] & 1) != 0)
  {
LABEL_6:
    char v4 = sub_2FD1F0();
    id result = (id)swift_bridgeObjectRelease();
    if ((v4 & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  if (([v3 hasPartialResults] & 1) == 0)
  {
    [v3 searchWasCompleted];
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v6 = *(void **)(v1 + v2);

  return [v6 loadMore];
}

id sub_4E1B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchInteractor(0);
  return [super dealloc];
}

uint64_t sub_4E280()
{
  return type metadata accessor for SearchInteractor(0);
}

uint64_t type metadata accessor for SearchInteractor(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_3FE990);
}

uint64_t sub_4E2A8()
{
  uint64_t result = sub_2FB8A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_4E34C(unint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v4 = v1;
    uint64_t v5 = sub_4F234(a1, (uint64_t)v4);

    uint64_t v6 = *(void **)(*(void *)&v4[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager]
                  + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
    if ([v6 isSearching])
    {
      char v7 = 0;
    }
    else if ([v6 wasAborted])
    {
      char v7 = 1;
    }
    else if ([v6 hasPartialResults])
    {
      char v7 = 2;
    }
    else if ([v6 searchWasCompleted])
    {
      char v7 = 3;
    }
    else
    {
      char v7 = 4;
    }
    char v8 = v7;
    sub_C087C(v5, &v8);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_4E464(unint64_t a1, char a2)
{
  if (a2)
  {
    char v4 = (void *)(*(void *)&v2[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager]
                  + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_analyticsProvider);
    if (*v4)
    {
      uint64_t v5 = v4[1];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = 1;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      uint64_t v18 = 0;
      char v19 = 7;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 8))(&v14, ObjectType, v5);
    }
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    char v7 = *(void **)(*(void *)&v2[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager]
                  + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
    if ([v7 isSearching])
    {
      char v8 = 0;
    }
    else if ([v7 wasAborted])
    {
      char v8 = 1;
    }
    else if ([v7 hasPartialResults])
    {
      char v8 = 2;
    }
    else if ([v7 searchWasCompleted])
    {
      char v8 = 3;
    }
    else
    {
      char v8 = 4;
    }
    LOBYTE(v14) = v8;
    sub_C0D9C((char *)&v14);
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = v2;
    uint64_t v11 = sub_4F234(a1, (uint64_t)v10);

    char v12 = *(void **)(*(void *)&v10[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager]
                   + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
    if ([v12 isSearching])
    {
      char v13 = 0;
    }
    else if ([v12 wasAborted])
    {
      char v13 = 1;
    }
    else if ([v12 hasPartialResults])
    {
      char v13 = 2;
    }
    else if ([v12 searchWasCompleted])
    {
      char v13 = 3;
    }
    else
    {
      char v13 = 4;
    }
    LOBYTE(v14) = v13;
    sub_C087C(v11, (char *)&v14);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_4E69C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 text];
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_2FC180();
  unint64_t v8 = v7;

  [a1 searchStringRange];
  sub_2FC750();
  if (v10)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t result = swift_unknownObjectRelease();
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  unint64_t v11 = v9;
  sub_2FC330();
  sub_2FC330();
  uint64_t v12 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v12 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 >> 14 == 4 * v12)
  {
    swift_bridgeObjectRelease();
    sub_2FCC40();
  }
  else
  {
    sub_4E8B4(v11, v6, v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_2FC210();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_2FC210();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_2FC210();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v22;
  sub_129248();

  return swift_unknownObjectRelease();
}

unint64_t sub_4E8B4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_2FC330();
  }
  __break(1u);
  return result;
}

void *sub_4E900(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_371F4(&qword_3FE9A0);
  id v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_4E968(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2FC2D0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_2FC290();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_4E9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2FC320();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_4ED48();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_2FCE40();
  }
LABEL_7:
  uint64_t v11 = sub_4EACC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_4EACC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_4ED48()
{
  unint64_t v0 = sub_2FC330();
  uint64_t v4 = sub_4EDC8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_4EDC8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_4EF20(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_4E900(v9, 0),
          unint64_t v12 = sub_4F020((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_2FC220();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_2FC220();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_2FCE40();
LABEL_4:

  return sub_2FC220();
}

uint64_t sub_4EF20(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_4E968(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_4E968(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_4F020(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_4E968(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2FC2B0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_2FCE40();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_4E968(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2FC280();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_4F234(unint64_t a1, uint64_t a2)
{
  uint64_t v61 = type metadata accessor for SearchResultEntity(0);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  unint64_t v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2FD030();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  id v76 = _swiftEmptyArrayStorage;
  uint64_t result = sub_11681C(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v51[1] = v2;
    uint64_t v10 = 0;
    unint64_t v54 = a1 & 0xC000000000000001;
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager);
    uint64_t v12 = v11 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_bookProvider;
    uint64_t v53 = v11;
    uint64_t v59 = v11 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_pageNumberProvider;
    uint64_t v8 = v76;
    id v58 = &v67;
    uint64_t v57 = &v71;
    unint64_t v56 = a1;
    uint64_t v55 = v7;
    uint64_t v52 = v11 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_bookProvider;
    do
    {
      BOOL v65 = v8;
      if (v54)
      {
        uint64_t v13 = (void *)sub_2FCE20();
      }
      else
      {
        uint64_t v13 = *(void **)(a1 + 8 * v10 + 32);
        swift_unknownObjectRetain();
      }
      id v14 = [v13 ordinal];
      id v15 = [v13 pageOffset];
      char v75 = 1;
      char v74 = 1;
      uint64_t v16 = *(void *)(v12 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v16 + 8))(&v66, ObjectType, v16);
      uint64_t v18 = *((void *)&v67 + 1);
      uint64_t v19 = v68;
      sub_4F798(&v66, *((uint64_t *)&v67 + 1));
      unsigned __int8 v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(v18, v19);
      *(void *)&long long v63 = v15;
      if (v20 >= 2u)
      {
        id v23 = v14;
        sub_39FCC((uint64_t)&v66);
        unint64_t v64 = 0xE100000000000000;
        uint64_t v26 = 49;
      }
      else
      {
        sub_39FCC((uint64_t)&v66);
        uint64_t v21 = *(void *)(v59 + 8);
        uint64_t v22 = swift_getObjectType();
        id v23 = v14;
        *(void *)&long long v66 = v14;
        *((void *)&v66 + 1) = v15;
        unsigned __int8 v24 = v58;
        long long *v58 = 0u;
        v24[1] = 0u;
        v24[2] = 0u;
        v24[3] = 0u;
        *((void *)v24 + 8) = 0;
        char v70 = v75;
        uint64_t v25 = v57;
        *(_OWORD *)uint64_t v57 = 0u;
        *((_OWORD *)v25 + 1) = 0u;
        v25[4] = 0;
        char v72 = v74;
        char v73 = 0;
        uint64_t v26 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v21 + 144))(&v66, v22, v21);
        unint64_t v64 = v27;
      }
      uint64_t v8 = v65;
      uint64_t v28 = *(void *)(v12 + 8);
      uint64_t v29 = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 8))(&v66, v29, v28);
      uint64_t v30 = *((void *)&v67 + 1);
      uint64_t v31 = v68;
      sub_4F798(&v66, *((uint64_t *)&v67 + 1));
      if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v31 + 104))(v30, v31) >= 2u)
      {
        sub_39FCC((uint64_t)&v66);
        uint64_t v36 = 1;
      }
      else
      {
        sub_39FCC((uint64_t)&v66);
        uint64_t v32 = *(void *)(v59 + 8);
        uint64_t v33 = swift_getObjectType();
        *(void *)&long long v66 = v23;
        *((void *)&v66 + 1) = v63;
        long long v34 = v58;
        long long *v58 = 0u;
        v34[1] = 0u;
        v34[2] = 0u;
        v34[3] = 0u;
        *((void *)v34 + 8) = 0;
        char v70 = v75;
        long long v35 = v57;
        *(_OWORD *)uint64_t v57 = 0u;
        *((_OWORD *)v35 + 1) = 0u;
        v35[4] = 0;
        char v72 = v74;
        char v73 = 0;
        uint64_t v36 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v32 + 72))(&v66, v33, v32);
      }
      uint64_t v37 = sub_7AECC(v36);
      uint64_t v39 = v38;
      unint64_t v40 = (void *)swift_unknownObjectRetain();
      sub_4E69C(v40, (uint64_t)&v66);
      long long v63 = v66;
      long long v62 = v67;
      uint64_t v42 = v68;
      uint64_t v41 = v69;
      sub_2FB560();
      unint64_t v43 = (int *)v61;
      *(void *)&v6[*(int *)(v61 + 20)] = v13;
      uint64_t v44 = (uint64_t *)&v6[v43[6]];
      uint64_t *v44 = v37;
      v44[1] = v39;
      int64_t v45 = &v6[v43[7]];
      long long v46 = v62;
      *(_OWORD *)int64_t v45 = v63;
      *((_OWORD *)v45 + 1) = v46;
      *((void *)v45 + 4) = v42;
      *((void *)v45 + 5) = v41;
      uint64_t v47 = (uint64_t *)&v6[v43[8]];
      unint64_t v48 = v64;
      *uint64_t v47 = v26;
      v47[1] = v48;
      id v76 = v8;
      unint64_t v50 = v8[2];
      unint64_t v49 = v8[3];
      if (v50 >= v49 >> 1)
      {
        sub_11681C(v49 > 1, v50 + 1, 1);
        uint64_t v8 = v76;
      }
      ++v10;
      v8[2] = v50 + 1;
      sub_4F7DC((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v50);
      a1 = v56;
      uint64_t v12 = v52;
    }
    while (v55 != v10);
    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

void *sub_4F798(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_4F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4F840()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager)
                  + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
    if ([v2 isSearching])
    {
      char v3 = 0;
    }
    else if ([v2 wasAborted])
    {
      char v3 = 1;
    }
    else if ([v2 hasPartialResults])
    {
      char v3 = 2;
    }
    else if ([v2 searchWasCompleted])
    {
      char v3 = 3;
    }
    else
    {
      char v3 = 4;
    }
    char v4 = v3;
    sub_C0DC4(&v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_4F924(uint64_t a1)
{
  return a1;
}

uint64_t PageNumberProvider.paginationProvider.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_4F974(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t BookContentDataManager.paginationService.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_4FA18(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_4FA6C())()
{
  return j__swift_endAccess;
}

uint64_t sub_4FAC0()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  sub_4F798(v0 + 6, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 312))(v1, v2) & 1;
}

void sub_4FB18(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
  swift_beginAccess();
  int v5 = *v4;
  *uint64_t v4 = v2;
  if (v2 != v5)
  {
    unint64_t v6 = *(void **)(v3 + 88);
    NSString v7 = sub_2FC140();
    [v6 setBool:v2 forKey:v7];
  }
}

uint64_t sub_4FBBC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
  swift_beginAccess();
  return *v1;
}

void sub_4FC04(char a1)
{
  uint64_t v3 = a1 & 1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
  swift_beginAccess();
  int v5 = *v4;
  *uint64_t v4 = a1;
  if (v5 != v3)
  {
    unint64_t v6 = *(void **)(v1 + 88);
    NSString v7 = sub_2FC140();
    [v6 setBool:v3 forKey:v7];
  }
}

void (*sub_4FCA8(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout;
  v3[3] = v1;
  void v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_4FD28;
}

void sub_4FD28(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)a1 + 40);
  int v5 = *(unsigned __int8 *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  if ((v4 ^ v5))
  {
    unint64_t v6 = *(void **)(v1[3] + 88);
    NSString v7 = sub_2FC140();
    [v6 setBool:v4 forKey:v7];
  }

  free(v1);
}

void *PageNumberProvider.__allocating_init(paginationProvider:bookEntity:currentConfiguration:userDefaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  swift_allocObject();
  uint64_t v12 = sub_51C8C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v12;
}

void *PageNumberProvider.init(paginationProvider:bookEntity:currentConfiguration:userDefaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  NSString v7 = sub_51C8C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_4FEAC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void **)(result + 88);
    NSString v3 = sub_2FC140();
    id v4 = [v2 BOOLForKey:v3];

    int v5 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
    swift_beginAccess();
    int v6 = *v5;
    *int v5 = (_BYTE)v4;
    if (v4 != v6)
    {
      NSString v7 = sub_2FC140();
      [v2 setBool:v4 forKey:v7];
    }
    NSString v8 = sub_2FC140();
    char v9 = [v2 BOOLForKey:v8];

    sub_5003C(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_50000()
{
  sub_2FBAE0();
  return v1;
}

void sub_5003C(char a1)
{
  uint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  sub_4F798(v1 + 6, v3);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 312))(v3, v4))
  {
    sub_2FBAE0();
    uint64_t v5 = a1 & 1;
    if (v8 != v5)
    {
      sub_2FBAF0();
      int v6 = (void *)v1[11];
      NSString v7 = sub_2FC140();
      [v6 setBool:v5 forKey:v7];
    }
  }
}

void (*sub_5011C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_2FBAE0();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_50178;
}

void sub_50178(uint64_t a1)
{
}

uint64_t sub_501A0()
{
  return sub_2FBBD0();
}

uint64_t PageNumberProvider.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_39FCC(v0 + 48);

  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_log;
  uint64_t v2 = sub_2FB8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PageNumberProvider.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_39FCC((uint64_t)(v0 + 6));

  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_log;
  uint64_t v2 = sub_2FB8A0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return _swift_deallocClassInstance(v0, v3, v4);
}

Swift::Int PageNumberProvider.pageNumber(for:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  Swift::Int v6 = sub_2FB1B0();
  uint64_t v7 = BookPaginationEntity.document(for:)(v2);
  if (v7)
  {
    unsigned __int8 v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    swift_beginAccess();
    uint64_t v9 = *v8;
    swift_release();
    swift_release();
    BOOL v10 = __OFADD__(v9, v3);
    Swift::Int v6 = v9 + v3;
    if (!v10) {
      return PageNumberProvider.displayPageNumber(fromBookPageOffset:)(v6);
    }
    __break(1u);
  }
  swift_release();
  return PageNumberProvider.displayPageNumber(fromBookPageOffset:)(v6);
}

Swift::Int __swiftcall PageNumberProvider.displayPageNumber(fromBookPageOffset:)(Swift::Int fromBookPageOffset)
{
  uint64_t v3 = sub_2FB1B0();
  if (fromBookPageOffset < 0 || v3 == fromBookPageOffset) {
    goto LABEL_10;
  }
  Swift::Int result = swift_beginAccess();
  if (!*(void *)(v1 + 32))
  {
    BOOL v7 = __OFADD__(fromBookPageOffset, 1);
    Swift::Int v8 = fromBookPageOffset + 1;
    if (!v7)
    {
      uint64_t v12 = sub_2FB880();
      os_log_type_t v13 = sub_2FC7B0();
      if (os_log_type_enabled(v12, v13))
      {
        id v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v14 = 0;
        _os_log_impl(&def_7BFC0, v12, v13, "Missing configuration, unable to properly determine adjustedPageNumber", v14, 2u);
        swift_slowDealloc();
      }

      return v8;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)(v1 + 40);
  Swift::Int v6 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
  swift_beginAccess();
  if (*v6)
  {
LABEL_7:
    BOOL v7 = __OFADD__(fromBookPageOffset, 1);
    Swift::Int v8 = fromBookPageOffset + 1;
    if (!v7) {
      return v8;
    }
    __break(1u);
LABEL_10:
    uint64_t v9 = sub_2FB880();
    os_log_type_t v10 = sub_2FC7B0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134217984;
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v9, v10, "Invalid book pageOffset provided: %ld", v11, 0xCu);
      swift_slowDealloc();
    }

    return 1;
  }
  swift_unknownObjectRetain();
  sub_2FBAE0();
  if (v20 == 1)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  Swift::Int v15 = fromBookPageOffset - 1;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 120);
  Swift::Int result = v17(ObjectType, v5);
  BOOL v7 = __OFADD__(v15, result);
  Swift::Int v18 = v15 + result;
  if (v7) {
    goto LABEL_24;
  }
  uint64_t v19 = v17(ObjectType, v5);
  Swift::Int result = swift_unknownObjectRelease();
  if (!v19)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v18 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_27;
  }
  BOOL v7 = __OFADD__(v18 / v19, 1);
  Swift::Int v8 = v18 / v19 + 1;
  if (!v7) {
    return v8;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t PageNumberProvider.pageNumber(for:)(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_4F798(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v8 = BookPaginationEntity.document(for:)(v7);
  swift_release();
  if (v8)
  {
    uint64_t v9 = (Swift::Int *)(v8 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    swift_beginAccess();
    Swift::Int v10 = PageNumberProvider.displayPageNumber(fromBookPageOffset:)(*v9);
    swift_release();
  }
  else
  {
    sub_52C40((uint64_t)a1, (uint64_t)v18);
    uint64_t v11 = sub_2FB880();
    os_log_type_t v12 = sub_2FC7B0();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v13 = 134217984;
      uint64_t v14 = v19;
      uint64_t v15 = v20;
      sub_4F798(v18, v19);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      sub_39FCC((uint64_t)v18);
      v18[0] = v16;
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v11, v12, "Failed to get paginated document for DocumentOrdinal %ld", v13, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_39FCC((uint64_t)v18);
    }

    return 1;
  }
  return v10;
}

Swift::Int PageNumberProvider.pageNumber(for:)(uint64_t a1)
{
  uint64_t v1 = (Swift::Int *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
  swift_beginAccess();
  return PageNumberProvider.displayPageNumber(fromBookPageOffset:)(*v1);
}

Swift::Int __swiftcall PageNumberProvider.maxPageNumber()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  double v3 = Paginating.lastLocation.getter(v1, (uint64_t)v13);
  uint64_t v4 = v13[0];
  uint64_t v5 = v13[1];
  (*(void (**)(uint64_t, uint64_t, double))(v1 + 8))(ObjectType, v1, v3);
  Swift::Int v6 = sub_2FB1B0();
  uint64_t v7 = BookPaginationEntity.document(for:)(v4);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    swift_beginAccess();
    uint64_t v9 = *v8;
    swift_release();
    swift_release();
    BOOL v10 = __OFADD__(v9, v5);
    Swift::Int v6 = v9 + v5;
    if (!v10) {
      goto LABEL_6;
    }
    __break(1u);
  }
  swift_release();
LABEL_6:
  Swift::Int v11 = PageNumberProvider.displayPageNumber(fromBookPageOffset:)(v6);
  sub_5227C((uint64_t)v13);
  return v11;
}

Swift::String __swiftcall PageNumberProvider.lastPageNumber()()
{
  uint64_t v1 = v0;
  sub_2FBAE0();
  if (v37 == 1)
  {
    uint64_t v2 = v0[9];
    uint64_t v3 = v0[10];
    sub_4F798(v0 + 6, v2);
    unint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 304))(v2, v3);
    uint64_t v6 = v4;
    if (!(v4 >> 62))
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
      if (v7) {
        goto LABEL_4;
      }
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_2FB880();
      os_log_type_t v23 = sub_2FC7B0();
      if (os_log_type_enabled(v22, v23))
      {
        unsigned __int8 v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned __int8 v24 = 0;
        _os_log_impl(&def_7BFC0, v22, v23, "Book doesn't have last physical page number.", v24, 2u);
        swift_slowDealloc();
      }

      uint64_t v25 = v1[3];
      uint64_t ObjectType = swift_getObjectType();
      double v27 = Paginating.lastLocation.getter(v25, (uint64_t)&v37);
      uint64_t v28 = v37;
      uint64_t v29 = v38;
      (*(void (**)(uint64_t, uint64_t, double))(v25 + 8))(ObjectType, v25, v27);
      Swift::Int v18 = sub_2FB1B0();
      uint64_t v30 = BookPaginationEntity.document(for:)(v28);
      if (v30)
      {
        uint64_t v31 = (uint64_t *)(v30 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
        swift_beginAccess();
        uint64_t v32 = *v31;
        swift_release();
        swift_release();
        BOOL v8 = __OFADD__(v32, v29);
        Swift::Int v18 = v32 + v29;
        if (!v8) {
          goto LABEL_21;
        }
        __break(1u);
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v13 = v0[3];
    uint64_t v14 = swift_getObjectType();
    double v15 = Paginating.lastLocation.getter(v13, (uint64_t)&v37);
    uint64_t v16 = v37;
    uint64_t v17 = v38;
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v13 + 8))(v14, v13, v15);
    Swift::Int v18 = sub_2FB1B0();
    uint64_t v19 = BookPaginationEntity.document(for:)(v16);
    if (!v19)
    {
LABEL_20:
      swift_release();
LABEL_21:
      Swift::Int v33 = PageNumberProvider.displayPageNumber(fromBookPageOffset:)(v18);
      sub_5227C((uint64_t)&v37);
      Swift::String v34 = PageNumberProvider.pageName(for:)(v33);
      uint64_t countAndFlagsBits = v34._countAndFlagsBits;
      object = v34._object;
      goto LABEL_22;
    }
    uint64_t v20 = (uint64_t *)(v19 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    swift_beginAccess();
    uint64_t v21 = *v20;
    swift_release();
    swift_release();
    BOOL v8 = __OFADD__(v21, v17);
    Swift::Int v18 = v21 + v17;
    if (!v8) {
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t v7 = sub_2FD030();
  if (!v7) {
    goto LABEL_14;
  }
LABEL_4:
  BOOL v8 = __OFSUB__(v7, 1);
  unint64_t v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    goto LABEL_24;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_24:
    uint64_t v35 = sub_2FCE20();
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = *(void *)(v35 + 32);
    object = *(void **)(v35 + 40);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    goto LABEL_22;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)(v6 + 8 * v9 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = *(void *)(v10 + 32);
  object = *(void **)(v10 + 40);
  swift_bridgeObjectRetain();
  swift_release();
LABEL_22:
  unint64_t v9 = countAndFlagsBits;
  uint64_t v5 = object;
LABEL_27:
  result._object = v5;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall PageNumberProvider.pageName(for:)(Swift::Int a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3))
  {
    sub_2FBAE0();
    if (LOBYTE(v15[0]) == 1
      && ((*(void (**)(_OWORD *__return_ptr, Swift::Int, uint64_t, uint64_t))(v3 + 208))(v12, a1, ObjectType, v3), sub_524A4((uint64_t)v12, (uint64_t)v14), sub_524A4((uint64_t)v14, (uint64_t)v15), sub_5250C((uint64_t)v15) != 1))
    {
      v12[6] = v15[6];
      v13[0] = v16[0];
      *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)((char *)v16 + 10);
      v12[2] = v15[2];
      uint64_t v12[3] = v15[3];
      void v12[4] = v15[4];
      v12[5] = v15[5];
      v12[0] = v15[0];
      v12[1] = v15[1];
      uint64_t v5 = PageNumberProvider.pageName(for:)((uint64_t)v12);
      unint64_t v7 = v8;
      sub_52530(v14);
    }
    else
    {
      uint64_t v5 = sub_522B4(a1);
      unint64_t v7 = v6;
    }
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v9 = v5;
  uint64_t v10 = (void *)v7;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t PageNumberProvider.rawPageNumber(for:)(_OWORD *a1)
{
  uint64_t v2 = v1;
  long long v3 = a1[6];
  long long v4 = a1[7];
  long long v5 = a1[4];
  v22[5] = a1[5];
  v22[6] = v3;
  v23[0] = v4;
  *(_OWORD *)((char *)v23 + 10) = *(_OWORD *)((char *)a1 + 122);
  long long v6 = a1[3];
  v22[2] = a1[2];
  v22[3] = v6;
  v22[4] = v5;
  long long v7 = a1[1];
  v22[0] = *a1;
  v22[1] = v7;
  Class isa = v1[3].isa;
  uint64_t ObjectType = swift_getObjectType();
  (*((void (**)(uint64_t, Class))isa + 1))(ObjectType, isa);
  uint64_t v10 = sub_2FB1B0();
  uint64_t v11 = BookPaginationEntity.document(for:)(*(uint64_t *)&v22[0]);
  if (!v11) {
    goto LABEL_5;
  }
  os_log_type_t v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
  swift_beginAccess();
  uint64_t v13 = *v12;
  swift_release();
  swift_release();
  BOOL v14 = __OFADD__(v13, *((void *)&v22[0] + 1));
  uint64_t v10 = v13 + *((void *)&v22[0] + 1);
  if (v14)
  {
    __break(1u);
LABEL_5:
    swift_release();
  }
  if (v10 != sub_2FB1B0())
  {
    uint64_t v19 = v10 + 1;
    if (!__OFADD__(v10, 1)) {
      return v19;
    }
    __break(1u);
    goto LABEL_12;
  }
  sub_525DC((uint64_t)v22);
  sub_525DC((uint64_t)v22);
  uint64_t v2 = sub_2FB880();
  os_log_type_t v15 = sub_2FC7B0();
  if (!os_log_type_enabled(v2, v15))
  {
LABEL_12:

    sub_5227C((uint64_t)v22);
    sub_5227C((uint64_t)v22);
    return 1;
  }
  uint64_t v16 = (uint8_t *)swift_slowAlloc();
  uint64_t v21 = swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 136315138;
  uint64_t v17 = Location.description.getter();
  sub_38EF0(v17, v18, &v21);
  sub_2FCC70();
  swift_bridgeObjectRelease();
  sub_5227C((uint64_t)v22);
  sub_5227C((uint64_t)v22);
  _os_log_impl(&def_7BFC0, v2, v15, "Unable to find page number for location:%s", v16, 0xCu);
  uint64_t v19 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  return v19;
}

uint64_t PageNumberProvider.pageName(for:)(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(ObjectType, v5) & 1) == 0) {
    return 0;
  }
  sub_2FBAE0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
  if (LOBYTE(v27[0]) != 1)
  {
    Swift::Int v21 = sub_2FB1B0();
    uint64_t v22 = BookPaginationEntity.document(for:)(v3);
    if (v22)
    {
      os_log_type_t v23 = (uint64_t *)(v22 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
      swift_beginAccess();
      uint64_t v24 = *v23;
      swift_release();
      swift_release();
      BOOL v25 = __OFADD__(v24, v4);
      Swift::Int v21 = v24 + v4;
      if (!v25) {
        goto LABEL_12;
      }
      __break(1u);
    }
    swift_release();
LABEL_12:
    PageNumberProvider.displayPageNumber(fromBookPageOffset:)(v21);
    return sub_2FD1A0();
  }
  v27[0] = v3;
  v27[1] = v4;
  long long v7 = *(_OWORD *)(a1 + 96);
  long long v32 = *(_OWORD *)(a1 + 80);
  long long v33 = v7;
  v34[0] = *(_OWORD *)(a1 + 112);
  *(_OWORD *)((char *)v34 + 10) = *(_OWORD *)(a1 + 122);
  long long v8 = *(_OWORD *)(a1 + 32);
  long long v28 = *(_OWORD *)(a1 + 16);
  long long v29 = v8;
  long long v9 = *(_OWORD *)(a1 + 64);
  long long v30 = *(_OWORD *)(a1 + 48);
  long long v31 = v9;
  uint64_t v10 = (void *)BookPaginationEntity.pagePaginationEntity(for:)(v27);
  swift_release();
  if (!v10) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v11 = v10[15];
  if (!v11)
  {
    swift_release();
    return 0;
  }
  uint64_t v12 = v10[14];
  swift_beginAccess();
  uint64_t v13 = v10[17];
  if (v13)
  {
    uint64_t v14 = v10[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = BookEPUBBundle();
    NSString v16 = sub_2FC140();
    NSString v17 = sub_2FC140();
    id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

    sub_2FC180();
    sub_371F4(&qword_3FE718);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_32BAD0;
    *(void *)(v19 + 56) = &type metadata for String;
    unint64_t v20 = sub_4A03C();
    *(void *)(v19 + 32) = v12;
    *(void *)(v19 + 40) = v11;
    *(void *)(v19 + 96) = &type metadata for String;
    *(void *)(v19 + 104) = v20;
    *(void *)(v19 + 64) = v20;
    *(void *)(v19 + 72) = v14;
    *(void *)(v19 + 80) = v13;
    uint64_t v12 = sub_2FC150();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v12;
}

Swift::String __swiftcall PageNumberProvider.pageName(forPageOffset:)(Swift::Int forPageOffset)
{
  Swift::Int v1 = PageNumberProvider.displayPageNumber(fromBookPageOffset:)(forPageOffset);

  Swift::String v4 = PageNumberProvider.pageName(for:)(v1);
  object = v4._object;
  uint64_t countAndFlagsBits = v4._countAndFlagsBits;
  result._object = object;
  result._uint64_t countAndFlagsBits = countAndFlagsBits;
  return result;
}

uint64_t PageNumberProvider.pageNamesInvalidatedPublisher.getter()
{
  uint64_t v1 = sub_371F4(&qword_400E40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  __chkstk_darwin(v1);
  Swift::String v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_371F4(&qword_400350);
  __chkstk_darwin(v18);
  uint64_t v15 = sub_371F4(&qword_3FE9C8);
  __chkstk_darwin(v15);
  uint64_t v14 = sub_371F4(&qword_3FE9D0);
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_usePhysicalPagesSubject);
  sub_371F4((uint64_t *)&unk_400A10);
  sub_44924(&qword_3FE9B0, (uint64_t *)&unk_400A10);
  uint64_t v19 = sub_2FBBD0();
  sub_371F4((uint64_t *)&unk_404EE0);
  sub_44924((unint64_t *)&unk_406720, (uint64_t *)&unk_404EE0);
  sub_2FBC30();
  swift_release();
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
  sub_44924(&qword_400120, &qword_400E40);
  uint64_t v10 = v16;
  sub_2FBC30();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v10);
  sub_44924(&qword_3FE9D8, &qword_3FE9C8);
  sub_44924((unint64_t *)&unk_400370, &qword_400350);
  sub_2FBA00();
  sub_44924(&qword_3FE9E0, &qword_3FE9D0);
  uint64_t v11 = v14;
  uint64_t v12 = sub_2FBBD0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v11);
  return v12;
}

Swift::Int_optional __swiftcall PageNumberProvider.pageOffset(fromDisplayNumber:)(Swift::Int fromDisplayNumber)
{
  uint64_t v3 = sub_2FB1B0();
  uint64_t v4 = fromDisplayNumber - 1;
  BOOL v5 = fromDisplayNumber < 1 || v3 == fromDisplayNumber;
  char v6 = v5;
  if (v5)
  {
    long long v7 = sub_2FB880();
    os_log_type_t v8 = sub_2FC7B0();
    if (os_log_type_enabled(v7, v8))
    {
      long long v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)long long v9 = 134217984;
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v7, v8, "Invalid displayPageNumber provided: %ld", v9, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v4 = 0;
    goto LABEL_22;
  }
  swift_beginAccess();
  if (!*(void *)(v1 + 32))
  {
    Swift::Int v21 = sub_2FB880();
    os_log_type_t v22 = sub_2FC7B0();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v23 = 0;
      _os_log_impl(&def_7BFC0, v21, v22, "Missing configuration, unable to properly determine pageOffset", v23, 2u);
      swift_slowDealloc();
    }

    goto LABEL_22;
  }
  uint64_t v10 = *(void *)(v1 + 40);
  uint64_t v11 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
  swift_beginAccess();
  if (*v11 != 1)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 120);
    swift_unknownObjectRetain();
    Swift::Int v14 = v13(ObjectType, v10);
    Swift::Int v16 = fromDisplayNumber * v14;
    if ((unsigned __int128)(fromDisplayNumber * (__int128)v14) >> 64 == (fromDisplayNumber * v14) >> 63)
    {
      uint64_t v17 = v13(ObjectType, v10);
      Swift::Int v14 = swift_unknownObjectRelease();
      if (v17 + 0x4000000000000000 >= 0)
      {
        Swift::Int v18 = v16 - 2 * v17;
        if (!__OFSUB__(v16, 2 * v17))
        {
          BOOL v19 = __OFADD__(v18, 1);
          uint64_t v20 = v18 + 1;
          if (!v19)
          {
            uint64_t v4 = v20 & ~(v20 >> 63);
            goto LABEL_22;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_22:
  Swift::Int v14 = v4;
  Swift::Bool v15 = v6;
LABEL_27:
  result.value = v14;
  result.is_nil = v15;
  return result;
}

uint64_t (*sub_51B50())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_51BC4(Swift::Int a1)
{
  return (unint64_t)PageNumberProvider.pageOffset(fromDisplayNumber:)(a1);
}

void (*sub_51BE8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_4FCA8(v2);
  return sub_51C40;
}

void sub_51C40(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void *sub_51C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  long long v7 = v6;
  uint64_t v42 = a5;
  unint64_t v43 = a6;
  uint64_t v48 = a2;
  uint64_t v11 = sub_371F4((uint64_t *)&unk_4000D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2FC930();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_371F4(&qword_404530);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v47 = v19;
  __chkstk_darwin(v18);
  Swift::Int v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[5] = 0;
  v6[4] = 0;
  sub_39F90(0, (unint64_t *)&qword_4000C0);
  sub_2FCBE0();
  sub_2FB8B0();
  *((unsigned char *)v6 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout) = 0;
  uint64_t v22 = OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_usePhysicalPagesSubject;
  char v50 = 0;
  sub_371F4((uint64_t *)&unk_400A10);
  swift_allocObject();
  *(void *)((char *)v6 + v22) = sub_2FBB00();
  *(void *)((char *)v6 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_subscribers) = _swiftEmptyArrayStorage;
  uint64_t v23 = v48;
  v6[2] = a1;
  v6[3] = v23;
  uint64_t v48 = a3;
  sub_52C40(a3, (uint64_t)(v6 + 6));
  swift_beginAccess();
  v6[4] = a4;
  v6[5] = v42;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v24 = v43;
  v7[11] = v43;
  BOOL v25 = self;
  id v26 = v24;
  id v27 = [v25 defaultCenter];
  id v28 = v26;
  sub_2FC940();

  sub_39F90(0, (unint64_t *)&qword_401700);
  id v49 = (id)sub_2FC8C0();
  uint64_t v29 = sub_2FC870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
  sub_52CA4();
  sub_52CFC();
  uint64_t v30 = v44;
  sub_2FBC80();
  sub_52D64((uint64_t)v13);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v30);
  swift_allocObject();
  swift_weakInit();
  sub_44924((unint64_t *)&unk_404580, &qword_404530);
  uint64_t v31 = v46;
  sub_2FBCF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v31);
  swift_beginAccess();
  sub_371F4(&qword_4003B0);
  sub_44924((unint64_t *)&unk_405190, &qword_4003B0);
  sub_2FBA60();
  swift_endAccess();
  swift_release();
  long long v32 = (void *)v7[11];
  NSString v33 = sub_2FC140();
  id v34 = [v32 BOOLForKey:v33];

  uint64_t v35 = (char *)v7 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout;
  swift_beginAccess();
  int v36 = *v35;
  *uint64_t v35 = (_BYTE)v34;
  if (v34 != v36)
  {
    NSString v37 = sub_2FC140();
    [v32 setBool:v34 forKey:v37];
  }
  NSString v38 = sub_2FC140();
  char v39 = [v32 BOOLForKey:v38];

  sub_5003C(v39);
  sub_39FCC(v48);
  return v7;
}

uint64_t sub_5227C(uint64_t a1)
{
  return a1;
}

uint64_t sub_522B4(uint64_t a1)
{
  uint64_t v2 = sub_2FB5B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v6 setNumberStyle:1];
  [v6 setUsesGroupingSeparator:0];
  id v7 = [self currentLocale];
  sub_2FB5A0();

  Class isa = sub_2FB590().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v6 setLocale:isa];

  id v9 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1 & ~(a1 >> 63)];
  id v10 = [v6 stringFromNumber:v9];

  if (v10)
  {
    uint64_t v11 = sub_2FC180();
  }
  else
  {
    v13[1] = a1;
    uint64_t v11 = sub_2FD1A0();
  }
  return v11;
}

uint64_t sub_524A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4(&qword_400E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5250C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t *sub_52530(uint64_t *a1)
{
  return a1;
}

uint64_t sub_52594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_525DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_52614@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(_OWORD *)(v3 + 32);
  return swift_unknownObjectRetain();
}

uint64_t sub_52668@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8BookEPUB18PageNumberProvider_useMultipleLabelsInTwoColumnLayout);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_526C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2FBAE0();
  *a1 = v3;
  return result;
}

void sub_52708(char *a1)
{
}

uint64_t dispatch thunk of PageNumberProviding.paginationProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PageNumberProviding.currentConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PageNumberProviding.currentConfiguration.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PageNumberProviding.currentConfiguration.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PageNumberProviding.useMultipleLabelsInTwoColumnLayout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PageNumberProviding.hasPhysicalPages.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PageNumberProviding.usePhysicalPagesValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PageNumberProviding.usePhysicalPagesPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PageNumberProviding.pageNumber(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of PageNumberProviding.maxPageNumber()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of PageNumberProviding.lastPageNumber()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of PageNumberProviding.rawPageNumber(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of PageNumberProviding.pageName(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of PageNumberProviding.pageName(forPageOffset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of PageNumberProviding.pageNamesInvalidatedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of PageNumberProviding.pageOffset(fromDisplayNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of PageNumberProviding.displayPageNumber(fromBookPageOffset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of PageNumberManaging.useMultipleLabelsInTwoColumnLayout.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PageNumberManaging.useMultipleLabelsInTwoColumnLayout.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PageNumberManaging.usePhysicalPagesValue.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PageNumberManaging.usePhysicalPagesValue.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_52944()
{
  return type metadata accessor for PageNumberProvider();
}

uint64_t type metadata accessor for PageNumberProvider()
{
  uint64_t result = qword_3FEA10;
  if (!qword_3FEA10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_52998()
{
  uint64_t result = sub_2FB8A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PageNumberProvider(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PageNumberProvider);
}

uint64_t dispatch thunk of PageNumberProvider.currentConfiguration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PageNumberProvider.currentConfiguration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PageNumberProvider.currentConfiguration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PageNumberProvider.hasPhysicalPages.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PageNumberProvider.useMultipleLabelsInTwoColumnLayout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PageNumberProvider.useMultipleLabelsInTwoColumnLayout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of PageNumberProvider.useMultipleLabelsInTwoColumnLayout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PageNumberProvider.__allocating_init(paginationProvider:bookEntity:currentConfiguration:userDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of PageNumberProvider.usePhysicalPagesValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of PageNumberProvider.usePhysicalPagesValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of PageNumberProvider.usePhysicalPagesValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of PageNumberProvider.usePhysicalPagesPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t sub_52C40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_52CA4()
{
  unint64_t result = qword_3FEB48;
  if (!qword_3FEB48)
  {
    sub_2FC930();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FEB48);
  }
  return result;
}

unint64_t sub_52CFC()
{
  unint64_t result = qword_400EA0;
  if (!qword_400EA0)
  {
    sub_39F90(255, (unint64_t *)&qword_401700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400EA0);
  }
  return result;
}

uint64_t sub_52D64(uint64_t a1)
{
  uint64_t v2 = sub_371F4((uint64_t *)&unk_4000D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_52DC4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_52DFC()
{
  return sub_4FEAC();
}

void *sub_52E08(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1167FC(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (long long *)(a1 + 56);
    do
    {
      long long v5 = *(v4 - 1);
      long long v6 = *v4;
      uint64_t v12 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        long long v10 = *v4;
        long long v11 = *(v4 - 1);
        sub_1167FC(v7 > 1, v8 + 1, 1);
        long long v6 = v10;
        long long v5 = v11;
        unint64_t result = v12;
      }
      result[2] = v8 + 1;
      id v9 = &result[4 * v8];
      *((_OWORD *)v9 + 2) = v5;
      *((_OWORD *)v9 + 3) = v6;
      uint64_t v4 = (long long *)((char *)v4 + 40);
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t ElementPaginationEntityReference.pageOffset.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t ElementPaginationEntityReference.entity.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_52F04@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = (double *)swift_bridgeObjectRetain();
  sub_52F6C(v2, (uint64_t)&v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(void *)a1 = v4;
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
  }
  return result;
}

double *sub_52F6C@<X0>(double *result@<X0>, uint64_t a2@<X8>)
{
  int64_t v2 = result;
  unint64_t v4 = *((void *)result + 2);
  unint64_t v5 = v4 != 0;
  BOOL v6 = v4 == 0;
  if (v4)
  {
    uint64_t v7 = *((void *)result + 4);
    CGFloat x = result[5];
    CGFloat y = result[6];
    CGFloat width = result[7];
    CGFloat height = result[8];
    unint64_t v12 = v4 - v5;
    if (v4 != v5)
    {
      if (v4 <= v5)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t)&v2[5 * v5 + 8];
      do
      {
        if (v6)
        {
          BOOL v6 = 1;
        }
        else if (*(void *)(v13 - 32) == v7)
        {
          v14.origin.CGFloat x = x;
          v14.origin.CGFloat y = y;
          v14.size.CGFloat width = width;
          v14.size.CGFloat height = height;
          CGRect v15 = CGRectUnion(v14, *(CGRect *)(v13 - 24));
          CGFloat x = v15.origin.x;
          CGFloat y = v15.origin.y;
          CGFloat width = v15.size.width;
          CGFloat height = v15.size.height;
          BOOL v6 = 0;
        }
        else
        {
          uint64_t v7 = 0;
          BOOL v6 = 1;
          CGFloat x = 0.0;
          CGFloat y = 0.0;
          CGFloat width = 0.0;
          CGFloat height = 0.0;
        }
        v13 += 40;
        --v12;
      }
      while (v12);
      uint64_t result = (double *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = 0;
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    CGFloat width = 0.0;
    CGFloat height = 0.0;
  }
  *(void *)a2 = v7;
  *(CGFloat *)(a2 + 8) = x;
  *(CGFloat *)(a2 + 16) = y;
  *(CGFloat *)(a2 + 24) = width;
  *(CGFloat *)(a2 + 32) = height;
  *(unsigned char *)(a2 + 40) = v6;
  return result;
}

uint64_t sub_530A0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

void *ElementPaginationEntityReference.__allocating_init<A>(rects:pageOffset:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  long long v10 = sub_53600(a1, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v10;
}

void *ElementPaginationEntityReference.init<A>(rects:pageOffset:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_53600(a1, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v7;
}

uint64_t ElementPaginationEntityReference.deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ElementPaginationEntityReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_53278()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_53284()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_53290()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_532BC@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = (double *)swift_bridgeObjectRetain();
  sub_52F6C(v2, (uint64_t)&v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(void *)a1 = v4;
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
  }
  return result;
}

uint64_t sub_53328()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

uint64_t sub_5337C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v14 = a1;
  long long v10 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v5 + 120);
  uint64_t v11 = sub_371F4(&qword_3FF350);
  unint64_t v12 = sub_53798();
  uint64_t result = v10(&v14, a2, a3, a4, v11, v12);
  *a5 = result;
  return result;
}

uint64_t ElementPaginationEntityReference.description.getter()
{
  sub_2FCDD0(56);
  v2._uint64_t countAndFlagsBits = 15370;
  v2._object = (void *)0xE200000000000000;
  sub_2FC260(v2);
  v3._uint64_t countAndFlagsBits = sub_2FD3E0();
  sub_2FC260(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x6572202020200A3ELL;
  v4._object = (void *)0xEE00203D20737463;
  sub_2FC260(v4);
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_52E08(v0);
  swift_bridgeObjectRelease();
  type metadata accessor for CGRect(0);
  v5._uint64_t countAndFlagsBits = sub_2FC400();
  sub_2FC260(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6._object = (void *)0x800000000030C9F0;
  v6._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_2FC260(v6);
  v7._uint64_t countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x746E65202020200ALL;
  v8._object = (void *)0xEE00203D20797469;
  sub_2FC260(v8);
  sub_371F4(&qword_3FEB50);
  sub_2FCFA0();
  return 0;
}

uint64_t sub_535DC()
{
  return ElementPaginationEntityReference.description.getter();
}

void *sub_53600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v9 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_371F4(&qword_3FEC20);
  v4[2] = sub_2FC4B0();
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t type metadata accessor for ElementPaginationEntityReference()
{
  return self;
}

uint64_t method lookup function for ElementPaginationEntityReference(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ElementPaginationEntityReference);
}

uint64_t dispatch thunk of ElementPaginationEntityReference.boundingRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ElementPaginationEntityReference.entityType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ElementPaginationEntityReference.__allocating_init<A>(rects:pageOffset:entity:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_53798()
{
  unint64_t result = qword_3FEC18;
  if (!qword_3FEC18)
  {
    sub_37294(&qword_3FF350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FEC18);
  }
  return result;
}

id sub_537F4()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.0 blue:0.0 alpha:1.0];
  qword_3FEC28 = (uint64_t)result;
  return result;
}

CALayerCornerCurve sub_53838()
{
  qword_3FEC30 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

id sub_53850()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.0 blue:0.0 alpha:0.3];
  qword_3FEC38 = (uint64_t)result;
  return result;
}

id sub_5389C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.235294118 green:0.235294118 blue:0.262745098 alpha:0.15];
  qword_3FEC40 = (uint64_t)result;
  return result;
}

void sub_538F4()
{
  id v0 = [self clearColor];
  id v1 = [v0 CGColor];

  qword_3FEC48 = (uint64_t)v1;
}

id sub_53958()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:1.0 blue:1.0 alpha:0.1];
  qword_3FEC50 = (uint64_t)result;
  return result;
}

id sub_539A0(uint64_t a1)
{
  return sub_53A0C(a1, &qword_3FEC58);
}

id sub_539AC()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.235294118 green:0.235294118 blue:0.262745098 alpha:0.05];
  qword_3FEC60 = (uint64_t)result;
  return result;
}

id sub_53A00(uint64_t a1)
{
  return sub_53A0C(a1, &qword_3FEC68);
}

id sub_53A0C(uint64_t a1, void *a2)
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:1.0 blue:1.0 alpha:0.0];
  *a2 = result;
  return result;
}

id ContentLoaderPlaceholderView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithFrame:a1, a2, a3, a4];
}

char *ReadingLoupeView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInset] = 0x3FF0000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeOverlayMaskBuffer] = 0x4059000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeTwoUpMarginInset] = 0x4010000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeTwoUpWidthAdjustment] = 0x3FE0000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeOverlap] = 0x4024000000000000;
  uint64_t v9 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView;
  long long v10 = v4;
  *(void *)&v4[v9] = sub_53EC4();
  uint64_t v11 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewGradientLayer;
  id v12 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v12 setCornerRadius:8.0];
  uint64_t v13 = qword_3FD678;
  id v14 = v12;
  if (v13 != -1) {
    swift_once();
  }
  [v14 setCornerCurve:qword_3FEC30];

  [v14 setAllowsGroupOpacity:1];
  *(void *)&v10[v11] = v14;
  uint64_t v15 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInnerStrokeLayer;
  id v16 = [objc_allocWithZone((Class)CAShapeLayer) init];
  [v16 setLineWidth:1.0];
  if (qword_3FD690 != -1) {
    swift_once();
  }
  [v16 setFillColor:qword_3FEC48];
  [v16 setCornerCurve:qword_3FEC30];
  [v16 setAllowsGroupOpacity:1];
  *(void *)&v10[v15] = v16;

  v30.receiver = v10;
  v30.super_class = (Class)type metadata accessor for ReadingLoupeView();
  uint64_t v17 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView];
  uint64_t v19 = v17;
  [v19 addSubview:v18];
  id v20 = [v19 layer];
  [v20 addSublayer:*(void *)&v19[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewGradientLayer]];

  id v21 = [v19 layer];
  [v21 addSublayer:*(void *)&v19[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInnerStrokeLayer]];

  id v22 = [v19 layer];
  [v22 setBorderWidth:0.5];

  id v23 = [v19 layer];
  uint64_t v24 = v23;
  double v25 = a4 / 3.0;
  if (a4 / 3.0 > 8.0) {
    double v25 = 8.0;
  }
  [v23 setCornerRadius:v25];

  id v26 = [v19 layer];
  [v26 setCornerCurve:qword_3FEC30];

  id v27 = [v19 layer];
  [v27 setMasksToBounds:0];

  id v28 = [v19 layer];
  [v28 setAllowsGroupOpacity:0];

  [v19 setClipsToBounds:0];
  return v19;
}

id sub_53EC4()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  id v1 = [self whiteColor];
  [v0 setBackgroundColor:v1];

  id v2 = [v0 layer];
  if (qword_3FD670 != -1) {
    swift_once();
  }
  id v3 = [(id)qword_3FEC28 CGColor];
  [v2 setShadowColor:v3];

  id v4 = [v0 layer];
  [v4 setShadowOffset:0.0, 2.0];

  id v5 = [v0 layer];
  [v5 setShadowRadius:5.0];

  id v6 = [v0 layer];
  LODWORD(v7) = 1036831949;
  [v6 setShadowOpacity:v7];

  id v8 = [v0 layer];
  if (qword_3FD678 != -1) {
    swift_once();
  }
  [v8 setCornerCurve:qword_3FEC30];

  id v9 = [v0 layer];
  [v9 setMasksToBounds:0];

  [v0 setClipsToBounds:0];
  return v0;
}

uint64_t type metadata accessor for ReadingLoupeView()
{
  return self;
}

void sub_54124(uint64_t a1)
{
  uint64_t v8 = *(void *)(a1 + 32);
  sub_54C88();
  sub_54F10();
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInnerStrokeLayer);
  id v3 = self;
  id v9 = v2;
  id v4 = [v3 whiteColor];
  char v5 = BookThemeEntity.hasDarkBackground.getter();
  double v6 = 0.3;
  if (v5) {
    double v6 = 0.2;
  }
  id v7 = [v4 colorWithAlphaComponent:v6, v8];

  id v10 = [v7 CGColor];
  [v9 setStrokeColor:v10];
}

void sub_542D4(char *a1, uint64_t a2)
{
  char v4 = a1[1];
  char v5 = a1[2];
  uint64_t v6 = *((void *)a1 + 1);
  uint64_t v23 = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  uint64_t v9 = *((void *)a1 + 5);
  uint64_t v21 = *((void *)a1 + 7);
  uint64_t v22 = *((void *)a1 + 6);
  char v26 = *a1;
  char v3 = v26;
  char v27 = v4;
  char v28 = v5;
  uint64_t v29 = v6;
  uint64_t v30 = v23;
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  uint64_t v33 = v9;
  uint64_t v34 = v22;
  uint64_t v35 = v21;
  sub_54124((uint64_t)&v26);
  uint64_t v10 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView;
  id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView), "layer"));
  char v26 = v3;
  char v27 = v4;
  char v28 = v5;
  uint64_t v29 = v6;
  uint64_t v30 = v23;
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  uint64_t v33 = v9;
  uint64_t v12 = v2;
  uint64_t v34 = v22;
  uint64_t v35 = v21;
  char v13 = BookThemeEntity.hasDarkBackground.getter();
  LODWORD(v14) = 1036831949;
  if (v13) {
    *(float *)&double v14 = 0.15;
  }
  [v11 setShadowOpacity:v14, v21, v22, v23];

  id v15 = [*(id *)(v2 + v10) layer];
  if (qword_3FD670 != -1) {
    swift_once();
  }
  id v16 = [(id)qword_3FEC28 CGColor];
  [v15 setShadowColor:v16];

  id v17 = [*(id *)(v12 + v10) layer];
  uint64_t v18 = v17;
  double v19 = 2.0;
  if (a2 == 3)
  {
    double v20 = 5.0;
  }
  else
  {
    double v19 = 8.0;
    double v20 = 32.0;
  }
  [v17 setShadowOffset:0.0, v19];

  id v25 = [*(id *)(v12 + v10) layer];
  [v25 setShadowRadius:v20];
}

void sub_54508(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7, double a8)
{
  CGFloat v13 = a2 + -1.0;
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  [v8 frame];
  [v8 setFrame:a1, v13, Width];
  v50.origin.CGFloat x = a1;
  v50.origin.CGFloat y = a2;
  v50.size.CGFloat width = a3;
  v50.size.CGFloat height = a4;
  double v15 = (CGRectGetHeight(v50) + 2.0) / 3.0;
  if (v15 <= 8.0) {
    double v16 = v15;
  }
  else {
    double v16 = 8.0;
  }
  id v17 = [v8 layer:a5, a6, a7];
  [v17 setCornerRadius:v16];

  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    uint64_t v18 = self;
    [v18 begin];
    id v19 = [self functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    [v18 setAnimationTimingFunction:v19];

    [v18 setDisableActions:1];
  }
  id v20 = *(id *)&v8[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewGradientLayer];
  v51.origin.CGFloat x = a1;
  v51.origin.CGFloat y = a2;
  v51.size.CGFloat width = a3;
  v51.size.CGFloat height = a4;
  double v21 = CGRectGetWidth(v51);
  v52.origin.CGFloat x = a1;
  v52.origin.CGFloat y = a2;
  v52.size.CGFloat width = a3;
  v52.size.CGFloat height = a4;
  [v20 setFrame:0.0, 1.5, v21, CGRectGetHeight(v52) * 0.5];

  [v8 frame];
  CGFloat v22 = CGRectGetWidth(v53) + -2.0;
  v54.origin.CGFloat x = a1;
  v54.origin.CGFloat y = a2;
  v54.size.CGFloat width = a3;
  v54.size.CGFloat height = a4;
  double Height = CGRectGetHeight(v54);
  uint64_t v24 = self;
  id v25 = [v24 bezierPathWithRoundedRect:1.0, 1.0, v22, Height, v16 + -1.0];
  id v26 = *(id *)&v8[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInnerStrokeLayer];
  id v27 = [v25 CGPath];
  [v26 setPath:v27];

  uint64_t v28 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView;
  id v29 = *(id *)&v8[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView];
  v55.origin.CGFloat x = a1;
  v55.origin.CGFloat y = a2;
  v55.size.CGFloat width = a3;
  v55.size.CGFloat height = a4;
  double v30 = CGRectGetWidth(v55);
  [v8 frame];
  [v29 setFrame:0.0, 0.0, v30];

  id v31 = [*(id *)&v8[v28] layer];
  [v31 setCornerRadius:v16];

  id v32 = [*(id *)&v8[v28] layer];
  [v32 setCornerCurve:kCACornerCurveContinuous];

  v56.origin.CGFloat x = a1;
  v56.origin.CGFloat y = a2;
  v56.size.CGFloat width = a3;
  v56.size.CGFloat height = a4;
  double v33 = CGRectGetWidth(v56);
  v57.origin.CGFloat x = a1;
  v57.origin.CGFloat y = a2;
  v57.size.CGFloat width = a3;
  v57.size.CGFloat height = a4;
  id v34 = [v24 bezierPathWithRoundedRect:0.0, 0.0, v33, CGRectGetHeight(v57) + 2.0, v16];
  id v35 = [v24 bezierPathWithRect:v42, v44, v46, a8];
  [v34 appendPath:v35];
  [v34 closePath];
  id v48 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v36 = [v34 CGPath];
  [v48 setPath:v36];

  [v48 setFillRule:kCAFillRuleEvenOdd];
  id v37 = [*(id *)&v8[v28] layer];
  [v37 setMask:v48];

  if (UIAccessibilityIsReduceMotionEnabled())
  {
    v58.origin.CGFloat x = a1;
    v58.origin.CGFloat y = a2;
    v58.size.CGFloat width = a3;
    v58.size.CGFloat height = a4;
    CGRectGetHeight(v58);
    [v8 frame];
    [v8 setFrame:];
    id v38 = *(id *)&v8[v28];
    v59.origin.CGFloat x = a1;
    v59.origin.CGFloat y = a2;
    v59.size.CGFloat width = a3;
    v59.size.CGFloat height = a4;
    CGRectGetHeight(v59);
    [v38 frame];
    [v38 setFrame:];
  }
  else
  {
    char v39 = self;
    [v39 setAnimationDuration:0.5];
    sub_5516C();
    swift_allocObject();
    uint64_t v40 = swift_unknownObjectWeakInit();
    __chkstk_darwin(v40);
    sub_2FCA00();
    swift_release();
    [v39 commit];
  }
}

void sub_54B74(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    v11.origin.CGFloat x = a1;
    v11.origin.CGFloat y = a2;
    v11.size.CGFloat width = a3;
    v11.size.CGFloat height = a4;
    CGRectGetHeight(v11);
    [v9 frame];
    [v9 setFrame:];

    id v10 = *(id *)&v9[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView];
    v12.origin.CGFloat x = a1;
    v12.origin.CGFloat y = a2;
    v12.size.CGFloat width = a3;
    v12.size.CGFloat height = a4;
    CGRectGetHeight(v12);
    [v10 frame];
    [v10 setFrame:];
  }
}

void sub_54C88()
{
  id v7 = [v0 layer];
  if (BookThemeEntity.hasDarkBackground.getter())
  {
    if (qword_3FD680 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_3FEC38;
  }
  else
  {
    if (qword_3FD688 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_3FEC40;
  }
  id v2 = [*v1 CGColor:v7];
  [v8 setBorderColor:v2];

  uint64_t v9 = (char *)OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView;
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v10
                                                             + OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView), "layer"));
  id v4 = BookThemeEntity.backgroundColor.getter();
  id v5 = [v4 CGColor];

  [v3 setBorderColor:v5];
  id v6 = *(id *)&v9[v10];
  id v11 = BookThemeEntity.backgroundColor.getter();
  [v6 setBackgroundColor:v11];
}

void sub_54F10()
{
  char v1 = BookThemeEntity.hasDarkBackground.getter();
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewGradientLayer);
  sub_371F4(&qword_400510);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_32BAD0;
  if (v1)
  {
    uint64_t v4 = qword_3FD698;
    id v5 = v2;
    if (v4 != -1) {
      swift_once();
    }
    id v6 = [(id)qword_3FEC50 CGColor];
    type metadata accessor for CGColor(0);
    uint64_t v8 = v7;
    *(void *)(v3 + 56) = v7;
    *(void *)(v3 + 32) = v6;
    if (qword_3FD6A0 != -1) {
      swift_once();
    }
    uint64_t v9 = &qword_3FEC58;
  }
  else
  {
    uint64_t v10 = qword_3FD6A8;
    id v11 = v2;
    if (v10 != -1) {
      swift_once();
    }
    id v12 = [(id)qword_3FEC60 CGColor];
    type metadata accessor for CGColor(0);
    uint64_t v8 = v13;
    *(void *)(v3 + 56) = v13;
    *(void *)(v3 + 32) = v12;
    if (qword_3FD6B0 != -1) {
      swift_once();
    }
    uint64_t v9 = &qword_3FEC68;
  }
  id v14 = [(id)*v9 CGColor];
  *(void *)(v3 + 88) = v8;
  *(void *)(v3 + 64) = v14;
  Class isa = sub_2FC3D0().super.isa;
  swift_bridgeObjectRelease();
  [v2 setColors:isa];
}

unint64_t sub_5516C()
{
  unint64_t result = qword_400CD0;
  if (!qword_400CD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_400CD0);
  }
  return result;
}

uint64_t sub_551AC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_551E4()
{
  sub_54B74(v0[3], v0[4], v0[5], v0[6]);
}

id ReadingLoupeView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingLoupeView();
  [super dealloc];
}

uint64_t method lookup function for ReadingLoupeView(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingLoupeView);
}

uint64_t dispatch thunk of ReadingLoupeView.updateViewStyle(for:)()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of ReadingLoupeView.updateView(for:overlayRect:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

void sub_55304()
{
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInset] = 0x3FF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeOverlayMaskBuffer] = 0x4059000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeTwoUpMarginInset] = 0x4010000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeTwoUpWidthAdjustment] = 0x3FE0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeOverlap] = 0x4024000000000000;
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewShadowView;
  *(void *)&v0[v1] = sub_53EC4();
  uint64_t v2 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewGradientLayer;
  id v3 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v3 setCornerRadius:8.0];
  uint64_t v4 = qword_3FD678;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  [v5 setCornerCurve:qword_3FEC30];

  [v5 setAllowsGroupOpacity:1];
  *(void *)&v0[v2] = v5;
  uint64_t v6 = OBJC_IVAR____TtC8BookEPUB16ReadingLoupeView_readingLoupeViewInnerStrokeLayer;
  id v7 = [objc_allocWithZone((Class)CAShapeLayer) init];
  [v7 setLineWidth:1.0];
  if (qword_3FD690 != -1) {
    swift_once();
  }
  [v7 setFillColor:qword_3FEC48];
  [v7 setCornerCurve:qword_3FEC30];
  [v7 setAllowsGroupOpacity:1];
  *(void *)&v0[v6] = v7;

  sub_2FD010();
  __break(1u);
}

unint64_t static DebugOptions.kShowPageCurlOptions.getter()
{
  return 0xD000000000000014;
}

unint64_t static DebugOptions.kFullyFadeChrome.getter()
{
  return 0xD000000000000013;
}

unint64_t static DebugOptions.kMostlyFadeChrome.getter()
{
  return 0xD000000000000011;
}

unint64_t static DebugOptions.kMostlyFadeChromeAlpha.getter()
{
  return 0xD000000000000016;
}

void static DebugOptions.registerOptions()()
{
  id v0 = [self standardUserDefaults];
  sub_371F4((uint64_t *)&unk_401380);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_32C750;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x800000000030CC80;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000011;
  *(void *)(inited + 88) = 0x800000000030CCA0;
  *(unsigned char *)(inited + 96) = 0;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x800000000030CCC0;
  *(void *)(inited + 144) = 0x3FD3333333333333;
  *(void *)(inited + 168) = &type metadata for Double;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x800000000030CCE0;
  *(void *)(inited + 192) = 64;
  *(void *)(inited + 216) = &type metadata for Int;
  *(void *)(inited + 224) = 0xD000000000000022;
  *(void *)(inited + 232) = 0x800000000030CD00;
  *(void *)(inited + 240) = 60;
  *(void *)(inited + 264) = &type metadata for Int;
  *(void *)(inited + 272) = 0xD00000000000001DLL;
  *(void *)(inited + 280) = 0x800000000030CD30;
  *(void *)(inited + 288) = 0x3FD0000000000000;
  *(void *)(inited + 312) = &type metadata for Double;
  *(void *)(inited + 320) = 0xD000000000000025;
  *(void *)(inited + 328) = 0x800000000030CD50;
  *(void *)(inited + 336) = 0x3FC999999999999ALL;
  *(void *)(inited + 360) = &type metadata for Double;
  *(void *)(inited + 368) = 0xD000000000000014;
  *(void *)(inited + 376) = 0x800000000030CC60;
  *(void *)(inited + 408) = &type metadata for Bool;
  *(unsigned char *)(inited + 384) = 0;
  *(void *)(inited + 416) = sub_2FC180();
  *(void *)(inited + 424) = v2;
  *(void *)(inited + 456) = &type metadata for String;
  *(void *)(inited + 432) = 0x4646464646464646;
  *(void *)(inited + 440) = 0xE800000000000000;
  *(void *)(inited + 464) = sub_2FC180();
  *(void *)(inited + 472) = v3;
  *(void *)(inited + 504) = &type metadata for String;
  *(void *)(inited + 480) = 0x4646354635463546;
  *(void *)(inited + 488) = 0xE800000000000000;
  *(void *)(inited + 512) = sub_2FC180();
  *(void *)(inited + 520) = v4;
  *(void *)(inited + 552) = &type metadata for String;
  *(void *)(inited + 528) = 0x4646334233423342;
  *(void *)(inited + 536) = 0xE800000000000000;
  *(void *)(inited + 560) = sub_2FC180();
  *(void *)(inited + 568) = v5;
  *(void *)(inited + 600) = &type metadata for String;
  *(void *)(inited + 576) = 0x4646353235323532;
  *(void *)(inited + 584) = 0xE800000000000000;
  *(void *)(inited + 608) = sub_2FC180();
  *(void *)(inited + 616) = v6;
  *(void *)(inited + 648) = &type metadata for Double;
  *(void *)(inited + 624) = 0x3FF0000000000000;
  *(void *)(inited + 656) = sub_2FC180();
  *(void *)(inited + 664) = v7;
  *(void *)(inited + 696) = &type metadata for Double;
  *(void *)(inited + 672) = 0x3FF0000000000000;
  *(void *)(inited + 704) = sub_2FC180();
  *(void *)(inited + 712) = v8;
  *(void *)(inited + 744) = &type metadata for Double;
  *(void *)(inited + 720) = 0x3FEEB851EB851EB8;
  *(void *)(inited + 752) = sub_2FC180();
  *(void *)(inited + 760) = v9;
  *(void *)(inited + 792) = &type metadata for Double;
  *(void *)(inited + 768) = 0x3FC999999999999ALL;
  *(void *)(inited + 800) = sub_2FC180();
  *(void *)(inited + 808) = v10;
  *(void *)(inited + 840) = &type metadata for Double;
  *(void *)(inited + 816) = 0x3FF0000000000000;
  *(void *)(inited + 848) = sub_2FC180();
  *(void *)(inited + 856) = v11;
  *(void *)(inited + 888) = &type metadata for Double;
  *(void *)(inited + 864) = 0x3FE8000000000000;
  *(void *)(inited + 896) = sub_2FC180();
  *(void *)(inited + 904) = v12;
  *(void *)(inited + 936) = &type metadata for Double;
  *(void *)(inited + 912) = 0x3FEB333333333333;
  *(void *)(inited + 944) = sub_2FC180();
  *(void *)(inited + 952) = v13;
  *(void *)(inited + 984) = &type metadata for Double;
  *(void *)(inited + 960) = 0x3FD999999999999ALL;
  sub_3E3C8(inited);
  Class isa = sub_2FC060().super.isa;
  swift_bridgeObjectRelease();
  [v0 registerDefaults:isa];

  _s8BookEPUB12DebugOptionsC7refreshyyFZ_0();
  [self be_enablePageCurlHacks];
}

uint64_t static DebugOptions.showPageCurlOptions.getter()
{
  return byte_3FED08;
}

void static DebugOptions.showPageCurlOptions.setter(char a1)
{
  byte_3FED08 = a1;
  id v2 = [self standardUserDefaults];
  id v3 = sub_2FC140();
  [v2 setBool:a1 & 1 forKey:v3];
}

void (*static DebugOptions.showPageCurlOptions.modify(unsigned char *a1))(char *a1)
{
  *a1 = byte_3FED08;
  return sub_55A64;
}

void sub_55A64(char *a1)
{
  byte_3FED08 = *a1;
  uint64_t v1 = byte_3FED08;
  id v3 = [self standardUserDefaults];
  NSString v2 = sub_2FC140();
  [v3 setBool:v1 forKey:v2];
}

double static DebugOptions.pageCurlTapAnimationDuration.getter()
{
  return *(double *)&qword_3FECF8;
}

void static DebugOptions.pageCurlTapAnimationDuration.setter(double a1)
{
}

void (*static DebugOptions.pageCurlTapAnimationDuration.modify(void *a1))(void *a1, uint64_t a2)
{
  *a1 = qword_3FECF8;
  return sub_55B64;
}

void sub_55B64(void *a1, uint64_t a2)
{
}

double static DebugOptions.pageCurlInteractiveAnimationDuration.getter()
{
  return *(double *)&qword_3FED00;
}

void static DebugOptions.pageCurlInteractiveAnimationDuration.setter(double a1)
{
}

void sub_55BB8(double *a1, double a2)
{
  *a1 = a2;
  id v2 = [self standardUserDefaults];
  Class isa = sub_2FB620().super.super.isa;
  id v4 = sub_2FC140();
  [v2 setObject:isa forKey:v4];
}

void (*static DebugOptions.pageCurlInteractiveAnimationDuration.modify(void *a1))(void *a1, uint64_t a2)
{
  *a1 = qword_3FED00;
  return sub_55C9C;
}

void sub_55C9C(void *a1, uint64_t a2)
{
}

void sub_55CC0(void *a1, uint64_t a2, void *a3)
{
  *a3 = *a1;
  id v5 = [self standardUserDefaults];
  Class isa = sub_2FB620().super.super.isa;
  NSString v4 = sub_2FC140();
  [v5 setObject:isa forKey:v4];
}

uint64_t static DebugOptions.curlInputFrontColor.getter()
{
  uint64_t v0 = *(void *)aFfffffff;
  uint64_t v1 = *(void *)&aFfffffff[8];
  swift_bridgeObjectRetain();

  return Color.init(hex:)(v0, v1);
}

uint64_t static DebugOptions.curlInputFrontColor.setter(uint64_t a1)
{
  return sub_56078(a1, (uint64_t)&aFfffffff[8], (Swift::String *)aFfffffff, (id *)&kCurlInputFrontColor);
}

void (*static DebugOptions.curlInputFrontColor.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)aFfffffff;
  uint64_t v3 = *(void *)&aFfffffff[8];
  swift_bridgeObjectRetain();
  *a1 = Color.init(hex:)(v2, v3);
  return sub_55E40;
}

void sub_55E40(uint64_t a1, char a2)
{
}

uint64_t static DebugOptions.curlInputBackColor0.getter()
{
  uint64_t v0 = *(void *)aFfffffff_0;
  uint64_t v1 = *(void *)&aFfffffff_0[8];
  swift_bridgeObjectRetain();

  return Color.init(hex:)(v0, v1);
}

uint64_t static DebugOptions.curlInputBackColor0.setter(uint64_t a1)
{
  return sub_56078(a1, (uint64_t)&aFfffffff_0[8], (Swift::String *)aFfffffff_0, (id *)&kCurlInputBackColor0);
}

void (*static DebugOptions.curlInputBackColor0.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)aFfffffff_0;
  uint64_t v3 = *(void *)&aFfffffff_0[8];
  swift_bridgeObjectRetain();
  *a1 = Color.init(hex:)(v2, v3);
  return sub_55F20;
}

void sub_55F20(uint64_t a1, char a2)
{
}

uint64_t static DebugOptions.curlInputBackColor1.getter()
{
  uint64_t v0 = *(void *)aFfffffff_1;
  uint64_t v1 = *(void *)&aFfffffff_1[8];
  swift_bridgeObjectRetain();

  return Color.init(hex:)(v0, v1);
}

uint64_t static DebugOptions.curlInputBackColor1.setter(uint64_t a1)
{
  return sub_56078(a1, (uint64_t)&aFfffffff_1[8], (Swift::String *)aFfffffff_1, (id *)&kCurlInputBackColor1);
}

void (*static DebugOptions.curlInputBackColor1.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)aFfffffff_1;
  uint64_t v3 = *(void *)&aFfffffff_1[8];
  swift_bridgeObjectRetain();
  *a1 = Color.init(hex:)(v2, v3);
  return sub_56000;
}

void sub_56000(uint64_t a1, char a2)
{
}

uint64_t static DebugOptions.curlInputShadowColor.getter()
{
  uint64_t v0 = *(void *)aFfffffff_2;
  uint64_t v1 = *(void *)&aFfffffff_2[8];
  swift_bridgeObjectRetain();

  return Color.init(hex:)(v0, v1);
}

uint64_t static DebugOptions.curlInputShadowColor.setter(uint64_t a1)
{
  return sub_56078(a1, (uint64_t)&aFfffffff_2[8], (Swift::String *)aFfffffff_2, (id *)&kCurlInputShadowColor);
}

uint64_t sub_56078(uint64_t a1, uint64_t a2, Swift::String *a3, id *a4)
{
  *a3 = Color.toHex()();
  swift_bridgeObjectRelease();
  id v5 = [self standardUserDefaults];
  swift_bridgeObjectRetain();
  NSString v6 = sub_2FC140();
  swift_bridgeObjectRelease();
  id v7 = *a4;
  [v5 setObject:v6 forKey:v7];

  return swift_release();
}

void (*static DebugOptions.curlInputShadowColor.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)aFfffffff_2;
  uint64_t v3 = *(void *)&aFfffffff_2[8];
  swift_bridgeObjectRetain();
  *a1 = Color.init(hex:)(v2, v3);
  return sub_561C4;
}

void sub_561C4(uint64_t a1, char a2)
{
}

void sub_561DC(uint64_t a1, char a2, void **a3, uint64_t *a4, id *a5)
{
  if (a2)
  {
    swift_retain();
    Swift::String v8 = Color.toHex()();
    *a4 = v8._countAndFlagsBits;
    *a3 = v8._object;
    swift_bridgeObjectRelease();
    id v12 = [self standardUserDefaults];
    swift_bridgeObjectRetain();
    NSString v9 = sub_2FC140();
    swift_bridgeObjectRelease();
    id v10 = *a5;
    [v12 setObject:v9 forKey:v10];
    swift_release();
  }
  else
  {
    Swift::String v11 = Color.toHex()();
    *a4 = v11._countAndFlagsBits;
    *a3 = v11._object;
    swift_bridgeObjectRelease();
    id v12 = [self standardUserDefaults];
    swift_bridgeObjectRetain();
    NSString v9 = sub_2FC140();
    swift_bridgeObjectRelease();
    id v10 = *a5;
    [v12 setObject:v9 forKey:v10];
  }
  swift_release();
}

double static DebugOptions.curlInputFrontOpacity.getter()
{
  return *(double *)&qword_3FED50;
}

void static DebugOptions.curlInputFrontOpacity.setter(double a1)
{
}

void (*static DebugOptions.curlInputFrontOpacity.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED50;
  return sub_563B8;
}

void sub_563B8(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputBack0Opacity.getter()
{
  return *(double *)&qword_3FED58;
}

void static DebugOptions.curlInputBack0Opacity.setter(double a1)
{
}

void (*static DebugOptions.curlInputBack0Opacity.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED58;
  return sub_56418;
}

void sub_56418(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputBack1Opacity.getter()
{
  return *(double *)&qword_3FED60;
}

void static DebugOptions.curlInputBack1Opacity.setter(double a1)
{
}

void (*static DebugOptions.curlInputBack1Opacity.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED60;
  return sub_56478;
}

void sub_56478(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputShadowOpacity.getter()
{
  return *(double *)&qword_3FED68;
}

void static DebugOptions.curlInputShadowOpacity.setter(double a1)
{
}

void (*static DebugOptions.curlInputShadowOpacity.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED68;
  return sub_564D8;
}

void sub_564D8(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputFrontStrength.getter()
{
  return *(double *)&qword_3FED70;
}

void static DebugOptions.curlInputFrontStrength.setter(double a1)
{
}

void (*static DebugOptions.curlInputFrontStrength.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED70;
  return sub_56538;
}

void sub_56538(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputBack0Strength.getter()
{
  return *(double *)&qword_3FED78;
}

void static DebugOptions.curlInputBack0Strength.setter(double a1)
{
}

void (*static DebugOptions.curlInputBack0Strength.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED78;
  return sub_56598;
}

void sub_56598(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputBack1Strength.getter()
{
  return *(double *)&qword_3FED80;
}

void static DebugOptions.curlInputBack1Strength.setter(double a1)
{
}

void (*static DebugOptions.curlInputBack1Strength.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED80;
  return sub_565F8;
}

void sub_565F8(double *a1, uint64_t a2)
{
}

double static DebugOptions.curlInputShadowStrength.getter()
{
  return *(double *)&qword_3FED88;
}

void static DebugOptions.curlInputShadowStrength.setter(double a1)
{
}

void sub_5662C(double *a1, void *a2, double a3)
{
  *a1 = a3;
  id v5 = [self standardUserDefaults];
  [v5 setDouble:*a2 forKey:a3];
}

void (*static DebugOptions.curlInputShadowStrength.modify(void *a1))(double *a1, uint64_t a2)
{
  *a1 = qword_3FED88;
  return sub_566DC;
}

void sub_566DC(double *a1, uint64_t a2)
{
}

void sub_566F0(double *a1, uint64_t a2, void *a3, void *a4)
{
  double v5 = *a1;
  *a3 = *(void *)a1;
  id v6 = [self standardUserDefaults];
  [v6 setDouble:*a4 forKey:v5];
}

uint64_t static DebugOptions.fullyFadeChrome.getter()
{
  return byte_3FECD8;
}

void static DebugOptions.fullyFadeChrome.setter(char a1)
{
}

void (*static DebugOptions.fullyFadeChrome.modify(unsigned char *a1))(unsigned __int8 *a1)
{
  *a1 = byte_3FECD8;
  return sub_567E4;
}

void sub_567E4(unsigned __int8 *a1)
{
}

uint64_t static DebugOptions.mostlyFadeChrome.getter()
{
  return byte_3FECD9;
}

void static DebugOptions.mostlyFadeChrome.setter(char a1)
{
}

void sub_56860(char a1)
{
  uint64_t v2 = self;
  id v3 = [v2 standardUserDefaults];
  NSString v4 = sub_2FC140();
  [v3 setBool:a1 & 1 forKey:v4];

  id v5 = [v2 standardUserDefaults];
  NSString v6 = sub_2FC140();
  [v5 setBool:0 forKey:v6];

  _s8BookEPUB12DebugOptionsC7refreshyyFZ_0();
}

void (*static DebugOptions.mostlyFadeChrome.modify(unsigned char *a1))(unsigned __int8 *a1)
{
  *a1 = byte_3FECD9;
  return sub_56980;
}

void sub_56980(unsigned __int8 *a1)
{
}

void sub_569B8(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = self;
  id v3 = [v2 standardUserDefaults];
  NSString v4 = sub_2FC140();
  [v3 setBool:v1 forKey:v4];

  id v5 = [v2 standardUserDefaults];
  NSString v6 = sub_2FC140();
  [v5 setBool:0 forKey:v6];

  _s8BookEPUB12DebugOptionsC7refreshyyFZ_0();
}

double static DebugOptions.mostlyFadeChromeAlpha.getter()
{
  return *(double *)&qword_3FECE0;
}

void static DebugOptions.mostlyFadeChromeAlpha.setter()
{
}

void (*static DebugOptions.mostlyFadeChromeAlpha.modify(void *a1))()
{
  *a1 = qword_3FECE0;
  return sub_56B00;
}

void sub_56B00()
{
}

double static DebugOptions.topTapToRevealChromeAreaHeight.getter()
{
  return *(double *)&qword_3FECE8;
}

void static DebugOptions.topTapToRevealChromeAreaHeight.setter()
{
}

void (*static DebugOptions.topTapToRevealChromeAreaHeight.modify(void *a1))()
{
  *a1 = qword_3FECE8;
  return sub_56B70;
}

void sub_56B70()
{
}

double static DebugOptions.pageTurnMarginWidth.getter()
{
  return *(double *)&qword_3FECF0;
}

void static DebugOptions.pageTurnMarginWidth.setter()
{
}

void sub_56BB4()
{
  id v0 = [self standardUserDefaults];
  Class isa = sub_2FB620().super.super.isa;
  NSString v2 = sub_2FC140();
  [v0 setObject:isa forKey:v2];

  _s8BookEPUB12DebugOptionsC7refreshyyFZ_0();
}

void (*static DebugOptions.pageTurnMarginWidth.modify(void *a1))()
{
  *a1 = qword_3FECF0;
  return sub_56C8C;
}

void sub_56C8C()
{
}

void sub_56CA8()
{
  id v0 = [self standardUserDefaults];
  Class isa = sub_2FB620().super.super.isa;
  NSString v2 = sub_2FC140();
  [v0 setObject:isa forKey:v2];

  _s8BookEPUB12DebugOptionsC7refreshyyFZ_0();
}

uint64_t StandardAccessibilityStateProvider.deinit()
{
  return v0;
}

uint64_t StandardAccessibilityStateProvider.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

void _s8BookEPUB12DebugOptionsC7refreshyyFZ_0()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_2FC140();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_3FECD8 = v2;
  NSString v3 = sub_2FC140();
  unsigned __int8 v4 = [v0 BOOLForKey:v3];

  byte_3FECD9 = v4;
  NSString v5 = sub_2FC140();
  [v0 doubleForKey:v5];
  uint64_t v7 = v6;

  qword_3FECE0 = v7;
  NSString v8 = sub_2FC140();
  [v0 doubleForKey:v8];
  uint64_t v10 = v9;

  qword_3FECE8 = v10;
  NSString v11 = sub_2FC140();
  [v0 doubleForKey:v11];
  uint64_t v13 = v12;

  qword_3FECF0 = v13;
  NSString v14 = sub_2FC140();
  [v0 doubleForKey:v14];
  uint64_t v16 = v15;

  qword_3FECF8 = v16;
  NSString v17 = sub_2FC140();
  [v0 doubleForKey:v17];
  uint64_t v19 = v18;

  qword_3FED00 = v19;
  id v20 = [v0 stringForKey:@"kCurlInputFrontColor"];
  if (v20)
  {
    double v21 = v20;
    uint64_t v22 = sub_2FC180();
    uint64_t v24 = v23;

    *(void *)aFfffffff = v22;
    *(void *)&aFfffffff[8] = v24;
    swift_bridgeObjectRelease();
  }
  id v25 = [v0 stringForKey:@"kCurlInputBackColor0"];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = sub_2FC180();
    uint64_t v29 = v28;

    *(void *)aFfffffff_0 = v27;
    *(void *)&aFfffffff_0[8] = v29;
    swift_bridgeObjectRelease();
  }
  id v30 = [v0 stringForKey:@"kCurlInputBackColor1"];
  if (v30)
  {
    id v31 = v30;
    uint64_t v32 = sub_2FC180();
    uint64_t v34 = v33;

    *(void *)aFfffffff_1 = v32;
    *(void *)&aFfffffff_1[8] = v34;
    swift_bridgeObjectRelease();
  }
  id v35 = [v0 stringForKey:@"kCurlInputShadowColor"];
  if (v35)
  {
    id v36 = v35;
    uint64_t v37 = sub_2FC180();
    uint64_t v39 = v38;

    *(void *)aFfffffff_2 = v37;
    *(void *)&aFfffffff_2[8] = v39;
    swift_bridgeObjectRelease();
  }
  if ([v0 objectForKey:@"kCurlInputFrontOpacity"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED50 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputBack0Opacity"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED58 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputBack1Opacity"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED60 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputShadowOpacity"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED68 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputFrontStrength"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED70 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputBack0Strength"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED78 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputBack1Strength"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED80 = v40;
    }
  }
  else
  {
    sub_575F0((uint64_t)v43);
  }
  if ([v0 objectForKey:@"kCurlInputShadowStrength"])
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_57588((uint64_t)&v41, (uint64_t)v43);
  if (v44)
  {
    if (swift_dynamicCast()) {
      qword_3FED88 = v40;
    }
  }
  else
  {

    sub_575F0((uint64_t)v43);
  }
}

uint64_t type metadata accessor for DebugOptions()
{
  return self;
}

uint64_t method lookup function for DebugOptions(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DebugOptions);
}

uint64_t sub_57588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4((uint64_t *)&unk_4016F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_575F0(uint64_t a1)
{
  uint64_t v2 = sub_371F4((uint64_t *)&unk_4016F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AnalyticsEvent()
{
  return &type metadata for AnalyticsEvent;
}

uint64_t destroy for AnalyticsEvent.Reading(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 64);
  if (v1 >= 7) {
    unsigned int v1 = *(_DWORD *)result + 7;
  }
  if (v1 == 2 || v1 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AnalyticsEvent.Reading(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 64);
  if (v3 >= 7) {
    unsigned int v3 = *(_DWORD *)a2 + 7;
  }
  switch(v3)
  {
    case 0u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 64) = 0;
      return a1;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      char v6 = 1;
      goto LABEL_8;
    case 2u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      char v6 = 2;
LABEL_8:
      *(unsigned char *)(a1 + 64) = v6;
      swift_bridgeObjectRetain();
      return a1;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v8 = 3;
      goto LABEL_13;
    case 4u:
      *(void *)a1 = *(void *)a2;
      char v8 = 4;
      goto LABEL_13;
    case 5u:
      *(void *)a1 = *(void *)a2;
      char v8 = 5;
      goto LABEL_13;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v8 = 6;
LABEL_13:
      *(unsigned char *)(a1 + 64) = v8;
      break;
    default:
      long long v4 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v4;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for AnalyticsEvent.Reading(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)a1 + 7;
    }
    if (v4 == 2 || v4 == 1) {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 64);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)a2 + 7;
    }
    switch(v5)
    {
      case 0u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 64) = 0;
        return a1;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
        *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        char v9 = 1;
        goto LABEL_14;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v9 = 2;
LABEL_14:
        *(unsigned char *)(a1 + 64) = v9;
        swift_bridgeObjectRetain();
        return a1;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v10 = 3;
        goto LABEL_19;
      case 4u:
        *(void *)a1 = *(void *)a2;
        char v10 = 4;
        goto LABEL_19;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v10 = 5;
        goto LABEL_19;
      case 6u:
        long long v11 = *a2;
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(_OWORD *)a1 = v11;
        char v10 = 6;
LABEL_19:
        *(unsigned char *)(a1 + 64) = v10;
        break;
      default:
        *(_OWORD *)a1 = *a2;
        long long v6 = a2[1];
        long long v7 = a2[2];
        long long v8 = a2[3];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)(a1 + 32) = v7;
        *(_OWORD *)(a1 + 48) = v8;
        *(_OWORD *)(a1 + 16) = v6;
        break;
    }
  }
  return a1;
}

__n128 initializeWithTake for AnalyticsEvent.Reading(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AnalyticsEvent.Reading(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)a1 + 7;
    }
    if (v4 == 2 || v4 == 1) {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)a2 + 7;
    }
    switch(v5)
    {
      case 0u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 64) = 0;
        return a1;
      case 1u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        long long v9 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v9;
        char v10 = 1;
        goto LABEL_18;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v10 = 2;
        goto LABEL_18;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v10 = 3;
        goto LABEL_18;
      case 4u:
        *(void *)a1 = *(void *)a2;
        char v10 = 4;
        goto LABEL_18;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v10 = 5;
        goto LABEL_18;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v10 = 6;
LABEL_18:
        *(unsigned char *)(a1 + 64) = v10;
        break;
      default:
        long long v6 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v6;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsEvent.Reading(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 8) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnalyticsEvent.Reading(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_57BAC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 7) {
    return (*(_DWORD *)a1 + 7);
  }
  return result;
}

uint64_t sub_57BC8(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 7;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsEvent.Reading()
{
  return &type metadata for AnalyticsEvent.Reading;
}

uint64_t dispatch thunk of ReadingAnalyticsEventSubmitting.submit(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ReadingAnalyticsEventSubmitting.setInitial(scrollViewEnabledStatus:baseTheme:fontFamily:fontSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8 + 16))(a1, a2, a3, a4, a5, a6 & 1);
}

id FootnoteRouter.__allocating_init(eventHandler:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (char *)objc_allocWithZone(v2);
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + 8) = a2;
  swift_unknownObjectWeakAssign();
  v7.receiver = v4;
  v7.super_class = v2;
  [super init];
  swift_unknownObjectRelease();
  return v5;
}

id FootnoteRouter.init(eventHandler:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + 8) = a2;
  swift_unknownObjectWeakAssign();
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for FootnoteRouter();
  id v3 = [super init];
  swift_unknownObjectRelease();
  return v3;
}

uint64_t type metadata accessor for FootnoteRouter()
{
  return self;
}

void FootnoteRouter.init()()
{
}

id FootnoteRouter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FootnoteRouter();
  [super dealloc];
}

uint64_t FootnoteRouter.presentAlertController(_:completion:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3, ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  else if (a2)
  {
    return a2();
  }
  return result;
}

uint64_t FootnoteRouter.handleTableOfContentsRequest(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FootnoteRouter.handleInternalLoadRequest(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, ObjectType, v5);
    swift_unknownObjectRelease();
    return v7 & 1;
  }
  return result;
}

uint64_t FootnoteRouter.handleExternalLoadRequest(externalURL:likelyUserInitiated:)(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 32))(a1, a2 & 1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FootnoteRouter.handleUserRequestForFrameToLoadExternalURL(externalURL:completion:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return a2();
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t))(v8 + 40))(a1, a2, a3, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t FootnoteRouter.footnoteViewDidFinishLoad(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall FootnoteRouter.footnoteViewDidDisappear(_:)(UIViewController a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(Class, uint64_t, uint64_t))(v4 + 56))(a1.super.super.isa, ObjectType, v4);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_5824C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v7 = *v3 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3, ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  else if (a2)
  {
    return a2();
  }
  return result;
}

uint64_t sub_58310(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_583A4(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, ObjectType, v5);
    swift_unknownObjectRelease();
    return v7 & 1;
  }
  return result;
}

uint64_t sub_58424(uint64_t a1, char a2)
{
  uint64_t v5 = *v2 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 32))(a1, a2 & 1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_584D0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v7 = *v3 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return a2();
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t))(v8 + 40))(a1, a2, a3, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_58590(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_58624(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8BookEPUB14FootnoteRouter_eventHandler;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of FootnoteEventHandling.presentAlertControllerFromFootnote(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FootnoteEventHandling.handleTableOfContentsRequestFromFootnote(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FootnoteEventHandling.handleInternalLoadRequestFromFootnote(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FootnoteEventHandling.handleExternalLoadRequestFromFootnote(externalURL:likelyUserInitiated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FootnoteEventHandling.handleUserRequestForFrameToLoadExternalURL(externalURL:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FootnoteEventHandling.footnoteViewDidFinishLoad(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FootnoteEventHandling.footnoteViewDidDisappear(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FootnoteRouting.presentAlertController(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FootnoteRouting.handleTableOfContentsRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FootnoteRouting.handleInternalLoadRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FootnoteRouting.handleExternalLoadRequest(externalURL:likelyUserInitiated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FootnoteRouting.handleUserRequestForFrameToLoadExternalURL(externalURL:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FootnoteRouting.footnoteViewDidFinishLoad(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FootnoteRouting.footnoteViewDidDisappear(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t method lookup function for FootnoteRouter(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FootnoteRouter);
}

uint64_t dispatch thunk of FootnoteRouter.__allocating_init(eventHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

id NSLayoutConstraint.with(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_58828(a1, a2);

  return v2;
}

void *sub_58828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  id v4 = [v2 firstAnchor:a1, a2];
  id v5 = [v4 name];

  uint64_t v6 = sub_2FC180();
  uint64_t v8 = v7;

  v19._uint64_t countAndFlagsBits = v6;
  v19._object = v8;
  sub_2FC260(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 95;
  v20._object = (void *)0xE100000000000000;
  sub_2FC260(v20);
  id v9 = [v3 secondAnchor];
  if (v9)
  {
    char v10 = v9;
    id v11 = [v9 name];

    uint64_t v12 = sub_2FC180();
    NSString v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    NSString v14 = (void *)0xE000000000000000;
  }
  v21._uint64_t countAndFlagsBits = v12;
  v21._object = v14;
  sub_2FC260(v21);
  swift_bridgeObjectRelease();
  NSString v15 = sub_2FC140();
  swift_bridgeObjectRelease();
  [v3 setIdentifier:v15];

  return v3;
}

char *sub_58984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v76 = a6;
  uint64_t v77 = a1;
  uint64_t v73 = a5;
  uint64_t v81 = a3;
  *(void *)&long long v82 = a4;
  uint64_t v7 = sub_2FCAB0();
  uint64_t v79 = *(void *)(v7 - 8);
  id v80 = (char *)v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_2FCA90();
  uint64_t v10 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2FCB10();
  uint64_t v74 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v72 - v15;
  id v17 = objc_allocWithZone((Class)UILabel);
  uint64_t v18 = v6;
  id v19 = [v17 init];
  uint64_t v20 = OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_label;
  *(void *)&v18[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_label] = v19;
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v21 = self;
  id v22 = v19;
  id v23 = [v21 boldSystemFontOfSize:14.0];
  [v22 setFont:v23];

  id v24 = *(id *)&v18[v20];
  NSString v25 = sub_2FC140();
  swift_bridgeObjectRelease();
  [v24 setText:v25];

  id v26 = *(void **)&v18[v20];
  [v26 setTextAlignment:1];
  [v26 setLineBreakMode:0];
  [v26 setNumberOfLines:0];
  sub_2FCB00();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v78);
  sub_2FCAA0();
  (*(void (**)(char *, void, char *))(v79 + 104))(v9, enum case for UIButton.Configuration.TitleAlignment.center(_:), v80);
  id v80 = v16;
  sub_2FCAC0();
  sub_39F90(0, &qword_3FEF30);
  sub_2FCAD0();
  uint64_t v27 = (void *)sub_2FCB20();
  uint64_t v28 = OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_button;
  *(void *)&v18[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_button] = v27;
  id v29 = v27;
  NSString v30 = sub_2FC140();
  swift_bridgeObjectRelease();
  [v29 setTitle:v30 forState:0];

  id v31 = *(void **)&v18[v28];
  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_371F4((uint64_t *)&unk_400460);
  uint64_t v32 = swift_allocObject();
  long long v82 = xmmword_32C820;
  *(_OWORD *)(v32 + 16) = xmmword_32C820;
  uint64_t v33 = *(void **)&v18[v20];
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v31;
  uint64_t v84 = v32;
  sub_2FC410();
  id v34 = objc_allocWithZone((Class)UIStackView);
  sub_39F90(0, (unint64_t *)&qword_400CD0);
  id v35 = v33;
  id v36 = v31;
  Class isa = sub_2FC3D0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v38 = v34;
  uint64_t v39 = v20;
  id v40 = [v38 initWithArrangedSubviews:isa];

  [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v40 setAxis:1];
  [v40 setAlignment:3];
  [v40 setDistribution:3];
  [v40 setSpacing:24.0];
  long long v41 = *(void **)&v18[v20];
  id v42 = [v41 heightAnchor];
  uint64_t result = (char *)[v41 font];
  if (result)
  {
    uint64_t v44 = result;
    [result lineHeight];
    double v46 = v45;

    id v47 = [v42 constraintEqualToConstant:v46];
    uint64_t v48 = OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_labelHeightConstraint;
    *(void *)&v18[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_labelHeightConstraint] = v47;
    id v49 = self;
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = v82;
    id v51 = [*(id *)&v18[v39] widthAnchor];
    id v52 = [v40 widthAnchor];
    id v53 = [v51 constraintEqualToAnchor:v52];

    *(void *)(v50 + 32) = v53;
    CGRect v54 = *(void **)&v18[v48];
    *(void *)(v50 + 40) = v54;
    uint64_t v84 = v50;
    sub_2FC410();
    sub_39F90(0, &qword_406560);
    id v55 = v54;
    Class v56 = sub_2FC3D0().super.isa;
    swift_bridgeObjectRelease();
    [v49 activateConstraints:v56];

    CGRect v57 = &v18[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_action];
    uint64_t v58 = v76;
    *(void *)CGRect v57 = v73;
    *((void *)v57 + 1) = v58;
    swift_retain();

    TimeoutWarningView = (objc_class *)type metadata accessor for LoadTimeoutWarningView();
    v83.receiver = v18;
    v83.super_class = TimeoutWarningView;
    uint64_t v60 = (char *)[v83 initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v60 addSubview:v40];
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_32C830;
    id v62 = [v40 centerXAnchor];
    id v63 = [v60 centerXAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    *(void *)(v61 + 32) = v64;
    id v65 = [v40 centerYAnchor];
    id v66 = [v60 centerYAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v61 + 40) = v67;
    id v68 = [v40 widthAnchor];
    id v69 = [v60 widthAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69];

    *(void *)(v61 + 48) = v70;
    uint64_t v84 = v61;
    sub_2FC410();
    Class v71 = sub_2FC3D0().super.isa;
    swift_bridgeObjectRelease();
    [v49 activateConstraints:v71];

    [*(id *)&v60[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_button] addTarget:v60 action:"buttonAction" forControlEvents:1];
    swift_release();

    (*(void (**)(char *, uint64_t))(v74 + 8))(v80, v75);
    return v60;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_5923C()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for LoadTimeoutWarningView();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_label];
  id v2 = [v1 font];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v0 superview];
    if (v4)
    {
      id v5 = v4;
      id v6 = [v1 text];
      if (v6)
      {
        uint64_t v7 = v6;
        sub_2FC180();
      }
      [v0 frame];
      double v9 = v8;
      [v5 frame];
      double v11 = v10;
      NSString v12 = sub_2FC140();
      swift_bridgeObjectRelease();
      sub_371F4(&qword_3FEF18);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_32BAE0;
      *(void *)(inited + 32) = NSFontAttributeName;
      *(void *)(inited + 64) = sub_39F90(0, (unint64_t *)&qword_3FEF20);
      *(void *)(inited + 40) = v3;
      uint64_t v14 = NSFontAttributeName;
      id v15 = v3;
      sub_3E500(inited);
      type metadata accessor for Key(0);
      sub_5BE38();
      Class isa = sub_2FC060().super.isa;
      swift_bridgeObjectRelease();
      [v12 boundingRectWithSize:3 options:isa context:0 attributes:v9 context:v11];
      double v18 = v17;

      [*(id *)&v0[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_labelHeightConstraint] setConstant:v18 + 10.0];
    }
    else
    {
      id v5 = v3;
    }
  }
}

id sub_59564()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadTimeoutWarningView();
  return [super dealloc];
}

void sub_59608(void **a1, void *a2)
{
  objc_super v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_scrollView);
  swift_beginAccess();
  id v4 = *v3;
  void *v3 = v2;
  id v5 = v2;
}

id sub_5966C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_scrollView);
  swift_beginAccess();
  objc_super v2 = *v1;

  return v2;
}

void sub_596C4(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_scrollView);
  swift_beginAccess();
  id v4 = *v3;
  void *v3 = a1;
}

uint64_t (*sub_59718())()
{
  return j__swift_endAccess;
}

double sub_59774()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_zoomScale;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_597BC(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_zoomScale);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_59810())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_5986C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_availableForReuse);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_598B4(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_availableForReuse);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_59900())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_5995C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_371F4((uint64_t *)&unk_400C70);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_46A30(a1, (uint64_t)v6, (uint64_t *)&unk_400C70);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_url;
  swift_beginAccess();
  sub_59ADC((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_59A24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_url;
  swift_beginAccess();
  return sub_46A30(v3, a1, (uint64_t *)&unk_400C70);
}

uint64_t sub_59A80(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_url;
  swift_beginAccess();
  sub_59ADC(a1, v3);
  return swift_endAccess();
}

uint64_t sub_59ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4((uint64_t *)&unk_400C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_59B44())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_59BA0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_be_configurationKey);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_59C0C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_be_configurationKey);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_59C64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_be_configurationKey);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_59CC4())()
{
  return j_j__swift_endAccess;
}

id sub_59D20()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___activityIndicator;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___activityIndicator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___activityIndicator);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:101];
    [v4 setHidesWhenStopped:1];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_59DC0()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___reloadView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___reloadView);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___reloadView);
  }
  else
  {
    id v4 = sub_59E24();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_59E24()
{
  id v0 = BookEPUBBundle();
  NSString v1 = sub_2FC140();
  NSString v2 = sub_2FC140();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = sub_2FC180();
  uint64_t v6 = v5;

  id v7 = BookEPUBBundle();
  NSString v8 = sub_2FC140();
  NSString v9 = sub_2FC140();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  uint64_t v11 = sub_2FC180();
  uint64_t v13 = v12;

  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = objc_allocWithZone((Class)type metadata accessor for LoadTimeoutWarningView());
  uint64_t v16 = sub_58984(v4, v6, v11, v13, (uint64_t)sub_5BF2C, v14);
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  return v16;
}

void sub_59FEC(uint64_t a1)
{
  NSString v2 = self;
  uint64_t v11 = sub_5BF34;
  uint64_t v12 = a1;
  aBlock = _NSConcreteStackBlock;
  uint64_t v8 = 1107296256;
  NSString v9 = sub_5C418;
  id v10 = &unk_3C3CC8;
  id v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v11 = sub_5BF3C;
  uint64_t v12 = v4;
  aBlock = _NSConcreteStackBlock;
  uint64_t v8 = 1107296256;
  NSString v9 = sub_5C45C;
  id v10 = &unk_3C3CF0;
  uint64_t v6 = _Block_copy(&aBlock);
  swift_release();
  [v2 animateWithDuration:v3 animations:v6 completion:0.2];
  _Block_release(v6);
  _Block_release(v3);
}

void sub_5A198()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    NSString v2 = (void *)sub_59DC0();
    [v2 setAlpha:0.0];

    id v3 = sub_59D20();
    [v3 setAlpha:1.0];
  }
}

uint64_t sub_5A224()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    NSString v1 = (void *)result;
    NSString v2 = *(void (**)(void))(result + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_reloadAction);
    swift_retain();

    v2();
    return swift_release();
  }
  return result;
}

id sub_5A2A4(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_ContentLoadShowReloadOptionTimeout] = 0x402E000000000000;
  uint64_t v5 = OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_scrollView;
  id v6 = objc_allocWithZone((Class)UIScrollView);
  id v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_zoomScale] = 0x3FF0000000000000;
  v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_availableForReuse] = 1;
  uint64_t v8 = &v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_url];
  uint64_t v9 = sub_2FB440();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  id v10 = &v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_be_configurationKey];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_watchdogTimer] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___activityIndicator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___reloadView] = 0;
  uint64_t v11 = &v7[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_reloadAction];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  swift_retain();

  v52.receiver = v7;
  v52.super_class = (Class)type metadata accessor for ContentLoaderPlaceholderView();
  id v12 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v13 = sub_59D20();
  [v12 addSubview:v13];

  id v14 = v12;
  id v15 = sub_59DC0();
  [v14 addSubview:v15];

  id v51 = self;
  sub_371F4((uint64_t *)&unk_400460);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_32C840;
  id v17 = sub_59D20();
  id v18 = [v17 centerXAnchor];

  id v19 = [v14 centerXAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v16 + 32) = v20;
  id v21 = sub_59D20();
  id v22 = [v21 centerYAnchor];

  id v23 = [v14 centerYAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v16 + 40) = v24;
  id v25 = sub_59D20();
  id v26 = [v25 widthAnchor];

  id v27 = [v14 widthAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v16 + 48) = v28;
  id v29 = sub_59D20();
  id v30 = [v29 heightAnchor];

  id v31 = [v14 heightAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v16 + 56) = v32;
  uint64_t v33 = sub_59DC0();
  id v34 = [v33 centerXAnchor];

  id v35 = [v14 centerXAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v16 + 64) = v36;
  uint64_t v37 = sub_59DC0();
  id v38 = [v37 centerYAnchor];

  id v39 = [v14 centerYAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v16 + 72) = v40;
  long long v41 = sub_59DC0();
  id v42 = [v41 widthAnchor];

  id v43 = [v14 widthAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:-20.0];

  *(void *)(v16 + 80) = v44;
  double v45 = sub_59DC0();
  id v46 = [v45 heightAnchor];

  id v47 = [v14 heightAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 multiplier:0.5];

  *(void *)(v16 + 88) = v48;
  sub_2FC410();
  sub_39F90(0, &qword_406560);
  Class isa = sub_2FC3D0().super.isa;
  swift_bridgeObjectRelease();
  [v51 activateConstraints:isa];

  swift_release();
  return v14;
}

id ContentLoaderPlaceholderView.__deallocating_deinit()
{
  NSString v1 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_watchdogTimer];
  if (v1) {
    [v1 invalidate];
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ContentLoaderPlaceholderView();
  return [super dealloc];
}

uint64_t type metadata accessor for ContentLoaderPlaceholderView()
{
  uint64_t result = qword_3FEF08;
  if (!qword_3FEF08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_5AA48(uint64_t a1)
{
  id v3 = sub_59D20();
  uint64_t v4 = v3;
  if (a1)
  {
    [v3 startAnimating];
  }
  else
  {
    [v3 stopAnimating];

    uint64_t v5 = sub_59DC0();
    [v5 setAlpha:0.0];

    id v6 = sub_59D20();
    [v6 setAlpha:1.0];

    id v7 = sub_59DC0();
    [v7 setHidden:1];

    [*(id *)(v1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_watchdogTimer) invalidate];
  }
  uint64_t v8 = sub_59DC0();
  [v8 setAlpha:0.0];

  id v9 = sub_59D20();
  [v9 setAlpha:1.0];

  id v10 = sub_59DC0();
  [v10 setHidden:1];
}

void sub_5ABE4()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_watchdogTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_watchdogTimer) invalidate];
  NSString v2 = sub_59DC0();
  [v2 setAlpha:0.0];

  id v3 = sub_59D20();
  [v3 setAlpha:1.0];

  uint64_t v4 = sub_59DC0();
  [v4 setHidden:1];

  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_5AEF8;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_5AF74;
  void v10[3] = &unk_3C3AB8;
  id v7 = _Block_copy(v10);
  swift_release();
  id v8 = [v5 scheduledTimerWithTimeInterval:0 repeats:v7 block:15.0];
  _Block_release(v7);
  id v9 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = v8;
}

uint64_t sub_5AD54()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_5AD8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    NSString v2 = sub_59DC0();
    [v2 setHidden:0];

    id v3 = sub_59DC0();
    [v3 setAlpha:0.0];

    id v4 = sub_59D20();
    [v4 setAlpha:1.0];

    uint64_t v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v1;
    aBlock[4] = sub_5BF24;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_5C418;
    aBlock[3] = &unk_3C3CA0;
    id v7 = _Block_copy(aBlock);
    id v8 = v1;
    swift_release();
    [v5 animateWithDuration:v7 animations:0.2];
    _Block_release(v7);
  }
}

void sub_5AEF8()
{
}

void sub_5AF00()
{
  uint64_t v0 = sub_59DC0();
  [v0 setAlpha:1.0];

  id v1 = sub_59D20();
  [v1 setAlpha:0.0];
}

void sub_5AF74(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_5AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_5AFEC()
{
  return swift_release();
}

void sub_5AFF4()
{
  uint64_t v0 = sub_59DC0();
  id v1 = *(id *)&v0[OBJC_IVAR____TtC8BookEPUB22LoadTimeoutWarningView_label];

  uint64_t v2 = sub_59DC0();
  [v2 frame];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v20.origin.CGFloat x = v4;
  v20.origin.CGFloat y = v6;
  v20.size.CGFloat width = v8;
  v20.size.CGFloat height = v10;
  [v1 setPreferredMaxLayoutWidth:CGRectGetWidth(v20) + -20.0];

  char v16 = BookThemeEntity.hasDarkBackground.getter();
  uint64_t v11 = sub_59DC0();
  id v12 = BookThemeEntity.backgroundColor.getter();
  if (v16) {
    id v13 = &selRef_whiteColor;
  }
  else {
    id v13 = &selRef_grayColor;
  }
  sub_5B3A0(v16 & 1);

  id v14 = sub_59D20();
  id v15 = [self *v13];
  [v14 setColor:v15];

  id v17 = [self clearColor];
  [v18 setBackgroundColor:v17];
}

void ContentLoaderPlaceholderView.init(frame:)()
{
}

void sub_5B268()
{
}

void ContentLoaderPlaceholderView.selection.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

unint64_t ContentLoaderPlaceholderView.identifier.getter()
{
  return 0xD000000000000011;
}

uint64_t CONTENTLAYOUTCONTROLLERLOG_ENABLED.getter()
{
  return 1;
}

uint64_t ContentLoaderPlaceholderView.be_estimatedContentSize.getter()
{
  [v0 frame];
  return v1;
}

uint64_t ContentLoaderPlaceholderView.be_desiredContentOffset.getter()
{
  return 0;
}

uint64_t (*ContentLoaderPlaceholderView.be_desiredContentOffset.modify(uint64_t a1))()
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return address(of:);
}

uint64_t ContentLoaderPlaceholderView.be_imageFilterMode()()
{
  return 0;
}

uint64_t sub_5B334()
{
  [v1 be_constraintsToFillSuperview];
  sub_39F90(0, &qword_406560);
  uint64_t v2 = sub_2FC3F0();

  return v2;
}

uint64_t sub_5B3A0(char a1)
{
  uint64_t v2 = sub_371F4(&qword_3FEF28);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  double v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  double v7 = (char *)&v17 - v6;
  sub_2FCB30();
  uint64_t v8 = sub_2FCB10();
  double v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    CGFloat v10 = self;
    uint64_t v11 = &selRef_whiteColor;
    if ((a1 & 1) == 0) {
      uint64_t v11 = &selRef_blackColor;
    }
    id v12 = [v10 *v11];
    sub_2FCAE0();
  }
  if (!v9(v7, 1, v8))
  {
    id v13 = self;
    id v14 = &selRef_blackColor;
    if ((a1 & 1) == 0) {
      id v14 = &selRef_whiteColor;
    }
    id v15 = [v13 *v14];
    sub_2FCAF0();
  }
  sub_46A30((uint64_t)v7, (uint64_t)v5, &qword_3FEF28);
  sub_2FCB40();
  return sub_5BE90((uint64_t)v7, &qword_3FEF28);
}

id sub_5B564@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_scrollView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

double sub_5B5CC@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_zoomScale);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_5B620(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_zoomScale);
  uint64_t result = swift_beginAccess();
  void *v3 = v2;
  return result;
}

uint64_t sub_5B678@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_availableForReuse);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_5B6CC(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_availableForReuse);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_5B71C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_url;
  swift_beginAccess();
  return sub_46A30(v3, a2, (uint64_t *)&unk_400C70);
}

uint64_t sub_5B780@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_be_configurationKey);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_5B7DC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t type metadata accessor for LoadTimeoutWarningView()
{
  return self;
}

uint64_t sub_5B810()
{
  return type metadata accessor for ContentLoaderPlaceholderView();
}

void sub_5B818()
{
  sub_5BCA8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ContentLoaderPlaceholderView(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ContentLoaderPlaceholderView);
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.scrollView.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.scrollView.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.scrollView.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.zoomScale.getter()
{
  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.zoomScale.setter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.zoomScale.modify()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.availableForReuse.getter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.availableForReuse.setter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.availableForReuse.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.url.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.url.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.url.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.be_configurationKey.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.be_configurationKey.setter()
{
  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.be_configurationKey.modify()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.startReloadWatchdog()()
{
  return (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoaderPlaceholderView.updateStyle(theme:)()
{
  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 8])();
}

void sub_5BCA8()
{
  if (!qword_4027D0)
  {
    sub_2FB440();
    unint64_t v0 = sub_2FCBF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_4027D0);
    }
  }
}

void sub_5BD00()
{
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_ContentLoadShowReloadOptionTimeout] = 0x402E000000000000;
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_scrollView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIScrollView) init];
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_zoomScale] = 0x3FF0000000000000;
  v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_availableForReuse] = 1;
  char v2 = &v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_url];
  uint64_t v3 = sub_2FB440();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = &v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_be_configurationKey];
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView_watchdogTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___activityIndicator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB28ContentLoaderPlaceholderView____lazy_storage___reloadView] = 0;

  sub_2FD010();
  __break(1u);
}

unint64_t sub_5BE38()
{
  unint64_t result = qword_3FDC28;
  if (!qword_3FDC28)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FDC28);
  }
  return result;
}

uint64_t sub_5BE90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_371F4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_5BEEC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_5BF24()
{
}

void sub_5BF2C()
{
  sub_59FEC(v0);
}

void sub_5BF34()
{
}

uint64_t sub_5BF3C()
{
  return sub_5A224();
}

uint64_t ContentLayoutControllerLogSignPostBegin(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5C004(a1, a2, a3, (void (*)(uint64_t))&static os_signpost_type_t.begin.getter);
}

id _ContentLayoutControllerLog()()
{
  if (qword_3FD6B8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_416FD8;

  return v0;
}

uint64_t ContentLayoutControllerLogSignPostEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5C004(a1, a2, a3, (void (*)(uint64_t))&static os_signpost_type_t.event.getter);
}

uint64_t ContentLayoutControllerLogSignPostEnd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5C004(a1, a2, a3, (void (*)(uint64_t))&static os_signpost_type_t.end.getter);
}

uint64_t sub_5C004(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_2FB7D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  double v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(v7);
  if (qword_3FD6B8 != -1) {
    swift_once();
  }
  id v10 = (id)qword_416FD8;
  sub_2FB7C0();
  sub_2FB790();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ContentLayoutControllerLogger()()
{
  if (qword_3FD6B8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_416FD8;

  return sub_2FB8B0();
}

uint64_t sub_5C1C8()
{
  sub_5C230();
  uint64_t result = sub_2FCBE0();
  qword_416FD8 = result;
  return result;
}

unint64_t sub_5C230()
{
  unint64_t result = qword_4000C0;
  if (!qword_4000C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_4000C0);
  }
  return result;
}

uint64_t sub_5C270(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  id v18 = (uint64_t (*)(void *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (unsigned char *)(a3 + 56);
    uint64_t v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v9 = *((void *)v6 - 3);
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v10 = *((void *)v6 - 1);
      char v11 = *v6;
      v19[0] = v9;
      v19[1] = v8;
      v19[2] = v10;
      char v20 = v11;
      swift_bridgeObjectRetain();
      char v12 = v18(v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
      if (v12)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        id v21 = v7;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_1168C8(0, v7[2] + 1, 1);
          uint64_t v7 = v21;
        }
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        uint64_t v3 = 0;
        if (v14 >= v13 >> 1)
        {
          unint64_t result = sub_1168C8(v13 > 1, v14 + 1, 1);
          uint64_t v3 = 0;
          uint64_t v7 = v21;
        }
        v7[2] = v14 + 1;
        id v15 = &v7[4 * v14];
        void v15[4] = v9;
        void v15[5] = v8;
        v15[6] = v10;
        *((unsigned char *)v15 + 56) = v11;
        uint64_t v4 = a3;
      }
      else
      {
        unint64_t result = swift_bridgeObjectRelease();
        uint64_t v3 = 0;
      }
      ++v5;
      v6 += 32;
      if (v17 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_5C418(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_5C45C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_5C4B0()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_2FC140();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_3FEF38 = v2;
}

uint64_t DebugContentLayout.getter()
{
  if (qword_3FD6C0 != -1) {
    swift_once();
  }
  return byte_3FEF38;
}

id SearchResultLayoutManager.Configuration.boldFont.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t BookContentModule.deinit()
{
  swift_release();

  swift_release();
  sub_4F924(v0 + 40);
  return v0;
}

uint64_t BookContentModule.__deallocating_deinit()
{
  swift_release();

  swift_release();
  sub_4F924(v0 + 40);

  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t BookContentModule.view.getter@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 32);
  swift_unknownObjectWeakInit();
  *(void *)(a1 + 24) = 0;
  swift_unknownObjectWeakInit();
  unint64_t v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for BookContentView(0) + 28));
  *unint64_t v5 = swift_getKeyPath();
  sub_371F4(&qword_3FEF40);
  swift_storeEnumTagMultiPayload();
  swift_unknownObjectWeakAssign();
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = v3;
  swift_unknownObjectWeakAssign();
  swift_retain();

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall BookContentModule.registerScrollGestureHostView(_:)(UIView_optional a1)
{
  Class isa = a1.value.super.super.isa;
  uint64_t v3 = *(void *)(v1 + 24);
  swift_unknownObjectWeakAssign();
  uint64_t v4 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
  unint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
  if (!v5) {
    return;
  }
  uint64_t v6 = isa;
  id v7 = v5;
  id v8 = [v7 panGestureRecognizer];
  uint64_t v9 = *(void **)(v3 + v4);
  id v12 = v8;
  if (v9)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
      [v9 addGestureRecognizer:v12];
      goto LABEL_9;
    }
    id v11 = Strong;
    [Strong addGestureRecognizer:v12];
  }
  else
  {
    id v11 = [v8 view];
    [v11 removeGestureRecognizer:v12];
  }

  uint64_t v6 = (objc_class *)v7;
  id v7 = v12;
  id v12 = v11;
LABEL_9:
}

Swift::Void __swiftcall BookContentModule.setShowingExpandedPageLabels(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  BOOL v5 = _;
  uint64_t v6 = *(char **)(v2 + 24);
  id v7 = (Swift::Bool *)&v6[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels];
  swift_beginAccess();
  if (*v7 != v5)
  {
    if (animated)
    {
      uint64_t v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      *(unsigned char *)(v9 + 24) = _;
      uint64_t v10 = self;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v6;
      char v20 = sub_5EB40;
      uint64_t v21 = v11;
      aBlock = _NSConcreteStackBlock;
      uint64_t v17 = 1107296256;
      id v18 = sub_5C418;
      id v19 = &unk_3C3D90;
      id v12 = _Block_copy(&aBlock);
      swift_retain();
      unint64_t v13 = v6;
      swift_release();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_5EAFC;
      *(void *)(v14 + 24) = v9;
      char v20 = sub_5EB98;
      uint64_t v21 = v14;
      aBlock = _NSConcreteStackBlock;
      uint64_t v17 = 1107296256;
      id v18 = sub_5C45C;
      id v19 = &unk_3C3DE0;
      id v15 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v10 animateWithDuration:4 delay:v12 options:v15 animations:0.1 completion:0.0];
      _Block_release(v15);
      _Block_release(v12);
      swift_release();
      swift_release();
    }
    else
    {
      Swift::Bool *v7 = _;
      aBlock = 0;
      uint64_t v17 = 0;
      LOBYTE(v18) = 1;
      sub_18F998(0, (uint64_t)&aBlock, 0, 1, 2);
    }
  }
}

uint64_t BookContentModule.movementStatePublisher.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(ObjectType, v3);
  *a1 = result;
  return result;
}

uint64_t BookContentModule.revealSearchResult(_:)(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 33) = *(unsigned char *)(a1 + 16);
  sub_2FC540();
  *(void *)(v2 + 64) = sub_2FC530();
  uint64_t v4 = sub_2FC4E0();
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = v3;
  return _swift_task_switch(sub_5CBB4, v4, v3);
}

uint64_t sub_5CBB4()
{
  char v1 = *(unsigned char *)(v0 + 33);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(unsigned char *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_5CC60;
  return sub_EB6DC(v0 + 16);
}

uint64_t sub_5CC60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_5CD80, v3, v2);
}

uint64_t sub_5CD80()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t BookContentModule.presentingViewController.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

Swift::Void __swiftcall BookContentModule.readingSettingsPresentationChanged(presented:)(Swift::Bool presented)
{
  BOOL v2 = presented;
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(BOOL, uint64_t, uint64_t))(v3 + 240))(v2, ObjectType, v3);
}

Swift::Void __swiftcall BookContentModule.fullscreenContentPresentationChanged(presented:)(Swift::Bool presented)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 40);
  uint64_t ObjectType = swift_getObjectType();
  if (presented) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 216))(ObjectType, v3);
  }
  else {
    (*(void (**)(uint64_t, uint64_t))(v3 + 232))(ObjectType, v3);
  }
}

uint64_t BookContentModule.representativePageText.getter()
{
  return sub_EC09C();
}

uint64_t BookContentModule.representativePageTextIsVertical.getter()
{
  return sub_EC180() & 1;
}

uint64_t BookContentModule.contentLayoutController.getter()
{
  return swift_retain();
}

uint64_t BookContentModule.contentLayoutProviderProviding.getter()
{
  return swift_unknownObjectRetain();
}

BookEPUB::SelectionInfo::ID_optional __swiftcall BookContentModule.addSelectionInfo(cfi:lifecycle:)(Swift::String cfi, BookEPUB::SelectionInfo::PresentationLifecycle lifecycle)
{
  uint64_t v3 = v2;
  char v6 = *(unsigned char *)lifecycle;
  Swift::Int v4 = sub_1ED8AC(cfi._countAndFlagsBits, (uint64_t)cfi._object, &v6, &v7);
  *(void *)uint64_t v3 = v7;
  *(unsigned char *)(v3 + 8) = 0;
  result.value.rawCFDictionaryRef Value = v4;
  result.is_nil = v5;
  return result;
}

Swift::Void __swiftcall BookContentModule.removeSelectionInfo(_:)(BookEPUB::SelectionInfo::ID a1)
{
  uint64_t v1 = *(void *)a1.rawValue;
  sub_371F4(&qword_3FEF50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_32BAE0;
  *(void *)(inited + 32) = v1;
  uint64_t v5 = inited;
  sub_2FBAE0();
  v3[2] = &v5;
  uint64_t v4 = sub_5C270((uint64_t)sub_5EBA0, (uint64_t)v3, v4);
  sub_2FBAF0();
  swift_setDeallocating();
}

double BookContentModule.convertToUI(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  long long v2 = *(_OWORD *)(a1 + 3);
  long long v5 = *(_OWORD *)(a1 + 1);
  long long v6 = v2;
  return sub_202D94((long long *)&v4, a2);
}

uint64_t BookContentModule.rects(forCFI:clippedToBounds:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 120) = a3;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 40) = sub_2FC540();
  *(void *)(v4 + 48) = sub_2FC530();
  uint64_t v6 = sub_2FC4E0();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = v5;
  return _swift_task_switch(sub_5D124, v6, v5);
}

uint64_t sub_5D124()
{
  v0[9] = *(void *)(v0[4] + 16);
  v0[10] = sub_2FC530();
  uint64_t v2 = sub_2FC4E0();
  v0[11] = v2;
  v0[12] = v1;
  return _swift_task_switch(sub_5D1B8, v2, v1);
}

uint64_t sub_5D1B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  void *v1 = v0;
  v1[1] = sub_5D258;
  char v2 = *(unsigned char *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_201464(v4, v3, v2);
}

uint64_t sub_5D258(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 88);
  return _swift_task_switch(sub_5D380, v4, v3);
}

uint64_t sub_5D380()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_5D3E4, v1, v2);
}

uint64_t sub_5D3E4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 112);
  return v1(v2);
}

uint64_t BookContentModule.presentEditMenu()()
{
  v1[2] = v0;
  sub_2FC540();
  v1[3] = sub_2FC530();
  uint64_t v3 = sub_2FC4E0();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_5D4E0, v3, v2);
}

uint64_t sub_5D4E0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_5D574;
  return sub_EC300();
}

uint64_t sub_5D574(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 56) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 32);
  return _swift_task_switch(sub_5D69C, v4, v3);
}

uint64_t sub_5D69C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 56);
  return v1(v2);
}

uint64_t BookContentModule.selection.getter@<X0>(void *a1@<X8>)
{
  return sub_E3F24(a1);
}

uint64_t BookContentModule.select(annotationID:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  sub_2FC540();
  void v3[5] = sub_2FC530();
  uint64_t v5 = sub_2FC4E0();
  v3[6] = v5;
  v3[7] = v4;
  return _swift_task_switch(sub_5D7C4, v5, v4);
}

uint64_t sub_5D7C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_5D860;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return sub_EC900(v3, v2);
}

uint64_t sub_5D860(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 72) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_5D988, v4, v3);
}

uint64_t sub_5D988()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 72);
  return v1(v2);
}

uint64_t BookContentModule.select(cfi:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  void v3[5] = sub_2FC540();
  v3[6] = sub_2FC530();
  uint64_t v5 = sub_2FC4E0();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_5DA8C, v5, v4);
}

uint64_t sub_5DA8C()
{
  v0[9] = *(void *)(v0[4] + 16);
  v0[10] = sub_2FC530();
  uint64_t v2 = sub_2FC4E0();
  v0[11] = v2;
  v0[12] = v1;
  return _swift_task_switch(sub_5DB20, v2, v1);
}

uint64_t sub_5DB20()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  void *v1 = v0;
  v1[1] = sub_5DBBC;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return sub_E51C0(v3, v2);
}

uint64_t sub_5DBBC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 112) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 88);
  return _swift_task_switch(sub_5DCE4, v4, v3);
}

uint64_t sub_5DCE4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_5DD48, v1, v2);
}

uint64_t sub_5DD48()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 112);
  return v1(v2);
}

Swift::Void __swiftcall BookContentModule.clearSelection()()
{
}

uint64_t BookContentModule.externalContentLoadEventHandler.getter()
{
  return swift_retain();
}

uint64_t BookContentModule.isHeaderVisible.getter()
{
  return *(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24)
                                        + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                            + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isHeaderVisible);
}

Swift::Void __swiftcall BookContentModule.setHeaderVisible(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  uint64_t v3 = *(char **)(*(void *)(v2 + 24) + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
  if (v3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isHeaderVisible] != _)
  {
    if (animated)
    {
      uint64_t v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v3;
      *(unsigned char *)(v6 + 24) = _;
      v11[4] = sub_5EC0C;
      v11[5] = v6;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      v11[2] = sub_5C418;
      void v11[3] = &unk_3C3E30;
      uint64_t v7 = _Block_copy(v11);
      uint64_t v8 = v3;
      swift_release();
      [v5 animateWithDuration:v7 animations:0.2];
      _Block_release(v7);
    }
    else
    {
      v3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isHeaderVisible] = _;
      uint64_t v9 = *(void **)&v3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView];
      double v10 = 0.0;
      if (_) {
        double v10 = 1.0;
      }
      [v9 setAlpha:v10];
    }
  }
}

void BookContentModule.headerStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(*(void *)(v1 + 24) + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle);
}

Swift::Void __swiftcall BookContentModule.setHeaderStyle(_:animated:)(BookEPUB::BookContentHeaderStyle _, Swift::Bool animated)
{
  int v3 = *(unsigned __int8 *)_;
  uint64_t v4 = *(unsigned __int8 **)(*(void *)(v2 + 24) + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
  if (v3 != v4[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle])
  {
    if (animated)
    {
      uint64_t v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v4;
      *(unsigned char *)(v6 + 24) = v3;
      v9[4] = sub_5EC18;
      void v9[5] = v6;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 1107296256;
      v9[2] = sub_5C418;
      v9[3] = &unk_3C3E80;
      uint64_t v7 = _Block_copy(v9);
      uint64_t v8 = v4;
      swift_release();
      [v5 animateWithDuration:v7 animations:0.2];
      _Block_release(v7);
    }
    else
    {
      v4[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle] = v3;
      sub_1E25F8();
    }
  }
}

Swift::Void __swiftcall BookContentModule.readingLoupeMoveLine(_:)(BookEPUB::LocationMovement::Direction a1)
{
  sub_1324C0((a1 & 1) == 0);
}

void *BookContentModule.__allocating_init<A>(currentLocationProvider:currentLocationController:pageTurnController:contentHostEnvironmentProvider:bookProviderService:headerText:imageFilterMode:paginationService:accessoryAdornmentFactory:contentLayoutProvider:readingSettingsProvider:layoutModeProvider:contentSizeCategoryProvider:annotationProviderService:stylesheetProvider:pageNumberProvider:router:contentViewProxy:snapshotDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  void (*v65)(void *__return_ptr, uint64_t, uint64_t);
  void v70[3];
  uint64_t v71;
  uint64_t v72;

  uint64_t ObjectType = swift_getObjectType();
  id v65 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a9 + 8);
  v65(v70, ObjectType, a9);
  uint64_t v37 = v71;
  uint64_t v38 = v72;
  sub_4F798(v70, v71);
  LODWORD(v37) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v38 + 104))(v37, v38);
  sub_39FCC((uint64_t)v70);
  if (v37 > 1)
  {
    v70[0] = 0;
    v70[1] = 0xE000000000000000;
    sub_2FCDD0(19);
    swift_bridgeObjectRelease();
    v65(v70, ObjectType, a9);
    uint64_t v52 = v71;
    uint64_t v53 = v72;
    sub_4F798(v70, v71);
    char v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 104))(v52, v53);
    id v55 = (void *)0xEA0000000000656CLL;
    v56._uint64_t countAndFlagsBits = 0x6261776F6C666572;
    switch(v54)
    {
      case 1:
        id v55 = (void *)0xE500000000000000;
        v56._uint64_t countAndFlagsBits = 0x6465786966;
        break;
      case 2:
        id v55 = (void *)0xE300000000000000;
        v56._uint64_t countAndFlagsBits = 6710384;
        break;
      case 3:
        id v55 = (void *)0xE300000000000000;
        v56._uint64_t countAndFlagsBits = 7630194;
        break;
      default:
        break;
    }
    v56._object = v55;
    sub_2FC260(v56);
    swift_bridgeObjectRelease();
    sub_39FCC((uint64_t)v70);
    sub_2FD010();
    __break(1u);
    JUMPOUT(0x5E968);
  }
  type metadata accessor for BookContentDataManager();
  id v39 = (void *)swift_allocObject();
  v39[2] = a8;
  v39[3] = a9;
  v39[4] = a13;
  v39[5] = a14;
  uint64_t v40 = (uint64_t)v39;
  sub_52C40(a5, (uint64_t)v70);
  type metadata accessor for BookContentInteractor();
  uint64_t v41 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v57 = v41;
  id v42 = (uint8_t *)swift_unknownObjectRetain();
  uint64_t v43 = sub_5EC24(a6, a7, v40, a1, a2, a3, a4, (uint64_t)v70, a17, a18, a19, a20, a21, a22, a23, a24, v42, a26, v57);
  uint64_t v60 = a6;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v59 = swift_getObjectType();
  uint64_t v61 = swift_getObjectType();
  type metadata accessor for BookContentPresenter();
  swift_retain();
  swift_unknownObjectRetain();
  v65(v70, ObjectType, a9);
  sub_39F90(0, (unint64_t *)&qword_401700);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v58 = (void *)sub_2FC8C0();
  id v44 = sub_F2AEC(v43, (uint64_t)&protocol witness table for BookContentInteractor, a30, a35, (uint64_t)v70, a6, a7, a12, a19, a20, a27, a1, a2, a3, a4, (uint64_t)v42, a13, a15, a16,
          a28,
          a29,
          v58,
          v59,
          v61,
          a26,
          a14);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_beginAccess();
  *(void *)(v43 + 168) = &off_3C7E00;
  swift_unknownObjectWeakAssign();
  (*(void (**)(uint64_t))(a14 + 240))(v61);
  v65(v70, ObjectType, a9);
  uint64_t v45 = v44[19];
  uint64_t v46 = v44[4];
  uint64_t v47 = *(void *)(v44[5] + 8);
  id v48 = objc_allocWithZone((Class)type metadata accessor for BookContentViewController());
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  id v49 = sub_5F624((uint64_t)v70, a10, a11, v45, v46, v47, (uint64_t)v44, (uint64_t)v44, v60, a7, a19, a20, a21, a22, a13, a14, a28, a29, (uint64_t)v44,
          v48);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v50 = (void *)swift_allocObject();
  v50[6] = 0;
  swift_unknownObjectWeakInit();
  v50[2] = v44;
  v50[3] = v49;
  v50[4] = a31;
  v50[6] = a33;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_39FCC(a5);
  return v50;
}

uint64_t sub_5E978()
{
  return sub_2FBE10();
}

uint64_t sub_5E99C()
{
  return sub_2FBE10();
}

uint64_t sub_5E9C0(uint64_t a1)
{
  uint64_t v2 = sub_2FBDF0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_2FBE20();
}

uint64_t sub_5EA8C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_5EAC4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_5EAFC()
{
  sub_19E700(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_5EB08()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_5EB40()
{
  return sub_19E8AC(*(void *)(v0 + 16));
}

uint64_t sub_5EB48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_5EB58()
{
  return swift_release();
}

uint64_t sub_5EB60()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5EB98(uint64_t a1)
{
  return sub_6CC7C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_5EBA0(uint64_t a1)
{
  return sub_1EF214(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), **(void **)(v1 + 16)) & 1;
}

uint64_t sub_5EBD4()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_5EC0C()
{
  return sub_1E10B8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_5EC18()
{
  return sub_1E10EC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_5EC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint8_t *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v86 = a7;
  uint64_t v87 = a8;
  uint64_t v85 = a6;
  uint64_t v70 = a5;
  uint64_t v69 = a4;
  uint64_t v66 = a2;
  uint64_t v67 = a1;
  id v80 = a17;
  uint64_t v79 = a18;
  uint64_t v78 = a16;
  uint64_t v77 = a15;
  uint64_t v76 = a14;
  uint64_t v75 = a13;
  uint64_t v74 = a11;
  uint64_t v72 = a12;
  uint64_t v71 = a10;
  uint64_t v20 = sub_371F4((uint64_t *)&unk_406710);
  uint64_t v82 = *(void *)(v20 - 8);
  uint64_t v83 = v20;
  __chkstk_darwin(v20);
  uint64_t v81 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_2FB530();
  uint64_t v22 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91[3] = type metadata accessor for BookContentDataManager();
  v91[4] = &protocol witness table for BookContentDataManager;
  v91[0] = a3;
  uint64_t v68 = a19 + 144;
  *(void *)(a19 + 152) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a19 + 168) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_isBothMarginsAdvancePage) = 0;
  *(void *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_isBothMarginsAdvancePageObservation) = 0;
  *(void *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_approvalCacheDidChangeObservation) = 0;
  uint64_t v25 = a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_contentHostEnvironmentProvider;
  *(void *)(v25 + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v26 = a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_currentLocationController;
  *(void *)(v26 + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v27 = OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_onlyPaginateLiveContent;
  id v84 = self;
  id v28 = [v84 standardUserDefaults];
  NSString v29 = sub_2FC140();
  unsigned __int8 v30 = [v28 BOOLForKey:v29];

  *(unsigned char *)(a19 + v27) = v30;
  uint64_t v31 = a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_configurationStorage;
  *(_WORD *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 2) = 0;
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  *(unsigned char *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_ignoreAllPageTurns) = 0;
  uint64_t v32 = a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_readingSettingsProvider;
  *(void *)(v32 + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_39F90(0, (unint64_t *)&qword_4000C0);
  sub_2FCBE0();
  sub_2FB8B0();
  *(void *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_cancellables) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_lastKnownPastEnd) = 0;
  swift_beginAccess();
  *(void *)(v25 + 8) = v66;
  swift_unknownObjectWeakAssign();
  sub_52C40((uint64_t)v91, a19 + 16);
  uint64_t v33 = v70;
  *(void *)(a19 + 96) = v69;
  *(void *)(a19 + 104) = v33;
  swift_beginAccess();
  *(void *)(v26 + 8) = v86;
  swift_unknownObjectWeakAssign();
  sub_52C40(v87, a19 + 56);
  uint64_t v34 = v71;
  id v89 = a9;
  uint64_t v90 = v71;
  sub_371F4(&qword_3FF048);
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  p_prots = &OBJC_PROTOCOL___UITextInteractionDelegatePrivate.prots;
  *(void *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_contentLayoutProviderSubject) = sub_2FBB00();
  *(void *)(v32 + 8) = v72;
  swift_unknownObjectWeakAssign();
  uint64_t v36 = v76;
  *(void *)(a19 + 112) = v75;
  *(void *)(a19 + 120) = v36;
  uint64_t v37 = v78;
  *(void *)(a19 + 128) = v77;
  *(void *)(a19 + 136) = v37;
  *(void *)(a19 + 152) = v79;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_2FB490();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_centerTapTimestamp, v24, v73);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v34 + 32))(ObjectType, v34);
  uint64_t v40 = v39;
  uint64_t v41 = swift_getObjectType();
  LOBYTE(v40) = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v41, v40);
  swift_unknownObjectRelease();
  double v42 = 200.0;
  if (v40) {
    double v42 = 150.0;
  }
  *(double *)(a19 + 176) = v42;
  swift_retain_n();
  uint64_t v43 = sub_2FB880();
  os_log_type_t v44 = sub_2FC7A0();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136315138;
    uint64_t v88 = v46;
    id v80 = v45 + 4;
    sub_2FBAE0();
    uint64_t v47 = v90;
    uint64_t v48 = swift_getObjectType();
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 184))(v48, v47);
    unint64_t v51 = v50;
    swift_unknownObjectRelease();
    id v89 = (id)sub_38EF0(v49, v51, &v88);
    sub_2FCC70();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v43, v44, "Initialized with configuration: %s #contentConfig", v45, 0xCu);
    swift_arrayDestroy();
    p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___UITextInteractionDelegatePrivate + 16);
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v52 = swift_getObjectType();
  id v89 = *(id *)((char *)&p_prots[229]->count + a19);
  sub_44924(&qword_3FF050, &qword_3FF048);
  id v89 = (id)sub_2FBBD0();
  sub_371F4((uint64_t *)&unk_406730);
  sub_44924((unint64_t *)&unk_4051A0, (uint64_t *)&unk_406730);
  uint64_t v53 = v81;
  sub_2FBCB0();
  swift_release();
  sub_44924((unint64_t *)&unk_406740, (uint64_t *)&unk_406710);
  uint64_t v54 = v83;
  uint64_t v55 = sub_2FBBD0();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v53, v54);
  uint64_t v56 = v86;
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 136);
  uint64_t v58 = sub_371F4(&qword_3FF058);
  v57(v55, v58, v52, v56);
  swift_release();
  sub_B940C();
  id v59 = v84;
  id v89 = [v84 standardUserDefaults];
  swift_getKeyPath();
  swift_allocObject();
  swift_weakInit();
  uint64_t v60 = sub_2FB360();
  swift_release();
  swift_release();

  uint64_t v61 = *(void **)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_isBothMarginsAdvancePageObservation);
  *(void *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_isBothMarginsAdvancePageObservation) = v60;

  id v89 = [v59 standardUserDefaults];
  swift_getKeyPath();
  swift_allocObject();
  swift_weakInit();
  uint64_t v62 = sub_2FB360();
  swift_release();
  swift_release();

  id v63 = *(void **)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_approvalCacheDidChangeObservation);
  *(void *)(a19 + OBJC_IVAR____TtC8BookEPUB21BookContentInteractor_approvalCacheDidChangeObservation) = v62;

  sub_39FCC(v87);
  sub_39FCC((uint64_t)v91);
  return a19;
}

char *sub_5F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned char *a20)
{
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity];
  *(void *)(v22 + 32) = 0;
  *(_OWORD *)uint64_t v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  uint64_t v23 = &a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding];
  *(void *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding + 8] = 0;
  swift_unknownObjectWeakInit();
  id v24 = &a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  *(void *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels] = 0;
  *(void *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer] = 0;
  *(void *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeOverlayView] = 0;
  *(void *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeView] = 0;
  *(void *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapTouchType] = 0;
  uint64_t v25 = (uint64_t)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_axCurrentLocation];
  sub_60020((uint64_t)v80);
  sub_524A4((uint64_t)v80, v25);
  sub_524A4((uint64_t)v80, (uint64_t)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation]);
  a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag] = 0;
  uint64_t v26 = &a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_log];
  uint64_t v27 = qword_3FD7E8;
  id v28 = a20;
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_2FB8A0();
  uint64_t v30 = sub_60044(v29, (uint64_t)qword_406470);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v26, v30, v29);
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_stateHandler] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_debugLayers] = _swiftEmptyArrayStorage;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeLongPressTipController] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingHostView] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pagedModeView] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___scrollContainerView] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer] = 0;
  uint64_t v31 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_uberScrollLastOffset];
  *uint64_t v31 = 0;
  v31[1] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pageLabelContainerView] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkCenterYConstraint] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___bookmarkWidthConstraint] = 0;
  uint64_t v32 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkView;
  *(void *)&v28[v32] = sub_193A1C();
  v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_adjustingForSinglePage] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] = 1;
  v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll] = 0;
  v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer] = 0;
  v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isCurlPanRecognizerEnabled] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer] = 0;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView] = 0;
  bzero(&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_cancellables], 0x280uLL);
  uint64_t v33 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_ConstraintPrefix];
  void *v33 = 0xD000000000000010;
  v33[1] = 0x800000000030D1E0;
  swift_beginAccess();
  uint64_t v76 = a1;
  sub_6007C(a1, v22);
  swift_endAccess();
  uint64_t v34 = (objc_class *)type metadata accessor for BookContentViewController();
  uint64_t v79 = v34;
  sub_371F4(&qword_3FF040);
  uint64_t v35 = sub_2FC1E0();
  uint64_t v37 = v36;
  id v38 = objc_allocWithZone((Class)type metadata accessor for BookContentHostView());
  sub_1E1374(v35, v37, 0, 0, 0);
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView] = v39;
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController] = a4;
  swift_beginAccess();
  *((void *)v23 + 1) = a6;
  swift_unknownObjectWeakAssign();
  uint64_t v40 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
  *uint64_t v40 = a7;
  v40[1] = &off_3C7D78;
  uint64_t v41 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentNavigationEventHandler];
  *uint64_t v41 = a8;
  v41[1] = &off_3C7CD0;
  double v42 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentHostEnvironmentProvider];
  *double v42 = a9;
  v42[1] = a10;
  swift_beginAccess();
  *((void *)v24 + 1) = a12;
  swift_unknownObjectWeakAssign();
  uint64_t v43 = (uint64_t *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layoutModeProvider];
  uint64_t *v43 = a13;
  v43[1] = a14;
  os_log_type_t v44 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
  void *v44 = a15;
  v44[1] = a16;
  uint64_t v45 = &v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider];
  *uint64_t v45 = a17;
  v45[1] = a18;
  uint64_t v46 = self;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v47 = [v46 standardUserDefaults];
  NSString v48 = sub_2FC140();
  unsigned __int8 v49 = [v47 BOOLForKey:v48];

  v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_showPaginatingWebView] = v49;
  id v50 = [v46 standardUserDefaults];
  NSString v51 = sub_2FC140();
  LOBYTE(v48) = [v50 BOOLForKey:v51];

  v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_showLayoutGuides] = (_BYTE)v48;
  type metadata accessor for ReadingLoupeStateController();
  swift_allocObject();
  *(void *)&v28[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController] = sub_1366EC();

  v78.receiver = v28;
  v78.super_class = v34;
  [super initWithNibName:0 bundle:0];
  id v53 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v54 = (char *)v52;
  id v55 = [v53 initWithTarget:v54 action:"unhandledTapAction:"];
  [v55 setDelegate:v54];
  [v55 setCancelsTouchesInView:0];
  uint64_t v56 = *(void **)&v54[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer];
  *(void *)&v54[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer] = v55;

  id v57 = [objc_allocWithZone((Class)UIPanGestureRecognizer) initWithTarget:v54 action:"pageDrag:"];
  unint64_t v58 = 1;
  [v57 setDelegate:v54];
  UIGestureRecognizer.be_allowedTouchTypes.setter((uint64_t)&off_3C1B00);
  [v57 setAllowedScrollTypesMask:2];
  id v59 = *(void **)&v54[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer];
  *(void *)&v54[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer] = v57;

  if (a5)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v61 = *(void (**)(uint64_t, uint64_t))(a6 + 8);
    swift_unknownObjectRetain();
    v61(ObjectType, a6);
    uint64_t v63 = v62;
    swift_unknownObjectRelease();
    uint64_t v64 = swift_getObjectType();
    unint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 24))(v64, v63);
    swift_unknownObjectRelease();
  }
  *(void *)&v54[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] = v58;
  sub_1905DC(v58);
  sub_190D58();
  swift_unknownObjectWeakAssign();
  uint64_t v65 = *(void *)(a7 + 40);
  uint64_t v66 = swift_getObjectType();
  uint64_t v67 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v65 + 208);
  uint64_t v68 = v54;
  v67(v54, &protocol witness table for BookContentViewController, v66, v65);

  sub_39F90(0, (unint64_t *)&unk_4066B0);
  uint64_t v69 = v68;
  sub_2FC8F0();
  sub_2FC7F0();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_192CF4();
  sub_192FE0();
  uint64_t v70 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController;
  swift_unknownObjectWeakAssign();
  uint64_t v71 = v69;
  swift_retain();
  sub_12F5AC();
  swift_release();

  *(void *)(*(void *)&v69[v70] + 304) = a12;
  swift_unknownObjectWeakAssign();
  swift_retain();
  swift_unknownObjectRetain();
  sub_12F25C();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  swift_retain();
  sub_137154(a13, a14);
  swift_release();
  swift_unknownObjectRelease();
  *(void *)(*(void *)&v69[v70] + 328) = &off_3C7CA8;
  swift_unknownObjectWeakAssign();

  sub_600E4(v76);
  return v71;
}

uint64_t type metadata accessor for BookContentModule()
{
  return self;
}

uint64_t method lookup function for BookContentModule(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookContentModule);
}

uint64_t sub_5FFE4()
{
  return sub_44924(&qword_3FF030, (uint64_t *)&unk_4067E0);
}

double sub_60020(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 122) = 0u;
  return result;
}

uint64_t sub_60044(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_6007C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4(&qword_3FF038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_600E4(uint64_t a1)
{
  uint64_t v2 = sub_371F4(&qword_3FF038);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

const char *sub_60144()
{
  return "BKLeftTapTurnToNext";
}

uint64_t sub_60158()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_60190()
{
  return sub_B9004();
}

const char *sub_60198()
{
  return "BEDocumentExternalLoadApprovalCacheDidReset";
}

uint64_t sub_601A8(uint64_t a1, uint64_t a2)
{
  return sub_B90C0(a1, a2, v2);
}

uint64_t sub_601CC()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_3FF060);
  sub_60044(v0, (uint64_t)qword_3FF060);
  if (qword_3FD6B8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_416FD8;
  return sub_2FB8B0();
}

void sub_60258(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16))
  {
    if (qword_3FD6C8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_2FB8A0();
    sub_60044(v25, (uint64_t)qword_3FF060);
    uint64_t v26 = sub_2FB880();
    os_log_type_t v27 = sub_2FC7B0();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl(&def_7BFC0, v26, v27, "Cannot determine offset without any page locations", v28, 2u);
      swift_slowDealloc();
    }

    goto LABEL_20;
  }
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_608D4(v6, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = (unint64_t *)(v2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
    if (*(void *)(v4 + 16) < v5)
    {
      swift_beginAccess();
      unint64_t v30 = *v29;
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_2FD030();
        if (v31) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v31 = *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (v31)
        {
LABEL_24:
          unint64_t v32 = v31 - 1;
          if (__OFSUB__(v31, 1))
          {
            __break(1u);
            goto LABEL_59;
          }
          if ((v30 & 0xC000000000000001) == 0)
          {
            if ((v32 & 0x8000000000000000) == 0)
            {
              if (v32 < *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8)))
              {
                uint64_t v33 = *(void *)(v30 + 8 * v32 + 32);
LABEL_50:
                swift_retain();
                swift_bridgeObjectRelease();
                long long v50 = *(_OWORD *)(v33 + 24);
                uint64_t v47 = *(void *)(v33 + 40);
                swift_release();
LABEL_51:
                *(_OWORD *)a2 = v50;
                *(void *)(a2 + 16) = v47;
                *(unsigned char *)(a2 + 24) = 0;
                return;
              }
              goto LABEL_60;
            }
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
          }
LABEL_61:
          uint64_t v48 = sub_2FCE20();
          swift_bridgeObjectRelease();
          long long v50 = *(_OWORD *)(v48 + 24);
          uint64_t v47 = *(void *)(v48 + 40);
          swift_unknownObjectRelease();
          goto LABEL_51;
        }
      }
      goto LABEL_57;
    }
    swift_beginAccess();
    unint64_t v45 = *v29;
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_2FD030())
      {
LABEL_47:
        if ((v45 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFFF8)))
          {
            __break(1u);
            return;
          }
          uint64_t v33 = *(void *)(v45 + 32);
          goto LABEL_50;
        }
        goto LABEL_61;
      }
    }
    else
    {
      uint64_t v46 = *(void *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v46) {
        goto LABEL_47;
      }
    }
LABEL_57:
    swift_bridgeObjectRelease();
LABEL_20:
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 24) = 1;
    return;
  }
  uint64_t v49 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v9 = (double *)_swiftEmptyArrayStorage;
  uint64_t v10 = 40;
  sub_609F4();
  do
  {
    sub_371F4(&qword_3FF078);
    sub_2FC6A0();
    if (v51)
    {
      uint64_t v12 = v51[3];
      uint64_t v13 = v51[4];
      uint64_t v14 = v51[5];
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = (double *)sub_4A7E4(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v16 = *((void *)v9 + 2);
      unint64_t v15 = *((void *)v9 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v9 = (double *)sub_4A7E4((void *)(v15 > 1), v16 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v16 + 1;
      uint64_t v11 = &v9[3 * v16];
      *((void *)v11 + 4) = v12;
      *((void *)v11 + 5) = v13;
      *((void *)v11 + 6) = v14;
    }
    v10 += 16;
    --v8;
  }
  while (v8);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v17 = *((void *)v9 + 2);
  if (v17)
  {
    uint64_t v18 = *((void *)v9 + 4);
    double v19 = v9[5];
    double v20 = v9[6];
    uint64_t v21 = v17 - 1;
    if (v21)
    {
      uint64_t v41 = v9 + 9;
      double v42 = v9[5];
      double v43 = v9[6];
      do
      {
        uint64_t v22 = *((void *)v41 - 2);
        double v23 = *(v41 - 1);
        double v24 = *v41;
        if (v23 >= v42)
        {
          BOOL v44 = v24 < v43;
          if (v24 < v43) {
            double v42 = *(v41 - 1);
          }
          else {
            uint64_t v22 = v18;
          }
          if (v24 < v43) {
            double v43 = *v41;
          }
          else {
            double v23 = v19;
          }
          if (!v44) {
            double v24 = v20;
          }
        }
        else
        {
          double v42 = *(v41 - 1);
          double v43 = *v41;
        }
        v41 += 3;
        uint64_t v18 = v22;
        double v19 = v23;
        double v20 = v24;
        --v21;
      }
      while (v21);
    }
    else
    {
      uint64_t v22 = *((void *)v9 + 4);
      double v23 = v9[5];
      double v24 = v9[6];
    }
    swift_bridgeObjectRelease();
    *(void *)uint64_t v49 = v22;
    *(double *)(v49 + 8) = v23;
    *(double *)(v49 + 16) = v24;
    *(unsigned char *)(v49 + 24) = 0;
  }
  else
  {
    if (qword_3FD6C8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_2FB8A0();
    sub_60044(v34, (uint64_t)qword_3FF060);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_2FB880();
    os_log_type_t v36 = sub_2FC7B0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      NSString v51 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_2FC400();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      sub_38EF0(v38, v40, (uint64_t *)&v51);
      sub_2FCC70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v35, v36, "Unable to find a pageOrigin for pages intersecting locations: %s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
    }
    *(void *)uint64_t v49 = 0;
    *(void *)(v49 + 8) = 0;
    *(void *)(v49 + 16) = 0;
    *(unsigned char *)(v49 + 24) = 1;
  }
}

uint64_t sub_608D4(uint64_t result, uint64_t a2)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 32;
LABEL_2:
  if (v3 <= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v3;
  }
  unint64_t v7 = v6 + 1;
  uint64_t v8 = (uint64_t *)(v5 + 16 * v3);
  while (1)
  {
    if (v4 == v3) {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    if (v7 == ++v3) {
      break;
    }
    uint64_t v9 = v8 + 2;
    uint64_t v10 = *v8;
    v8 += 2;
    if (v10 == *(void *)(a2 + 16))
    {
      uint64_t v14 = *(v9 - 1);
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        double result = sub_1169A8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        double result = sub_1169A8(v11 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v10;
      v13[5] = v14;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_609F4()
{
  unint64_t result = qword_403BA0;
  if (!qword_403BA0)
  {
    sub_37294(&qword_3FF078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_403BA0);
  }
  return result;
}

uint64_t *sub_60A50(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

id BookThemeEntity.secondaryLabelColor.getter()
{
  uint64_t v1 = *v0;
  unsigned __int8 v2 = v0[1];
  switch(v1)
  {
    case 1:
      id v6 = objc_allocWithZone((Class)UIColor);
      double v7 = 0.921568627;
      double v8 = 0.960784314;
      if (v2) {
        double v9 = 0.45;
      }
      else {
        double v9 = 0.47;
      }
      goto LABEL_19;
    case 2:
      id v6 = objc_allocWithZone((Class)UIColor);
      if (v2)
      {
        double v7 = 0.949019608;
        double v8 = 0.941176471;
        double v9 = 0.6;
LABEL_19:
        double v11 = v7;
      }
      else
      {
        double v7 = 0.125490196;
        double v11 = 0.109803922;
        double v9 = 0.6;
        double v8 = 0.109803922;
      }
LABEL_26:
      return [v6 initWithRed:v7 green:v11 blue:v8 alpha:v9];
    case 3:
      id v3 = [self secondaryLabelColor];
      if (v2)
      {
        double v20 = sub_61EFC;
        uint64_t v21 = 0;
        unint64_t v16 = _NSConcreteStackBlock;
        uint64_t v17 = 1107296256;
        uint64_t v18 = sub_61F0C;
        double v19 = &unk_3C3ED0;
        uint64_t v10 = _Block_copy(&v16);
        id v5 = [self traitCollectionWithTraits:v10];
        _Block_release(v10);
        swift_release();
        if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
          goto LABEL_22;
        }
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      double v20 = sub_61EEC;
      uint64_t v21 = 0;
      unint64_t v16 = _NSConcreteStackBlock;
      uint64_t v17 = 1107296256;
      uint64_t v18 = sub_61F0C;
      double v19 = &unk_3C3EF8;
      uint64_t v13 = _Block_copy(&v16);
      id v5 = [self traitCollectionWithTraits:v13];
      _Block_release(v13);
      swift_release();
      if (swift_isEscapingClosureAtFileLocation())
      {
LABEL_32:
        __break(1u);
        JUMPOUT(0x61078);
      }
LABEL_22:
      id v14 = [v3 resolvedColorWithTraitCollection:v5];

      return v14;
    case 4:
      id v6 = objc_allocWithZone((Class)UIColor);
      if (v2)
      {
        double v7 = 0.976470588;
        double v11 = 0.925490196;
        double v8 = 0.858823529;
      }
      else
      {
        double v7 = 0.215686275;
        double v11 = 0.176470588;
        double v8 = 0.141176471;
      }
      double v9 = 0.6;
      goto LABEL_26;
    case 5:
      id v6 = objc_allocWithZone((Class)UIColor);
      if (v2)
      {
        double v11 = 0.976470588;
        double v8 = 0.921568627;
        double v9 = 0.6;
        double v7 = 1.0;
      }
      else
      {
        double v7 = 0.0784313725;
        double v11 = 0.0705882353;
        double v9 = 0.6;
        double v8 = 0.0;
      }
      goto LABEL_26;
    default:
      id v3 = [self secondaryLabelColor];
      if ((v2 & 1) == 0)
      {
        double v20 = sub_61EEC;
        uint64_t v21 = 0;
        unint64_t v16 = _NSConcreteStackBlock;
        uint64_t v17 = 1107296256;
        uint64_t v18 = sub_61F0C;
        double v19 = &unk_3C3F48;
        unint64_t v12 = _Block_copy(&v16);
        id v5 = [self traitCollectionWithTraits:v12];
        _Block_release(v12);
        swift_release();
        if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
          goto LABEL_22;
        }
        goto LABEL_31;
      }
      double v20 = sub_61EFC;
      uint64_t v21 = 0;
      unint64_t v16 = _NSConcreteStackBlock;
      uint64_t v17 = 1107296256;
      uint64_t v18 = sub_61F0C;
      double v19 = &unk_3C3F20;
      unint64_t v4 = _Block_copy(&v16);
      id v5 = [self traitCollectionWithTraits:v4];
      _Block_release(v4);
      swift_release();
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
        goto LABEL_22;
      }
      __break(1u);
      goto LABEL_30;
  }
}

uint64_t BookThemeEntity.tertiaryLabel.getter()
{
  uint64_t v1 = sub_2FBF30();
  __chkstk_darwin(v1);
  uint64_t v4 = *v0;
  unsigned __int8 v5 = v0[1];
  switch(v4)
  {
    case 1:
      id v6 = [self tertiaryLabelColor];
      if ((v5 & 1) == 0)
      {
        uint64_t v18 = sub_61EEC;
        uint64_t v19 = 0;
        aBlock = _NSConcreteStackBlock;
        uint64_t v15 = 1107296256;
        unint64_t v16 = sub_61F0C;
        uint64_t v17 = &unk_3C3FE8;
        uint64_t v10 = _Block_copy(&aBlock);
        id v8 = [self traitCollectionWithTraits:v10];
        _Block_release(v10);
        swift_release();
        if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
          goto LABEL_12;
        }
        goto LABEL_15;
      }
      uint64_t v18 = sub_61EFC;
      uint64_t v19 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v15 = 1107296256;
      unint64_t v16 = sub_61F0C;
      uint64_t v17 = &unk_3C3FC0;
      double v7 = _Block_copy(&aBlock);
      id v8 = [self traitCollectionWithTraits:v7];
      _Block_release(v7);
      swift_release();
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_14;
    case 3:
      id v6 = [self tertiaryLabelColor];
      if (v5)
      {
        uint64_t v18 = sub_61EFC;
        uint64_t v19 = 0;
        aBlock = _NSConcreteStackBlock;
        uint64_t v15 = 1107296256;
        unint64_t v16 = sub_61F0C;
        uint64_t v17 = &unk_3C3F70;
        double v9 = _Block_copy(&aBlock);
        id v8 = [self traitCollectionWithTraits:v9];
        _Block_release(v9);
        swift_release();
        if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
          goto LABEL_12;
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v18 = sub_61EEC;
      uint64_t v19 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v15 = 1107296256;
      unint64_t v16 = sub_61F0C;
      uint64_t v17 = &unk_3C3F98;
      double v11 = _Block_copy(&aBlock);
      id v8 = [self traitCollectionWithTraits:v11];
      _Block_release(v11);
      swift_release();
      if (swift_isEscapingClosureAtFileLocation())
      {
LABEL_16:
        __break(1u);
        JUMPOUT(0x616F4);
      }
LABEL_12:
      id v12 = [v6 resolvedColorWithTraitCollection:v8];

      return sub_2FBF80();
    default:
      (*(void (**)(char *, void))(v3 + 104))((char *)&aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:));
      return sub_2FBF70();
  }
}

uint64_t BookThemeEntity.primaryLabel.getter()
{
  if (*(unsigned char *)v0 == 1)
  {
    id v2 = [self secondaryLabelColor];
    *((void *)&v13 + 1) = sub_61EFC;
    *(void *)&long long v14 = 0;
    double v11 = _NSConcreteStackBlock;
    *(void *)&long long v12 = 1107296256;
    *((void *)&v12 + 1) = sub_61F0C;
    *(void *)&long long v13 = &unk_3C4010;
    id v6 = _Block_copy(&v11);
    id v4 = [self traitCollectionWithTraits:v6];
    _Block_release(v6);
    swift_release();
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0) {
      goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  char v1 = *(unsigned char *)(v0 + 1);
  if (*(unsigned char *)v0)
  {
    uint64_t v7 = *(void *)(v0 + 56);
    char v8 = *(unsigned char *)(v0 + 2);
    LOBYTE(v11) = *(unsigned char *)v0;
    BYTE1(v11) = v1;
    BYTE2(v11) = v8;
    long long v12 = *(_OWORD *)(v0 + 8);
    long long v13 = *(_OWORD *)(v0 + 24);
    long long v14 = *(_OWORD *)(v0 + 40);
    uint64_t v15 = v7;
    BookThemeEntity.textColor.getter();
    return sub_2FBF80();
  }
  id v2 = [self labelColor];
  if (v1)
  {
    *((void *)&v13 + 1) = sub_61EFC;
    *(void *)&long long v14 = 0;
    double v11 = _NSConcreteStackBlock;
    *(void *)&long long v12 = 1107296256;
    *((void *)&v12 + 1) = sub_61F0C;
    *(void *)&long long v13 = &unk_3C4038;
    uint64_t v3 = _Block_copy(&v11);
    id v4 = [self traitCollectionWithTraits:v3];
    _Block_release(v3);
    swift_release();
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  *((void *)&v13 + 1) = sub_61EEC;
  *(void *)&long long v14 = 0;
  double v11 = _NSConcreteStackBlock;
  *(void *)&long long v12 = 1107296256;
  *((void *)&v12 + 1) = sub_61F0C;
  *(void *)&long long v13 = &unk_3C4060;
  double v9 = _Block_copy(&v11);
  id v4 = [self traitCollectionWithTraits:v9];
  _Block_release(v9);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
LABEL_10:
    id v10 = [v2 resolvedColorWithTraitCollection:v4];

    return sub_2FBF80();
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t BookThemeEntity.primaryLabelColor.getter()
{
  if (*(unsigned char *)v0 == 1)
  {
    id v2 = [self secondaryLabelColor];
    *((void *)&v13 + 1) = sub_61EFC;
    *(void *)&long long v14 = 0;
    double v11 = _NSConcreteStackBlock;
    *(void *)&long long v12 = 1107296256;
    *((void *)&v12 + 1) = sub_61F0C;
    *(void *)&long long v13 = &unk_3C4088;
    id v6 = _Block_copy(&v11);
    id v4 = [self traitCollectionWithTraits:v6];
    _Block_release(v6);
    swift_release();
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0) {
      goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  char v1 = *(unsigned char *)(v0 + 1);
  if (*(unsigned char *)v0)
  {
    uint64_t v7 = *(void *)(v0 + 56);
    char v8 = *(unsigned char *)(v0 + 2);
    LOBYTE(v11) = *(unsigned char *)v0;
    BYTE1(v11) = v1;
    BYTE2(v11) = v8;
    long long v12 = *(_OWORD *)(v0 + 8);
    long long v13 = *(_OWORD *)(v0 + 24);
    long long v14 = *(_OWORD *)(v0 + 40);
    uint64_t v15 = v7;
    return (uint64_t)BookThemeEntity.textColor.getter();
  }
  id v2 = [self labelColor];
  if (v1)
  {
    *((void *)&v13 + 1) = sub_61EFC;
    *(void *)&long long v14 = 0;
    double v11 = _NSConcreteStackBlock;
    *(void *)&long long v12 = 1107296256;
    *((void *)&v12 + 1) = sub_61F0C;
    *(void *)&long long v13 = &unk_3C40B0;
    uint64_t v3 = _Block_copy(&v11);
    id v4 = [self traitCollectionWithTraits:v3];
    _Block_release(v3);
    swift_release();
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  *((void *)&v13 + 1) = sub_61EEC;
  *(void *)&long long v14 = 0;
  double v11 = _NSConcreteStackBlock;
  *(void *)&long long v12 = 1107296256;
  *((void *)&v12 + 1) = sub_61F0C;
  *(void *)&long long v13 = &unk_3C40D8;
  double v9 = _Block_copy(&v11);
  id v4 = [self traitCollectionWithTraits:v9];
  _Block_release(v9);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
LABEL_10:
    id v10 = [v2 resolvedColorWithTraitCollection:v4];

    return (uint64_t)v10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t BookThemeEntity.secondaryLabel.getter()
{
  BookThemeEntity.secondaryLabelColor.getter();

  return sub_2FBF80();
}

uint64_t BookThemeEntity.gaijiImageInversionPercentage.getter()
{
  switch(*v0)
  {
    case 1:
      if ((v0[1] & 1) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    case 2:
    case 4:
    case 5:
      if ((v0[1] & 1) == 0) {
        goto LABEL_5;
      }
LABEL_8:
      uint64_t result = 90;
      break;
    default:
      if (v0[1]) {
LABEL_7:
      }
        uint64_t result = 65;
      else {
LABEL_5:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

id sub_61EEC(void *a1)
{
  return [a1 setUserInterfaceStyle:1];
}

id sub_61EFC(void *a1)
{
  return [a1 setUserInterfaceStyle:2];
}

uint64_t sub_61F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

uint64_t sub_61F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_61F70()
{
  return swift_release();
}

void *sub_61FE0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_116880(0, v2, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    id v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 2;
      uint64_t v5 = v6;
      double v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_116880(v7 > 1, v8 + 1, 1);
        uint64_t result = v9;
      }
      result[2] = v8 + 1;
      result[v8 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_620A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  int64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    if ((*v2 & 1) == 0)
    {
      long long v7 = *((_OWORD *)v2 - 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_49D78(0, v3[2] + 1, 1, v3);
      }
      unint64_t v5 = v3[2];
      unint64_t v4 = v3[3];
      if (v5 >= v4 >> 1) {
        uint64_t v3 = sub_49D78((void *)(v4 > 1), v5 + 1, 1, v3);
      }
      v3[2] = v5 + 1;
      *(_OWORD *)&v3[2 * v5 + 4] = v7;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_621A4()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_3FF080);
  sub_60044(v0, (uint64_t)qword_3FF080);
  type metadata accessor for BookContentAccessoryController();
  sub_371F4(&qword_3FF308);
  sub_2FC1E0();
  return sub_2FB890();
}

uint64_t sub_6223C(uint64_t *a1, uint64_t *a2)
{
  return sub_9DA00(*a1, *a2);
}

uint64_t BookContentAccessoryController.__allocating_init(currentLocationProvider:contentLayoutController:paginatingService:accessoryAdornmentFactory:selectionHighlightController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_622B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_6641C);
}

uint64_t BookContentAccessoryController.init(currentLocationProvider:contentLayoutController:paginatingService:accessoryAdornmentFactory:selectionHighlightController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_622B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_662D4);
}

uint64_t sub_622B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v19 = a10(a1, a2, a3, a4, a6, a7, a8, a9, v10, ObjectType, a5);
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v19;
}

uint64_t sub_62388()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_371F4((uint64_t *)&unk_4000D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v54 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_371F4(&qword_3FF280);
  uint64_t v46 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_371F4(&qword_3FF288);
  __chkstk_darwin(v47);
  uint64_t v7 = sub_371F4(&qword_3FF290);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  __chkstk_darwin(v7);
  double v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_371F4(&qword_3FF298);
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  __chkstk_darwin(v10);
  uint64_t v48 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_371F4(&qword_3FF2A0);
  uint64_t v55 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v53 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_371F4(&qword_3FF2A8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v44 = v12;
    unint64_t v45 = v17;
    uint64_t v20 = *(void *)(v1 + 24);
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v22 = Strong;
      uint64_t v23 = swift_unknownObjectWeakLoadStrong();
      if (v23)
      {
        uint64_t v39 = *(void *)(v1 + 48);
        id v56 = *(id *)(v22 + 104);
        uint64_t v43 = v22;
        uint64_t v38 = v23;
        sub_371F4(&qword_3FF2B0);
        uint64_t v42 = v14;
        sub_44924((unint64_t *)&unk_406750, &qword_3FF2B0);
        id v56 = (id)sub_2FBBD0();
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(ObjectType, v20);
        sub_371F4(&qword_3FF2B8);
        uint64_t v40 = v15;
        sub_371F4(&qword_3FF2C0);
        uint64_t v41 = v19;
        sub_44924(&qword_4067D0, &qword_3FF2B8);
        sub_2FBC30();
        swift_release();
        uint64_t v37 = &protocol conformance descriptor for Publishers.Map<A, B>;
        sub_44924(&qword_3FF2C8, &qword_3FF280);
        sub_2FBC10();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v4);
        sub_371F4(&qword_3FF2D0);
        sub_44924((unint64_t *)&unk_406760, &qword_3FF2D0);
        sub_44924(&qword_3FF2D8, &qword_3FF288);
        sub_2FB9A0();
        sub_668D4();
        id v56 = (id)sub_2FC8C0();
        uint64_t v25 = sub_2FC870();
        uint64_t v26 = (uint64_t)v54;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v54, 1, 1, v25);
        sub_44924(&qword_3FF2E0, &qword_3FF290);
        sub_52CFC();
        os_log_type_t v27 = v48;
        uint64_t v28 = v50;
        sub_2FBC80();
        sub_52D64(v26);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v28);
        sub_44924(&qword_3FF2E8, &qword_3FF298);
        uint64_t v29 = v52;
        unint64_t v30 = v53;
        sub_2FBC60();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v29);
        uint64_t v31 = swift_allocObject();
        uint64_t v32 = v39;
        *(void *)(v31 + 16) = v38;
        *(void *)(v31 + 24) = v32;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = sub_6694C;
        *(void *)(v33 + 24) = v31;
        sub_44924(&qword_3FF2F0, &qword_3FF2A0);
        swift_unknownObjectRetain();
        uint64_t v35 = v44;
        uint64_t v34 = v45;
        sub_2FBC30();
        swift_release();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v35);
        swift_allocObject();
        swift_weakInit();
        sub_44924(&qword_3FF2F8, &qword_3FF2A8);
        uint64_t v36 = v42;
        sub_2FBCF0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v36);
        swift_beginAccess();
        sub_2FBA50();
        swift_endAccess();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
        return swift_release();
      }
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

double sub_62CA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 104);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_5;
  }
  unint64_t v6 = sub_42168(a1);
  if ((v7 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 56 * v6);
  uint64_t v9 = *v8;
  uint64_t v10 = v8[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain();
  sub_664C4(v9);
  if (v9)
  {
    *(void *)(a2 + 24) = swift_getObjectType();
    *(void *)(a2 + 32) = v10;
    *(void *)a2 = v9;
  }
  else
  {
LABEL_5:
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t BookContentAccessoryController.deinit()
{
  sub_4F924(v0 + 16);
  swift_weakDestroy();
  sub_4F924(v0 + 40);
  sub_4F924(v0 + 56);
  sub_4F924(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BookContentAccessoryController.__deallocating_deinit()
{
  sub_4F924(v0 + 16);
  swift_weakDestroy();
  sub_4F924(v0 + 40);
  sub_4F924(v0 + 56);
  sub_4F924(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t sub_62E54@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 24);
  uint64_t v3 = *(void *)(result + 48);
  char v4 = *(unsigned char *)(result + 137);
  *(_OWORD *)a2 = *(_OWORD *)result;
  if (v2 | v3) {
    char v5 = 1;
  }
  else {
    char v5 = v4;
  }
  *(unsigned char *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 17) = v4;
  return result;
}

BOOL sub_62E80(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8);
  return ((v3 | (*(unsigned char *)(a1 + 16) ^ *(unsigned char *)(a2 + 16) | *(unsigned char *)(a2 + 17) ^ *(unsigned char *)(a1 + 17))) & 1) == 0;
}

uint64_t sub_62EC0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (qword_3FD6D0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2FB8A0();
  sub_60044(v6, (uint64_t)qword_3FF080);
  char v7 = sub_2FB880();
  os_log_type_t v8 = sub_2FC7A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_371F4(&qword_3FF2C0);
    uint64_t v10 = sub_2FC1E0();
    sub_38EF0(v10, v11, &v13);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v7, v8, "Received #stateChange location %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return a4 & 1 | ((a3 & 1) == 0);
}

uint64_t sub_63078(uint64_t a1)
{
  return sub_62EC0(a1, a1 + 40, *(unsigned char *)(a1 + 56), *(unsigned char *)(a1 + 57));
}

uint64_t sub_63088(uint64_t a1, uint64_t *a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  long long v9 = *(_OWORD *)(a1 + 16);
  v36[0] = *(_OWORD *)a1;
  v36[1] = v9;
  uint64_t v37 = *(void *)(a1 + 32);
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  if (([self isMainThread] & 1) == 0)
  {
    if (qword_3FD6D0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_2FB8A0();
    sub_60044(v12, (uint64_t)qword_3FF080);
    uint64_t v13 = sub_2FB880();
    os_log_type_t v14 = sub_2FC7B0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&def_7BFC0, v13, v14, "Unexpectedly received value on non-main thread. This class is not thread-safe", v15, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(ObjectType, a6);
  v35[0] = v11;
  v35[1] = v10;
  uint64_t v17 = sub_63454(v35);
  swift_release();
  uint64_t v18 = sub_61FE0((uint64_t)v17);
  uint64_t v34 = sub_15CE84((uint64_t)v18);
  swift_bridgeObjectRelease();
  if (qword_3FD6D0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_2FB8A0();
  sub_60044(v19, (uint64_t)qword_3FF080);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_2FB880();
  os_log_type_t v21 = sub_2FC7A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    char v23 = a4;
    uint64_t v24 = sub_2FC400();
    uint64_t v33 = v10;
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = v24;
    a4 = v23;
    sub_38EF0(v27, v26, v35);
    sub_2FCC70();
    swift_bridgeObjectRelease_n();
    uint64_t v10 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v20, v21, "Handling #stateChange adornmentStateChange for %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v28 = sub_43F4C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_66B1C((uint64_t)v36);
  if (a4) {
    __int16 v29 = 256;
  }
  else {
    __int16 v29 = 0;
  }
  sub_660D4(v28, v34, v36, v11, v10, v29 & 0xFFFE | a3 & 1, (uint64_t)v17);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  sub_66B64((uint64_t)v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v31;
}

void *sub_63454(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = *(void *)(v1 + 40);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    double result = (void *)swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  double result = (void *)sub_2FD030();
  if (!result) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = sub_2FCE20();
    swift_bridgeObjectRelease();
    int v15 = *(unsigned __int8 *)(v14 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationMode);
    swift_unknownObjectRelease();
    if (v15 == 1)
    {
LABEL_6:
      uint64_t v26 = v3;
      uint64_t v27 = v2;
      uint64_t v10 = &v26;
      BookPaginationEntity.spread(containing:)(*(BookEPUB::PageLocation *)(&v9 - 1));
      if (v23)
      {
        uint64_t v11 = swift_bridgeObjectRetain();
        sub_66BDC(v11);
        uint64_t v12 = (uint64_t)sub_620A0(v23);
LABEL_15:
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        return (void *)v13;
      }
      return _swiftEmptyArrayStorage;
    }
LABEL_12:
    uint64_t v26 = v3;
    uint64_t v27 = v2;
    char v16 = 1;
    sub_64CB8(&v26, 1, (uint64_t)&v23);
    uint64_t v17 = v23;
    uint64_t v18 = v24;
    char v19 = v25;
    uint64_t v20 = v23;
    uint64_t v21 = v24;
    if ((v25 & 1) == 0)
    {
      uint64_t v26 = v23;
      uint64_t v27 = v24;
      sub_64CB8(&v26, 1, (uint64_t)&v23);
      uint64_t v20 = v23;
      uint64_t v21 = v24;
      char v16 = v25;
    }
    sub_371F4(&qword_3FF310);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_32CAC0;
    uint64_t v23 = v3;
    uint64_t v24 = v2;
    sub_64CB8(&v23, -1, v22 + 32);
    *(void *)(v22 + 56) = v3;
    *(void *)(v22 + 64) = v2;
    *(unsigned char *)(v22 + 72) = 0;
    *(void *)(v22 + 80) = v17;
    *(void *)(v22 + 88) = v18;
    *(unsigned char *)(v22 + 96) = v19;
    *(void *)(v22 + 104) = v20;
    *(void *)(v22 + 112) = v21;
    *(unsigned char *)(v22 + 120) = v16;
    uint64_t v23 = v22;
    sub_371F4(&qword_3FF318);
    sub_44924(&qword_3FF320, &qword_3FF318);
    uint64_t v12 = sub_2FC340();
    goto LABEL_15;
  }
  if (*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8)))
  {
    uint64_t v7 = *(void *)(v4 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    char v8 = *(unsigned char *)(v7 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationMode);
    swift_release();
    if (v8) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_636B4(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v43 = *a2;
  v45[0] = *a3;
  uint64_t v7 = *(void *)(v45[0] + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    for (int64_t i = (uint64_t *)(v45[0] + 40); ; i += 2)
    {
      uint64_t v9 = *i;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
      swift_unknownObjectRetain();
      uint64_t v12 = v11(ObjectType, v9);
      if ((v13 & 1) == 0 && v12 == v43) {
        break;
      }
      swift_unknownObjectRelease();
      if (!--v7)
      {
        sub_66BB0((uint64_t)v45);
        sub_66BB0((uint64_t)v45);
        return;
      }
    }
    sub_66BB0((uint64_t)v45);
    sub_66BB0((uint64_t)v45);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(ObjectType, v9);
    if (v14)
    {
      uint64_t v39 = (void *)v14;
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9);
      if (v15)
      {
        uint64_t v17 = (void *)v15;
        uint64_t v38 = v16;
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 160))(ObjectType, v9);
        if (v18)
        {
          uint64_t v36 = (void *)v18;
          uint64_t v37 = v17;
          uint64_t v19 = *(void *)(a7 + 16);
          if (v19)
          {
            uint64_t v20 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
            uint64_t v21 = _swiftEmptyArrayStorage;
            do
            {
              if (*(v20 - 1) == v43)
              {
                uint64_t v25 = *v20;
                v44[0] = v21;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1169A8(0, v21[2] + 1, 1);
                  uint64_t v21 = (void *)v44[0];
                }
                unint64_t v23 = v21[2];
                unint64_t v22 = v21[3];
                if (v23 >= v22 >> 1)
                {
                  sub_1169A8(v22 > 1, v23 + 1, 1);
                  uint64_t v21 = (void *)v44[0];
                }
                v21[2] = v23 + 1;
                uint64_t v24 = &v21[2 * v23];
                v24[4] = v43;
                v24[5] = v25;
              }
              v20 += 2;
              --v19;
            }
            while (v19);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v21 = _swiftEmptyArrayStorage;
          }
          uint64_t v26 = *(double (**)(uint64_t, uint64_t))(v9 + 168);
          id v27 = v39;
          id v28 = v36;
          double v29 = v26(ObjectType, v9);
          uint64_t v30 = swift_getObjectType();
          uint64_t v31 = (void *)(*(uint64_t (**)(uint64_t))(v38 + 8))(v30);
          [v31 contentOffset];
          uint64_t v33 = v32;
          uint64_t v35 = v34;

          v44[0] = a4;
          v44[1] = a5;
          v44[2] = v21;
          swift_unknownObjectWeakInit();

          swift_unknownObjectWeakInit();
          *(double *)&v44[5] = v29;
          v44[6] = v33;
          v44[7] = v35;
          sub_12E1A8((uint64_t)v44, v43);
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_63A3C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(result + 96);
    *(void *)(result + 96) = v1;
    swift_bridgeObjectRetain_n();
    char v4 = sub_9DA00(v3, v1);
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0) {
      sub_63AD8();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_63AD8()
{
  uint64_t v1 = (int *)sub_371F4(&qword_3FF300);
  swift_allocBox();
  uint64_t v3 = v2;
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[16];
  uint64_t v6 = v1[20];
  sub_2FB520();
  uint64_t v122 = v4;
  *(void *)(v3 + v4) = _swiftEmptyArrayStorage;
  uint64_t v109 = v5;
  *(void *)(v3 + v5) = _swiftEmptyArrayStorage;
  uint64_t v114 = v6;
  *(void *)(v3 + v6) = _swiftEmptyArrayStorage;
  id v124 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_99;
  }
  uint64_t v126 = v0[6];
  uint64_t v111 = swift_unknownObjectWeakLoadStrong();
  if (!v111) {
    goto LABEL_98;
  }
  uint64_t v108 = v0[10];
  uint64_t v7 = swift_weakLoadStrong();
  if (!v7)
  {
    swift_unknownObjectRelease();
LABEL_98:
    swift_unknownObjectRelease();
    goto LABEL_99;
  }
  uint64_t v8 = v7;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v9 = v0[8];
    uint64_t v10 = v124[12];
    uint64_t v11 = *(void *)(v10 + 64);
    uint64_t v106 = v10 + 64;
    uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v13 = -1;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    unint64_t v14 = v13 & v11;
    uint64_t v15 = v124 + 13;
    uint64_t v110 = v124[12];
    swift_bridgeObjectRetain();
    swift_beginAccess();
    int64_t v115 = 0;
    uint64_t v125 = v9;
    int64_t v107 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v121 = v3;
    uint64_t v113 = v8;
    off_t v127 = v124 + 13;
    while (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      uint64_t v17 = (v14 - 1) & v14;
      unint64_t v18 = v16 | (v115 << 6);
LABEL_10:
      uint64_t v19 = *(void *)(v110 + 56);
      *(void *)&v130[0] = *(void *)(*(void *)(v110 + 48) + 8 * v18);
      sub_66A08(v19 + (v18 << 6), (uint64_t)v130 + 8);
LABEL_29:
      sub_66A64((uint64_t)v130, (uint64_t)&v132, (uint64_t *)&unk_400E30);
      if (!v133[2])
      {
        swift_release();
        uint64_t v88 = swift_bridgeObjectRetain();
        id v89 = sub_1162BC(v88);
        swift_bridgeObjectRelease();
        uint64_t v90 = v89[2];
        if (v90)
        {
          v91 = v89 + 4;
          do
          {
            uint64_t v93 = *v91++;
            uint64_t v92 = v93;
            if (!*(void *)(v124[12] + 16) || (sub_42168(v92), (v94 & 1) == 0))
            {
              swift_beginAccess();
              unint64_t v95 = sub_42168(v92);
              if (v96)
              {
                unint64_t v97 = v95;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v99 = *v15;
                *(void *)&v130[0] = *v15;
                uint64_t *v15 = 0x8000000000000000;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1138C4();
                  uint64_t v99 = *(void *)&v130[0];
                }
                sub_1BB008(v97, v99);
                uint64_t *v15 = v99;
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                uint64_t v3 = v121;
              }
              swift_endAccess();
              id v100 = *(void **)(v3 + v114);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v100 = sub_4A90C(0, v100[2] + 1, 1, v100);
              }
              unint64_t v102 = v100[2];
              unint64_t v101 = v100[3];
              if (v102 >= v101 >> 1) {
                id v100 = sub_4A90C((void *)(v101 > 1), v102 + 1, 1, v100);
              }
              v100[2] = v102 + 1;
              v100[v102 + 4] = v92;
              *(void *)(v3 + v114) = v100;
            }
            --v90;
          }
          while (v90);
        }
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_100;
      }
      uint64_t v23 = v132;
      sub_469D4((uint64_t)v133, (uint64_t)v130);
      uint64_t v24 = *v15;
      unint64_t v123 = v17;
      if (*(void *)(*v15 + 16) && (unint64_t v25 = sub_42168(v23), (v26 & 1) != 0))
      {
        id v27 = (void *)(*(void *)(v24 + 56) + 56 * v25);
        uint64_t v28 = v27[3];
        uint64_t v29 = v27[4];
        uint64_t v30 = v27[5];
        uint64_t v119 = v27[6];
        if (*v27)
        {
          uint64_t v31 = v27[1];
          uint64_t ObjectType = swift_getObjectType();
          sub_66A08((uint64_t)v130, (uint64_t)v128);
          uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v31 + 16);
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          v33(v128, ObjectType, v31);
          uint64_t v3 = v121;
          if (!v28) {
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v34 = swift_getObjectType();
          sub_66A08((uint64_t)v130, (uint64_t)v128);
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v29 + 16))(v128, v34, v29);
          goto LABEL_35;
        }
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v28) {
          goto LABEL_34;
        }
LABEL_35:
        uint64_t v8 = v113;
        if (v30)
        {
          uint64_t v35 = swift_getObjectType();
          sub_66A08((uint64_t)v130, (uint64_t)v128);
          (*(void (**)(unsigned char *, uint64_t))(v119 + 16))(v128, v35);
        }
        uint64_t v36 = *(void **)(v3 + v109);
        unint64_t v14 = v123;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_4A90C(0, v36[2] + 1, 1, v36);
        }
        unint64_t v38 = v36[2];
        unint64_t v37 = v36[3];
        if (v38 >= v37 >> 1) {
          uint64_t v36 = sub_4A90C((void *)(v37 > 1), v38 + 1, 1, v36);
        }
        _OWORD v36[2] = v38 + 1;
        v36[v38 + 4] = v23;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v3 = v121;
        *(void *)(v121 + v109) = v36;
        sub_66AC8((uint64_t)v130);
        uint64_t v15 = v124 + 13;
      }
      else
      {
        uint64_t v39 = swift_getObjectType();
        uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t))(v125 + 8))(v23, Strong, v126, v8, v111, v108, v130, v39, v125);
        if (v42)
        {
          uint64_t v117 = v41;
          uint64_t v118 = v40;
          if (qword_3FD6D0 != -1) {
            swift_once();
          }
          uint64_t v43 = sub_2FB8A0();
          sub_60044(v43, (uint64_t)qword_3FF080);
          uint64_t v44 = sub_2FB880();
          os_log_type_t v45 = sub_2FC790();
          if (os_log_type_enabled(v44, v45))
          {
            uint64_t v46 = swift_slowAlloc();
            *(_DWORD *)uint64_t v46 = 134217984;
            *(void *)(v46 + 4) = v23;
            _os_log_impl(&def_7BFC0, v44, v45, "Adding highlight adornment controller for ordinal: %ld", (uint8_t *)v46, 0xCu);
            swift_slowDealloc();
          }
        }
        else
        {
          uint64_t v117 = 0;
          uint64_t v118 = 0;
        }
        uint64_t v47 = v23;
        uint64_t v120 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t))(v125 + 16))(v23, Strong, v126, v8, v130, v39);
        if (v120)
        {
          uint64_t v116 = v48;
          uint64_t v49 = v8;
          if (qword_3FD6D0 != -1) {
            swift_once();
          }
          uint64_t v50 = v42;
          uint64_t v51 = sub_2FB8A0();
          sub_60044(v51, (uint64_t)qword_3FF080);
          uint64_t v52 = sub_2FB880();
          os_log_type_t v53 = sub_2FC790();
          if (os_log_type_enabled(v52, v53))
          {
            uint64_t v54 = swift_slowAlloc();
            *(_DWORD *)uint64_t v54 = 134217984;
            *(void *)(v54 + 4) = v47;
            _os_log_impl(&def_7BFC0, v52, v53, "Adding note adornment controller for ordinal: %ld", (uint8_t *)v54, 0xCu);
            swift_slowDealloc();
          }
          uint64_t v55 = v124;
        }
        else
        {
          uint64_t v49 = v8;
          uint64_t v50 = v42;
          uint64_t v55 = v124;
          uint64_t v116 = 0;
        }
        uint64_t v57 = *(void *)(v49 + 64);
        uint64_t v56 = *(void *)(v49 + 72);
        unint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void *, _UNKNOWN **, uint64_t, uint64_t))(v125 + 24);
        swift_unknownObjectRetain();
        uint64_t v59 = v58(v47, Strong, v126, v49, v130, v57, v56, v55, &protocol witness table for BookContentAccessoryController, v39, v125);
        uint64_t v61 = v60;
        swift_unknownObjectRelease();
        if (v59)
        {
          uint64_t v62 = v50;
          uint64_t v63 = v120;
          if (qword_3FD6D0 != -1) {
            swift_once();
          }
          uint64_t v64 = sub_2FB8A0();
          sub_60044(v64, (uint64_t)qword_3FF080);
          uint64_t v65 = sub_2FB880();
          os_log_type_t v66 = sub_2FC790();
          uint64_t v67 = v47;
          if (os_log_type_enabled(v65, v66))
          {
            uint64_t v68 = swift_slowAlloc();
            *(_DWORD *)uint64_t v68 = 134217984;
            *(void *)(v68 + 4) = v47;
            _os_log_impl(&def_7BFC0, v65, v66, "Adding accessibility controller for ordinal: %ld", (uint8_t *)v68, 0xCu);
            swift_slowDealloc();
          }
        }
        else
        {
          uint64_t v61 = 0;
          uint64_t v62 = v50;
          uint64_t v63 = v120;
          uint64_t v67 = v47;
        }
        swift_beginAccess();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        char v69 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v129 = (void *)*v127;
        uint64_t v70 = v129;
        *off_t v127 = 0x8000000000000000;
        unint64_t v72 = sub_42168(v67);
        uint64_t v73 = v70[2];
        BOOL v74 = (v71 & 1) == 0;
        uint64_t v75 = v73 + v74;
        if (__OFADD__(v73, v74))
        {
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          uint64_t result = sub_2FD280();
          __break(1u);
          return result;
        }
        char v76 = v71;
        if (v70[3] >= v75)
        {
          if (v69)
          {
            uint64_t v79 = v129;
            if (v71) {
              goto LABEL_71;
            }
          }
          else
          {
            sub_1138C4();
            uint64_t v79 = v129;
            if (v76) {
              goto LABEL_71;
            }
          }
        }
        else
        {
          sub_10EE30(v75, v69);
          unint64_t v77 = sub_42168(v67);
          if ((v76 & 1) != (v78 & 1)) {
            goto LABEL_106;
          }
          unint64_t v72 = v77;
          uint64_t v79 = v129;
          if (v76)
          {
LABEL_71:
            id v84 = (uint64_t *)(v79[7] + 56 * v72);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t *v84 = v62;
            v84[1] = v118;
            v84[2] = v117;
            v84[3] = v63;
            v84[4] = v116;
            v84[5] = v59;
            v84[6] = v61;
            goto LABEL_72;
          }
        }
        v79[(v72 >> 6) + 8] |= 1 << v72;
        *(void *)(v79[6] + 8 * v72) = v67;
        id v80 = (uint64_t *)(v79[7] + 56 * v72);
        *id v80 = v62;
        v80[1] = v118;
        v80[2] = v117;
        v80[3] = v63;
        v80[4] = v116;
        v80[5] = v59;
        v80[6] = v61;
        uint64_t v81 = v79[2];
        BOOL v82 = __OFADD__(v81, 1);
        uint64_t v83 = v81 + 1;
        if (v82) {
          goto LABEL_104;
        }
        v79[2] = v83;
LABEL_72:
        *off_t v127 = v79;
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v3 = v121;
        uint64_t v85 = *(void **)(v121 + v122);
        uint64_t v8 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v85 = sub_4A90C(0, v85[2] + 1, 1, v85);
        }
        unint64_t v87 = v85[2];
        unint64_t v86 = v85[3];
        if (v87 >= v86 >> 1) {
          uint64_t v85 = sub_4A90C((void *)(v86 > 1), v87 + 1, 1, v85);
        }
        v85[2] = v87 + 1;
        v85[v87 + 4] = v67;
        *(void *)(v121 + v122) = v85;
        sub_66AC8((uint64_t)v130);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v15 = v124 + 13;
        unint64_t v14 = v123;
      }
    }
    int64_t v20 = v115 + 1;
    if (__OFADD__(v115, 1)) {
      goto LABEL_103;
    }
    if (v20 >= v107)
    {
LABEL_28:
      uint64_t v17 = 0;
      uint64_t v131 = 0;
      memset(v130, 0, sizeof(v130));
      goto LABEL_29;
    }
    unint64_t v21 = *(void *)(v106 + 8 * v20);
    if (!v21)
    {
      int64_t v22 = v115 + 2;
      ++v115;
      if (v20 + 1 >= v107) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v106 + 8 * v22);
      if (!v21)
      {
        int64_t v115 = v20 + 1;
        if (v20 + 2 >= v107) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v106 + 8 * (v20 + 2));
        if (v21)
        {
          v20 += 2;
          goto LABEL_14;
        }
        int64_t v22 = v20 + 3;
        int64_t v115 = v20 + 2;
        if (v20 + 3 >= v107) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v106 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v20 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_105;
            }
            if (v20 >= v107)
            {
              int64_t v115 = v107 - 1;
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v106 + 8 * v20);
            ++v22;
            if (v21) {
              goto LABEL_14;
            }
          }
        }
      }
      int64_t v20 = v22;
    }
LABEL_14:
    uint64_t v17 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v115 = v20;
    goto LABEL_10;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
LABEL_99:
  swift_beginAccess();
  uint64_t v103 = swift_bridgeObjectRetain();
  id v104 = sub_1162BC(v103);
  swift_bridgeObjectRelease();
  *(void *)(v3 + v6) = v104;
  v124[13] = sub_44050((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
LABEL_100:
  sub_647DC();
  return swift_release();
}

void sub_647DC()
{
  uint64_t v0 = sub_2FB530();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_371F4(&qword_3FF300);
  uint64_t v4 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_2FB4E0();
  double v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_3FD6D0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2FB8A0();
  sub_60044(v7, (uint64_t)qword_3FF080);
  swift_retain_n();
  uint64_t v8 = sub_2FB880();
  os_log_type_t v9 = sub_2FC790();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v10 = 136315906;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2FC400();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_38EF0(v11, v13, &v25);
    sub_2FCC70();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2FC400();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_38EF0(v14, v16, &v25);
    sub_2FCC70();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2FC400();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    double v22 = COERCE_DOUBLE(sub_38EF0(v17, v19, &v25));
    sub_2FCC70();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2048;
    double v22 = round(v6 * -1000000.0) / 1000.0;
    sub_2FCC70();
    _os_log_impl(&def_7BFC0, v8, v9, "updateAccessoryControllers: created: %s, updated: %s, deleted: %s in %fms", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t BookContentAccessoryController.applyToAccessibility(for:with:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = BookContentLayoutController.contentLoader(ordinal:)(a1);
    uint64_t v8 = v7;
    uint64_t result = swift_release();
    if (v6)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = v3;
      char v11 = v4;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 320))(&v10, ObjectType, v8);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

unint64_t sub_64CB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v23 = *a1;
  uint64_t v24 = v5;
  uint64_t v7 = &v23;
  unint64_t result = (unint64_t)BookPaginationEntity.spread(containing:)(*(BookEPUB::PageLocation *)(&a2 - 1));
  uint64_t v9 = v29;
  if (!v29) {
    goto LABEL_11;
  }
  uint64_t v11 = v30;
  uint64_t v10 = v31;
  if (a2 == -1)
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_66C1C(v17);
    unint64_t v18 = sub_620A0(v9);
    swift_bridgeObjectRelease();
    sub_66BDC(v9);
    uint64_t v23 = (uint64_t)v18;
    uint64_t v29 = v6;
    uint64_t v30 = v5;
    sub_371F4(&qword_3FF328);
    sub_44924((unint64_t *)&unk_404000, &qword_3FF328);
    sub_66C5C();
    sub_2FC680();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_12;
    }
    uint64_t v23 = v9;
    uint64_t v24 = v11;
    uint64_t v25 = v10;
    v19.columns._rawCFDictionaryRef Value = &v23;
    v19.configuration._uint64_t countAndFlagsBits = -1;
    BookPaginationEntity.spread(_:offsetBy:)(v19, v20);
    unint64_t result = sub_66BDC(v9);
    uint64_t v16 = v29;
    if (v29)
    {
      uint64_t v23 = v29;
      uint64_t v24 = v30;
      uint64_t v25 = v31;
      SpreadPaginationEntity.lastLocation.getter(a3);
      return sub_66BDC(v16);
    }
LABEL_11:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 1;
    return result;
  }
  if (a2 != 1)
  {
    if (a2)
    {
      unint64_t result = sub_2FD010();
      __break(1u);
      return result;
    }
    unint64_t result = sub_66BDC(v29);
    *(void *)a3 = v6;
    *(void *)(a3 + 8) = v5;
    goto LABEL_15;
  }
  sub_66C1C(v29);
  uint64_t v12 = swift_bridgeObjectRetain();
  unint64_t v13 = sub_620A0(v12);
  swift_bridgeObjectRelease();
  sub_66BDC(v9);
  uint64_t v23 = (uint64_t)v13;
  uint64_t v29 = v6;
  uint64_t v30 = v5;
  sub_371F4(&qword_3FF328);
  sub_44924((unint64_t *)&unk_404000, &qword_3FF328);
  sub_66C5C();
  sub_2FC680();
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
  {
LABEL_12:
    uint64_t v22 = v26;
    uint64_t v21 = v27;
    unint64_t result = sub_66BDC(v9);
    *(void *)a3 = v22;
    *(void *)(a3 + 8) = v21;
LABEL_15:
    *(unsigned char *)(a3 + 16) = 0;
    return result;
  }
  uint64_t v23 = v9;
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  v14.columns._rawCFDictionaryRef Value = &v23;
  v14.configuration._uint64_t countAndFlagsBits = 1;
  BookPaginationEntity.spread(_:offsetBy:)(v14, v15);
  unint64_t result = sub_66BDC(v9);
  uint64_t v16 = v29;
  if (v29)
  {
    uint64_t v23 = v29;
    uint64_t v24 = v30;
    uint64_t v25 = v31;
    SpreadPaginationEntity.firstLocation.getter(a3);
    return sub_66BDC(v16);
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_64FF4()
{
  sub_371F4(&qword_3FF258);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_32CAD0;
  sub_66A64(v0, (uint64_t)v7, &qword_3FF248);
  sub_66A64((uint64_t)v7, (uint64_t)v8, &qword_3FF248);
  uint64_t v2 = v8[1];
  if (!v8[0]) {
    uint64_t v2 = 0;
  }
  *(void *)(v1 + 32) = v8[0];
  *(void *)(v1 + 40) = v2;
  sub_66A64(v0 + 24, (uint64_t)v6, &qword_3FF250);
  sub_66A64((uint64_t)v6, v1 + 48, &qword_3FF250);
  sub_66A64(v0 + 40, (uint64_t)v5, &qword_3FF250);
  sub_66A64((uint64_t)v5, v1 + 64, &qword_3FF250);
  sub_668A8((uint64_t)v7);
  sub_668A8((uint64_t)v6);
  sub_668A8((uint64_t)v5);
  sub_371F4(&qword_3FF260);
  sub_371F4(&qword_3FF268);
  sub_44924(&qword_3FF270, &qword_3FF260);
  uint64_t v3 = sub_2FC340();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_6515C@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[1];
  long long v8 = *v1;
  long long v9 = v3;
  long long v10 = v1[2];
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v4 = sub_64FF4();
  uint64_t v6 = v5;
  sub_66A64((uint64_t)&v8, (uint64_t)v12, &qword_3FF248);
  sub_6687C((uint64_t)v12);
  sub_66A64((uint64_t)&v9 + 8, (uint64_t)v13, &qword_3FF250);
  sub_6687C((uint64_t)v13);
  sub_66A64((uint64_t)&v10 + 8, (uint64_t)v14, &qword_3FF250);
  uint64_t result = sub_6687C((uint64_t)v14);
  *a1 = v4;
  a1[1] = v6;
  return result;
}

uint64_t sub_65218()
{
  return 2;
}

uint64_t sub_65220()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  long long v6 = v0[2];
  uint64_t v7 = *((void *)v0 + 6);
  uint64_t v2 = sub_65334((uint64_t)&v4);
  sub_66A64((uint64_t)&v4, (uint64_t)v8, &qword_3FF248);
  sub_6687C((uint64_t)v8);
  sub_66A64((uint64_t)&v5 + 8, (uint64_t)v9, &qword_3FF250);
  sub_6687C((uint64_t)v9);
  sub_66A64((uint64_t)&v6 + 8, (uint64_t)v10, &qword_3FF250);
  sub_6687C((uint64_t)v10);
  return v2;
}

uint64_t sub_652CC(uint64_t *a1, _OWORD *a2, unint64_t a3)
{
  return sub_65564(a1, a2, a3);
}

uint64_t sub_65310()
{
  return sub_2FC350();
}

uint64_t sub_65334(uint64_t a1)
{
  sub_66A64(a1, (uint64_t)v30, &qword_3FF248);
  sub_66A64(a1 + 24, (uint64_t)v29, &qword_3FF250);
  sub_66A64(a1 + 40, (uint64_t)v28, &qword_3FF250);
  sub_668A8((uint64_t)v30);
  sub_668A8((uint64_t)v29);
  sub_668A8((uint64_t)v28);
  uint64_t v2 = sub_64FF4();
  uint64_t v4 = v3;
  sub_6687C((uint64_t)v30);
  sub_6687C((uint64_t)v29);
  uint64_t result = sub_6687C((uint64_t)v28);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  uint64_t v8 = v6 - v4;
  if (v6 == v4)
  {
    uint64_t v9 = 0;
LABEL_28:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v24 = v7[3];
    if (v24 < 2) {
      return (uint64_t)v7;
    }
    unint64_t v25 = v24 >> 1;
    BOOL v12 = __OFSUB__(v25, v9);
    uint64_t v26 = v25 - v9;
    if (!v12)
    {
      v7[2] = v26;
      return (uint64_t)v7;
    }
  }
  else
  {
    if (v6 <= v4) {
      goto LABEL_34;
    }
    if (v4 < 0)
    {
LABEL_35:
      __break(1u);
    }
    else if (v6)
    {
      uint64_t v9 = 0;
      long long v10 = (long long *)(v2 + 16 * v4 + 32);
      uint64_t v11 = &_swiftEmptyArrayStorage[4];
      while (1)
      {
        long long v27 = *v10;
        if (v9)
        {
          uint64_t result = swift_unknownObjectRetain();
          BOOL v12 = __OFSUB__(v9--, 1);
          if (v12) {
            goto LABEL_32;
          }
        }
        else
        {
          unint64_t v13 = v7[3];
          if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_33;
          }
          int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
          if (v14 <= 1) {
            uint64_t v15 = 1;
          }
          else {
            uint64_t v15 = v14;
          }
          sub_371F4(&qword_3FF278);
          uint64_t v16 = (void *)swift_allocObject();
          int64_t v17 = j__malloc_size(v16);
          uint64_t v18 = v17 - 32;
          if (v17 < 32) {
            uint64_t v18 = v17 - 17;
          }
          uint64_t v19 = v18 >> 4;
          _OWORD v16[2] = v15;
          v16[3] = 2 * (v18 >> 4);
          Swift::Int v20 = v16 + 4;
          uint64_t v21 = v7[3] >> 1;
          uint64_t v11 = &v16[2 * v21 + 4];
          uint64_t v22 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - v21;
          if (v7[2])
          {
            if (v16 != v7 || v20 >= &v7[2 * v21 + 4]) {
              memmove(v20, v7 + 4, 16 * v21);
            }
            swift_unknownObjectRetain();
            v7[2] = 0;
          }
          else
          {
            swift_unknownObjectRetain();
          }
          uint64_t result = swift_release();
          uint64_t v7 = v16;
          BOOL v12 = __OFSUB__(v22, 1);
          uint64_t v9 = v22 - 1;
          if (v12)
          {
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
        }
        *v11++ = v27;
        ++v10;
        if (!--v8) {
          goto LABEL_28;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_65564(uint64_t *a1, _OWORD *a2, unint64_t a3)
{
  uint64_t v7 = sub_64FF4();
  unint64_t v9 = v8;
  sub_66A64(v3, (uint64_t)v18, &qword_3FF248);
  sub_6687C((uint64_t)v18);
  sub_66A64(v3 + 24, (uint64_t)v17, &qword_3FF250);
  sub_6687C((uint64_t)v17);
  sub_66A64(v3 + 40, (uint64_t)v16, &qword_3FF250);
  uint64_t result = sub_6687C((uint64_t)v16);
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_17:
    *a1 = v7;
    a1[1] = v9;
    return a3;
  }
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  if (v11 == v9)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_17;
  }
  if (v11 > v9)
  {
    uint64_t v12 = v9 + 1;
    long long v13 = *(_OWORD *)(v7 + 16 * v9 + 32);
    *a2 = v13;
    uint64_t result = v13;
    if (a3 == 1)
    {
LABEL_16:
      swift_unknownObjectRetain();
      unint64_t v9 = v12;
      goto LABEL_17;
    }
    if (v12 == v11)
    {
      uint64_t v12 = v11;
      a3 = v11 - v9;
      goto LABEL_16;
    }
    uint64_t v14 = 0;
    uint64_t v15 = a2 + 1;
    while (v9 + v14 + 1 < *(void *)(v7 + 16))
    {
      v15[v14] = *(_OWORD *)(v7 + 16 * v9 + 48 + 16 * v14);
      if (a3 - 2 == v14)
      {
        swift_unknownObjectRetain();
        uint64_t v12 = v9 + v14 + 2;
        goto LABEL_16;
      }
      uint64_t result = swift_unknownObjectRetain();
      ++v14;
      if (!(v9 - v11 + 1 + v14))
      {
        uint64_t v12 = v11;
        a3 = v11 - v9;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_65708(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v8 = v3[4];
  if (!a2)
  {
    uint64_t v9 = 0;
    *(void *)uint64_t result = v5;
    *(void *)(result + 8) = v4;
    *(void *)(result + 16) = v7;
    *(void *)(result + 24) = v6;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 32) = v8;
    return v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    uint64_t v25 = 0;
    unint64_t v24 = 0;
    goto LABEL_23;
  }
  if (a3 < 0) {
    goto LABEL_53;
  }
  unint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = v7 - 1;
  BOOL v12 = __OFSUB__(v7, 1);
  uint64_t v42 = v3[3];
  uint64_t v43 = v3[4];
  uint64_t v40 = (void *)result;
  uint64_t v41 = v3[1];
  if (!v10)
  {
    uint64_t result = 0;
LABEL_25:
    *uint64_t v40 = v5;
    v40[1] = v41;
    v40[2] = v7;
    v40[3] = v42;
    v40[4] = v43;
    v40[5] = result;
    uint64_t v9 = result;
    v40[6] = v10;
    return v9;
  }
  if (v12) {
    goto LABEL_54;
  }
  uint64_t v13 = v5 + 24 * v10;
  uint64_t v47 = (void *)(v13 + 16);
  uint64_t v48 = (void *)(v13 + 24);
  uint64_t v14 = *(void *)(v13 + 24);
  BOOL v15 = __OFADD__(*v47, v14);
  uint64_t v16 = *v47 + v14;
  if (v15)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  BOOL v15 = __OFADD__(v11, v16);
  uint64_t v17 = v11 + v16;
  if (v15)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  BOOL v15 = __OFADD__(v17, v7);
  uint64_t v18 = v17 + v7;
  if (v15)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  BOOL v15 = __OFSUB__(v18, 1);
  uint64_t v19 = v18 - 1;
  if (v15)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v7)
  {
    if (v19 == 0x8000000000000000 && v7 == -1)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    sub_164374(0, 0, &v49);
    uint64_t result = 1;
    if (!__OFSUB__(v7, v11))
    {
      uint64_t v23 = v49;
      uint64_t v22 = v50;
      uint64_t v45 = v51;
      unint64_t v24 = sub_16550C(1, 0, v5);
      *a2 = v23;
      a2[1] = v22;
      a2[2] = v45;
      if (v9 == 1)
      {
        uint64_t v25 = 1;
        uint64_t v6 = v42;
        uint64_t v8 = v43;
        uint64_t result = (uint64_t)v40;
        uint64_t v4 = v41;
LABEL_23:
        *(void *)uint64_t result = v5;
        *(void *)(result + 8) = v4;
        *(void *)(result + 16) = v7;
        *(void *)(result + 24) = v6;
        *(void *)(result + 32) = v8;
        *(void *)(result + 40) = v25;
        *(void *)(result + 48) = v24;
        return v9;
      }
      uint64_t v44 = v7 - 1;
      uint64_t v46 = v7;
      uint64_t v26 = a2 + 5;
      uint64_t result = 1;
      while (v10 <= *(void *)(v5 + 16))
      {
        uint64_t v27 = *v47 + *v48;
        uint64_t v7 = v46;
        if (__OFADD__(*v47, *v48)) {
          goto LABEL_45;
        }
        BOOL v15 = __OFADD__(v44, v27);
        uint64_t v28 = v44 + v27;
        if (v15) {
          goto LABEL_46;
        }
        BOOL v15 = __OFADD__(v28, v46);
        uint64_t v29 = v28 + v46;
        if (v15) {
          goto LABEL_47;
        }
        BOOL v15 = __OFSUB__(v29, 1);
        uint64_t v30 = v29 - 1;
        if (v15) {
          goto LABEL_48;
        }
        if (v30 == 0x8000000000000000 && v46 == -1) {
          goto LABEL_52;
        }
        if (result == v30 / v46 && v24 == v10) {
          goto LABEL_25;
        }
        uint64_t v33 = result + 1;
        uint64_t result = sub_164374(result, v24, &v49);
        uint64_t v34 = v33 * v46;
        if ((unsigned __int128)(v33 * (__int128)v46) >> 64 != (v33 * v46) >> 63) {
          goto LABEL_51;
        }
        uint64_t result = v34 - v44;
        if (__OFSUB__(v34, v44)) {
          goto LABEL_49;
        }
        unint64_t v35 = v10;
        uint64_t v36 = v9;
        uint64_t v37 = v49;
        uint64_t v38 = v50;
        uint64_t v39 = v51;
        unint64_t v24 = sub_16550C(result, v24, v5);
        *(v26 - 2) = v37;
        *(v26 - 1) = v38;
        uint64_t v9 = v36;
        unint64_t v10 = v35;
        *uint64_t v26 = v39;
        v26 += 3;
        uint64_t result = v33;
        if (v9 == v33)
        {
          uint64_t v25 = v9;
          uint64_t v6 = v42;
          uint64_t v8 = v43;
          uint64_t result = (uint64_t)v40;
          uint64_t v4 = v41;
          uint64_t v7 = v46;
          goto LABEL_23;
        }
      }
      goto LABEL_50;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_65998(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    void *v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_65B94(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    void *v11 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
    v11[1] = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_65D9C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    long long v13 = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v12);
    *(void *)a2 = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    *(_OWORD *)(a2 + 8) = v13;
    a2 += 24;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v14 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v10) {
    goto LABEL_30;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v14);
  if (v15) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v14 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v14;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v8);
  if (v15)
  {
LABEL_15:
    int64_t v14 = v8;
LABEL_19:
    unint64_t v17 = __clz(__rbit64(v15));
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = v17 + (v14 << 6);
    int64_t v8 = v14;
    goto LABEL_8;
  }
  int64_t v16 = v14 + 2;
  if (v14 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_18:
    int64_t v14 = v16;
    goto LABEL_19;
  }
  int64_t v8 = v14 + 3;
  if (v14 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v14 + 2;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v8);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v14 + 4;
  if (v14 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v14 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_65F40(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_660D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7)
{
  uint64_t v26 = a1;
  uint64_t v23 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a2 + 56);
  int64_t v24 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = a6 & 0x101;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v17 << 6);
LABEL_5:
    uint64_t v25 = *(void *)(*(void *)(a2 + 48) + 8 * v19);
    sub_636B4((uint64_t)&v26, &v25, a3, a4, a5, v16, a7);
    if (v7)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v17 >= v24) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v17);
  if (v21)
  {
LABEL_19:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_5;
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v24) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_18;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v24) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_18;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v24) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_18;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v24)
  {
LABEL_25:
    swift_release();
    return;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21)
  {
LABEL_18:
    int64_t v17 = v22;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v24) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_19;
    }
  }
LABEL_27:
  __break(1u);
}

void *sub_662D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  a9[3] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  a9[6] = 0;
  swift_unknownObjectWeakInit();
  a9[8] = 0;
  swift_unknownObjectWeakInit();
  a9[10] = 0;
  swift_unknownObjectWeakInit();
  a9[11] = &_swiftEmptySetSingleton;
  a9[13] = sub_44050((uint64_t)_swiftEmptyArrayStorage);
  a9[3] = a2;
  swift_unknownObjectWeakAssign();
  swift_weakAssign();
  a9[6] = a11;
  swift_unknownObjectWeakAssign();
  a9[8] = a6;
  swift_unknownObjectWeakAssign();
  a9[10] = a8;
  swift_unknownObjectWeakAssign();
  a9[12] = sub_43F4C((uint64_t)_swiftEmptyArrayStorage);
  sub_62388();
  return a9;
}

void *sub_6641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  type metadata accessor for BookContentAccessoryController();
  unint64_t v21 = (void *)swift_allocObject();

  return sub_662D4(a1, a2, a3, a4, a5, a6, a7, a8, v21, a10, a11);
}

uint64_t sub_664C4(uint64_t result)
{
  if (result != 1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for BookContentAccessoryController()
{
  return self;
}

uint64_t method lookup function for BookContentAccessoryController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookContentAccessoryController);
}

uint64_t dispatch thunk of BookContentAccessoryController.__allocating_init(currentLocationProvider:contentLayoutController:paginatingService:accessoryAdornmentFactory:selectionHighlightController:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of BookContentAccessoryController.highlightsController(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t destroy for BookContentAccessoryController.ControllerSet()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for BookContentAccessoryController.ControllerSet(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BookContentAccessoryController.ControllerSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectRetain();
  long long v8 = *(_OWORD *)(a2 + 8);
  *(void *)a1 = v4;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = v8;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v6;
  return a1;
}

__n128 initializeWithTake for BookThemeEntity.Overrides(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BookContentAccessoryController.ControllerSet(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentAccessoryController.ControllerSet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookContentAccessoryController.ControllerSet(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookContentAccessoryController.ControllerSet()
{
  return &type metadata for BookContentAccessoryController.ControllerSet;
}

ValueMetadata *type metadata accessor for BookContentAccessoryController.State()
{
  return &type metadata for BookContentAccessoryController.State;
}

uint64_t sub_66840()
{
  return sub_44924(&qword_3FF238, &qword_3FF240);
}

uint64_t sub_6687C(uint64_t a1)
{
  return a1;
}

uint64_t sub_668A8(uint64_t a1)
{
  return a1;
}

unint64_t sub_668D4()
{
  unint64_t result = qword_401700;
  if (!qword_401700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_401700);
  }
  return result;
}

uint64_t sub_66914()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6694C(uint64_t a1, uint64_t *a2, char a3, char a4)
{
  return sub_63088(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_66954()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6698C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v2 + 16))(a1, a1 + 40, *(unsigned __int8 *)(a1 + 56), *(unsigned __int8 *)(a1 + 57));
  *a2 = result;
  return result;
}

uint64_t sub_669C8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_66A00(uint64_t *a1)
{
  return sub_63A3C(a1);
}

uint64_t sub_66A08(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_66A64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_371F4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_66AC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_66B1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_66B64(uint64_t a1)
{
  return a1;
}

uint64_t sub_66BB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_66BDC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_66C1C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_66C5C()
{
  unint64_t result = qword_3FF330;
  if (!qword_3FF330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FF330);
  }
  return result;
}

uint64_t Color.init(hex:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2FBF30();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2FB230();
  uint64_t v45 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  sub_2FB200();
  sub_67684();
  uint64_t v10 = sub_2FCCA0();
  unint64_t v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_67A3C(1uLL, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_2FC210();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v48 = v14;
  uint64_t v49 = v16;
  sub_2FB200();
  uint64_t v17 = sub_2FCCA0();
  unint64_t v19 = v18;
  v13(v9, v45);
  swift_bridgeObjectRelease();
  uint64_t v48 = v10;
  uint64_t v49 = v12;
  uint64_t v46 = 35;
  unint64_t v47 = 0xE100000000000000;
  sub_67AEC();
  sub_67B40();
  if (sub_2FC0E0())
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = v10;
    unint64_t v19 = v12;
  }
  uint64_t v21 = HIBYTE(v19) & 0xF;
  uint64_t v22 = v17 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v23 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
LABEL_53:
    uint64_t v48 = v17;
    uint64_t v49 = v19;
    sub_2FC320();
    sub_2FC240();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for Color.RGBColorSpace.sRGB(_:), v44);
    return sub_2FBF70();
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v25 = (unint64_t)sub_676D8(v17, v19, 16);
    char v40 = v39;
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0) {
      goto LABEL_52;
    }
    goto LABEL_53;
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((v17 & 0x1000000000000000) == 0) {
      goto LABEL_57;
    }
    for (int64_t i = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32); ; int64_t i = (unsigned __int8 *)sub_2FCE40())
    {
      unint64_t v25 = (unint64_t)sub_677C0(i, v22, 16);
      if (v26) {
        break;
      }
LABEL_52:
      if ((v25 & 0x8000000000000000) == 0) {
        goto LABEL_53;
      }
      __break(1u);
LABEL_57:
      ;
    }
    goto LABEL_53;
  }
  uint64_t v48 = v17;
  uint64_t v49 = v19 & 0xFFFFFFFFFFFFFFLL;
  if (v17 == 43)
  {
    if (v21)
    {
      uint64_t v32 = v21 - 1;
      if (v32)
      {
        unint64_t v25 = 0;
        uint64_t v33 = (unsigned __int8 *)&v48 + 1;
        while (1)
        {
          int v34 = *v33;
          unsigned __int8 v35 = v34 - 48;
          if ((v34 - 48) >= 0xA)
          {
            if ((v34 - 65) < 6)
            {
              unsigned __int8 v35 = v34 - 55;
            }
            else
            {
              if ((v34 - 97) > 5) {
                goto LABEL_53;
              }
              unsigned __int8 v35 = v34 - 87;
            }
          }
          if (v25 >> 60) {
            break;
          }
          unint64_t v25 = 16 * v25 + v35;
          ++v33;
          if (!--v32) {
            goto LABEL_52;
          }
        }
      }
      goto LABEL_53;
    }
  }
  else
  {
    if (v17 != 45)
    {
      if (v21)
      {
        unint64_t v25 = 0;
        uint64_t v36 = &v48;
        while (1)
        {
          int v37 = *(unsigned __int8 *)v36;
          unsigned __int8 v38 = v37 - 48;
          if ((v37 - 48) >= 0xA)
          {
            if ((v37 - 65) < 6)
            {
              unsigned __int8 v38 = v37 - 55;
            }
            else
            {
              if ((v37 - 97) > 5) {
                goto LABEL_53;
              }
              unsigned __int8 v38 = v37 - 87;
            }
          }
          if (v25 >> 60) {
            break;
          }
          unint64_t v25 = 16 * v25 + v38;
          uint64_t v36 = (uint64_t *)((char *)v36 + 1);
          if (!--v21) {
            goto LABEL_52;
          }
        }
      }
      goto LABEL_53;
    }
    if (v21)
    {
      uint64_t v27 = v21 - 1;
      if (v27)
      {
        unint64_t v25 = 0;
        uint64_t v28 = (unsigned __int8 *)&v48 + 1;
        while (1)
        {
          int v29 = *v28;
          unsigned __int8 v30 = v29 - 48;
          if ((v29 - 48) >= 0xA)
          {
            if ((v29 - 65) < 6)
            {
              unsigned __int8 v30 = v29 - 55;
            }
            else
            {
              if ((v29 - 97) > 5) {
                goto LABEL_53;
              }
              unsigned __int8 v30 = v29 - 87;
            }
          }
          if (v25 >> 60) {
            break;
          }
          BOOL v31 = 16 * v25 >= v30;
          unint64_t v25 = 16 * v25 - v30;
          if (!v31) {
            break;
          }
          ++v28;
          if (!--v27) {
            goto LABEL_52;
          }
        }
      }
      goto LABEL_53;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall Color.toHex()()
{
  sub_67B94();
  swift_retain();
  uint64_t v0 = (void *)sub_2FCA40();
  id v1 = [v0 CGColor];
  uint64_t v2 = sub_2FC760();

  if (!v2) {
    goto LABEL_4;
  }
  unint64_t v3 = *(void *)(v2 + 16);
  if (v3 >= 3)
  {
    float v6 = *(double *)(v2 + 32);
    float v7 = *(double *)(v2 + 40);
    float v8 = *(double *)(v2 + 48);
    if (v3 == 3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      double v9 = *(double *)(v2 + 56);
      swift_bridgeObjectRelease();
      float v10 = v9;
      if (v10 != 1.0)
      {
        sub_371F4(&qword_3FE718);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_32CAC0;
        uint64_t v16 = lroundf(v6 * 255.0);
        *(void *)(v15 + 56) = &type metadata for Int;
        *(void *)(v15 + 64) = &protocol witness table for Int;
        *(void *)(v15 + 32) = v16;
        uint64_t v17 = lroundf(v7 * 255.0);
        *(void *)(v15 + 96) = &type metadata for Int;
        *(void *)(v15 + 104) = &protocol witness table for Int;
        *(void *)(v15 + 72) = v17;
        uint64_t v18 = lroundf(v8 * 255.0);
        *(void *)(v15 + 136) = &type metadata for Int;
        *(void *)(v15 + 144) = &protocol witness table for Int;
        *(void *)(v15 + 112) = v18;
        uint64_t v19 = lroundf(v10 * 255.0);
        *(void *)(v15 + 176) = &type metadata for Int;
        *(void *)(v15 + 184) = &protocol witness table for Int;
        *(void *)(v15 + 152) = v19;
        goto LABEL_10;
      }
    }
    sub_371F4(&qword_3FE718);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_32CAD0;
    uint64_t v12 = lroundf(v6 * 255.0);
    *(void *)(v11 + 56) = &type metadata for Int;
    *(void *)(v11 + 64) = &protocol witness table for Int;
    *(void *)(v11 + 32) = v12;
    uint64_t v13 = lroundf(v7 * 255.0);
    *(void *)(v11 + 96) = &type metadata for Int;
    *(void *)(v11 + 104) = &protocol witness table for Int;
    *(void *)(v11 + 72) = v13;
    uint64_t v14 = lroundf(v8 * 255.0);
    *(void *)(v11 + 136) = &type metadata for Int;
    *(void *)(v11 + 144) = &protocol witness table for Int;
    *(void *)(v11 + 112) = v14;
LABEL_10:
    uint64_t v4 = sub_2FC1B0();
    unint64_t v5 = v20;

    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_4:

  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
LABEL_11:
  uint64_t v21 = v4;
  uint64_t v22 = (void *)v5;
  result._object = v22;
  result._uint64_t countAndFlagsBits = v21;
  return result;
}

uint64_t Color.init(r:g:b:alpha:)()
{
  uint64_t v0 = sub_2FBF30();
  __n128 v1 = __chkstk_darwin(v0);
  (*(void (**)(char *, void, __n128))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:), v1);
  return sub_2FBF70();
}

uint64_t Color.init(rgbaHex:)()
{
  uint64_t v0 = sub_2FBF30();
  __chkstk_darwin(v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:));
  return sub_2FBF70();
}

unint64_t sub_67684()
{
  unint64_t result = qword_401390;
  if (!qword_401390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_401390);
  }
  return result;
}

unsigned __int8 *sub_676D8(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2FC320();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    float v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_4ED48();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    float v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    float v7 = (unsigned __int8 *)sub_2FCE40();
  }
LABEL_7:
  uint64_t v11 = sub_677C0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_677C0(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

unint64_t sub_67A3C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_2FC250();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_2FC330();
}

unint64_t sub_67AEC()
{
  unint64_t result = qword_3FF338;
  if (!qword_3FF338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FF338);
  }
  return result;
}

unint64_t sub_67B40()
{
  unint64_t result = qword_3FF340;
  if (!qword_3FF340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FF340);
  }
  return result;
}

unint64_t sub_67B94()
{
  unint64_t result = qword_3FF348;
  if (!qword_3FF348)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3FF348);
  }
  return result;
}

uint64_t sub_67BD4(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2FD030();
  unint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    Swift::Int v7 = v6;
  }
  else {
    Swift::Int v7 = 0;
  }
  if (v5 < v7)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2FD030();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  }
  if (v8 < v7) {
    goto LABEL_34;
  }
  if (v7 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2FD030();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  }
  if (v9 < v5) {
    goto LABEL_36;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      type metadata accessor for DocumentPaginationEntity();
      Swift::Int v10 = v7;
      do
      {
        Swift::Int v11 = v10 + 1;
        sub_2FCE10(v10);
        Swift::Int v10 = v11;
      }
      while (v5 != v11);
      goto LABEL_27;
    }
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_27:
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2FD040();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t ElementPaginationEntity.uniqueIdentifier.getter()
{
  uint64_t v0 = sub_690E8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t ElementPaginationEntity.rects.getter()
{
  PaginationLayoutConfiguration.layoutMode.getter();

  return swift_bridgeObjectRetain();
}

void sub_67E04()
{
}

uint64_t sub_67E60()
{
  sub_690B4();

  return swift_bridgeObjectRetain();
}

uint64_t sub_67E88(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void *ElementPaginationEntity.__allocating_init(uniqueIdentifier:rects:pageOffsets:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *ElementPaginationEntity.init(uniqueIdentifier:rects:pageOffsets:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_67F34@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (double *)swift_bridgeObjectRetain();
  sub_52F6C(v2, (uint64_t)&v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(void *)a1 = v4;
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
  }
  return result;
}

uint64_t sub_67F9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000000030D590 || (sub_2FD1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7374636572 && a2 == 0xE500000000000000 || (sub_2FD1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7366664F65676170 && a2 == 0xEB00000000737465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_68100(char a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  if (a1 == 1) {
    return 0x7374636572;
  }
  return 0x7366664F65676170;
}

BOOL sub_68160(char *a1, char *a2)
{
  return static AnnotationEventType.== infix(_:_:)(*a1, *a2);
}

Swift::Int sub_6816C()
{
  return AnnotationEventType.hashValue.getter(*v0);
}

void sub_68174(uint64_t a1)
{
  AnnotationEventType.hash(into:)(a1, *v1);
}

Swift::Int sub_6817C()
{
  sub_2FD320();
  AnnotationEventType.hash(into:)((uint64_t)v2, *v0);
  return sub_2FD370();
}

uint64_t sub_681BC()
{
  return sub_68100(*v0);
}

uint64_t sub_681C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_67F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_681EC()
{
  return 0;
}

uint64_t sub_681F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_69708();
  *a1 = result;
  return result;
}

uint64_t sub_68224(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_68278(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void *ElementPaginationEntity.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for ElementPaginationEntity.CodingKeys();
  swift_getWitnessTable();
  uint64_t v17 = sub_2FD100();
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v7 = (char *)&v15 - v6;
  uint64_t v8 = sub_4F798(a1, a1[3]);
  sub_2FD380();
  if (!v2)
  {
    uint64_t v9 = v5;
    LOBYTE(v19) = 0;
    uint64_t v10 = v17;
    uint64_t v11 = sub_2FD0C0();
    uint64_t v13 = v12;
    sub_371F4(&qword_3FF350);
    char v18 = 1;
    sub_691F4(&qword_3FF358, (unint64_t *)&unk_3FF360);
    sub_2FD0F0();
    uint64_t v16 = v19;
    sub_371F4(&qword_3FF390);
    char v18 = 2;
    sub_69338(&qword_3FF398);
    sub_2FD0F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v10);
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 144))(v11, v13, v16, v19);
  }
  sub_39FCC((uint64_t)a1);
  return v8;
}

uint64_t sub_685EC(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for ElementPaginationEntity.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_2FD160();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v10 - v6;
  sub_4F798(a1, a1[3]);
  sub_2FD390();
  LOBYTE(v12) = 0;
  uint64_t v8 = v10[1];
  sub_2FD120();
  if (!v8)
  {
    uint64_t v12 = *(void *)(v2 + 32);
    LOBYTE(v13) = 1;
    sub_371F4(&qword_3FF350);
    sub_691F4(&qword_3FF3A0, &qword_3FF3A8);
    sub_2FD150();
    swift_beginAccess();
    uint64_t v13 = *(void *)(v2 + 40);
    char v11 = 2;
    sub_371F4(&qword_3FF390);
    sub_69338(qword_3FF3B0);
    sub_2FD150();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ElementPaginationEntity.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ElementPaginationEntity.__deallocating_deinit()
{
  ElementPaginationEntity.deinit();

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t dispatch thunk of ElementPaginationEntity.entityType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

void *sub_688F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = ElementPaginationEntity.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_68924(void *a1)
{
  return sub_685EC(a1);
}

uint64_t ElementPaginationEntity.description.getter()
{
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_2FCDD0(109);
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 15370;
  v10._object = (void *)0xE200000000000000;
  sub_2FC260(v10);
  v11._uint64_t countAndFlagsBits = sub_2FD3E0();
  sub_2FC260(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0xD000000000000019;
  v12._object = (void *)0x800000000030D510;
  sub_2FC260(v12);
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = v1;
  v13._object = v2;
  sub_2FC260(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0x636572202020200ALL;
  v14._object = (void *)0xED0000203D207374;
  sub_2FC260(v14);
  swift_bridgeObjectRetain();
  sub_371F4(&qword_3FEC20);
  v15._uint64_t countAndFlagsBits = sub_2FC400();
  sub_2FC260(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0xD000000000000014;
  v16._object = (void *)0x800000000030D530;
  sub_2FC260(v16);
  sub_67F34((uint64_t)v9);
  v17._uint64_t countAndFlagsBits = sub_68C9C();
  sub_2FC260(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x800000000030D550;
  sub_2FC260(v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = sub_2FC600();
  sub_2FC260(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20._object = (void *)0x800000000030D570;
  v20._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_2FC260(v20);
  (*(void (**)(char *__return_ptr))(*v0 + 112))(&v6);
  uint64_t v3 = (void *)0xE600000000000000;
  v4._uint64_t countAndFlagsBits = 0x726F68636E61;
  switch(v6)
  {
    case 1:
      uint64_t v3 = (void *)0xE800000000000000;
      v4._uint64_t countAndFlagsBits = 0x6B72616D6B6F6F62;
      break;
    case 2:
      uint64_t v3 = (void *)0xEA0000000000656CLL;
      v4._uint64_t countAndFlagsBits = 0x6261646E61707865;
      break;
    case 3:
      uint64_t v3 = (void *)0xE900000000000074;
      v4._uint64_t countAndFlagsBits = 0x6867696C68676968;
      break;
    case 4:
      uint64_t v3 = (void *)0xE500000000000000;
      v4._uint64_t countAndFlagsBits = 0x616964656DLL;
      break;
    case 5:
      uint64_t v3 = (void *)0xE700000000000000;
      v4._uint64_t countAndFlagsBits = 0x79726F74736968;
      break;
    default:
      break;
  }
  v4._object = v3;
  sub_2FC260(v4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_68C78()
{
  return ElementPaginationEntity.description.getter();
}

uint64_t sub_68C9C()
{
  sub_2FCDD0(34);
  v1._object = (void *)0x800000000030D5C0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_2FC260(v1);
  sub_2FCFA0();
  v2._uint64_t countAndFlagsBits = 0x3A65756C6176202CLL;
  v2._object = (void *)0xE900000000000020;
  sub_2FC260(v2);
  type metadata accessor for CGRect(0);
  sub_2FCFA0();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  sub_2FC260(v3);
  return 0;
}

uint64_t sub_68D9C()
{
  sub_2FCDD0(34);
  v1._object = (void *)0x800000000030D5C0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_2FC260(v1);
  sub_371F4(&qword_3FF4B8);
  sub_2FCFA0();
  v2._uint64_t countAndFlagsBits = 0x3A65756C6176202CLL;
  v2._object = (void *)0xE900000000000020;
  sub_2FC260(v2);
  type metadata accessor for CGRect(0);
  sub_2FCFA0();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  sub_2FC260(v3);
  return 0;
}

uint64_t sub_68EA4()
{
  sub_2FCDD0(34);
  v1._object = (void *)0x800000000030D5C0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_2FC260(v1);
  sub_2FCFA0();
  v2._uint64_t countAndFlagsBits = 0x3A65756C6176202CLL;
  v2._object = (void *)0xE900000000000020;
  sub_2FC260(v2);
  type metadata accessor for CGPoint(0);
  sub_2FCFA0();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  sub_2FC260(v3);
  return 0;
}

uint64_t sub_68FA8()
{
  sub_2FCDD0(34);
  v1._object = (void *)0x800000000030D5C0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_2FC260(v1);
  sub_371F4(&qword_3FF4B8);
  sub_2FCFA0();
  v2._uint64_t countAndFlagsBits = 0x3A65756C6176202CLL;
  v2._object = (void *)0xE900000000000020;
  sub_2FC260(v2);
  type metadata accessor for CGPoint(0);
  sub_2FCFA0();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  sub_2FC260(v3);
  return 0;
}

uint64_t sub_690B4()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_690E8()
{
  return *(void *)(v0 + 16);
}

uint64_t type metadata accessor for ElementPaginationEntity.CodingKeys()
{
  return sub_46A94();
}

unint64_t sub_69108()
{
  unint64_t result = qword_3FF370;
  if (!qword_3FF370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FF370);
  }
  return result;
}

unint64_t sub_6915C()
{
  unint64_t result = qword_3FF378;
  if (!qword_3FF378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3FF378);
  }
  return result;
}

uint64_t sub_691B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_691F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_37294(&qword_3FF350);
    sub_69274(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_69274(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_37294(&qword_3FEC20);
    sub_69108();
    sub_6915C();
    sub_691B0(&qword_3FF380);
    sub_691B0(&qword_3FF388);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_69338(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_37294(&qword_3FF390);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6939C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_693FC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_690B4();

  return swift_bridgeObjectRetain();
}

uint64_t sub_69438()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_67E88(v0);
}

uint64_t sub_69464()
{
  return 8;
}

void *sub_69470(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_69480()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ElementPaginationEntity()
{
  return sub_46A94();
}

uint64_t method lookup function for ElementPaginationEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ElementPaginationEntity);
}

uint64_t dispatch thunk of ElementPaginationEntity.pageOffsets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ElementPaginationEntity.__allocating_init(uniqueIdentifier:rects:pageOffsets:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ElementPaginationEntity.boundingRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ElementPaginationEntity.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ElementPaginationEntity.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

unsigned char *sub_695C0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x6968CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_696B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_696D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_696EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_69708()
{
  return 3;
}

void sub_69710(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

unint64_t HighlightPaginationEntity.debugDescription.getter()
{
  sub_2FCDD0(35);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  Swift::String v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v1;
  v5._object = v2;
  sub_2FC260(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x636572202020200ALL;
  v6._object = (void *)0xEB000000003A7374;
  sub_2FC260(v6);
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_52E08(v3);
  swift_bridgeObjectRelease();
  type metadata accessor for CGRect(0);
  v7._uint64_t countAndFlagsBits = sub_2FC400();
  sub_2FC260(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

unint64_t sub_69834()
{
  return HighlightPaginationEntity.debugDescription.getter();
}

uint64_t sub_69858()
{
  return sub_69A24((void (*)(void))type metadata accessor for HighlightPaginationEntity);
}

uint64_t type metadata accessor for HighlightPaginationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FF4E8);
}

uint64_t ExpandableContentPaginationEntityReference.init<A>(rects:pageOffset:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_69E98(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_6A25C);
}

uint64_t HighlightPaginationEntityReference.debugDescription.getter()
{
  sub_2FCDD0(45);
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_52E08(v0);
  swift_bridgeObjectRelease();
  type metadata accessor for CGRect(0);
  v5._uint64_t countAndFlagsBits = sub_2FC400();
  sub_2FC260(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6._object = (void *)0x800000000030D600;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_2FC260(v6);
  type metadata accessor for HighlightPaginationEntity(0);
  uint64_t v1 = swift_dynamicCastClassUnconditional();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v2;
  v7._object = v3;
  sub_2FC260(v7);
  swift_bridgeObjectRelease();
  return 0x7463657220202020;
}

uint64_t sub_699DC()
{
  return HighlightPaginationEntityReference.debugDescription.getter();
}

void sub_69A00(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_69A0C()
{
  return sub_69A24((void (*)(void))type metadata accessor for BookmarkPaginationEntity);
}

uint64_t sub_69A24(void (*a1)(void))
{
  a1(0);
  uint64_t v1 = swift_dynamicCastClassUnconditional();
  swift_unknownObjectRetain();
  return v1;
}

uint64_t BookmarkPaginationEntity.debugDescription.getter()
{
  *(void *)&v5[0] = 0;
  *((void *)&v5[0] + 1) = 0xE000000000000000;
  sub_2FCDD0(34);
  long long v7 = v5[0];
  v8._object = (void *)0x800000000030D5E0;
  v8._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_2FC260(v8);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v1;
  v9._object = v2;
  sub_2FC260(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x636572202020200ALL;
  v10._object = (void *)0xEA00000000003A74;
  sub_2FC260(v10);
  uint64_t v3 = (double *)swift_bridgeObjectRetain();
  sub_52F6C(v3, (uint64_t)v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v5[0] = *(_OWORD *)((char *)v5 + 8);
    type metadata accessor for CGPoint(0);
    sub_2FCFA0();
    return v7;
  }
  return result;
}

uint64_t sub_69B88()
{
  return BookmarkPaginationEntity.debugDescription.getter();
}

uint64_t LandmarkPaginationEntity.__allocating_init(name:rect:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  long long v12 = *(_OWORD *)(a3 + 1);
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  sub_371F4(&qword_3FE808);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_32BAE0;
  *(void *)(v9 + 32) = v6;
  *(_OWORD *)(v9 + 40) = v12;
  Swift::String v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(v3 + 144);
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;

  return v10(a1, a2, v9, &_swiftEmptySetSingleton);
}

void *LandmarkPaginationEntity.__allocating_init(uniqueIdentifier:rects:pageOffsets:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ElementPaginationEntity.init(uniqueIdentifier:rects:pageOffsets:)(a1, a2, a3, a4);
}

uint64_t LandmarkPaginationEntity.__deallocating_deinit()
{
  uint64_t v0 = ElementPaginationEntity.deinit();

  return _swift_deallocClassInstance(v0, 48, 7);
}

void *AnchorPaginationEntity.__allocating_init(name:rect:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_69D44(a1, a2, a3, (void (*)(void))type metadata accessor for AnchorPaginationEntity);
}

void sub_69D0C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t AnchorPaginationEntityReference.init<A>(rects:pageOffset:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_69E98(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_69F04);
}

void *MediaElementPaginationEntity.__allocating_init(name:rect:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_69D44(a1, a2, a3, (void (*)(void))type metadata accessor for MediaElementPaginationEntity);
}

void *sub_69D44(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v7 = *a3;
  long long v12 = *(_OWORD *)(a3 + 1);
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  sub_371F4(&qword_3FE808);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_32BAE0;
  *(void *)(v10 + 32) = v7;
  *(_OWORD *)(v10 + 40) = v12;
  *(void *)(v10 + 56) = v8;
  *(void *)(v10 + 64) = v9;
  a4(0);
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = v10;
  result[5] = &_swiftEmptySetSingleton;
  return result;
}

void sub_69DFC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void *ExpandableContentPaginationEntity.__allocating_init(name:rect:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_69D44(a1, a2, a3, (void (*)(void))type metadata accessor for ExpandableContentPaginationEntity);
}

void sub_69E20(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void *HistoryPaginationEntity.__allocating_init(name:rect:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_69D44(a1, a2, a3, (void (*)(void))type metadata accessor for HistoryPaginationEntity);
}

void sub_69E44(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t _s8BookEPUB33ExpandableContentPaginationEntityCfD_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_69E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v9 = a7();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v9;
}

uint64_t type metadata accessor for BookmarkPaginationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FF6C0);
}

uint64_t type metadata accessor for AnchorPaginationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FF920);
}

uint64_t type metadata accessor for MediaElementPaginationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FFB08);
}

uint64_t type metadata accessor for ExpandableContentPaginationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FFCF0);
}

uint64_t type metadata accessor for HistoryPaginationEntity(uint64_t a1)
{
  return sub_45A54(a1, qword_3FFED8);
}

uint64_t type metadata accessor for HighlightPaginationEntityReference()
{
  return self;
}

uint64_t method lookup function for HighlightPaginationEntityReference(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HighlightPaginationEntityReference);
}

uint64_t dispatch thunk of HighlightPaginationEntityReference.highlightPaginationEntity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_6A00C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for BookmarkPaginationEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookmarkPaginationEntity);
}

uint64_t dispatch thunk of BookmarkPaginationEntity.annotationUUID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t type metadata accessor for BookmarkPaginationEntityReference()
{
  return self;
}

uint64_t method lookup function for BookmarkPaginationEntityReference(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookmarkPaginationEntityReference);
}

uint64_t dispatch thunk of BookmarkPaginationEntityReference.bookmarkEntity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_6A0E0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LandmarkPaginationEntity()
{
  return sub_46A94();
}

uint64_t method lookup function for LandmarkPaginationEntity(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LandmarkPaginationEntity);
}

uint64_t dispatch thunk of LandmarkPaginationEntity.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of LandmarkPaginationEntity.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t type metadata accessor for AnchorPaginationEntityReference()
{
  return self;
}

uint64_t type metadata accessor for MediaElementPaginationEntityReference()
{
  return self;
}

uint64_t type metadata accessor for ExpandableContentPaginationEntityReference()
{
  return self;
}

uint64_t sub_6A200()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HistoryPaginationEntityReference()
{
  return self;
}

unint64_t destroy for BookContentAccessoryChange(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for BookContentAccessoryChange(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((int)v4 - 1 < 0)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
    *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
    *(void *)(a1 + 8) = v3;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for BookContentAccessoryChange(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 1) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
      *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 initializeWithTake for BookThemeEntity(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BookContentAccessoryChange(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 8);
    }
    if ((int)v7 - 1 < 0)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentAccessoryChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BookContentAccessoryChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_6A608(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_6A62C(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookContentAccessoryChange()
{
  return &type metadata for BookContentAccessoryChange;
}

uint64_t dispatch thunk of BookContentAccessoryAdornmentControlling.adornmentState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BookContentAccessoryAdornmentControlling.adornmentState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BookContentAccessoryAdornmentControlling.adornmentState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BookContentHighlightsControlling.hasInteractiveHighlight()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BookContentHighlightsControlling.updateInteractiveHighlight(with:point:from:rects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of BookContentHighlightsControlling.removeInteractiveHighlight()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BookContentHighlightsControlling.convertInteractiveToStaticHighlight()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unint64_t destroy for BookContentAccessoryAdornmentOverlap(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8BookEPUB36BookContentAccessoryAdornmentOverlapOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for BookContentAccessoryAdornmentOverlap(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Location.AnchorRequest(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for BookContentAccessoryAdornmentOverlap(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentAccessoryAdornmentOverlap(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BookContentAccessoryAdornmentOverlap(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_6A9E0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_6A9F8(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *__n128 result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BookContentAccessoryAdornmentOverlap()
{
  return &type metadata for BookContentAccessoryAdornmentOverlap;
}

uint64_t dispatch thunk of BookContentAccessoryAccessibilityHandling.applyToAccessibility(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BookContentAccessoryAdornmentFactory.createHighlightsController(for:with:contentLayoutController:selectionHighlightController:adornmentState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t dispatch thunk of BookContentAccessoryAdornmentFactory.createNotesController(for:with:contentLayoutController:adornmentState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of BookContentAccessoryAdornmentFactory.createAccessibilityController(for:with:contentLayoutController:adornmentState:with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 24))();
}

uint64_t PaginationLogger()()
{
  if (qword_3FD6D8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_416FE0;

  return sub_2FB8B0();
}

uint64_t PaginationLogSignPostBegin(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_6ABA8(a1, a2, a3, (void (*)(__n128))&static os_signpost_type_t.begin.getter);
}

id _PaginationLog()()
{
  if (qword_3FD6D8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_416FE0;

  return v0;
}

uint64_t PaginationLogSignPostEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_6ABA8(a1, a2, a3, (void (*)(__n128))&static os_signpost_type_t.event.getter);
}

uint64_t PaginationLogSignPostEnd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_6ABA8(a1, a2, a3, (void (*)(__n128))&static os_signpost_type_t.end.getter);
}

uint64_t sub_6ABA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128))
{
  uint64_t v5 = sub_2FB7D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  long long v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(v7);
  if (qword_3FD6D8 != -1) {
    swift_once();
  }
  id v10 = (id)qword_416FE0;
  sub_2FB7C0();
  sub_2FB790();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_6ACFC()
{
  sub_5C230();
  uint64_t result = sub_2FCBE0();
  qword_416FE0 = result;
  return result;
}

id sub_6ADB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Document();
  return [super dealloc];
}

uint64_t type metadata accessor for Document()
{
  return self;
}

UIColor __swiftcall UIColor.init(rgbaHex:)(Swift::Int rgbaHex)
{
  double v1 = (double)BYTE3(rgbaHex) / 255.0;
  double v2 = (double)BYTE2(rgbaHex) / 255.0;
  double v3 = (double)rgbaHex / 255.0;
  double v4 = (double)BYTE1(rgbaHex) / 255.0;
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (UIColor)[v5 initWithRed:v1 green:v2 blue:v4 alpha:v3];
}

uint64_t SearchModule.view.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t Location.documentOrdinal.getter()
{
  return *(void *)v0;
}

Swift::Void __swiftcall SearchModule.performSearch(query:)(Swift::String query)
{
}

uint64_t sub_6AF74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Location.documentOrdinal.getter();
  *a1 = result;
  return result;
}

uint64_t sub_6AF9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 136);
  swift_beginAccess();
  type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v4 = sub_2FCBF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_6B058(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 136);
  swift_beginAccess();
  type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v4 = sub_2FCBF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_6B11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SearchModule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for SearchModuleFactory.SavedModule();
  *(void *)(a4 + *(int *)(result + 28)) = a2;
  *(void *)(a4 + *(int *)(result + 32)) = a3;
  return result;
}

uint64_t SearchModuleFactory.__allocating_init(bookProvider:searchController:paginationService:pageNumberProvider:stylesheetProvider:analyticsProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  SearchModuleFactory.init(bookProvider:searchController:paginationService:pageNumberProvider:stylesheetProvider:analyticsProvider:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

void *SearchModuleFactory.init(bookProvider:searchController:paginationService:pageNumberProvider:stylesheetProvider:analyticsProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = (char *)v10 + *(void *)(*v10 + 136);
  uint64_t v18 = type metadata accessor for SearchModuleFactory.SavedModule();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  void v10[2] = a1;
  void v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  void v10[6] = a5;
  v10[7] = a6;
  v10[8] = a7;
  v10[9] = a8;
  v10[10] = a9;
  v10[11] = a10;
  return v10;
}

uint64_t sub_6B354@<X0>(void *a1@<X0>, void (*a2)(void *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  uint64_t v55 = a2;
  uint64_t v52 = a1;
  uint64_t v57 = a5;
  uint64_t v6 = *(void *)(*v5 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v56 = (char *)&v47 - v8;
  uint64_t v9 = type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v10 = sub_2FCBF0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for SearchModule();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v47 - v16;
  sub_6AF9C((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v13, 1, v9))
  {
    uint64_t v49 = v14;
    uint64_t v50 = v7;
    uint64_t v51 = v6;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v19 = v5[2];
    uint64_t v18 = v5[3];
    uint64_t v20 = v5[4];
    uint64_t v21 = v5[5];
    uint64_t v22 = v5[7];
    uint64_t v47 = v5[6];
    uint64_t v48 = v18;
    uint64_t v23 = v5[8];
    uint64_t v24 = v5[9];
    uint64_t v25 = qword_3FD930;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    if (v25 != -1) {
      swift_once();
    }
    unsigned __int8 v26 = (void *)qword_408A40;
    uint64_t v27 = v5[10];
    unsigned __int8 v28 = (void *)v5[11];
    unint64_t v29 = (char *)objc_allocWithZone((Class)type metadata accessor for SearchDataManager());
    swift_unknownObjectRetain();
    id v30 = v26;
    char v31 = sub_6D858(v19, v48, v20, v21, v47, v22, v23, v24, v30, v27, v28, v29);
    type metadata accessor for SearchViewModel(0);
    swift_allocObject();
    uint64_t v32 = SearchViewModel.init(searchText:)(0, 0xE000000000000000);
    unsigned __int8 v33 = (objc_class *)type metadata accessor for SearchInteractor(0);
    int v34 = (char *)objc_allocWithZone(v33);
    *(void *)&v34[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_delegate + 8] = 0;
    swift_unknownObjectWeakInit();
    sub_39F90(0, (unint64_t *)&qword_4000C0);
    unsigned __int8 v35 = v31;
    uint64_t v36 = v34;
    sub_2FCBE0();
    sub_2FB8B0();
    int v37 = (char **)&v36[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager];
    *int v37 = v35;
    v37[1] = (char *)&off_3C50B0;
    swift_unknownObjectRetain();

    v59.receiver = v36;
    v59.super_class = v33;
    unsigned __int8 v38 = (char *)[super init];
    *(void *)&v35[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_delegate + 8] = &off_3C37D8;
    swift_unknownObjectWeakAssign();

    sub_39F90(0, (unint64_t *)&qword_401700);
    swift_retain();
    char v39 = (void *)sub_2FC8C0();
    uint64_t v40 = type metadata accessor for SearchPresenter();
    uint64_t v41 = (void *)swift_allocObject();
    uint64_t v42 = v52;
    swift_unknownObjectRetain();
    uint64_t v43 = sub_6D3C8(v38, v42, v53, v32, v39, v41);
    v58[3] = v40;
    v58[4] = &off_3C68E0;
    v58[0] = v43;
    swift_retain();
    uint64_t v44 = v56;
    v55(v58, v32);
    swift_release();

    sub_39FCC((uint64_t)v58);
    uint64_t v45 = v57;
    *(void *)uint64_t v57 = v43;
    return (*(uint64_t (**)(char *, char *, uint64_t))(v50 + 32))(&v45[*(int *)(v49 + 28)], v44, v51);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v13, v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v57, v17, v14);
  }
}

uint64_t sub_6B8C8()
{
  uint64_t v0 = type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v1 = sub_2FCBF0();
  __n128 v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v0 - 8) + 56))((char *)&v6 - v3, 1, 1, v0, v2);
  return sub_6B058((uint64_t)v4);
}

uint64_t sub_6B994(void *a1, uint64_t (*a2)(), uint64_t a3)
{
  os_log_type_t v66 = a2;
  uint64_t v67 = a3;
  uint64_t v5 = *(void *)(*(void *)v3 + 80);
  uint64_t v6 = type metadata accessor for SearchModule();
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  __chkstk_darwin(v6);
  char v78 = (char *)&v57 - v7;
  uint64_t v81 = v5;
  uint64_t v79 = type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v8 = sub_2FCBF0();
  __chkstk_darwin(v8 - 8);
  uint64_t v77 = (uint64_t)&v57 - v9;
  uint64_t v10 = sub_371F4((uint64_t *)&unk_4000D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v73 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_371F4(&qword_400E40);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  Swift::String v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_371F4(&qword_4000E0);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_371F4(&qword_4000E8);
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_371F4(&qword_4000F0);
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_371F4(&qword_4000F8);
  uint64_t v68 = *(void *)(v20 - 8);
  uint64_t v69 = v20;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_371F4((uint64_t *)&unk_400100);
  uint64_t v71 = *(void *)(v23 - 8);
  uint64_t v72 = v23;
  __chkstk_darwin(v23);
  uint64_t v70 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_371F4(&qword_400470);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v76 = a1;
  uint64_t v28 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  unint64_t v30 = (unint64_t)v82;
  unint64_t v29 = v83;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v32 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0) {
    uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
  }
  if (v32)
  {
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v80;
    swift_weakInit();
    unsigned __int8 v35 = (void *)swift_allocObject();
    uint64_t v35[2] = v81;
    v35[3] = v33;
    v35[4] = v28;
    uint64_t v36 = sub_2FC570();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v27, 1, 1, v36);
    sub_2FC540();
    swift_retain();
    uint64_t v37 = sub_2FC530();
    unsigned __int8 v38 = (void *)swift_allocObject();
    v38[2] = v37;
    v38[3] = &protocol witness table for MainActor;
    uint64_t v39 = v67;
    v38[4] = v66;
    v38[5] = v39;
    os_log_type_t v66 = sub_6E3F4;
    v38[6] = sub_6E3F4;
    v38[7] = v35;
    uint64_t v67 = sub_6CAE4((uint64_t)v27, (uint64_t)&unk_400118, (uint64_t)v38);
    uint64_t v40 = *(void *)(v34 + 48);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v40 + 40))(ObjectType, v40);
    sub_44924(&qword_400120, &qword_400E40);
    uint64_t v42 = v59;
    sub_2FBCB0();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v42);
    sub_44924(&qword_400128, &qword_4000E0);
    uint64_t v43 = v61;
    sub_2FBC60();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v43);
    sub_44924(&qword_400130, &qword_4000E8);
    uint64_t v44 = v64;
    sub_2FBC30();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v17, v44);
    sub_44924(&qword_400138, &qword_4000F0);
    uint64_t v45 = v65;
    sub_2FBC50();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v45);
    sub_39F90(0, (unint64_t *)&qword_401700);
    id v82 = (id)sub_2FC8C0();
    uint64_t v46 = sub_2FC870();
    uint64_t v47 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v73, 1, 1, v46);
    sub_44924((unint64_t *)&unk_400140, &qword_4000F8);
    sub_52CFC();
    uint64_t v49 = v69;
    uint64_t v48 = v70;
    sub_2FBC80();
    sub_5BE90(v47, (uint64_t *)&unk_4000D0);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v49);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v66;
    *(void *)(v50 + 24) = v35;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_6E54C;
    *(void *)(v51 + 24) = v50;
    sub_44924(qword_400150, (uint64_t *)&unk_400100);
    swift_retain();
    uint64_t v52 = v72;
    uint64_t v53 = sub_2FBCF0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v52);
    uint64_t v54 = (uint64_t)v78;
    (*(void (**)(char *, void *, uint64_t))(v74 + 16))(v78, v76, v75);
    sub_2FBA80();
    swift_allocObject();
    swift_retain();
    uint64_t v55 = sub_2FBA90();
    uint64_t v56 = v77;
    sub_6B11C(v54, v55, v53, v77);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v79 - 8) + 56))(v56, 0, 1);
    swift_retain();
    sub_6B058(v56);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_6C46C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SearchModule();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v14 - v5);
  uint64_t v7 = type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v8 = sub_2FCBF0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - v10;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_6AF9C((uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v11, 1, v7))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v6, v11, v3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v13 = *v6;
      (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
      if (v13 == a2) {
        sub_6B8C8();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_6C6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = sub_2FCF40();
  v7[6] = v8;
  v7[7] = *(void *)(v8 - 8);
  v7[8] = swift_task_alloc();
  sub_2FC540();
  v7[9] = sub_2FC530();
  uint64_t v10 = sub_2FC4E0();
  v7[10] = v10;
  v7[11] = v9;
  return _swift_task_switch(sub_6C7A0, v10, v9);
}

uint64_t sub_6C7A0()
{
  sub_2FCF30();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_4002E0 + dword_4002E0);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  void *v1 = v0;
  v1[1] = sub_6C860;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return v5(v3, v2, 0, 0, 1);
}

uint64_t sub_6C860()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 48);
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v8 = sub_6CA78;
  }
  else {
    uint64_t v8 = sub_6C9F8;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_6C9F8()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 32);
  uint64_t v2 = swift_release();
  v1(v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_6CA78()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_6CAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2FC570();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2FC560();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_5BE90(a1, &qword_400470);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2FC4E0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

BOOL sub_6CC6C(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

uint64_t sub_6CC7C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t SearchModuleFactory.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t v2 = sub_2FCBF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SearchModuleFactory.__deallocating_deinit()
{
  SearchModuleFactory.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_6CDC0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_6CE40()
{
  return sub_2FBBB0();
}

uint64_t type metadata accessor for SearchModuleFactory.SavedModule()
{
  return sub_46A94();
}

uint64_t type metadata accessor for SearchModule()
{
  return sub_46A94();
}

uint64_t sub_6CEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_2FCF20();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_6D000, 0, 0);
}

uint64_t sub_6D000()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_2FCF40();
  uint64_t v5 = sub_6F968((unint64_t *)&qword_4002E8, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_2FD290();
  sub_6F968(&qword_4002F0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_2FCF50();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_6D1A0;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_6D1A0()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_6D35C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_6D35C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_6D3C8(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v12 = sub_371F4(&qword_4002F8);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12);
  unint64_t v29 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_371F4((uint64_t *)&unk_400300);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6[6] = 0;
  swift_unknownObjectWeakInit();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_2FD030()) {
    uint64_t v18 = (void *)sub_1B384C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v18 = &_swiftEmptySetSingleton;
  }
  a6[9] = 0;
  a6[10] = 0;
  a6[8] = v18;
  a6[3] = a1;
  a6[4] = &off_3C3750;
  a6[6] = a3;
  v28[1] = a2;
  swift_unknownObjectWeakAssign();
  a6[2] = a4;
  a6[7] = a5;
  *(void *)&a1[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_delegate + 8] = &off_3C68C0;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  uint64_t v19 = a1;
  swift_retain();
  v28[0] = a5;
  sub_371F4(&qword_3FDCF0);
  sub_2FBB70();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  sub_44924(&qword_400310, (uint64_t *)&unk_400300);
  uint64_t v20 = sub_2FBCF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  a6[9] = v20;
  swift_release();
  uint64_t v21 = *(void *)(*(void *)&v19[OBJC_IVAR____TtC8BookEPUB16SearchInteractor_dataManager]
                  + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchRecentsPersistence
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21);
  sub_371F4(&qword_400318);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_32BAE0;
  *(void *)(v23 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(ObjectType, v21);
  sub_371F4(&qword_400320);
  sub_44924(&qword_400328, &qword_400320);
  uint64_t v24 = v29;
  sub_2FBC70();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v32 = a4;
  sub_44924(&qword_400330, &qword_4002F8);
  uint64_t v25 = v31;
  uint64_t v26 = sub_2FBD00();

  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v25);
  swift_release();
  a6[10] = v26;
  swift_release();
  return a6;
}

char *sub_6D858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, char *a12)
{
  uint64_t v65 = a7;
  uint64_t v90 = a10;
  uint64_t v64 = a9;
  id v83 = a11;
  uint64_t v19 = sub_371F4((uint64_t *)&unk_4000D0);
  __chkstk_darwin(v19 - 8);
  id v89 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_371F4(&qword_400338);
  uint64_t v80 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v74 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_371F4(&qword_400340);
  uint64_t v81 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v73 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_371F4(&qword_400348);
  __chkstk_darwin(v82);
  uint64_t v75 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_371F4(&qword_400E40);
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_371F4(&qword_400350);
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v62 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_371F4(&qword_400358);
  __chkstk_darwin(v71);
  uint64_t v63 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_371F4(&qword_400360);
  uint64_t v79 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v70 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_371F4(&qword_400368);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v87 = v29;
  uint64_t v88 = v30;
  __chkstk_darwin(v29);
  uint64_t v72 = (char *)&v61 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_subscribers] = _swiftEmptyArrayStorage;
  uint64_t v32 = &a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_bookProvider];
  uint64_t v84 = a1;
  uint64_t v85 = a3;
  *(void *)uint64_t v32 = a1;
  *((void *)v32 + 1) = a2;
  *(void *)&a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController] = a3;
  uint64_t v33 = &a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_paginationService];
  *(void *)uint64_t v33 = a4;
  *((void *)v33 + 1) = a5;
  uint64_t v34 = &a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_pageNumberProvider];
  uint64_t v86 = a6;
  uint64_t v35 = v65;
  *(void *)uint64_t v34 = a6;
  *((void *)v34 + 1) = v35;
  *(void *)&a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_stylesheetProvider] = a8;
  uint64_t v36 = &a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchRecentsPersistence];
  uint64_t v37 = v64;
  *(void *)uint64_t v36 = v64;
  *((void *)v36 + 1) = &protocol witness table for SearchRecentsPersistence;
  unsigned __int8 v38 = &a12[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_analyticsProvider];
  id v39 = v83;
  *(void *)unsigned __int8 v38 = v90;
  *((void *)v38 + 1) = v39;
  uint64_t v40 = (objc_class *)type metadata accessor for SearchDataManager();
  v92.receiver = a12;
  v92.super_class = v40;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v83 = v37;
  swift_unknownObjectRetain();
  uint64_t v41 = (char *)[v92 init];
  uint64_t v42 = *(void **)&v41[OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController];
  uint64_t v43 = v41;
  [v42 setDelegate:v43];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a5 + 40))(ObjectType, a5);
  sub_44924(&qword_400120, &qword_400E40);
  uint64_t v45 = v62;
  uint64_t v46 = v66;
  sub_2FBC30();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v25, v46);
  sub_44924((unint64_t *)&unk_400370, &qword_400350);
  uint64_t v47 = v68;
  sub_2FBCB0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v47);
  swift_beginAccess();
  sub_371F4((uint64_t *)&unk_401190);
  uint64_t v48 = v74;
  sub_2FBB70();
  swift_endAccess();
  sub_44924(&qword_400380, &qword_400338);
  uint64_t v49 = v73;
  uint64_t v50 = v77;
  sub_2FBC30();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v50);
  sub_44924(&qword_400388, &qword_400340);
  uint64_t v51 = v78;
  sub_2FBCB0();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v51);
  sub_44924(&qword_400390, &qword_400358);
  sub_44924(&qword_400398, &qword_400348);
  uint64_t v52 = v70;
  sub_2FBA00();
  sub_39F90(0, (unint64_t *)&qword_401700);
  id v91 = (id)sub_2FC8C0();
  uint64_t v53 = sub_2FC870();
  uint64_t v54 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v89, 1, 1, v53);
  sub_44924(&qword_4003A0, &qword_400360);
  sub_52CFC();
  uint64_t v55 = v72;
  uint64_t v56 = v76;
  sub_2FBC80();
  sub_5BE90(v54, (uint64_t *)&unk_4000D0);

  (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v56);
  uint64_t v57 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_6F9F8;
  *(void *)(v58 + 24) = v57;
  sub_44924(&qword_4003A8, &qword_400368);
  uint64_t v59 = v87;
  sub_2FBCF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v59);
  swift_beginAccess();
  sub_371F4(&qword_4003B0);
  sub_44924((unint64_t *)&unk_405190, &qword_4003B0);
  sub_2FBA60();
  swift_endAccess();
  swift_release();
  sub_7AA94();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  return v43;
}

uint64_t sub_6E384()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_6E3BC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_6E3F4()
{
  return sub_6C46C(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_6E400()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_6E440(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_4679C;
  return sub_6C6A8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_6E514()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6E54C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_6E574()
{
  sub_371F4(&qword_4002D8);

  sub_2FC580();
}

void *sub_6E5C0()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_6E5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_6E5D4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_6E674(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_6E778(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_6E7EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_retain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_6E87C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_6E90C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_6E97C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_6EA04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_6EBA4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x6EE00);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_6EE28()
{
  type metadata accessor for SearchModuleFactory.SavedModule();
  uint64_t result = sub_2FCBF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SearchModuleFactory()
{
  return sub_46A94();
}

uint64_t method lookup function for SearchModuleFactory(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SearchModuleFactory);
}

uint64_t dispatch thunk of SearchModuleFactory.__allocating_init(bookProvider:searchController:paginationService:pageNumberProvider:stylesheetProvider:analyticsProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SearchModuleFactory.create<A>(router:buildView:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of SearchModuleFactory.clearSaved()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SearchModuleFactory.save(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_6EFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_6EFB8()
{
  uint64_t result = type metadata accessor for SearchModule();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_6F058(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = ((v5 + 8) & ~v5) + *(void *)(v4 + 64);
  int v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  uint64_t v8 = *a2;
  *a1 = *a2;
  if (v5 > 7 || v7 != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    unsigned int v12 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    unsigned int v12 = a1;
    uint64_t v13 = ((unint64_t)a1 + v5 + 8) & ~v5;
    uint64_t v14 = ((unint64_t)a2 + v5 + 8) & ~v5;
    int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    swift_retain();
    v15(v13, v14, v3);
    unsigned int v16 = (void *)(((unint64_t)v12 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    int v17 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v16 = *v17;
    *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
  }
  swift_retain();
  return v12;
}

uint64_t sub_6F1C0(uint64_t a1, uint64_t a2)
{
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 8
                                                                                            + a1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();

  return swift_release();
}

void *sub_6F268(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a2 + v8 + 8) & ~v8;
  swift_retain();
  v6(((unint64_t)a1 + v8 + 8) & ~v8, v9, v5);
  uint64_t v10 = ((v8 + 8) & ~v8) + *(void *)(v7 + 48) + 7;
  BOOL v11 = (void *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v12 = (void *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  void *v11 = *v12;
  *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_6F350(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + v8 + 8) & ~v8, ((unint64_t)a2 + v8 + 8) & ~v8);
  uint64_t v9 = ((v8 + 8) & ~v8) + *(void *)(v7 + 40) + 7;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (unint64_t)a2 + v9;
  unint64_t v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v10 = *(void *)(v11 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v12 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_6F440(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + v7 + 8) & ~v7, ((unint64_t)a2 + v7 + 8) & ~v7);
  uint64_t v8 = ((v7 + 8) & ~v7) + *(void *)(v6 + 32) + 7;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_6F4FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + v8 + 8) & ~v8, ((unint64_t)a2 + v8 + 8) & ~v8);
  uint64_t v9 = ((v8 + 8) & ~v8) + *(void *)(v7 + 24) + 7;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)(((unint64_t)a2 + v9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  swift_release();
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_6F5D4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x6F734);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_6F748(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v18 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v18 = a2 - 1;
              }
              *(void *)a1 = v18;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x6F940);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_6F968(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6F9B0()
{
  return sub_BF9BC();
}

uint64_t sub_6F9C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_6F9F8()
{
}

unint64_t sub_6FA10(__int16 a1)
{
  unint64_t v2 = sub_3E908((uint64_t)_swiftEmptyArrayStorage);
  if (a1)
  {
    unsigned int v11 = self;
    unsigned int v12 = @"anchorFrames";
    id v13 = [v11 anchorFramesScript];
    uint64_t v14 = sub_2FC180();
    uint64_t v16 = v15;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1AF198(v14, v16, v12, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    if ((a1 & 4) == 0)
    {
LABEL_3:
      if ((a1 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v18 = self;
  unint64_t v19 = @"mediaFrames";
  id v20 = [v18 mediaFramesScript];
  uint64_t v21 = sub_2FC180();
  uint64_t v23 = v22;

  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AF198(v21, v23, v19, v24);

  swift_bridgeObjectRelease();
  if ((a1 & 0x100) == 0)
  {
LABEL_4:
    if ((a1 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v25 = self;
  uint64_t v26 = @"expandableContentFrames";
  id v27 = [v25 expandableContentFramesScript];
  uint64_t v28 = sub_2FC180();
  uint64_t v30 = v29;

  char v31 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AF198(v28, v30, v26, v31);

  swift_bridgeObjectRelease();
  if ((a1 & 0x10) == 0)
  {
LABEL_5:
    if ((a1 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v32 = self;
  uint64_t v33 = @"textContent";
  id v34 = [v32 textContentScript];
  uint64_t v35 = sub_2FC180();
  uint64_t v37 = v36;

  char v38 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AF198(v35, v37, v33, v38);

  swift_bridgeObjectRelease();
  if ((a1 & 0x20) == 0)
  {
LABEL_6:
    if ((a1 & 0x40) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    uint64_t v46 = self;
    uint64_t v47 = @"writingMode";
    id v48 = [v46 writingModeScript];
    uint64_t v49 = sub_2FC180();
    uint64_t v51 = v50;

    char v52 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AF198(v49, v51, v47, v52);

    swift_bridgeObjectRelease();
    if ((a1 & 0x80) == 0) {
      return v2;
    }
    goto LABEL_8;
  }
LABEL_14:
  id v39 = self;
  uint64_t v40 = @"textDirection";
  id v41 = [v39 textDirectionScript];
  uint64_t v42 = sub_2FC180();
  uint64_t v44 = v43;

  char v45 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AF198(v42, v44, v40, v45);

  swift_bridgeObjectRelease();
  if ((a1 & 0x40) != 0) {
    goto LABEL_15;
  }
LABEL_7:
  if ((a1 & 0x80) != 0)
  {
LABEL_8:
    uint64_t v3 = self;
    uint64_t v4 = @"scrollingElementSize";
    id v5 = [v3 scrollingElementSizeScript];
    uint64_t v6 = sub_2FC180();
    uint64_t v8 = v7;

    char v9 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AF198(v6, v8, v4, v9);

    swift_bridgeObjectRelease();
  }
  return v2;
}

id sub_6FE20(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2FB8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  size_t v10 = (char *)&v38 - v9;
  if (a1 && (self, swift_dynamicCastObjCClass()) && (v41 = 0, sub_2FC070(), (uint64_t v11 = v41) != 0))
  {
    if (*(void *)(v41 + 16))
    {
      unint64_t v12 = sub_42238(0x6874646977, 0xE500000000000000);
      if (v13)
      {
        if (*(void *)(v11 + 16))
        {
          double v14 = *(double *)(*(void *)(v11 + 56) + 8 * v12);
          unint64_t v15 = sub_42238(0x746867696568, 0xE600000000000000);
          if (v16)
          {
            double v17 = *(double *)(*(void *)(v11 + 56) + 8 * v15);
            swift_bridgeObjectRelease();
            return [self valueWithCGSize:v14, v17];
          }
        }
      }
    }
    if (qword_3FD6D8 != -1) {
      swift_once();
    }
    id v31 = (id)qword_416FE0;
    sub_2FB8B0();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_2FB880();
    os_log_type_t v33 = sub_2FC7B0();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v39 = v5;
      *(_DWORD *)id v34 = 136315138;
      char v38 = v34 + 4;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_2FC090();
      unint64_t v37 = v36;
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_38EF0(v35, v37, &v41);
      sub_2FCC70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v4);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    if (qword_3FD6D8 != -1) {
      swift_once();
    }
    id v19 = (id)qword_416FE0;
    sub_2FB8B0();
    id v20 = a1;
    swift_errorRetain();
    id v21 = v20;
    swift_errorRetain();
    uint64_t v22 = sub_2FB880();
    os_log_type_t v23 = sub_2FC7B0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v39 = v5;
      uint64_t v40 = (uint64_t)a1;
      uint64_t v41 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      id v26 = v21;
      sub_371F4(&qword_400A90);
      char v38 = (uint8_t *)v4;
      uint64_t v27 = sub_2FC1E0();
      uint64_t v40 = sub_38EF0(v27, v28, &v41);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v40 = a2;
      swift_errorRetain();
      sub_371F4(&qword_406370);
      uint64_t v29 = sub_2FC1E0();
      uint64_t v40 = sub_38EF0(v29, v30, &v41);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_7BFC0, v22, v23, "Failed to get results as needed type ([String: Double]) result: %s -- error: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint8_t *))(v39 + 8))(v10, v38);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  return 0;
}

void (**sub_703E0(void *a1, uint64_t a2))(Class, void)
{
  uint64_t v4 = sub_2FB8A0();
  uint64_t v5 = *(void (***)(Class, void))(v4 - 8);
  __chkstk_darwin(v4);
  Class isa = (Class)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v25 = 0;
      sub_371F4(&qword_406380);
      sub_2FC070();
      if (v25)
      {
        uint64_t v8 = self;
        Class isa = sub_2FC060().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v5 = (void (**)(Class, void))[v8 keyedRectsFromKeyedDOMRects:isa];

        if (v5) {
          return v5;
        }
        __break(1u);
      }
    }
  }
  if (qword_3FD6D8 != -1) {
    swift_once();
  }
  id v9 = (id)qword_416FE0;
  sub_2FB8B0();
  id v10 = a1;
  swift_errorRetain();
  id v11 = v10;
  swift_errorRetain();
  unint64_t v12 = sub_2FB880();
  os_log_type_t v13 = sub_2FC7B0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v24 = (uint64_t)a1;
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    id v16 = v11;
    sub_371F4(&qword_400A90);
    uint64_t v17 = sub_2FC1E0();
    uint64_t v24 = sub_38EF0(v17, v18, &v25);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v24 = a2;
    swift_errorRetain();
    sub_371F4(&qword_406370);
    uint64_t v19 = sub_2FC1E0();
    uint64_t v24 = sub_38EF0(v19, v20, &v25);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_7BFC0, v12, v13, "Failed to get results as needed type ([String : [String : NSNumber]]) result: %s -- error: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v5[1](isa, v23);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    v5[1](isa, v4);
  }
  return 0;
}

void sub_70798()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (!v2)
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t *v0 = (uint64_t)v4;
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = v1 + 48;
  uint64_t v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v5 = *(void *)(v3 - 16);
    CGFloat v43 = *(double *)v3;
    CGFloat v44 = *(double *)(v3 + 8);
    CGFloat v6 = *(double *)(v3 + 24);
    CGFloat v45 = *(double *)(v3 + 16);
    CGFloat v47 = *(double *)(v3 - 8);
    long long rect = *(_OWORD *)(v3 + 32);
    CGFloat v7 = *(double *)(v3 + 48);
    uint64_t v8 = v4[2];
    if (!v8) {
      goto LABEL_18;
    }
    id v9 = (CGFloat *)&v4[9 * v8];
    uint64_t v10 = *((void *)v9 - 5);
    CGFloat v39 = *(v9 - 3);
    CGFloat v40 = *(v9 - 4);
    CGFloat v11 = *v9;
    CGFloat v37 = *(v9 - 1);
    CGFloat v38 = *(v9 - 2);
    CGFloat v13 = v9[1];
    CGFloat v12 = v9[2];
    CGFloat v14 = v9[3];
    v50.origin.CGFloat x = *v9;
    v50.origin.CGFloat y = v13;
    v50.size.CGFloat width = v12;
    v50.size.CGFloat height = v14;
    double MinY = CGRectGetMinY(v50);
    *(void *)&v51.origin.CGFloat y = rect;
    v51.origin.CGFloat x = v6;
    v51.size.CGFloat width = *((CGFloat *)&rect + 1);
    v51.size.CGFloat height = v7;
    double v16 = CGRectGetMinY(v51);
    if (MinY > v16) {
      double v16 = MinY;
    }
    CGFloat v41 = v13;
    double r1 = v16;
    v52.origin.CGFloat x = v11;
    v52.origin.CGFloat y = v13;
    v52.size.CGFloat width = v12;
    v52.size.CGFloat height = v14;
    double MaxY = CGRectGetMaxY(v52);
    v53.origin.CGFloat x = v6;
    *(_OWORD *)&v53.origin.CGFloat y = rect;
    v53.size.CGFloat height = v7;
    double v18 = CGRectGetMaxY(v53);
    if (v18 >= MaxY) {
      double v18 = MaxY;
    }
    if (r1 >= v18) {
      goto LABEL_18;
    }
    v54.origin.CGFloat x = v11;
    v54.origin.CGFloat y = v13;
    v54.size.CGFloat width = v12;
    v54.size.CGFloat height = v14;
    double v19 = CGRectGetMaxY(v54);
    v55.origin.CGFloat x = v6;
    *(_OWORD *)&v55.origin.CGFloat y = rect;
    v55.size.CGFloat height = v7;
    if (vabdd_f64(v19, CGRectGetMaxY(v55)) >= 5.0) {
      goto LABEL_18;
    }
    v56.origin.CGFloat x = v6;
    *(_OWORD *)&v56.origin.CGFloat y = rect;
    v56.size.CGFloat height = v7;
    double MinX = CGRectGetMinX(v56);
    v57.origin.CGFloat x = v11;
    v57.origin.CGFloat y = v13;
    v57.size.CGFloat width = v12;
    v57.size.CGFloat height = v14;
    if (vabdd_f64(MinX, CGRectGetMaxX(v57)) >= 15.0)
    {
LABEL_18:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_4AA1C(0, v4[2] + 1, 1, v4);
      }
      unint64_t v32 = v4[2];
      unint64_t v31 = v4[3];
      long long v33 = rect;
      if (v32 >= v31 >> 1)
      {
        uint64_t v35 = sub_4AA1C((void *)(v31 > 1), v32 + 1, 1, v4);
        long long v33 = rect;
        uint64_t v4 = v35;
      }
      v4[2] = v32 + 1;
      id v34 = (CGFloat *)&v4[9 * v32];
      *((void *)v34 + 4) = v5;
      v34[5] = v47;
      v34[6] = v43;
      v34[7] = v44;
      v34[8] = v45;
      v34[9] = v6;
      *((_OWORD *)v34 + 5) = v33;
      v34[12] = v7;
      goto LABEL_23;
    }
    CGFloat v36 = v14;
    if (!v4[2]) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v21 = v4[2];
      if (!v21) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v4 = sub_10496C(v4);
      uint64_t v21 = v4[2];
      if (!v21) {
        goto LABEL_31;
      }
    }
    v4[2] = v21 - 1;
    if (v5 != v10) {
      goto LABEL_30;
    }
    v58.origin.CGFloat y = v39;
    v58.origin.CGFloat x = v40;
    v58.size.CGFloat height = v37;
    v58.size.CGFloat width = v38;
    v61.size.CGFloat height = v45;
    v61.origin.CGFloat x = v47;
    v61.origin.CGFloat y = v43;
    v61.size.CGFloat width = v44;
    CGRect v59 = CGRectUnion(v58, v61);
    CGFloat x = v59.origin.x;
    CGFloat y = v59.origin.y;
    CGFloat height = v59.size.height;
    CGFloat width = v59.size.width;
    v59.origin.CGFloat x = v11;
    v59.origin.CGFloat y = v41;
    v59.size.CGFloat width = v12;
    v62.size.CGFloat width = *((CGFloat *)&rect + 1);
    v59.size.CGFloat height = v36;
    v62.origin.CGFloat x = v6;
    *(void *)&v62.origin.CGFloat y = rect;
    v62.size.CGFloat height = v7;
    CGRect v60 = CGRectUnion(v59, v62);
    CGFloat v24 = v60.origin.x;
    CGFloat v25 = v60.origin.y;
    CGFloat v26 = v60.size.width;
    CGFloat v27 = v60.size.height;
    unint64_t v29 = v4[2];
    unint64_t v28 = v4[3];
    if (v29 >= v28 >> 1) {
      uint64_t v4 = sub_4AA1C((void *)(v28 > 1), v29 + 1, 1, v4);
    }
    v4[2] = v29 + 1;
    unint64_t v30 = (CGFloat *)&v4[9 * v29];
    *((void *)v30 + 4) = v5;
    v30[5] = x;
    v30[6] = y;
    v30[7] = width;
    v30[8] = height;
    v30[9] = v24;
    v30[10] = v25;
    v30[11] = v26;
    v30[12] = v27;
LABEL_23:
    v3 += 72;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

BOOL sub_70B34(double *a1)
{
  CGFloat v2 = a1[5];
  CGFloat v3 = a1[6];
  CGFloat v5 = a1[7];
  CGFloat v4 = a1[8];
  CGFloat v6 = v1[5];
  v17.origin.CGFloat y = v1[6];
  CGFloat rect_16 = v17.origin.y;
  CGFloat v7 = v1[7];
  CGFloat v8 = v1[8];
  v17.origin.CGFloat x = v6;
  v17.size.CGFloat width = v7;
  v17.size.CGFloat height = v8;
  double MinY = CGRectGetMinY(v17);
  v18.origin.CGFloat x = v2;
  v18.origin.CGFloat y = v3;
  v18.size.CGFloat width = v5;
  v18.size.CGFloat height = v4;
  double v10 = CGRectGetMinY(v18);
  if (MinY > v10) {
    double v10 = MinY;
  }
  double rect_24 = v10;
  v19.origin.CGFloat x = v6;
  v19.origin.CGFloat y = rect_16;
  v19.size.CGFloat width = v7;
  v19.size.CGFloat height = v8;
  double MaxY = CGRectGetMaxY(v19);
  v20.origin.CGFloat x = v2;
  v20.origin.CGFloat y = v3;
  v20.size.CGFloat width = v5;
  v20.size.CGFloat height = v4;
  double v12 = CGRectGetMaxY(v20);
  if (v12 >= MaxY) {
    double v12 = MaxY;
  }
  if (rect_24 >= v12) {
    return 0;
  }
  v21.origin.CGFloat x = v6;
  v21.origin.CGFloat y = rect_16;
  v21.size.CGFloat width = v7;
  v21.size.CGFloat height = v8;
  double v13 = CGRectGetMaxY(v21);
  v22.origin.CGFloat x = v2;
  v22.origin.CGFloat y = v3;
  v22.size.CGFloat width = v5;
  v22.size.CGFloat height = v4;
  return vabdd_f64(v13, CGRectGetMaxY(v22)) < 5.0;
}

BOOL sub_70C48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[5];
  uint64_t v2 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v4 = a1[8];
  double v6 = *(double *)a2;
  CGFloat v8 = *((double *)a2 + 5);
  CGFloat v7 = *((double *)a2 + 6);
  CGFloat v10 = *((double *)a2 + 7);
  CGFloat v9 = *((double *)a2 + 8);
  uint64_t v27 = *a1;
  long long v11 = *(_OWORD *)(a1 + 3);
  long long v28 = *(_OWORD *)(a1 + 1);
  long long v29 = v11;
  uint64_t v30 = v3;
  uint64_t v31 = v2;
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  double v20 = v6;
  long long v21 = *(_OWORD *)(a2 + 1);
  long long v22 = *(_OWORD *)(a2 + 3);
  CGFloat v23 = v8;
  CGFloat v24 = v7;
  CGFloat v25 = v10;
  CGFloat v26 = v9;
  BOOL v12 = sub_70B34(&v20);
  uint64_t v13 = v3;
  uint64_t v14 = v2;
  uint64_t v15 = v5;
  uint64_t v16 = v4;
  if (v12)
  {
    double MinX = CGRectGetMinX(*(CGRect *)&v13);
    v34.origin.CGFloat x = v8;
    v34.origin.CGFloat y = v7;
    v34.size.CGFloat width = v10;
    v34.size.CGFloat height = v9;
    double MinY = CGRectGetMinX(v34);
  }
  else
  {
    double MinX = CGRectGetMinY(*(CGRect *)&v13);
    v35.origin.CGFloat x = v8;
    v35.origin.CGFloat y = v7;
    v35.size.CGFloat width = v10;
    v35.size.CGFloat height = v9;
    double MinY = CGRectGetMinY(v35);
  }
  return MinX < MinY;
}

BOOL sub_70D3C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_70D98((double *)v7, (double *)v9);
}

BOOL sub_70D98(double *a1, double *a2)
{
  CGFloat v3 = a1[5];
  CGFloat v2 = a1[6];
  CGFloat v4 = a1[8];
  CGFloat v17 = a1[7];
  CGFloat v6 = a2[5];
  CGFloat v5 = a2[6];
  CGFloat v8 = a2[7];
  CGFloat v7 = a2[8];
  v19.origin.CGFloat x = v6;
  v19.origin.CGFloat y = v5;
  v19.size.CGFloat width = v8;
  v19.size.CGFloat height = v7;
  double MinY = CGRectGetMinY(v19);
  v20.origin.CGFloat x = v3;
  v20.origin.CGFloat y = v2;
  v20.size.CGFloat width = v17;
  v20.size.CGFloat height = v4;
  double v10 = CGRectGetMinY(v20);
  if (MinY > v10) {
    double v10 = MinY;
  }
  double v18 = v10;
  v21.origin.CGFloat x = v6;
  v21.origin.CGFloat y = v5;
  v21.size.CGFloat width = v8;
  v21.size.CGFloat height = v7;
  double MaxY = CGRectGetMaxY(v21);
  v22.origin.CGFloat x = v3;
  v22.origin.CGFloat y = v2;
  v22.size.CGFloat width = v17;
  v22.size.CGFloat height = v4;
  double v12 = CGRectGetMaxY(v22);
  if (v12 >= MaxY) {
    double v12 = MaxY;
  }
  if (v18 >= v12) {
    goto LABEL_8;
  }
  v23.origin.CGFloat x = v6;
  v23.origin.CGFloat y = v5;
  v23.size.CGFloat width = v8;
  v23.size.CGFloat height = v7;
  double v13 = CGRectGetMaxY(v23);
  v24.origin.CGFloat x = v3;
  v24.origin.CGFloat y = v2;
  v24.size.CGFloat width = v17;
  v24.size.CGFloat height = v4;
  if (vabdd_f64(v13, CGRectGetMaxY(v24)) >= 5.0)
  {
LABEL_8:
    v27.origin.CGFloat x = v6;
    v27.origin.CGFloat y = v5;
    v27.size.CGFloat width = v8;
    v27.size.CGFloat height = v7;
    double MinX = CGRectGetMinY(v27);
    v28.origin.CGFloat x = v3;
    v28.origin.CGFloat y = v2;
    v28.size.CGFloat width = v17;
    v28.size.CGFloat height = v4;
    double v15 = CGRectGetMinY(v28);
  }
  else
  {
    v25.origin.CGFloat x = v6;
    v25.origin.CGFloat y = v5;
    v25.size.CGFloat width = v8;
    v25.size.CGFloat height = v7;
    double MinX = CGRectGetMinX(v25);
    v26.origin.CGFloat x = v3;
    v26.origin.CGFloat y = v2;
    v26.size.CGFloat width = v17;
    v26.size.CGFloat height = v4;
    double v15 = CGRectGetMinX(v26);
  }
  return MinX >= v15;
}

BOOL sub_70F10(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_70F6C((double *)v7, (double *)v9);
}

BOOL sub_70F6C(double *a1, double *a2)
{
  CGFloat v3 = a2[5];
  CGFloat v2 = a2[6];
  CGFloat v4 = a2[8];
  CGFloat v17 = a2[7];
  CGFloat v6 = a1[5];
  CGFloat v5 = a1[6];
  CGFloat v8 = a1[7];
  CGFloat v7 = a1[8];
  v19.origin.CGFloat x = v6;
  v19.origin.CGFloat y = v5;
  v19.size.CGFloat width = v8;
  v19.size.CGFloat height = v7;
  double MinY = CGRectGetMinY(v19);
  v20.origin.CGFloat x = v3;
  v20.origin.CGFloat y = v2;
  v20.size.CGFloat width = v17;
  v20.size.CGFloat height = v4;
  double v10 = CGRectGetMinY(v20);
  if (MinY > v10) {
    double v10 = MinY;
  }
  double v18 = v10;
  v21.origin.CGFloat x = v6;
  v21.origin.CGFloat y = v5;
  v21.size.CGFloat width = v8;
  v21.size.CGFloat height = v7;
  double MaxY = CGRectGetMaxY(v21);
  v22.origin.CGFloat x = v3;
  v22.origin.CGFloat y = v2;
  v22.size.CGFloat width = v17;
  v22.size.CGFloat height = v4;
  double v12 = CGRectGetMaxY(v22);
  if (v12 >= MaxY) {
    double v12 = MaxY;
  }
  if (v18 >= v12) {
    goto LABEL_8;
  }
  v23.origin.CGFloat x = v6;
  v23.origin.CGFloat y = v5;
  v23.size.CGFloat width = v8;
  v23.size.CGFloat height = v7;
  double v13 = CGRectGetMaxY(v23);
  v24.origin.CGFloat x = v3;
  v24.origin.CGFloat y = v2;
  v24.size.CGFloat width = v17;
  v24.size.CGFloat height = v4;
  if (vabdd_f64(v13, CGRectGetMaxY(v24)) >= 5.0)
  {
LABEL_8:
    v27.origin.CGFloat x = v6;
    v27.origin.CGFloat y = v5;
    v27.size.CGFloat width = v8;
    v27.size.CGFloat height = v7;
    double MinX = CGRectGetMinY(v27);
    v28.origin.CGFloat x = v3;
    v28.origin.CGFloat y = v2;
    v28.size.CGFloat width = v17;
    v28.size.CGFloat height = v4;
    double v15 = CGRectGetMinY(v28);
  }
  else
  {
    v25.origin.CGFloat x = v6;
    v25.origin.CGFloat y = v5;
    v25.size.CGFloat width = v8;
    v25.size.CGFloat height = v7;
    double MinX = CGRectGetMinX(v25);
    v26.origin.CGFloat x = v3;
    v26.origin.CGFloat y = v2;
    v26.size.CGFloat width = v17;
    v26.size.CGFloat height = v4;
    double v15 = CGRectGetMinX(v26);
  }
  return MinX >= v15;
}

BOOL sub_710E4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_71140((double *)v7, (double *)v9);
}

BOOL sub_71140(double *a1, double *a2)
{
  CGFloat v3 = a1[5];
  CGFloat v2 = a1[6];
  CGFloat v4 = a1[8];
  CGFloat v17 = a1[7];
  CGFloat v6 = a2[5];
  CGFloat v5 = a2[6];
  CGFloat v8 = a2[7];
  CGFloat v7 = a2[8];
  v19.origin.CGFloat x = v6;
  v19.origin.CGFloat y = v5;
  v19.size.CGFloat width = v8;
  v19.size.CGFloat height = v7;
  double MinY = CGRectGetMinY(v19);
  v20.origin.CGFloat x = v3;
  v20.origin.CGFloat y = v2;
  v20.size.CGFloat width = v17;
  v20.size.CGFloat height = v4;
  double v10 = CGRectGetMinY(v20);
  if (MinY > v10) {
    double v10 = MinY;
  }
  double v18 = v10;
  v21.origin.CGFloat x = v6;
  v21.origin.CGFloat y = v5;
  v21.size.CGFloat width = v8;
  v21.size.CGFloat height = v7;
  double MaxY = CGRectGetMaxY(v21);
  v22.origin.CGFloat x = v3;
  v22.origin.CGFloat y = v2;
  v22.size.CGFloat width = v17;
  v22.size.CGFloat height = v4;
  double v12 = CGRectGetMaxY(v22);
  if (v12 >= MaxY) {
    double v12 = MaxY;
  }
  if (v18 >= v12) {
    goto LABEL_8;
  }
  v23.origin.CGFloat x = v6;
  v23.origin.CGFloat y = v5;
  v23.size.CGFloat width = v8;
  v23.size.CGFloat height = v7;
  double v13 = CGRectGetMaxY(v23);
  v24.origin.CGFloat x = v3;
  v24.origin.CGFloat y = v2;
  v24.size.CGFloat width = v17;
  v24.size.CGFloat height = v4;
  if (vabdd_f64(v13, CGRectGetMaxY(v24)) >= 5.0)
  {
LABEL_8:
    v27.origin.CGFloat x = v6;
    v27.origin.CGFloat y = v5;
    v27.size.CGFloat width = v8;
    v27.size.CGFloat height = v7;
    double MinX = CGRectGetMinY(v27);
    v28.origin.CGFloat x = v3;
    v28.origin.CGFloat y = v2;
    v28.size.CGFloat width = v17;
    v28.size.CGFloat height = v4;
    double v15 = CGRectGetMinY(v28);
  }
  else
  {
    v25.origin.CGFloat x = v6;
    v25.origin.CGFloat y = v5;
    v25.size.CGFloat width = v8;
    v25.size.CGFloat height = v7;
    double MinX = CGRectGetMinX(v25);
    v26.origin.CGFloat x = v3;
    v26.origin.CGFloat y = v2;
    v26.size.CGFloat width = v17;
    v26.size.CGFloat height = v4;
    double v15 = CGRectGetMinX(v26);
  }
  return MinX < v15;
}

BOOL sub_712B4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  CGFloat v2 = *(double *)(a1 + 40);
  CGFloat v3 = *(double *)(a1 + 48);
  CGFloat v4 = *(double *)(a1 + 56);
  CGFloat v5 = *(double *)(a1 + 64);
  CGFloat v6 = *(double *)(a2 + 40);
  CGFloat v7 = *(double *)(a2 + 48);
  CGFloat v8 = *(double *)(a2 + 56);
  CGFloat v9 = *(double *)(a2 + 64);
  BOOL result = CGRectEqualToRect(*(CGRect *)(a1 + 8), *(CGRect *)(a2 + 8));
  if (result)
  {
    v11.origin.CGFloat x = v2;
    v11.origin.CGFloat y = v3;
    v11.size.CGFloat width = v4;
    v11.size.CGFloat height = v5;
    v12.origin.CGFloat x = v6;
    v12.origin.CGFloat y = v7;
    v12.size.CGFloat width = v8;
    v12.size.CGFloat height = v9;
    return CGRectEqualToRect(v11, v12);
  }
  return result;
}

unint64_t sub_71350()
{
  unint64_t result = qword_4003B8;
  if (!qword_4003B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4003B8);
  }
  return result;
}

void *sub_713A4(uint64_t a1, char a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    sub_1169C8(0, v3, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    unint64_t v6 = _swiftEmptyArrayStorage[2];
    uint64_t v7 = 72 * v6 + 48;
    CGFloat v8 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v9 = *(v8 - 4);
      uint64_t v10 = *(v8 - 3);
      uint64_t v11 = *(v8 - 2);
      uint64_t v12 = *(v8 - 1);
      uint64_t v13 = *v8;
      if (a2) {
        uint64_t v14 = *(v8 - 2);
      }
      else {
        uint64_t v14 = *(v8 - 3);
      }
      if (a2) {
        uint64_t v15 = *(v8 - 3);
      }
      else {
        uint64_t v15 = *(v8 - 2);
      }
      if (a2) {
        uint64_t v16 = *v8;
      }
      else {
        uint64_t v16 = *(v8 - 1);
      }
      if (a2) {
        uint64_t v17 = *(v8 - 1);
      }
      else {
        uint64_t v17 = *v8;
      }
      CGRect v21 = result;
      unint64_t v18 = result[3];
      unint64_t v19 = v6 + 1;
      if (v6 >= v18 >> 1)
      {
        sub_1169C8(v18 > 1, v6 + 1, 1);
        unint64_t result = v21;
      }
      result[2] = v19;
      CGRect v20 = (void *)((char *)result + v7);
      *(v20 - 2) = v9;
      *(v20 - 1) = v10;
      void *v20 = v11;
      v20[1] = v12;
      v20[2] = v13;
      v20[3] = v14;
      v20[4] = v15;
      v7 += 72;
      v20[5] = v16;
      v20[6] = v17;
      v8 += 5;
      unint64_t v6 = v19;
      --v3;
    }
    while (v3);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentRectList()
{
  return &type metadata for DocumentRectList;
}

__n128 initializeWithTake for ContentMessage.Selection(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DocumentRectList.Element(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DocumentRectList.Element(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DocumentRectList.Element()
{
  return &type metadata for DocumentRectList.Element;
}

void sub_71570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  (*(void (**)(uint64_t, uint64_t))(a6 + 32))(a4, a6);
  NSString v10 = sub_2FC140();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  NSString v11 = sub_2FC140();
  swift_bridgeObjectRelease();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a4, a6);
  uint64_t v13 = v12 & ~(v12 >> 63);
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v15 = [v14 initWithManifestId:v10 assetId:v11 chapterIndex:v13 spineIndex:(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 120))(a3, a5)];

  if (!v15) {
    __break(1u);
  }
}

id static UIFont.preferredFont(forTextStyle:weight:)(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:a1];
  id v3 = [self preferredFontDescriptorWithTextStyle:a1];
  long long v4 = self;
  [v3 pointSize];
  id v5 = [v4 systemFontOfSize:];
  id v6 = [v2 scaledFontForFont:v5];

  return v6;
}

id sub_717AC(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:a1];
  id v5 = [self preferredFontDescriptorWithTextStyle:a1];
  id v6 = self;
  [v5 pointSize];
  id v7 = [v6 systemFontOfSize:];
  id v8 = [self traitCollectionWithPreferredContentSizeCategory:a2];
  id v9 = [v6 preferredFontForTextStyle:a1 compatibleWithTraitCollection:v8];

  [v9 pointSize];
  id v10 = [v4 scaledFontForFont:v7];

  return v10;
}

BOOL String.isCFI.getter()
{
  v3._uint64_t countAndFlagsBits = 0x2869666362757065;
  v3._object = (void *)0xE800000000000000;
  if (!sub_2FC2E0(v3)) {
    return 0;
  }
  v0._uint64_t countAndFlagsBits = 41;
  v0._object = (void *)0xE100000000000000;

  return sub_2FC2F0(v0);
}

uint64_t String.redactedCFI.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4(&qword_4003C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10._uint64_t countAndFlagsBits = 0x2869666362757065;
  v10._object = (void *)0xE800000000000000;
  if (sub_2FC2E0(v10) && (v11._uint64_t countAndFlagsBits = 41, v11._object = (void *)0xE100000000000000, sub_2FC2F0(v11)))
  {
    sub_371F4(&qword_4003C8);
    sub_44924(&qword_4003D0, &qword_4003C0);
    sub_2FB730();
    v9[2] = a1;
    v9[3] = a2;
    v9[0] = 0x657463616465725BLL;
    v9[1] = 0xEA00000000005D64;
    sub_71EC0();
    sub_71F14();
    sub_2FC720();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v9[4];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_71B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v1 = sub_371F4(&qword_4003F0);
  uint64_t v19 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::String v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_371F4(&qword_4003C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v18 = sub_2FB700();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_371F4(&qword_4003F8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v17 - v13;
  sub_2FB670();
  sub_71F68((uint64_t)v3);
  sub_371F4(&qword_4003C8);
  sub_44924(&qword_400400, &qword_4003F0);
  sub_2FB6E0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  sub_2FB690();
  sub_44924(&qword_400408, &qword_4003F8);
  sub_2FB650();
  id v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  sub_2FB660();
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
}

unint64_t sub_71EC0()
{
  unint64_t result = qword_4003D8;
  if (!qword_4003D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4003D8);
  }
  return result;
}

unint64_t sub_71F14()
{
  unint64_t result = qword_4003E0;
  if (!qword_4003E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4003E0);
  }
  return result;
}

uint64_t sub_71F68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_371F4(&qword_4003F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  uint64_t v47 = v2;
  __chkstk_darwin(v1);
  CGFloat v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  CGFloat v43 = (char *)&v39 - v5;
  __chkstk_darwin(v6);
  CGFloat v44 = (char *)&v39 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = sub_2FB700();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  uint64_t v53 = v12;
  __chkstk_darwin(v11);
  id v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_371F4(&qword_400410);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2FB680();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  CGRect v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_371F4(&qword_400418);
  uint64_t v51 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  CGRect v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v49 = (char *)&v39 - v26;
  uint64_t v56 = 91;
  unint64_t v57 = 0xE100000000000000;
  unint64_t v27 = sub_67B40();
  sub_2FB650();
  sub_2FB710();
  uint64_t v28 = sub_2FB720();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
  sub_2FB670();
  sub_72CCC();
  sub_2FB6F0();
  sub_72D24((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  long long v29 = *(void (**)(char *, uint64_t))(v53 + 8);
  v53 += 8;
  CGRect v50 = v29;
  v29(v14, v52);
  sub_2FB6A0();
  sub_44924(&qword_400428, &qword_400418);
  sub_2FB650();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
  v51 += 8;
  uint64_t v42 = v30;
  uint64_t v40 = v22;
  v30(v24, v22);
  uint64_t v54 = 93;
  unint64_t v55 = 0xE100000000000000;
  unint64_t v39 = v27;
  sub_2FB650();
  uint64_t v54 = v58;
  unint64_t v55 = v59;
  CGFloat v41 = v10;
  sub_2FB660();
  swift_bridgeObjectRelease();
  sub_2FB670();
  sub_44924(&qword_400400, &qword_4003F0);
  uint64_t v31 = v43;
  uint64_t v32 = v46;
  sub_2FB6D0();
  uint64_t v33 = v45;
  sub_2FB6D0();
  CGRect v34 = v44;
  sub_2FB6C0();
  CGRect v35 = *(void (**)(char *, uint64_t))(v47 + 8);
  v35(v33, v32);
  v35(v31, v32);
  v50(v14, v52);
  uint64_t v37 = v56;
  unint64_t v36 = v57;
  sub_2FB670();
  uint64_t v54 = v37;
  unint64_t v55 = v36;
  sub_2FB6D0();
  sub_2FB6D0();
  sub_2FB6C0();
  v35(v33, v32);
  v35(v31, v32);
  v50(v14, v52);
  swift_bridgeObjectRelease();
  v35(v34, v32);
  v35(v41, v32);
  return v42(v49, v40);
}

uint64_t String.cfiSpineIndex.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2FCBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23._uint64_t countAndFlagsBits = 0x2869666362757065;
  v23._object = (void *)0xE800000000000000;
  if (!sub_2FC2E0(v23)) {
    return 0;
  }
  v24._uint64_t countAndFlagsBits = 41;
  v24._object = (void *)0xE100000000000000;
  if (!sub_2FC2F0(v24)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_67A3C(8uLL, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_2FCC20();
  if (v10) {
    unint64_t v11 = v8;
  }
  else {
    unint64_t v11 = result;
  }
  if (v11 >> 14 < v8 >> 14)
  {
    __break(1u);
    return result;
  }
  sub_2FCC50();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_2FC210();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  v22[0] = v12;
  v22[1] = v14;
  sub_67684();
  uint64_t v15 = sub_2FCCF0();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16) < 2uLL)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2FC210();
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone((Class)NSScanner);
  NSString v17 = sub_2FC140();
  swift_bridgeObjectRelease();
  id v18 = [v16 initWithString:v17];

  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for NSScanner.NumberRepresentation.decimal(_:), v4);
  uint64_t v19 = sub_2FCBB0();
  LOBYTE(v16) = v20;

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = 0;
  if ((v16 & 1) == 0 && (v19 & 1) == 0)
  {
    if (v19 >= 0) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v19 + 1;
    }
    return (v21 >> 1) - 1;
  }
  return result;
}

uint64_t String.cfiManifestID.getter(uint64_t a1, unint64_t a2)
{
  v17._uint64_t countAndFlagsBits = 0x2869666362757065;
  v17._object = (void *)0xE800000000000000;
  if (!sub_2FC2E0(v17)) {
    return 0;
  }
  v18._uint64_t countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  if (!sub_2FC2F0(v18)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_67A3C(8uLL, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_2FCC20();
  if (v6) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = result;
  }
  if (v7 >> 14 >= v4 >> 14)
  {
    sub_2FCC50();
    swift_bridgeObjectRelease();
    sub_2FC210();
    swift_bridgeObjectRelease();
    sub_67684();
    uint64_t v8 = sub_2FCCF0();
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 16) >= 2uLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_2FC210();
      id v9 = objc_allocWithZone((Class)NSScanner);
      NSString v10 = sub_2FC140();
      swift_bridgeObjectRelease();
      id v11 = [v9 initWithString:v10];

      sub_72C68();
      LOBYTE(v10) = sub_2FCCE0();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {

        return 0;
      }
      v19._uint64_t countAndFlagsBits = 91;
      v19._object = (void *)0xE100000000000000;
      sub_2FCB90(v19);
      swift_bridgeObjectRelease();
      v20._uint64_t countAndFlagsBits = 93;
      v20._object = (void *)0xE100000000000000;
      uint64_t v12 = sub_2FCB90(v20);
      if (!v13)
      {

        return v12;
      }
      uint64_t v12 = sub_2FCCB0();
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();

      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0) {
        uint64_t v16 = v12 & 0xFFFFFFFFFFFFLL;
      }
      if (v16) {
        return v12;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t String.isUnknownLocation.getter(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x800000000030D980) {
    return 1;
  }
  else {
    return sub_2FD1F0();
  }
}

unint64_t sub_72C68()
{
  unint64_t result = qword_4003E8;
  if (!qword_4003E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4003E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CFI()
{
  return &type metadata for CFI;
}

unint64_t sub_72CCC()
{
  unint64_t result = qword_400420;
  if (!qword_400420)
  {
    sub_2FB680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400420);
  }
  return result;
}

uint64_t sub_72D24(uint64_t a1)
{
  uint64_t v2 = sub_371F4(&qword_400410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_72D84()
{
  v1._uint64_t countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  sub_2FC260(v2);
  v3._uint64_t countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 62;
  v4._object = (void *)0xE100000000000000;
  sub_2FC260(v4);
  v5._uint64_t countAndFlagsBits = 60;
  v5._object = (void *)0xE100000000000000;
  sub_2FC260(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_72E64(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_2FD1F0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    id v9 = a2 + 7;
    for (int64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_2FD1F0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_72F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a2 + 64;
    for (uint64_t i = a1 + 64; *(void *)(i - 32) == *(void *)(v3 - 32); i += 40)
    {
      BOOL result = CGRectEqualToRect(*(CGRect *)(i - 24), *(CGRect *)(v3 - 24));
      if (!result) {
        return result;
      }
      v3 += 40;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_72FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a2 + 48);
    Swift::String v4 = (unsigned char *)(a1 + 48);
    do
    {
      if (*v4 == 1)
      {
        if ((*v3 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*v3) {
          return 0;
        }
        if (*((void *)v4 - 2) != *((void *)v3 - 2) || *((void *)v4 - 1) != *((void *)v3 - 1)) {
          return 0;
        }
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_7302C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (!CGRectEqualToRect(*(CGRect *)(a1 + 32), *(CGRect *)(a2 + 32))) {
    return 0;
  }
  uint64_t v5 = a2 + 88;
  uint64_t v6 = a1 + 88;
  do
  {
    BOOL v7 = --v2 == 0;
    if (!v2) {
      break;
    }
    uint64_t v8 = v5 + 32;
    uint64_t v9 = v6 + 32;
    BOOL v10 = CGRectEqualToRect(*(CGRect *)(v6 - 24), *(CGRect *)(v5 - 24));
    uint64_t v6 = v9;
    uint64_t v5 = v8;
  }
  while (v10);
  return v7;
}

uint64_t sub_730DC(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2 = a1[1].i64[0];
  if (v2 != a2[1].i64[0]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1 + 2;
  Swift::String v4 = a2 + 2;
  uint64_t v5 = v2 - 1;
  do
  {
    int64x2_t v6 = *v3++;
    int64x2_t v7 = v6;
    int64x2_t v8 = *v4++;
    int32x2_t v9 = vmovn_s64(vceqq_s64(v7, v8));
    BOOL v11 = v5-- != 0;
  }
  while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v11);
  return v9.i8[0] & v9.i8[4] & 1;
}

BOOL sub_7314C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  int64x2_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_731C0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  CGFloat v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  BOOL v11 = (char *)&v26 - v10;
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_2FC6C0();
  if (!v18) {
    return sub_2FC440();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_2FCEC0();
  uint64_t v32 = sub_2FCED0();
  sub_2FCE70(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_2FC690();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    CGRect v34 = (void (**)(char *))(v33 + 2);
    CGRect v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_2FC710();
      uint64_t v22 = v11;
      Swift::String v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_2FCEB0();
      sub_2FC6D0();
      --v19;
      BOOL v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

void SpreadPaginationEntity.Column.location.getter(uint64_t a1@<X8>)
{
  char v2 = *((unsigned char *)v1 + 16);
  long long v3 = 0uLL;
  if ((v2 & 1) == 0) {
    long long v3 = *v1;
  }
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v2;
}

void SpreadPaginationEntity.lastLocation.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (!v2) {
    goto LABEL_10;
  }
  long long v3 = (unsigned char *)(*(void *)v1 + 24 * v2 + 24);
  uint64_t v4 = *(void *)(*(void *)v1 + 16);
  while (*v3 == 1)
  {
    v3 -= 24;
    if (!--v4) {
      goto LABEL_10;
    }
  }
  if (v4)
  {
    if (v4 > v2)
    {
      __break(1u);
    }
    else if ((*v3 & 1) == 0)
    {
      *(_OWORD *)a1 = *((_OWORD *)v3 - 1);
      *(unsigned char *)(a1 + 16) = 0;
      return;
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
  }
}

void SpreadPaginationEntity.firstLocation.getter(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (!v2) {
    goto LABEL_7;
  }
  unint64_t v3 = 0;
  uint64_t v4 = (unsigned char *)(*(void *)v1 + 48);
  while (*v4 == 1)
  {
    ++v3;
    v4 += 24;
    if (v2 == v3) {
      goto LABEL_7;
    }
  }
  if (v2 == v3)
  {
LABEL_7:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
    return;
  }
  if (v3 >= v2)
  {
    __break(1u);
  }
  else if ((*v4 & 1) == 0)
  {
    *(_OWORD *)a1 = *((_OWORD *)v4 - 1);
    *(unsigned char *)(a1 + 16) = 0;
    return;
  }
  __break(1u);
}

uint64_t SpreadPaginationEntity.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SpreadPaginationEntity.Column.description.getter()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 1600085855;
  }
  sub_72D84();
  return 0;
}

void SpreadPaginationEntity.Column.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16))
  {
    Swift::UInt v1 = 0;
  }
  else
  {
    Swift::UInt v2 = *(void *)v0;
    Swift::UInt v1 = *(void *)(v0 + 8);
    sub_2FD330(1uLL);
    sub_2FD330(v2);
  }
  sub_2FD330(v1);
}

BOOL static SpreadPaginationEntity.Column.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16) == 1) {
    return (*(unsigned char *)(a2 + 16) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 16)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

Swift::Int SpreadPaginationEntity.Column.hashValue.getter()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_2FD320();
  Swift::UInt v4 = 0;
  if ((v3 & 1) == 0)
  {
    sub_2FD330(1uLL);
    sub_2FD330(v1);
    Swift::UInt v4 = v2;
  }
  sub_2FD330(v4);
  return sub_2FD370();
}

Swift::Int sub_7382C()
{
  Swift::UInt v2 = *(void *)v0;
  Swift::UInt v1 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_2FD320();
  if (v3)
  {
    Swift::UInt v1 = 0;
  }
  else
  {
    sub_2FD330(1uLL);
    sub_2FD330(v2);
  }
  sub_2FD330(v1);
  return sub_2FD370();
}

uint64_t static SpreadPaginationEntity.initial(location:columnCount:configuration:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a3;
    int64x2_t v6 = a5;
    long long v14 = *a1;
    uint64_t v7 = sub_73D24(0, 0, 1, a2 - 1);
    swift_bridgeObjectRetain();
    uint64_t v9 = v7;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = sub_49C54(0, v7[2] + 1, 1, v7);
LABEL_3:
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_49C54((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  v9[2] = v11 + 1;
  uint64_t v12 = &v9[3 * v11];
  *((_OWORD *)v12 + 2) = v14;
  *((unsigned char *)v12 + 48) = 0;
  swift_bridgeObjectRelease();
  *int64x2_t v6 = v9;
  v6[1] = v5;
  v6[2] = a4;

  return swift_bridgeObjectRetain();
}

uint64_t static SpreadPaginationEntity.nonInitial<A>(locations:columnCount:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14 = *(void *)(a5 - 8);
  __n128 v15 = __chkstk_darwin(a1);
  Swift::String v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a1, v18, v15);
  if (a2 < 1)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v20 = sub_2FC6C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, a5);
  if (v20 < 1 || v20 > a2) {
    goto LABEL_10;
  }
  uint64_t v23 = sub_731C0((void (*)(char *, char *))sub_73B6C, 0, a5, (uint64_t)&type metadata for SpreadPaginationEntity.Column, (uint64_t)&type metadata for Never, a6, (uint64_t)&protocol witness table for Never, v21);
  uint64_t result = sub_2FC6C0();
  if (!__OFSUB__(a2, result))
  {
    uint64_t v24 = sub_73D24(0, 0, 1, a2 - result);
    uint64_t v25 = v23;
    sub_73DF0((uint64_t)v24);
    *a7 = v25;
    a7[1] = a3;
    a7[2] = a4;
    return swift_bridgeObjectRetain();
  }
LABEL_11:
  __break(1u);
  return result;
}

__n128 sub_73B6C@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = 0;
  return result;
}

Swift::Bool __swiftcall SpreadPaginationEntity.contains(_:)(BookEPUB::PageLocation a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = (unsigned char *)(*(void *)v1 + 48);
        *i == 1
     || *((void *)i - 2) != *(void *)a1.documentOrdinal
     || *((void *)i - 1) != *(void *)(a1.documentOrdinal + 8);
        i += 24)
  {
    if (!--v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t SpreadPaginationEntity.description.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_105C18(v0);
  swift_bridgeObjectRelease();
  sub_371F4((uint64_t *)&unk_400CB0);
  sub_49854();
  uint64_t v1 = sub_2FC0F0();
  char v3 = v2;
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = v1;
  v5._object = v3;
  sub_2FC260(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 93;
  v6._object = (void *)0xE100000000000000;
  sub_2FC260(v6);
  return 91;
}

uint64_t static SpreadPaginationEntity.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_72FB8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }

  return sub_2FD1F0();
}

void *sub_73D24(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a4 < 0)
  {
    __n128 result = (void *)sub_2FD000();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a4;
    if (a4)
    {
      __n128 result = (void *)sub_2FC450();
      result[2] = v4;
      uint64_t v9 = 4;
      do
      {
        unint64_t v10 = &result[v9];
        *unint64_t v10 = a1;
        v10[1] = a2;
        *((unsigned char *)v10 + 16) = a3 & 1;
        v9 += 3;
        --v4;
      }
      while (v4);
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_73DF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_49C54(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[3 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[3 * v2] && (unint64_t)v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 24 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_73F40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_49E88(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_74094(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_4B010(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_371F4(&qword_3FE818);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_741F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_49D78(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_74340(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2FD030();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2FD030();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2FCE30();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_11B944(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_2FD030();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_2FC410();
}

uint64_t sub_7450C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_4A34C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[5 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[5 * v2] && (unint64_t)v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 40 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

unint64_t sub_74660()
{
  unint64_t result = qword_400430;
  if (!qword_400430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400430);
  }
  return result;
}

uint64_t destroy for SpreadPaginationEntity()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s8BookEPUB22SpreadPaginationEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SpreadPaginationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SpreadPaginationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpreadPaginationEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpreadPaginationEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpreadPaginationEntity()
{
  return &type metadata for SpreadPaginationEntity;
}

__n128 initializeWithTake for ContentMessage.ReadAloud.Payload(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SpreadPaginationEntity.Column(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SpreadPaginationEntity.Column(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_748E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_748FC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpreadPaginationEntity.Column()
{
  return &type metadata for SpreadPaginationEntity.Column;
}

uint64_t WKWebView.identifier.getter()
{
  id v1 = [v0 be_identifier];
  uint64_t v2 = sub_2FC180();

  return v2;
}

void ContentLoaderView.setDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  [v4 setDelegate:a1];
}

void ContentLoaderView.addPeripheralView(_:length:)(void *a1, double a2)
{
  char v3 = v2;
  [v2 addSubview:a1];
  unint64_t v6 = self;
  sub_371F4((uint64_t *)&unk_400460);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_32D620;
  id v8 = [a1 leftAnchor];
  id v9 = [v3 leftAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:-a2];

  *(void *)(v7 + 32) = v10;
  id v11 = [a1 topAnchor];
  id v12 = [v3 topAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12 constant:-a2];

  *(void *)(v7 + 40) = v13;
  id v14 = [a1 rightAnchor];
  id v15 = [v3 rightAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:a2];

  *(void *)(v7 + 48) = v16;
  id v17 = [a1 bottomAnchor];
  id v18 = [v3 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:a2];

  *(void *)(v7 + 56) = v19;
  sub_2FC410();
  sub_39F90(0, &qword_406560);
  Class isa = sub_2FC3D0().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:isa];
}

Swift::Void __swiftcall ContentLoaderView.removePeripheralView(_:)(UIView a1)
{
}

uint64_t ContentLoaderView.prepareForReuse(completion:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t ContentLoaderView.shortDescription.getter()
{
  id v1 = [v0 description];
  uint64_t v2 = sub_2FC180();

  return v2;
}

id sub_74D1C()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_400440);
  sub_60044(v0, (uint64_t)qword_400440);
  id result = _BookEPUBLog();
  if (result) {
    return (id)sub_2FB8B0();
  }
  __break(1u);
  return result;
}

id ContentLoaderView.apply(layoutProvider:paginationOptions:cfiOptions:cleanupOptions:stylesheetSet:styleManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
  sub_2FC9C0();

  return [v2 setFrame:];
}

Swift::Void __swiftcall WKWebView.preparingForReuse()()
{
  [v0 be_preparingForReuse];
}

Swift::Void __swiftcall WKWebView.fontRegistrationCompleted(fontRegistrationSuccess:)(Swift::Bool fontRegistrationSuccess)
{
  [v1 be_fontRegistrationCompleted:fontRegistrationSuccess];
}

Swift::Void __swiftcall WKWebView.processingContentViewForHost()()
{
  [v0 be_processingContentViewForHost];
}

Swift::Void __swiftcall WKWebView.returningContentViewToPool()()
{
  [v0 be_returningContentViewToPool];
}

Swift::Void __swiftcall WKWebView.discardingContentView()()
{
  [v0 be_discardingContentView];
}

Swift::Bool __swiftcall WKWebView.fontRegistered(font:)(Swift::String_optional font)
{
  if (!font.value._object) {
    return 1;
  }
  NSString v2 = sub_2FC140();
  unsigned __int8 v3 = [v1 be_isFontRegistered:v2];

  return v3;
}

void WKWebView.registerFont(styleManager:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[4] = a2;
  v6[5] = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_74F60;
  v6[3] = &unk_3C4A90;
  int64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  [v3 be_configureFontWithStyleManager:a1 completion:v5];
  _Block_release(v5);
}

uint64_t sub_74F60(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_74FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_74FC4()
{
  return swift_release();
}

id WKWebView.setContentOffset(offset:bypassingJS:)(char a1)
{
  return [v1 be_setContentOffset:a1 & 1 bypassingJS:];
}

uint64_t WKWebView.update(contentBlockingRules:)(uint64_t a1)
{
  uint64_t v3 = sub_371F4(&qword_400470);
  __chkstk_darwin(v3 - 8);
  int64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2FC570();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_2FC540();
  id v7 = v1;
  uint64_t v8 = sub_2FC530();
  id v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  _OWORD v9[4] = a1;
  void v9[5] = v7;
  sub_75748((uint64_t)v5, (uint64_t)&unk_400480, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_75104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  unsigned char v5[16] = a5;
  sub_2FC540();
  v5[17] = sub_2FC530();
  uint64_t v7 = sub_2FC4E0();
  v5[18] = v7;
  v5[19] = v6;
  return _swift_task_switch(sub_7519C, v7, v6);
}

uint64_t sub_7519C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  id v3 = [self sharedInstance];
  v0[20] = v3;
  v0[2] = v0;
  v0[7] = v0 + 22;
  v0[3] = sub_752D4;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_200624;
  v0[13] = &unk_3C4F78;
  v0[14] = v4;
  [v3 applyContentBlockingRule:v2 toWebView:v1 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_752D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 168) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  if (v2) {
    int64_t v5 = sub_7546C;
  }
  else {
    int64_t v5 = sub_75404;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_75404()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_7546C()
{
  uint64_t v1 = (void *)v0[20];
  swift_release();
  swift_willThrow();

  if (qword_3FD6E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2FB8A0();
  sub_60044(v2, (uint64_t)qword_400440);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_2FB880();
  os_log_type_t v4 = sub_2FC7B0();
  if (os_log_type_enabled(v3, v4))
  {
    int64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v5 = 138543362;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v7;
    sub_2FCC70();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_7BFC0, v3, v4, "Failed to apply content blocking rules: %{public}@", v5, 0xCu);
    sub_371F4(&qword_400A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_75688(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_79BAC;
  return sub_75104(a1, v4, v5, v7, v6);
}

uint64_t sub_75748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2FC570();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2FC560();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_5BE90(a1, &qword_400470);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2FC4E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_758F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2FC570();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2FC560();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_5BE90(a1, &qword_400470);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2FC4E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_371F4(&qword_4004F8);
  return swift_task_create();
}

uint64_t WKWebView.availableForReuse.getter()
{
  return [v0 be_hasPendingOperations] ^ 1;
}

id WKWebView.availableForReuse.setter(char a1)
{
  return [v1 setBe_hasPendingOperations:(a1 & 1) == 0];
}

id (*WKWebView.availableForReuse.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = [v1 be_hasPendingOperations] ^ 1;
  return sub_75B40;
}

id sub_75B40(uint64_t a1)
{
  return [*(id *)a1 setBe_hasPendingOperations:((*(unsigned char *)(a1 + 8) & 1) == 0)];
}

id WKWebView.zoomScale.getter()
{
  return [v0 be_viewScale];
}

id WKWebView.zoomScale.setter()
{
  return [v0 setBe_viewScale:];
}

id (*WKWebView.zoomScale.modify(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  [v1 be_viewScale];
  *a1 = v3;
  return sub_75BD4;
}

id sub_75BD4(uint64_t a1)
{
  return [*(id *)(a1 + 8) setBe_viewScale:*(double *)a1];
}

void WKWebView.selection.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = [v1 be_selectedText];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_2FC180();
    uint64_t v8 = v7;

    id v9 = [v2 be_selectionRects];
    if (v9)
    {
      uint64_t v10 = v9;
      sub_39F90(0, (unint64_t *)&unk_400488);
      unint64_t v11 = sub_2FC3F0();

      id v12 = v2;
      id v13 = sub_78E2C(v11, v12);
      swift_bridgeObjectRelease();

      if (v13[2])
      {
        *a1 = v6;
        a1[1] = v8;
        a1[2] = (uint64_t)v13;
        return;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

id WKWebView.setDelegate(_:)(uint64_t a1)
{
  id v3 = [v1 be_navigationHandler];
  if (v3)
  {
    id v4 = v3;
    [v3 setDelegate:a1];
  }
  id v5 = [v1 scrollView];
  [v5 setDelegate:a1];

  return [v1 setBe_textInteractionAssistantDelegate:a1];
}

uint64_t sub_75DAC()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &unk_400458);
  swift_endAccess();
  if (v1)
  {
    sub_2FCD00();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_57588((uint64_t)v4, (uint64_t)v5);
  if (v6)
  {
    sub_2FBA80();
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_5BE90((uint64_t)v5, (uint64_t *)&unk_4016F0);
    return 0;
  }
}

void WKWebView.prepareForReuse(completion:)(uint8_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_371F4((uint64_t *)&unk_4000D0);
  __chkstk_darwin(v6 - 8);
  size_t v105 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_371F4(&qword_400498);
  uint64_t v100 = *(void *)(v8 - 8);
  uint64_t v101 = v8;
  __chkstk_darwin(v8);
  uint64_t v99 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_371F4(&qword_4004A0);
  uint64_t v103 = *(void *)(v10 - 8);
  uint64_t v104 = v10;
  __chkstk_darwin(v10);
  unint64_t v102 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_371F4(&qword_4004A8);
  int64_t v107 = *(uint8_t **)(v12 - 8);
  *(void *)&double v13 = __chkstk_darwin(v12).n128_u64[0];
  uint64_t v106 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = &stru_3F4000;
  id v16 = [v2 be_navigationHandler:v13];
  id v17 = &OBJC_PROTOCOL___BEJavascriptProvider;
  if (v16)
  {
    id v18 = v16;
    if (qword_3FD6E0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_2FB8A0();
    sub_60044(v19, (uint64_t)qword_400440);
    id v20 = v2;
    uint64_t v21 = sub_2FB880();
    os_log_type_t v22 = sub_2FC7A0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v98 = a2;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v97 = v12;
      aBlock[0] = v25;
      char v96 = a1;
      *(_DWORD *)uint64_t v24 = 136315138;
      id v26 = [v20 be_identifier:v24 + 4];
      uint64_t v27 = sub_2FC180();
      unint64_t v95 = v3;
      unint64_t v29 = v28;

      id v15 = &stru_3F4000;
      uint64_t v30 = v27;
      id v17 = &OBJC_PROTOCOL___BEJavascriptProvider;
      uint64_t v109 = sub_38EF0(v30, v29, (uint64_t *)aBlock);
      a1 = v96;
      sub_2FCC70();

      uint64_t v3 = v95;
      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v21, v22, "Requesting Cancelation of current #reuse navigation for WebView: %s", v24, 0xCu);
      swift_arrayDestroy();
      uint64_t v12 = v97;
      swift_slowDealloc();
      a2 = v98;
      swift_slowDealloc();
    }
    else
    {
    }
    [v18 requestCancelationOfCurrentNavigation];
  }
  if (objc_msgSend(v3, "be_hasPendingOperations"))
  {
    if (v17[24].class_meths != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v31 = sub_2FB8A0();
    sub_60044(v31, (uint64_t)qword_400440);
    id v32 = v3;
    uint64_t v33 = sub_2FB880();
    os_log_type_t v34 = sub_2FC7A0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v98 = a2;
      CGRect v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v97 = v12;
      aBlock[0] = v36;
      *(_DWORD *)CGRect v35 = 136315138;
      char v96 = v35 + 4;
      uint64_t v37 = a1;
      id v38 = [v32 be_identifier];
      uint64_t v39 = sub_2FC180();
      unint64_t v41 = v40;

      a1 = v37;
      uint64_t v109 = sub_38EF0(v39, v41, (uint64_t *)aBlock);
      a2 = v98;
      sub_2FCC70();

      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v33, v34, "Setting up be_hasPendingOperations #reuse observer in WebView: %s", v35, 0xCu);
      swift_arrayDestroy();
      uint64_t v12 = v97;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_getKeyPath();
    uint64_t v58 = v99;
    sub_2FB370();
    swift_release();
    sub_44924((unint64_t *)&unk_4004B0, &qword_400498);
    uint64_t v59 = v101;
    CGRect v60 = v102;
    sub_2FBCC0();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v59);
    sub_39F90(0, (unint64_t *)&qword_401700);
    aBlock[0] = (id)sub_2FC8C0();
    uint64_t v61 = sub_2FC870();
    uint64_t v62 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v105, 1, 1, v61);
    sub_44924((unint64_t *)&unk_4004C0, &qword_4004A0);
    sub_52CFC();
    uint64_t v63 = v106;
    uint64_t v64 = v104;
    sub_2FBC80();
    sub_5BE90(v62, (uint64_t *)&unk_4000D0);

    (*(void (**)(char *, uint64_t))(v103 + 8))(v60, v64);
    uint64_t v65 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v66 = (void *)swift_allocObject();
    v66[2] = v65;
    v66[3] = a1;
    v66[4] = a2;
    sub_44924(&qword_4004D0, &qword_4004A8);
    swift_retain();
    uint64_t v67 = (void *)sub_2FBCF0();
    swift_release();
    (*((void (**)(char *, uint64_t))v107 + 1))(v63, v12);
    swift_beginAccess();
    objc_setAssociatedObject(v32, &unk_400458, v67, &stru_2E8.segname[9]);
    swift_endAccess();
    swift_release();
  }
  else
  {
    uint64_t v42 = (uint8_t *)[v3 v15[105].name];
    class_meths = v17[24].class_meths;
    if (v42)
    {
      CGFloat v44 = v42;
      if (class_meths != (__objc2_meth_list *)-1) {
        swift_once();
      }
      uint64_t v45 = sub_2FB8A0();
      sub_60044(v45, (uint64_t)qword_400440);
      id v46 = v3;
      uint64_t v47 = sub_2FB880();
      os_log_type_t v48 = sub_2FC7A0();
      if (os_log_type_enabled(v47, v48))
      {
        char v96 = a1;
        uint64_t v49 = swift_slowAlloc();
        int64_t v107 = v44;
        CGRect v50 = (uint8_t *)v49;
        uint64_t v51 = (char *)swift_slowAlloc();
        uint64_t v98 = a2;
        uint64_t v106 = v51;
        aBlock[0] = v51;
        *(_DWORD *)CGRect v50 = 136315138;
        size_t v105 = (char *)(v50 + 4);
        uint64_t v52 = v17;
        uint64_t v53 = v3;
        id v54 = [v46 be_identifier];
        uint64_t v55 = sub_2FC180();
        unint64_t v57 = v56;

        uint64_t v3 = v53;
        id v17 = v52;
        uint64_t v109 = sub_38EF0(v55, v57, (uint64_t *)aBlock);
        sub_2FCC70();

        a1 = v96;
        swift_bridgeObjectRelease();
        _os_log_impl(&def_7BFC0, v47, v48, "Preparing NavigationHandler for #reuse for WebView: %s", v50, 0xCu);
        swift_arrayDestroy();
        a2 = v98;
        swift_slowDealloc();
        CGFloat v44 = v107;
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v80 = (void *)swift_allocObject();
      v80[2] = v46;
      v80[3] = a1;
      v80[4] = a2;
      aBlock[4] = sub_79070;
      aBlock[5] = v80;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_77340;
      aBlock[3] = &unk_3C4B08;
      uint64_t v81 = _Block_copy(aBlock);
      id v82 = v46;
      swift_retain();
      swift_release();
      [(uint8_t *)v44 performAfterLoadCompleteOrFailure:v81];
      _Block_release(v81);
    }
    else
    {
      if (class_meths != (__objc2_meth_list *)-1) {
        swift_once();
      }
      uint64_t v68 = sub_2FB8A0();
      sub_60044(v68, (uint64_t)qword_400440);
      id v69 = v3;
      uint64_t v70 = sub_2FB880();
      os_log_type_t v71 = sub_2FC7B0();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 136315138;
        int64_t v107 = v72 + 4;
        aBlock[0] = v73;
        id v74 = [v69 be_identifier];
        uint64_t v75 = v3;
        uint64_t v76 = sub_2FC180();
        unint64_t v78 = v77;

        uint64_t v79 = v76;
        uint64_t v3 = v75;
        uint64_t v109 = sub_38EF0(v79, v78, (uint64_t *)aBlock);
        sub_2FCC70();

        swift_bridgeObjectRelease();
        _os_log_impl(&def_7BFC0, v70, v71, "Missing Navigation handler in prepareFor#Reuse for WebView: %s", v72, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v17 = &OBJC_PROTOCOL___BEJavascriptProvider;
    }
    if (v17[24].class_meths != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v83 = sub_2FB8A0();
    sub_60044(v83, (uint64_t)qword_400440);
    id v84 = v3;
    uint64_t v85 = sub_2FB880();
    os_log_type_t v86 = sub_2FC7A0();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 136315138;
      id v88 = [v84 be_identifier];
      uint64_t v89 = sub_2FC180();
      unint64_t v91 = v90;

      uint64_t v109 = sub_38EF0(v89, v91, (uint64_t *)aBlock);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v85, v86, "Load .aboutBlank in #reuse WebView: %s", v87, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    [v84 be_willLoadAboutBlank];
    if (qword_3FD6E8 != -1) {
      swift_once();
    }
    uint64_t v92 = sub_2FB1F0();
    sub_60044(v92, (uint64_t)qword_416FE8);
    Class v93 = sub_2FB1C0();
  }
}

uint64_t sub_76CF4(uint64_t a1, void (*a2)(__n128), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a5;
  v28[1] = a4;
  uint64_t v8 = sub_2FBFA0();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2FBFD0();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  __chkstk_darwin(v11);
  double v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2FC000();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v28 - v20;
  a2(v19);
  sub_39F90(0, (unint64_t *)&qword_401700);
  os_log_type_t v22 = (void *)sub_2FC8C0();
  sub_2FBFF0();
  sub_2FC030();
  unint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v17, v14);
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v31;
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = a6;
  aBlock[4] = sub_79A8C;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5C418;
  aBlock[3] = &unk_3C4F28;
  id v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_2FBFB0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_79A98();
  sub_371F4(&qword_401710);
  sub_44924((unint64_t *)&qword_400530, &qword_401710);
  sub_2FCD20();
  sub_2FC860();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  return ((uint64_t (*)(char *, uint64_t))v29)(v21, v30);
}

uint64_t sub_770D8(uint64_t a1, uint64_t (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    if (qword_3FD6E0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_2FB8A0();
    sub_60044(v5, (uint64_t)qword_400440);
    id v6 = v4;
    uint64_t v7 = sub_2FB880();
    os_log_type_t v8 = sub_2FC7A0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v16 = a2;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      id v10 = [v6 be_identifier];
      uint64_t v11 = sub_2FC180();
      unint64_t v13 = v12;

      uint64_t v14 = v11;
      a2 = v16;
      sub_38EF0(v14, v13, &v17);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v7, v8, "NavigationHandler completed #reuse .aboutBlank load for WebView: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    [v6 setBe_hasPendingOperations:0];
    [v6 setBe_estimatedContentSizeValue:0];
    [v6 setBe_requestedContentOffset:0];
    [v6 be_completedLoad];
  }
  return a2();
}

uint64_t sub_77340(uint64_t a1, void *a2, void *aBlock)
{
  id v4 = *(void (**)(void *, uint64_t (*)(), uint64_t))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  swift_retain();
  id v7 = a2;
  v4(a2, sub_79A40, v6);
  swift_release();

  return swift_release();
}

void sub_773F0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  os_log_type_t v8 = (void *)Strong;
  if (qword_3FD6E0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_2FB8A0();
  sub_60044(v9, (uint64_t)qword_400440);
  id v10 = v8;
  uint64_t v11 = sub_2FB880();
  os_log_type_t v12 = sub_2FC7A0();
  if (!os_log_type_enabled(v11, v12))
  {

    if ((v6 & 1) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    id v19 = v10;
    uint64_t v20 = sub_2FB880();
    os_log_type_t v21 = sub_2FC7A0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      id v23 = [v19 be_identifier];
      uint64_t v24 = sub_2FC180();
      unint64_t v26 = v25;

      sub_38EF0(v24, v26, v28);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 1024;
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v20, v21, "WebView: %s not available for reuse yet -- availableFor#Reuse: %{BOOL}d", (uint8_t *)v22, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  uint64_t v27 = a3;
  uint64_t v13 = swift_slowAlloc();
  v28[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v13 = 67109378;
  sub_2FCC70();
  *(_WORD *)(v13 + 8) = 2080;
  id v14 = [v10 be_identifier];
  char v15 = v6;
  uint64_t v16 = sub_2FC180();
  unint64_t v18 = v17;

  sub_38EF0(v16, v18, v28);
  sub_2FCC70();

  swift_bridgeObjectRelease();
  _os_log_impl(&def_7BFC0, v11, v12, "be_hasPendingOperations notify Observer availableFor#Reuse:%{BOOL}d in WebView: %s", (uint8_t *)v13, 0x12u);
  swift_arrayDestroy();
  swift_slowDealloc();
  a3 = v27;
  swift_slowDealloc();

  if (v15) {
    goto LABEL_10;
  }
LABEL_6:
  if (sub_75DAC())
  {
    sub_2FBA70();
    swift_release();
  }
  swift_beginAccess();
  objc_setAssociatedObject(v10, &unk_400458, 0, &stru_2E8.segname[9]);
  swift_endAccess();
  WKWebView.prepareForReuse(completion:)(a3, a4);
}

uint64_t WKWebView.shortDescription.getter()
{
  swift_getObjectType();
  v6._uint64_t countAndFlagsBits = sub_2FD3E0();
  sub_2FC260(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  sub_2FC260(v7);
  id v1 = [v0 be_identifier];
  uint64_t v2 = sub_2FC180();
  id v4 = v3;

  v8._uint64_t countAndFlagsBits = v2;
  v8._object = v4;
  sub_2FC260(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 32;
  v9._object = (void *)0xE100000000000000;
  sub_2FC260(v9);
  sub_2FCFA0();
  return 0;
}

Swift::Void __swiftcall WKWebView.dismissInteractionMenus()()
{
  id v1 = [v0 be_textInputChild];
  id v2 = [v1 interactions];

  sub_371F4(&qword_4004D8);
  unint64_t v3 = sub_2FC3F0();

  if (v3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = 4;
      uint64_t v6 = 0;
      if ((v3 & 0xC000000000000001) == 0) {
        break;
      }
      while (1)
      {
        sub_2FCE20();
        uint64_t v7 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          break;
        }
LABEL_8:
        self;
        Swift::String v8 = (void *)swift_dynamicCastObjCClass();
        if (v8)
        {
          [v8 dismissMenu];
          swift_unknownObjectRelease();
          if (v7 == v4) {
            goto LABEL_18;
          }
        }
        else
        {
          self;
          Swift::String v9 = (void *)swift_dynamicCastObjCClass();
          if (v9) {
            swift_unknownObjectRetain();
          }
          [v9 dismissMenu];
          swift_unknownObjectRelease();

          if (v7 == v4) {
            goto LABEL_18;
          }
        }
        uint64_t v6 = ++v5 - 4;
        if ((v3 & 0xC000000000000001) == 0) {
          goto LABEL_7;
        }
      }
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_2FD030();
      if (!v4) {
        goto LABEL_18;
      }
    }
LABEL_7:
    swift_unknownObjectRetain();
    uint64_t v7 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_16;
    }
    goto LABEL_8;
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
}

void sub_77AA0(uint64_t a1)
{
  id v12 = [v1 layer];
  if (a1 == 1 && (BookThemeEntity.hasDarkBackground.getter() & 1) != 0
    || (BookThemeEntity.hasDarkBackground.getter() & 1) != 0)
  {
    [v12 setFilters:0];
    [v12 setCreatesCompositingGroup:0];
  }
  else
  {
    id v3 = BookThemeEntity.backgroundColor.getter();
    sub_2FC180();
    id v4 = objc_allocWithZone((Class)CAFilter);
    NSString v5 = sub_2FC140();
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithType:v5];

    id v7 = [v3 CGColor];
    NSString v8 = sub_2FC140();
    [v6 setValue:v7 forKeyPath:v8];

    sub_371F4(&qword_400510);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_32BAE0;
    *(void *)(v9 + 56) = sub_39F90(0, &qword_400518);
    *(void *)(v9 + 32) = v6;
    id v10 = v6;
    Class isa = sub_2FC3D0().super.isa;
    swift_bridgeObjectRelease();
    [v12 setFilters:isa];

    [v12 setCreatesCompositingGroup:1];
  }
}

Swift::Void __swiftcall WKWebView.updateStyle(theme:)(BookEPUB::BookThemeEntity *theme)
{
  BookEPUB::BookThemeType themeType = theme->themeType;
  BookEPUB::BookThemeVariant variant = theme->variant;
  BookEPUB::BookFontTable fontTable = theme->fontTable;
  rawCFDictionaryRef Value = theme->overrides.value.fontFamilyByTable._rawValue;
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, void *))&theme->overrides.value.isFontBolded;
  linedouble Height = theme->overrides.value.lineHeight;
  Swift::Double letterSpacing = theme->overrides.value.letterSpacing;
  Swift::Double wordSpacing = theme->overrides.value.wordSpacing;
  uint64_t v14 = *(void *)&theme->overrides.value.justify;
  Swift::Double marginAdjustment = theme->overrides.value.marginAdjustment;
  id v15 = [v1 be_imageFilterMode];
  sub_77AA0((uint64_t)v15);
  LOBYTE(aBlock) = themeType;
  BYTE1(aBlock) = variant;
  BYTE2(aBlock) = fontTable;
  uint64_t v18 = (uint64_t)rawValue;
  id v19 = v6;
  Swift::Double v20 = lineHeight;
  os_log_type_t v21 = *(void (**)(uint64_t, uint64_t))&letterSpacing;
  Swift::Double v22 = wordSpacing;
  uint64_t v23 = v14;
  id v10 = v1;
  Swift::Double v24 = marginAdjustment;
  if (BookThemeEntity.hasDarkBackground.getter()) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = 1;
  }
  [v1 setOverrideUserInterfaceStyle:v11];
  [v1 be_updateTextInputTraits];
  if (v15 != objc_msgSend(v1, "be_imageFilterMode"))
  {
    [v1 setBe_imageFilterMode:v15];
    NSString v12 = [self javascriptForUpdatedImageFilterMode:v15];
    if (!v12)
    {
      sub_2FC180();
      NSString v12 = sub_2FC140();
      swift_bridgeObjectRelease();
    }
    os_log_type_t v21 = sub_780F8;
    Swift::Double v22 = 0.0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    id v19 = sub_78114;
    Swift::Double v20 = COERCE_DOUBLE(&unk_3C4B80);
    uint64_t v13 = _Block_copy(&aBlock);
    [v10 evaluateJavaScript:v12 completionHandler:v13];
    _Block_release(v13);
  }
}

void WKWebView.updateImageFiltering(theme:filterMode:shouldUpdateLayerFilters:)(char *a1, id a2, char a3)
{
  char v6 = *a1;
  char v7 = a1[1];
  char v8 = a1[2];
  uint64_t v9 = *((void *)a1 + 1);
  id v10 = (uint64_t (*)(uint64_t, uint64_t, void *))*((void *)a1 + 2);
  uint64_t v11 = (void *)*((void *)a1 + 3);
  NSString v12 = (void (*)(uint64_t, uint64_t))*((void *)a1 + 4);
  uint64_t v16 = *((void *)a1 + 6);
  uint64_t v17 = *((void *)a1 + 5);
  uint64_t v15 = *((void *)a1 + 7);
  if (objc_msgSend(v3, "be_imageFilterMode") != a2)
  {
    [v3 setBe_imageFilterMode:a2];
    if (a3)
    {
      LOBYTE(aBlock) = v6;
      BYTE1(aBlock) = v7;
      BYTE2(aBlock) = v8;
      uint64_t v19 = v9;
      Swift::Double v20 = v10;
      os_log_type_t v21 = v11;
      Swift::Double v22 = v12;
      uint64_t v23 = v17;
      uint64_t v24 = v16;
      uint64_t v25 = v15;
      sub_77AA0((uint64_t)a2);
    }
    NSString v13 = [self javascriptForUpdatedImageFilterMode:a2];
    if (!v13)
    {
      sub_2FC180();
      NSString v13 = sub_2FC140();
      swift_bridgeObjectRelease();
    }
    Swift::Double v22 = sub_780F8;
    uint64_t v23 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    Swift::Double v20 = sub_78114;
    os_log_type_t v21 = &unk_3C4BA8;
    uint64_t v14 = _Block_copy(&aBlock);
    [v3 evaluateJavaScript:v13 completionHandler:v14];
    _Block_release(v14);
  }
}

void sub_780F8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_78114(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_5BE90((uint64_t)&v8, (uint64_t *)&unk_4016F0);
}

Swift::Void __swiftcall WKWebView.updateLineGuideEnabledState(on:)(Swift::Bool on)
{
  id v3 = [v1 configuration];
  id v4 = [v3 preferences];

  [v4 setTextInteractionEnabled:!on];
  NSString v5 = [self javascriptForUpdatedLineGuideDisplayEnabled:on];
  if (!v5)
  {
    sub_2FC180();
    NSString v5 = sub_2FC140();
    swift_bridgeObjectRelease();
  }
  _OWORD v7[4] = sub_78300;
  v7[5] = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_78114;
  v7[3] = &unk_3C4BD0;
  id v6 = _Block_copy(v7);
  [v1 evaluateJavaScript:v5 completionHandler:v6];
  _Block_release(v6);
}

void sub_78300(uint64_t a1, uint64_t a2)
{
}

void sub_7831C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_3FD6E0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2FB8A0();
    sub_60044(v6, (uint64_t)qword_400440);
    swift_errorRetain();
    swift_errorRetain();
    oslog = sub_2FB880();
    os_log_type_t v7 = sub_2FC7B0();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      sub_38EF0(a3, a4, &v12);
      sub_2FCC70();
      *(_WORD *)(v8 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v9 = sub_2FD2B0();
      sub_38EF0(v9, v10, &v12);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_7BFC0, oslog, v7, "Failed executing js for %s: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

id sub_78564()
{
  id v1 = [v0 scrollView];

  return v1;
}

uint64_t sub_7859C()
{
  id v1 = [v0 be_configurationKey];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_2FC180();

  return v3;
}

void sub_78604(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = sub_2FC140();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  [v2 setBe_configurationKey:v3];
}

void (*sub_78670(uint64_t **a1))(void *a1)
{
  id v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_786C8(v2);
  return sub_51C40;
}

void (*sub_786C8(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = [v1 be_configurationKey];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_2FC180();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_78750;
}

void sub_78750(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      id v4 = sub_2FC140();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    [*(id *)(a1 + 16) setBe_configurationKey:v4];
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    id v4 = sub_2FC140();
    swift_bridgeObjectRelease();
    [*(id *)(a1 + 16) setBe_configurationKey:v4];
  }
  else
  {
    id v4 = 0;
    [*(id *)(a1 + 16) setBe_configurationKey:0];
  }
}

uint64_t sub_78824@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 URL];
  if (v3)
  {
    id v4 = v3;
    sub_2FB400();

    uint64_t v5 = sub_2FB440();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_2FB440();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

id sub_788F0()
{
  return [v0 be_imageFilterMode];
}

id sub_78900(uint64_t a1)
{
  return [v1 setBe_imageFilterMode:a1];
}

void sub_78924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[4] = a2;
  v6[5] = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_74F60;
  v6[3] = &unk_3C4EB0;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  [v3 be_configureFontWithStyleManager:a1 completion:v5];
  _Block_release(v5);
}

uint64_t sub_789EC(uint64_t a1)
{
  uint64_t v3 = sub_371F4(&qword_400470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2FC570();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_2FC540();
  id v7 = v1;
  uint64_t v8 = sub_2FC530();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  _OWORD v9[4] = a1;
  void v9[5] = v7;
  sub_75748((uint64_t)v5, (uint64_t)&unk_400500, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_78B18()
{
  uint64_t v0 = sub_371F4((uint64_t *)&unk_400C70);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2FB1F0();
  sub_60A50(v3, qword_416FE8);
  sub_60044(v3, (uint64_t)qword_416FE8);
  sub_2FB430();
  uint64_t v4 = sub_2FB440();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4);
  if (result != 1) {
    return sub_2FB1D0();
  }
  __break(1u);
  return result;
}

uint64_t sub_78C38(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_78D18;
  return v5(v2 + 32);
}

uint64_t sub_78D18()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void *sub_78E2C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v6) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1168E8(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v8 = 0;
    uint64_t v36 = v3;
    unint64_t v37 = v5 & 0xC000000000000001;
    uint64_t v3 = &selRef_isExecuting;
    unint64_t v9 = v5;
    while (v6 != v8)
    {
      if (v37) {
        id v10 = (id)sub_2FCE20();
      }
      else {
        id v10 = *(id *)(v5 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      [v10 CGRectValue:v36];
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;
      double v19 = v18;
      [a2 be_convertPointFromContentsToView:];
      double v21 = v20;
      double v23 = v22;
      [a2 be_convertPointFromContentsToView:v13 + v17, v15 + v19];
      CGFloat v25 = v24 - v21;
      CGFloat v27 = v26 - v23;
      id v28 = a2;
      v38.origin.CGFloat x = v21;
      v38.origin.CGFloat y = v23;
      v38.size.CGFloat width = v25;
      v38.size.CGFloat height = v27;
      CGRect v39 = CGRectStandardize(v38);
      CGFloat x = v39.origin.x;
      CGFloat y = v39.origin.y;
      CGFloat width = v39.size.width;
      CGFloat height = v39.size.height;

      unint64_t v34 = _swiftEmptyArrayStorage[2];
      unint64_t v33 = _swiftEmptyArrayStorage[3];
      if (v34 >= v33 >> 1) {
        sub_1168E8(v33 > 1, v34 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v34 + 1;
      CGRect v35 = (CGFloat *)&_swiftEmptyArrayStorage[5 * v34];
      *((void *)v35 + 4) = v28;
      ++v8;
      v35[5] = x;
      v35[6] = y;
      v35[7] = width;
      v35[8] = height;
      unint64_t v5 = v9;
      if (v6 == v8) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2FD030();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_79030()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_79070(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  return sub_76CF4(a1, a2, a3, v3[2], v3[3], v3[4]);
}

const char *sub_7907C()
{
  return "be_hasPendingOperations";
}

id sub_79088@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 be_hasPendingOperations];
  *a2 = (_BYTE)result;
  return result;
}

id sub_790BC(unsigned __int8 *a1, id *a2)
{
  return [*a2 setBe_hasPendingOperations:*a1];
}

uint64_t sub_790D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_7910C(char *a1)
{
  sub_773F0(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_7911C()
{
  unint64_t result = qword_4004E0;
  if (!qword_4004E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4004E0);
  }
  return result;
}

id sub_79170@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 be_hasPendingOperations];
  *a2 = result ^ 1;
  return result;
}

id sub_791A8(unsigned char *a1, id *a2)
{
  return [*a2 setBe_hasPendingOperations:(*a1 & 1) == 0];
}

id sub_791C4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 be_viewScale];
  *a2 = v4;
  return result;
}

id sub_791F8(double *a1, id *a2)
{
  return [*a2 setBe_viewScale:*a1];
}

unsigned char *storeEnumTagSinglePayload for ContentLoaderViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *id result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x792D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentLoaderViewState()
{
  return &type metadata for ContentLoaderViewState;
}

uint64_t destroy for _ContentLoadingSelection()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s8BookEPUB24_ContentLoadingSelectionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for _ContentLoadingSelection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for _ContentLoadingSelection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _ContentLoadingSelection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ContentLoadingSelection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ContentLoaderViewSelection()
{
  return &type metadata for _ContentLoaderViewSelection;
}

uint64_t dispatch thunk of ContentLoaderView.scrollView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContentLoaderView.zoomScale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentLoaderView.zoomScale.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContentLoaderView.zoomScale.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ContentLoaderView.availableForReuse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ContentLoaderView.availableForReuse.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ContentLoaderView.availableForReuse.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ContentLoaderView.be_estimatedContentSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ContentLoaderView.be_desiredContentOffset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ContentLoaderView.be_desiredContentOffset.setter(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 80))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of ContentLoaderView.be_desiredContentOffset.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of ContentLoaderView.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ContentLoaderView.be_configurationKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ContentLoaderView.be_configurationKey.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of ContentLoaderView.be_configurationKey.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of ContentLoaderView.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ContentLoaderView.be_constraintsToFillSuperview.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of ContentLoaderView.selection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ContentLoaderView.be_imageFilterMode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of ContentLoaderView.setBe_imageFilterMode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of ContentLoaderView.updateImageFiltering(theme:filterMode:shouldUpdateLayerFilters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 168))();
}

uint64_t dispatch thunk of ContentLoaderView.updateLineGuideEnabledState(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of ContentLoaderView.setDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of ContentLoaderView.addPeripheralView(_:length:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of ContentLoaderView.removePeripheralView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of ContentLoaderView.prepareForReuse(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of ContentLoaderView.preparingForReuse()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of ContentLoaderView.processingContentViewForHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of ContentLoaderView.fontRegistrationCompleted(fontRegistrationSuccess:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of ContentLoaderView.returningContentViewToPool()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of ContentLoaderView.discardingContentView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of ContentLoaderView.fontRegistered(font:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 256))();
}

uint64_t dispatch thunk of ContentLoaderView.registerFont(styleManager:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 264))();
}

uint64_t dispatch thunk of ContentLoaderView.setContentOffset(offset:bypassingJS:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of ContentLoaderView.updateStyle(theme:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of ContentLoaderView.update(contentBlockingRules:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of ContentLoaderView.shortDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of ContentLoaderView.dismissInteractionMenus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t sub_79814()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_7984C(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_4679C;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_4004E8 + dword_4004E8);
  return v6(a1, v4);
}

uint64_t sub_79908()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_79948(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_4679C;
  return sub_75104(a1, v4, v5, v7, v6);
}

uint64_t sub_79A08()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_79A40()
{
  return sub_13B3D4(*(void *)(v0 + 16));
}

uint64_t sub_79A4C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_79A8C()
{
  return sub_770D8(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

unint64_t sub_79A98()
{
  unint64_t result = qword_400520;
  if (!qword_400520)
  {
    sub_2FBFA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400520);
  }
  return result;
}

uint64_t sub_79AF0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_79BAC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_4059A0 + dword_4059A0);
  return v6(a1, v4);
}

_UNKNOWN **static ThemeAppearance.availableCases.getter()
{
  return &off_3C1BD8;
}

unint64_t ThemeAppearance.rawValue.getter(char a1)
{
  unint64_t result = 0x746867696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 1802658148;
      break;
    case 2:
      unint64_t result = 0x766544686374616DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_79C8C(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x746867696CLL;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE500000000000000;
  unint64_t v5 = 0x746867696CLL;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v5 = 1802658148;
      break;
    case 2:
      unint64_t v5 = 0x766544686374616DLL;
      unint64_t v4 = 0xEB00000000656369;
      break;
    case 3:
      unint64_t v4 = 0x800000000030BAC0;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1802658148) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x766544686374616DLL;
      unint64_t v6 = 0xEB00000000656369;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x800000000030BAC0;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_79E20()
{
  return sub_2FD370();
}

uint64_t sub_79EFC()
{
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_79FC0()
{
  return sub_2FD370();
}

uint64_t sub_7A098@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s8BookEPUB15ThemeAppearanceO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_7A0C8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x746867696CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1802658148;
      goto LABEL_3;
    case 2:
      *a1 = 0x766544686374616DLL;
      a1[1] = 0xEB00000000656369;
      break;
    case 3:
      *a1 = 0xD000000000000011;
      a1[1] = 0x800000000030BAC0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t _s8BookEPUB15ThemeAppearanceO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawCFDictionaryRef Value = &off_3C1C00;
  v6._object = a2;
  unint64_t v4 = sub_2FD0A0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_7A1B4()
{
  unint64_t result = qword_400548;
  if (!qword_400548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400548);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ThemeAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7A2D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemeAppearance()
{
  return &type metadata for ThemeAppearance;
}

id BESearchResult.pageLocation.getter@<X0>(void *a1@<X8>)
{
  id v3 = [v1 ordinal];
  id result = [v1 pageOffset];
  *a1 = v3;
  a1[1] = result;
  return result;
}

BookEPUB::SearchState_optional __swiftcall SearchState.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  id v3 = v1;
  v4._rawCFDictionaryRef Value = &off_3C1C80;
  v8._object = object;
  unint64_t v5 = sub_2FD0A0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SearchState.rawValue.getter()
{
  uint64_t result = 0x6E69686372616573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646574726F6261;
      break;
    case 2:
      uint64_t result = 0x526C616974726170;
      break;
    case 3:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 4:
      uint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_7A474(unsigned __int8 *a1, char *a2)
{
  return sub_47CB0(*a1, *a2);
}

unint64_t sub_7A484()
{
  unint64_t result = qword_400550;
  if (!qword_400550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400550);
  }
  return result;
}

Swift::Int sub_7A4D8()
{
  return sub_2FD370();
}

uint64_t sub_7A5E0()
{
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_7A6D0()
{
  return sub_2FD370();
}

BookEPUB::SearchState_optional sub_7A7D4(Swift::String *a1)
{
  return SearchState.init(rawValue:)(*a1);
}

void sub_7A7E0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000067;
  uint64_t v3 = 0x6E69686372616573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x646574726F6261;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "partialResults");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x6574656C706D6F63;
      *(void *)(a1 + 8) = 0xE900000000000064;
      break;
    case 4:
      *(void *)a1 = 1701736302;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t getEnumTagSinglePayload for SearchState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7AA08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchState()
{
  return &type metadata for SearchState;
}

void sub_7AA40()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_7AA94();
  }
}

void sub_7AA94()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_paginationService + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_11D104(ObjectType, v2);
  uint64_t v5 = sub_11D190(ObjectType, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(ObjectType, v2);
  uint64_t v7 = v6;
  uint64_t v8 = swift_getObjectType();
  double v9 = (*(double (**)(uint64_t, uint64_t))(v7 + 48))(v8, v7);
  uint64_t v11 = v10;
  swift_unknownObjectRelease();
  double v12 = (objc_class *)type metadata accessor for SearchConfiguration();
  double v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC8BookEPUB19SearchConfiguration_paginationOptions] = v4;
  *(void *)&v13[OBJC_IVAR____TtC8BookEPUB19SearchConfiguration_cleanupOptions] = v5;
  *(void *)&v13[OBJC_IVAR____TtC8BookEPUB19SearchConfiguration_stylesheetSet] = v19;
  double v14 = (double *)&v13[OBJC_IVAR____TtC8BookEPUB19SearchConfiguration_contentLayoutSize];
  double *v14 = v9;
  *((void *)v14 + 1) = v11;
  v20.receiver = v13;
  v20.super_class = v12;
  [super init];
  double v16 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 24);
  swift_release();
  [v16 setPageCount:v18 & ~(v18 >> 63)];
  [v16 setSearchConfiguration:v15];
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(ObjectType, v2)) {
    [v16 beginSearchWithReportAnalytics:0];
  }
  else {
    [v16 cancelSearch];
  }
}

uint64_t sub_7ACE8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController);
  if ([v1 isSearching])
  {
    char v2 = 0;
  }
  else if ([v1 wasAborted])
  {
    char v2 = 1;
  }
  else if ([v1 hasPartialResults])
  {
    char v2 = 2;
  }
  else if ([v1 searchWasCompleted])
  {
    char v2 = 3;
  }
  else
  {
    char v2 = 4;
  }
  NSString v3 = sub_2FC140();
  [v1 setSearchString:v3];

  if ([v1 isSearching])
  {
    unsigned __int8 v4 = 0;
  }
  else if ([v1 wasAborted])
  {
    unsigned __int8 v4 = 1;
  }
  else if ([v1 hasPartialResults])
  {
    unsigned __int8 v4 = 2;
  }
  else if ([v1 searchWasCompleted])
  {
    unsigned __int8 v4 = 3;
  }
  else
  {
    unsigned __int8 v4 = 4;
  }
  uint64_t result = sub_47CB0(v4, v2);
  if ((result & 1) == 0)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      id v6 = [v1 results];
      sub_371F4(&qword_3FE898);
      unint64_t v7 = sub_2FC3F0();

      sub_4E34C(v7);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_7AECC(uint64_t a1)
{
  void (*v6)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void v19[3];
  uint64_t v20;
  uint64_t v21;

  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_bookProvider + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v6 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8);
  v6(v19, ObjectType, v4);
  unint64_t v7 = v20;
  uint64_t v8 = v21;
  sub_4F798(v19, v20);
  double v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 216))(v7, v8);
  sub_39FCC((uint64_t)v19);
  if ((v9 & 1) != 0 || sub_2FB1B0() == a1) {
    return 0;
  }
  v6(v19, ObjectType, v4);
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  sub_4F798(v19, v20);
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v11 + 104))(v10, v11) >= 2u)
  {
    sub_39FCC((uint64_t)v19);
    return 0;
  }
  sub_39FCC((uint64_t)v19);
  double v12 = *(void *)(v2 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_pageNumberProvider + 8);
  double v13 = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 160))(a1, v13, v12);
  if (v15) {
    return 0;
  }
  double v16 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_paginationService + 8);
    uint64_t v18 = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 184))(v16, v18, v17);
  }
  return result;
}

id sub_7B0D4()
{
  return sub_7B498(type metadata accessor for SearchDataManager);
}

uint64_t type metadata accessor for SearchDataManager()
{
  return self;
}

id sub_7B480()
{
  return sub_7B498(type metadata accessor for SearchConfiguration);
}

id sub_7B498(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for SearchConfiguration()
{
  return self;
}

uint64_t sub_7B550()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController), "results"));
    sub_371F4(&qword_3FE898);
    unint64_t v2 = sub_2FC3F0();

    sub_4E34C(v2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    objc_release(objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                       + OBJC_IVAR____TtC8BookEPUB17SearchDataManager_searchController), "results")));
    sub_4F840();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_7B664(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_2FD1F0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  double v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2FD1F0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_7B72C(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (2)
    {
      uint64_t v6 = a2 + v5++;
      unint64_t v7 = 0xE500000000000000;
      unint64_t v8 = 0x746867696CLL;
      switch(*(unsigned char *)(v6 + 32))
      {
        case 1:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1802658148;
          break;
        case 2:
          unint64_t v8 = 0x766544686374616DLL;
          unint64_t v7 = 0xEB00000000656369;
          break;
        case 3:
          unint64_t v7 = 0x800000000030BAC0;
          unint64_t v8 = 0xD000000000000011;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x746867696CLL;
      switch(a1)
      {
        case 1:
          unint64_t v9 = 0xE400000000000000;
          if (v8 == 1802658148) {
            goto LABEL_12;
          }
          goto LABEL_13;
        case 2:
          uint64_t v10 = 0x766544686374616DLL;
          unint64_t v9 = 0xEB00000000656369;
          goto LABEL_11;
        case 3:
          unint64_t v9 = 0x800000000030BAC0;
          if (v8 != 0xD000000000000011) {
            goto LABEL_13;
          }
          goto LABEL_12;
        default:
LABEL_11:
          if (v8 != v10) {
            goto LABEL_13;
          }
LABEL_12:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 1;
          }
LABEL_13:
          char v11 = sub_2FD1F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
          if (v2 != v5) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  return 0;
}

uint64_t sub_7B920(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_7B984()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_417000);
  sub_60044(v0, (uint64_t)qword_417000);
  sub_39F90(0, (unint64_t *)&qword_4000C0);
  sub_2FCBE0();
  return sub_2FB8B0();
}

uint64_t ThemeAppearanceManager.analyticsProvider.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t ThemeAppearanceManager.analyticsProvider.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ThemeAppearanceManager.analyticsProvider.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 32);
  v3[3] = Strong;
  void v3[4] = v5;
  return sub_7BB50;
}

void sub_7BB50(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 32) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t ThemeAppearanceManager.appearancePublisher.getter()
{
  return sub_2FBBD0();
}

uint64_t ThemeAppearanceManager.appearance.getter()
{
  sub_2FBAE0();
  return v1;
}

void ThemeAppearanceManager.appearance.setter(char a1)
{
  uint64_t v2 = v1;
  if (sub_7B72C(a1, (uint64_t)&off_3C1D18)) {
    char v4 = a1;
  }
  else {
    char v4 = 2;
  }
  sub_2FBAE0();
  unint64_t v5 = 0xE500000000000000;
  unint64_t v6 = 0x746867696CLL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xE400000000000000;
      unint64_t v6 = 1802658148;
      break;
    case 2:
      unint64_t v6 = 0x766544686374616DLL;
      unint64_t v5 = 0xEB00000000656369;
      break;
    case 3:
      unint64_t v5 = 0x800000000030BAC0;
      unint64_t v6 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  uint64_t v8 = 0x746867696CLL;
  switch((char)v19)
  {
    case 1:
      unint64_t v7 = 0xE400000000000000;
      if (v6 == 1802658148) {
        goto LABEL_15;
      }
      goto LABEL_17;
    case 2:
      uint64_t v8 = 0x766544686374616DLL;
      unint64_t v7 = 0xEB00000000656369;
      goto LABEL_12;
    case 3:
      unint64_t v7 = 0x800000000030BAC0;
      if (v6 == 0xD000000000000011) {
        goto LABEL_15;
      }
      goto LABEL_17;
    default:
LABEL_12:
      if (v6 != v8) {
        goto LABEL_17;
      }
LABEL_15:
      if (v5 == v7)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_17:
        char v9 = sub_2FD1F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {
          sub_7C220();
          sub_2FBAA0();
          sub_2FBB20();
          swift_release();
          LOBYTE(v19) = v4;
          sub_2FBAF0();
          uint64_t v10 = *(void **)(v2 + 16);
          unint64_t v11 = 0xE500000000000000;
          unint64_t v12 = 0x746867696CLL;
          switch(v4)
          {
            case 1:
              unint64_t v11 = 0xE400000000000000;
              unint64_t v12 = 1802658148;
              break;
            case 2:
              unint64_t v12 = 0x766544686374616DLL;
              unint64_t v11 = 0xEB00000000656369;
              break;
            case 3:
              unint64_t v11 = 0x800000000030BAC0;
              unint64_t v12 = 0xD000000000000011;
              break;
            default:
              break;
          }
          unint64_t v19 = v12;
          *(void *)&long long v20 = v11;
          uint64_t v13 = sub_2FD250();
          NSString v14 = sub_2FC140();
          [v10 setValue:v13 forKey:v14 v19, (void)v20];
          swift_unknownObjectRelease();

          swift_beginAccess();
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v15 = *(void *)(v2 + 32);
            switch(v4)
            {
              case 0:
              case 1:
              case 3:
                char v17 = sub_2FD1F0();
                swift_bridgeObjectRelease();
                uint64_t v16 = v17 & 1;
                break;
              case 2:
                swift_bridgeObjectRelease();
                uint64_t v16 = 1;
                break;
              default:
                JUMPOUT(0);
            }
            uint64_t ObjectType = swift_getObjectType();
            unint64_t v19 = v16;
            long long v20 = 0u;
            long long v21 = 0u;
            memset(v22, 0, sizeof(v22));
            (*(void (**)(unint64_t *, uint64_t, uint64_t))(v15 + 8))(&v19, ObjectType, v15);
            swift_unknownObjectRelease();
          }
          UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
        }
      }
      return;
  }
}

void sub_7C0F8(char a1)
{
  unint64_t v2 = 0xE500000000000000;
  unint64_t v3 = 0x746867696CLL;
  uint64_t v4 = 0;
  switch(a1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      unint64_t v3 = 1802658148;
      goto LABEL_5;
    case 2:
      unint64_t v2 = 0xEB00000000656369;
      unint64_t v3 = 0x766544686374616DLL;
      goto LABEL_5;
    case 3:
      unint64_t v2 = 0x800000000030BAC0;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_5;
    case 4:
      goto LABEL_6;
    default:
LABEL_5:
      v6[0] = v3;
      v6[1] = v2;
      uint64_t v4 = sub_2FD1D0();
      sub_7D2F0((uint64_t)v6);
LABEL_6:
      NSString v5 = sub_2FC140();
      [v1 setValue:v4 forKey:v5];
      swift_unknownObjectRelease();

      return;
  }
}

unint64_t sub_7C220()
{
  unint64_t result = qword_4006E8;
  if (!qword_4006E8)
  {
    type metadata accessor for ThemeAppearanceManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4006E8);
  }
  return result;
}

uint64_t type metadata accessor for ThemeAppearanceManager()
{
  return self;
}

void (*ThemeAppearanceManager.appearance.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  sub_2FBAE0();
  return sub_7C2F0;
}

void sub_7C2F0(uint64_t a1)
{
}

uint64_t ThemeAppearanceManager.currentThemePersistence.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ThemeAppearanceManager.traitCollection.getter()
{
  sub_2FBAE0();
  return v1;
}

void ThemeAppearanceManager.traitCollection.setter(id a1)
{
  sub_2FBAE0();
  sub_39F90(0, (unint64_t *)&unk_4066B0);
  char v2 = sub_2FCA70();

  if ((v2 & 1) == 0)
  {
    id v4 = a1;
    a1 = a1;
    sub_2FBAF0();
    sub_2FBAE0();
    [v4 userInterfaceStyle];

    sub_2FBAD0();
  }
}

void (*ThemeAppearanceManager.traitCollection.modify(uint64_t a1))(void **a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  sub_2FBAE0();
  return sub_7C4A0;
}

void sub_7C4A0(void **a1, char a2)
{
  char v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    ThemeAppearanceManager.traitCollection.setter(v3);
  }
  else
  {
    ThemeAppearanceManager.traitCollection.setter(v2);
  }
}

uint64_t ThemeAppearanceManager.lightLevelController.getter()
{
  return swift_unknownObjectRetain();
}

void *sub_7C530(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  void v3[4] = 0;
  swift_unknownObjectWeakInit();
  id v8 = [self standardUserDefaults];
  type metadata accessor for CurrentThemePersistence();
  swift_allocObject();
  v4[6] = CurrentThemePersistence.init(userDefaults:)(v8);
  v4[7] = &protocol witness table for CurrentThemePersistence;
  id v9 = [self currentTraitCollection];
  v4[9] = a1;
  v4[10] = a2;
  sub_371F4(&qword_400828);
  swift_allocObject();
  swift_unknownObjectRetain();
  id v10 = v9;
  v4[8] = sub_2FBB00();
  _OWORD v4[2] = a3;
  id v11 = a3;
  NSString v12 = sub_2FC140();
  id v13 = [v11 stringForKey:v12];

  if (v13
    && (uint64_t v14 = sub_2FC180(),
        uint64_t v16 = v15,
        v13,
        char v17 = _s8BookEPUB15ThemeAppearanceO8rawValueACSgSS_tcfC_0(v14, v16),
        v17 != 4)
    || (char v17 = sub_7C784(), v17 != 4))
  {
    sub_7B72C(v17, (uint64_t)&off_3C1D40);
  }
  sub_371F4(&qword_4006D8);
  swift_allocObject();
  v4[5] = sub_2FBB00();
  [v10 userInterfaceStyle];
  sub_371F4(&qword_400708);
  swift_allocObject();
  uint64_t v18 = sub_2FBB00();

  swift_unknownObjectRelease();
  v4[11] = v18;
  return v4;
}

uint64_t sub_7C784()
{
  NSString v1 = sub_2FC140();
  id v2 = [v0 stringForKey:v1];

  if (!v2) {
    return 4;
  }
  uint64_t v3 = sub_2FC180();
  uint64_t v5 = v4;

  BOOL v6 = v3 == 48 && v5 == 0xE100000000000000;
  if (!v6 && (sub_2FD1F0() & 1) == 0)
  {
    BOOL v8 = v3 == 49 && v5 == 0xE100000000000000;
    if (v8 || (sub_2FD1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 1;
      goto LABEL_8;
    }
    if (v3 == 50 && v5 == 0xE100000000000000 || (sub_2FD1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 2;
      goto LABEL_8;
    }
    if (v3 == 51 && v5 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      uint64_t v7 = 3;
      goto LABEL_8;
    }
    char v9 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_23;
    }
    return 4;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
LABEL_8:
  sub_7C0F8(v7);
  return v7;
}

uint64_t ThemeAppearanceManager.themeVariant.getter()
{
  sub_2FBAE0();
  sub_2FBAE0();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t ObjectType = swift_getObjectType();
  char v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
  char v4 = 1;
  switch(v7)
  {
    case 1:
      return v4 & 1;
    case 2:
      char v4 = v6;
      break;
    case 3:
      char v4 = v3;
      break;
    default:
      char v4 = 0;
      break;
  }
  return v4 & 1;
}

uint64_t ThemeAppearanceManager.themeVariantPublisher.getter()
{
  uint64_t v1 = sub_371F4(&qword_4006F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  __chkstk_darwin(v1);
  char v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_371F4(&qword_4006F8);
  uint64_t v22 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_371F4(&qword_400700);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  BOOL v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v0[5];
  sub_371F4(&qword_4006D8);
  sub_44924(&qword_4006E0, &qword_4006D8);
  uint64_t v9 = sub_2FBBD0();
  uint64_t v25 = v0[11];
  uint64_t v26 = v9;
  sub_371F4(&qword_400708);
  sub_44924(&qword_400710, &qword_400708);
  uint64_t v25 = sub_2FBBD0();
  uint64_t v10 = v0[10];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10);
  sub_371F4(&qword_400718);
  sub_371F4(&qword_400720);
  sub_371F4((uint64_t *)&unk_404EE0);
  sub_44924(&qword_400728, &qword_400718);
  sub_44924(&qword_400730, &qword_400720);
  sub_44924((unint64_t *)&unk_406720, (uint64_t *)&unk_404EE0);
  sub_2FB9B0();
  sub_44924(&qword_400738, &qword_4006F0);
  uint64_t v12 = v18;
  sub_2FBC30();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v12);
  sub_44924(&qword_400740, &qword_4006F8);
  sub_7D010();
  uint64_t v13 = v20;
  sub_2FBCC0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v13);
  sub_44924(&qword_400750, &qword_400700);
  uint64_t v14 = v21;
  uint64_t v15 = sub_2FBBD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v14);
  return v15;
}

uint64_t sub_7CE78(char a1, unsigned char *a2, char a3)
{
  char v3 = 1;
  switch(a1)
  {
    case 1:
      goto LABEL_3;
    case 2:
      uint64_t result = *a2 & 1;
      break;
    case 3:
      uint64_t result = a3 & 1;
      break;
    default:
      char v3 = 0;
LABEL_3:
      uint64_t result = v3 & 1;
      break;
  }
  return result;
}

uint64_t sub_7CED0@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_7CE78(*a1, a1 + 1, a1[2]);
  *a2 = result & 1;
  return result;
}

uint64_t ThemeAppearanceManager.deinit()
{
  sub_4F924(v0 + 24);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t ThemeAppearanceManager.__deallocating_deinit()
{
  sub_4F924(v0 + 24);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t sub_7CFC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2FBAA0();
  *a1 = result;
  return result;
}

unint64_t sub_7D010()
{
  unint64_t result = qword_400748;
  if (!qword_400748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400748);
  }
  return result;
}

uint64_t static ThemeAppearanceManager.setupIfNeeded(lightLevelController:)(uint64_t result, uint64_t a2)
{
  if (!qword_4006D0)
  {
    uint64_t v3 = result;
    char v4 = self;
    swift_unknownObjectRetain();
    id v5 = [v4 standardUserDefaults];
    swift_allocObject();
    qword_4006D0 = (uint64_t)sub_7C530(v3, a2, v5);
    return swift_release();
  }
  return result;
}

uint64_t static ThemeAppearanceManager.shared.getter()
{
  uint64_t result = qword_4006D0;
  if (qword_4006D0) {
    return swift_retain();
  }
  __break(1u);
  return result;
}

void *sub_7D140()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_7D14C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v3 + 32);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_7D1A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_7D204@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2FBAE0();
  *a1 = v3;
  return result;
}

void sub_7D244(char *a1)
{
}

uint64_t sub_7D26C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2FBAE0();
  *a1 = v3;
  return result;
}

void sub_7D2AC(id *a1)
{
}

uint64_t method lookup function for ThemeAppearanceManager(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ThemeAppearanceManager);
}

uint64_t sub_7D2F0(uint64_t a1)
{
  return a1;
}

uint64_t PageTurnStyle.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6564696C73;
  }
  if (a1 == 1) {
    return 1819440483;
  }
  return 0x6564614674736166;
}

uint64_t sub_7D394(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 1819440483;
  if (v2 != 1)
  {
    uint64_t v4 = 0x6564614674736166;
    unint64_t v3 = 0xE800000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6564696C73;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = 0xE400000000000000;
  uint64_t v8 = 1819440483;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x6564614674736166;
    unint64_t v7 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6564696C73;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_2FD1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

Swift::Int sub_7D488()
{
  return sub_2FD370();
}

uint64_t sub_7D520()
{
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_7D5A4()
{
  return sub_2FD370();
}

uint64_t sub_7D638@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s8BookEPUB13PageTurnStyleO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_7D668(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1819440483;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6564614674736166;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6564696C73;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t _s8BookEPUB13PageTurnStyleO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawCFDictionaryRef Value = &off_3C1D68;
  v6._object = a2;
  unint64_t v4 = sub_2FD0A0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

unint64_t sub_7D70C()
{
  unint64_t result = qword_400830;
  if (!qword_400830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400830);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PageTurnStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7D82CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageTurnStyle()
{
  return &type metadata for PageTurnStyle;
}

id BookThemeEntity.backgroundColor.getter()
{
  char v1 = v0[1];
  switch(*v0)
  {
    case 1:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1) {
        goto LABEL_5;
      }
      double v3 = 0.290196078;
      double v5 = 0.301960784;
      goto LABEL_14;
    case 2:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.109803922;
        double v5 = 0.117647059;
LABEL_14:
        double v7 = 1.0;
        double v4 = v3;
      }
      else
      {
        double v3 = 0.933333333;
        double v4 = 0.929411765;
        double v7 = 1.0;
        double v5 = 0.929411765;
      }
      goto LABEL_19;
    case 4:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.258823529;
        double v4 = 0.231372549;
        uint64_t v6 = 0x3FC8181818181818;
        goto LABEL_12;
      }
      double v3 = 0.945098039;
      double v4 = 0.88627451;
      double v5 = 0.788235294;
      break;
    case 5:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.0941176471;
        double v4 = 0.0862745098;
        uint64_t v6 = 0x3FA8181818181818;
LABEL_12:
        double v5 = *(double *)&v6;
      }
      else
      {
        double v4 = 0.988235294;
        double v5 = 0.956862745;
        double v3 = 1.0;
      }
      break;
    default:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
LABEL_5:
        double v3 = 0.0;
        double v4 = 0.0;
        double v5 = 0.0;
      }
      else
      {
        double v3 = 1.0;
        double v4 = 1.0;
        double v5 = 1.0;
      }
      break;
  }
  double v7 = 1.0;
LABEL_19:

  return [v2 initWithRed:v3 green:v4 blue:v5 alpha:v7];
}

id BookThemeEntity.textColor.getter()
{
  char v1 = v0[1];
  switch(*v0)
  {
    case 1:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.552941176;
        double v5 = 0.576470588;
        goto LABEL_19;
      }
      double v3 = 0.921568627;
      double v5 = 0.960784314;
      double v7 = 0.6;
      double v4 = 0.921568627;
      goto LABEL_24;
    case 2:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.949019608;
        uint64_t v6 = 0x3FEE1E1E1E1E1E1ELL;
        goto LABEL_18;
      }
      double v3 = 0.125490196;
      double v4 = 0.109803922;
      double v7 = 1.0;
      double v5 = 0.109803922;
      goto LABEL_24;
    case 3:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.937254902;
        double v5 = 0.949019608;
      }
      else
      {
        double v3 = 0.109803922;
        uint64_t v6 = 0x3FBE1E1E1E1E1E1ELL;
LABEL_18:
        double v5 = *(double *)&v6;
      }
LABEL_19:
      double v7 = 1.0;
      double v4 = v3;
      goto LABEL_24;
    case 4:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 0.976470588;
        double v4 = 0.925490196;
        double v5 = 0.858823529;
      }
      else
      {
        double v3 = 0.215686275;
        double v4 = 0.176470588;
        double v5 = 0.141176471;
      }
      goto LABEL_23;
    case 5:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v4 = 0.976470588;
        double v5 = 0.921568627;
        double v3 = 1.0;
        goto LABEL_23;
      }
      double v3 = 0.0784313725;
      double v4 = 0.0705882353;
      goto LABEL_22;
    default:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1)
      {
        double v3 = 1.0;
        double v4 = 1.0;
        double v5 = 1.0;
      }
      else
      {
        double v3 = 0.0;
        double v4 = 0.0;
LABEL_22:
        double v5 = 0.0;
      }
LABEL_23:
      double v7 = 1.0;
LABEL_24:
      return [v2 initWithRed:v3 green:v4 blue:v5 alpha:v7];
  }
}

uint64_t BookThemeEntity.hasDarkBackground.getter()
{
  if (v0[1])
  {
    char v1 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    return v1 & 1;
  }
  uint64_t v2 = *v0;
  char v3 = sub_2FD1F0();
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    char v1 = 1;
    switch(v2)
    {
      case 1:
        goto LABEL_7;
      default:
        char v1 = sub_2FD1F0();
        break;
    }
    goto LABEL_7;
  }
  char v1 = 1;
  return v1 & 1;
}

id BookThemeEntity.linkColor.getter()
{
  char v1 = v0[1];
  switch(*v0)
  {
    case 1:
      goto LABEL_7;
    case 2:
    case 3:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1) {
        goto LABEL_8;
      }
      double v3 = 0.478431373;
      double v4 = 0.0;
      double v5 = 1.0;
      return [v2 initWithRed:v4 green:v3 blue:v5 alpha:1.0];
    case 4:
    case 5:
      id v2 = objc_allocWithZone((Class)UIColor);
      if (v1) {
        goto LABEL_8;
      }
      double v4 = 0.749019608;
      double v3 = 0.57254902;
      double v5 = 0.188235294;
      return [v2 initWithRed:v4 green:v3 blue:v5 alpha:1.0];
    default:
      if (!v0[1]) {
        return 0;
      }
LABEL_7:
      id v2 = objc_allocWithZone((Class)UIColor);
LABEL_8:
      double v3 = 0.615686275;
      double v5 = 0.862745098;
      double v4 = 0.0;
      return [v2 initWithRed:v4 green:v3 blue:v5 alpha:1.0];
  }
}

uint64_t BookThemeEntity.hasBlackBackground.getter()
{
  int v1 = *v0;
  if (v1 == 3)
  {
    if (v0[1]) {
      return 1;
    }
  }
  else if (v1 == 1)
  {
    if (v0[1]) {
      return 1;
    }
  }
  else if (!*v0 && (v0[1] & 1) != 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_7DEE4()
{
  uint64_t result = 0;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1634100555;
      break;
    case 2:
      uint64_t result = 0x73756373616D6144;
      break;
    case 3:
    case 0x15:
      uint64_t result = 0x726F6F6E69686F4BLL;
      break;
    case 5:
      uint64_t result = 0xD000000000000015;
      break;
    case 6:
      uint64_t result = 0xD000000000000012;
      break;
    case 7:
      uint64_t result = 0x6265486C61697241;
      break;
    case 8:
    case 0xE:
    case 0x10:
      uint64_t result = 0xD000000000000013;
      break;
    case 9:
      uint64_t result = 0x6E616B617468734DLL;
      break;
    case 0xA:
      uint64_t result = 0x61696D6568707545;
      break;
    case 0xB:
      uint64_t result = 0xD000000000000014;
      break;
    case 0xC:
      uint64_t v2 = 0x2072656D684BLL;
      goto LABEL_15;
    case 0xD:
      uint64_t result = 0xD000000000000011;
      break;
    case 0xF:
      uint64_t result = 0x676E6153206F614CLL;
      break;
    case 0x11:
      uint64_t v2 = 0x20617969724FLL;
LABEL_15:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6153000000000000;
      break;
    case 0x12:
      uint64_t result = 0x69686B756D727547;
      break;
    case 0x13:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x14:
      uint64_t result = 0x6874614D69616E49;
      break;
    case 0x16:
      uint64_t result = 0x697275626E6F6854;
      break;
    case 0x17:
      uint64_t result = 0x676E6146676E6950;
      break;
    case 0x18:
      uint64_t result = 0x676E6146676E6950;
      break;
    case 0x19:
      uint64_t result = 0x676E6146676E6950;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MultipleColumnMode.rawValue.getter()
{
  return *v0;
}

uint64_t PageMovementState.isIdle.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t PageMovementState.isDragging.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t PageMovementState.isDragging.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*PageMovementState.isDragging.modify())()
{
  return address(of:);
}

uint64_t FontDownloadAlert.downloadOverCellularAccepted.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FontDownloadAlert.downloadOverCellularAccepted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*FontDownloadAlert.downloadOverCellularAccepted.modify())()
{
  return address(of:);
}

uint64_t FontDownloadAlert.fontDownloadAlertPresented.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t FontDownloadAlert.fontDownloadAlertPresented.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*FontDownloadAlert.fontDownloadAlertPresented.modify())()
{
  return address(of:);
}

uint64_t FontDownloadAlert.requiresCellularPrompt.getter()
{
  if (*v0) {
    return 0;
  }
  else {
    return v0[1] & (v0[2] ^ 1) & 1;
  }
}

uint64_t FontDownloadAlert.isDownloadAllowed.getter()
{
  if (*v0) {
    return 1;
  }
  else {
    return v0[1] & v0[2] & 1;
  }
}

uint64_t FontDownloadAlert.updateFrom(path:)(uint64_t a1)
{
  uint64_t v42 = sub_2FBDD0();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  double v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = sub_2FBDB0();
  uint64_t v43 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  CGFloat v44 = &v35[-v7];
  uint64_t v8 = sub_2FBD10();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void (**)(unsigned char *, void, uint64_t, __n128))(v9 + 104);
  v13(v12, enum case for NWInterface.InterfaceType.cellular(_:), v8, v10);
  uint64_t v14 = a1;
  LOBYTE(a1) = sub_2FBD90();
  unint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v41(v12, v8);
  if (a1)
  {
    unint64_t v37 = v4;
    uint64_t v15 = v44;
    uint64_t v16 = v14;
    sub_2FBDC0();
    uint64_t v17 = v43;
    uint64_t v18 = *(void (**)(unsigned char *, void, uint64_t))(v43 + 104);
    uint64_t v19 = v45;
    uint64_t v38 = v2;
    uint64_t v20 = v46;
    v18(v45, enum case for NWPath.Status.satisfied(_:), v46);
    int v36 = sub_2FBDA0();
    uint64_t v39 = v16;
    uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v17 + 8);
    v21(v19, v20);
    uint64_t v22 = v15;
    uint64_t v23 = v20;
    double v4 = v37;
    uint64_t v2 = v38;
    v21(v22, v23);
    uint64_t v14 = v39;
    v47[1] = v36 & 1;
  }
  unint64_t v40 = (void (*)(unsigned char *, void, uint64_t))v13;
  ((void (*)(unsigned char *, void, uint64_t))v13)(v12, enum case for NWInterface.InterfaceType.wifi(_:), v8);
  char v24 = sub_2FBD90();
  uint64_t v25 = v41;
  v41(v12, v8);
  uint64_t v26 = v42;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16))(v4, v14, v42);
  if (v24)
  {
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v26);
  }
  else
  {
    v40(v12, enum case for NWInterface.InterfaceType.wiredEthernet(_:), v8);
    char v27 = sub_2FBD90();
    v25(v12, v8);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v26);
    if ((v27 & 1) == 0) {
      return result;
    }
  }
  unint64_t v29 = v44;
  sub_2FBDC0();
  uint64_t v30 = v43;
  uint64_t v32 = v45;
  uint64_t v31 = v46;
  (*(void (**)(unsigned char *, void, uint64_t))(v43 + 104))(v45, enum case for NWPath.Status.satisfied(_:), v46);
  char v33 = sub_2FBDA0();
  unint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v30 + 8);
  v34(v32, v31);
  uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v34)(v29, v31);
  *uint64_t v47 = v33 & 1;
  return result;
}

Swift::Void __swiftcall FontDownloadAlert.presentAlert()()
{
  *(unsigned char *)(v0 + 3) = 1;
}

uint64_t FontDownloadAlert.waitForWifiButton.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 6);
  id v2 = BookEPUBBundle();
  NSString v3 = sub_2FC140();
  NSString v4 = sub_2FC140();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  sub_2FC180();
  sub_371F4(&qword_3FE718);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6;
  *(_OWORD *)(v6 + 16) = xmmword_32BAE0;
  if (v1) {
    uint64_t v8 = 1312902231;
  }
  else {
    uint64_t v8 = 0x69462D6957;
  }
  if (v1) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_4A03C();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  uint64_t v10 = sub_2FC150();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t FontDownloadAlert.themeTitle.getter()
{
  id v0 = BookEPUBBundle();
  NSString v1 = sub_2FC140();
  NSString v2 = sub_2FC140();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = sub_2FC180();
  return v4;
}

uint64_t FontDownloadAlert.themeMessage.getter()
{
  int v1 = v0[4];
  if (v0[5] == 1 || (*v0 & 1) != 0 || v0[1])
  {
    id v2 = BookEPUBBundle();
LABEL_6:
    NSString v4 = sub_2FC140();
    NSString v5 = sub_2FC140();
    id v14 = [v2 localizedStringForKey:v4 value:v5 table:0];

    uint64_t v15 = sub_2FC180();
    return v15;
  }
  int v3 = v0[6];
  id v2 = BookEPUBBundle();
  if (v1) {
    goto LABEL_6;
  }
  NSString v6 = sub_2FC140();
  NSString v7 = sub_2FC140();
  id v8 = [v2 localizedStringForKey:v6 value:v7 table:0];

  sub_2FC180();
  sub_371F4(&qword_3FE718);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v9;
  *(_OWORD *)(v9 + 16) = xmmword_32BAE0;
  if (v3) {
    uint64_t v11 = 1312902231;
  }
  else {
    uint64_t v11 = 0x69462D6957;
  }
  if (v3) {
    unint64_t v12 = 0xE400000000000000;
  }
  else {
    unint64_t v12 = 0xE500000000000000;
  }
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_4A03C();
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  uint64_t v13 = sub_2FC150();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FontDownloadAlert.fontTitle.getter()
{
  id v0 = BookEPUBBundle();
  NSString v1 = sub_2FC140();
  NSString v2 = sub_2FC140();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = sub_2FC180();
  return v4;
}

uint64_t FontDownloadAlert.fontMessage.getter()
{
  int v1 = v0[4];
  if (v0[5] == 1 || (*v0 & 1) != 0 || v0[1])
  {
    id v2 = BookEPUBBundle();
LABEL_6:
    NSString v4 = sub_2FC140();
    NSString v5 = sub_2FC140();
    id v14 = [v2 localizedStringForKey:v4 value:v5 table:0];

    uint64_t v15 = sub_2FC180();
    return v15;
  }
  int v3 = v0[6];
  id v2 = BookEPUBBundle();
  if (v1) {
    goto LABEL_6;
  }
  NSString v6 = sub_2FC140();
  NSString v7 = sub_2FC140();
  id v8 = [v2 localizedStringForKey:v6 value:v7 table:0];

  sub_2FC180();
  sub_371F4(&qword_3FE718);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v9;
  *(_OWORD *)(v9 + 16) = xmmword_32BAE0;
  if (v3) {
    uint64_t v11 = 1312902231;
  }
  else {
    uint64_t v11 = 0x69462D6957;
  }
  if (v3) {
    unint64_t v12 = 0xE400000000000000;
  }
  else {
    unint64_t v12 = 0xE500000000000000;
  }
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_4A03C();
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  uint64_t v13 = sub_2FC150();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t destroy for FontDownloadAlert()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FontDownloadAlert(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FontDownloadAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FontDownloadAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FontDownloadAlert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FontDownloadAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontDownloadAlert()
{
  return &type metadata for FontDownloadAlert;
}

void sub_7F5CC(char a1@<W0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = a1;
  *(unsigned char *)(a7 + 1) = a2;
  *(unsigned char *)(a7 + 2) = a3;
  *(unsigned char *)(a7 + 3) = a4;
  *(unsigned char *)(a7 + 4) = a5;
  *(unsigned char *)(a7 + 5) = a6;
  *(unsigned char *)(a7 + 6) = MGGetBoolAnswer();
  id v8 = BookEPUBBundle();
  NSString v9 = sub_2FC140();
  NSString v10 = sub_2FC140();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  uint64_t v12 = sub_2FC180();
  uint64_t v14 = v13;

  *(void *)(a7 + 8) = v12;
  *(void *)(a7 + 16) = v14;
  id v15 = BookEPUBBundle();
  NSString v16 = sub_2FC140();
  NSString v17 = sub_2FC140();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v19 = sub_2FC180();
  uint64_t v21 = v20;

  *(void *)(a7 + 24) = v19;
  *(void *)(a7 + 32) = v21;
}

uint64_t sub_7F728()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_400838);
  sub_60044(v0, (uint64_t)qword_400838);
  sub_5C230();
  sub_2FCBE0();
  return sub_2FB8B0();
}

void sub_7F7C0(char a1, double a2)
{
  uint64_t v3 = *(void *)v2;
  char v5 = *(unsigned char *)(v2 + 8);
  char v6 = *(unsigned char *)(v2 + 9);
  char v7 = *(unsigned char *)(v2 + 10);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 40);
  uint64_t v13 = *(void *)(v2 + 48);
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v14 = *(void *)(v2 + 64);
  uint64_t v16 = *(void *)(v2 + 72);
  uint64_t v15 = *(void *)(v2 + 80);
  switch(*(void *)v2)
  {
    case 0:
      char v21 = a1;
      uint64_t v22 = *(void *)(v2 + 48);
      uint64_t v23 = *(void *)(v2 + 56);
      if (qword_3FD890 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_2FB8A0();
      sub_60044(v17, (uint64_t)qword_407610);
      swift_bridgeObjectRetain();
      id v18 = sub_2FB880();
      log = v18;
      os_log_type_t type = sub_2FC7B0();
      if (os_log_type_enabled(v18, type))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315138;
        sub_38EF0(0xD00000000000001ALL, 0x800000000030E690, &v25);
        sub_2FCC70();
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      uint64_t v13 = v22;
      uint64_t v12 = v23;
      a1 = v21;
      goto LABEL_10;
    case 1:
LABEL_10:
      uint64_t v25 = v3;
      char v26 = v5;
      char v27 = v6;
      char v28 = v7;
      uint64_t v29 = v8;
      uint64_t v30 = v9;
      uint64_t v31 = v10;
      uint64_t v32 = v11;
      uint64_t v33 = v13;
      uint64_t v34 = v12;
      uint64_t v35 = v14;
      uint64_t v36 = v16;
      uint64_t v37 = v15;
      sub_7FF24(a1 & 1, a2);
      break;
    case 2:
      uint64_t v25 = 2;
      char v26 = v5;
      char v27 = v6;
      char v28 = v7;
      uint64_t v29 = v8;
      uint64_t v30 = v9;
      uint64_t v31 = v10;
      uint64_t v32 = v11;
      uint64_t v33 = v13;
      uint64_t v34 = v12;
      uint64_t v35 = v14;
      uint64_t v36 = v16;
      uint64_t v37 = v15;
      sub_7FC88(a2);
      break;
    case 3:
      uint64_t v25 = 3;
      char v26 = v5;
      char v27 = v6;
      char v28 = v7;
      uint64_t v29 = v8;
      uint64_t v30 = v9;
      uint64_t v31 = v10;
      uint64_t v32 = v11;
      uint64_t v33 = v13;
      uint64_t v34 = v12;
      uint64_t v35 = v14;
      uint64_t v36 = v16;
      uint64_t v37 = v15;
      sub_7FAC8(a2);
      break;
    default:
      type metadata accessor for BookLayoutMode(0);
      uint64_t v25 = v3;
      sub_2FD240();
      __break(1u);
      JUMPOUT(0x7FAB8);
  }
}

double sub_7FAC8(double a1)
{
  double v2 = ceil(a1 * 0.085);
  double v3 = floor((a1 - *(double *)(v1 + 80) * (*(double *)(v1 + 72) + 5.0)) * 0.5);
  if (v2 > v3) {
    double v4 = v2;
  }
  else {
    double v4 = v3;
  }
  double v5 = BookThemeEntity.marginAdjustmentScaleFactor.getter();
  if (qword_3FD6F8 != -1) {
    swift_once();
  }
  double v6 = v4 * v5;
  uint64_t v7 = sub_2FB8A0();
  sub_60044(v7, (uint64_t)qword_400838);
  uint64_t v8 = sub_2FB880();
  os_log_type_t v9 = sub_2FC7A0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218240;
    sub_2FCC70();
    *(_WORD *)(v10 + 12) = 2048;
    sub_2FCC70();
    _os_log_impl(&def_7BFC0, v8, v9, "Horizontal Scroll margin:%f, defaultGutter:%f", (uint8_t *)v10, 0x16u);
    swift_slowDealloc();
  }

  return floor(fmax(v6, 2.0));
}

double sub_7FC88(double a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  double v4 = *(double *)(v1 + 80);
  double v5 = ceil(a1 * 0.085);
  double v6 = fmax(floor((a1 + v4 * -250.0) * 0.5), 10.0);
  double v7 = floor((a1 - v4 * (*(double *)(v1 + 72) + 5.0)) * 0.5);
  if (v5 > v7) {
    double v8 = v5;
  }
  else {
    double v8 = v7;
  }
  double v9 = floor((a1 + v4 * -25.0) * 0.5);
  if (v5 > v9) {
    double v9 = v5;
  }
  BOOL v10 = *(unsigned __int8 *)(v1 + 8) != 0;
  if (v3) {
    BOOL v10 = (v2 >> 8) & 1;
  }
  if (!v10)
  {
    double v12 = v8 - v6;
    double v13 = 0.0;
    if (!v3 || (v2 & 0x100) == 0) {
      goto LABEL_21;
    }
    double v11 = *(double *)(v1 + 64);
    goto LABEL_18;
  }
  if (!v3)
  {
    double v12 = v8 - v6;
    double v13 = 0.0;
LABEL_21:
    double v14 = v13 * v12 * 10.0;
    goto LABEL_22;
  }
  double v11 = *(double *)(v1 + 64);
  if (v11 < -0.1 || v11 < 0.1 && v11 <= 0.0)
  {
    double v12 = v8 - v6;
    double v13 = 0.0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    double v13 = -0.1;
    if (v11 >= -0.1) {
      double v13 = fmin(v11, 0.1);
    }
    goto LABEL_21;
  }
  double v21 = v11 * 10.0;
  BOOL v22 = v11 < 0.1;
  double v23 = 1.0;
  if (v22) {
    double v23 = v21;
  }
  if ((v2 & 0x100) == 0) {
    double v23 = 0.0;
  }
  double v14 = v23 * (v9 - v8);
LABEL_22:
  if (qword_3FD6F8 != -1) {
    swift_once();
  }
  double v15 = v8 + v14;
  uint64_t v16 = sub_2FB8A0();
  sub_60044(v16, (uint64_t)qword_400838);
  uint64_t v17 = sub_2FB880();
  os_log_type_t v18 = sub_2FC7A0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134218240;
    sub_2FCC70();
    *(_WORD *)(v19 + 12) = 2048;
    sub_2FCC70();
    _os_log_impl(&def_7BFC0, v17, v18, "Interpolated Veritcal Scroll margin:%f, defaultGutter:%f", (uint8_t *)v19, 0x16u);
    swift_slowDealloc();
  }

  return floor(fmax(v15, 2.0));
}

double sub_7FF24(char a1, double a2)
{
  uint64_t v5 = sub_2FB8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = a2 * 0.085;
  if (a1) {
    double v9 = a2 * 0.085 * 0.666666667;
  }
  long long v10 = *(_OWORD *)(v2 + 32);
  long long v21 = *(_OWORD *)(v2 + 16);
  char v11 = *(unsigned char *)(v2 + 9);
  char v12 = *(unsigned char *)(v2 + 10);
  uint64_t v13 = *(void *)(v2 + 64);
  double v14 = ceil(v9);
  LOBYTE(v20) = *(unsigned char *)(v2 + 8);
  BYTE1(v20) = v11;
  BYTE2(v20) = v12;
  long long v22 = v10;
  long long v23 = *(_OWORD *)(v2 + 48);
  uint64_t v24 = v13;
  double v15 = v14 * BookThemeEntity.marginAdjustmentScaleFactor.getter();
  if (qword_3FD6F8 != -1) {
    swift_once();
  }
  sub_60044(v5, (uint64_t)qword_400838);
  double v20 = 0.0;
  *(void *)&long long v21 = 0xE000000000000000;
  sub_2FCDD0(19);
  v25._object = (void *)0x800000000030E6E0;
  v25._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_2FC260(v25);
  sub_2FC5F0();
  Logger.once(per:)((uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_2FB880();
  os_log_type_t v17 = sub_2FC7A0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134218240;
    double v20 = v15;
    sub_2FCC70();
    *(_WORD *)(v18 + 12) = 2048;
    double v20 = v14;
    sub_2FCC70();
    _os_log_impl(&def_7BFC0, v16, v17, "Paged margin:%f, defaultGutter:%f", (uint8_t *)v18, 0x16u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return floor(fmax(v15, 2.0));
}

uint64_t static AccessibilityStateProviding<>.standard.getter()
{
  return _swift_initStaticObject(v0, &unk_3FD960);
}

BOOL StandardAccessibilityStateProvider.isReduceMotionEnabled.getter()
{
  return UIAccessibilityIsReduceMotionEnabled();
}

uint64_t StandardAccessibilityStateProvider.isReduceMotionEnabledPublisher.getter()
{
  uint64_t v0 = sub_2FC930();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_371F4(&qword_400850);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self defaultCenter];
  sub_2FC940();

  sub_52CA4();
  sub_2FBC30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_80428();
  uint64_t v9 = sub_2FBBD0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

BOOL sub_80400@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = UIAccessibilityIsReduceMotionEnabled();
  *a1 = result;
  return result;
}

unint64_t sub_80428()
{
  unint64_t result = qword_400858;
  if (!qword_400858)
  {
    sub_37294(&qword_400850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400858);
  }
  return result;
}

uint64_t dispatch thunk of AccessibilityStateProviding.isReduceMotionEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccessibilityStateProviding.isReduceMotionEnabledPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for StandardAccessibilityStateProvider()
{
  return self;
}

uint64_t method lookup function for StandardAccessibilityStateProvider(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for StandardAccessibilityStateProvider);
}

uint64_t sub_804EC(uint64_t a1, void *a2)
{
  sub_52C40(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity;
  swift_beginAccess();
  sub_39FCC(v3);
  sub_469A4(v5, v3);
  return swift_endAccess();
}

uint64_t sub_8055C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity;
  swift_beginAccess();
  return sub_52C40(v3, a1);
}

id ExpandedContentPresenter.__allocating_init(bookEntity:router:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone(v3);
  uint64_t v7 = (uint64_t)v6 + OBJC_IVAR___BEExpandedContentPresenter_router;
  *(_OWORD *)uint64_t v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(void *)(v7 + 32) = 0;
  sub_52C40(a1, (uint64_t)v6 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity);
  swift_beginAccess();
  id v8 = v6;
  sub_80748(a2, v7);
  swift_endAccess();

  v11.receiver = v8;
  v11.super_class = v3;
  id v9 = [super init];
  sub_807B0(a2);
  sub_39FCC(a1);
  return v9;
}

id ExpandedContentPresenter.init(bookEntity:router:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t)v2 + OBJC_IVAR___BEExpandedContentPresenter_router;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(void *)(v5 + 32) = 0;
  sub_52C40(a1, (uint64_t)v2 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity);
  swift_beginAccess();
  id v6 = v2;
  sub_80748(a2, v5);
  swift_endAccess();

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for ExpandedContentPresenter();
  [super init];
  sub_807B0(a2);
  sub_39FCC(a1);
  return v7;
}

uint64_t sub_80748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4(&qword_400910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_807B0(uint64_t a1)
{
  uint64_t v2 = sub_371F4(&qword_400910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ExpandedContentPresenter()
{
  return self;
}

void ExpandedContentPresenter.init()()
{
}

id ExpandedContentPresenter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandedContentPresenter();
  return [super dealloc];
}

uint64_t ExpandedContentPresenter.expandedContentViewController(_:handleUserRequestForFrameToLoadExternalURL:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8 = v4 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v8, (uint64_t)&v12);
  if (v13)
  {
    sub_469A4(&v12, (uint64_t)v14);
    uint64_t v9 = v15;
    uint64_t v10 = v16;
    sub_4F798(v14, v15);
    (*(void (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t))(v10 + 40))(a2, a3, a4, v9, v10);
    return sub_39FCC((uint64_t)v14);
  }
  else
  {
    sub_807B0((uint64_t)&v12);
    return a3(0);
  }
}

uint64_t sub_809F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4(&qword_400910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ExpandedContentPresenter.expandedContentViewController(_:handleExternalLoadRequest:likelyUserInitiated:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_8143C(a2, a3);
}

uint64_t ExpandedContentPresenter.expandedContentViewController(_:handleInternalLoadRequest:)(uint64_t a1, uint64_t a2)
{
  return sub_8150C(a2);
}

void ExpandedContentPresenter.expandedContentViewController(_:handleInternalLoadRequestForNewWindow:)(uint64_t a1@<X0>, NSURL *a2@<X8>)
{
  sub_2FB3F0(a2);
  id v5 = v4;
  [v2 expandedContentViewController:a1 handleInternalLoadRequest:v4];
}

uint64_t ExpandedContentPresenter.expandedContentViewController(_:present:completion:)(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_816C4(a2, a3, a4);
}

Swift::String __swiftcall ExpandedContentPresenter.expandedContentViewController(_:stringForCopyFrom:)(UIViewController _, Swift::String stringForCopyFrom)
{
  uint64_t v2 = sub_818EC(stringForCopyFrom._countAndFlagsBits, (uint64_t)stringForCopyFrom._object);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

id ExpandedContentPresenter.expandedContentViewController(_:shareText:sourceRect:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  id result = [a1 viewIfLoaded];
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = v7 + OBJC_IVAR___BEExpandedContentPresenter_router;
    swift_beginAccess();
    sub_809F4(v16, (uint64_t)v24);
    if (v25)
    {
      sub_52C40((uint64_t)v24, (uint64_t)v21);
      id v17 = v15;
      sub_807B0((uint64_t)v24);
      uint64_t v18 = v22;
      uint64_t v19 = v23;
      sub_4F798(v21, v22);
      v20[0] = v17;
      *(double *)&v20[1] = a4;
      *(double *)&v20[2] = a5;
      *(double *)&v20[3] = a6;
      *(double *)&v20[4] = a7;
      (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v19 + 64))(a2, a3, v20, v18, v19);

      return (id)sub_39FCC((uint64_t)v21);
    }
    else
    {

      return (id)sub_807B0((uint64_t)v24);
    }
  }
  return result;
}

uint64_t sub_81308(uint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  uint64_t v7 = a2 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v7, (uint64_t)&v12);
  if (v13)
  {
    sub_469A4(&v12, (uint64_t)v14);
    uint64_t v8 = v15;
    uint64_t v9 = v16;
    sub_4F798(v14, v15);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v9 + 40);
    _Block_copy(a3);
    v10(a1, sub_81AD0, v6, v8, v9);
    sub_39FCC((uint64_t)v14);
  }
  else
  {
    _Block_copy(a3);
    sub_807B0((uint64_t)&v12);
    a3[2](a3, 0);
  }
  return swift_release();
}

uint64_t sub_8143C(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v5, (uint64_t)v12);
  if (!v13) {
    return sub_807B0((uint64_t)v12);
  }
  sub_52C40((uint64_t)v12, (uint64_t)v9);
  sub_807B0((uint64_t)v12);
  uint64_t v6 = v10;
  uint64_t v7 = v11;
  sub_4F798(v9, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 32))(a1, a2 & 1, v6, v7);
  return sub_39FCC((uint64_t)v9);
}

uint64_t sub_8150C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity;
  swift_beginAccess();
  sub_52C40(v4, (uint64_t)v18);
  uint64_t v5 = v19;
  uint64_t v6 = v20;
  sub_4F798(v18, v19);
  LOBYTE(v5) = BookEntityType.urlReferencesTableOfContents(_:)(a1, v5, v6);
  sub_39FCC((uint64_t)v18);
  if (v5)
  {
    uint64_t v7 = v2 + OBJC_IVAR___BEExpandedContentPresenter_router;
    swift_beginAccess();
    sub_809F4(v7, (uint64_t)v18);
    if (v19)
    {
      sub_52C40((uint64_t)v18, (uint64_t)v15);
      sub_807B0((uint64_t)v18);
      uint64_t v8 = v16;
      uint64_t v9 = v17;
      sub_4F798(v15, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v8, v9);
      sub_39FCC((uint64_t)v15);
LABEL_7:
      char v13 = 0;
      return v13 & 1;
    }
LABEL_6:
    sub_807B0((uint64_t)v18);
    goto LABEL_7;
  }
  uint64_t v10 = v2 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v10, (uint64_t)v18);
  if (!v19) {
    goto LABEL_6;
  }
  sub_52C40((uint64_t)v18, (uint64_t)v15);
  sub_807B0((uint64_t)v18);
  uint64_t v11 = v16;
  uint64_t v12 = v17;
  sub_4F798(v15, v16);
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(a1, v11, v12);
  sub_39FCC((uint64_t)v15);
  return v13 & 1;
}

uint64_t sub_816C4(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v7 = v3 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v7, (uint64_t)&v15);
  if (v16)
  {
    sub_469A4(&v15, (uint64_t)v18);
    uint64_t v8 = v3 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity;
    swift_beginAccess();
    sub_52C40(v8, (uint64_t)&v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    sub_4F798(&v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
    NSString v11 = sub_2FC140();
    swift_bridgeObjectRelease();
    sub_39FCC((uint64_t)&v15);
    [a1 setTitle:v11];

    uint64_t v12 = v19;
    uint64_t v13 = v20;
    sub_4F798(v18, v19);
    (*(void (**)(void *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, a2, a3, v12, v13);
    return sub_39FCC((uint64_t)v18);
  }
  else
  {
    uint64_t result = sub_807B0((uint64_t)&v15);
    if (a2) {
      return a2(result);
    }
  }
  return result;
}

uint64_t _s8BookEPUB24ExpandedContentPresenterC08expandedD16ViewDidDisappearyySo16UIViewControllerCF_0()
{
  uint64_t v1 = v0 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v1, (uint64_t)v8);
  if (!v9) {
    return sub_807B0((uint64_t)v8);
  }
  sub_52C40((uint64_t)v8, (uint64_t)v5);
  sub_807B0((uint64_t)v8);
  uint64_t v2 = v6;
  uint64_t v3 = v7;
  sub_4F798(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
  return sub_39FCC((uint64_t)v5);
}

uint64_t sub_818EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR___BEExpandedContentPresenter_router;
  swift_beginAccess();
  sub_809F4(v5, (uint64_t)&v9);
  if (v10)
  {
    sub_469A4(&v9, (uint64_t)v11);
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    sub_4F798(v11, v12);
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, a2, v6, v7);
    sub_39FCC((uint64_t)v11);
  }
  else
  {
    sub_807B0((uint64_t)&v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_819CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___BEExpandedContentPresenter_bookEntity;
  swift_beginAccess();
  return sub_52C40(v3, a2);
}

uint64_t method lookup function for ExpandedContentPresenter(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ExpandedContentPresenter);
}

uint64_t dispatch thunk of ExpandedContentPresenter.bookEntity.getter()
{
  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ExpandedContentPresenter.__allocating_init(bookEntity:router:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_81A88(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_81A98()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_81AD0(char a1)
{
  return sub_CFBC8(a1, *(void *)(v1 + 16));
}

uint64_t dispatch thunk of ReadingSettingsRouting.readingSettingsShowThemeOptions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ReadingSettingsRouting.readingSettingsExit()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingSettingsRouting.readingSettingsSetAdjustingBrightness(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EpubParsing.cachedTocCfiIdMap(bookDatabaseKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_81B2C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2FCD50();
    sub_2FBA80();
    sub_9C5AC((unint64_t *)&unk_400F20, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = sub_2FC620();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_9C5F4();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_9C5F4();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_9C5F4();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_9C5F4();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_9C5F4();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_9C5F4();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_9C5F4();
    }
    while (1)
    {
      sub_2FBA70();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_2FCD60())
      {
        sub_2FBA80();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_9C5F4();
    }
  }
  __break(1u);
  return result;
}

unint64_t ContentLoaderState.rawValue.getter()
{
  unint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x676E6964616F6CLL;
      break;
    case 3:
      unint64_t result = 0x646564616F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

BookEPUB::ContentLoaderState_optional __swiftcall ContentLoaderState.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawCFDictionaryRef Value = &off_3C1DD0;
  v8._object = object;
  unint64_t v5 = sub_2FD0A0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t sub_81ED0(unsigned __int8 *a1, char *a2)
{
  return sub_4740C(*a1, *a2);
}

Swift::Int sub_81EDC()
{
  return sub_1B7A50();
}

uint64_t sub_81EE4()
{
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_81FA4()
{
  return sub_1B80B4();
}

BookEPUB::ContentLoaderState_optional sub_81FAC(Swift::String *a1)
{
  return ContentLoaderState.init(rawValue:)(*a1);
}

void sub_81FB8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  unint64_t v3 = 0x6C616974696E69;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x800000000030BB20;
      unint64_t v3 = 0xD000000000000015;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E6964616F6CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x646564616F6CLL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

NSString sub_82050()
{
  NSString result = sub_2FC140();
  qword_417018 = (uint64_t)result;
  return result;
}

uint64_t sub_82088()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_417020);
  sub_60044(v0, (uint64_t)qword_417020);
  if (qword_3FD6B8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_416FD8;
  return sub_2FB8B0();
}

uint64_t ContentLoader.loaderID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_loaderID;
  uint64_t v4 = sub_2FB570();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_82188(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  v6[0] = *a1;
  unsigned __int8 v2 = v6[0];
  sub_821EC(v6);
  uint64_t v4 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_state);
  uint64_t result = swift_beginAccess();
  *uint64_t v4 = v2;
  return result;
}

void sub_821EC(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = v1;
  oslog = sub_2FB880();
  os_log_type_t v4 = sub_2FC7D0();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = 0x6C616974696E69;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446978;
    uint64_t v7 = ContentLoader.shortDescription.getter();
    sub_38EF0(v7, v8, &v20);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    int64_t v9 = &v3[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
    swift_beginAccess();
    uint64_t v10 = *v9;
    unint64_t v11 = 0xE700000000000000;
    uint64_t v12 = 0x6C616974696E69;
    switch(v10)
    {
      case 1:
        unint64_t v11 = 0x800000000030BB20;
        uint64_t v12 = 0xD000000000000015;
        break;
      case 2:
        uint64_t v12 = 0x676E6964616F6CLL;
        break;
      case 3:
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x646564616F6CLL;
        break;
      default:
        break;
    }
    sub_38EF0(v12, v11, &v20);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2082;
    unint64_t v13 = 0xE700000000000000;
    switch(v2)
    {
      case 1:
        unint64_t v13 = 0x800000000030BB20;
        uint64_t v5 = 0xD000000000000015;
        break;
      case 2:
        uint64_t v5 = 0x676E6964616F6CLL;
        break;
      case 3:
        unint64_t v13 = 0xE600000000000000;
        uint64_t v5 = 0x646564616F6CLL;
        break;
      default:
        break;
    }
    uint64_t v18 = (void *)sub_38EF0(v5, v13, &v20);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2082;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    if (v18)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(v19 + 96))(ObjectType);
    }
    sub_371F4((uint64_t *)&unk_403B40);
    uint64_t v15 = sub_2FC1E0();
    sub_38EF0(v15, v16, &v20);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, oslog, v4, "Transitioning loader:%{public}s #loaderState %{public}s to %{public}s for webView:%{public}s", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t ContentLoader.shortDescription.getter()
{
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_2FCDD0(37);
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for ContentLoader(0);
  id v1 = [super description];
  uint64_t v2 = sub_2FC180();
  uint64_t v4 = v3;

  swift_bridgeObjectRelease();
  uint64_t v19 = v2;
  uint64_t v20 = v4;
  v21._uint64_t countAndFlagsBits = 0x726564616F6C203ALL;
  v21._object = (void *)0xEC000000203A4449;
  sub_2FC260(v21);
  sub_2FB570();
  sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
  v22._uint64_t countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v22);
  swift_bridgeObjectRelease();
  v23._object = (void *)0x800000000030E800;
  v23._uint64_t countAndFlagsBits = 0xD000000000000013;
  sub_2FC260(v23);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v5 = v16;
  if (v16)
  {
    uint64_t v6 = v17;
    uint64_t v7 = sub_4F798(v15, v16);
    uint64_t v8 = *(void *)(v5 - 8);
    __n128 v9 = __chkstk_darwin(v7);
    unint64_t v11 = (char *)&v15[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    sub_5BE90((uint64_t)v15, &qword_4009B0);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
  }
  else
  {
    sub_5BE90((uint64_t)v15, &qword_4009B0);
    uint64_t v12 = -1;
  }
  v15[0] = v12;
  v24._uint64_t countAndFlagsBits = sub_2FD1A0();
  sub_2FC260(v24);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t type metadata accessor for ContentLoader(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_400AE8);
}

uint64_t sub_8291C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_state);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_8296C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v0 = v11;
  if (v11)
  {
    uint64_t v1 = v12;
    uint64_t v2 = sub_4F798(v10, v11);
    uint64_t v3 = *(void *)(v0 - 8);
    __n128 v4 = __chkstk_darwin(v2);
    uint64_t v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v3 + 16))(v6, v4);
    sub_5BE90((uint64_t)v10, &qword_4009B0);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(v0, v1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v0);
  }
  else
  {
    sub_5BE90((uint64_t)v10, &qword_4009B0);
    return 0;
  }
  return v7;
}

uint64_t sub_82B00(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  __n128 v4 = (void *)(*a2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
  swift_beginAccess();
  *__n128 v4 = v2;
  v4[1] = v3;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  if (!*v4) {
    ContentLoader.prepareForReuse()();
  }
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall ContentLoader.prepareForReuse()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2FB880();
  os_log_type_t v3 = sub_2FC7D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    *(void *)&long long v74 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    uint64_t v5 = ContentLoader.shortDescription.getter();
    *(void *)&long long v72 = sub_38EF0(v5, v6, (uint64_t *)&v74);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2050;
    uint64_t v7 = sub_8296C();
    char v9 = v8;

    uint64_t v10 = -5;
    if ((v9 & 1) == 0) {
      uint64_t v10 = v7;
    }
    *(void *)&long long v72 = v10;
    sub_2FCC70();

    _os_log_impl(&def_7BFC0, v2, v3, "Preparing #loadingStatus loader %{public}s for ordinal %{public}ld for reuse", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = &v1[OBJC_IVAR____TtC8BookEPUB13ContentLoader_cancellables];
  swift_beginAccess();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_81B2C(v12);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v11 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  if (qword_3FD6C0 != -1) {
    swift_once();
  }
  if (byte_3FEF38 == 1)
  {
    unint64_t v13 = &v1[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pageLayers];
    swift_beginAccess();
    uint64_t v14 = *(void *)v13;
    if (*(void *)v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_2FD030();
      if (v15) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_11:
        if (v15 < 1) {
          goto LABEL_60;
        }
        for (uint64_t i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v17 = (id)sub_2FCE20();
          }
          else {
            id v17 = *(id *)(v14 + 8 * i + 32);
          }
          objc_super v18 = v17;
          [v17 removeFromSuperlayer];
        }
      }
    }
    swift_bridgeObjectRelease();
    *(void *)unint64_t v13 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  sub_8E070();
  uint64_t v76 = 0;
  long long v74 = 0u;
  long long v75 = 0u;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_46A30((uint64_t)&v74, (uint64_t)&v72, &qword_4009B0);
  uint64_t v19 = v1;
  sub_2FBBB0();
  sub_5BE90((uint64_t)&v74, &qword_4009B0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v20 = (void *)v74;
  if ((void)v74)
  {
    self;
    uint64_t v21 = swift_dynamicCastObjCClass();
    if (v21
      && (uint64_t v22 = v21,
          Swift::String v23 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService],
          swift_beginAccess(),
          swift_unknownObjectWeakLoadStrong()))
    {
      uint64_t v24 = *((void *)v23 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 88))(v22, ObjectType, v24);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  char v26 = (void *)v74;
  if ((void)v74)
  {
    id v27 = [(id)v74 superview];

    if (v27)
    {

      char v28 = v19;
      uint64_t v29 = sub_2FB880();
      os_log_type_t v30 = sub_2FC790();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v74 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136446210;
        uint64_t v32 = ContentLoader.shortDescription.getter();
        *(void *)&long long v72 = sub_38EF0(v32, v33, (uint64_t *)&v74);
        sub_2FCC70();

        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2FBBA0();
      swift_release();
      swift_release();
      uint64_t v34 = (void *)v74;
      if ((void)v74)
      {
        [(id)v74 removeFromSuperview];
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v36 = (void *)Strong;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2FBBA0();
        swift_release();
        swift_release();
        id v37 = (id)v74;
        if ((void)v74)
        {
          self;
          uint64_t v38 = swift_dynamicCastObjCClass();
          if (v38)
          {
            uint64_t v39 = (void *)v38;
            id v40 = v37;
            id v41 = [v39 be_uiHandler];
            if (v41)
            {
              uint64_t v42 = v41;
              [v41 setDelegate:0];
            }
            id v43 = [v39 configuration];
            id v37 = [v43 userContentController];

            sub_13F36C(v37);
          }
          else
          {
            id v40 = v36;
          }

          uint64_t v36 = v37;
        }
      }
    }
  }
  uint64_t v44 = (uint64_t)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost];
  swift_beginAccess();
  sub_46A30(v44, (uint64_t)&v72, &qword_4009C0);
  if (v73)
  {
    sub_469A4(&v72, (uint64_t)&v74);
    uint64_t v45 = swift_weakLoadStrong();
    if (!v45)
    {
LABEL_45:
      sub_39FCC((uint64_t)&v74);
      goto LABEL_47;
    }
    uint64_t v46 = v45;
    __chkstk_darwin(v45);
    v70[2] = &v74;
    swift_beginAccess();
    uint64_t v47 = sub_97B20((uint64_t (*)(uint64_t *))sub_97B00, (uint64_t)v70);
    uint64_t v48 = v47;
    unint64_t v49 = *(void *)(v46 + 32);
    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_2FD030();
      swift_bridgeObjectRelease();
      if (v50 >= v48) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v50 = *(void *)((char *)&dword_10 + (v49 & 0xFFFFFFFFFFFFFF8));
      if (v50 >= v47)
      {
LABEL_44:
        sub_9B06C(v48, v50, (void (*)(void))type metadata accessor for ContentViewHost);
        swift_endAccess();
        uint64_t v51 = *((void *)&v75 + 1);
        uint64_t v52 = v76;
        sub_4F798(&v74, *((uint64_t *)&v75 + 1));
        uint64_t v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52);
        sub_DA078(v53);
        swift_release();

        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_60:
    __break(1u);
    return;
  }
  sub_5BE90((uint64_t)&v72, &qword_4009C0);
LABEL_47:
  sub_86E78();
  swift_getKeyPath();
  swift_getKeyPath();
  long long v74 = 0uLL;
  id v54 = v19;
  sub_2FBBB0();
  sub_87094();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v55 = (void *)v74;
  if ((void)v74)
  {
    self;
    unint64_t v56 = (void *)swift_dynamicCastObjCClass();
    if (v56)
    {
      id v57 = [v56 be_viewForFindUI];

      if (v57)
      {
        uint64_t v58 = swift_allocObject();
        swift_unknownObjectWeakInit();
        *(void *)&long long v74 = v57;
        swift_getKeyPath();
        uint64_t v59 = swift_allocObject();
        *(void *)(v59 + 16) = sub_97A08;
        *(void *)(v59 + 24) = v58;
        swift_retain_n();
        uint64_t v60 = sub_2FB360();
        swift_release();
        swift_release();
        *(void *)(swift_allocObject() + 16) = v60;
        sub_2FBA80();
        swift_allocObject();
        uint64_t v55 = (void *)sub_2FBA90();

        swift_release_n();
        goto LABEL_53;
      }
    }
    else
    {
    }
    uint64_t v55 = 0;
  }
LABEL_53:
  *(void *)&v54[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation] = v55;
  swift_release();
  uint64_t v76 = 0;
  long long v74 = 0u;
  long long v75 = 0u;
  swift_beginAccess();
  sub_97968((uint64_t)&v74, v44);
  swift_endAccess();
  unint64_t v61 = sub_3EA20((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v62 = (unint64_t *)&v54[OBJC_IVAR____TtC8BookEPUB13ContentLoader_axKeyUpdates];
  swift_beginAccess();
  *uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = &v54[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
  swift_beginAccess();
  char *v63 = 0;
  sub_84C68();
  uint64_t v64 = &v54[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates];
  swift_beginAccess();
  uint64_t v65 = *(void *)v64;
  uint64_t v66 = *(void *)(*(void *)v64 + 16);
  if (v66)
  {
    swift_bridgeObjectRetain();
    uint64_t v67 = v65 + 56;
    do
    {
      uint64_t v68 = *(void (**)(_WORD *))(v67 - 8);
      v71[0] = 1;
      swift_unknownObjectRetain();
      swift_retain();
      v68(v71);
      swift_release();
      swift_unknownObjectRelease();
      v67 += 32;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v64 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  LOBYTE(v71[0]) = 1;
  sub_821EC((unsigned __int8 *)v71);
  id v69 = &v54[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
  swift_beginAccess();
  char *v69 = 1;
}

uint64_t sub_83834()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_83884()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();

  return swift_release();
}

uint64_t sub_83900(uint64_t a1, void **a2)
{
  sub_46A30(a1, (uint64_t)v7, &qword_4009B0);
  os_log_type_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_46A30((uint64_t)v7, (uint64_t)&v6, &qword_4009B0);
  id v4 = v3;
  sub_2FBBB0();
  return sub_5BE90((uint64_t)v7, &qword_4009B0);
}

uint64_t sub_8399C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();

  return swift_release();
}

uint64_t sub_83A1C(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_46A30(a1, (uint64_t)v5, &qword_4009B0);
  id v3 = v1;
  sub_2FBBB0();
  return sub_5BE90(a1, &qword_4009B0);
}

void (*sub_83AB0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  unsigned char v2[6] = sub_2FBB90();
  return sub_408A4;
}

uint64_t sub_83B3C()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__document, &qword_4009E8);
}

uint64_t sub_83B50(uint64_t a1)
{
  return sub_84518(a1, &qword_4009F0, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__document, &qword_4009E8);
}

uint64_t (*sub_83B6C(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_4009F0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB13ContentLoader__document;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4(&qword_4009E8);
  sub_2FBB70();
  swift_endAccess();
  return sub_3DCDC;
}

double sub_83C7C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

void sub_83CFC(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_9844C(v1);
}

uint64_t sub_83D58()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

void sub_83DCC(void *a1)
{
  sub_9844C(a1);
}

void (*sub_83E04(void *a1))(void ***a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  *(_OWORD *)long long v3 = *((_OWORD *)v3 + 1);
  return sub_83EB4;
}

void sub_83EB4(void ***a1, char a2)
{
  id v2 = *a1;
  long long v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[4];
  if (a2)
  {
    id v6 = v3;
    sub_86E78();
    swift_getKeyPath();
    swift_getKeyPath();
    v2[2] = v3;
    v2[3] = v4;
    id v7 = v5;
    id v8 = v6;
    sub_2FBBB0();
    sub_87094();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    char v9 = v2[2];
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (v10)
      {
        id v11 = [v10 be_viewForFindUI];

        if (v11)
        {
          uint64_t v12 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v2[2] = v11;
          swift_getKeyPath();
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = sub_97A08;
          *(void *)(v13 + 24) = v12;
          swift_retain_n();
          uint64_t v14 = sub_2FB360();
          swift_release();
          swift_release();
          *(void *)(swift_allocObject() + 16) = v14;
          sub_2FBA80();
          swift_allocObject();
          char v9 = (void *)sub_2FBA90();

          swift_release_n();
          goto LABEL_12;
        }
      }
      else
      {
      }
      char v9 = 0;
    }
LABEL_12:
    *(void *)((char *)v2[4] + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation) = v9;

    swift_release();
    goto LABEL_16;
  }
  sub_86E78();
  swift_getKeyPath();
  swift_getKeyPath();
  v2[2] = v3;
  v2[3] = v4;
  id v15 = v3;
  id v16 = v5;
  sub_2FBBB0();
  sub_87094();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  id v17 = v2[2];
  if (v17)
  {
    self;
    objc_super v18 = (void *)swift_dynamicCastObjCClass();
    if (v18)
    {
      id v19 = [v18 be_viewForFindUI];

      if (v19)
      {
        uint64_t v20 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v2[2] = v19;
        swift_getKeyPath();
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_97A08;
        *(void *)(v21 + 24) = v20;
        swift_retain_n();
        uint64_t v22 = sub_2FB360();
        swift_release();
        swift_release();
        *(void *)(swift_allocObject() + 16) = v22;
        sub_2FBA80();
        swift_allocObject();
        id v17 = (void *)sub_2FBA90();

        swift_release_n();
        goto LABEL_15;
      }
    }
    else
    {
    }
    id v17 = 0;
  }
LABEL_15:
  *(void *)((char *)v2[4] + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation) = v17;

  swift_release();
LABEL_16:

  free(v2);
}

uint64_t sub_8436C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = sub_371F4(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  id v16 = (char *)&v19 - v15;
  id v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  sub_371F4(a7);
  sub_2FBB80();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_844E8()
{
  return sub_40B0C((uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__contentView, &qword_4009F8);
}

uint64_t sub_844FC(uint64_t a1)
{
  return sub_84518(a1, &qword_400A00, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__contentView, &qword_4009F8);
}

uint64_t sub_84518(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_371F4(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  swift_beginAccess();
  sub_371F4(a4);
  sub_2FBB80();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_84648(void *a1))()
{
  long long v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_400A00);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB13ContentLoader__contentView;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4(&qword_4009F8);
  sub_2FBB70();
  swift_endAccess();
  return sub_3DCDC;
}

uint64_t sub_84758(uint64_t a1, void *a2)
{
  sub_46A30(a1, (uint64_t)v5, &qword_4009C0);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_97968((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_847C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  return sub_46A30(v3, a1, &qword_4009C0);
}

id sub_8482C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (!v3) {
    return 0;
  }
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClass();
  if (!v0)
  {

    return 0;
  }
  id v1 = [v0 be_viewForFindUI];

  return v1;
}

id sub_848FC()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryPageView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryPageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryPageView);
  }
  else
  {
    type metadata accessor for ContentLoader.AccessoryPageView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = self;
    id v3 = v4;
    id v6 = [v5 clearColor];
    [v3 setBackgroundColor:v6];

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id ExpandedContentAnimator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

id sub_84B84()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryScrollView;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryScrollView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryScrollView);
  }
  else
  {
    type metadata accessor for ContentLoader.AccessoryScrollView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setAutomaticallyAdjustsScrollIndicatorInsets:0];
    uint64_t v5 = self;
    id v3 = v4;
    id v6 = [v5 clearColor];
    [v3 setBackgroundColor:v6];

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    objc_super v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_84C68()
{
  uint64_t v52 = sub_2FB810();
  uint64_t v1 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  id v3 = &v46[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_2FB7D0();
  uint64_t v55 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v53 = &v46[-v8];
  __chkstk_darwin(v9);
  id v54 = &v46[-v10];
  uint64_t v11 = v0;
  uint64_t v12 = sub_2FB880();
  os_log_type_t v13 = sub_2FC7A0();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = &unk_417000;
  uint64_t v50 = v3;
  uint64_t v51 = v1;
  if (v14)
  {
    uint64_t v16 = swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = ContentLoader.shortDescription.getter();
    uint64_t v57 = sub_38EF0(v17, v18, v58);
    sub_2FCC70();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 1024;
    uint64_t v19 = &v11[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
    swift_beginAccess();
    LODWORD(v19) = *v19;

    int v56 = (int)v19;
    sub_2FCC70();

    _os_log_impl(&def_7BFC0, v12, v13, "loader: %{public}s #contentLoaded: %{BOOL}d", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v15 = (void *)&unk_417000;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v20 = &v11[v15[12]];
  swift_beginAccess();
  LOBYTE(v56) = *v20;
  uint64_t result = sub_2FBAD0();
  uint64_t v22 = v54;
  if (*v20 == 1)
  {
    Swift::String v23 = &v11[OBJC_IVAR____TtC8BookEPUB13ContentLoader_signposter];
    uint64_t v24 = *(void (**)(unsigned char *, char *, uint64_t))(v55 + 16);
    v24(v54, &v11[OBJC_IVAR____TtC8BookEPUB13ContentLoader_signpostID], v4);
    os_log_t v49 = v23;
    uint64_t v25 = sub_2FB7F0();
    os_signpost_type_t v26 = sub_2FC920();
    char v27 = sub_2FCBC0();
    uint64_t v48 = v24;
    if (v27)
    {
      char v28 = v24;
      uint64_t v29 = v53;
      v28(v53, v22, v4);
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v30 = 0;
      os_signpost_id_t v31 = sub_2FB7B0();
      _os_signpost_emit_with_name_impl(&def_7BFC0, v25, v26, v31, "REI.ContentLoaded", "", v30, 2u);
      uint64_t v32 = v55;
      swift_slowDealloc();

      unint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v33(v54, v4);
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v33)(v29, v4);
    }
    else
    {

      unint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v33)(v22, v4);
    }
    uint64_t v34 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_viewCreationIntervalState;
    if (*(void *)&v11[OBJC_IVAR____TtC8BookEPUB13ContentLoader_viewCreationIntervalState])
    {
      swift_retain();
      uint64_t v35 = sub_2FB7F0();
      sub_2FB840();
      int v36 = sub_2FC900();
      if (sub_2FCBC0())
      {
        int v47 = v36;
        os_log_t v49 = v35;
        id v54 = v33;
        swift_retain();
        id v37 = v50;
        sub_2FB870();
        swift_release();
        uint64_t v39 = v51;
        uint64_t v38 = v52;
        if ((*(unsigned int (**)(unsigned char *, uint64_t))(v51 + 88))(v37, v52) == enum case for OSSignpostError.doubleEnd(_:))
        {
          id v40 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v37, v38);
          id v40 = "";
        }
        id v41 = v53;
        v48(v53, v6, v4);
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        os_signpost_id_t v43 = sub_2FB7B0();
        os_log_t v44 = v49;
        _os_signpost_emit_with_name_impl(&def_7BFC0, v49, (os_signpost_type_t)v47, v43, "REI.ViewCreation", v40, v42, 2u);
        swift_slowDealloc();

        uint64_t v45 = (void (*)(unsigned char *, uint64_t))v54;
        ((void (*)(unsigned char *, uint64_t))v54)(v6, v4);
        v45(v41, v4);
      }
      else
      {

        v33(v6, v4);
      }
      *(void *)&v11[v34] = 0;
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_8529C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_852E4(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded);
  swift_beginAccess();
  unsigned char *v3 = a1;
  return sub_84C68();
}

uint64_t (*sub_8533C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_8539C;
}

uint64_t sub_8539C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_84C68();
  }
  return result;
}

uint64_t sub_853D0()
{
  return sub_85430((uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoadedSubject, (uint64_t *)&unk_400A10, &qword_3FE9B0);
}

uint64_t sub_85400()
{
  return sub_85430((uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader_accessoryViewBoundsChangedSubject, (uint64_t *)&unk_400EC0, (unint64_t *)&qword_400A30);
}

uint64_t sub_85430(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return sub_2FBBD0();
}

uint64_t sub_854A8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_cancellables);
  swift_beginAccess();
  void *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_85514()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_85560(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_cancellables);
  swift_beginAccess();
  void *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_855B4())()
{
  return j__swift_endAccess;
}

uint64_t sub_85610()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_85660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_856CC(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService;
  void v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  void v3[4] = v7;
  return sub_85754;
}

void sub_85754(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_857DC()
{
  return swift_weakLoadStrong();
}

uint64_t sub_85828()
{
  return swift_release();
}

void (*sub_85884(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylesheetProvider;
  void v3[4] = v1;
  void v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_85908;
}

void sub_85908(void **a1, char a2)
{
  id v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }

  free(v3);
}

id SnapshotContentLoader.__allocating_init(layoutProvider:contentMediator:paginatingService:stylesheetProvider:contentLoaderViewReusePool:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = objc_allocWithZone(v7);
  return ContentLoader.init(layoutProvider:contentMediator:paginatingService:stylesheetProvider:contentLoaderViewReusePool:)(a1, a2, a3, a4, a5, a6, a7);
}

id ContentLoader.init(layoutProvider:contentMediator:paginatingService:stylesheetProvider:contentLoaderViewReusePool:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a7;
  uint64_t v60 = a6;
  uint64_t v53 = a5;
  uint64_t v59 = a4;
  uint64_t v58 = a3;
  uint64_t v62 = a2;
  uint64_t v57 = a1;
  uint64_t v56 = sub_2FB7D0();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  id v54 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_371F4(&qword_4009F8);
  uint64_t v9 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_371F4(&qword_4009E8);
  uint64_t v12 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  BOOL v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2FB8A0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v7;
  sub_2FB560();
  uint64_t v20 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_signposter];
  if (qword_3FD708 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_60044(v15, (uint64_t)qword_417020);
  os_log_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v49(v18, v50, v15);
  sub_2FB7E0();
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_viewCreationIntervalState] = 0;
  v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_attemptingReload] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates] = _swiftEmptyArrayStorage;
  uint64_t v21 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider];
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v52 = v20;
  uint64_t v22 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader__document];
  uint64_t v68 = 0;
  memset(v67, 0, sizeof(v67));
  uint64_t v48 = v15;
  sub_46A30((uint64_t)v67, (uint64_t)v66, &qword_4009B0);
  sub_371F4(&qword_4009B0);
  sub_2FBB60();
  sub_5BE90((uint64_t)v67, &qword_4009B0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v14, v47);
  Swift::String v23 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader__contentView];
  v67[0] = 0uLL;
  sub_371F4(&qword_400A50);
  sub_2FBB60();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v23, v11, v51);
  uint64_t v24 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost];
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_imageFilterMode] = 0;
  v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_lineGuideEnabled] = 0;
  uint64_t v25 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_axKeyUpdates;
  *(void *)&v19[v25] = sub_3EA20((uint64_t)_swiftEmptyArrayStorage);
  v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_mediaContentState] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryPageView] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader____lazy_storage___accessoryScrollView] = 0;
  os_signpost_type_t v26 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
  v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded] = 0;
  uint64_t v27 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_accessoryViewBoundsChangedSubject;
  sub_371F4((uint64_t *)&unk_400EC0);
  swift_allocObject();
  *(void *)&v19[v27] = sub_2FBAC0();
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_cancellables] = &_swiftEmptySetSingleton;
  swift_unknownObjectWeakInit();
  char v28 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService];
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  swift_weakInit();
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pageLayers] = _swiftEmptyArrayStorage;
  v49(&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_log], v50, v48);
  v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer] = 0;
  uint64_t v29 = &v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint];
  *uint64_t v29 = 0;
  v29[1] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusLongPressRecognizer] = 0;
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusPanRecognizer] = 0;
  v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state] = 0;
  swift_beginAccess();
  uint64_t v30 = v62;
  *uint64_t v21 = v57;
  v21[1] = v30;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  os_signpost_id_t v31 = v58;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v28 + 1) = v53;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_weakAssign();
  swift_weakAssign();
  swift_beginAccess();
  LOBYTE(v64) = *v26;
  sub_371F4((uint64_t *)&unk_400A10);
  swift_allocObject();
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoadedSubject] = sub_2FBB00();
  id v32 = [objc_allocWithZone((Class)UIEditMenuInteraction) initWithDelegate:0];
  *(void *)&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_editMenuInteraction] = v32;
  sub_2FB7F0();
  unint64_t v33 = v54;
  sub_2FB7A0();
  (*(void (**)(unsigned char *, char *, uint64_t))(v55 + 32))(&v19[OBJC_IVAR____TtC8BookEPUB13ContentLoader_signpostID], v33, v56);

  uint64_t v34 = (objc_class *)type metadata accessor for ContentLoader(0);
  v65.receiver = v19;
  v65.super_class = v34;
  id v35 = [super init];
  swift_unknownObjectRetain_n();
  id v36 = v35;
  id v37 = sub_2FB880();
  os_log_type_t v38 = sub_2FC790();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136446466;
    uint64_t v40 = ContentLoader.shortDescription.getter();
    uint64_t v63 = sub_38EF0(v40, v41, &v64);
    sub_2FCC70();
    swift_bridgeObjectRelease();

    *(_WORD *)(v39 + 12) = 2082;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v43 = (*(uint64_t (**)(uint64_t))(v62 + 192))(ObjectType);
    uint64_t v63 = sub_38EF0(v43, v44, &v64);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&def_7BFC0, v37, v38, "ContentLoader %{public}s Instantiated with: #contentConfig:%{public}s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  return v36;
}

id ContentLoader.__deallocating_deinit()
{
  sub_86E78();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v1 = v0;
  sub_2FBBB0();
  sub_87094();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  *(void *)&v1[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation] = 0;
  swift_release();
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ContentLoader(0);
  return [super dealloc];
}

void sub_8690C(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v4 = v11;
  if (v11)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v12 + 144))(&v11, ObjectType, v12);

    uint64_t v6 = v12;
    if (v12)
    {
      uint64_t v7 = (uint64_t)v11;
      id v8 = v2;
      swift_bridgeObjectRetain();
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_98178(v9);

      sub_986A0(v7, v6);
      swift_bridgeObjectRelease();
      if (v10[2])
      {
        *a1 = v7;
        a1[1] = v6;
        a1[2] = (uint64_t)v10;
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void ContentLoader.convertToDocument(_:)(double *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *((_OWORD *)a1 + 1);
  long long v38 = *(_OWORD *)a1;
  long long v39 = v4;
  double v40 = a1[4];
  uint64_t v5 = sub_93258();
  if (v5)
  {
    uint64_t v6 = v5;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v7 = v35;
    if (v35)
    {
      uint64_t v8 = v36;
      uint64_t v9 = sub_4F798(v34, v35);
      uint64_t v10 = *(void *)(v7 - 8);
      __n128 v11 = __chkstk_darwin(v9);
      uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
      sub_5BE90((uint64_t)v34, &qword_4009B0);
      sub_1F44E8(v8, &v37);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v7);
      uint64_t v14 = v37;
      [v38 convertRect:v6 toCoordinateSpace:*((double *)&v38 + 1) v39, v40];
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      swift_unknownObjectRelease();
      *(void *)a2 = v14;
      *(void *)(a2 + 8) = v16;
      *(void *)(a2 + 16) = v18;
      *(void *)(a2 + 24) = v20;
      *(void *)(a2 + 32) = v22;
      *(unsigned char *)(a2 + 40) = 0;
      return;
    }
    swift_unknownObjectRelease();
    sub_5BE90((uint64_t)v34, &qword_4009B0);
  }
  id v23 = v2;
  sub_668A8((uint64_t)&v38);
  id v24 = v23;
  sub_668A8((uint64_t)&v38);
  uint64_t v25 = sub_2FB880();
  os_log_type_t v26 = sub_2FC7B0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    char v28 = (void *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138412802;
    uint64_t v37 = (uint64_t)v24;
    id v29 = v24;
    sub_2FCC70();
    *char v28 = v24;

    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v37 = sub_38EF0(0xD000000000000015, 0x800000000030E820, v34);
    sub_2FCC70();
    *(_WORD *)(v27 + 22) = 2080;
    sub_668A8((uint64_t)&v38);
    uint64_t v30 = sub_68D9C();
    unint64_t v32 = v31;
    sub_6687C((uint64_t)&v38);
    uint64_t v37 = sub_38EF0(v30, v32, v34);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    sub_6687C((uint64_t)&v38);
    sub_6687C((uint64_t)&v38);
    _os_log_impl(&def_7BFC0, v25, v26, "%@.%s: Unable to convert %s: missing document base and/or document", (uint8_t *)v27, 0x20u);
    sub_371F4(&qword_400A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_6687C((uint64_t)&v38);
    sub_6687C((uint64_t)&v38);
  }
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(unsigned char *)(a2 + 40) = 1;
}

void sub_86E78()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v15)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      objc_super v3 = (void *)Strong;
      self;
      uint64_t v4 = swift_dynamicCastObjCClass();
      if (v4)
      {
        uint64_t v5 = (void *)v4;
        id v6 = v15;
        id v7 = [v5 be_uiHandler];
        if (v7)
        {
          uint64_t v8 = v7;
          [v7 setDelegate:0];
        }
        id v9 = [v5 configuration];
        id v10 = [v9 userContentController];

        sub_13F36C(v10);
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, uint64_t))(v16 + 184))(0, ObjectType);
    [v15 setClipsToBounds:1];
    id v12 = sub_84B84();
    uint64_t v13 = *(void (**)(id, uint64_t))(v16 + 200);
    v13(v12, ObjectType);

    id v14 = sub_848FC();
    v13(v14, ObjectType);

    [v15 removeInteraction:*(void *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_editMenuInteraction)];
  }
}

void sub_87094()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v21)
  {
    uint64_t v2 = v22;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v4 = (void *)Strong;
      self;
      uint64_t v5 = swift_dynamicCastObjCClass();
      if (v5)
      {
        id v6 = (void *)v5;
        uint64_t v20 = v1;
        id v19 = v21;
        id v7 = [v6 be_uiHandler];
        if (v7)
        {
          uint64_t v8 = v7;
          [v7 setDelegate:v4];
        }
        id v9 = [v6 configuration];
        id v10 = [v9 userContentController];

        uint64_t v11 = 12;
        id v12 = &byte_3C1820;
        do
        {
          ++v12;
          id v13 = v4;
          NSString v14 = sub_2FC140();
          swift_bridgeObjectRelease();
          [v10 be_addScriptMessageHandler:v13 name:v14];

          --v11;
        }
        while (v11);

        uint64_t v2 = v22;
        uint64_t v1 = v20;
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 184))(v1, ObjectType, v2);
    [v21 setClipsToBounds:0];
    id v16 = sub_84B84();
    uint64_t v17 = *(void (**)(id, uint64_t, uint64_t, double))(v2 + 192);
    v17(v16, ObjectType, v2, 38.0);

    id v18 = sub_848FC();
    v17(v18, ObjectType, v2, 38.0);

    [v21 addInteraction:*(void *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_editMenuInteraction)];
  }
}

double ContentLoader.peripheralAccessoryLength.getter()
{
  return 38.0;
}

uint64_t sub_874E4()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_retain();

    sub_371F4((uint64_t *)&unk_400EC0);
    sub_44924((unint64_t *)&unk_400CE0, (uint64_t *)&unk_400EC0);
    sub_2FBB50();
    return swift_release();
  }
  return result;
}

void sub_8759C(char *a1, uint64_t a2)
{
  char v4 = *a1;
  char v5 = a1[1];
  char v6 = a1[2];
  uint64_t v7 = *((void *)a1 + 1);
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  uint64_t v15 = *((void *)a1 + 5);
  uint64_t v16 = *((void *)a1 + 4);
  uint64_t v13 = *((void *)a1 + 7);
  uint64_t v14 = *((void *)a1 + 6);
  *(void *)(v2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_imageFilterMode) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  id v10 = v17;
  if (v17)
  {
    uint64_t v11 = v18;
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v17) = v4;
    BYTE1(v17) = v5;
    BYTE2(v17) = v6;
    uint64_t v18 = v7;
    uint64_t v19 = v8;
    uint64_t v20 = v9;
    uint64_t v21 = v16;
    uint64_t v22 = v15;
    uint64_t v23 = v14;
    uint64_t v24 = v13;
    (*(void (**)(void **, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 168))(&v17, a2, 1, ObjectType, v11);
  }
}

void sub_876C8(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_lineGuideEnabled) & 1) != 0 || (a1)
  {
    uint64_t v2 = a1 & 1;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_lineGuideEnabled) = a1 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    if (v4)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v5 + 176))(v2, ObjectType);
    }
  }
}

uint64_t sub_8778C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v8 = (void *)v28;
  if ((void)v28)
  {
    v27[0] = v3;
    v27[1] = v4;
    uint64_t v27[2] = v5;
    v27[3] = v6;
    v27[4] = v7;
    ContentLoader.convertToUI(_:)((uint64_t)v27, (uint64_t)&v28);
    uint64_t v9 = (void *)v28;
    if ((void)v28)
    {
      double v11 = *((double *)&v29 + 1);
      double v10 = v30;
      double v13 = *((double *)&v28 + 1);
      double v12 = *(double *)&v29;
      swift_unknownObjectRetain();
      [v9 convertRect:v8 toCoordinateSpace:v13];
      CGFloat v15 = v14;
      CGFloat v17 = v16;
      CGFloat v19 = v18;
      CGFloat v21 = v20;
      swift_unknownObjectRelease();
      v31.origin.CGFloat x = v15;
      v31.origin.CGFloat y = v17;
      v31.size.CGFloat width = v19;
      v31.size.CGFloat height = v21;
      CGRectGetMidX(v31);
      v32.origin.CGFloat x = v15;
      v32.origin.CGFloat y = v17;
      v32.size.CGFloat width = v19;
      v32.size.CGFloat height = v21;
      CGRectGetMinY(v32);
      sub_39F90(0, &qword_400A98);
      double v30 = 0.0;
      long long v28 = 0u;
      long long v29 = 0u;
      uint64_t v22 = sub_2FC990();
      [*(id *)(v2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_editMenuInteraction) presentEditMenuWithConfiguration:v22];

      uint64_t v23 = 1;
      goto LABEL_8;
    }
  }
  uint64_t v22 = sub_2FB880();
  os_log_type_t v24 = sub_2FC7B0();
  if (os_log_type_enabled(v22, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&def_7BFC0, v22, v24, "Unable to present edit menu: no content view or could not convert source rect to UI", v25, 2u);
    swift_slowDealloc();
  }
  uint64_t v23 = 0;
LABEL_8:

  return v23;
}

double ContentLoader.convertToUI(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)a1;
  *(_OWORD *)&v43[16] = v5;
  *(void *)&v43[32] = *(void *)(a1 + 32);
  uint64_t v6 = sub_93258();
  if (!v6) {
    goto LABEL_6;
  }
  uint64_t v7 = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v8 = v40;
  if (!v40)
  {
    swift_unknownObjectRelease();
    sub_5BE90((uint64_t)&v38, &qword_4009B0);
LABEL_6:
    id v17 = v2;
    double v18 = sub_2FB880();
    os_log_type_t v19 = sub_2FC7B0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      CGFloat v21 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412802;
      id v42 = v17;
      id v22 = v17;
      sub_2FCC70();
      *CGFloat v21 = v17;

      *(_WORD *)(v20 + 12) = 2080;
      id v42 = (id)sub_38EF0(0x54747265766E6F63, 0xEF293A5F2849556FLL, &v38);
      sub_2FCC70();
      *(_WORD *)(v20 + 22) = 2080;
      uint64_t v23 = sub_68C9C();
      id v42 = (id)sub_38EF0(v23, v24, &v38);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v18, v19, "%@.%s: Unable to convert %s: missing document base and/or document", (uint8_t *)v20, 0x20u);
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_12;
  }
  uint64_t v9 = v41;
  double v10 = sub_4F798(&v38, v40);
  uint64_t v11 = *(void *)(v8 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  double v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
  sub_5BE90((uint64_t)&v38, &qword_4009B0);
  sub_1F44E8(v9, (uint64_t *)&v42);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
  uint64_t v15 = (uint64_t)v42;
  if (*(id *)v43 == v42)
  {
    *(void *)a2 = v7;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v43[8];
    double result = *(double *)&v43[24];
    *(_OWORD *)(a2 + 24) = *(_OWORD *)&v43[24];
    return result;
  }
  id v25 = v3;
  os_log_type_t v26 = sub_2FB880();
  os_log_type_t v27 = sub_2FC7B0();
  int v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    double v30 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    id v42 = (id)v36;
    *(_DWORD *)uint64_t v29 = 138413058;
    HIDWORD(v34) = v28;
    uint64_t v38 = (uint64_t)v25;
    uint64_t v35 = a2;
    id v31 = v25;
    sub_2FCC70();
    void *v30 = v25;

    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v38 = sub_38EF0(0x54747265766E6F63, 0xEF293A5F2849556FLL, (uint64_t *)&v42);
    sub_2FCC70();
    *(_WORD *)(v29 + 22) = 2080;
    uint64_t v32 = sub_68C9C();
    uint64_t v38 = sub_38EF0(v32, v33, (uint64_t *)&v42);
    a2 = v35;
    sub_2FCC70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 32) = 2080;
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_2FCDD0(20);
    swift_bridgeObjectRelease();
    uint64_t v38 = 0xD000000000000011;
    unint64_t v39 = 0x800000000030E840;
    uint64_t v37 = v15;
    v44._uint64_t countAndFlagsBits = sub_2FD1A0();
    sub_2FC260(v44);
    swift_bridgeObjectRelease();
    v45._uint64_t countAndFlagsBits = 41;
    v45._object = (void *)0xE100000000000000;
    sub_2FC260(v45);
    uint64_t v38 = sub_38EF0(v38, v39, (uint64_t *)&v42);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v26, BYTE4(v34), "%@.%s: Refusing to convert %s: Does not match document ID: %s", (uint8_t *)v29, 0x2Au);
    sub_371F4(&qword_400A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
LABEL_12:
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_88028(NSObject *a1, uint64_t a2, NSObject *a3, void *a4, void (*a5)(uint64_t *), uint64_t a6)
{
  void (*v29)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  char *v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, void *);
  int v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned char *v57;
  NSObject *v58;
  NSObject *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  double (*v70)(uint64_t, uint64_t);
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  NSObject *v81;
  NSObject *v82;
  NSObject *v83;
  os_log_type_t v84;
  int v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  NSObject *v103;
  unsigned char *v104;
  unsigned char *v105;
  int v106;
  void (*v107)(unsigned char *, void *);
  void *v108;
  unint64_t v109;
  unint64_t v110;
  int64_t v111;
  unint64_t v112;
  void *v113;
  int64_t v114;
  void *v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  NSObject *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  NSObject *v138;
  char *v139;
  unsigned char v141[4];
  int v142;
  void *v143;
  uint64_t v144;
  NSObject *v145;
  void (*v146)(uint64_t *);
  unsigned char *v147;
  unsigned char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  void *v154;
  uint64_t v155;
  NSObject *v156;
  unsigned char *v157;
  unsigned char *v158;
  NSObject *v159;
  uint64_t v160;
  unsigned char *v161;
  uint64_t v162;
  long long v163[2];
  long long v164;
  uint64_t v165;
  uint64_t v166[2];
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  uint64_t v7 = v6;
  v160 = a6;
  v159 = a3;
  uint64_t v162 = a2;
  v156 = a1;
  uint64_t v10 = sub_371F4(&qword_400470);
  __chkstk_darwin(v10 - 8);
  id v158 = &v141[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v152 = sub_2FB570();
  id v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  v157 = &v141[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v150 = v12;
  __chkstk_darwin(v13);
  v161 = &v141[-v14];
  v154 = (void *)sub_2FB440();
  BOOL v155 = *(v154 - 1);
  __chkstk_darwin(v154);
  id v147 = &v141[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_371F4(&qword_400C98);
  __chkstk_darwin(v16);
  double v18 = &v141[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_371F4((uint64_t *)&unk_400C70);
  __chkstk_darwin(v19 - 8);
  id v148 = &v141[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v23 = &v141[-v22];
  __chkstk_darwin(v24);
  os_log_type_t v26 = &v141[-v25];
  uint64_t v27 = a4[3];
  uint64_t v28 = a4[4];
  sub_4F798(a4, v27);
  uint64_t v29 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v28 + 96);
  double v30 = v28;
  id v31 = v6;
  v29(&v169, v27, v30);
  uint64_t v32 = (char *)v6 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_52C40((uint64_t)a4, (uint64_t)v166);
    uint64_t v48 = v7;
    os_log_t v49 = sub_2FB880();
    uint64_t v50 = sub_2FC7B0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      *(void *)&v164 = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136446466;
      uint64_t v52 = ContentLoader.shortDescription.getter();
      *(void *)&v163[0] = sub_38EF0(v52, v53, (uint64_t *)&v164);
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v51 + 12) = 2050;
      id v54 = v167;
      uint64_t v55 = v168;
      sub_4F798(v166, v167);
      uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 40))(v54, v55);
      sub_39FCC((uint64_t)v166);
      *(void *)&v163[0] = v56;
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v49, v50, "ContentLoader(%{public}s) for ordinal %{public}ld has no paginating service reference", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_39FCC((uint64_t)v166);
    }
    LOWORD(v166[0]) = 256;
    a5(v166);
    goto LABEL_35;
  }
  v153 = a4;
  id v149 = Strong;
  id v146 = a5;
  v144 = *((void *)v32 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v34 = v166[0];
  uint64_t v35 = v162;
  if (v166[0])
  {
    v145 = v7;
    uint64_t v36 = v166[1];
    uint64_t ObjectType = swift_getObjectType();
    v142 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(ObjectType, v36);
    unint64_t v39 = v153[3];
    uint64_t v38 = v153[4];
    uint64_t v143 = (void *)v34;
    sub_4F798(v153, v39);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 72);
    uint64_t v41 = v38;
    id v42 = v143;
    v40(v39, v41);
    uint64_t v43 = v155;
    Swift::String v44 = v154;
    (*(void (**)(unsigned char *, void, uint64_t, void *))(v155 + 56))(v26, 0, 1, v154);
    (*(void (**)(uint64_t, uint64_t))(v36 + 128))(ObjectType, v36);
    Swift::String v45 = (uint64_t)&v18[*(int *)(v16 + 48)];
    sub_46A30((uint64_t)v26, (uint64_t)v18, (uint64_t *)&unk_400C70);
    sub_46A30((uint64_t)v23, v45, (uint64_t *)&unk_400C70);
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, void *))(v43 + 48);
    if (v46((uint64_t)v18, 1, v44) == 1)
    {
      sub_5BE90((uint64_t)v23, (uint64_t *)&unk_400C70);
      sub_5BE90((uint64_t)v26, (uint64_t *)&unk_400C70);
      uint64_t v47 = v46(v45, 1, v44);
      uint64_t v35 = v162;
      id v31 = v145;
      if (v47 == 1)
      {
        sub_5BE90((uint64_t)v18, (uint64_t *)&unk_400C70);
LABEL_11:

        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v57 = v148;
      sub_46A30((uint64_t)v18, (uint64_t)v148, (uint64_t *)&unk_400C70);
      if (v46(v45, 1, v44) != 1)
      {
        uint64_t v104 = v57;
        size_t v105 = v147;
        (*(void (**)(unsigned char *, uint64_t, void *))(v43 + 32))(v147, v45, v44);
        sub_9C5AC((unint64_t *)&qword_400CC0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v106 = sub_2FC120();
        int64_t v107 = *(void (**)(unsigned char *, void *))(v43 + 8);
        v107(v105, v44);
        sub_5BE90((uint64_t)v23, (uint64_t *)&unk_400C70);
        sub_5BE90((uint64_t)v26, (uint64_t *)&unk_400C70);
        v107(v104, v44);
        sub_5BE90((uint64_t)v18, (uint64_t *)&unk_400C70);
        uint64_t v35 = v162;
        id v31 = v145;
        if ((v142 | v106)) {
          goto LABEL_11;
        }
        goto LABEL_26;
      }
      sub_5BE90((uint64_t)v23, (uint64_t *)&unk_400C70);
      sub_5BE90((uint64_t)v26, (uint64_t *)&unk_400C70);
      (*(void (**)(unsigned char *, void *))(v43 + 8))(v57, v44);
      uint64_t v35 = v162;
      id v31 = v145;
    }
    sub_5BE90((uint64_t)v18, &qword_400C98);
    if (v142) {
      goto LABEL_11;
    }
LABEL_26:
    uint64_t v108 = sub_49E88(0, 1, 1, _swiftEmptyArrayStorage);
    uint64_t v110 = v108[2];
    uint64_t v109 = v108[3];
    uint64_t v111 = v109 >> 1;
    v112 = v110 + 1;
    if (v109 >> 1 <= v110)
    {
      uint64_t v108 = sub_49E88((void *)(v109 > 1), v110 + 1, 1, v108);
      uint64_t v109 = v108[3];
      uint64_t v111 = v109 >> 1;
    }
    v108[2] = v112;
    uint64_t v113 = &v108[2 * v110];
    v113[4] = 0xD000000000000020;
    v113[5] = 0x800000000030EE70;
    uint64_t v114 = v110 + 2;
    if (v111 < v114) {
      uint64_t v108 = sub_49E88((void *)(v109 > 1), v114, 1, v108);
    }
    v108[2] = v114;
    int64_t v115 = &v108[2 * v112];
    v115[4] = 0xD000000000000032;
    v115[5] = 0x800000000030EEA0;
    v166[0] = (uint64_t)v108;
    sub_371F4((uint64_t *)&unk_400CB0);
    sub_44924((unint64_t *)&qword_4013A0, (uint64_t *)&unk_400CB0);
    uint64_t v116 = sub_2FC0F0();
    uint64_t v118 = v117;
    swift_bridgeObjectRelease();
    uint64_t v119 = v145;
    swift_bridgeObjectRetain();
    uint64_t v120 = sub_2FB880();
    uint64_t v121 = sub_2FC7B0();
    if (os_log_type_enabled(v120, v121))
    {
      uint64_t v122 = swift_slowAlloc();
      v166[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v122 = 136315906;
      swift_getObjectType();
      unint64_t v123 = sub_2FD3E0();
      *(void *)&v164 = sub_38EF0(v123, v124, v166);
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v122 + 12) = 2082;
      uint64_t v125 = ContentLoader.shortDescription.getter();
      *(void *)&v164 = sub_38EF0(v125, v126, v166);
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v122 + 22) = 2080;
      *(void *)&v164 = sub_38EF0(0xD000000000000042, 0x800000000030EEE0, v166);
      sub_2FCC70();
      *(_WORD *)(v122 + 32) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&v164 = sub_38EF0(v116, v118, v166);
      sub_2FCC70();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&def_7BFC0, v120, v121, "We should not continue in %s(%{public}s) %s -- %s", (uint8_t *)v122, 0x2Au);
      swift_arrayDestroy();
      id v42 = v143;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    LOWORD(v166[0]) = 258;
    v146(v166);

    goto LABEL_34;
  }
LABEL_12:
  uint64_t v58 = v159;
  [v159 setBe_requestedContentOffset:0];
  uint64_t v59 = v31;
  uint64_t v60 = sub_2FB880();
  uint64_t v61 = sub_2FC790();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    v166[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136446210;
    uint64_t v63 = ContentLoader.shortDescription.getter();
    *(void *)&v164 = sub_38EF0(v63, v64, v166);
    uint64_t v35 = v162;
    sub_2FCC70();
    swift_bridgeObjectRelease();

    _os_log_impl(&def_7BFC0, v60, v61, "Loader %{public}s paginating #loadingStatus", v62, 0xCu);
    swift_arrayDestroy();
    uint64_t v58 = v159;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  objc_super v65 = (uint64_t)v59 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v65, (uint64_t)&v164, &qword_4009C0);
  if (!v165)
  {
    sub_5BE90((uint64_t)&v164, &qword_4009C0);
LABEL_34:
    swift_unknownObjectRelease();
LABEL_35:
    off_t v127 = &v169;
    return sub_39FCC((uint64_t)v127);
  }
  sub_469A4(&v164, (uint64_t)v166);
  uint64_t v66 = v167;
  uint64_t v67 = v168;
  sub_4F798(v166, v167);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v67);
  uint64_t v68 = v156;
  ContentLoader.updateStyle(with:)((uint64_t)v156, v35);
  id v69 = swift_getObjectType();
  uint64_t v70 = *(double (**)(uint64_t, uint64_t))(v35 + 48);
  os_log_type_t v71 = v70(v69, v35);
  uint64_t v73 = v72;
  BOOL v155 = *(void *)(v35 + 56);
  long long v74 = ((double (*)(uint64_t, uint64_t))v155)(v69, v35);
  uint64_t v76 = v75;
  [v58 frame];
  if (v71 != v78 || v73 != v77)
  {
    [v58 frame];
    if (v74 != v80 || v76 != v79)
    {
      v154 = v70;
      uint64_t v81 = v58;
      swift_unknownObjectRetain_n();
      id v82 = v81;
      uint64_t v83 = sub_2FB880();
      id v84 = sub_2FC7D0();
      uint64_t v85 = v84;
      if (os_log_type_enabled(v83, v84))
      {
        os_log_type_t v86 = swift_slowAlloc();
        id v148 = (unsigned char *)swift_slowAlloc();
        *(void *)&v163[0] = v148;
        *(_DWORD *)os_log_type_t v86 = 136316162;
        LODWORD(v147) = v85;
        uint64_t v87 = [v82 be_identifier];
        v145 = v83;
        id v88 = v87;
        uint64_t v89 = sub_2FC180();
        unint64_t v91 = v90;

        *(void *)&v164 = sub_38EF0(v89, v91, (uint64_t *)v163);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        *(_WORD *)(v86 + 12) = 2080;
        [v82 frame];
        *(void *)&v164 = v92;
        *((void *)&v164 + 1) = v93;
        type metadata accessor for CGSize(0);
        uint64_t v94 = sub_2FC1E0();
        *(void *)&v164 = sub_38EF0(v94, v95, (uint64_t *)v163);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        *(_WORD *)(v86 + 22) = 2080;
        *(double *)&v164 = v71;
        *((double *)&v164 + 1) = v73;
        char v96 = sub_2FC1E0();
        *(void *)&v164 = sub_38EF0(v96, v97, (uint64_t *)v163);
        sub_2FCC70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 32) = 2080;
        uint64_t v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v162 + 184))(v69, v162);
        *(void *)&v164 = sub_38EF0(v98, v99, (uint64_t *)v163);
        uint64_t v58 = v159;
        sub_2FCC70();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        *(_WORD *)(v86 + 42) = 2080;
        *(void *)&v164 = ((double (*)(uint64_t, uint64_t))v155)(v69, v162);
        *((void *)&v164 + 1) = v100;
        uint64_t v101 = sub_2FC1E0();
        *(void *)&v164 = sub_38EF0(v101, v102, (uint64_t *)v163);
        uint64_t v68 = v156;
        sub_2FCC70();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        uint64_t v103 = v145;
        _os_log_impl(&def_7BFC0, v145, (os_log_type_t)v147, "ContentLoader #sizeMismatch updating webView: %s size: %s to layoutProvider.contentSize: %s for:%s fullContentSize: %s", (uint8_t *)v86, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v35 = v162;
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      ((void (*)(uint64_t, uint64_t))v154)(v69, v35);
      [v82 frame];
      -[NSObject setFrame:](v82, "setFrame:");
    }
  }
  v128 = sub_2FC570();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v158, 1, 1, v128);
  sub_52C40((uint64_t)&v169, (uint64_t)&v164);
  unint64_t v129 = v151;
  id v130 = v152;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v151 + 16))(v157, v161, v152);
  sub_52C40((uint64_t)v153, (uint64_t)v163);
  sub_2FC540();
  v159 = v59;
  v156 = v58;
  swift_unknownObjectRetain();
  uint64_t v131 = v149;
  swift_unknownObjectRetain();
  uint64_t v132 = v160;
  swift_retain();
  size_t v133 = sub_2FC530();
  v134 = (*(unsigned __int8 *)(v129 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
  v135 = (v150 + v134 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v136 = (char *)swift_allocObject();
  *((void *)v136 + 2) = v133;
  *((void *)v136 + 3) = &protocol witness table for MainActor;
  id v137 = v144;
  *((void *)v136 + 4) = v131;
  *((void *)v136 + 5) = v137;
  sub_469A4(&v164, (uint64_t)(v136 + 48));
  *((void *)v136 + 11) = v156;
  *((void *)v136 + 12) = v68;
  id v138 = v159;
  *((void *)v136 + 13) = v162;
  *((void *)v136 + 14) = v138;
  (*(void (**)(char *, unsigned char *, uint64_t))(v129 + 32))(&v136[v134], v157, v130);
  sub_469A4(v163, (uint64_t)&v136[v135]);
  v139 = &v136[(v135 + 47) & 0xFFFFFFFFFFFFFFF8];
  *(void *)v139 = v146;
  *((void *)v139 + 1) = v132;
  sub_75748((uint64_t)v158, (uint64_t)&unk_400CA8, (uint64_t)v136);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v129 + 8))(v161, v130);
  sub_39FCC((uint64_t)&v169);
  off_t v127 = v166;
  return sub_39FCC((uint64_t)v127);
}

void ContentLoader.updateStyle(with:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v4 = v19;
  if (v19)
  {
    uint64_t v5 = v20;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = swift_getObjectType();
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(a2 + 160))(&v19, v7, a2);
    __int16 v13 = (__int16)v19;
    char v14 = BYTE2(v19);
    long long v15 = v20;
    long long v16 = v21;
    long long v17 = v22;
    uint64_t v18 = v23;
    (*(void (**)(__int16 *, uint64_t, uint64_t))(v5 + 280))(&v13, ObjectType, v5);

    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v8 = v19;
  if (v19)
  {
    self;
    uint64_t v9 = swift_dynamicCastObjCClass();
    if (v9)
    {
      uint64_t v10 = v9;
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        uint64_t v11 = swift_getObjectType();
        id v12 = sub_AEC38(a1, v11, a2);
        swift_release();
        [v12 applyVariableStylesheetsToWebView:v10];
      }
    }
  }
}

uint64_t sub_89728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 88) = a10;
  *(_OWORD *)(v10 + 72) = *(_OWORD *)&v23;
  *(_OWORD *)(v10 + 56) = v22;
  *(void *)(v10 + 40) = a8;
  *(void *)(v10 + 48) = v21;
  *(void *)(v10 + 32) = a7;
  uint64_t v15 = sub_2FB570();
  *(void *)(v10 + 96) = v15;
  *(void *)(v10 + 104) = *(void *)(v15 - 8);
  *(void *)(v10 + 112) = swift_task_alloc();
  *(void *)(v10 + 120) = sub_2FC540();
  *(void *)(v10 + 128) = sub_2FC530();
  uint64_t ObjectType = swift_getObjectType();
  *(unsigned char *)(v10 + 145) = 1;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 120) + **(int **)(a5 + 120));
  long long v17 = (void *)swift_task_alloc();
  *(void *)(v10 + 136) = v17;
  *long long v17 = v10;
  v17[1] = sub_89920;
  return v19(v10 + 144, a6, a7, a8, v21, 1, 8, v10 + 145, ObjectType, a5);
}

uint64_t sub_89920()
{
  swift_task_dealloc();
  uint64_t v1 = sub_2FC4E0();
  return _swift_task_switch(sub_89A5C, v1, v0);
}

uint64_t sub_89A5C()
{
  uint64_t v21 = v0;
  swift_release();
  uint64_t v2 = *(void **)(v0 + 56);
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    sub_89D20(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 32), v1, *(void (**)(id *))(v0 + 80), *(void *)(v0 + 88));
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 16))(*(void *)(v0 + 112), *(void *)(v0 + 64), *(void *)(v0 + 96));
    id v3 = v2;
    uint64_t v4 = sub_2FB880();
    os_log_type_t v5 = sub_2FC7A0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v10 = *(void **)(v0 + 56);
    if (v6)
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v12 = ContentLoader.shortDescription.getter();
      *(void *)(v0 + 16) = sub_38EF0(v12, v13, &v20);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = sub_2FD1A0();
      *(void *)(v0 + 24) = sub_38EF0(v14, v15, &v20);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      _os_log_impl(&def_7BFC0, v4, v5, "Loader %{public}s ignoring paginationResults due to stale contentViewHost: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    long long v16 = *(void (**)(__int16 *))(v0 + 80);
    __int16 v19 = 257;
    v16(&v19);
  }
  swift_task_dealloc();
  long long v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_89D20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(id *), uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v97 = a7;
  uint64_t v98 = a6;
  id v96 = a4;
  uint64_t v95 = a2;
  uint64_t v11 = sub_2FB8A0();
  uint64_t v94 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2FB570();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (char *)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v91 - v19;
  uint64_t v21 = (uint64_t)v7 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v21, (uint64_t)&v102, &qword_4009C0);
  if (v103)
  {
    uint64_t v92 = v11;
    uint64_t v93 = a3;
    sub_469A4(&v102, (uint64_t)v104);
    uint64_t v22 = v105;
    uint64_t v23 = v106;
    sub_4F798(v104, v105);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    char v24 = sub_2FB550();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    if (v24)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2FBBA0();
      swift_release();
      swift_release();
      uint64_t v25 = (void *)v102;
      if ((void)v102)
      {
        uint64_t v26 = *((void *)&v102 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(1, ObjectType, v26);
      }
      if (qword_3FD6D8 != -1) {
        swift_once();
      }
      id v28 = (id)qword_416FE0;
      sub_2FB8B0();
      id v29 = v8;
      id v30 = v96;
      id v31 = (char *)v29;
      id v32 = v30;
      unint64_t v33 = sub_2FB880();
      os_log_type_t v34 = sub_2FC7D0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        id v96 = (id)swift_slowAlloc();
        *(void *)&long long v102 = v96;
        *(_DWORD *)uint64_t v35 = 136446466;
        uint64_t v36 = ContentLoader.shortDescription.getter();
        v100[0] = sub_38EF0(v36, v37, (uint64_t *)&v102);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        *(_WORD *)(v35 + 12) = 2080;
        v91[1] = v35 + 14;
        id v38 = [v32 be_identifier];
        uint64_t v39 = sub_2FC180();
        unint64_t v41 = v40;

        v100[0] = sub_38EF0(v39, v41, (uint64_t *)&v102);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        _os_log_impl(&def_7BFC0, v33, v34, "Loader %{public}s completed pagination using WebView: %s #contentConfig", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v13, v92);
      uint64_t v51 = &v31[OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider];
      swift_beginAccess();
      if (*(void *)v51)
      {
        uint64_t v52 = *((void *)v51 + 1);
        uint64_t v53 = swift_getObjectType();
        uint64_t v54 = v93;
        uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(v93 + 184);
        swift_unknownObjectRetain();
        uint64_t v56 = v55(v53, v54);
        uint64_t v58 = v57;
        uint64_t v59 = swift_getObjectType();
        if (v56 == (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 184))(v59, v52) && v58 == v60)
        {
          swift_bridgeObjectRelease_n();
LABEL_21:
          sub_8A9A8();
          uint64_t v62 = &v31[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
          swift_beginAccess();
          *uint64_t v62 = 1;
          sub_84C68();
          uint64_t v63 = v31;
          swift_unknownObjectRetain_n();
          uint64_t v64 = v63;
          objc_super v65 = sub_2FB880();
          os_log_type_t v66 = sub_2FC7D0();
          if (os_log_type_enabled(v65, v66))
          {
            uint64_t v67 = swift_slowAlloc();
            id v96 = (id)swift_slowAlloc();
            id v101 = v96;
            *(_DWORD *)uint64_t v67 = 136446466;
            uint64_t v68 = ContentLoader.shortDescription.getter();
            uint64_t v99 = sub_38EF0(v68, v69, (uint64_t *)&v101);
            sub_2FCC70();
            swift_bridgeObjectRelease();

            *(_WORD *)(v67 + 12) = 2082;
            uint64_t v70 = (*(uint64_t (**)(uint64_t))(v93 + 192))(v53);
            uint64_t v99 = sub_38EF0(v70, v71, (uint64_t *)&v101);
            sub_2FCC70();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease_n();
            _os_log_impl(&def_7BFC0, v65, v66, "ContentLoader %{public}s reloadDocument: paginated document with #contentConfig:%{public}s", (uint8_t *)v67, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          LOWORD(v101) = 1;
          v98(&v101);
          swift_unknownObjectRelease();
          return sub_39FCC((uint64_t)v104);
        }
        char v61 = sub_2FD1F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v61) {
          goto LABEL_21;
        }
        swift_unknownObjectRelease();
      }
      long long v72 = v31;
      swift_unknownObjectRetain_n();
      uint64_t v73 = v72;
      long long v74 = sub_2FB880();
      os_log_type_t v75 = sub_2FC7D0();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = swift_slowAlloc();
        id v96 = (id)swift_slowAlloc();
        id v101 = v96;
        *(_DWORD *)uint64_t v76 = 136446722;
        uint64_t v77 = ContentLoader.shortDescription.getter();
        v100[0] = sub_38EF0(v77, v78, (uint64_t *)&v101);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        *(_WORD *)(v76 + 12) = 2082;
        uint64_t v79 = swift_getObjectType();
        uint64_t v80 = (*(uint64_t (**)(uint64_t))(v93 + 192))(v79);
        v100[0] = sub_38EF0(v80, v81, (uint64_t *)&v101);
        sub_2FCC70();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        *(_WORD *)(v76 + 22) = 2082;
        if (*(void *)v51)
        {
          uint64_t v82 = *((void *)v51 + 1);
          uint64_t v83 = swift_getObjectType();
          id v84 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 184);
          swift_unknownObjectRetain();
          uint64_t v85 = v84(v83, v82);
          uint64_t v87 = v86;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v85 = 0;
          uint64_t v87 = 0;
        }
        id v88 = v98;
        v100[0] = v85;
        v100[1] = v87;
        sub_371F4((uint64_t *)&unk_403B40);
        uint64_t v89 = sub_2FC1E0();
        v100[0] = sub_38EF0(v89, v90, (uint64_t *)&v101);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        _os_log_impl(&def_7BFC0, v74, v75, "Content Loader %{public}s received stale pagination results for\n    #contentConfig: %{public}s,\n    removing placeholder view #loadingStatus\n    current: %{public}s", (uint8_t *)v76, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
        id v88 = v98;
      }
      LOWORD(v100[0]) = 257;
      v88((id *)v100);
      return sub_39FCC((uint64_t)v104);
    }
    sub_39FCC((uint64_t)v104);
  }
  else
  {
    sub_5BE90((uint64_t)&v102, &qword_4009C0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  id v42 = v8;
  uint64_t v43 = sub_2FB880();
  os_log_type_t v44 = sub_2FC7A0();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    id v96 = (id)swift_slowAlloc();
    v104[0] = (uint64_t)v96;
    *(_DWORD *)uint64_t v45 = 136446466;
    uint64_t v46 = ContentLoader.shortDescription.getter();
    *(void *)&long long v102 = sub_38EF0(v46, v47, v104);
    sub_2FCC70();
    swift_bridgeObjectRelease();

    *(_WORD *)(v45 + 12) = 2080;
    sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v48 = sub_2FD1A0();
    *(void *)&long long v102 = sub_38EF0(v48, v49, v104);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    _os_log_impl(&def_7BFC0, v43, v44, "Loader %{public}s ignoring paginationResults due to stale contentViewHost: %s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  LOWORD(v104[0]) = 257;
  return ((uint64_t (*)(uint64_t *))v98)(v104);
}

void sub_8A9A8()
{
  uint64_t v1 = v0;
  if (qword_3FD6C0 != -1) {
    swift_once();
  }
  if (byte_3FEF38 != 1) {
    return;
  }
  uint64_t v2 = &v0[OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService];
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  uint64_t v3 = *((void *)v2 + 1);
  uint64_t v4 = sub_8296C();
  if ((v5 & 1) != 0
    || (uint64_t v6 = v4,
        uint64_t ObjectType = swift_getObjectType(),
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3),
        uint64_t v8 = BookPaginationEntity.document(for:)(v6),
        swift_release(),
        (uint64_t v58 = v8) == 0))
  {
LABEL_16:
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v9 = &unk_400000;
  uint64_t v63 = v1;
  if (byte_3FEF38)
  {
    uint64_t v10 = &v1[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pageLayers];
    swift_beginAccess();
    uint64_t v11 = *(void *)v10;
    if (*(void *)v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_2FD030();
      if (v12) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_10:
        if (v12 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v12; ++i)
        {
          if ((v11 & 0xC000000000000001) != 0) {
            id v14 = (id)sub_2FCE20();
          }
          else {
            id v14 = *(id *)(v11 + 8 * i + 32);
          }
          uint64_t v15 = v14;
          [v14 removeFromSuperlayer];
        }
      }
    }
    swift_bridgeObjectRelease();
    *(void *)uint64_t v10 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v1 = v63;
  }
  uint64_t v16 = (uint64_t *)(v58 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if ((unint64_t)*v16 >> 62) {
    goto LABEL_46;
  }
  uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v18; uint64_t v18 = sub_2FD030())
  {
    uint64_t v57 = &v1[v9[316]];
    uint64_t v62 = (void *)(v58 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    swift_beginAccess();
    unint64_t v61 = v6 & 0x8000000000000001;
    uint64_t v19 = 4;
    uint64_t v59 = v6;
    uint64_t v60 = (void *)v18;
    while (1)
    {
      uint64_t v20 = v19 - 4;
      if ((v17 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v21 = sub_2FCE20();
      uint64_t v9 = (void *)(v19 - 3);
      if (__OFADD__(v20, 1)) {
        goto LABEL_43;
      }
LABEL_30:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2FBBA0();
      swift_release();
      swift_release();
      uint64_t v22 = (void *)v67;
      if (!v67) {
        goto LABEL_42;
      }
      self;
      uint64_t v23 = (void *)swift_dynamicCastObjCClass();
      if (!v23)
      {

LABEL_42:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_16;
      }
      uint64_t v1 = (char *)[v23 be_viewForFindUI];

      if (!v1) {
        goto LABEL_42;
      }
      id v24 = [objc_allocWithZone((Class)CATextLayer) init];
      uint64_t v67 = 0;
      *(double *)&unint64_t v68 = -2.68156159e154;
      sub_2FCDD0(30);
      swift_bridgeObjectRelease();
      uint64_t v67 = 0x3A232065676150;
      *(double *)&unint64_t v68 = -1.39234638e188;
      uint64_t v25 = *(void *)(v21 + 16);
      uint64_t v26 = *v62 + v25;
      if (__OFADD__(*v62, v25)) {
        goto LABEL_44;
      }
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_45;
      }
      uint64_t v64 = v28;
      v72._uint64_t countAndFlagsBits = sub_2FD1A0();
      sub_2FC260(v72);
      swift_bridgeObjectRelease();
      v73._uint64_t countAndFlagsBits = 0x6C616E6964726F20;
      v73._object = (void *)0xE90000000000003ALL;
      sub_2FC260(v73);
      uint64_t v64 = v6;
      v74._uint64_t countAndFlagsBits = sub_2FD1A0();
      sub_2FC260(v74);
      swift_bridgeObjectRelease();
      v75._uint64_t countAndFlagsBits = 0x3A74657366666F20;
      v75._object = (void *)0xE800000000000000;
      sub_2FC260(v75);
      uint64_t v64 = *(void *)(v21 + 16);
      v76._uint64_t countAndFlagsBits = sub_2FD1A0();
      sub_2FC260(v76);
      swift_bridgeObjectRelease();
      NSString v29 = sub_2FC140();
      swift_bridgeObjectRelease();
      [v24 setString:v29];

      [v24 setFontSize:18.0];
      id v30 = self;
      id v31 = [v30 blueColor];
      id v32 = [v31 CGColor];

      [v24 setForegroundColor:v32];
      [v24 setAlignmentMode:kCAAlignmentCenter];
      [v24 setBorderWidth:2.0];
      unint64_t v33 = &selRef_redColor;
      if (v61 != 1) {
        unint64_t v33 = &selRef_blueColor;
      }
      os_log_type_t v34 = *v33;
      id v35 = v24;
      id v36 = [v30 v34];
      id v37 = [v36 CGColor];

      [v35 setBorderColor:v37];
      uint64_t v64 = *(void *)(v21 + 24);
      long long v38 = *(_OWORD *)(v21 + 48);
      long long v65 = *(_OWORD *)(v21 + 32);
      long long v66 = v38;
      ContentLoader.convertToUI(_:)((uint64_t)&v64, (uint64_t)&v67);
      uint64_t v39 = (void *)v67;
      if (v67)
      {
        double v41 = v70;
        double v40 = v71;
        double v43 = *(double *)&v68;
        double v42 = v69;
        os_log_type_t v44 = v1;
        [v39 convertRect:v44 toCoordinateSpace:v43];
        double v46 = v45;
        swift_unknownObjectRelease();

        double v47 = sub_9BBF0(v46);
        double v49 = v48;
        double v51 = v50;
        double v53 = v52;
        id v54 = v35;
        [v54 setFrame:v47, v49, v51, v53];

        id v55 = [v44 layer];
        [v55 addSublayer:v54];

        swift_beginAccess();
        id v56 = v54;
        sub_2FC3C0();
        if (*(void *)((char *)&dword_10 + (*(void *)v57 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                                  + (*(void *)v57 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_2FC420();
        sub_2FC460();
        sub_2FC410();
        swift_endAccess();

        swift_release();
        uint64_t v6 = v59;
      }
      else
      {
        swift_release();

        uint64_t v6 = v59;
      }
      ++v19;
      uint64_t v1 = v63;
      if (v9 == v60) {
        goto LABEL_47;
      }
    }
    uint64_t v21 = *(void *)(v17 + 8 * v19);
    swift_retain();
    uint64_t v9 = (void *)(v19 - 3);
    if (!__OFADD__(v20, 1)) {
      goto LABEL_30;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
  }
LABEL_47:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_8B1C4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v81 = a5;
  uint64_t v82 = a6;
  id v79 = a3;
  uint64_t v84 = a1;
  uint64_t v85 = a2;
  uint64_t v9 = sub_2FB570();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v83 + 64);
  __chkstk_darwin(v9);
  uint64_t v87 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = sub_2FB440();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v80 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v20 = a4[3];
  uint64_t v21 = a4[4];
  sub_4F798(a4, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 72))(v20, v21);
  id v77 = v7;
  uint64_t v22 = (uint64_t)v7 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v22, (uint64_t)&aBlock, &qword_4009C0);
  if (v90)
  {
    uint64_t v86 = v19;
    sub_469A4(&aBlock, (uint64_t)&v93);
    uint64_t v23 = v94;
    uint64_t v24 = v95;
    sub_4F798(&v93, v94);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    id v74 = [v79 be_navigationHandler];
    if (v74)
    {
      uint64_t v25 = v83;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
      uint64_t v72 = v83 + 16;
      Swift::String v73 = v26;
      Swift::String v76 = v13;
      v26(v87, v13, v9);
      BOOL v27 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      uint64_t v70 = v15 + 16;
      double v71 = v27;
      uint64_t v28 = v14;
      v27(v80, v86, v14);
      uint64_t v29 = *(unsigned __int8 *)(v25 + 80);
      uint64_t v30 = v25;
      uint64_t v31 = (v29 + 24) & ~v29;
      uint64_t v68 = v31;
      unint64_t v32 = (v10 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v69 = *(unsigned __int8 *)(v15 + 80);
      uint64_t v75 = v15;
      unint64_t v64 = v32;
      uint64_t v33 = (v69 + v32 + 16) & ~v69;
      uint64_t v67 = v29 | v69 | 7;
      uint64_t v62 = v9;
      unint64_t v34 = (v78 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v77;
      uint64_t v61 = v28;
      long long v66 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
      v66(v35 + v31, v87, v9);
      id v36 = (void *)(v35 + v32);
      uint64_t v37 = v82;
      *id v36 = v81;
      v36[1] = v37;
      long long v38 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
      uint64_t v63 = v15 + 32;
      long long v65 = v38;
      uint64_t v39 = v80;
      v38(v35 + v33, v80, v28);
      id v40 = v79;
      *(void *)(v35 + v34) = v79;
      double v41 = (void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v42 = v85;
      *double v41 = v84;
      v41[1] = v42;
      unint64_t v91 = sub_9B68C;
      uint64_t v92 = v35;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v89 = sub_77340;
      unint64_t v90 = &unk_3C5B70;
      double v43 = _Block_copy(&aBlock);
      id v44 = v77;
      swift_retain();
      id v79 = v40;
      swift_unknownObjectRetain();
      swift_release();
      id v45 = v74;
      [v74 performAfterLoadCompleteOrFailure:v43];
      _Block_release(v43);

      double v46 = v87;
      uint64_t v47 = v62;
      v73(v87, v76, v62);
      double v48 = v39;
      double v49 = v39;
      uint64_t v50 = v61;
      v71(v49, v86, v61);
      unint64_t v51 = v64;
      unint64_t v52 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v53 = (v69 + v52 + 8) & ~v69;
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v44;
      v66(v54 + v68, v46, v47);
      id v55 = (void *)(v54 + v51);
      uint64_t v56 = v82;
      *id v55 = v81;
      v55[1] = v56;
      id v57 = v79;
      *(void *)(v54 + v52) = v79;
      v65(v54 + v53, v48, v50);
      id v58 = v44;
      swift_retain();
      id v59 = v57;
      sub_8C674(v84, v85, 1, 0, (void (*)(void))sub_9B95C, v54);
      swift_release();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v76, v47);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v86, v50);
      return sub_39FCC((uint64_t)&v93);
    }
    else
    {
      uint64_t result = sub_2FD010();
      __break(1u);
    }
  }
  else
  {
    sub_5BE90((uint64_t)&aBlock, &qword_4009C0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  return result;
}

uint64_t sub_8B8E4(uint64_t a1, void (*a2)(__n128), int a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t *), uint64_t a7, uint64_t a8, id a9, uint64_t a10, uint64_t a11)
{
  uint64_t v70 = a8;
  id v77 = a6;
  uint64_t v78 = a7;
  uint64_t v74 = a1;
  uint64_t v73 = sub_2FB440();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  double v71 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2FB570();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)v63 - v21;
  a2(v20);
  uint64_t v23 = (uint64_t)a4 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v23, (uint64_t)&v80, &qword_4009C0);
  if (!v81)
  {
    sub_5BE90((uint64_t)&v80, &qword_4009C0);
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, v15);
    id v46 = a4;
    uint64_t v47 = sub_2FB880();
    uint64_t v48 = v16;
    os_log_type_t v49 = sub_2FC7A0();
    if (os_log_type_enabled(v47, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v82[0] = v76;
      *(_DWORD *)uint64_t v50 = 136446466;
      uint64_t v51 = ContentLoader.shortDescription.getter();
      *(void *)&long long v80 = sub_38EF0(v51, v52, v82);
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v50 + 12) = 2080;
      sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v53 = sub_2FD1A0();
      *(void *)&long long v80 = sub_38EF0(v53, v54, v82);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v15);
      _os_log_impl(&def_7BFC0, v47, v49, "Loader %{public}s ignoring load complete due to stale contentViewHost: %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v15);
    }
    LOWORD(v82[0]) = 257;
    return v77(v82);
  }
  sub_469A4(&v80, (uint64_t)v82);
  uint64_t v76 = v15;
  uint64_t v75 = v16;
  uint64_t v25 = v83;
  uint64_t v24 = v84;
  sub_4F798(v82, v83);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v27 = v24;
  uint64_t v16 = v75;
  uint64_t v15 = v76;
  v26(v25, v27);
  char v28 = sub_2FB550();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  if ((v28 & 1) == 0)
  {
    sub_39FCC((uint64_t)v82);
    goto LABEL_8;
  }
  uint64_t v69 = a11;
  uint64_t v68 = a10;
  uint64_t v67 = a5;
  if (v74)
  {
    id v66 = a9;
    uint64_t v29 = v72;
    uint64_t v30 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v70, v73);
    swift_errorRetain();
    swift_errorRetain();
    id v31 = a4;
    swift_errorRetain();
    id v32 = v31;
    uint64_t v33 = sub_2FB880();
    os_log_type_t v34 = sub_2FC7B0();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      os_log_t v65 = v33;
      uint64_t v37 = v36;
      uint64_t v70 = swift_slowAlloc();
      *(void *)&long long v80 = v70;
      *(_DWORD *)uint64_t v37 = 136446722;
      int v64 = v35;
      uint64_t v38 = ContentLoader.shortDescription.getter();
      uint64_t v79 = sub_38EF0(v38, v39, (uint64_t *)&v80);
      v63[1] = a4;
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v37 + 12) = 2080;
      sub_9C5AC((unint64_t *)&qword_400C88, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v40 = v73;
      uint64_t v41 = sub_2FD1A0();
      uint64_t v79 = sub_38EF0(v41, v42, (uint64_t *)&v80);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v40);
      *(_WORD *)(v37 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v43 = sub_2FD2B0();
      uint64_t v79 = sub_38EF0(v43, v44, (uint64_t *)&v80);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v45 = v65;
      _os_log_impl(&def_7BFC0, v65, (os_log_type_t)v64, "Loader %{public}s Failed to load %s -- %s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v73);
      swift_errorRelease();
      swift_errorRelease();
    }
    [v66 be_failedLoad];
    swift_errorRelease();
    id v57 = v77;
    uint64_t v56 = v78;
  }
  else
  {
    [a9 be_completedLoad];
    id v57 = v77;
    uint64_t v56 = v78;
  }
  uint64_t v58 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v59 = v75;
  uint64_t v60 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v22, v67, v76);
  unint64_t v61 = (*(unsigned __int8 *)(v59 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v62 = (char *)swift_allocObject();
  *((void *)v62 + 2) = v58;
  *((void *)v62 + 3) = v57;
  *((void *)v62 + 4) = v56;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v62[v61], v22, v60);
  swift_retain();
  swift_retain();
  sub_8C674(v68, v69, 1, 1, sub_9BB88, (uint64_t)v62);
  swift_release();
  swift_release();
  return sub_39FCC((uint64_t)v82);
}

void sub_8C1B0(uint64_t a1, void (*a2)(__int16 *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_2FB570();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v33 - v12;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (char *)Strong;
    uint64_t v16 = Strong + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
    swift_beginAccess();
    sub_46A30(v16, (uint64_t)&v39, &qword_4009C0);
    uint64_t v36 = a3;
    if (v40)
    {
      uint64_t v17 = a2;
      sub_469A4(&v39, (uint64_t)v41);
      uint64_t v18 = v42;
      uint64_t v19 = v43;
      sub_4F798(v41, v42);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
      char v20 = sub_2FB550();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      if (v20)
      {
        uint64_t v21 = &v15[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
        swift_beginAccess();
        *uint64_t v21 = 1;
        sub_84C68();
        sub_8A9A8();
        __int16 v37 = 1;
        v17(&v37);

        sub_39FCC((uint64_t)v41);
        return;
      }
      sub_39FCC((uint64_t)v41);
      a2 = v17;
    }
    else
    {
      sub_5BE90((uint64_t)&v39, &qword_4009C0);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
    uint64_t v25 = v15;
    uint64_t v26 = sub_2FB880();
    os_log_type_t v27 = sub_2FC7A0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v41[0] = v34;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v29 = ContentLoader.shortDescription.getter();
      *(void *)&long long v39 = sub_38EF0(v29, v30, v41);
      int v35 = a2;
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v31 = sub_2FD1A0();
      *(void *)&long long v39 = sub_38EF0(v31, v32, v41);
      a2 = v35;
      sub_2FCC70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      _os_log_impl(&def_7BFC0, v26, v27, "Loader %{public}s ignoring post-load configuration due to stale contentViewHost: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    LOWORD(v41[0]) = 257;
    a2((__int16 *)v41);
  }
  else
  {
    swift_beginAccess();
    uint64_t v22 = swift_unknownObjectWeakLoadStrong();
    if (v22)
    {
      uint64_t v23 = (void *)v22;
      uint64_t v24 = (unsigned char *)(v22 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded);
      swift_beginAccess();
      unsigned char *v24 = 1;
      sub_84C68();
    }
    v38[0] = 256;
    a2(v38);
  }
}

void sub_8C674(uint64_t a1, uint64_t a2, int a3, int a4, void (*a5)(void), uint64_t a6)
{
  int v131 = a4;
  int v139 = a3;
  uint64_t v134 = sub_371F4((uint64_t *)&unk_400C70);
  __chkstk_darwin(v134);
  uint64_t v133 = (uint64_t)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v132 = (uint64_t)&v120 - v12;
  __chkstk_darwin(v13);
  uint64_t v137 = (uint64_t)&v120 - v14;
  __chkstk_darwin(v15);
  uint64_t v136 = (uint64_t)&v120 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v120 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v120 - v21;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v23 = (void *)v144;
  if (!(void)v144)
  {
    unint64_t v44 = sub_2FB880();
    os_log_type_t v45 = sub_2FC7B0();
    if (os_log_type_enabled(v44, v45))
    {
      id v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v46 = 0;
      _os_log_impl(&def_7BFC0, v44, v45, "contentView not set -- no view to apply layout to!", v46, 2u);
      swift_slowDealloc();
    }

    if (a5) {
      a5();
    }
    return;
  }
  uint64_t v140 = *((void *)&v144 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (!v146)
  {
    sub_5BE90((uint64_t)&v144, &qword_4009B0);
    uint64_t v47 = sub_2FB880();
    os_log_type_t v48 = sub_2FC7B0();
    if (os_log_type_enabled(v47, v48))
    {
      os_log_type_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v49 = 0;
      _os_log_impl(&def_7BFC0, v47, v48, "Cannot configure web content. Missing Document.", v49, 2u);
      swift_slowDealloc();
    }

    if (a5) {
      a5();
    }

    return;
  }
  v135 = v22;
  uint64_t v130 = a6;
  unint64_t v129 = a5;
  sub_469A4(&v144, (uint64_t)&v151);
  id v24 = sub_84B84();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 24);
  [v24 setHidden:(v26(ObjectType, a2) & 0xFFFFFFFFFFFFFFFELL) != 2];

  v128 = v6;
  id v27 = sub_848FC();
  [v27 setHidden:(v26(ObjectType, a2) & 0xFFFFFFFFFFFFFFFELL) == 2];

  double v28 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2));
  if ((v30 & 1) == 0)
  {
    double v31 = v29;
    double v32 = (*(double (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2) / v28;
    double v34 = v33 / v31;
    if (v34 >= v32) {
      double v35 = v32;
    }
    else {
      double v35 = v34;
    }
    uint64_t v36 = swift_getObjectType();
    (*(void (**)(uint64_t, double))(v140 + 24))(v36, v35);
  }
  uint64_t v138 = ObjectType;
  self;
  uint64_t v37 = swift_dynamicCastObjCClass();
  if (v37)
  {
    uint64_t v38 = (void *)v37;
    long long v39 = *(void (**)(uint64_t, uint64_t))(a2 + 144);
    id v40 = v23;
    v39(v138, a2);
    [v38 setBe_textZoomFactor:];
    id v41 = [v38 URL];
    if (v41)
    {
      uint64_t v42 = v41;
      sub_2FB400();

      uint64_t v43 = sub_2FB440();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v19, 0, 1, v43);
    }
    else
    {

      uint64_t v53 = sub_2FB440();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v19, 1, 1, v53);
    }
    uint64_t v51 = (uint64_t)v135;
    uint64_t v52 = v140;
    sub_9BA4C((uint64_t)v19, (uint64_t)v135);
  }
  else
  {
    uint64_t v50 = sub_2FB440();
    uint64_t v51 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v135, 1, 1, v50);
    uint64_t v52 = v140;
  }
  uint64_t v54 = swift_getObjectType();
  id v55 = *(uint64_t (**)(uint64_t, uint64_t))(v52 + 104);
  uint64_t v127 = v54;
  unint64_t v123 = v55;
  uint64_t v56 = v55(v54, v52);
  uint64_t v58 = v57;
  uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 184);
  uint64_t v126 = a2 + 184;
  uint64_t v125 = v59;
  uint64_t v60 = v59(v138, a2);
  if (!v58)
  {
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (v56 != v60 || v58 != v61)
  {
    char v63 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    uint64_t v62 = swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_39;
    }
LABEL_29:
    uint64_t v64 = v136;
    sub_46A30(v51, v136, (uint64_t *)&unk_400C70);
    uint64_t v65 = v137;
    sub_46A30(v51, v137, (uint64_t *)&unk_400C70);
    sub_52C40((uint64_t)&v151, (uint64_t)&v144);
    id v66 = v23;
    swift_unknownObjectRetain_n();
    id v67 = v66;
    uint64_t v68 = sub_2FB880();
    os_log_type_t v69 = sub_2FC7D0();
    int v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = v64;
      uint64_t v72 = swift_slowAlloc();
      uint64_t v122 = swift_slowAlloc();
      uint64_t v143 = v122;
      *(_DWORD *)uint64_t v72 = 136447234;
      id v124 = v67;
      uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 192);
      int v121 = v70;
      uint64_t v74 = v73(v138, a2);
      uint64_t Strong = sub_38EF0(v74, v75, &v143);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      *(_WORD *)(v72 + 12) = 2080;
      os_log_t v120 = v68;
      uint64_t v76 = v132;
      sub_46A30(v71, v132, (uint64_t *)&unk_400C70);
      uint64_t v77 = sub_2FB440();
      int v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v76, 1, v77);
      sub_5BE90(v76, (uint64_t *)&unk_400C70);
      if (v78 == 1) {
        uint64_t v79 = 0x56746E65746E6F63;
      }
      else {
        uint64_t v79 = 0x77656956626577;
      }
      if (v78 == 1) {
        unint64_t v80 = 0xEB00000000776569;
      }
      else {
        unint64_t v80 = 0xE700000000000000;
      }
      uint64_t Strong = sub_38EF0(v79, v80, &v143);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      sub_5BE90(v71, (uint64_t *)&unk_400C70);
      *(_WORD *)(v72 + 22) = 2080;
      uint64_t v81 = v137;
      sub_46A30(v137, v133, (uint64_t *)&unk_400C70);
      uint64_t v82 = sub_2FC1E0();
      uint64_t Strong = sub_38EF0(v82, v83, &v143);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      sub_5BE90(v81, (uint64_t *)&unk_400C70);
      *(_WORD *)(v72 + 32) = 2080;
      uint64_t v84 = v140;
      uint64_t Strong = v123(v127, v140);
      uint64_t v142 = v85;
      sub_371F4((uint64_t *)&unk_403B40);
      uint64_t v86 = sub_2FC1E0();
      uint64_t Strong = sub_38EF0(v86, v87, &v143);
      sub_2FCC70();
      swift_bridgeObjectRelease();

      *(_WORD *)(v72 + 42) = 2050;
      uint64_t v137 = v72 + 44;
      uint64_t v88 = (uint64_t)v146;
      uint64_t v89 = v147;
      sub_4F798(&v144, (uint64_t)v146);
      uint64_t v90 = v89[5](v88, v89);
      sub_39FCC((uint64_t)&v144);
      uint64_t Strong = v90;
      sub_2FCC70();
      os_log_t v91 = v120;
      _os_log_impl(&def_7BFC0, v120, (os_log_type_t)v121, "ContentLoader setting #contentConfig:%{public}s to %s.url:%s from %s for ordinal %{public}ld", (uint8_t *)v72, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v92 = v138;
    }
    else
    {
      sub_39FCC((uint64_t)&v144);

      swift_unknownObjectRelease_n();
      sub_5BE90(v64, (uint64_t *)&unk_400C70);
      sub_5BE90(v65, (uint64_t *)&unk_400C70);

      uint64_t v84 = v140;
      uint64_t v92 = v138;
    }
    uint64_t v93 = v125(v92, a2);
    uint64_t v62 = (*(uint64_t (**)(uint64_t))(v84 + 112))(v93);
    uint64_t v51 = (uint64_t)v135;
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = swift_bridgeObjectRelease();
LABEL_39:
  if (v139)
  {
    self;
    uint64_t v94 = swift_dynamicCastObjCClass();
    uint64_t v95 = v129;
    if (v94)
    {
      id v96 = (void *)v94;
      uint64_t v97 = v128;
      if (swift_weakLoadStrong())
      {
        id v98 = v23;
        ContentLoaderViewReusePool.configuration(forDocument:)(&v151, (uint64_t)&v144);
        swift_release();
        long long v99 = v144;
        id v101 = v145;
        uint64_t v100 = v146;
        uint64_t v103 = v147;
        long long v102 = v148;
        uint64_t v104 = v149;
        char v105 = v150;
        [v96 be_willFullyConfigure];
        long long v144 = v99;
        v145 = v101;
        id v146 = v100;
        id v147 = v103;
        id v148 = v102;
        uint64_t v149 = v104;
        char v150 = v105;
        sub_18AE30((uint64_t)&v144, v131 & 1, (uint64_t)v95, v130);

        sub_5BE90((uint64_t)v135, (uint64_t *)&unk_400C70);
        sub_39FCC((uint64_t)&v151);

        swift_unknownObjectRelease();
        return;
      }
      id v113 = v97;
      id v107 = v23;
      id v114 = v113;
      int64_t v115 = sub_2FB880();
      os_log_type_t v116 = sub_2FC7B0();
      if (os_log_type_enabled(v115, v116))
      {
        uint64_t v117 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v144 = swift_slowAlloc();
        *(_DWORD *)uint64_t v117 = 136446210;
        uint64_t Strong = swift_weakLoadStrong();
        sub_371F4(&qword_400C80);
        uint64_t v118 = sub_2FC1E0();
        uint64_t Strong = sub_38EF0(v118, v119, (uint64_t *)&v144);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        _os_log_impl(&def_7BFC0, v115, v116, "Failed to get #loadingStatus configuration for document from pool %{public}s", v117, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      if (v129) {
        v129();
      }
    }
    else
    {
      id v107 = v23;
      uint64_t v108 = sub_2FB880();
      os_log_type_t v109 = sub_2FC7B0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v144 = swift_slowAlloc();
        *(_DWORD *)uint64_t v110 = 136446210;
        swift_getObjectType();
        uint64_t v111 = sub_2FD3E0();
        uint64_t Strong = sub_38EF0(v111, v112, (uint64_t *)&v144);
        sub_2FCC70();
        swift_bridgeObjectRelease();

        _os_log_impl(&def_7BFC0, v108, v109, "Unable to fully configure contentView of type: %{public}s currently only supported on Web Content", v110, 0xCu);
        swift_arrayDestroy();
        uint64_t v95 = v129;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      if (v95) {
        v95();
      }
    }

    uint64_t v106 = (uint64_t)v135;
  }
  else
  {
    if (v129) {
      ((void (*)(uint64_t))v129)(v62);
    }

    uint64_t v106 = v51;
  }
  sub_5BE90(v106, (uint64_t *)&unk_400C70);
  sub_39FCC((uint64_t)&v151);
}

uint64_t sub_8D648(void *a1, uint64_t a2, id a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v49 = a6;
  id v50 = a5;
  uint64_t v47 = sub_2FB440();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  unint64_t v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_2FB1F0();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2FB570();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = (uint64_t)a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v20, (uint64_t)&v52, &qword_4009C0);
  uint64_t v51 = a4;
  if (v53)
  {
    uint64_t v43 = v16;
    id v21 = a3;
    sub_469A4(&v52, (uint64_t)v54);
    uint64_t v22 = v55;
    uint64_t v23 = v56;
    sub_4F798(v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    char v24 = sub_2FB550();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    if (v24)
    {
      id v25 = v50;
      [v50 be_prepareForLoad];
      uint64_t v26 = v49;
      sub_2FB3F0(v27);
      double v29 = v28;
      [v25 be_willAttemptLoad:v28];

      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v26, v47);
      sub_2FB1D0();
      Class v30 = sub_2FB1C0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v48);
      id v31 = [v25 loadRequest:v30];

      return sub_39FCC((uint64_t)v54);
    }
    sub_39FCC((uint64_t)v54);
    a3 = v21;
    uint64_t v16 = v43;
  }
  else
  {
    sub_5BE90((uint64_t)&v52, &qword_4009C0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  double v33 = v16;
  id v34 = a1;
  double v35 = sub_2FB880();
  os_log_type_t v36 = sub_2FC7A0();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v54[0] = v49;
    *(_DWORD *)uint64_t v37 = 136446466;
    uint64_t v38 = ContentLoader.shortDescription.getter();
    *(void *)&long long v52 = sub_38EF0(v38, v39, v54);
    id v50 = a3;
    sub_2FCC70();
    swift_bridgeObjectRelease();

    *(_WORD *)(v37 + 12) = 2080;
    sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = sub_2FD1A0();
    *(void *)&long long v52 = sub_38EF0(v40, v41, v54);
    a3 = v50;
    sub_2FCC70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
    _os_log_impl(&def_7BFC0, v35, v36, "Loader %{public}s ignoring pre-load configuration due to stale contentViewHost: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
  }
  LOWORD(v54[0]) = 257;
  return ((uint64_t (*)(uint64_t *))a3)(v54);
}

void ContentLoader.init()()
{
}

uint64_t sub_8DC58@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ContentLoader(0);
  uint64_t result = sub_2FBAA0();
  *a1 = result;
  return result;
}

id sub_8DC98@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 bounds];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_8DCD0(double *a1, id *a2)
{
  return [*a2 setBounds:*a1, a1[1], a1[2], a1[3]];
}

uint64_t sub_8DCE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = (void *)a4;
  sub_52C40(a4, (uint64_t)v37);
  swift_unknownObjectRetain_n();
  uint64_t v13 = v6;
  uint64_t v14 = sub_2FB880();
  os_log_type_t v15 = sub_2FC7A0();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v31 = v15;
    double v33 = a3;
    id v34 = v9;
    uint64_t v35 = a5;
    uint64_t v16 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134218498;
    uint64_t v19 = v38;
    uint64_t v18 = v39;
    sub_4F798(v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
    sub_39FCC((uint64_t)v37);
    sub_2FCC70();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v32 = v16;
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 184))(ObjectType, v16);
    sub_38EF0(v21, v22, &v36);
    sub_2FCC70();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    uint64_t v23 = &v13[OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider];
    swift_beginAccess();
    if (*(void *)v23)
    {
      uint64_t v24 = *((void *)v23 + 1);
      uint64_t v25 = swift_getObjectType();
      uint64_t v26 = a6;
      id v27 = *(void (**)(uint64_t, uint64_t))(v24 + 184);
      swift_unknownObjectRetain();
      v27(v25, v24);
      a6 = v26;
      swift_unknownObjectRelease();
    }
    sub_371F4((uint64_t *)&unk_403B40);
    uint64_t v28 = sub_2FC1E0();
    sub_38EF0(v28, v29, &v36);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v14, v31, "SnapshotContentLoader reloadDocument for ordinal:%ld applying #contentConfig:%s, currently:%s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v9 = v34;
    a5 = v35;
    a2 = v32;
    a3 = v33;
  }
  else
  {
    sub_39FCC((uint64_t)v37);

    swift_unknownObjectRelease_n();
  }
  return sub_8B1C4(a1, a2, a3, v9, a5, a6);
}

id SnapshotContentLoader.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SnapshotContentLoader(0);
  return [super dealloc];
}

void sub_8E070()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
  objc_super v2 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint);
  void *v3 = 0;
  v3[1] = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) = 0;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusLongPressRecognizer);
  *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusLongPressRecognizer) = 0;

  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusPanRecognizer);
  *(void *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusPanRecognizer) = 0;
}

void ContentLoader.scrollViewDidEndZooming(_:with:atScale:)(void *a1)
{
  id v2 = sub_84B84();
  [a1 contentOffset];
  [v2 setContentOffset:];
}

id ContentLoader.peripheralAccessoryView.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
  swift_beginAccess();
  if (*v1
    && (uint64_t v2 = v1[1],
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24),
        swift_unknownObjectRetain(),
        uint64_t v5 = v4(ObjectType, v2),
        swift_unknownObjectRelease(),
        (v5 & 0xFFFFFFFFFFFFFFFELL) == 2))
  {
    return sub_84B84();
  }
  else
  {
    return sub_848FC();
  }
}

uint64_t sub_8E33C(char a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void **)v3;
  if (!*(void *)(*(void *)v3 + 16)) {
    return result;
  }
  *(void *)uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v5[2])
  {
    __break(1u);
LABEL_11:
    uint64_t result = (uint64_t)sub_104980(v5);
    uint64_t v5 = (void *)result;
    uint64_t v6 = *(void *)(result + 16);
    if (v6) {
      goto LABEL_5;
    }
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v6 = v5[2];
  if (!v6) {
    goto LABEL_12;
  }
LABEL_5:
  char v13 = a1;
  uint64_t v7 = v6 - 1;
  uint64_t v8 = &v5[4 * v6 - 4];
  long long v14 = *((_OWORD *)v8 + 2);
  uint64_t v10 = v8[6];
  uint64_t v9 = v8[7];
  long long v5[2] = v7;
  if (v7)
  {
    uint64_t v11 = v5 + 7;
    do
    {
      uint64_t v12 = (void (*)(long long *))*(v11 - 1);
      LOWORD(v15) = 1;
      swift_unknownObjectRetain();
      swift_retain();
      v12(&v15);
      swift_release();
      swift_unknownObjectRelease();
      v11 += 4;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  long long v15 = v14;
  uint64_t v16 = v10;
  uint64_t v17 = v9;
  sub_8E4A0((uint64_t *)&v15, v13 & 1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_8E4A0(uint64_t *a1, BOOL a2)
{
  uint64_t v3 = v2;
  BOOL v83 = a2;
  uint64_t v5 = sub_2FB570();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = &v72[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v72[-v10];
  uint64_t v12 = *a1;
  uint64_t v84 = a1[1];
  char v13 = (void (*)(long long *))a1[2];
  uint64_t v14 = a1[3];
  uint64_t v15 = (uint64_t)v3 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v15, (uint64_t)&v88, &qword_4009C0);
  if (v89)
  {
    uint64_t v82 = v11;
    uint64_t v81 = v5;
    uint64_t v80 = v6;
    sub_469A4(&v88, (uint64_t)&v90);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    if (!v87)
    {
      unint64_t v44 = v13;
      sub_5BE90((uint64_t)&v86, &qword_4009B0);
      uint64_t v45 = sub_2FB880();
      os_log_type_t v46 = sub_2FC7B0();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&def_7BFC0, v45, v46, "We have no document -- nothing to reload to get contentView as WebView", v47, 2u);
        swift_slowDealloc();
      }

      LOWORD(v88) = 256;
      v44(&v88);
      goto LABEL_28;
    }
    sub_469A4(&v86, (uint64_t)&v88);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v16 = (void *)v86;
    if ((void)v86)
    {
      self;
      uint64_t v17 = (void *)swift_dynamicCastObjCClass();
      if (v17)
      {
        id v78 = v17;
        uint64_t v77 = v13;
        id v18 = v3;
        swift_unknownObjectRetain_n();
        swift_retain_n();
        id v19 = v16;
        uint64_t v20 = (char *)v18;
        id v21 = v19;
        unint64_t v22 = sub_2FB880();
        os_log_type_t v23 = sub_2FC790();
        int v24 = v23;
        BOOL v25 = os_log_type_enabled(v22, v23);
        uint64_t v79 = v14;
        id v76 = v21;
        if (v25)
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v75 = swift_slowAlloc();
          *(void *)&long long v86 = v75;
          *(_DWORD *)uint64_t v26 = 136446722;
          os_log_t v74 = v22;
          uint64_t v27 = ContentLoader.shortDescription.getter();
          uint64_t v85 = sub_38EF0(v27, v28, (uint64_t *)&v86);
          int v73 = v24;
          sub_2FCC70();

          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2080;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v30 = v84;
          uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 184))(ObjectType, v84);
          uint64_t v85 = sub_38EF0(v31, v32, (uint64_t *)&v86);
          sub_2FCC70();
          swift_release_n();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 22) = 2048;
          [v78 be_textZoomFactor];
          uint64_t v85 = v33;
          sub_2FCC70();

          os_log_t v34 = v74;
          _os_log_impl(&def_7BFC0, v74, (os_log_type_t)v73, "ContentLoader: %{public}s reload with configuration:%s, current #contentConfig textZoomFactor:%f", (uint8_t *)v26, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_unknownObjectRelease_n();

          uint64_t v30 = v84;
        }
        ContentLoader.updateStyle(with:)(v12, v30);
        long long v52 = &v20[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
        swift_beginAccess();
        if (*v52 != 3 || v83)
        {
          LOBYTE(v86) = 2;
          sub_821EC((unsigned __int8 *)&v86);
          *long long v52 = 2;
        }
        uint64_t v53 = &v20[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
        swift_beginAccess();
        char *v53 = 0;
        sub_84C68();
        uint64_t v54 = (uint64_t *)&v20[OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider];
        swift_beginAccess();
        if (*v54)
        {
          uint64_t v55 = v54[1];
          uint64_t v56 = swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v57 = v55;
          uint64_t v30 = v84;
          BOOL v83 = sub_94744(v12, v84, v56, v57);
          swift_unknownObjectRelease();
        }
        else
        {
          BOOL v83 = 1;
        }
        uint64_t v58 = v80;
        uint64_t v59 = v81;
        uint64_t v60 = v82;
        *uint64_t v54 = v12;
        v54[1] = v30;
        swift_unknownObjectRetain_n();
        swift_unknownObjectRelease();
        if (!*v54) {
          ContentLoader.prepareForReuse()();
        }
        swift_unknownObjectRelease();
        uint64_t v61 = v91;
        uint64_t v62 = v92;
        sub_4F798(&v90, v91);
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v62);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16))(v8, v60, v59);
        sub_52C40((uint64_t)&v88, (uint64_t)&v86);
        unint64_t v63 = (*(unsigned __int8 *)(v58 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        unint64_t v64 = (v7 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v65 = (v64 + 39) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v66 = swift_allocObject();
        *(void *)(v66 + 16) = v20;
        (*(void (**)(unint64_t, unsigned char *, uint64_t))(v58 + 32))(v66 + v63, v8, v59);
        id v67 = (uint64_t *)(v66 + v64);
        uint64_t v68 = v84;
        uint64_t *v67 = v12;
        v67[1] = v68;
        uint64_t v69 = v79;
        _OWORD v67[2] = (uint64_t)v77;
        v67[3] = v69;
        *(void *)(v66 + v65) = v78;
        sub_469A4(&v86, v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8));
        int v70 = v20;
        swift_unknownObjectRetain();
        swift_retain();
        id v71 = v76;
        sub_8C674(v12, v68, v83, 0, (void (*)(void))sub_9C1C8, v66);

        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v82, v59);
LABEL_27:
        sub_39FCC((uint64_t)&v88);
LABEL_28:
        sub_39FCC((uint64_t)&v90);
        return;
      }
    }
    uint64_t v48 = v13;
    uint64_t v49 = sub_2FB880();
    os_log_type_t v50 = sub_2FC7B0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&def_7BFC0, v49, v50, "Failed to get contentView as WebView", v51, 2u);
      swift_slowDealloc();
    }

    LOWORD(v86) = 256;
    v48(&v86);
    goto LABEL_27;
  }
  sub_5BE90((uint64_t)&v88, &qword_4009C0);
  id v35 = v3;
  uint64_t v36 = sub_2FB880();
  os_log_type_t v37 = sub_2FC7B0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315138;
    id v39 = v35;
    id v40 = [v39 description];
    uint64_t v41 = sub_2FC180();
    unint64_t v43 = v42;

    *(void *)&long long v88 = sub_38EF0(v41, v43, &v90);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v36, v37, "Loader %s missing contentViewHost!", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

Swift::Void __swiftcall ContentLoader.applicationForegroundStateDidChange(to:)(BookEPUB::BookContentApplicationForegroundState to)
{
  int v1 = *(unsigned __int8 *)to;
  uint64_t v2 = sub_2FB880();
  os_log_type_t v3 = sub_2FC7D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = sub_2FC1E0();
    sub_38EF0(v5, v6, (uint64_t *)&v11);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v2, v3, "#loadingStatus state change to: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (v1 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v7 = v11;
    if (v11)
    {
      self;
      uint64_t v8 = (void *)swift_dynamicCastObjCClass();
      if (v8)
      {
        uint64_t v9 = v8;
        if (objc_msgSend(v8, "be_requiresReload"))
        {
          id v10 = [v9 be_navigationHandler];
          [v10 attemptReload];

          uint64_t v7 = v10;
        }
      }
    }
  }
}

uint64_t ContentLoader.load(document:layoutProvider:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v90 = a5;
  uint64_t v88 = a3;
  uint64_t v89 = sub_2FB570();
  uint64_t v83 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v82 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2FB7D0();
  uint64_t v87 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v84 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v79 - v13;
  uint64_t v15 = v5;
  uint64_t v16 = sub_2FB880();
  os_log_type_t v17 = sub_2FC7D0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v85 = v14;
  uint64_t v86 = v10;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v81 = a2;
    uint64_t v80 = a4;
    uint64_t v20 = (uint8_t *)v19;
    *(void *)&long long v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446210;
    uint64_t v21 = ContentLoader.shortDescription.getter();
    *(void *)&long long v92 = sub_38EF0(v21, v22, (uint64_t *)&v94);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v16, v17, "#loadingStatus Loader %{public}s loading", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v80;
    a2 = v81;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  sub_4F798(a1, v23);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
  uint64_t v26 = sub_8296C();
  if ((v27 & 1) != 0 || v25 != v26)
  {
    os_log_t v34 = &v15[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
    swift_beginAccess();
    if (*v34)
    {
      ContentLoader.prepareForReuse()();
    }
    else
    {
      LOBYTE(v94) = 1;
      sub_821EC((unsigned __int8 *)&v94);
      char *v34 = 1;
    }
    sub_52C40((uint64_t)a1, (uint64_t)&v94);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_46A30((uint64_t)&v94, (uint64_t)&v92, &qword_4009B0);
    uint64_t v36 = v15;
    sub_2FBBB0();
    sub_5BE90((uint64_t)&v94, &qword_4009B0);
    os_log_type_t v37 = &v36[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates];
    swift_beginAccess();
    uint64_t v38 = *(void **)v37;
    swift_unknownObjectRetain_n();
    swift_retain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)os_log_type_t v37 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v38 = sub_4AC78(0, v38[2] + 1, 1, v38);
      *(void *)os_log_type_t v37 = v38;
    }
    unint64_t v41 = v38[2];
    unint64_t v40 = v38[3];
    if (v41 >= v40 >> 1)
    {
      uint64_t v38 = sub_4AC78((void *)(v40 > 1), v41 + 1, 1, v38);
      *(void *)os_log_type_t v37 = v38;
    }
    v38[2] = v41 + 1;
    unint64_t v42 = &v38[4 * v41];
    uint64_t v43 = v88;
    v42[4] = a2;
    v42[5] = v43;
    uint64_t v44 = v90;
    v42[6] = a4;
    v42[7] = v44;
    swift_endAccess();
    sub_52C40((uint64_t)a1, (uint64_t)&v94);
    uint64_t v45 = v36;
    os_log_type_t v46 = sub_2FB880();
    os_log_type_t v47 = sub_2FC790();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v79 = a1;
    if (v48)
    {
      uint64_t v49 = swift_slowAlloc();
      *(void *)&long long v92 = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136446466;
      uint64_t v50 = ContentLoader.shortDescription.getter();
      uint64_t v91 = sub_38EF0(v50, v51, (uint64_t *)&v92);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v52 = *((void *)&v95 + 1);
      uint64_t v53 = (uint64_t)v96;
      sub_4F798(&v94, *((uint64_t *)&v95 + 1));
      unint64_t v54 = ContentLoadingDocument.shortDescription.getter(v52, v53);
      uint64_t v91 = sub_38EF0(v54, v55, (uint64_t *)&v92);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      sub_39FCC((uint64_t)&v94);
      _os_log_impl(&def_7BFC0, v46, v47, "Loader %{public}s attempting setupContentView for document: %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_39FCC((uint64_t)&v94);
    }
    uint64_t v57 = v86;
    uint64_t v56 = v87;
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    uint64_t v59 = v85;
    v58(v85, &v45[OBJC_IVAR____TtC8BookEPUB13ContentLoader_signpostID], v86);
    uint64_t v60 = sub_2FB7F0();
    os_signpost_type_t v61 = sub_2FC910();
    if (sub_2FCBC0())
    {
      uint64_t v62 = v84;
      v58(v84, v59, v57);
      unint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v63 = 0;
      os_signpost_id_t v64 = sub_2FB7B0();
      _os_signpost_emit_with_name_impl(&def_7BFC0, v60, v61, v64, "REI.ViewCreation", "", v63, 2u);
      uint64_t v56 = v87;
      swift_slowDealloc();

      unint64_t v65 = v62;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v62, v57);
    }
    else
    {

      unint64_t v65 = v84;
    }
    v58(v65, v59, v57);
    sub_2FB860();
    swift_allocObject();
    uint64_t v66 = sub_2FB850();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v57);
    *(void *)&v45[OBJC_IVAR____TtC8BookEPUB13ContentLoader_viewCreationIntervalState] = v66;
    swift_release();
    uint64_t v67 = swift_allocBox();
    uint64_t v69 = v68;
    sub_2FB560();
    if (swift_weakLoadStrong())
    {
      uint64_t v70 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v71 = (void *)swift_allocObject();
      v71[2] = v70;
      void v71[3] = a2;
      v71[4] = v88;
      uint64_t v72 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v73 = swift_allocObject();
      *(void *)(v73 + 16) = v72;
      *(void *)(v73 + 24) = v67;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v74 = ContentLoaderViewReusePool.requestContentViewHost(document:updatePlaceholder:updateContentView:)(v79, (uint64_t)sub_98720, (uint64_t)v71, (uint64_t)sub_987A4, v73);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *((void *)&v95 + 1) = type metadata accessor for ContentViewHost();
      id v96 = &protocol witness table for ContentViewHost;
      *(void *)&long long v94 = v74;
    }
    else
    {
      id v96 = 0;
      long long v94 = 0u;
      long long v95 = 0u;
    }
    uint64_t v75 = (uint64_t)&v45[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost];
    swift_beginAccess();
    sub_97968((uint64_t)&v94, v75);
    swift_endAccess();
    sub_46A30(v75, (uint64_t)&v92, &qword_4009C0);
    if (v93)
    {
      sub_469A4(&v92, (uint64_t)&v94);
      uint64_t v76 = *((void *)&v95 + 1);
      uint64_t v77 = v96;
      sub_4F798(&v94, *((uint64_t *)&v95 + 1));
      id v78 = v82;
      ((void (*)(uint64_t, _UNKNOWN **))v77[1])(v76, v77);
      swift_release();
      swift_unknownObjectRelease();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v83 + 40))(v69, v78, v89);
      sub_39FCC((uint64_t)&v94);
    }
    else
    {
      swift_release();
      swift_unknownObjectRelease();
      sub_5BE90((uint64_t)&v92, &qword_4009C0);
    }
    return swift_release();
  }
  else
  {
    sub_52C40((uint64_t)a1, (uint64_t)&v94);
    unint64_t v28 = sub_2FB880();
    os_log_type_t v29 = sub_2FC7D0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134349056;
      uint64_t v31 = *((void *)&v95 + 1);
      unint64_t v32 = v96;
      sub_4F798(&v94, *((uint64_t *)&v95 + 1));
      uint64_t v33 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v32[5])(v31, v32);
      sub_39FCC((uint64_t)&v94);
      *(void *)&long long v94 = v33;
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v28, v29, "Will not attempt to #loadingStatus load same ordinal %{public}ld", v30, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_39FCC((uint64_t)&v94);
    }

    LOWORD(v94) = 257;
    return a4(&v94);
  }
}

void sub_8FC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_2FB7D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = *(void *)(a1 + 8);
  id v50 = *(id *)a1;
  int v15 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  os_log_type_t v17 = (void *)Strong;
  int v47 = v15;
  uint64_t v48 = v14;
  uint64_t v49 = a4;
  uint64_t v46 = a3;
  BOOL v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18(v13, Strong + OBJC_IVAR____TtC8BookEPUB13ContentLoader_signpostID, v7);
  uint64_t v19 = sub_2FB7F0();
  os_signpost_type_t v20 = sub_2FC920();
  if (sub_2FCBC0())
  {
    v18(v10, (uint64_t)v13, v7);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_signpost_id_t v22 = sub_2FB7B0();
    _os_signpost_emit_with_name_impl(&def_7BFC0, v19, v20, v22, "REI.PlaceholderView", "", v21, 2u);
    swift_slowDealloc();

    uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v23(v13, v7);
    v23(v10, v7);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  uint64_t v25 = v48;
  uint64_t v24 = v49;
  id v26 = v50;
  if (v47)
  {
    id v27 = v17;
    unint64_t v28 = sub_2FB880();
    os_log_type_t v29 = sub_2FC7B0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v32 = ContentLoader.shortDescription.getter();
      uint64_t v52 = sub_38EF0(v32, v33, v51);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2112;
      sub_9C558();
      swift_allocError();
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v52 = v34;
      sub_2FCC70();
      *uint64_t v31 = v34;
      _os_log_impl(&def_7BFC0, v28, v29, "Loader %{public}s error setup placeholder error:%@", (uint8_t *)v30, 0x16u);
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  sub_9C54C(v50, v48, 0);
  id v35 = v26;
  sub_86E78();
  swift_getKeyPath();
  swift_getKeyPath();
  v51[0] = (uint64_t)v26;
  v51[1] = v25;
  sub_9C54C(v26, v25, 0);
  uint64_t v36 = v17;
  sub_2FBBB0();
  sub_87094();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  os_log_type_t v37 = (void *)v51[0];
  if (v51[0])
  {
    self;
    uint64_t v38 = (void *)swift_dynamicCastObjCClass();
    if (v38)
    {
      id v39 = [v38 be_viewForFindUI];

      if (v39)
      {
        uint64_t v40 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v51[0] = (uint64_t)v39;
        swift_getKeyPath();
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = sub_97A08;
        *(void *)(v41 + 24) = v40;
        swift_retain_n();
        uint64_t v42 = sub_2FB360();
        swift_release();
        swift_release();
        *(void *)(swift_allocObject() + 16) = v42;
        sub_2FBA80();
        swift_allocObject();
        os_log_type_t v37 = (void *)sub_2FBA90();

        swift_release_n();
        goto LABEL_16;
      }
    }
    else
    {
    }
    os_log_type_t v37 = 0;
  }
LABEL_16:
  *(void *)&v36[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation] = v37;
  swift_release();
  sub_9C530(v26, v25, 0);
  uint64_t v43 = &v36[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates];
  swift_beginAccess();
  uint64_t v44 = *(void *)(*(void *)v43 + 16);
  if (v44) {
    uint64_t v24 = *(void *)(*(void *)v43 + 32 * v44 + 8);
  }
  uint64_t v45 = swift_unknownObjectRetain();
  ContentLoader.updateStyle(with:)(v45, v24);
  swift_unknownObjectRelease();

  sub_9C530(v26, v25, 0);
}

uint64_t sub_902EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2FBFA0();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2FBFD0();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  char v14 = *(unsigned char *)(a1 + 16);
  sub_39F90(0, (unint64_t *)&qword_401700);
  uint64_t v19 = sub_2FC8C0();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v12;
  *(unsigned char *)(v15 + 48) = v14;
  aBlock[4] = sub_9C53C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5C418;
  aBlock[3] = &unk_3C5D78;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_9C54C(v13, v12, v14);
  swift_release();
  sub_2FBFB0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_9C5AC((unint64_t *)&qword_400520, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_371F4(&qword_401710);
  sub_44924((unint64_t *)&qword_400530, &qword_401710);
  sub_2FCD20();
  os_log_type_t v17 = (void *)v19;
  sub_2FC8D0();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v21);
}

void sub_90600(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  int v61 = a5;
  id v62 = a3;
  uint64_t v6 = sub_2FB7D0();
  uint64_t v63 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v58 - v9;
  uint64_t v11 = sub_2FB570();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  os_log_type_t v17 = (char *)&v58 - v16;
  uint64_t v18 = swift_projectBox();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (char *)Strong;
    uint64_t v21 = Strong + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
    swift_beginAccess();
    sub_46A30(v21, (uint64_t)&v66, &qword_4009C0);
    if (v67)
    {
      uint64_t v59 = a4;
      sub_469A4(&v66, (uint64_t)v68);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v18, v11);
      uint64_t v22 = v69;
      uint64_t v23 = v70;
      sub_4F798(v68, v69);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      char v24 = sub_2FB550();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
      v25(v14, v11);
      v25(v17, v11);
      if (v24)
      {
        uint64_t v26 = v63;
        id v27 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v27(v10, &v20[OBJC_IVAR____TtC8BookEPUB13ContentLoader_signpostID], v6);
        unint64_t v28 = sub_2FB7F0();
        os_signpost_type_t v29 = sub_2FC920();
        if (sub_2FCBC0())
        {
          uint64_t v30 = v60;
          v27(v60, v10, v6);
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v31 = 0;
          os_signpost_id_t v32 = sub_2FB7B0();
          _os_signpost_emit_with_name_impl(&def_7BFC0, v28, v29, v32, "REI.WebViewCreation", "", v31, 2u);
          swift_slowDealloc();

          unint64_t v33 = *(void (**)(char *, uint64_t))(v26 + 8);
          v33(v10, v6);
          v33(v30, v6);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v6);
        }
        uint64_t v40 = v59;
        id v41 = v62;
        if (v61)
        {
          id v50 = v20;
          unint64_t v51 = sub_2FB880();
          os_log_type_t v52 = sub_2FC7B0();
          if (os_log_type_enabled(v51, v52))
          {
            uint64_t v53 = swift_slowAlloc();
            unint64_t v54 = (void *)swift_slowAlloc();
            v64[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v53 = 136446466;
            uint64_t v55 = ContentLoader.shortDescription.getter();
            uint64_t v65 = sub_38EF0(v55, v56, v64);
            sub_2FCC70();

            swift_bridgeObjectRelease();
            *(_WORD *)(v53 + 12) = 2112;
            sub_9C558();
            swift_allocError();
            uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v65 = v57;
            sub_2FCC70();
            *unint64_t v54 = v57;
            _os_log_impl(&def_7BFC0, v51, v52, "Loader %{public}s error setupContentView error:%@", (uint8_t *)v53, 0x16u);
            sub_371F4(&qword_400A90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
LABEL_29:
          sub_8E33C(0);

          sub_39FCC((uint64_t)v68);
          return;
        }
        sub_9C54C(v62, v59, 0);
        id v42 = v41;
        sub_86E78();
        swift_getKeyPath();
        swift_getKeyPath();
        v64[0] = (uint64_t)v41;
        v64[1] = v40;
        sub_9C54C(v41, v40, 0);
        uint64_t v43 = v20;
        sub_2FBBB0();
        sub_87094();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2FBBA0();
        swift_release();
        swift_release();
        uint64_t v44 = (void *)v64[0];
        if (v64[0])
        {
          self;
          uint64_t v45 = (void *)swift_dynamicCastObjCClass();
          if (v45)
          {
            id v46 = [v45 be_viewForFindUI];

            if (v46)
            {
              uint64_t v47 = swift_allocObject();
              swift_unknownObjectWeakInit();
              v64[0] = (uint64_t)v46;
              swift_getKeyPath();
              uint64_t v48 = swift_allocObject();
              *(void *)(v48 + 16) = sub_97A08;
              *(void *)(v48 + 24) = v47;
              swift_retain_n();
              uint64_t v49 = sub_2FB360();
              swift_release();
              swift_release();
              *(void *)(swift_allocObject() + 16) = v49;
              sub_2FBA80();
              swift_allocObject();
              uint64_t v44 = (void *)sub_2FBA90();

              swift_release_n();
              goto LABEL_24;
            }
          }
          else
          {
          }
          uint64_t v44 = 0;
        }
LABEL_24:
        *(void *)&v43[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation] = v44;
        swift_release();
        sub_9C530(v41, v59, 0);
        if (v43[OBJC_IVAR____TtC8BookEPUB13ContentLoader_mediaContentState])
        {
          if (v43[OBJC_IVAR____TtC8BookEPUB13ContentLoader_mediaContentState] == 1) {
            ContentLoader.pauseMediaContent()();
          }
          else {
            ContentLoader.resumeMediaContent()();
          }
        }
        sub_9C530(v41, v59, 0);
        goto LABEL_29;
      }
      sub_39FCC((uint64_t)v68);
    }
    else
    {
      sub_5BE90((uint64_t)&v66, &qword_4009C0);
    }
    uint64_t v34 = v20;
    id v35 = sub_2FB880();
    os_log_type_t v36 = sub_2FC790();
    if (os_log_type_enabled(v35, v36))
    {
      os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v37 = 136446210;
      uint64_t v38 = ContentLoader.shortDescription.getter();
      v64[0] = sub_38EF0(v38, v39, v68);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v35, v36, "Loader %{public}s stale contentViewHost, discarding", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void ContentLoader.move(to:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  id v8 = v3;
  uint64_t v9 = sub_2FB880();
  os_log_type_t v10 = sub_2FC790();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v83[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    unint64_t v12 = sub_91A08((uint64_t)v5);
    sub_38EF0(v12, v13, v83);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v14 = ContentLoader.shortDescription.getter();
    v82[0] = (void *)sub_38EF0(v14, v15, v83);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v9, v10, "move(to: %s in loader: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v16 = (void *)v83[0];
  if (v83[0])
  {
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      v82[0] = v5;
      v82[1] = v7;
      v82[2] = v6;
      id v19 = v16;
      ContentLoader.convertToUI(_:)(v82, v83);
      uint64_t v20 = (void *)v83[0];
      if (v83[0])
      {
        double v22 = *(double *)&v83[1];
        double v21 = *(double *)&v83[2];
        id v23 = [v18 scrollView];
        [v20 convertPoint:v23 toCoordinateSpace:v22];
        double v25 = v24;
        double v27 = v26;

        swift_unknownObjectRelease();
        id v28 = [v18 scrollView];
        [v28 contentSize];

        sub_2FC9C0();
        v84.CGFloat x = v25;
        v84.CGFloat y = v27;
        if (!CGRectContainsPoint(v85, v84))
        {
          id v29 = v8;
          id v30 = v19;
          id v31 = v29;
          id v77 = v30;
          os_signpost_id_t v32 = sub_2FB880();
          os_log_type_t v33 = sub_2FC7B0();
          if (os_log_type_enabled(v32, v33))
          {
            uint64_t v34 = swift_slowAlloc();
            v83[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v34 = 136315650;
            id v78 = a2;
            id v35 = v31;
            id v36 = [v35 description];
            os_log_type_t type = v33;
            uint64_t v37 = sub_2FC180();
            unint64_t v39 = v38;

            v82[0] = (void *)sub_38EF0(v37, v39, v83);
            sub_2FCC70();

            swift_bridgeObjectRelease();
            *(_WORD *)(v34 + 12) = 2080;
            unint64_t v40 = sub_91A08((uint64_t)v5);
            v82[0] = (void *)sub_38EF0(v40, v41, v83);
            sub_2FCC70();
            swift_bridgeObjectRelease();
            *(_WORD *)(v34 + 22) = 2080;
            a2 = v78;
            id v42 = [v18 scrollView];
            [v42 contentSize];

            uint64_t v43 = sub_2FC9D0();
            v82[0] = (void *)sub_38EF0(v43, v44, v83);
            sub_2FCC70();

            swift_bridgeObjectRelease();
            _os_log_impl(&def_7BFC0, v32, type, "Requested content offset outside available content! loader:%s offset: %s contentSize: %s", (uint8_t *)v34, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
        }
        uint64_t v75 = swift_allocObject();
        *(void *)(v75 + 16) = a2;
        *(void *)(v75 + 24) = a3;
        swift_retain();
        sub_92358(v18, (uint64_t)sub_987AC, v75, v25, v27);

        swift_release();
      }
      else
      {
        id v64 = v8;
        uint64_t v65 = sub_2FB880();
        os_log_type_t v66 = sub_2FC7B0();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = swift_slowAlloc();
          v83[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v67 = 136315394;
          uint64_t v68 = sub_68EA4();
          uint64_t v80 = a2;
          v82[0] = (void *)sub_38EF0(v68, v69, v83);
          sub_2FCC70();
          swift_bridgeObjectRelease();
          *(_WORD *)(v67 + 12) = 2080;
          id v70 = v64;
          id v71 = [v70 description];
          uint64_t v72 = sub_2FC180();
          unint64_t v74 = v73;

          v82[0] = (void *)sub_38EF0(v72, v74, v83);
          sub_2FCC70();

          a2 = v80;
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        a2(0);
      }
    }
    else
    {
      id v55 = v8;
      unint64_t v56 = sub_2FB880();
      os_log_type_t v57 = sub_2FC7B0();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v79 = a2;
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        v83[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v58 = 136315138;
        id v59 = v55;
        id v60 = [v59 description];
        uint64_t v61 = sub_2FC180();
        unint64_t v63 = v62;

        v82[0] = (void *)sub_38EF0(v61, v63, v83);
        sub_2FCC70();

        a2 = v79;
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      a2(0);
    }
  }
  else
  {
    id v45 = v8;
    id v46 = sub_2FB880();
    uint64_t v47 = sub_2FC7B0();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      uint64_t v48 = swift_slowAlloc();
      v83[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136315394;
      uint64_t v49 = a2;
      id v50 = v45;
      id v51 = [v50 description];
      uint64_t v52 = sub_2FC180();
      unint64_t v54 = v53;

      sub_38EF0(v52, v54, v83);
      sub_2FCC70();

      a2 = v49;
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      v82[0] = (void *)sub_38EF0(0xD000000000000014, 0x800000000030E8A0, v83);
      sub_2FCC70();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    a2(0);
  }
}

unint64_t sub_91A08(uint64_t a1)
{
  *(void *)&long long v7 = 0;
  *((void *)&v7 + 1) = 0xE000000000000000;
  sub_2FCDD0(34);
  swift_bridgeObjectRelease();
  unint64_t v10 = 0xD000000000000014;
  unint64_t v11 = 0x800000000030D5C0;
  sub_371F4(&qword_400C60);
  if (swift_dynamicCast())
  {
    sub_4F798(&v7, *((uint64_t *)&v8 + 1));
    uint64_t v2 = sub_2FD200();
    uint64_t v4 = v3;
    sub_39FCC((uint64_t)&v7);
  }
  else
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    sub_5BE90((uint64_t)&v7, &qword_400C68);
    *(void *)&long long v7 = a1;
    uint64_t v2 = sub_2FC1E0();
    uint64_t v4 = v5;
  }
  v12._uint64_t countAndFlagsBits = v2;
  v12._object = v4;
  sub_2FC260(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x3A65756C6176202CLL;
  v13._object = (void *)0xE900000000000020;
  sub_2FC260(v13);
  v14._uint64_t countAndFlagsBits = sub_2FCA10();
  sub_2FC260(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  sub_2FC260(v15);
  return v10;
}

unint64_t sub_91B88()
{
  *(void *)&long long v7 = 0;
  *((void *)&v7 + 1) = 0xE000000000000000;
  sub_2FCDD0(34);
  swift_bridgeObjectRelease();
  unint64_t v10 = 0xD000000000000014;
  unint64_t v11 = 0x800000000030D5C0;
  uint64_t v1 = *v0;
  sub_371F4(&qword_400C60);
  if (swift_dynamicCast())
  {
    sub_4F798(&v7, *((uint64_t *)&v8 + 1));
    uint64_t v2 = sub_2FD200();
    uint64_t v4 = v3;
    sub_39FCC((uint64_t)&v7);
  }
  else
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    sub_5BE90((uint64_t)&v7, &qword_400C68);
    *(void *)&long long v7 = v1;
    uint64_t v2 = sub_2FC1E0();
    uint64_t v4 = v5;
  }
  v12._uint64_t countAndFlagsBits = v2;
  v12._object = v4;
  sub_2FC260(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x3A65756C6176202CLL;
  v13._object = (void *)0xE900000000000020;
  sub_2FC260(v13);
  v14._uint64_t countAndFlagsBits = sub_2FC9B0();
  sub_2FC260(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  sub_2FC260(v15);
  return v10;
}

void ContentLoader.convertToUI(_:)(void **a1@<X0>, void *a2@<X8>)
{
  os_log_type_t v3 = v2;
  id v5 = *a1;
  long long v7 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = sub_93258();
  if (!v8)
  {
LABEL_6:
    id v18 = v2;
    id v19 = sub_2FB880();
    os_log_type_t v20 = sub_2FC7B0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      double v22 = (void *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412802;
      uint64_t v39 = (uint64_t)a2;
      id v40 = v5;
      id v46 = v18;
      id v23 = v18;
      sub_2FCC70();
      *double v22 = v18;

      *(_WORD *)(v21 + 12) = 2080;
      id v46 = (id)sub_38EF0(0x54747265766E6F63, 0xEF293A5F2849556FLL, &v42);
      sub_2FCC70();
      *(_WORD *)(v21 + 22) = 2080;
      uint64_t v24 = sub_68EA4();
      id v46 = (id)sub_38EF0(v24, v25, &v42);
      a2 = (void *)v39;
      sub_2FCC70();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v19, v20, "%@.%s: Unable to convert %s: missing document base and/or document", (uint8_t *)v21, 0x20u);
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_14;
  }
  uint64_t v9 = v8;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v10 = v44;
  if (!v44)
  {
    swift_unknownObjectRelease();
    sub_5BE90((uint64_t)&v42, &qword_4009B0);
    goto LABEL_6;
  }
  uint64_t v11 = v45;
  Swift::String v12 = sub_4F798(&v42, v44);
  uint64_t v13 = *(void *)(v10 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v13 + 16))(v16, v14);
  sub_5BE90((uint64_t)&v42, &qword_4009B0);
  sub_1F44E8(v11, (uint64_t *)&v46);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v10);
  uint64_t v17 = (uint64_t)v46;
  if (v5 == v46)
  {
    *a2 = v9;
    a2[1] = v7;
    a2[2] = v6;
    return;
  }
  id v40 = v5;
  id v26 = v3;
  double v27 = sub_2FB880();
  os_log_type_t v28 = sub_2FC7B0();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    id v31 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    id v46 = (id)v39;
    *(_DWORD *)uint64_t v30 = 138413058;
    os_log_t v38 = v27;
    uint64_t v42 = (uint64_t)v26;
    int v37 = v29;
    id v32 = v26;
    sub_2FCC70();
    *id v31 = v26;

    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v42 = sub_38EF0(0x54747265766E6F63, 0xEF293A5F2849556FLL, (uint64_t *)&v46);
    sub_2FCC70();
    *(_WORD *)(v30 + 22) = 2080;
    uint64_t v33 = sub_68EA4();
    uint64_t v42 = sub_38EF0(v33, v34, (uint64_t *)&v46);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 32) = 2080;
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_2FCDD0(20);
    swift_bridgeObjectRelease();
    uint64_t v42 = 0xD000000000000011;
    unint64_t v43 = 0x800000000030E840;
    uint64_t v41 = v17;
    v47._uint64_t countAndFlagsBits = sub_2FD1A0();
    sub_2FC260(v47);
    swift_bridgeObjectRelease();
    v48._uint64_t countAndFlagsBits = 41;
    v48._object = (void *)0xE100000000000000;
    sub_2FC260(v48);
    uint64_t v42 = sub_38EF0(v42, v43, (uint64_t *)&v46);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    os_log_t v35 = v38;
    _os_log_impl(&def_7BFC0, v38, (os_log_type_t)v37, "%@.%s: Refusing to convert %s: Does not match document ID: %s", (uint8_t *)v30, 0x2Au);
    sub_371F4(&qword_400A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_unknownObjectRelease();
LABEL_14:
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

void sub_92358(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(double *)(v11 + 24) = a4;
  *(double *)(v11 + 32) = a5;
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 48) = a3;
  Swift::String v12 = (void *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
  swift_beginAccess();
  if (*v12)
  {
    uint64_t v13 = a3;
    uint64_t v14 = v12[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = *(double (**)(uint64_t, uint64_t))(v14 + 176);
    uint64_t v40 = v13;
    sub_9C4D4(a2);
    id v17 = a1;
    swift_unknownObjectRetain();
    double v18 = v16(ObjectType, v14);
    swift_unknownObjectRelease();
    id v19 = [v17 scrollView];
    [v19 contentSize];
    double v21 = v20;
    double v23 = v22;

    double v24 = (double)sub_18A898();
    id v25 = [v17 scrollView];
    [v25 contentSize];
    double v27 = v26;
    double v29 = v28;

    if (objc_msgSend(v17, "be_paginationMode") != (char *)&def_7BFC0 + 3 && objc_msgSend(v17, "be_paginationMode")) {
      double v29 = v27;
    }
    if (v29 / v24 < v18 * 0.8)
    {
      uint64_t v30 = sub_2FB880();
      os_log_type_t v31 = sub_2FC790();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 134218752;
        sub_2FCC70();
        *(_WORD *)(v32 + 12) = 2048;
        sub_2FCC70();
        *(_WORD *)(v32 + 22) = 2048;
        sub_2FCC70();
        *(_WORD *)(v32 + 32) = 2048;
        double aBlock = v18 * 0.8;
        sub_2FCC70();
        _os_log_impl(&def_7BFC0, v30, v31, "contentLength is %f but a size more like %f seems more plausible. we compared %f against %f", (uint8_t *)v32, 0x2Au);
        swift_slowDealloc();
      }

      goto LABEL_15;
    }
    if (v21 == 0.0 && v23 == 0.0)
    {
LABEL_15:
      uint64_t v45 = sub_9C4C4;
      uint64_t v46 = v11;
      double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v42 = 1107296256;
      unint64_t v43 = sub_5C418;
      uint64_t v44 = &unk_3C5CD8;
      os_log_t v38 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v17 be_doAfterNextPresentationUpdate:v38];
      swift_release();
      _Block_release(v38);
      return;
    }
    if (a2)
    {
      uint64_t v45 = (void (*)())a2;
      uint64_t v46 = v40;
      double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v42 = 1107296256;
      unint64_t v43 = sub_5C418;
      uint64_t v44 = &unk_3C5CB0;
      int v37 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      int v37 = 0;
    }
    [v17 be_setContentOffset:1 bypassingJS:v37 completion:a4, a5, v40];
  }
  else
  {
    sub_9C4D4(a2);
    id v33 = a1;
    unint64_t v34 = sub_2FB880();
    os_log_type_t v35 = sub_2FC7B0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&def_7BFC0, v34, v35, "Unable to get pageLength from layoutProvider -- applyingOffset", v36, 2u);
      swift_slowDealloc();
    }

    if (a2)
    {
      uint64_t v45 = (void (*)())a2;
      uint64_t v46 = a3;
      double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v42 = 1107296256;
      unint64_t v43 = sub_5C418;
      uint64_t v44 = &unk_3C5D00;
      int v37 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      int v37 = 0;
    }
    [v33 be_setContentOffset:1 bypassingJS:v37 completion:a4, a5, v39];
  }
  _Block_release(v37);
  swift_release();
}

void ContentLoader.takeSnapshot(completion:)(void (*a1)(void), uint64_t a2)
{
  os_log_type_t v3 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  id v6 = (id)v15[0];
  if (v15[0])
  {
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = a1;
      void v9[3] = a2;
      _OWORD v9[4] = v3;
      void v15[4] = sub_9886C;
      void v15[5] = v9;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 1107296256;
      _OWORD v15[2] = sub_92C20;
      void v15[3] = &unk_3C5578;
      uint64_t v10 = _Block_copy(v15);
      id v6 = v6;
      swift_retain();
      id v11 = v3;
      swift_release();
      [v8 takeSnapshotWithConfiguration:0 completionHandler:v10];
      _Block_release(v10);
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      sub_987D8();
      swift_allocError();
      *(void *)uint64_t v14 = ObjectType;
      *(unsigned char *)(v14 + 8) = 2;
      a1();
      swift_errorRelease();
    }
  }
  else
  {
    sub_987D8();
    swift_allocError();
    *(void *)uint64_t v12 = 3;
    *(unsigned char *)(v12 + 8) = 4;
    a1();
    swift_errorRelease();
  }
}

void sub_92AB0(void *a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v11 = a1;
    a3(a1, 0);
  }
  else
  {
    if (a2)
    {
      swift_errorRetain();
      uint64_t v6 = a2;
    }
    else
    {
      uint64_t v7 = sub_2FB880();
      uint64_t v8 = sub_2FC7A0();
      if (os_log_type_enabled(v7, (os_log_type_t)v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&def_7BFC0, v7, (os_log_type_t)v8, "takeSnapshot failed with no image nor error", v9, 2u);
        swift_slowDealloc();
      }

      sub_987D8();
      uint64_t v6 = swift_allocError();
      *(void *)uint64_t v10 = 9;
      *(unsigned char *)(v10 + 8) = 4;
    }
    a3((void *)v6, 1);
    swift_errorRelease();
  }
}

void sub_92C20(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t ContentLoader.selectText(cfi:completion:)(uint64_t a1, void *a2, void (*a3)(id *), uint64_t a4)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  id v8 = v16[0];
  if (v16[0])
  {
    self;
    uint64_t v9 = swift_dynamicCastObjCClass();
    if (v9)
    {
      uint64_t v10 = v9;
      id v11 = (void *)swift_allocObject();
      v11[2] = v10;
      void v11[3] = a1;
      v11[4] = a2;
      v11[5] = a3;
      void v11[6] = a4;
      id v12 = v8;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_18A4F0(a1, a2, (uint64_t)sub_9892C, (uint64_t)v11);

      return swift_release();
    }
  }
  sub_98890();
  uint64_t v14 = (void *)swift_allocError();
  unsigned char *v15 = 0;
  v16[0] = v14;
  memset(&v16[1], 0, 24);
  char v17 = 1;
  a3(v16);
  return swift_errorRelease();
}

uint64_t sub_92E38(char a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6)
{
  if (a1)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a5;
    *(void *)(v10 + 24) = a6;
    swift_retain();
    sub_18A6E0(a3, a4, (uint64_t)sub_9C470, v10);
    return swift_release();
  }
  else
  {
    sub_98890();
    uint64_t v12 = swift_allocError();
    *uint64_t v13 = 2;
    v14[0] = v12;
    memset(&v14[1], 0, 24);
    char v15 = 1;
    a5(v14);
    return swift_errorRelease();
  }
}

void ContentLoader.rects(from:completion:)(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v9)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      sub_18A6E0(a1, a2, (uint64_t)a3, a4);

      return;
    }
  }
  sub_98890();
  swift_allocError();
  *id v8 = 0;
  a3();
  swift_errorRelease();
}

Swift::Void __swiftcall ContentLoader.clearSelection()()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v1)
  {
    self;
    uint64_t v0 = (void *)swift_dynamicCastObjCClass();
    if (v0) {
      [v0 be_clearSelection];
    }
  }
}

void ContentLoader.convertToDocument(contentRect:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  id v10 = v19;
  if (v19)
  {
    self;
    id v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      uint64_t v12 = v11;
      [v11 be_convertPointFromContentsToView:a2, a3];
      double v14 = v13;
      double v16 = v15;
      [v12 be_convertPointFromContentsToView:a2 + a4, a3 + a5];
      v21.size.CGFloat width = v17 - v14;
      v21.size.CGFloat height = v18 - v16;
      v21.origin.CGFloat x = v14;
      v21.origin.CGFloat y = v16;
      id v19 = v12;
      CGRect v20 = CGRectStandardize(v21);
      ContentLoader.convertToDocument(_:)((double *)&v19, a1);

      return;
    }
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 40) = 1;
}

uint64_t sub_93258()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v10)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
  }
  else
  {
    id v3 = v0;
    uint64_t v4 = sub_2FB880();
    os_log_type_t v5 = sub_2FC7B0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      id v7 = (void *)swift_slowAlloc();
      id v10 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412546;
      id v8 = v3;
      sub_2FCC70();
      void *v7 = v3;

      *(_WORD *)(v6 + 12) = 2080;
      sub_38EF0(0x746E656D75636F64, 0xEC00000065736142, (uint64_t *)&v10);
      sub_2FCC70();
      _os_log_impl(&def_7BFC0, v4, v5, "%@.%s: Unable to determine 'document' coordinate system: missing content view", (uint8_t *)v6, 0x16u);
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  return v2;
}

void ContentLoader.convertToDocument(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)a1;
  double v6 = *(double *)(a1 + 8);
  double v5 = *(double *)(a1 + 16);
  uint64_t v7 = sub_93258();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v9 = v33;
    if (v33)
    {
      uint64_t v10 = v34;
      uint64_t v11 = sub_4F798(v32, v33);
      uint64_t v12 = *(void *)(v9 - 8);
      __n128 v13 = __chkstk_darwin(v11);
      double v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v12 + 16))(v15, v13);
      sub_5BE90((uint64_t)v32, &qword_4009B0);
      sub_1F44E8(v10, &v35);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
      uint64_t v16 = v35;
      [v4 convertPoint:v8 toCoordinateSpace:v6];
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      swift_unknownObjectRelease();
      *(void *)a2 = v16;
      *(void *)(a2 + 8) = v18;
      *(void *)(a2 + 16) = v20;
      *(unsigned char *)(a2 + 24) = 0;
      return;
    }
    swift_unknownObjectRelease();
    sub_5BE90((uint64_t)v32, &qword_4009B0);
  }
  id v21 = v2;
  swift_unknownObjectRetain_n();
  id v22 = v21;
  double v23 = sub_2FB880();
  os_log_type_t v24 = sub_2FC7B0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    os_log_t v31 = v23;
    double v26 = (void *)swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 138412802;
    uint64_t v35 = (uint64_t)v22;
    id v27 = v22;
    sub_2FCC70();
    *double v26 = v22;

    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v35 = sub_38EF0(0xD000000000000015, 0x800000000030E820, v32);
    sub_2FCC70();
    *(_WORD *)(v25 + 22) = 2080;
    swift_unknownObjectRetain();
    uint64_t v28 = sub_68FA8();
    unint64_t v30 = v29;
    swift_unknownObjectRelease();
    uint64_t v35 = sub_38EF0(v28, v30, v32);
    sub_2FCC70();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    double v23 = v31;
    _os_log_impl(&def_7BFC0, v31, v24, "%@.%s: Unable to convert %s: missing document base and/or document", (uint8_t *)v25, 0x20u);
    sub_371F4(&qword_400A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
}

id ContentLoader.peripheralAccessoryView(at:)(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  double v3 = *(double *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  double v5 = (void *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
  swift_beginAccess();
  if (*v5
    && (uint64_t v6 = v5[1],
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24),
        swift_unknownObjectRetain(),
        uint64_t v9 = v8(ObjectType, v6),
        swift_unknownObjectRelease(),
        (v9 & 0xFFFFFFFFFFFFFFFELL) == 2))
  {
    id v10 = sub_84B84();
  }
  else
  {
    id v10 = sub_848FC();
  }
  uint64_t v11 = v10;
  [v2 convertPoint:v10 toCoordinateSpace:v3];
  id v12 = [v11 hitTest:0];

  return v12;
}

Swift::Void __swiftcall ContentLoader.pauseMediaContent()()
{
  v0[OBJC_IVAR____TtC8BookEPUB13ContentLoader_mediaContentState] = 1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v1 = v9;
  if ((void)v9)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      [v2 be_suspendAllMediaPlayback];
      goto LABEL_8;
    }
  }
  double v3 = v0;
  uint64_t v1 = sub_2FB880();
  os_log_type_t v4 = sub_2FC7B0();
  if (os_log_type_enabled(v1, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)&long long v9 = sub_38EF0(0xD000000000000013, 0x800000000030E8E0, &v8);
    sub_2FCC70();
    *(_WORD *)(v5 + 12) = 2080;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    sub_371F4(&qword_400A50);
    uint64_t v6 = sub_2FC1E0();
    *(void *)&long long v9 = sub_38EF0(v6, v7, &v8);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v1, v4, "%s, unsupported content view: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
LABEL_8:
}

Swift::Void __swiftcall ContentLoader.resumeMediaContent()()
{
  v0[OBJC_IVAR____TtC8BookEPUB13ContentLoader_mediaContentState] = 2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v1 = v9;
  if ((void)v9)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      [v2 be_resumeAllMediaPlayback];
      goto LABEL_8;
    }
  }
  double v3 = v0;
  uint64_t v1 = sub_2FB880();
  os_log_type_t v4 = sub_2FC7B0();
  if (os_log_type_enabled(v1, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)&long long v9 = sub_38EF0(0xD000000000000014, 0x800000000030E900, &v8);
    sub_2FCC70();
    *(_WORD *)(v5 + 12) = 2080;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    sub_371F4(&qword_400A50);
    uint64_t v6 = sub_2FC1E0();
    *(void *)&long long v9 = sub_38EF0(v6, v7, &v8);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v1, v4, "%s, unsupported content view: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
LABEL_8:
}

void ContentLoader.reloadDocument(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v9 = &v4[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
  swift_beginAccess();
  if (*v9 - 1 < 2)
  {
    id v10 = v4;
    swift_unknownObjectRetain_n();
    uint64_t v11 = v10;
    id v12 = sub_2FB880();
    os_log_type_t v13 = sub_2FC790();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      sub_2FB570();
      sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v15 = sub_2FD1A0();
      sub_38EF0(v15, v16, v53);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2);
      sub_38EF0(v18, v19, v53);
      sub_2FCC70();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v12, v13, "loaderID:%s requested reloadDocument for #contentConfig: %s, Capturing.", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
    os_log_t v31 = &v11[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates];
    swift_beginAccess();
    uint64_t v32 = *(void **)v31;
    swift_unknownObjectRetain_n();
    swift_retain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)os_log_t v31 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v32 = sub_4AC78(0, v32[2] + 1, 1, v32);
      *(void *)os_log_t v31 = v32;
    }
    unint64_t v35 = v32[2];
    unint64_t v34 = v32[3];
    if (v35 >= v34 >> 1)
    {
      uint64_t v32 = sub_4AC78((void *)(v34 > 1), v35 + 1, 1, v32);
      *(void *)os_log_t v31 = v32;
    }
    uint64_t v32[2] = v35 + 1;
    uint64_t v36 = &v32[4 * v35];
    v36[4] = a1;
    v36[5] = a2;
    v36[6] = a3;
    v36[7] = a4;
    swift_endAccess();
LABEL_22:
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
  if (*v9)
  {
    int v37 = v4;
    swift_unknownObjectRetain_n();
    os_log_t v38 = v37;
    uint64_t v39 = sub_2FB880();
    os_log_type_t v40 = sub_2FC790();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315394;
      sub_2FB570();
      sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v42 = sub_2FD1A0();
      sub_38EF0(v42, v43, v53);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      uint64_t v44 = swift_getObjectType();
      uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(v44, a2);
      sub_38EF0(v45, v46, v53);
      sub_2FCC70();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_7BFC0, v39, v40, "loaderID:%s requested reloadDocument for #contentConfig: %s, Processing.", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
    Swift::String v47 = &v38[OBJC_IVAR____TtC8BookEPUB13ContentLoader_pendingLayoutUpdates];
    swift_beginAccess();
    Swift::String v48 = *(void **)v47;
    swift_unknownObjectRetain_n();
    swift_retain_n();
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)Swift::String v47 = v48;
    if ((v49 & 1) == 0)
    {
      Swift::String v48 = sub_4AC78(0, v48[2] + 1, 1, v48);
      *(void *)Swift::String v47 = v48;
    }
    unint64_t v51 = v48[2];
    unint64_t v50 = v48[3];
    if (v51 >= v50 >> 1)
    {
      Swift::String v48 = sub_4AC78((void *)(v50 > 1), v51 + 1, 1, v48);
      *(void *)Swift::String v47 = v48;
    }
    v48[2] = v51 + 1;
    uint64_t v52 = &v48[4 * v51];
    v52[4] = a1;
    v52[5] = a2;
    v52[6] = a3;
    v52[7] = a4;
    swift_endAccess();
    sub_8E33C(1);
    goto LABEL_22;
  }
  uint64_t v20 = v4;
  swift_unknownObjectRetain_n();
  id v21 = v20;
  id v22 = sub_2FB880();
  os_log_type_t v23 = sub_2FC790();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = a2;
    uint64_t v25 = swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    sub_2FB570();
    sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v26 = sub_2FD1A0();
    sub_38EF0(v26, v27, v53);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v28 = swift_getObjectType();
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 184))(v28, v24);
    sub_38EF0(v29, v30, v53);
    sub_2FCC70();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, v22, v23, "loaderID:%s requested reloadDocument for #contentConfig: %s, but we have no document.  Ignoring.", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
  }
}

BOOL sub_94744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v41)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v43;
  long long v44;
  long long v45;
  long long v46;
  double v47;
  uint64_t v48;
  long long v49;
  long long v50;
  long long v51;
  double v52;
  CGSize v53;
  CGSize v54;

  if (!a1) {
    return 1;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 24);
  swift_unknownObjectRetain();
  uint64_t v9 = v8(ObjectType, a2);
  if (v9 != (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4)) {
    goto LABEL_53;
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 120))(ObjectType, a2);
  if (v10 != (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 120))(a3, a4)) {
    goto LABEL_53;
  }
  CGFloat v11 = (*(double (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
  CGFloat v13 = v12;
  v54.CGFloat width = (*(double (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v54.CGFloat height = v14;
  v53.CGFloat width = v11;
  v53.CGFloat height = v13;
  if (!CGSizeEqualToSize(v53, v54)) {
    goto LABEL_53;
  }
  uint64_t v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 160);
  v42(&v48, ObjectType, a2);
  LOWORD(v43) = v48;
  BYTE2(v43) = BYTE2(v48);
  uint64_t v44 = v49;
  uint64_t v45 = v50;
  unint64_t v46 = v51;
  Swift::String v47 = v52;
  uint64_t v15 = BookThemeEntity.fontFamily.getter();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 160);
  v41(&v43, a3, a4);
  uint64_t v18 = BookThemeEntity.fontFamily.getter();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v15 == v18 && v17 == v20)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_53;
    }
  }
  v42(&v48, ObjectType, a2);
  if ((void)v49)
  {
    int v22 = BYTE8(v49) & 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    int v23 = v48;
    swift_bridgeObjectRelease();
    int v22 = v23 == 3;
  }
  v41(&v43, a3, a4);
  if (!(void)v44)
  {
    int v25 = v43;
    swift_bridgeObjectRelease();
    if (v22 == (v25 == 3)) {
      goto LABEL_16;
    }
LABEL_53:
    swift_unknownObjectRelease();
    return 1;
  }
  int v24 = BYTE8(v44) & 1;
  swift_bridgeObjectRelease();
  if (v22 != v24) {
    goto LABEL_53;
  }
LABEL_16:
  v42(&v48, ObjectType, a2);
  uint64_t v26 = (char)v48;
  char v27 = (_BYTE)v48 != 0;
  if ((void)v49) {
    char v27 = BYTE9(v49);
  }
  if (v27)
  {
    if ((void)v49)
    {
      double v28 = *(double *)&v50;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      double v28 = dbl_32E2A8[v26];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    double v28 = 0.0;
  }
  v41(&v43, a3, a4);
  uint64_t v29 = (char)v43;
  char v30 = (_BYTE)v43 != 0;
  if ((void)v44) {
    char v30 = BYTE9(v44);
  }
  if (v30)
  {
    if ((void)v44)
    {
      double v31 = *(double *)&v45;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      double v31 = dbl_32E2A8[v29];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    double v31 = 0.0;
  }
  if (v28 != v31) {
    goto LABEL_53;
  }
  v42(&v48, ObjectType, a2);
  if (void)v49 && (BYTE9(v49))
  {
    double v32 = *(double *)&v51;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v32 = 0.0;
  }
  v41(&v43, a3, a4);
  if (void)v44 && (BYTE9(v44))
  {
    double v33 = *(double *)&v46;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v33 = 0.0;
  }
  if (v32 != v33) {
    goto LABEL_53;
  }
  v42(&v48, ObjectType, a2);
  if (void)v49 && (BYTE9(v49))
  {
    double v34 = *((double *)&v50 + 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v34 = 0.0;
  }
  v41(&v43, a3, a4);
  if (void)v44 && (BYTE9(v44))
  {
    double v35 = *((double *)&v45 + 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v35 = 0.0;
  }
  if (v34 != v35) {
    goto LABEL_53;
  }
  v42(&v48, ObjectType, a2);
  if (void)v49 && (BYTE9(v49))
  {
    double v36 = v52;
    swift_bridgeObjectRelease();
    double v37 = -0.1;
    if (v36 >= -0.1) {
      double v37 = fmin(v36, 0.1);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    double v37 = 0.0;
  }
  v41(&v43, a3, a4);
  swift_unknownObjectRelease();
  if (void)v44 && (BYTE9(v44))
  {
    double v39 = v47;
    swift_bridgeObjectRelease();
    double v40 = -0.1;
    if (v39 >= -0.1) {
      double v40 = fmin(v39, 0.1);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    double v40 = 0.0;
  }
  return v37 != v40;
}

uint64_t sub_94DB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *), uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v45 = a7;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  Swift::String v48 = a5;
  uint64_t v12 = sub_2FB570();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = (uint64_t)a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v19, (uint64_t)&v50, &qword_4009C0);
  uint64_t v49 = a6;
  if (v51)
  {
    uint64_t v44 = a8;
    sub_469A4(&v50, (uint64_t)v52);
    uint64_t v20 = v53;
    uint64_t v21 = v54;
    sub_4F798(v52, v53);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    char v22 = sub_2FB550();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    if (v22)
    {
      uint64_t v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, a2, v12);
      unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      unint64_t v25 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v26 = (v25 + 39) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v27 + v24, v18, v12);
      double v28 = (void *)(v27 + v25);
      uint64_t v30 = v46;
      uint64_t v29 = v47;
      *double v28 = v46;
      v28[1] = v29;
      uint64_t v31 = v49;
      void v28[2] = v48;
      uint64_t v28[3] = v31;
      double v32 = v45;
      *(void *)(v27 + v26) = v45;
      double v33 = *(void (**)(uint64_t, uint64_t, id, uint64_t, void (*)(unsigned __int8 *), uint64_t))&stru_478.sectname[swift_isaMask & *a1];
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      id v34 = v32;
      v33(v30, v29, v34, v44, sub_9C37C, v27);
      swift_release();
      swift_release();
      return sub_39FCC((uint64_t)v52);
    }
    sub_39FCC((uint64_t)v52);
  }
  else
  {
    sub_5BE90((uint64_t)&v50, &qword_4009C0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  double v36 = a1;
  double v37 = sub_2FB880();
  os_log_type_t v38 = sub_2FC7D0();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v52[0] = v47;
    *(_DWORD *)uint64_t v39 = 136446466;
    uint64_t v40 = ContentLoader.shortDescription.getter();
    *(void *)&long long v50 = sub_38EF0(v40, v41, v52);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v42 = sub_2FD1A0();
    *(void *)&long long v50 = sub_38EF0(v42, v43, v52);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl(&def_7BFC0, v37, v38, "Loader %{public}s ignoring configuration for stale contentViewHost: %s)", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  LOWORD(v52[0]) = 257;
  return v48(v52);
}

void sub_952F0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, void *a8)
{
  uint64_t v13 = sub_2FB570();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v49 - v18;
  LODWORD(v51) = *a1;
  LODWORD(v52) = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v21 = (char *)Strong;
  uint64_t v22 = Strong + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  sub_46A30(v22, (uint64_t)&v56, &qword_4009C0);
  uint64_t v53 = a7;
  if (!v57)
  {
    sub_5BE90((uint64_t)&v56, &qword_4009C0);
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
    double v28 = v21;
    uint64_t v29 = sub_2FB880();
    os_log_type_t v30 = sub_2FC7A0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      v58[0] = v51;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v52 = a6;
      uint64_t v32 = ContentLoader.shortDescription.getter();
      *(void *)&long long v56 = sub_38EF0(v32, v33, v58);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v34 = sub_2FD1A0();
      *(void *)&long long v56 = sub_38EF0(v34, v35, v58);
      a6 = v52;
      sub_2FCC70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      _os_log_impl(&def_7BFC0, v29, v30, "Loader %{public}s ignoring load results for stale contentViewHost: %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    LOWORD(v58[0]) = 257;
    a6(v58);

    return;
  }
  long long v50 = a8;
  uint64_t v23 = a6;
  sub_469A4(&v56, (uint64_t)v58);
  uint64_t v25 = v59;
  uint64_t v24 = v60;
  sub_4F798(v58, v59);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
  LOBYTE(v24) = sub_2FB550();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  if ((v24 & 1) == 0)
  {
    sub_39FCC((uint64_t)v58);
    a6 = v23;
    goto LABEL_8;
  }
  unint64_t v26 = v50;
  WKWebView.updateLineGuideEnabledState(on:)(v21[OBJC_IVAR____TtC8BookEPUB13ContentLoader_lineGuideEnabled]);
  uint64_t v27 = &v21[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
  swift_beginAccess();
  switch(*v27)
  {
    case 2:
      if (v52)
      {
        LOBYTE(v55) = v51;
        BYTE1(v55) = 1;
      }
      else
      {
        LOWORD(v55) = 0;
      }
      v23(&v55);
      LOBYTE(v55) = 3;
      sub_821EC((unsigned __int8 *)&v55);
      *uint64_t v27 = 3;
      sub_8E33C(1);

      break;
    case 3:
      double v36 = v21;
      id v37 = v26;
      os_log_type_t v38 = v36;
      id v39 = v37;
      uint64_t v40 = sub_2FB880();
      os_log_type_t v41 = sub_2FC7B0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        uint64_t v55 = v53;
        *(_DWORD *)uint64_t v42 = 136446466;
        uint64_t v43 = ContentLoader.shortDescription.getter();
        uint64_t v54 = sub_38EF0(v43, v44, &v55);
        sub_2FCC70();

        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2080;
        id v45 = [v39 be_identifier];
        uint64_t v46 = sub_2FC180();
        unint64_t v48 = v47;

        uint64_t v54 = sub_38EF0(v46, v48, &v55);
        sub_2FCC70();

        swift_bridgeObjectRelease();
        _os_log_impl(&def_7BFC0, v40, v41, "Loader %{public}s Invalid #loaderState transition for webView:%s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      break;
    default:

      break;
  }
  sub_39FCC((uint64_t)v58);
}

uint64_t sub_9599C()
{
  return sub_8296C();
}

uint64_t sub_959B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();

  return swift_release();
}

uint64_t sub_95A30()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

id sub_95AA4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (!v3) {
    return 0;
  }
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClass();
  if (!v0)
  {

    return 0;
  }
  id v1 = [v0 be_viewForFindUI];

  return v1;
}

uint64_t sub_95B64(uint64_t a1, uint64_t a2)
{
  return sub_95BC4(a1, a2, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoadedSubject, (uint64_t *)&unk_400A10, &qword_3FE9B0);
}

uint64_t sub_95B94(uint64_t a1, uint64_t a2)
{
  return sub_95BC4(a1, a2, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader_accessoryViewBoundsChangedSubject, (uint64_t *)&unk_400EC0, (unint64_t *)&qword_400A30);
}

uint64_t sub_95BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  return sub_2FBBD0();
}

uint64_t (*sub_95C3C())()
{
  return j_j__swift_endAccess;
}

uint64_t dispatch thunk of ContentLoader.__allocating_init(layoutProvider:contentMediator:paginatingService:stylesheetProvider:contentLoaderViewReusePool:)()
{
  return (*(uint64_t (**)(void))(v0 + 960))();
}

void ContentLoader.updateAccessibilityValue(for:)(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  os_log_type_t v4 = v28;
  if (v28)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      double v28 = v2;
      char v29 = v3;
      uint64_t v5 = sub_1F4520();
      uint64_t v7 = v6;
      uint64_t v8 = (NSObject **)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_axKeyUpdates);
      swift_beginAccess();
      uint64_t v9 = *v8;
      if ((*v8)[2].isa)
      {
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_42238(v5, v7);
        if (v11)
        {
          uint64_t v12 = (uint64_t)v9[7].isa + 16 * v10;
          uint64_t v13 = *(void *)v12;
          char v14 = *(unsigned char *)(v12 + 8);
          sub_469BC(*(void *)v12, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = v13;
          char v27 = v14;
          uint64_t v24 = v2;
          char v25 = v3;
          sub_469BC(v13, v14);
          char v15 = _s8BookEPUB31ContentLoadingAccessibilityKeysO2eeoiySbAC_ACtFZ_0((uint64_t)&v26, (uint64_t)&v24);
          sub_9893C(v26, v27);
          sub_9893C(v13, v14);
          if (v15) {
            goto LABEL_15;
          }
          goto LABEL_14;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_469BC((uint64_t)v2, v3);
      sub_98954(0, 255);
      sub_98954((uint64_t)v2, v3);
LABEL_14:
      uint64_t v26 = (uint64_t)v2;
      char v27 = v3;
      sub_18B1D8(&v26);
LABEL_15:
      uint64_t v26 = (uint64_t)v2;
      char v27 = v3;
      uint64_t v20 = sub_1F4520();
      uint64_t v22 = v21;
      swift_beginAccess();
      sub_469BC((uint64_t)v2, v3);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *v8;
      *uint64_t v8 = 0x8000000000000000;
      sub_1AF03C((uint64_t)v2, v3, v20, v22, isUniquelyReferenced_nonNull_native);
      *uint64_t v8 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_16;
    }
  }
  sub_469BC((uint64_t)v2, v3);
  sub_469BC((uint64_t)v2, v3);
  os_log_type_t v4 = sub_2FB880();
  os_log_type_t v16 = sub_2FC790();
  if (!os_log_type_enabled(v4, v16))
  {

    sub_9893C((uint64_t)v2, v3);
    sub_9893C((uint64_t)v2, v3);
    return;
  }
  uint64_t v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v26 = swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 136315138;
  double v28 = v2;
  char v29 = v3;
  uint64_t v18 = sub_1F4520();
  double v28 = sub_38EF0(v18, v19, &v26);
  sub_2FCC70();
  swift_bridgeObjectRelease();
  sub_9893C((uint64_t)v2, v3);
  sub_9893C((uint64_t)v2, v3);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_16:
}

Swift::Void __swiftcall ContentLoader.dismissInteractionMenus()()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v2)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(v3 + 304))(ObjectType);
  }
  [*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_editMenuInteraction) dismissMenu];
}

void sub_96198(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  if (a2)
  {
    _OWORD v9[4] = a2;
    void v9[5] = a3;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_5C418;
    void v9[3] = &unk_3C5D28;
    uint64_t v8 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  [a1 be_setContentOffset:1 bypassingJS:v8 completion:a4, a5];
  _Block_release(v8);
}

void _s8BookEPUB13ContentLoaderC020navigationHandlerWebC22ProcessFailedWithNoURLyySo9WKWebViewCF_0(void *a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v30[0]
    && (sub_39F90(0, (unint64_t *)&qword_400CD0),
        id v4 = a1,
        char v5 = sub_2FCA70(),
        v4,
        v4,
        v30[0],
        (v5 & 1) != 0))
  {
    uint64_t v6 = (uint64_t *)&v2[OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider];
    swift_beginAccess();
    uint64_t v7 = *v6;
    if (*v6)
    {
      uint64_t v8 = v6[1];
      swift_getKeyPath();
      swift_getKeyPath();
      swift_unknownObjectRetain();
      sub_2FBBA0();
      swift_release();
      swift_release();
      if (v29)
      {
        sub_469A4(&v28, (uint64_t)v30);
        uint64_t v9 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        sub_8B1C4(v7, v8, v4, v30, (uint64_t)sub_9C0A4, v9);
        swift_release();
        swift_unknownObjectRelease();
        sub_39FCC((uint64_t)v30);
        swift_release();
        return;
      }
      swift_unknownObjectRelease();
      sub_5BE90((uint64_t)&v28, &qword_4009B0);
    }
    char v15 = sub_2FB880();
    os_log_type_t v25 = sub_2FC7B0();
    if (os_log_type_enabled(v15, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&def_7BFC0, v15, v25, "Loader does not have a layout provider or document, unable to reload.", v26, 2u);
LABEL_15:
      swift_slowDealloc();
    }
  }
  else
  {
    unint64_t v10 = v2;
    id v11 = a1;
    uint64_t v12 = v10;
    id v13 = v11;
    char v14 = v12;
    char v15 = sub_2FB880();
    os_log_type_t v16 = sub_2FC7B0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      char v27 = (void *)swift_slowAlloc();
      *(void *)&long long v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446722;
      uint64_t v18 = ContentLoader.shortDescription.getter();
      v30[0] = (id)sub_38EF0(v18, v19, (uint64_t *)&v28);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      id v20 = [v13 be_identifier];
      uint64_t v21 = sub_2FC180();
      unint64_t v23 = v22;

      v30[0] = (id)sub_38EF0(v21, v23, (uint64_t *)&v28);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2112;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2FBBA0();
      swift_release();
      swift_release();
      id v24 = v30[0];
      if (!v30[0]) {
        v30[0] = 0;
      }
      sub_2FCC70();
      *char v27 = v24;

      _os_log_impl(&def_7BFC0, v15, v16, "Loader %{public}s request to apply current layout to:%s ≠ content view %@", (uint8_t *)v17, 0x20u);
      sub_371F4(&qword_400A90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_15;
    }
  }
}

void sub_96794(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 1);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    id v4 = sub_2FB880();
    if (v1)
    {
      os_log_type_t v5 = sub_2FC7B0();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136446210;
        uint64_t v7 = ContentLoader.shortDescription.getter();
        sub_38EF0(v7, v8, &v12);
        sub_2FCC70();

        swift_bridgeObjectRelease();
        uint64_t v9 = "Loader error #loadingStatus loading:%{public}s";
LABEL_7:
        _os_log_impl(&def_7BFC0, v4, v5, v9, v6, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_9:

        return;
      }
    }
    else
    {
      os_log_type_t v5 = sub_2FC7D0();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136446210;
        uint64_t v10 = ContentLoader.shortDescription.getter();
        sub_38EF0(v10, v11, &v12);
        sub_2FCC70();

        swift_bridgeObjectRelease();
        uint64_t v9 = "Loader successful #loadingStatus loading:%{public}s";
        goto LABEL_7;
      }
    }

    goto LABEL_9;
  }
}

uint64_t ContentLoader.navigationHandler(_:handleInternalLoadRequest:)(uint64_t a1, uint64_t a2)
{
  return sub_98968(a2);
}

void ContentLoader.navigationHandler(_:handleInternalLoadRequestForNewWindow:)(uint64_t a1, uint64_t a2)
{
}

void ContentLoader.navigationHandler(_:handleExternalLoadRequest:likelyUserInitiated:)(uint64_t a1, uint64_t a2, char a3)
{
}

void ContentLoader.navigationHandler(_:handleUserRequestForFrameToLoadExternalURL:completion:)(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (id)Strong;
    uint64_t v8 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v9 + 32))(a2, a3, a4, ObjectType, v9);

      swift_unknownObjectRelease();
    }
    else
    {
      a3();
    }
  }
}

void ContentLoader.navigationHandler(_:failedToLoad:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void ContentLoader.navigationHandlerWebContentLoadFailed(_:reason:)(uint64_t a1, uint64_t a2)
{
}

void sub_97014()
{
  uint64_t v0 = sub_2FB8A0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v5 = (void *)Strong;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v6 = v13;
    if (v13)
    {
      self;
      uint64_t v7 = (void *)swift_dynamicCastObjCClass();
      if (v7)
      {
        _s8BookEPUB13ContentLoaderC020navigationHandlerWebC22ProcessFailedWithNoURLyySo9WKWebViewCF_0(v7);

        return;
      }
    }
  }
  swift_beginAccess();
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_log, v0);

    uint64_t v10 = sub_2FB880();
    os_log_type_t v11 = sub_2FC7B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&def_7BFC0, v10, v11, "Unable to use contentView as WebView in load failed.", v12, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void ContentLoader.navigationHandler(_:didFinishLoadOf:)()
{
}

uint64_t sub_972DC(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8 = sub_2FB440();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2FB400();
  id v12 = a3;
  id v13 = a1;
  a5(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Void __swiftcall ContentLoader.navigationHandlerWebContentProcessAttemptingReload(_:)(BENavigationHandler *a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_attemptingReload) = 1;
}

uint64_t ContentLoader.description.getter()
{
  uint64_t v1 = v0;
  *(void *)&long long v21 = 0;
  *((void *)&v21 + 1) = 0xE000000000000000;
  sub_2FCDD0(79);
  long long v25 = v21;
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for ContentLoader(0);
  id v2 = [super description];
  uint64_t v3 = sub_2FC180();
  os_log_type_t v5 = v4;

  v26._uint64_t countAndFlagsBits = v3;
  v26._object = v5;
  sub_2FC260(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 0xD000000000000016;
  v27._object = (void *)0x800000000030E920;
  sub_2FC260(v27);
  uint64_t v6 = &v1[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded];
  swift_beginAccess();
  if (*v6) {
    v7._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v7._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (*v6) {
    uint64_t v8 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v8 = (void *)0xE500000000000000;
  }
  v7._object = v8;
  sub_2FC260(v7);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x617473202020200ALL;
  v28._object = (void *)0xEC000000203A6574;
  sub_2FC260(v28);
  uint64_t v9 = &v1[OBJC_IVAR____TtC8BookEPUB13ContentLoader_state];
  swift_beginAccess();
  LOBYTE(v21) = *v9;
  sub_2FCFA0();
  v29._uint64_t countAndFlagsBits = 0x636F64202020200ALL;
  v29._object = (void *)0xEF203A746E656D75;
  sub_2FC260(v29);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v10 = v22;
  if (v22)
  {
    uint64_t v11 = v23;
    id v12 = sub_4F798(&v21, v22);
    uint64_t v13 = *(void *)(v10 - 8);
    __n128 v14 = __chkstk_darwin(v12);
    os_log_type_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v13 + 16))(v16, v14);
    sub_5BE90((uint64_t)&v21, &qword_4009B0);
    unint64_t v17 = ContentLoadingDocument.shortDescription.getter(v10, v11);
    unint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v10);
  }
  else
  {
    sub_5BE90((uint64_t)&v21, &qword_4009B0);
    unint64_t v19 = (void *)0xE100000000000000;
    unint64_t v17 = 45;
  }
  v30._uint64_t countAndFlagsBits = v17;
  v30._object = v19;
  sub_2FC260(v30);
  swift_bridgeObjectRelease();
  v31._object = (void *)0x800000000030E940;
  v31._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_2FC260(v31);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  sub_371F4(&qword_400A50);
  v32._uint64_t countAndFlagsBits = sub_2FC1E0();
  sub_2FC260(v32);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 15882;
  v33._object = (void *)0xE200000000000000;
  sub_2FC260(v33);
  return v25;
}

uint64_t sub_9783C(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = sub_2FCE20();
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
        swift_retain();
      }
      uint64_t v12 = v8;
      char v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0) {
        break;
      }
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_2FD030();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v10 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_97968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4(&qword_4009C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_979D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_97A08()
{
  return sub_874E4();
}

const char *sub_97A10()
{
  return "bounds";
}

id sub_97A1C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 bounds];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_97A54(double *a1, id *a2)
{
  return [*a2 setBounds:*a1 a1[1], a1[2], a1[3]];
}

uint64_t sub_97A6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_97AA4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_97ADC()
{
  return sub_2FB300();
}

BOOL sub_97B00(void *a1)
{
  return sub_DA530(a1, *(void **)(v1 + 16));
}

uint64_t sub_97B20(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v4 = (uint64_t *)v2;
  unint64_t v7 = *v2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_9783C(a1, a2, v7);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_54;
    }
    if ((unint64_t)*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_2FD030();
      swift_bridgeObjectRelease();
      if (v11 != v26) {
        goto LABEL_6;
      }
    }
    else if (v11 != *(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_6:
      unint64_t v11 = v8 + 5;
      uint64_t v28 = a2;
      while (1)
      {
        unint64_t v12 = v11 - 4;
        uint64_t v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = sub_2FCE20();
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_45;
          }
          uint64_t v14 = *(void *)(v13 + 8 * v11);
          swift_retain();
        }
        uint64_t v29 = v14;
        char v15 = a1(&v29);
        swift_release();
        if ((v15 & 1) == 0) {
          break;
        }
LABEL_32:
        unint64_t v23 = v11 - 3;
        if (__OFADD__(v12, 1)) {
          goto LABEL_46;
        }
        if ((unint64_t)*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_2FD030();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v24 = *(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8));
        }
        ++v11;
        if (v23 == v24) {
          return v8;
        }
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      uint64_t v16 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = sub_2FCE20();
        uint64_t v16 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v12 >= *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_51;
          }
          uint64_t v18 = *(void *)(v16 + 8 * v11);
          swift_retain();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v8 >= *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_49;
        }
        uint64_t v17 = *(void *)(v16 + 8 * v8 + 32);
        swift_retain();
        if ((v16 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v18 = sub_2FCE20();
      uint64_t v16 = *v4;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v16;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v16 < 0 || (v16 & 0x4000000000000000) != 0)
      {
        uint64_t v16 = sub_104954(v16);
        *uint64_t v4 = v16;
      }
      *(void *)((char *)&stru_20.cmd + 8 * v8 + (v16 & 0xFFFFFFFFFFFFFF8)) = v18;
      swift_release();
      sub_2FC410();
      uint64_t v20 = *v4;
      int v21 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v20;
      if (!v21 || v20 < 0 || (v20 & 0x4000000000000000) != 0)
      {
        uint64_t v20 = sub_104954(v20);
        *uint64_t v4 = v20;
      }
      a2 = v28;
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v12 >= *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_53;
      }
      *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v11) = v17;
      swift_release();
      sub_2FC410();
      goto LABEL_31;
    }
    return v8;
  }
  if (!((unint64_t)*v4 >> 62)) {
    return *(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_2FD030();
  swift_bridgeObjectRelease();
  return v27;
}

char *sub_97E88(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_49E88(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  id result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    id result = (char *)(v16 + 2);
    int v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      id result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      void v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  id result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_9800C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_49E88(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      _OWORD v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

void *sub_98178(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = (_OWORD *)(swift_bridgeObjectRetain() + 56);
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v12 = *((void *)v2 - 3);
    long long v5 = *v2;
    long long v13 = *(v2 - 1);
    long long v14 = v5;
    swift_unknownObjectRetain();
    ContentLoader.convertToDocument(_:)((double *)&v12, (uint64_t)&v15);
    swift_unknownObjectRelease();
    if ((v18 & 1) == 0)
    {
      uint64_t v6 = v15;
      long long v10 = v17;
      long long v11 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_4A34C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_4A34C((void *)(v7 > 1), v8 + 1, 1, v3);
      }
      v3[2] = v8 + 1;
      uint64_t v4 = &v3[5 * v8];
      v4[4] = v6;
      *(_OWORD *)(v4 + 5) = v11;
      *(_OWORD *)(v4 + 7) = v10;
    }
    uint64_t v2 = (_OWORD *)((char *)v2 + 40);
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

char *sub_982D0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_4A34C(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[40 * a1 + 32];
    uint64_t v15 = &v4[40 * a2 + 32];
    if (a1 != a2 || result >= &v15[40 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 40 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_98434(uint64_t a1, uint64_t a2)
{
  return sub_9B06C(a1, a2, (void (*)(void))type metadata accessor for ContentViewHost);
}

uint64_t sub_9844C(void *a1)
{
  sub_86E78();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = a1;
  uint64_t v4 = v1;
  sub_2FBBB0();
  sub_87094();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  int64_t v5 = a1;
  if (a1)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      id v7 = [v6 be_viewForFindUI];

      if (v7)
      {
        uint64_t v8 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_getKeyPath();
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = sub_97A08;
        *(void *)(v9 + 24) = v8;
        swift_retain_n();
        uint64_t v10 = sub_2FB360();
        swift_release();
        swift_release();
        *(void *)(swift_allocObject() + 16) = v10;
        sub_2FBA80();
        swift_allocObject();
        int64_t v5 = (void *)sub_2FBA90();
        swift_release_n();

        goto LABEL_7;
      }
    }
    else
    {
    }
    int64_t v5 = 0;
  }
LABEL_7:
  *(void *)&v4[OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentAccessoryBoundsObservation] = v5;
  return swift_release();
}

uint64_t sub_986A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for SnapshotContentLoader(uint64_t a1)
{
  return sub_45A54(a1, (uint64_t *)&unk_400B80);
}

uint64_t sub_98704()
{
  return sub_98748((void (*)(void))&_swift_unknownObjectRelease, 40);
}

void sub_98720(uint64_t a1)
{
  sub_8FC44(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_9872C()
{
  return sub_98748((void (*)(void))&_swift_release, 32);
}

uint64_t sub_98748(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 24));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_987A4(uint64_t a1)
{
  return sub_902EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_987AC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

unint64_t sub_987D8()
{
  unint64_t result = qword_400AA0;
  if (!qword_400AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400AA0);
  }
  return result;
}

uint64_t sub_9882C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_9886C(void *a1, uint64_t a2)
{
  sub_92AB0(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_98878(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_98888()
{
  return swift_release();
}

unint64_t sub_98890()
{
  unint64_t result = qword_400AA8;
  if (!qword_400AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400AA8);
  }
  return result;
}

uint64_t sub_988E4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_9892C(char a1)
{
  return sub_92E38(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(void *))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_9893C(uint64_t a1, char a2)
{
  if (a2 == 4 || a2 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_98954(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_9893C(a1, a2);
  }
  return a1;
}

uint64_t sub_98968(uint64_t a1)
{
  uint64_t v2 = sub_371F4((uint64_t *)&unk_400C70);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2FB440();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  uint64_t v9 = v26;
  if (v26)
  {
    uint64_t v24 = a1;
    uint64_t v10 = v27;
    int64_t v11 = sub_4F798(v25, v26);
    uint64_t v12 = *(void *)(v9 - 8);
    __n128 v13 = __chkstk_darwin(v11);
    uint64_t v15 = (char *)&v25[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v12 + 16))(v15, v13);
    sub_5BE90((uint64_t)v25, &qword_4009B0);
    (*(void (**)(uint64_t, uint64_t))(v10 + 72))(v9, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v16 = v24;
      if (sub_2FB380())
      {
        char v17 = 1;
LABEL_12:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return v17 & 1;
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        BOOL v19 = (void *)Strong;
        uint64_t v20 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v21 = *(void *)(v20 + 8);
          uint64_t ObjectType = swift_getObjectType();
          char v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(v16, ObjectType, v21);

          swift_unknownObjectRelease();
          goto LABEL_12;
        }
      }
      char v17 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    sub_5BE90((uint64_t)v25, &qword_4009B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_5BE90((uint64_t)v4, (uint64_t *)&unk_400C70);
  char v17 = 0;
  return v17 & 1;
}

void sub_98D14(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (id)Strong;
    uint64_t v3 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = *(void *)(v3 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_98DF8(uint64_t a1, char a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (id)Strong;
    uint64_t v5 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 24))(a1, a2 & 1, ObjectType, v6);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_98EF8(uint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (id)Strong;
    uint64_t v7 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v8 + 32);
      _Block_copy(a3);
      v10(a1, sub_81AD0, v5, ObjectType, v8);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      _Block_copy(a3);
      a3[2](a3, 0);
      swift_release();
    }
  }
  else
  {
    _Block_copy(a3);
    swift_release();
  }
}

void sub_99090(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_371F4((uint64_t *)&unk_400C70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  sub_46A30(a1, (uint64_t)&v27 - v9, (uint64_t *)&unk_400C70);
  id v11 = v2;
  swift_errorRetain();
  id v12 = v11;
  swift_errorRetain();
  __n128 v13 = sub_2FB880();
  os_log_type_t v14 = sub_2FC7B0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v30 = v27;
    *(_DWORD *)uint64_t v15 = 136446722;
    sub_2FB570();
    sub_9C5AC((unint64_t *)&qword_3FE890, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = sub_2FD1A0();
    uint64_t v28 = sub_38EF0(v16, v17, &v30);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    sub_46A30((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_400C70);
    uint64_t v18 = sub_2FB440();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18) == 1)
    {
      sub_5BE90((uint64_t)v7, (uint64_t *)&unk_400C70);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v20 = sub_2FB3E0();
      uint64_t v21 = v22;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    uint64_t v28 = v20;
    uint64_t v29 = v21;
    sub_371F4((uint64_t *)&unk_403B40);
    uint64_t v23 = sub_2FC1E0();
    uint64_t v28 = sub_38EF0(v23, v24, &v30);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    sub_5BE90((uint64_t)v10, (uint64_t *)&unk_400C70);
    *(_WORD *)(v15 + 22) = 2082;
    uint64_t v28 = a2;
    swift_errorRetain();
    sub_371F4(&qword_406370);
    uint64_t v25 = sub_2FC1E0();
    uint64_t v28 = sub_38EF0(v25, v26, &v30);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_7BFC0, v13, v14, "Loader: %{public}s failedToLoad:%{public}s error:%{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_5BE90((uint64_t)v10, (uint64_t *)&unk_400C70);
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_99490(uint64_t a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_attemptingReload) = 0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (char *)Strong;
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = &v9[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *((void *)v5 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(void (**)(char *, uint64_t, void (*)(), uint64_t, uint64_t, uint64_t))(v6 + 56);
      swift_retain();
      v8(v9, a1, sub_9C09C, v4, ObjectType, v6);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
}

void sub_995D8()
{
  uint64_t v3 = 1;
  char v4 = 14;
  ContentLoader.updateAccessibilityValue(for:)((uint64_t)&v3);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_attemptingReload) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_attemptingReload) = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    uint64_t v1 = (void *)v3;
    if (v3)
    {
      self;
      uint64_t v2 = (void *)swift_dynamicCastObjCClass();
      if (v2) {
        _s8BookEPUB13ContentLoaderC020navigationHandlerWebC22ProcessFailedWithNoURLyySo9WKWebViewCF_0(v2);
      }
    }
  }
}

unint64_t sub_996A8()
{
  unint64_t result = qword_400AB0;
  if (!qword_400AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400AB0);
  }
  return result;
}

unint64_t sub_99700()
{
  unint64_t result = qword_400AB8;
  if (!qword_400AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400AB8);
  }
  return result;
}

uint64_t sub_99754@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_state);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_997AC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (_OWORD *)(*a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_9980C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__document, &qword_4009E8);
}

uint64_t sub_99834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_8436C(a1, a2, a3, a4, &qword_4009F0, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__document, &qword_4009E8);
}

uint64_t sub_99864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4090C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__contentView, &qword_4009F8);
}

uint64_t sub_9988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_8436C(a1, a2, a3, a4, &qword_400A00, (uint64_t)&OBJC_IVAR____TtC8BookEPUB13ContentLoader__contentView, &qword_4009F8);
}

uint64_t sub_998BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess();
  return sub_46A30(v3, a2, &qword_4009C0);
}

uint64_t sub_99920@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_99974(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentLoaded);
  swift_beginAccess();
  unsigned char *v3 = v2;
  return sub_84C68();
}

uint64_t sub_999D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_cancellables);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_99A2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_99A88(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_paginatingService;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_99AEC@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_99B44()
{
  return swift_weakAssign();
}

unsigned char *storeEnumTagSinglePayload for ContentLoaderState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x99C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentLoaderState()
{
  return &type metadata for ContentLoaderState;
}

uint64_t destroy for StyleUpdate(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StyleUpdate(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = (_OWORD *)(a1 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  id v7 = v4;
  if (v6 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *uint64_t v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v8;
    long long v9 = *(_OWORD *)(a2 + 56);
    long long v5[2] = *(_OWORD *)(a2 + 40);
    void v5[3] = v9;
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
    *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
    *(void *)(a1 + 16) = v6;
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for StyleUpdate(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = (_OWORD *)(a1 + 8);
  long long v8 = (long long *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) == 1)
  {
    if (v9 == 1)
    {
      long long v10 = *v8;
      long long v11 = *(_OWORD *)(a2 + 24);
      long long v12 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v12;
      _OWORD *v7 = v10;
      *(_OWORD *)(a1 + 24) = v11;
    }
    else
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
      *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
    }
  }
  else if (v9 == 1)
  {
    sub_99F18(a1 + 8);
    long long v13 = *(_OWORD *)(a2 + 56);
    long long v15 = *v8;
    long long v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v13;
    _OWORD *v7 = v15;
    *(_OWORD *)(a1 + 24) = v14;
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
    *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  return a1;
}

uint64_t sub_99F18(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for StyleUpdate(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  if (*(void *)(a1 + 16) != 1)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5 != 1)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
      *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
      *(void *)(a1 + 16) = v5;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      return a1;
    }
    sub_99F18(a1 + 8);
  }
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v6;
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for StyleUpdate(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StyleUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StyleUpdate()
{
  return &type metadata for StyleUpdate;
}

uint64_t destroy for LayoutUpdate()
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LayoutUpdate(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LayoutUpdate(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LayoutUpdate(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UberScrollContainerView.DocumentDataState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UberScrollContainerView.DocumentDataState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutUpdate()
{
  return &type metadata for LayoutUpdate;
}

uint64_t sub_9A2CC()
{
  return type metadata accessor for ContentLoader(0);
}

void sub_9A2D4()
{
  sub_2FB570();
  if (v0 <= 0x3F)
  {
    sub_2FB800();
    if (v1 <= 0x3F)
    {
      sub_2FB7D0();
      if (v2 <= 0x3F)
      {
        sub_45D14(319, &qword_400AF8, &qword_4009B0);
        if (v3 <= 0x3F)
        {
          sub_45D14(319, &qword_400B00, &qword_400A50);
          if (v4 <= 0x3F)
          {
            sub_2FB8A0();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for ContentLoader(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ContentLoader);
}

uint64_t dispatch thunk of ContentLoader.state.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_158.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.ordinal.getter()
{
  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of ContentLoader.currentLayoutProvider.getter()
{
  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of ContentLoader.document.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_1A8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.document.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_1A8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.document.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_1A8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.$document.getter()
{
  return (*(uint64_t (**)(void))&stru_1F8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoader.$document.setter()
{
  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of ContentLoader.$document.modify()
{
  return (*(uint64_t (**)(void))&stru_1F8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoader.contentView.getter()
{
  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of ContentLoader.contentView.setter()
{
  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of ContentLoader.contentView.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_1F8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.$contentView.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_1F8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.$contentView.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_1F8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.$contentView.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_1F8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.contentViewHost.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.contentAccessoryView.getter()
{
  return (*(uint64_t (**)(void))&stru_298.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of ContentLoader.contentLoaded.getter()
{
  return (*(uint64_t (**)(void))&stru_2E8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of ContentLoader.contentLoaded.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_2E8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.contentLoaded.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_2E8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.contentLoadedPublisher.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_2E8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.accessoryViewBoundsChangedPublisher.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_2E8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.cancellables.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_2E8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.cancellables.setter()
{
  return (*(uint64_t (**)(void))&stru_338.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoader.cancellables.modify()
{
  return (*(uint64_t (**)(void))&stru_338.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of ContentLoader.paginatingService.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_338.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.paginatingService.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_338.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.paginatingService.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_338.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.stylesheetProvider.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_338.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.stylesheetProvider.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_338.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.stylesheetProvider.modify()
{
  return (*(uint64_t (**)(void))&stru_388.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ContentLoader.selection.getter()
{
  return (*(uint64_t (**)(void))&stru_428.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of ContentLoader.updateImageFiltering(theme:filterMode:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_428.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.updateLineGuideEnabledState(on:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_428.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ContentLoader.presentEditMenu(from:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_428.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t type metadata accessor for ContentLoader.AccessoryPageView()
{
  return self;
}

uint64_t type metadata accessor for ContentLoader.AccessoryScrollView()
{
  return self;
}

uint64_t sub_9AE20()
{
  return type metadata accessor for SnapshotContentLoader(0);
}

uint64_t sub_9AE28()
{
  return swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for ContentLoader.SelectionError()
{
  return &type metadata for ContentLoader.SelectionError;
}

ValueMetadata *type metadata accessor for ContentLoader.StylusState()
{
  return &type metadata for ContentLoader.StylusState;
}

unsigned char *_s8BookEPUB13ContentLoaderC17MediaContentStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9AF54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentLoader.MediaContentState()
{
  return &type metadata for ContentLoader.MediaContentState;
}

unint64_t sub_9AF90()
{
  unint64_t result = qword_400C50;
  if (!qword_400C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400C50);
  }
  return result;
}

unint64_t sub_9AFE8()
{
  unint64_t result = qword_400C58;
  if (!qword_400C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400C58);
  }
  return result;
}

uint64_t sub_9B03C(uint64_t a1, uint64_t a2)
{
  return sub_9B06C(a1, a2, (void (*)(void))type metadata accessor for BookmarkPaginationEntity);
}

uint64_t sub_9B054(uint64_t a1, uint64_t a2)
{
  return sub_9B06C(a1, a2, (void (*)(void))type metadata accessor for HighlightPaginationEntity);
}

uint64_t sub_9B06C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unsigned int v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8)) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_2FD030();
  swift_bridgeObjectRelease();
  if (v20 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_2FD030();
    swift_bridgeObjectRelease();
    uint64_t v10 = v21 + v7;
    if (!__OFADD__(v21, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8));
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unsigned int v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((char *)&dword_18 + (v11 & 0xFFFFFFFFFFFFFF8)) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_2FCE30();
      swift_bridgeObjectRelease();
      *unsigned int v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_2FD030();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_2FD030();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = sub_2FD080();
          __break(1u);
          return result;
        }
        uint64_t v16 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v16 + 8 * v15) {
          memmove((void *)(v13 + 32 + 8 * v5), v16, 8 * v15);
        }
        if (!(v11 >> 62))
        {
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v18 = v17 + v7;
          if (!__OFADD__(v17, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_2FD030();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v7;
        if (!__OFADD__(v23, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = v14 - v3;
      if (!__OFSUB__(v14, v3)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return sub_2FC410();
}

char *sub_9B354(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  unsigned int v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_4AA1C(result, v11, 1, v4);
    unsigned int v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[72 * a1 + 32];
    uint64_t v15 = &v4[72 * a2 + 32];
    if (a1 != a2 || result >= &v15[72 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 72 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *unint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_9B4B8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_9B4F0()
{
  uint64_t v1 = sub_2FB570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_2FB440();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = v10;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v13);
}

uint64_t sub_9B68C(uint64_t a1, void (*a2)(__n128), int a3)
{
  uint64_t v7 = *(void *)(sub_2FB570() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_2FB440() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_8B8E4(a1, a2, a3, *(void **)(v3 + 16), v3 + v8, *(uint64_t (**)(uint64_t *))(v3 + v9), *(void *)(v3 + v9 + 8), v3 + v11, *(id *)(v3 + v12), *(void *)(v3 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_9B7D0()
{
  uint64_t v1 = sub_2FB570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_2FB440();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v12 = v9 + *(void *)(v7 + 64);
  uint64_t v10 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v12, v10);
}

uint64_t sub_9B95C()
{
  uint64_t v1 = *(void *)(sub_2FB570() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_2FB440() - 8);
  uint64_t v6 = *(void **)(v0 + 16);
  uint64_t v7 = *(void **)(v0 + v3);
  uint64_t v8 = *(void *)(v0 + v3 + 8);
  uint64_t v9 = *(void **)(v0 + v4);
  uint64_t v10 = v0 + ((v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_8D648(v6, v0 + v2, v7, v8, v9, v10);
}

uint64_t sub_9BA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4((uint64_t *)&unk_400C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_9BAB4()
{
  uint64_t v1 = sub_2FB570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_9BB88()
{
  uint64_t v1 = *(void *)(sub_2FB570() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = (void (*)(__int16 *))v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_8C1B0(v2, v3, v4, v5);
}

double sub_9BBF0(double a1)
{
  return a1 + 3.0;
}

uint64_t sub_9BC0C()
{
  uint64_t v1 = sub_2FB570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 120) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_39FCC(v0 + 48);

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_39FCC(v0 + v6);
  swift_release();

  return _swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_9BD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2FB570();
  uint64_t v19 = v10[2];
  uint64_t v18 = v10[3];
  uint64_t v17 = v10[4];
  uint64_t v16 = v10[5];
  uint64_t v12 = v10[11];
  uint64_t v13 = v10[12];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v11 + 16) = v14;
  void *v14 = v11;
  v14[1] = sub_4679C;
  return sub_89728(a1, v19, v18, v17, v16, (uint64_t)(v10 + 6), v12, v13, a9, a10);
}

uint64_t sub_9BEB4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_4B358(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for HistoryEntity() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

void sub_9C09C()
{
}

void sub_9C0A4(uint64_t a1)
{
}

uint64_t sub_9C0AC()
{
  uint64_t v1 = sub_2FB570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_release();

  sub_39FCC(v0 + v7);

  return _swift_deallocObject(v0, v7 + 40, v5);
}

uint64_t sub_9C1C8()
{
  uint64_t v1 = *(void *)(sub_2FB570() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void **)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t *))(v0 + v3 + 16);
  uint64_t v9 = *(void *)(v0 + v3 + 24);
  uint64_t v10 = *(void **)(v0 + v4);

  return sub_94DB4(v5, v0 + v2, v6, v7, v8, v9, v10, v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_9C278()
{
  uint64_t v1 = sub_2FB570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_9C37C(unsigned __int8 *a1)
{
  uint64_t v3 = *(void *)(sub_2FB570() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = *(void (**)(void))(v1 + v5 + 16);
  uint64_t v10 = *(void *)(v1 + v5 + 24);
  int64_t v11 = *(void **)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8));

  sub_952F0(a1, v6, v1 + v4, v7, v8, v9, v10, v11);
}

uint64_t sub_9C430()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9C470(uint64_t a1, char a2)
{
  return sub_18C458(a1, a2 & 1, *(void (**)(long long *))(v2 + 16));
}

uint64_t sub_9C47C()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_9C4C4()
{
  sub_96198(*(void **)(v0 + 16), *(void *)(v0 + 40), *(void *)(v0 + 48), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_9C4D4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_9C4E4()
{
  swift_release();
  swift_release();
  sub_9C530(*(id *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 49, 7);
}

void sub_9C530(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
}
  }

void sub_9C53C()
{
  sub_90600(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

id sub_9C54C(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return result;
  }
  return result;
}

unint64_t sub_9C558()
{
  unint64_t result = qword_400CD8;
  if (!qword_400CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400CD8);
  }
  return result;
}

uint64_t sub_9C5AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_9C5F4()
{
  return swift_release();
}

id RelativeValue<>.converted(to:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v5 = *(void **)v2;
  double v6 = *(double *)(v2 + 8);
  double v7 = *(double *)(v2 + 16);
  double v8 = *(double *)(v2 + 24);
  double v9 = *(double *)(v2 + 32);
  swift_unknownObjectRetain();
  id result = [v5 convertRect:a1 toCoordinateSpace:v6, v7, v8, v9];
  *a2 = a1;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v14;
  return result;
}

{
  uint64_t v2;
  void *v5;
  double v6;
  double v7;
  id result;
  uint64_t v9;
  uint64_t v10;

  unint64_t v5 = *(void **)v2;
  double v6 = *(double *)(v2 + 8);
  double v7 = *(double *)(v2 + 16);
  swift_unknownObjectRetain();
  id result = [v5 convertPoint:a1 toCoordinateSpace:v6, v7];
  *a2 = a1;
  a2[1] = v9;
  a2[2] = v10;
  return result;
}

BOOL UICoordinateSpace.contains(_:)(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  double v3 = *(double *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  swift_unknownObjectRetain();
  [v2 convertPoint:v1 toCoordinateSpace:v3, v4];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  [v1 bounds];
  v11.CGFloat x = v6;
  v11.CGFloat y = v8;
  BOOL v9 = CGRectContainsPoint(v12, v11);
  swift_unknownObjectRelease();
  return v9;
}

{
  void *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  BOOL v15;
  CGRect v17;
  CGRect v18;

  uint64_t v2 = *(void **)a1;
  double v3 = *(double *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  double v5 = *(double *)(a1 + 24);
  CGFloat v6 = *(double *)(a1 + 32);
  swift_unknownObjectRetain();
  [v2 convertRect:v1 toCoordinateSpace:v3];
  CGFloat v8 = v7;
  uint64_t v10 = v9;
  CGRect v12 = v11;
  uint64_t v14 = v13;
  [v1 bounds];
  v18.origin.CGFloat x = v8;
  v18.origin.CGFloat y = v10;
  v18.size.CGFloat width = v12;
  v18.size.CGFloat height = v14;
  uint64_t v15 = CGRectContainsRect(v17, v18);
  swift_unknownObjectRelease();
  return v15;
}

id static RelativeValue<>.bounds(of:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = [(id)swift_unknownObjectRetain() bounds];
  *a2 = a1;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  return result;
}

BOOL RelativeValue<>.contains(_:)(uint64_t a1)
{
  CGFloat v2 = v1[1];
  CGFloat v3 = v1[2];
  CGFloat v4 = v1[3];
  CGFloat v5 = v1[4];
  [*(id *)a1 convertPoint:*(void *)v1 toCoordinateSpace:*(double *)(a1 + 8), *(double *)(a1 + 16)];
  v9.CGFloat x = v6;
  v9.CGFloat y = v7;
  v10.origin.CGFloat x = v2;
  v10.origin.CGFloat y = v3;
  v10.size.CGFloat width = v4;
  v10.size.CGFloat height = v5;
  return CGRectContainsPoint(v10, v9);
}

{
  uint64_t v1;

  return *(void *)v1 == *(void *)a1 && CGRectContainsPoint(*(CGRect *)(v1 + 8), *(CGPoint *)(a1 + 8));
}

void RelativeValue<>.union(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  CGFloat v4 = *(void **)a1;
  double v5 = *(double *)(a1 + 8);
  double v6 = *(double *)(a1 + 16);
  double v7 = *(double *)(a1 + 24);
  double v8 = *(double *)(a1 + 32);
  double v9 = *v2;
  CGFloat v10 = v2[1];
  CGFloat v11 = v2[2];
  CGFloat v12 = v2[3];
  CGFloat v13 = v2[4];
  swift_unknownObjectRetain();
  [v4 convertRect:v9 toCoordinateSpace:v5, v6, v7, v8];
  v20.origin.CGFloat x = v14;
  v20.origin.CGFloat y = v15;
  v20.size.CGFloat width = v16;
  v20.size.CGFloat height = v17;
  v18.origin.CGFloat x = v10;
  v18.origin.CGFloat y = v11;
  v18.size.CGFloat width = v12;
  v18.size.CGFloat height = v13;
  CGRect v19 = CGRectUnion(v18, v20);
  *(double *)a2 = v9;
  *(CGRect *)(a2 + 8) = v19;
}

uint64_t RelativeValue<>.intersected(with:)@<X0>(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  double v4 = *v2;
  CGFloat v5 = v2[1];
  CGFloat v6 = v2[2];
  CGFloat v7 = v2[3];
  CGFloat v8 = v2[4];
  [*(id *)a1 convertRect:*(void *)v2 toCoordinateSpace:*(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)(a1 + 32)];
  v20.origin.CGFloat x = v9;
  v20.origin.CGFloat y = v10;
  v20.size.CGFloat width = v11;
  v20.size.CGFloat height = v12;
  v18.origin.CGFloat x = v5;
  v18.origin.CGFloat y = v6;
  v18.size.CGFloat width = v7;
  v18.size.CGFloat height = v8;
  CGRect v19 = CGRectIntersection(v18, v20);
  CGFloat x = v19.origin.x;
  CGFloat y = v19.origin.y;
  CGFloat width = v19.size.width;
  CGFloat height = v19.size.height;
  uint64_t result = CGRectIsNull(v19);
  if (result)
  {
    double v4 = 0.0;
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    CGFloat width = 0.0;
    CGFloat height = 0.0;
  }
  else
  {
    uint64_t result = swift_unknownObjectRetain();
  }
  *a2 = v4;
  a2[1] = x;
  a2[2] = y;
  a2[3] = width;
  a2[4] = height;
  return result;
}

uint64_t static RelativeValue<>.union<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  CGFloat v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v9 = __chkstk_darwin(AssociatedTypeWitness);
  CGFloat v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a1, a2, v9);
  sub_2FC700();
  sub_2FC6E0();
  v13[0] = v15;
  void v13[2] = v15;
  v13[3] = v16;
  uint64_t v14 = v17;
  sub_371F4((uint64_t *)&unk_400D50);
  swift_getAssociatedConformanceWitness();
  sub_2FC360();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  _OWORD v13[3];
  uint64_t v14;
  char v15;
  long long v16;
  long long v17;
  uint64_t v18;
  char v19;

  uint64_t v4 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  CGFloat v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v9 = __chkstk_darwin(AssociatedTypeWitness);
  CGFloat v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a1, a2, v9);
  sub_2FC700();
  sub_2FC6E0();
  v13[1] = v16;
  void v13[2] = v17;
  uint64_t v14 = v18;
  long long v15 = v19;
  sub_371F4(&qword_401D50);
  swift_getAssociatedConformanceWitness();
  sub_2FC360();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
}

void sub_9CCF8(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v4 = *a1;
  if (*(void *)a1)
  {
    double v6 = *(double *)(a2 + 24);
    double v5 = *(double *)(a2 + 32);
    double v8 = *(double *)(a2 + 8);
    double v7 = *(double *)(a2 + 16);
    CGFloat v9 = a1[1];
    CGFloat v10 = a1[2];
    CGFloat v11 = *(void **)a2;
    CGFloat v12 = a1[3];
    CGFloat v13 = a1[4];
    swift_unknownObjectRetain();
    [v11 convertRect:*&v4 toCoordinateSpace:v8, v7, v6, v5];
    v20.origin.CGFloat x = v14;
    v20.origin.CGFloat y = v15;
    v20.size.CGFloat width = v16;
    v20.size.CGFloat height = v17;
    v18.origin.CGFloat x = v9;
    v18.origin.CGFloat y = v10;
    v18.size.CGFloat width = v12;
    v18.size.CGFloat height = v13;
    CGRect v19 = CGRectUnion(v18, v20);
  }
  else
  {
    CGRect v19 = *(CGRect *)(a1 + 1);
  }
  *(double *)a3 = v4;
  *(CGRect *)(a3 + 8) = v19;
}

uint64_t RelativeValue<>.baseView.getter()
{
  self;
  uint64_t v0 = swift_dynamicCastObjCClassUnconditional();
  swift_unknownObjectRetain();
  return v0;
}

uint64_t sub_9CE3C()
{
  int v1 = *v0;
  if (v1 == 1)
  {
    id v2 = [self tertiaryLabelColor];
    uint64_t v23 = sub_61EFC;
    uint64_t v24 = 0;
    CGRect v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_61F0C;
    BOOL v22 = &unk_3C5E90;
    CGFloat v3 = _Block_copy(&v19);
    id v4 = [self traitCollectionWithTraits:v3];
    _Block_release(v3);
    swift_release();
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0)
    {
      id v6 = [v2 resolvedColorWithTraitCollection:v4];

      sub_2FBF80();
LABEL_6:
      sub_2FC180();
      id v15 = objc_allocWithZone((Class)CAFilter);
      NSString v16 = sub_2FC140();
      swift_bridgeObjectRelease();
      [v15 initWithType:v16];

      return 2;
    }
    __break(1u);
  }
  else
  {
    unsigned __int8 v7 = v0[2];
    uint64_t v9 = *((void *)v0 + 1);
    double v8 = (uint64_t (*)(uint64_t, uint64_t))*((void *)v0 + 2);
    CGFloat v11 = (void *)*((void *)v0 + 3);
    CGFloat v10 = (id (*)(void *))*((void *)v0 + 4);
    uint64_t v13 = *((void *)v0 + 5);
    uint64_t v12 = *((void *)v0 + 6);
    uint64_t v14 = *((void *)v0 + 7);
    if (v0[1])
    {
      LOBYTE(v19) = *v0;
      BYTE1(v19) = 1;
      BYTE2(v19) = v7;
      uint64_t v20 = v9;
      uint64_t v21 = v8;
      BOOL v22 = v11;
      uint64_t v23 = v10;
      uint64_t v24 = v13;
      uint64_t v25 = v12;
      uint64_t v26 = v14;
      swift_bridgeObjectRetain();
      BookThemeEntity.secondaryLabelColor.getter();
      sub_2FBF80();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    LOWORD(v19) = v1;
    BYTE2(v19) = v7;
    uint64_t v21 = v8;
    BOOL v22 = v11;
    uint64_t v23 = v10;
    uint64_t v24 = v13;
    uint64_t v25 = v12;
    uint64_t v26 = v14;
    swift_bridgeObjectRetain();
    BookThemeEntity.secondaryLabelColor.getter();
    sub_2FBF80();
    swift_bridgeObjectRelease();
    sub_2FC180();
    id v17 = objc_allocWithZone((Class)CAFilter);
    NSString v18 = sub_2FC140();
    swift_bridgeObjectRelease();
    [v17 initWithType:v18, v19, v9, v21, v22, v23, v24, v25, v26];

    return 1;
  }
  return result;
}

uint64_t sub_9D100(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_9D110()
{
  return swift_release();
}

uint64_t sub_9D118(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2FCD50();
    sub_2FBA80();
    sub_A7448((unint64_t *)&unk_400F20, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = sub_2FC620();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_9C5F4();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_9C5F4();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_9C5F4();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_9C5F4();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_9C5F4();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_9C5F4();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_9C5F4();
    }
    while (1)
    {
      sub_2FBA70();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_2FCD60())
      {
        sub_2FBA80();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_9C5F4();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_9D3D4()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_4170B8);
  sub_60044(v0, (uint64_t)qword_4170B8);
  sub_39F90(0, (unint64_t *)&qword_4000C0);
  sub_2FCBE0();
  return sub_2FB8B0();
}

BOOL static LocationMovement.Direction.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LocationMovement.Direction.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int ContentScrollSupportScrollOrientation.hashValue.getter(char a1)
{
  return sub_2FD370();
}

BOOL static ContentLoadingResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContentScrollSupportScrollOrientation.debugDescription.getter(char a1)
{
  if (a1) {
    return 0x746E6F7A69726F68;
  }
  else {
    return 0x6C61636974726576;
  }
}

unint64_t sub_9D550()
{
  unint64_t result = qword_400D60;
  if (!qword_400D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_400D60);
  }
  return result;
}

uint64_t sub_9D5A4()
{
  if (*v0) {
    return 0x746E6F7A69726F68;
  }
  else {
    return 0x6C61636974726576;
  }
}

uint64_t getEnumTagSinglePayload for BookThemeVariant(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentScrollSupportScrollOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9D740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_9D768(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ContentScrollSupportScrollOrientation()
{
  return &type metadata for ContentScrollSupportScrollOrientation;
}

uint64_t dispatch thunk of ContentScrollSupport.isTrackingOrAnimatingScroll.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContentScrollSupport.orientation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

uint64_t dispatch thunk of ContentScrollSupport.setContentOffset(_:animated:userInitiated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ContentScrollSupport.location(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ContentScrollSupport.offset(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_9D828()
{
  unint64_t v0 = sub_443FC((uint64_t)_swiftEmptyArrayStorage);
  sub_43F40((uint64_t)_swiftEmptyArrayStorage);
  uint64_t result = sub_A7330(v0);
  qword_4170D0 = result;
  *(void *)algn_4170D8 = v2;
  qword_4170E0 = v3;
  unk_4170E8 = v4;
  return result;
}

unint64_t sub_9D87C(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    float64x2_t v17 = *(float64x2_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t result = sub_42168(*(void *)(*(void *)(v3 + 48) + 8 * v11));
    if (v15)
    {
      int32x2_t v16 = vmovn_s64(vceqq_f64(*(float64x2_t *)(*(void *)(a2 + 56) + 16 * result), v17));
      if (v16.i32[0] & v16.i32[1]) {
        continue;
      }
    }
    return 0;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_9DA00(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v32 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
LABEL_8:
      uint64_t v11 = *(void *)(*(void *)(v3 + 48) + 8 * v10);
      sub_66A08(*(void *)(v3 + 56) + (v10 << 6), (uint64_t)&v38 + 8);
      *(void *)&long long v38 = v11;
      goto LABEL_27;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v12 < v32)
    {
      unint64_t v13 = *(void *)(v5 + 8 * v12);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v4 + 2;
      ++v4;
      if (v12 + 1 < v32)
      {
        unint64_t v13 = *(void *)(v5 + 8 * v14);
        if (v13) {
          goto LABEL_15;
        }
        int64_t v4 = v12 + 1;
        if (v12 + 2 < v32)
        {
          unint64_t v13 = *(void *)(v5 + 8 * (v12 + 2));
          if (v13)
          {
            v12 += 2;
            goto LABEL_12;
          }
          int64_t v14 = v12 + 3;
          int64_t v4 = v12 + 2;
          if (v12 + 3 < v32) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v8 = 0;
    uint64_t v42 = 0;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
LABEL_27:
    sub_66A64((uint64_t)&v38, (uint64_t)&v43, (uint64_t *)&unk_400E30);
    if (!v44[2]) {
      return 1;
    }
    uint64_t v15 = v43;
    sub_469D4((uint64_t)v44, (uint64_t)&v38);
    unint64_t v16 = sub_42168(v15);
    if ((v17 & 1) == 0) {
      goto LABEL_54;
    }
    sub_66A08(*(void *)(a2 + 56) + (v16 << 6), (uint64_t)&v33);
    if (v33 != v38) {
      goto LABEL_53;
    }
    uint64_t v18 = v34[1].i64[0];
    if (v18 != *(void *)(v39 + 16)) {
      goto LABEL_53;
    }
    if (v18 && v34 != (int64x2_t *)v39)
    {
      uint64_t v19 = v34 + 2;
      uint64_t v20 = (int64x2_t *)(v39 + 32);
      while (1)
      {
        int32x2_t v21 = vmovn_s64(vceqq_s64(*v19, *v20));
        if ((v21.i32[0] & v21.i32[1] & 1) == 0) {
          break;
        }
        ++v19;
        ++v20;
        if (!--v18) {
          goto LABEL_36;
        }
      }
LABEL_53:
      sub_66AC8((uint64_t)&v33);
LABEL_54:
      sub_66AC8((uint64_t)&v38);
      return 0;
    }
LABEL_36:
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v23 = swift_unknownObjectWeakLoadStrong();
    uint64_t v24 = (void *)v23;
    if (Strong)
    {
      if (!v23) {
        goto LABEL_51;
      }
      sub_39F90(0, (unint64_t *)&qword_400CD0);
      id v25 = Strong;
      char v26 = sub_2FCA70();

      if ((v26 & 1) == 0) {
        goto LABEL_53;
      }
    }
    else if (v23)
    {
      goto LABEL_52;
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v27 = swift_unknownObjectWeakLoadStrong();
    uint64_t v24 = (void *)v27;
    if (Strong)
    {
      if (!v27)
      {
LABEL_51:
        uint64_t v24 = Strong;
LABEL_52:

        goto LABEL_53;
      }
      sub_39F90(0, (unint64_t *)&qword_400CD0);
      id v28 = Strong;
      char v29 = sub_2FCA70();

      if ((v29 & 1) == 0) {
        goto LABEL_53;
      }
    }
    else if (v27)
    {
      goto LABEL_52;
    }
    if (v35 != *((double *)&v40 + 1) || v36 != *(double *)&v41) {
      goto LABEL_53;
    }
    double v30 = *((double *)&v41 + 1);
    double v31 = v37;
    sub_66AC8((uint64_t)&v33);
    uint64_t result = sub_66AC8((uint64_t)&v38);
    if (v31 != v30) {
      return 0;
    }
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v12 = v14;
LABEL_12:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v4 = v12;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v32)
    {
      int64_t v4 = v32 - 1;
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_12;
    }
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_9DDF8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    unsigned __int8 v18 = *(unsigned char *)(*(void *)(v3 + 48) + v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_421AC(v18);
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    int32x2_t v21 = (void *)(*(void *)(a2 + 56) + 16 * v19);
    if (*v21 == v17 && v21[1] == v16)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_2FD1F0();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_9DFD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = a2;
  sub_A6794(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v14, a4, a5);
  uint64_t v12 = v14;
  swift_bridgeObjectRelease();
  if (v5) {
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_9E070()
{
  return sub_A6DA4();
}

uint64_t sub_9E078(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (sub_9D87C(*a1, *a2)) {
    char v4 = sub_9D87C(v2, v3);
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_9E0C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_371F4(&qword_400E40);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = *(void *)(v6 + 8);
    uint64_t v10 = v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginationCompleteSubscription;
    swift_beginAccess();
    sub_A6F48(v10, (uint64_t)v22);
    uint64_t v11 = v23;
    sub_5BE90((uint64_t)v22, (uint64_t *)&unk_400E48);
    if (!v11)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = (void *)swift_allocObject();
      void v14[2] = v13;
      void v14[3] = v8;
      void v14[4] = v9;
      sub_44924(&qword_400120, &qword_400E40);
      swift_unknownObjectRetain();
      uint64_t v15 = sub_2FBCF0();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v23 = sub_2FBA80();
      uint64_t v24 = &protocol witness table for AnyCancellable;
      v22[0] = v15;
      swift_beginAccess();
      sub_A7010((uint64_t)v22, v10);
      swift_endAccess();
    }
    uint64_t v16 = v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_bookPaginationSubscription;
    swift_beginAccess();
    sub_A6F48(v16, (uint64_t)v22);
    if (v23)
    {
      swift_unknownObjectRelease();
      return sub_5BE90((uint64_t)v22, (uint64_t *)&unk_400E48);
    }
    else
    {
      sub_5BE90((uint64_t)v22, (uint64_t *)&unk_400E48);
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v18 = swift_getObjectType();
      v22[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v18, v9);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_A7078;
      *(void *)(v19 + 24) = v17;
      swift_retain();
      sub_371F4(&qword_400E58);
      sub_44924(&qword_400E60, &qword_400E58);
      uint64_t v20 = sub_2FBCF0();
      swift_release();
      swift_release();
      uint64_t v23 = sub_2FBA80();
      uint64_t v24 = &protocol witness table for AnyCancellable;
      v22[0] = v20;
      swift_beginAccess();
      sub_A7010((uint64_t)v22, v16);
      swift_endAccess();
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  return result;
}

id sub_9E4BC(char a1, double a2, double a3, double a4, double a5)
{
  char v10 = a1 & 1;
  *(void *)&v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  uint64_t v11 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_viewDocumentMap;
  uint64_t v12 = self;
  uint64_t v13 = v5;
  *(void *)&v5[v11] = [v12 weakToStrongObjectsMapTable];
  uint64_t v14 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentViewMap;
  *(void *)&v13[v14] = [self strongToWeakObjectsMapTable];
  *(void *)&v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_scrollDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_locationProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  uint64_t v16 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginationCompleteSubscription];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  *(void *)&v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentSubscriptions] = &_swiftEmptySetSingleton;
  uint64_t v17 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_bookPaginationSubscription];
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((void *)v17 + 4) = 0;
  uint64_t v18 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_updateStateCancellable];
  *(_OWORD *)uint64_t v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((void *)v18 + 4) = 0;
  uint64_t v19 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_log];
  if (qword_3FD710 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_2FB8A0();
  uint64_t v21 = sub_60044(v20, (uint64_t)qword_4170B8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v21, v20);
  v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] = v10;
  if (qword_3FD718 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)algn_4170D8;
  uint64_t v23 = qword_4170E0;
  uint64_t v24 = unk_4170E8;
  id v25 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state];
  *(void *)id v25 = qword_4170D0;
  *((void *)v25 + 1) = v22;
  *((void *)v25 + 2) = v23;
  *((void *)v25 + 3) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for UberScrollContainerView();
  id v26 = [super initWithFrame:a2, a3, a4, a5];
  [v26 setDelegate:v26];
  [v26 setShowsVerticalScrollIndicator:0];
  [v26 setShowsHorizontalScrollIndicator:0];
  [v26 setScrollsToTop:0];
  [v26 setMinimumZoomScale:1.0];
  [v26 setMaximumZoomScale:1.0];
  [v26 setDelaysContentTouches:0];
  [v26 setContentInsetAdjustmentBehavior:2];

  return v26;
}

id sub_9E870()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UberScrollContainerView();
  return [super dealloc];
}

uint64_t sub_9EA1C()
{
  return type metadata accessor for UberScrollContainerView();
}

uint64_t type metadata accessor for UberScrollContainerView()
{
  uint64_t result = qword_400E00;
  if (!qword_400E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_9EA70()
{
  uint64_t result = sub_2FB8A0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

id sub_9EB60()
{
  if (([v0 isTracking] & 1) != 0 || objc_msgSend(v0, "isDecelerating")) {
    return &def_7BFC0 + 1;
  }
  else {
    return [v0 be_isAnimatingScroll];
  }
}

uint64_t sub_9EBB8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation);
}

id sub_9EBCC(char a1, char a2, double a3, double a4)
{
  if (a2)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      *(unsigned char *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 1;
      *(unsigned char *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling) = 1;
      if ((*(void *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        uint64_t v9 = *(void *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController);
        if (*(unsigned char *)(v9 + 192) == 1) {
          *(unsigned char *)(v9 + 193) = 1;
        }
      }
      swift_unknownObjectRelease();
    }
  }

  return [v4 setContentOffset:a1 & 1 animated:a3, a4];
}

uint64_t sub_9ECA4@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>)
{
  uint64_t v5 = v3;
  uint64_t v9 = swift_allocObject();
  *(CGFloat *)(v9 + 16) = a2;
  char v10 = (double *)(v9 + 16);
  *(CGFloat *)(v9 + 24) = a3;
  uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state + 16];
  uint64_t v12 = *(void *)&v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state + 24];
  uint64_t v13 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation;
  if (v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] == 1)
  {
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = Strong;
      swift_beginAccess();
      uint64_t v16 = *(void *)(v15 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      a3 = (*(double (**)(uint64_t, uint64_t))(v16 + 48))(ObjectType, v16);
      swift_unknownObjectRelease();
      a2 = a3 + a2;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_2FB880();
      os_log_type_t v20 = sub_2FC7B0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&def_7BFC0, v19, v20, "UberScrollContainerView unable to access contentLayoutProvider", v21, 2u);
        swift_slowDealloc();
      }

      [v5 bounds];
      a2 = CGRectGetWidth(v76) + *v10;
    }
    *char v10 = a2;
    unint64_t v18 = *(void *)(v11 + 16);
    if (!v18) {
      goto LABEL_19;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v18 = *(void *)(v11 + 16);
    if (!v18) {
      goto LABEL_19;
    }
  }
  uint64_t v22 = 0;
  unint64_t v23 = v11 + 32;
  uint64_t v24 = (double *)(v11 + 48);
  do
  {
    if (!v5[v13])
    {
      if (*(double *)(v9 + 24) >= *v24) {
        goto LABEL_12;
      }
      unint64_t v25 = v18 - 1;
      --v22;
LABEL_21:
      unint64_t v31 = v22 & ~(v22 >> 63);
      if (v31 >= v25) {
        unint64_t v32 = v25;
      }
      else {
        unint64_t v32 = v31;
      }
      if (v32 >= v18)
      {
        __break(1u);
      }
      else
      {
        unint64_t v33 = v23 + 24 * v32;
        unint64_t v18 = *(void *)v33;
        double v34 = *(double *)(v33 + 8);
        a3 = *(double *)(v33 + 16);
        swift_bridgeObjectRelease();
        if (v32 < *(void *)(v12 + 16))
        {
          swift_bridgeObjectRelease();
          double v35 = &v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService];
          if (!swift_unknownObjectWeakLoadStrong()
            || (uint64_t v36 = *((void *)v35 + 1),
                uint64_t v37 = swift_getObjectType(),
                (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v36),
                swift_unknownObjectRelease(),
                uint64_t v11 = BookPaginationEntity.document(for:)(v18),
                swift_release(),
                !v11))
          {
            long long v38 = sub_2FB880();
            os_log_type_t v39 = sub_2FC7B0();
            if (os_log_type_enabled(v38, v39))
            {
              long long v40 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)long long v40 = 134217984;
              v63[0] = v18;
              sub_2FCC70();
              _os_log_impl(&def_7BFC0, v38, v39, "Failed to get paginated document for %ld", v40, 0xCu);
              swift_slowDealloc();
            }
            swift_release();

            goto LABEL_33;
          }
          if (v5[v13])
          {
            double v4 = a2 - v34;
          }
          else
          {
            swift_beginAccess();
            a3 = *(double *)(v9 + 24) - a3;
            double v4 = v34;
          }
          uint64_t v42 = (unint64_t *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
          swift_beginAccess();
          unint64_t v23 = *v42;
          if (!(v23 >> 62))
          {
            uint64_t v43 = *(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
            uint64_t result = swift_bridgeObjectRetain();
            if (v43) {
              goto LABEL_38;
            }
            goto LABEL_61;
          }
LABEL_60:
          swift_bridgeObjectRetain();
          uint64_t result = sub_2FD030();
          if (result)
          {
LABEL_38:
            if ((v23 & 0xC000000000000001) != 0)
            {
              unint64_t v44 = (void *)sub_2FCE20();
            }
            else
            {
              if (!*(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8)))
              {
                __break(1u);
LABEL_69:
                __break(1u);
LABEL_70:
                __break(1u);
                goto LABEL_71;
              }
              unint64_t v44 = *(void **)(v23 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            uint64_t v45 = v44[4];
            uint64_t v46 = v44[5];
            uint64_t v47 = v44[6];
            uint64_t v48 = v44[7];
            if (v5[v13])
            {
              CGRectGetWidth(*(CGRect *)&v45);
              uint64_t result = sub_2FB630();
              double v50 = v49;
              if ((~*(void *)&v49 & 0x7FF0000000000000) == 0)
              {
LABEL_71:
                __break(1u);
                goto LABEL_72;
              }
              if (v49 <= -9.22337204e18)
              {
LABEL_72:
                __break(1u);
                goto LABEL_73;
              }
              uint64_t v45 = 0x43E0000000000000;
              if (v50 < 9.22337204e18) {
                goto LABEL_49;
              }
              __break(1u);
            }
            CGRectGetHeight(*(CGRect *)&v45);
            uint64_t result = sub_2FB630();
            double v50 = v51;
            if ((~*(void *)&v51 & 0x7FF0000000000000) == 0)
            {
LABEL_73:
              __break(1u);
              goto LABEL_74;
            }
            if (v51 <= -9.22337204e18)
            {
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
            if (v51 >= 9.22337204e18)
            {
LABEL_75:
              __break(1u);
              return result;
            }
LABEL_49:
            uint64_t v52 = (uint64_t *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
            uint64_t result = swift_beginAccess();
            uint64_t v53 = *v52 - 1;
            if (!__OFSUB__(*v52, 1))
            {
              uint64_t v54 = (uint64_t)v50;
              if (v53 >= (uint64_t)v50) {
                uint64_t v53 = (uint64_t)v50;
              }
              uint64_t v55 = v53 & ~(v53 >> 63);
              if ((v54 & 0x8000000000000000) == 0 && *v52 > v54)
              {
                swift_release();
                swift_release();
LABEL_65:
                swift_release();
                goto LABEL_66;
              }
              swift_retain();
              long long v56 = sub_2FB880();
              os_log_type_t v57 = sub_2FC7B0();
              if (!os_log_type_enabled(v56, v57))
              {
                swift_release();
                swift_release_n();
                swift_release();

LABEL_66:
                v63[0] = v18;
                v63[1] = v55;
                long long v64 = 0u;
                long long v65 = 0u;
                long long v66 = 0u;
                unint64_t v67 = v18;
                double v68 = v4;
                CGFloat v69 = a3;
                char v70 = 0;
                long long v71 = 0u;
                long long v72 = 0u;
                uint64_t v73 = 0;
                __int16 v74 = 1;
                address(of:)(v63);
                return sub_66A64((uint64_t)v63, a1, &qword_400E10);
              }
              uint64_t v62 = v55;
              uint64_t v58 = swift_slowAlloc();
              *(_DWORD *)uint64_t v58 = 134218752;
              sub_2FCC70();
              *(_WORD *)(v58 + 12) = 2048;
              sub_2FCC70();
              *(_WORD *)(v58 + 22) = 2048;
              sub_2FCC70();
              swift_release();
              *(_WORD *)(v58 + 32) = 2048;
              v63[0] = v62;
              sub_2FCC70();
              _os_log_impl(&def_7BFC0, v56, v57, "Calculated an estimated page of %ld when we only have %ld pages in %ld. Clamping to %ld", (uint8_t *)v58, 0x2Au);
              uint64_t v55 = v62;
              swift_slowDealloc();
              swift_release();
LABEL_64:
              swift_release();

              goto LABEL_65;
            }
            goto LABEL_69;
          }
LABEL_61:
          swift_bridgeObjectRelease();
          uint64_t v59 = (void *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
          uint64_t result = swift_beginAccess();
          if (!__OFSUB__(*v59, 1))
          {
            uint64_t v55 = (*v59 - 1) & ~((*v59 - 1) >> 63);
            long long v56 = sub_2FB880();
            os_log_type_t v60 = sub_2FC790();
            if (os_log_type_enabled(v56, v60))
            {
              uint64_t v61 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v61 = 134217984;
              v63[0] = v55;
              sub_2FCC70();
              _os_log_impl(&def_7BFC0, v56, v60, "Unable to estimate page - returning : %ld", v61, 0xCu);
              swift_slowDealloc();
            }
            goto LABEL_64;
          }
          goto LABEL_70;
        }
      }
      __break(1u);
      goto LABEL_60;
    }
    if (*(v24 - 1) < a2)
    {
      unint64_t v25 = v18 - 1;
      goto LABEL_21;
    }
LABEL_12:
    ++v22;
    v24 += 3;
  }
  while (v18 != v22);
  uint64_t v26 = *(void *)(v12 + 16);
  if (v26)
  {
    unint64_t v27 = v23 + 24 * v18;
    double v4 = *(double *)(v27 - 16);
    a3 = *(double *)(v27 - 8);
    uint64_t v28 = v12 + 24 * v26;
    CGFloat v29 = *(double *)(v28 + 16);
    CGFloat v30 = *(double *)(v28 + 24);
    swift_beginAccess();
    v75.CGFloat y = *(CGFloat *)(v9 + 24);
    v77.origin.CGFloat x = v4;
    v77.origin.CGFloat y = a3;
    v77.size.CGFloat width = v29;
    v77.size.CGFloat height = v30;
    v75.CGFloat x = a2;
    if (CGRectContainsPoint(v77, v75))
    {
      unint64_t v25 = v18 - 1;
      unint64_t v18 = *(void *)(v11 + 16);
      uint64_t v22 = v25;
      goto LABEL_21;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  sub_A100C(v5);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_33:
  sub_60020((uint64_t)v63);
  return sub_66A64((uint64_t)v63, a1, &qword_400E10);
}

uint64_t sub_9F588(_OWORD *a1)
{
  char v10 = 1;
  char v9 = 1;
  v2[0] = *a1;
  memset(&v2[1], 0, 64);
  uint64_t v3 = 0;
  char v4 = 1;
  long long v5 = 0u;
  long long v6 = 0u;
  uint64_t v7 = 0;
  __int16 v8 = 1;
  return sub_A06C4((uint64_t)v2, 0);
}

void sub_9F5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = v4;
  uint64_t v10 = sub_371F4(&qword_408070);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)&v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState];
  uint64_t v14 = *(void *)&v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState];
  if (v14)
  {
    a3 = v13[2];
    a4 = v13[3];
    uint64_t v15 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (a1)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = sub_9DFD0(v16, v14, (uint64_t)sub_A78DC, (void (*)(void))sub_1143A8, (void (*)(void))sub_110030);
      double v34 = v12;
      uint64_t v18 = v17;
      swift_bridgeObjectRetain();
      uint64_t v19 = swift_bridgeObjectRetain();
      sub_9DFD0(v19, v15, (uint64_t)sub_A6A74, (void (*)(void))sub_1141E8, (void (*)(void))sub_10FD58);
      a1 = sub_A7330(v18);
      a2 = v20;
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v22;
      uint64_t v12 = v34;
      a4 = v24;
    }
    else
    {
      a1 = v14;
      a2 = v15;
    }
  }
  else
  {
    sub_A6EE8(a1);
  }
  uint64_t v25 = *v13;
  *uint64_t v13 = a1;
  v13[1] = a2;
  void v13[2] = a3;
  v13[3] = a4;
  sub_A71A4(v25);
  if (([v5 isTracking] & 1) != 0
    || ([v5 isDecelerating] & 1) != 0
    || objc_msgSend(v5, "be_isAnimatingScroll"))
  {
    uint64_t v26 = (uint64_t)&v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_updateStateCancellable];
    swift_beginAccess();
    sub_A6F48(v26, (uint64_t)v35);
    uint64_t v27 = v36;
    sub_5BE90((uint64_t)v35, (uint64_t *)&unk_400E48);
    if (!v27)
    {
      sub_39F90(0, &qword_400EF0);
      id v28 = [self mainRunLoop];
      uint64_t v29 = sub_2FCB50();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
      uint64_t v30 = sub_2FCA30();

      sub_5BE90((uint64_t)v12, &qword_408070);
      v35[0] = v30;
      sub_2FCA20();
      sub_A7448(&qword_400EF8, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
      uint64_t v31 = sub_2FBB10();
      swift_release();
      v35[0] = v31;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_371F4(&qword_400F00);
      sub_44924(&qword_400F08, &qword_400F00);
      uint64_t v32 = sub_2FBCF0();
      swift_release();
      swift_release();
      uint64_t v36 = sub_2FBA80();
      uint64_t v37 = &protocol witness table for AnyCancellable;
      v35[0] = v32;
      swift_beginAccess();
      sub_A7010((uint64_t)v35, v26);
      swift_endAccess();
    }
  }
  else
  {
    sub_9FB38();
  }
}

void sub_9FAAC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = Strong;
    if (([Strong isTracking] & 1) == 0
      && ([v1 isDecelerating] & 1) == 0
      && (objc_msgSend(v1, "be_isAnimatingScroll") & 1) == 0)
    {
      sub_9FB38();
    }
  }
}

void sub_9FB38()
{
  *(void *)&long long v58 = 0;
  long long v56 = 0u;
  long long v57 = 0u;
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_updateStateCancellable];
  swift_beginAccess();
  sub_A7010((uint64_t)&v56, v1);
  swift_endAccess();
  objc_super v2 = (uint64_t *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState];
  if (!v3
    || (unint64_t v4 = v2[1],
        uint64_t v5 = v2[2],
        uint64_t v6 = v2[3],
        uint64_t v7 = (uint64_t *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state],
        uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state + 8],
        (sub_9D87C(*(void *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState], *(void *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state]) & 1) != 0)&& (sub_9D87C(v4, v8) & 1) != 0)
  {
    char v9 = sub_2FB880();
    os_log_type_t v10 = sub_2FC7A0();
    if (!os_log_type_enabled(v9, v10))
    {
LABEL_27:

      return;
    }
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&def_7BFC0, v9, v10, "Either we have no pending state or our current state and the pending state are the same. No need to update.", v11, 2u);
LABEL_25:
    swift_slowDealloc();
    goto LABEL_27;
  }
  uint64_t v52 = *v7;
  uint64_t *v7 = v3;
  v7[1] = v4;
  v7[2] = v5;
  v7[3] = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_A6EE8(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = *v2;
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  sub_A71A4(v12);
  uint64_t v13 = v0;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_A7204(v14, (uint64_t)v13, 0.0);
  double v16 = v15;
  swift_bridgeObjectRelease();

  [v13 contentSize];
  double v64 = v17;
  double v65 = v18;
  uint64_t v19 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation;
  swift_getKeyPath();
  *(double *)&long long v56 = v16;
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v20 = &v13[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_locationProvider];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = *((void *)v20 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v21 + 16))(v54, ObjectType, v21);
    swift_unknownObjectRelease();
    long long v61 = v54[5];
    long long v62 = v54[6];
    v63[0] = v55[0];
    *(_OWORD *)((char *)v63 + 10) = *(_OWORD *)((char *)v55 + 10);
    long long v58 = v54[2];
    long long v59 = v54[3];
    long long v60 = v54[4];
    long long v56 = v54[0];
    long long v57 = v54[1];
    sub_5227C((uint64_t)&v56);
    if (!*(void *)(v7[1] + 16) || (sub_42168(v56), (v23 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      double v34 = sub_2FB880();
      os_log_type_t v35 = sub_2FC790();
      if (os_log_type_enabled(v34, v35))
      {
        log = v34;
        uint64_t v36 = swift_slowAlloc();
        *(void *)&v54[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 134218242;
        sub_2FCC70();
        *(_WORD *)(v36 + 12) = 2080;
        type metadata accessor for CGSize(0);
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_2FC0A0();
        unint64_t v39 = v38;
        swift_bridgeObjectRelease();
        sub_38EF0(v37, v39, (uint64_t *)v54);
        sub_2FCC70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      unint64_t v44 = v13;
      char v9 = sub_2FB880();
      os_log_type_t v45 = sub_2FC7A0();
      if (!os_log_type_enabled(v9, v45))
      {

        goto LABEL_27;
      }
      uint64_t v46 = swift_slowAlloc();
      *(void *)&v54[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v47 = sub_2FC9D0();
      sub_38EF0(v47, v48, (uint64_t *)v54);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      [v44 contentSize];
      uint64_t v49 = sub_2FC9D0();
      sub_38EF0(v49, v50, (uint64_t *)v54);
      sub_2FCC70();

      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    [v13 contentOffset];
    double v25 = v24;
    double v27 = v26;
    [v13 contentSize];
    if (v13[v19]) {
      double v30 = v28;
    }
    else {
      double v30 = v29;
    }
    if (v30 != v16)
    {
      uint64_t v31 = sub_2FB880();
      os_log_type_t v32 = sub_2FC7A0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 134218240;
        *(double *)uint64_t v54 = v30;
        sub_2FCC70();
        *(_WORD *)(v33 + 12) = 2048;
        *(double *)uint64_t v54 = v16;
        sub_2FCC70();
        _os_log_impl(&def_7BFC0, v31, v32, "changing size of uberscroll from %f to %f", (uint8_t *)v33, 0x16u);
        swift_slowDealloc();
      }

      [v13 setContentSize:v64, v65];
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_167068(v13, v52, v25, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v40 = sub_2FB880();
    os_log_type_t v41 = sub_2FC7B0();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      *(void *)&v54[0] = v53;
      *(void *)&long long v56 = 0;
      *((void *)&v56 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2FCDD0(66);
      v66._uint64_t countAndFlagsBits = 60;
      v66._object = (void *)0xE100000000000000;
      sub_2FC260(v66);
      v67._object = (void *)0x800000000032E480;
      v67._uint64_t countAndFlagsBits = 0xD000000000000011;
      sub_2FC260(v67);
      v68._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v68._object = (void *)0x800000000030F100;
      sub_2FC260(v68);
      swift_bridgeObjectRetain();
      sub_371F4(&qword_400E18);
      v69._uint64_t countAndFlagsBits = sub_2FC400();
      sub_2FC260(v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v70._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v70._object = (void *)0x800000000030F120;
      sub_2FC260(v70);
      swift_bridgeObjectRetain();
      sub_371F4(&qword_400E20);
      v71._uint64_t countAndFlagsBits = sub_2FC400();
      sub_2FC260(v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v43 = v56;
      swift_bridgeObjectRelease();
      *(void *)&long long v56 = sub_38EF0(v43, *((unint64_t *)&v43 + 1), (uint64_t *)v54);
      sub_2FCC70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_A06C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  double v6 = *(double *)(a1 + 72);
  double v7 = *(double *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 88);
  CGFloat v10 = *(double *)(a1 + 104);
  double v9 = *(double *)(a1 + 112);
  CGFloat v11 = *(double *)(a1 + 120);
  CGFloat v12 = *(double *)(a1 + 128);
  char v13 = *(unsigned char *)(a1 + 136);
  if (a2)
  {
    uint64_t v14 = a2;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state];
    swift_bridgeObjectRetain();
    if (!*(void *)(v14 + 16))
    {
LABEL_17:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      double v34 = sub_2FB880();
      os_log_type_t v35 = sub_2FC7B0();
      if (!os_log_type_enabled(v34, v35))
      {
LABEL_20:

        return 0;
      }
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 134217984;
      v52[0] = v5;
      sub_2FCC70();
      uint64_t v37 = "Unable to find starting offset for ordinal %ld";
LABEL_19:
      _os_log_impl(&def_7BFC0, v34, v35, v37, v36, 0xCu);
      swift_slowDealloc();
      goto LABEL_20;
    }
  }
  unint64_t v15 = sub_42168(v5);
  if ((v16 & 1) == 0) {
    goto LABEL_17;
  }
  double v17 = (double *)(*(void *)(v14 + 56) + 16 * v15);
  double v19 = *v17;
  double v18 = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v53 = v19;
  double v54 = v18;
  if ((v13 & 1) == 0)
  {
    if (v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] == 1)
    {
      v55.origin.CGFloat x = v10;
      v55.origin.CGFloat y = v9;
      v55.size.CGFloat width = v11;
      v55.size.CGFloat height = v12;
      double MaxX = CGRectGetMaxX(v55);
      [v3 frame];
      double v53 = v19 + MaxX - CGRectGetWidth(v56);
    }
    else
    {
      double v54 = v9 + v18;
    }
    unint64_t v39 = sub_2FB880();
    os_log_type_t v40 = sub_2FC7A0();
    if (!os_log_type_enabled(v39, v40)) {
      goto LABEL_34;
    }
    os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v41 = 136315138;
    uint64_t v42 = sub_2FCA10();
    v51[0] = sub_38EF0(v42, v43, v52);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    unint64_t v44 = "Contained requested offset -- utilizing that to scroll to %s";
    goto LABEL_33;
  }
  if ((v8 & 1) == 0)
  {
    if (v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] == 1)
    {
      [v3 frame];
      double v53 = v19 + v6 - CGRectGetWidth(v57);
    }
    else
    {
      double v54 = v7 + v18;
    }
    unint64_t v39 = sub_2FB880();
    os_log_type_t v40 = sub_2FC7A0();
    if (!os_log_type_enabled(v39, v40)) {
      goto LABEL_34;
    }
    os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v41 = 136315138;
    uint64_t v45 = sub_2FCA10();
    v51[0] = sub_38EF0(v45, v46, v52);
    sub_2FCC70();
    swift_bridgeObjectRelease();
    unint64_t v44 = "Contained locationOffset -- utilizing that to scroll to %s";
LABEL_33:
    _os_log_impl(&def_7BFC0, v39, v40, v44, v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_34:

LABEL_35:
    swift_beginAccess();
    return *(void *)&v53;
  }
  uint64_t v20 = &v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService];
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v21 = *((void *)v20 + 1),
        uint64_t ObjectType = swift_getObjectType(),
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21),
        swift_unknownObjectRelease(),
        uint64_t v23 = BookPaginationEntity.document(for:)(v5),
        swift_release(),
        !v23))
  {
    double v34 = sub_2FB880();
    os_log_type_t v35 = sub_2FC7B0();
    if (!os_log_type_enabled(v34, v35)) {
      goto LABEL_20;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 134217984;
    v52[0] = v5;
    sub_2FCC70();
    uint64_t v37 = "Failed to get paginated document for %ld. Unable to get offset";
    goto LABEL_19;
  }
  double v24 = (void *)(v23 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
  swift_beginAccess();
  if ((int64_t)v4 >= *v24)
  {
    swift_retain();
    uint64_t v47 = sub_2FB880();
    os_log_type_t v48 = sub_2FC7B0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315650;
      sub_38EF0(0xD000000000000012, 0x800000000030F0E0, v51);
      sub_2FCC70();
      *(_WORD *)(v49 + 12) = 2048;
      sub_2FCC70();
      *(_WORD *)(v49 + 22) = 2048;
      sub_2FCC70();
      swift_release();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      swift_release_n();
    }

    return *(void *)&v19;
  }
  else
  {
    double v25 = (uint64_t *)(v23 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
    uint64_t result = swift_beginAccess();
    uint64_t v27 = *v25;
    if ((*v25 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      double v28 = (void *)sub_2FCE20();
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v29 = v28[4];
      uint64_t v30 = v28[5];
      uint64_t v31 = v28[6];
      uint64_t v32 = v28[7];
      if (v3[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] == 1)
      {
        double MinX = CGRectGetMinX(*(CGRect *)&v29);
        swift_release();
        swift_release();
        double v53 = v19 + MinX;
      }
      else
      {
        double MinY = CGRectGetMinY(*(CGRect *)&v29);
        swift_release();
        swift_release();
        double v54 = v18 + MinY;
      }
      goto LABEL_35;
    }
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8)))
    {
      double v28 = *(void **)(v27 + 8 * v4 + 32);
      swift_retain();
      goto LABEL_15;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_A0E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double v6 = v5;
  if (a2)
  {
    uint64_t v10 = a2;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state];
    swift_bridgeObjectRetain();
    if (!*(void *)(v10 + 16))
    {
LABEL_8:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v15 = sub_2FB880();
      os_log_type_t v16 = sub_2FC7B0();
      if (os_log_type_enabled(v15, v16))
      {
        double v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)double v17 = 134217984;
        sub_2FCC70();
        _os_log_impl(&def_7BFC0, v15, v16, "Unable to find starting offset for ordinal %ld", v17, 0xCu);
        swift_slowDealloc();
      }

      *(double *)&uint64_t result = 0.0;
      return result;
    }
  }
  unint64_t v11 = sub_42168(a1);
  if ((v12 & 1) == 0) {
    goto LABEL_8;
  }
  double v13 = *(double *)(*(void *)(v10 + 56) + 16 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a5) {
    [v6 contentOffset];
  }
  else {
    double v14 = *(double *)&a3;
  }
  double v19 = 0.0;
  if (*((unsigned char *)v6 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation)) {
    double v19 = v13;
  }
  *(double *)&uint64_t result = v14 - v19;
  return result;
}

void sub_A100C(void *a1)
{
  id v1 = a1;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  objc_super v2 = v1;
  oslog = sub_2FB880();
  os_log_type_t v3 = sub_2FC7B0();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136316162;
    swift_beginAccess();
    uint64_t v5 = sub_2FCA10();
    sub_38EF0(v5, v6, &v15);
    sub_2FCC70();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    if (v2[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation]) {
      uint64_t v7 = 0x746E6F7A69726F68;
    }
    else {
      uint64_t v7 = 0x6C61636974726576;
    }
    if (v2[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation]) {
      unint64_t v8 = 0xEA00000000006C61;
    }
    else {
      unint64_t v8 = 0xE800000000000000;
    }
    sub_38EF0(v7, v8, &v15);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_371F4(&qword_400E18);
    uint64_t v9 = sub_2FC400();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    sub_38EF0(v9, v11, &v15);
    sub_2FCC70();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 32) = 2080;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2FCDD0(66);
    v17._uint64_t countAndFlagsBits = 60;
    v17._object = (void *)0xE100000000000000;
    sub_2FC260(v17);
    v18._object = (void *)0x800000000032E480;
    v18._uint64_t countAndFlagsBits = 0xD000000000000011;
    sub_2FC260(v18);
    v19._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v19._object = (void *)0x800000000030F100;
    sub_2FC260(v19);
    swift_bridgeObjectRetain();
    v20._uint64_t countAndFlagsBits = sub_2FC400();
    sub_2FC260(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v21._object = (void *)0x800000000030F120;
    sub_2FC260(v21);
    swift_bridgeObjectRetain();
    sub_371F4(&qword_400E20);
    v22._uint64_t countAndFlagsBits = sub_2FC400();
    sub_2FC260(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_38EF0(0, 0xE000000000000000, &v15);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 42) = 2080;
    sub_A6EE8(*(void *)&v2[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState]);
    sub_371F4(&qword_400E28);
    uint64_t v12 = sub_2FC1E0();
    sub_38EF0(v12, v13, &v15);
    sub_2FCC70();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_7BFC0, oslog, v3, "Failed to find associated ordinal for offset %s orientation: %s\n    offsetMap: %s\n    state: %s\n    pendingState: %s", (uint8_t *)v4, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
}

uint64_t sub_A152C()
{
  id v1 = v0;
  uint64_t v2 = sub_2FB350();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation;
  swift_getKeyPath();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  [v0 contentOffset];
  *(void *)&v173[0] = v7;
  *((void *)&v173[0] + 1) = v8;
  uint64_t v9 = (void (*)(long long *, void))swift_readAtKeyPath();
  double v163 = *v10;
  v9(&v175, 0);
  uint64_t v165 = KeyPath;
  swift_release();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v133 = sub_2FB880();
    os_log_type_t v134 = sub_2FC7B0();
    if (os_log_type_enabled(v133, v134))
    {
      v135 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v135 = 0;
      swift_slowDealloc();
    }

    goto LABEL_86;
  }
  uint64_t v12 = Strong;
  uint64_t v157 = v3;
  uint64_t v158 = v2;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 112);
  uint64_t v14 = *(void *)(v12 + 120);
  swift_unknownObjectRetain();
  swift_release();
  uint64_t ObjectType = swift_getObjectType();
  os_log_type_t v16 = *(double (**)(uint64_t, uint64_t))(v14 + 48);
  uint64_t v161 = v14;
  uint64_t v162 = v13;
  uint64_t v160 = ObjectType;
  double v17 = v16(ObjectType, v14);
  double v19 = v18;
  uint64_t v170 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentViewMap;
  id v20 = [*(id *)&v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentViewMap] keyEnumerator];
  sub_2FC780();

  uint64_t v21 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_log;
  uint64_t v22 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state;
  uint64_t v23 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_locationProvider;
  uint64_t v24 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState;
  sub_2FB340();
  if (!v185)
  {
LABEL_82:
    (*(void (**)(char *, uint64_t))(v157 + 8))(v5, v158);
    swift_unknownObjectRelease();
LABEL_86:
    swift_release();
    return swift_release();
  }
  v171 = &v1[v21];
  v167 = &v1[v22];
  BOOL v155 = &v1[v23];
  uint64_t v152 = (uint64_t *)&v1[v24];
  uint64_t v159 = v161 + 64;
  uint64_t v151 = (char *)&v175 + 8;
  v153 = (char *)&v175 + 4;
  v154 = (char *)v173 + 8;
  uint64_t v26 = -1;
  id v172 = (char *)&type metadata for Any + 8;
  *(void *)&long long v25 = 136315138;
  long long v168 = v25;
  *(void *)&long long v25 = 134218240;
  long long v150 = v25;
  *(void *)&long long v25 = 136315394;
  long long v149 = v25;
  unint64_t v147 = 0x800000000030F170;
  unint64_t v148 = 0x800000000030F140;
  *(void *)&long long v25 = 136315650;
  long long v146 = v25;
  long long v144 = (void *)0x800000000030F100;
  v145 = (void *)0x800000000032E480;
  uint64_t v143 = (void *)0x800000000030F120;
  v169 = v5;
  while (2)
  {
    v156 = v26;
    while (1)
    {
      sub_46954(&v184, v183);
      sub_3A01C((uint64_t)v183, (uint64_t)&v175);
      sub_39F90(0, (unint64_t *)&qword_400F10);
      if (!swift_dynamicCast())
      {
        sub_3A01C((uint64_t)v183, (uint64_t)&v175);
        Swift::String v69 = sub_2FB880();
        os_log_type_t v70 = sub_2FC7B0();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = swift_slowAlloc();
          *(void *)&v173[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v71 = v168;
          sub_4F798(&v175, *((uint64_t *)&v176 + 1));
          swift_getDynamicType();
          uint64_t v72 = sub_2FD3E0();
          *(void *)(v71 + 4) = sub_38EF0(v72, v73, (uint64_t *)v173);
          swift_bridgeObjectRelease();
          sub_39FCC((uint64_t)&v175);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_39FCC((uint64_t)&v175);
        }

        sub_39FCC((uint64_t)v183);
        goto LABEL_7;
      }
      uint64_t v27 = *(void **)&v173[0];
      id v28 = [*(id *)&v1[v170] objectForKey:*(void *)&v173[0]];
      if (!v28) {
        goto LABEL_43;
      }
      uint64_t v29 = v28;
      swift_getObjectType();
      uint64_t v30 = swift_conformsToProtocol2();
      uint64_t v31 = v30 ? v30 : 0;
      uint64_t v32 = v30 ? v29 : 0;
      if (v32) {
        break;
      }

LABEL_43:
      __int16 v74 = v1;
      id v75 = v27;
      CGRect v76 = v74;
      id v77 = v75;
      id v78 = sub_2FB880();
      os_log_type_t v79 = sub_2FC7B0();
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = swift_slowAlloc();
        *(void *)&long long v175 = swift_slowAlloc();
        *(_DWORD *)uint64_t v80 = v168;

        sub_371F4(&qword_400F18);
        uint64_t v81 = sub_2FD3E0();
        *(void *)(v80 + 4) = sub_38EF0(v81, v82, (uint64_t *)&v175);

        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
LABEL_6:
      sub_39FCC((uint64_t)v183);
      uint64_t v5 = v169;
LABEL_7:
      sub_2FB340();
      if (!v185) {
        goto LABEL_82;
      }
    }
    id v33 = [v27 integerValue];
    uint64_t v34 = (uint64_t)v33;
    uint64_t v35 = *(void *)v167;
    if (*(void *)(*(void *)v167 + 16))
    {
      unint64_t v36 = sub_42168((uint64_t)v33);
      if (v37)
      {
        uint64_t v38 = *((void *)v167 + 1);
        if (*(void *)(v38 + 16))
        {
          long long v166 = *(_OWORD *)(*(void *)(v35 + 56) + 16 * v36);
          unint64_t v39 = sub_42168(v34);
          if (v40)
          {
            os_log_type_t v41 = (uint64_t *)(*(void *)(v38 + 56) + 16 * v39);
            uint64_t v42 = *v41;
            uint64_t v43 = v41[1];
            long long v175 = v166;
            swift_retain();
            swift_getAtKeyPath();
            swift_release();
            double v44 = *(double *)v173 - v163;
            *(void *)&long long v175 = v42;
            *((void *)&v175 + 1) = v43;
            swift_retain();
            swift_getAtKeyPath();
            swift_release();
            double v45 = *(double *)v173;
            uint64_t v46 = swift_getObjectType();
            swift_retain();
            [v32 bounds];
            *(void *)&long long v175 = v47;
            *((void *)&v175 + 1) = v48;
            swift_getAtKeyPath();
            swift_release();
            double v49 = v45 - *(double *)v173;
            double v50 = -v44;
            if (v45 - *(double *)v173 <= -v44) {
              double v50 = v45 - *(double *)v173;
            }
            if (v50 < 0.0) {
              double v51 = 0.0;
            }
            else {
              double v51 = v50;
            }
            [v32 frame];
            (*(void (**)(uint64_t, uint64_t))(v31 + 72))(v46, v31);
            if (v52)
            {
              double v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v46, v31);
              [v53 contentOffset];
            }
            double v54 = v44 + v51;
            [v32 frame];
            CGRect v55 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v46, v31);
            swift_retain();
            [v55 contentSize];
            uint64_t v57 = v56;
            uint64_t v59 = v58;

            *(void *)&v173[0] = v57;
            *((void *)&v173[0] + 1) = v59;
            long long v60 = (void (*)(long long *, void))swift_readAtKeyPath();
            double v62 = *v61;
            v60(&v175, 0);
            swift_release();
            BOOL v63 = v45 < v62 && v49 == v51;
            double v64 = v62 + -1.0;
            if (v1[v164] == 1)
            {
              if (!v63) {
                double v64 = v51;
              }
              if (v17 >= v45) {
                double v65 = v45;
              }
              else {
                double v65 = v17;
              }
              double v66 = 0.0;
              double v67 = 0.0;
              double v68 = v19;
            }
            else
            {
              (*(void (**)(uint64_t))(v161 + 64))(v160);
              double v67 = v54;
              if (v63) {
                double v66 = v64;
              }
              else {
                double v66 = v51;
              }
              if (v19 >= v45) {
                double v68 = v45;
              }
              else {
                double v68 = v19;
              }
              double v64 = 0.0;
              double v54 = v83;
              double v65 = v17;
            }
            [v32 setFrame:v54, v67, v65, v68];
            (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(v31 + 272))(1, v46, v31, v64, v66);

            goto LABEL_6;
          }
        }
      }
    }
    CGPoint v84 = v155;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result)
    {
      uint64_t v88 = v156;
      if (__OFADD__(v156, 1)) {
        goto LABEL_88;
      }
      *(void *)&long long v166 = (char *)&v156->isa + 1;
LABEL_58:
      double v89 = (double)(uint64_t)v88;
      uint64_t v90 = sub_2FB880();
      os_log_type_t v91 = sub_2FC7B0();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = v150;
        *(void *)(v92 + 4) = v34;
        *(_WORD *)(v92 + 12) = 2048;
        *(double *)(v92 + 14) = v89;
        _os_log_impl(&def_7BFC0, v90, v91, "Failed to find start offset and size for %ld. Adjusting origin by %f", (uint8_t *)v92, 0x16u);
        swift_slowDealloc();
      }

      uint64_t v93 = v1;
      long long v94 = sub_2FB880();
      os_log_type_t v95 = sub_2FC7A0();
      int v96 = v95;
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        v156 = v94;
        uint64_t v98 = v97;
        id v141 = (id)swift_slowAlloc();
        *(void *)&long long v175 = v141;
        *(_DWORD *)uint64_t v98 = v149;
        LODWORD(v140) = v96;
        uint64_t v99 = sub_2FC9D0();
        uint64_t v142 = v93;
        *(void *)&v173[0] = sub_38EF0(v99, v100, (uint64_t *)&v175);
        sub_2FCC70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 12) = 2080;
        uint64_t v101 = swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectRelease();
        if (v101) {
          uint64_t v102 = 0xD000000000000029;
        }
        else {
          uint64_t v102 = 0xD000000000000013;
        }
        if (v101) {
          unint64_t v103 = v148;
        }
        else {
          unint64_t v103 = v147;
        }
        *(void *)&v173[0] = sub_38EF0(v102, v103, (uint64_t *)&v175);
        uint64_t v93 = v142;
        sub_2FCC70();

        swift_bridgeObjectRelease();
        _os_log_impl(&def_7BFC0, v156, (os_log_type_t)v140, "Ensuring frame is at least content size %s & Origin is set. %s", (uint8_t *)v98, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v104 = v93;
      char v105 = sub_2FB880();
      int v106 = sub_2FC7A0();
      if (!os_log_type_enabled(v105, (os_log_type_t)v106))
      {

        goto LABEL_78;
      }
      int v139 = v106;
      os_log_t v140 = v105;
      id v107 = swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      *(void *)&v173[0] = v108;
      v156 = v107;
      LODWORD(v107->isa) = v146;
      uint64_t v137 = (_DWORD *)&v107->isa + 1;
      uint64_t v138 = v108;
      uint64_t v109 = *(void *)v167;
      v136[1] = *((void *)v167 + 1);
      v136[2] = v109;
      id v141 = v104;
      uint64_t v142 = (char *)*((void *)v167 + 3);
      *(void *)&long long v175 = 0;
      *((void *)&v175 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2FCDD0(66);
      v186._uint64_t countAndFlagsBits = 60;
      v186._object = (void *)0xE100000000000000;
      sub_2FC260(v186);
      v187._uint64_t countAndFlagsBits = 0xD000000000000011;
      v187._object = v145;
      sub_2FC260(v187);
      v188._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v188._object = v144;
      sub_2FC260(v188);
      swift_bridgeObjectRetain();
      sub_371F4(&qword_400E18);
      v189._uint64_t countAndFlagsBits = sub_2FC400();
      sub_2FC260(v189);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v190._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v190._object = v143;
      sub_2FC260(v190);
      swift_bridgeObjectRetain();
      sub_371F4(&qword_400E20);
      v191._uint64_t countAndFlagsBits = sub_2FC400();
      sub_2FC260(v191);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v111 = *((void *)&v175 + 1);
      uint64_t v110 = v175;
      swift_bridgeObjectRelease();
      uint64_t v112 = sub_38EF0(v110, v111, (uint64_t *)v173);
      id v113 = v156;
      *(void *)&long long v175 = v112;
      sub_2FCC70();
      id v114 = v141;

      swift_bridgeObjectRelease();
      WORD2(v113[1].isa) = 1024;
      uint64_t v142 = (char *)&v113[1].isa + 6;
      int64_t v115 = v152;
      uint64_t v137 = (_DWORD *)*v152;

      LODWORD(v175) = v137 != 0;
      sub_2FCC70();

      WORD1(v113[2].isa) = 1024;
      uint64_t v116 = *v115;
      if (*v115)
      {
        uint64_t v142 = (char *)v115[3];
        sub_A6EE8(v116);
        uint64_t v117 = swift_bridgeObjectRetain();
        sub_A71A4(v117);
        if (*(void *)(v116 + 16))
        {
          sub_42168(v34);
          char v119 = v118;
          id v114 = v141;

          swift_bridgeObjectRelease();
          int v120 = v119 & 1;
LABEL_77:
          os_log_type_t v121 = v139;
          uint64_t v122 = (uint8_t *)v156;
          LODWORD(v175) = v120;
          sub_2FCC70();

          os_log_type_t v123 = v121;
          os_log_t v124 = v140;
          _os_log_impl(&def_7BFC0, v140, v123, "CurrentState %s hasPendingState: %{BOOL}d pending state will likely resolve: %{BOOL}d", v122, 0x18u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

LABEL_78:
          [v32 frame];
          if (v1[v164] == 1)
          {
            double v127 = 0.0;
            uint64_t v128 = 0;
            double v129 = v17;
            double v130 = v19;
            double x = v125 + CGRectGetWidth(*(CGRect *)&v125) * v89;
          }
          else
          {
            double v132 = v126;
            v192.origin.double x = (*(double (**)(uint64_t))(v161 + 64))(v160);
            double x = v192.origin.x;
            v192.origin.CGFloat y = v132;
            v192.size.CGFloat width = v17;
            v192.size.CGFloat height = v19;
            double v127 = v132 + CGRectGetHeight(v192) * v89;
          }
          [v32 setFrame:x v127 v17 v19];

          sub_39FCC((uint64_t)v183);
          uint64_t v5 = v169;
          sub_2FB340();
          uint64_t v26 = v166;
          if (!v185) {
            goto LABEL_82;
          }
          continue;
        }
        id v114 = v141;

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      int v120 = 0;
      goto LABEL_77;
    }
    break;
  }
  uint64_t v86 = *((void *)v84 + 1);
  uint64_t v87 = swift_getObjectType();
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v86 + 16))(v173, v87, v86);
  swift_unknownObjectRelease();
  long long v181 = v173[6];
  v182[0] = v174[0];
  *(_OWORD *)((char *)v182 + 10) = *(_OWORD *)((char *)v174 + 10);
  long long v177 = v173[2];
  long long v178 = v173[3];
  long long v179 = v173[4];
  long long v180 = v173[5];
  long long v175 = v173[0];
  long long v176 = v173[1];
  uint64_t result = sub_5227C((uint64_t)&v175);
  if (!__OFSUB__(v34, (void)v175))
  {
    *(void *)&long long v166 = v156;
    uint64_t v88 = (v34 - v175);
    goto LABEL_58;
  }
  __break(1u);
LABEL_88:
  __break(1u);
  return result;
}

void sub_A26A0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (char *)OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_viewDocumentMap;
  id v5 = [*(id *)((char *)v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_viewDocumentMap) keyEnumerator];
  id v6 = [v5 allObjects];

  uint64_t v7 = sub_2FC3F0();
  uint64_t v8 = sub_A2DA0(v7);
  swift_bridgeObjectRelease();
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  char v10 = sub_2006D8((unint64_t)v9, a1);
  swift_bridgeObjectRelease();
  if (v10)
  {
    oslog = sub_2FB880();
    os_log_type_t v11 = sub_2FC7A0();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&def_7BFC0, oslog, v11, "Asked to update tracked views but they're the same", v12, 2u);
      swift_slowDealloc();
    }

    return;
  }
  [*(id *)&v4[(void)v2] removeAllObjects];
  uint64_t v41 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentViewMap;
  [*(id *)((char *)v2 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentViewMap) removeAllObjects];
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (v13)
  {
LABEL_12:
    os_log_t v14 = 0;
    unint64_t v46 = a1 & 0xC000000000000001;
    unint64_t v42 = a1 + 32;
    uint64_t v43 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v39 = v4;
    char v40 = v2;
    uint64_t v44 = v13;
    unint64_t v45 = a1;
    while (1)
    {
      if (v46)
      {
        id v15 = (id)sub_2FCE20();
      }
      else
      {
        if ((unint64_t)v14 >= *(void *)(v43 + 16)) {
          goto LABEL_38;
        }
        id v15 = *(id *)(v42 + 8 * (void)v14);
      }
      os_log_type_t v16 = v15;
      BOOL v17 = __OFADD__(v14, 1);
      os_log_t v14 = (os_log_t)((char *)v14 + 1);
      if (v17)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_2FD030();
        if (!v13) {
          break;
        }
        goto LABEL_12;
      }
      if (swift_weakLoadStrong())
      {
        os_log_t osloga = v14;
        sub_2FBAE0();
        swift_release();
        uint64_t v18 = v51;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19)
        {
          swift_bridgeObjectRetain();
          uint64_t v2 = (uint64_t *)(v18 + 40);
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v4 = *(char **)(v20 + 48);
            swift_unknownObjectRetain();
            uint64_t v22 = ((uint64_t (*)(uint64_t, uint64_t))v4)(ObjectType, v20);
            if (v22)
            {
              uint64_t v4 = (char *)v22;
              sub_39F90(0, (unint64_t *)&qword_400CD0);
              id v23 = v16;
              char v24 = sub_2FCA70();

              if (v24) {
                break;
              }
            }
            swift_unknownObjectRelease();
            v2 += 2;
            if (!--v19)
            {
              swift_bridgeObjectRelease();
              uint64_t v13 = v44;
              a1 = v45;
              goto LABEL_29;
            }
          }
          swift_bridgeObjectRelease_n();
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v20 + 40))(&v49, ObjectType, v20);
          if (v50)
          {
            sub_469A4(&v49, (uint64_t)&v51);
            uint64_t v25 = v52;
            uint64_t v26 = v53;
            sub_4F798(&v51, v52);
            (*(void (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
            Class isa = sub_2FC630().super.super.isa;
            uint64_t v4 = v39;
            uint64_t v2 = v40;
            [*(id *)&v39[(void)v40] setObject:isa forKey:v23];
            id v28 = *(id *)((char *)v40 + v41);
            uint64_t v29 = isa;
            [v28 setObject:v23 forKey:v29];

            swift_unknownObjectRelease();
            sub_39FCC((uint64_t)&v51);
            uint64_t v13 = v44;
            a1 = v45;
            os_log_t v14 = osloga;
          }
          else
          {
            sub_5BE90((uint64_t)&v49, &qword_4009B0);
            swift_unknownObjectRetain_n();
            uint64_t v35 = sub_2FB880();
            os_log_type_t v36 = sub_2FC7B0();
            os_log_t v14 = osloga;
            if (os_log_type_enabled(v35, v36))
            {
              uint64_t v4 = (char *)swift_slowAlloc();
              uint64_t v51 = swift_slowAlloc();
              *(_DWORD *)uint64_t v4 = 136315138;
              uint64_t v37 = ContentLoading.shortDescription.getter(ObjectType, v20);
              *(void *)&long long v49 = sub_38EF0(v37, v38, &v51);
              sub_2FCC70();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&def_7BFC0, v35, v36, "failed to get document for loader: %s", (uint8_t *)v4, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_unknownObjectRelease_n();
            }

            uint64_t v13 = v44;
            a1 = v45;
          }
          goto LABEL_14;
        }
LABEL_29:
        swift_bridgeObjectRelease();
        os_log_t v14 = osloga;
      }
      id v30 = v16;
      uint64_t v31 = sub_2FB880();
      os_log_type_t v32 = sub_2FC7B0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138412290;
        *(void *)(v33 + 4) = v30;
        void *v34 = v30;
        _os_log_impl(&def_7BFC0, v31, v32, "Failed to get loader that has a content view of %@", (uint8_t *)v33, 0xCu);
        sub_371F4(&qword_400A90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
LABEL_14:
      if (v14 == (os_log_t)v13) {
        goto LABEL_42;
      }
    }
  }

LABEL_42:
  swift_bridgeObjectRelease();
}

void *sub_A2DA0(uint64_t a1)
{
  id v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2FCE80();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_3A01C(i, (uint64_t)v5);
    sub_39F90(0, (unint64_t *)&qword_400CD0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_2FCE50();
    sub_2FCE90();
    sub_2FCEA0();
    sub_2FCE60();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void sub_A2EBC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t ObjectType = swift_getObjectType();
    char v9 = *(unsigned char *)((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(ObjectType, a4) + 97);
    swift_release();
    if (v9)
    {
      char v10 = sub_2FD1F0();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
LABEL_10:

        return;
      }
      if (v5)
      {
LABEL_5:
        sub_A2FF4();
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_5;
      }
    }
    if (qword_3FD718 != -1) {
      swift_once();
    }
    sub_9F5E8(qword_4170D0, *(uint64_t *)algn_4170D8, qword_4170E0, unk_4170E8);
    goto LABEL_10;
  }
}

uint64_t sub_A2FF4()
{
  uint64_t v101 = 0;
  uint64_t v102 = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  swift_unknownObjectRelease();
  unint64_t v6 = *(void *)(v5 + 40);
  swift_bridgeObjectRetain();
  swift_release();
  v97[0] = _swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2FD030();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  if (!v7) {
    goto LABEL_15;
  }
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    uint64_t result = sub_2FD280();
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      sub_2FCE20();
    }
    else {
      swift_retain();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    if (v100 == 1)
    {
      sub_2FCE50();
      sub_2FCE90();
      sub_2FCEA0();
      sub_2FCE60();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = v97[0];
LABEL_16:
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation)) {
    unint64_t v9 = sub_A54A8(v9);
  }
  char v10 = (void *)sub_443FC((uint64_t)_swiftEmptyArrayStorage);
  os_log_type_t v11 = (void *)sub_43F40((uint64_t)_swiftEmptyArrayStorage);
  swift_getKeyPath();
  swift_getKeyPath();
  if (v9 >> 62) {
    goto LABEL_81;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
  if (v12)
  {
    while (1)
    {
      if (v12 < 1) {
        goto LABEL_89;
      }
      uint64_t v95 = v12;
      unint64_t v96 = v9;
      if ((v9 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v13 = 0;
      while (1)
      {
        uint64_t v18 = sub_2FCE20();
        uint64_t v19 = *(void *)(v18 + 16);
        uint64_t v21 = v101;
        uint64_t v20 = v102;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v97[0] = v10;
        unint64_t v9 = sub_42168(v19);
        uint64_t v24 = v10[2];
        BOOL v25 = (v23 & 1) == 0;
        uint64_t v26 = v24 + v25;
        if (__OFADD__(v24, v25)) {
          break;
        }
        char v27 = v23;
        if (v10[3] >= v26)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            char v10 = (void *)v97[0];
            if (v23) {
              goto LABEL_32;
            }
          }
          else
          {
            sub_1143A8();
            char v10 = (void *)v97[0];
            if (v27) {
              goto LABEL_32;
            }
          }
        }
        else
        {
          sub_110030(v26, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_42168(v19);
          if ((v27 & 1) != (v29 & 1)) {
            goto LABEL_90;
          }
          unint64_t v9 = v28;
          char v10 = (void *)v97[0];
          if (v27)
          {
LABEL_32:
            id v30 = (void *)(v10[7] + 16 * v9);
            void *v30 = v21;
            v30[1] = v20;
            goto LABEL_36;
          }
        }
        v10[(v9 >> 6) + 8] |= 1 << v9;
        *(void *)(v10[6] + 8 * v9) = v19;
        uint64_t v31 = (void *)(v10[7] + 16 * v9);
        *uint64_t v31 = v21;
        v31[1] = v20;
        uint64_t v32 = v10[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_77;
        }
        void v10[2] = v34;
LABEL_36:
        swift_bridgeObjectRelease();
        unint64_t v9 = *(void *)(v18 + 16);
        uint64_t v35 = (uint64_t *)(v18 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
        swift_beginAccess();
        uint64_t v37 = *v35;
        uint64_t v36 = v35[1];
        char v38 = swift_isUniquelyReferenced_nonNull_native();
        v97[0] = v11;
        unint64_t v40 = sub_42168(v9);
        uint64_t v41 = v11[2];
        BOOL v42 = (v39 & 1) == 0;
        uint64_t v43 = v41 + v42;
        if (__OFADD__(v41, v42)) {
          goto LABEL_74;
        }
        char v44 = v39;
        if (v11[3] >= v43)
        {
          if (v38)
          {
            os_log_type_t v11 = (void *)v97[0];
            if (v39) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_1141E8();
            os_log_type_t v11 = (void *)v97[0];
            if (v44) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          sub_10FD58(v43, v38);
          unint64_t v45 = sub_42168(v9);
          if ((v44 & 1) != (v46 & 1)) {
            goto LABEL_90;
          }
          unint64_t v40 = v45;
          os_log_type_t v11 = (void *)v97[0];
          if (v44)
          {
LABEL_23:
            os_log_t v14 = (void *)(v11[7] + 16 * v40);
            void *v14 = v37;
            v14[1] = v36;
            goto LABEL_24;
          }
        }
        v11[(v40 >> 6) + 8] |= 1 << v40;
        *(void *)(v11[6] + 8 * v40) = v9;
        uint64_t v47 = (void *)(v11[7] + 16 * v40);
        *uint64_t v47 = v37;
        v47[1] = v36;
        uint64_t v48 = v11[2];
        BOOL v33 = __OFADD__(v48, 1);
        uint64_t v49 = v48 + 1;
        if (v33) {
          goto LABEL_78;
        }
        v11[2] = v49;
LABEL_24:
        ++v13;
        swift_bridgeObjectRelease();
        long long v99 = *(_OWORD *)v35;
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        double v15 = v98;
        os_log_type_t v16 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
        *BOOL v17 = v15 + *v17;
        v16(v97, 0);
        swift_unknownObjectRelease();
        if (v95 == v13) {
          goto LABEL_82;
        }
      }
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_2FD030();
      swift_bridgeObjectRelease();
      if (!v12) {
        goto LABEL_82;
      }
    }
    uint64_t v50 = 0;
    do
    {
      uint64_t v55 = *(void *)(v9 + 8 * v50 + 32);
      uint64_t v56 = *(void *)(v55 + 16);
      uint64_t v58 = v101;
      uint64_t v57 = v102;
      swift_retain();
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      v97[0] = v10;
      unint64_t v9 = sub_42168(v56);
      uint64_t v61 = v10[2];
      BOOL v62 = (v60 & 1) == 0;
      uint64_t v63 = v61 + v62;
      if (__OFADD__(v61, v62)) {
        goto LABEL_75;
      }
      char v64 = v60;
      if (v10[3] >= v63)
      {
        if (v59)
        {
          char v10 = (void *)v97[0];
          if (v60) {
            goto LABEL_57;
          }
        }
        else
        {
          sub_1143A8();
          char v10 = (void *)v97[0];
          if (v64) {
            goto LABEL_57;
          }
        }
      }
      else
      {
        sub_110030(v63, v59);
        unint64_t v65 = sub_42168(v56);
        if ((v64 & 1) != (v66 & 1)) {
          goto LABEL_90;
        }
        unint64_t v9 = v65;
        char v10 = (void *)v97[0];
        if (v64)
        {
LABEL_57:
          double v67 = (void *)(v10[7] + 16 * v9);
          void *v67 = v58;
          v67[1] = v57;
          goto LABEL_61;
        }
      }
      v10[(v9 >> 6) + 8] |= 1 << v9;
      *(void *)(v10[6] + 8 * v9) = v56;
      double v68 = (void *)(v10[7] + 16 * v9);
      void *v68 = v58;
      v68[1] = v57;
      uint64_t v69 = v10[2];
      BOOL v33 = __OFADD__(v69, 1);
      uint64_t v70 = v69 + 1;
      if (v33) {
        goto LABEL_79;
      }
      void v10[2] = v70;
LABEL_61:
      swift_bridgeObjectRelease();
      unint64_t v9 = *(void *)(v55 + 16);
      uint64_t v71 = (uint64_t *)(v55 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
      swift_beginAccess();
      uint64_t v73 = *v71;
      uint64_t v72 = v71[1];
      char v74 = swift_isUniquelyReferenced_nonNull_native();
      v97[0] = v11;
      unint64_t v76 = sub_42168(v9);
      uint64_t v77 = v11[2];
      BOOL v78 = (v75 & 1) == 0;
      uint64_t v79 = v77 + v78;
      if (__OFADD__(v77, v78)) {
        goto LABEL_76;
      }
      char v80 = v75;
      if (v11[3] >= v79)
      {
        if (v74)
        {
          os_log_type_t v11 = (void *)v97[0];
          if ((v75 & 1) == 0) {
            goto LABEL_68;
          }
        }
        else
        {
          sub_1141E8();
          os_log_type_t v11 = (void *)v97[0];
          if ((v80 & 1) == 0) {
            goto LABEL_68;
          }
        }
      }
      else
      {
        sub_10FD58(v79, v74);
        unint64_t v81 = sub_42168(v9);
        if ((v80 & 1) != (v82 & 1)) {
          goto LABEL_90;
        }
        unint64_t v76 = v81;
        os_log_type_t v11 = (void *)v97[0];
        if ((v80 & 1) == 0)
        {
LABEL_68:
          v11[(v76 >> 6) + 8] |= 1 << v76;
          *(void *)(v11[6] + 8 * v76) = v9;
          double v83 = (void *)(v11[7] + 16 * v76);
          *double v83 = v73;
          v83[1] = v72;
          uint64_t v84 = v11[2];
          BOOL v33 = __OFADD__(v84, 1);
          uint64_t v85 = v84 + 1;
          if (v33) {
            goto LABEL_80;
          }
          v11[2] = v85;
          goto LABEL_49;
        }
      }
      uint64_t v51 = (void *)(v11[7] + 16 * v76);
      void *v51 = v73;
      v51[1] = v72;
LABEL_49:
      ++v50;
      swift_bridgeObjectRelease();
      long long v99 = *(_OWORD *)v71;
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      double v52 = v98;
      uint64_t v53 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
      *double v54 = v52 + *v54;
      v53(v97, 0);
      swift_release();
      unint64_t v9 = v96;
    }
    while (v95 != v50);
  }
LABEL_82:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v86 = sub_A56C8();
  swift_bridgeObjectRelease();
  char v87 = sub_9D87C((unint64_t)v10, v86);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v87 & 1) == 0)
  {
    uint64_t v88 = sub_2FB880();
    os_log_type_t v89 = sub_2FC7B0();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl(&def_7BFC0, v88, v89, "documentStartOffsetMap != startOffsets(basedOn: documentContentSizeMap) -- Please file a radar!", v90, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v91 = sub_A7330((uint64_t)v10);
  sub_9F5E8(v91, v92, v93, v94);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_A398C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_3FD710 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_2FB8A0();
    sub_60044(v5, (uint64_t)qword_4170B8);
    uint64_t v3 = sub_2FB880();
    os_log_type_t v6 = sub_2FC7B0();
    if (os_log_type_enabled(v3, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      swift_slowDealloc();
    }
    goto LABEL_43;
  }
  uint64_t v3 = Strong;
  if (*(unsigned char *)(a1 + 97))
  {
    char v4 = sub_2FD1F0();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0) {
      goto LABEL_43;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (Class *)((char *)&v3->isa + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentSubscriptions);
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_9D118(v9);
  swift_bridgeObjectRelease();
  *uint64_t v8 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(a1 + 40);
  v22[0] = (uint64_t)_swiftEmptyArrayStorage;
  unint64_t v11 = v10 >> 62;
  if (!(v10 >> 62))
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_12;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    unint64_t v15 = v22[0];
    if (v22[0] < 0) {
      goto LABEL_44;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2FD030();
  if (!v12) {
    goto LABEL_27;
  }
LABEL_12:
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v12; ++i)
    {
      sub_2FCE20();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2FBBA0();
      swift_release();
      swift_release();
      if (v21 == 1)
      {
        sub_2FCE50();
        sub_2FCE90();
        sub_2FCEA0();
        sub_2FCE60();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v12; ++j)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_2FBBA0();
      swift_release();
      swift_release();
      if (v21 == 1)
      {
        sub_2FCE50();
        sub_2FCE90();
        sub_2FCEA0();
        sub_2FCE60();
      }
      else
      {
        swift_release();
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v11 = v10 >> 62;
  unint64_t v15 = v22[0];
  if (v22[0] < 0)
  {
LABEL_44:
    swift_retain();
    uint64_t v20 = sub_2FD030();
    swift_release();
    if (!v20) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_28:
  if ((v15 & 0x4000000000000000) != 0) {
    goto LABEL_44;
  }
  if (*(void *)(v15 + 16)) {
LABEL_30:
  }
    sub_A3E6C(v15);
LABEL_31:
  swift_release();
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_2FD030();
    if (!v16)
    {
LABEL_42:
      swift_bridgeObjectRelease_n();
LABEL_43:

      return;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    if (!v16) {
      goto LABEL_42;
    }
  }
  if (v16 >= 1)
  {
    if ((v10 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      do
      {
        ++v17;
        v22[0] = sub_2FCE20();
        sub_A417C(v22, (uint64_t)v3);
        swift_unknownObjectRelease();
      }
      while (v16 != v17);
    }
    else
    {
      uint64_t v18 = (uint64_t *)(v10 + 32);
      do
      {
        uint64_t v19 = *v18++;
        v22[0] = v19;
        swift_retain();
        sub_A417C(v22, (uint64_t)v3);
        swift_release();
        --v16;
      }
      while (v16);
    }
    goto LABEL_42;
  }
LABEL_47:
  __break(1u);
}

uint64_t sub_A3E6C(unint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState);
  if (v3)
  {
    char v4 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState + 8);
    sub_A6EE8(*(void *)(v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState));
    swift_bridgeObjectRetain();
    sub_A71A4(v3);
    if (!(a1 >> 62)) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2FD030();
    if (v5) {
      goto LABEL_4;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_A56C8();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_A7330(v28);
    sub_9F5E8(v29, v30, v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  char v4 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state + 8);
  swift_bridgeObjectRetain();
  if (a1 >> 62) {
    goto LABEL_25;
  }
LABEL_3:
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_26;
  }
LABEL_4:
  unint64_t v34 = a1;
  unint64_t v35 = a1 & 0xC000000000000001;
  uint64_t v6 = 4;
  while (1)
  {
    uint64_t v8 = v6 - 4;
    if (!v35) {
      break;
    }
    uint64_t v9 = sub_2FCE20();
    uint64_t v10 = v6 - 3;
    if (__OFADD__(v8, 1)) {
      goto LABEL_27;
    }
LABEL_12:
    uint64_t v11 = *(void *)(v9 + 16);
    uint64_t v12 = (uint64_t *)(v9 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
    swift_beginAccess();
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_42168(v11);
    uint64_t v18 = v4[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      goto LABEL_28;
    }
    char v21 = v16;
    if (v4[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1141E8();
        if (v21) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_10FD58(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_42168(v11);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_30;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_5:
        uint64_t v7 = (void *)(v4[7] + 16 * v17);
        void *v7 = v14;
        v7[1] = v13;
        goto LABEL_6;
      }
    }
    v4[(v17 >> 6) + 8] |= 1 << v17;
    *(void *)(v4[6] + 8 * v17) = v11;
    uint64_t v24 = (void *)(v4[7] + 16 * v17);
    void *v24 = v14;
    v24[1] = v13;
    uint64_t v25 = v4[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_29;
    }
    _OWORD v4[2] = v27;
LABEL_6:
    swift_release();
    swift_bridgeObjectRelease();
    ++v6;
    a1 = v34;
    if (v10 == v5) {
      goto LABEL_26;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8 * v6);
  swift_retain();
  uint64_t v10 = v6 - 3;
  if (!__OFADD__(v8, 1)) {
    goto LABEL_12;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_2FD280();
  __break(1u);
  return result;
}

uint64_t sub_A417C(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_371F4((uint64_t *)&unk_400E68);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v49 = v4;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_371F4((uint64_t *)&unk_4000D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_371F4(&qword_400E40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_371F4(&qword_400E78);
  uint64_t v35 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_371F4(&qword_400E80);
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  char v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_371F4(&qword_400E88);
  uint64_t v43 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *a1;
  swift_beginAccess();
  sub_371F4((uint64_t *)&unk_400E90);
  sub_2FBB70();
  swift_endAccess();
  uint64_t v38 = sub_39F90(0, (unint64_t *)&qword_401700);
  id v50 = (id)sub_2FC8C0();
  uint64_t v41 = sub_2FC870();
  uint64_t v19 = *(void *)(v41 - 8);
  unint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v42 = v19 + 56;
  v40(v8, 1, 1, v41);
  sub_44924(&qword_400120, &qword_400E40);
  unint64_t v44 = sub_52CFC();
  sub_2FBC80();
  sub_5BE90((uint64_t)v8, (uint64_t *)&unk_4000D0);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  unint64_t v45 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_44924(&qword_400EA8, &qword_400E78);
  uint64_t v20 = v33;
  sub_2FBCB0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v20);
  sub_44924(&qword_400EB0, &qword_400E80);
  uint64_t v21 = v34;
  sub_2FBCC0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v21);
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v36;
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = v24;
  sub_44924(&qword_400EB8, &qword_400E88);
  swift_retain();
  uint64_t v25 = v39;
  sub_2FBCF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v25);
  swift_beginAccess();
  sub_2FBA50();
  swift_endAccess();
  swift_release();
  id v50 = *(id *)(v24 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_dataUpdatedSubject);
  sub_371F4((uint64_t *)&unk_400EC0);
  sub_44924((unint64_t *)&qword_400A30, (uint64_t *)&unk_400EC0);
  id v50 = (id)sub_2FBBD0();
  id v51 = (id)sub_2FC8C0();
  v40(v8, 1, 1, v41);
  sub_371F4(&qword_400ED0);
  sub_44924(&qword_400ED8, &qword_400ED0);
  BOOL v26 = v47;
  sub_2FBC80();
  sub_5BE90((uint64_t)v8, (uint64_t *)&unk_4000D0);

  swift_release();
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(void *)(v29 + 24) = v28;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_A719C;
  *(void *)(v30 + 24) = v29;
  sub_44924((unint64_t *)&unk_400EE0, (uint64_t *)&unk_400E68);
  uint64_t v31 = v48;
  sub_2FBCF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v31);
  swift_beginAccess();
  sub_2FBA50();
  swift_endAccess();
  return swift_release();
}

void sub_A49CC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (v4) {
      sub_A4A38(a3);
    }
  }
}

uint64_t sub_A4A38(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_retain();
  int v4 = sub_2FB880();
  os_log_type_t v5 = sub_2FC7A0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    v28[0] = *(void *)(a1 + 16);
    sub_2FCC70();
    swift_release();
    _os_log_impl(&def_7BFC0, v4, v5, "Adding document %ld information to our uber scroll container", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState);
  if (v7)
  {
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState + 8);
    sub_A6EE8(*(void *)(v2 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState));
    swift_bridgeObjectRetain();
    sub_A71A4(v7);
  }
  else
  {
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state + 8);
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = *(void *)(a1 + 16);
  if (*(void *)(v8 + 16))
  {
    sub_42168(*(void *)(a1 + 16));
    if (v10)
    {
      swift_retain_n();
      uint64_t v11 = sub_2FB880();
      os_log_type_t v12 = sub_2FC7A0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        v28[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 134218498;
        sub_2FCC70();
        swift_release();
        *(_WORD *)(v13 + 12) = 2080;
        uint64_t v14 = sub_2FC9D0();
        sub_38EF0(v14, v15, v28);
        sub_2FCC70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 22) = 2080;
        swift_beginAccess();
        uint64_t v16 = sub_2FC9D0();
        sub_38EF0(v16, v17, v28);
        sub_2FCC70();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&def_7BFC0, v11, v12, "Updating ordinal: %ld from %s to %s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }
    }
  }
  uint64_t v18 = (double *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
  swift_beginAccess();
  double v19 = *v18;
  double v20 = v18[1];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AF2DC(v9, isUniquelyReferenced_nonNull_native, v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_A56C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_A7330(v22);
  sub_9F5E8(v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_A4E54()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_weakLoadStrong();
    if (v2)
    {
      sub_A4A38(v2);

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_A4EE4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  if ((*(unsigned char *)(*a1 + 97) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return a2(v3);
  }
  char v4 = sub_2FD1F0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    return a2(v3);
  }
  return result;
}

uint64_t sub_A4F78()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginationCompleteSubscription;
  swift_beginAccess();
  sub_A6F48(v2, (uint64_t)&v9);
  if (*((void *)&v10 + 1))
  {
    sub_52C40((uint64_t)&v9, (uint64_t)v7);
    sub_5BE90((uint64_t)&v9, (uint64_t *)&unk_400E48);
    sub_4F798(v7, v8);
    sub_2FBA30();
    sub_39FCC((uint64_t)v7);
  }
  else
  {
    sub_5BE90((uint64_t)&v9, (uint64_t *)&unk_400E48);
  }
  uint64_t v11 = 0;
  long long v10 = 0u;
  long long v9 = 0u;
  swift_beginAccess();
  sub_A7010((uint64_t)&v9, v2);
  swift_endAccess();
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentSubscriptions);
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_9D118(v4);
  swift_bridgeObjectRelease();
  void *v3 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_bookPaginationSubscription;
  swift_beginAccess();
  sub_A6F48(v5, (uint64_t)&v9);
  if (*((void *)&v10 + 1))
  {
    sub_52C40((uint64_t)&v9, (uint64_t)v7);
    sub_5BE90((uint64_t)&v9, (uint64_t *)&unk_400E48);
    sub_4F798(v7, v8);
    sub_2FBA30();
    sub_39FCC((uint64_t)v7);
  }
  else
  {
    sub_5BE90((uint64_t)&v9, (uint64_t *)&unk_400E48);
  }
  uint64_t v11 = 0;
  long long v10 = 0u;
  long long v9 = 0u;
  swift_beginAccess();
  sub_A7010((uint64_t)&v9, v5);
  return swift_endAccess();
}

uint64_t sub_A518C(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = sub_2FD030();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = sub_2FCE20();
          id v12 = (id)sub_2FCE20();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_104954(v18);
          uint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        sub_2FC410();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_104954(v18);
          uint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        sub_2FC410();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_115D50(v1);
    uint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_A53A8(uint64_t result)
{
  unint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 3 * v2;
  uint64_t v7 = 5;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_5;
    }
    unint64_t v10 = v1[2];
    if (v3 >= v10) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_12;
    }
    uint64_t v11 = v1[v7 - 1];
    uint64_t v12 = v1[v6 + 1];
    long long v13 = *(_OWORD *)&v1[v6 + 2];
    long long v14 = *(_OWORD *)&v1[v7];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1049A8(v1);
      unint64_t v1 = (void *)result;
    }
    uint64_t v8 = &v1[v7];
    *((void *)v8 - 1) = v12;
    *uint64_t v8 = v13;
    unint64_t v9 = &v1[v6];
    v9[1] = v11;
    *((_OWORD *)v9 + 1) = v14;
LABEL_5:
    ++v3;
    v7 += 3;
    --v5;
    v6 -= 3;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_A54A8(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v14 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = sub_2FD030();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v13 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v7 = v14;
        if ((v14 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = sub_2FCE20();
          uint64_t v10 = sub_2FCE20();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v8 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
          if (v5 >= v8) {
            goto LABEL_34;
          }
          uint64_t v9 = *(void *)(v14 + 8 * v5 + 32);
          swift_retain();
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v8) {
            goto LABEL_37;
          }
          uint64_t v10 = *(void *)(v14 + 32 + 8 * v1);
          swift_retain();
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v14 < 0
          || (v14 & 0x4000000000000000) != 0)
        {
          uint64_t v7 = sub_104954(v14);
          uint64_t v14 = v7;
        }
        swift_release();
        *(void *)((char *)&stru_20.cmd + 8 * v5 + (v7 & 0xFFFFFFFFFFFFFF8)) = v10;
        sub_2FC410();
        uint64_t v11 = v14;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v14 < 0
          || (v14 & 0x4000000000000000) != 0)
        {
          uint64_t v11 = sub_104954(v14);
          uint64_t v14 = v11;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_38;
        }
        swift_release();
        *(void *)((char *)&stru_20.cmd + 8 * v1 + (v11 & 0xFFFFFFFFFFFFFF8)) = v9;
        sub_2FC410();
      }
      unint64_t v5 = v6;
      if (v4 == v6) {
        return v14;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_115E48(v1);
    uint64_t v14 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_A56C8()
{
  unint64_t v1 = (void *)sub_443FC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_116180(v2);
  swift_bridgeObjectRelease();
  v30[0] = (uint64_t)v3;
  sub_A5D0C(v30, sub_214284, &qword_400E20, (void (*)(void, void, void))sub_214078);
  uint64_t v4 = v30[0];
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation)) {
    uint64_t v4 = sub_A53A8(v30[0]);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_18:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v1;
  }
  unint64_t v6 = (uint64_t *)(v4 + 48);
  while (1)
  {
    uint64_t v11 = *(v6 - 2);
    uint64_t v12 = *(v6 - 1);
    uint64_t v13 = *v6;
    uint64_t v15 = v31;
    uint64_t v14 = v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30[0] = (uint64_t)v1;
    unint64_t v18 = sub_42168(v11);
    uint64_t v19 = v1[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (v1[3] >= v21)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v1 = (void *)v30[0];
        if (v17) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1143A8();
        unint64_t v1 = (void *)v30[0];
        if (v22) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_110030(v21, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = sub_42168(v11);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_21;
      }
      unint64_t v18 = v23;
      unint64_t v1 = (void *)v30[0];
      if (v22)
      {
LABEL_5:
        uint64_t v7 = (void *)(v1[7] + 16 * v18);
        void *v7 = v15;
        v7[1] = v14;
        goto LABEL_6;
      }
    }
    v1[(v18 >> 6) + 8] |= 1 << v18;
    *(void *)(v1[6] + 8 * v18) = v11;
    uint64_t v25 = (void *)(v1[7] + 16 * v18);
    *uint64_t v25 = v15;
    v25[1] = v14;
    uint64_t v26 = v1[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_20;
    }
    v1[2] = v28;
LABEL_6:
    swift_bridgeObjectRelease();
    id v30[5] = v12;
    v30[6] = v13;
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    double v8 = *(double *)&v30[4];
    uint64_t v9 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
    *uint64_t v10 = v8 + *v10;
    v9(v30, 0);
    v6 += 3;
    if (!--v5) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  sub_2FD280();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t destroy for UberScrollContainerView.DocumentDataState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UberScrollContainerView.DocumentDataState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UberScrollContainerView.DocumentDataState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for UberScrollContainerView.DocumentDataState(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UberScrollContainerView.DocumentDataState()
{
  return &type metadata for UberScrollContainerView.DocumentDataState;
}

Swift::Int sub_A5D0C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t *a3, void (*a4)(void, void, void))
{
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a2(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  Swift::Int result = sub_A5DA8(v11, a3, a4);
  *a1 = v8;
  return result;
}

uint64_t sub_A5D98()
{
  return _swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_A5DA8(uint64_t *a1, uint64_t *a2, void (*a3)(void, void, void))
{
  Swift::Int v6 = a1[1];
  Swift::Int result = sub_2FD180(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v6 >= 2)
    {
      uint64_t v88 = 0;
      uint64_t v89 = *a1;
      for (uint64_t i = 1; i != v6; ++i)
      {
        uint64_t v91 = *(void *)(v89 + 24 * i);
        uint64_t v92 = v88;
        do
        {
          uint64_t v93 = v89 + v92;
          if (v91 >= *(void *)(v89 + v92)) {
            break;
          }
          if (!v89) {
            goto LABEL_140;
          }
          uint64_t v94 = v89 + v92;
          long long v95 = *(_OWORD *)(v89 + v92 + 32);
          *(_OWORD *)(v89 + v92 + 24) = *(_OWORD *)v93;
          *(void *)(v89 + v92 + 40) = *(void *)(v93 + 16);
          *(void *)uint64_t v94 = v91;
          *(_OWORD *)(v94 + 8) = v95;
          v92 -= 24;
        }
        while (v92 != -24);
        v88 += 24;
      }
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_145;
  }
  Swift::Int v108 = result;
  char v105 = a1;
  if (v6 < 2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    unint64_t v111 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      uint64_t v14 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      id v107 = v11;
      if (v15 >= 2)
      {
        uint64_t v96 = *v105;
        do
        {
          unint64_t v97 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_131;
          }
          if (!v96) {
            goto LABEL_144;
          }
          double v98 = v14;
          long long v99 = v14 + 32;
          uint64_t v100 = *(void *)&v14[16 * v97 + 32];
          uint64_t v101 = *(void *)&v99[16 * v15 - 8];
          sub_A64C4((char *)(v96 + 24 * v100), (char *)(v96 + 24 * *(void *)&v99[16 * v15 - 16]), v96 + 24 * v101, v111, a3);
          if (v3) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v98 = sub_214220((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_133;
          }
          uint64_t v102 = &v98[16 * v97 + 32];
          *(void *)uint64_t v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v98 + 2);
          if (v15 > v103) {
            goto LABEL_134;
          }
          memmove(&v98[16 * v15 + 16], &v98[16 * v15 + 32], 16 * (v103 - v15));
          uint64_t v14 = v98;
          *((void *)v98 + 2) = v103 - 1;
          unint64_t v15 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      v107[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v107 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_371F4(a2);
    uint64_t v10 = sub_2FC450();
    *(void *)(v10 + 16) = v9;
    id v107 = (void *)v10;
    unint64_t v111 = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v106 = *a1 + 48;
  uint64_t v104 = *a1 - 24;
  uint64_t v14 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v109 = v6;
  uint64_t v110 = *a1;
  while (1)
  {
    Swift::Int v16 = v12++;
    if (v12 < v6)
    {
      uint64_t v17 = *(void *)(v13 + 24 * v12);
      uint64_t v18 = *(void *)(v13 + 24 * v16);
      Swift::Int v12 = v16 + 2;
      if (v16 + 2 < v6)
      {
        uint64_t v19 = (uint64_t *)(v106 + 24 * v16);
        uint64_t v20 = v17;
        while (1)
        {
          uint64_t v22 = *v19;
          v19 += 3;
          uint64_t v21 = v22;
          if (v17 < v18 == v22 >= v20) {
            break;
          }
          ++v12;
          uint64_t v20 = v21;
          if (v6 == v12)
          {
            Swift::Int v12 = v6;
            break;
          }
        }
      }
      if (v17 < v18)
      {
        if (v12 < v16) {
          goto LABEL_137;
        }
        if (v16 < v12)
        {
          uint64_t v23 = 24 * v12;
          uint64_t v24 = 24 * v16;
          Swift::Int v25 = v12;
          Swift::Int v26 = v16;
          do
          {
            if (v26 != --v25)
            {
              if (!v13) {
                goto LABEL_143;
              }
              uint64_t v27 = v13 + v24;
              uint64_t v28 = v13 + v23;
              uint64_t v29 = *(void *)(v13 + v24);
              long long v30 = *(_OWORD *)(v13 + v24 + 8);
              long long v31 = *(_OWORD *)(v13 + v23 - 24);
              *(void *)(v27 + 16) = *(void *)(v13 + v23 - 8);
              *(_OWORD *)uint64_t v27 = v31;
              *(void *)(v28 - 24) = v29;
              *(_OWORD *)(v28 - 16) = v30;
            }
            ++v26;
            v23 -= 24;
            v24 += 24;
          }
          while (v26 < v25);
        }
      }
    }
    if (v12 >= v6) {
      goto LABEL_46;
    }
    if (__OFSUB__(v12, v16)) {
      goto LABEL_135;
    }
    if (v12 - v16 >= v108) {
      goto LABEL_46;
    }
    Swift::Int v32 = v16 + v108;
    if (__OFADD__(v16, v108)) {
      goto LABEL_138;
    }
    if (v32 >= v6) {
      Swift::Int v32 = v6;
    }
    if (v32 < v16) {
      break;
    }
    if (v12 != v32)
    {
      uint64_t v33 = v104 + 24 * v12;
      do
      {
        uint64_t v34 = *(void *)(v13 + 24 * v12);
        Swift::Int v35 = v16;
        uint64_t v36 = v33;
        do
        {
          if (v34 >= *(void *)v36) {
            break;
          }
          if (!v13) {
            goto LABEL_141;
          }
          long long v37 = *(_OWORD *)(v36 + 32);
          *(_OWORD *)(v36 + 24) = *(_OWORD *)v36;
          *(void *)(v36 + 40) = *(void *)(v36 + 16);
          *(void *)uint64_t v36 = v34;
          *(_OWORD *)(v36 + 8) = v37;
          v36 -= 24;
          ++v35;
        }
        while (v12 != v35);
        ++v12;
        v33 += 24;
      }
      while (v12 != v32);
      Swift::Int v12 = v32;
    }
LABEL_46:
    if (v12 < v16) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_213D34(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v39 = *((void *)v14 + 2);
    unint64_t v38 = *((void *)v14 + 3);
    unint64_t v15 = v39 + 1;
    uint64_t v13 = v110;
    if (v39 >= v38 >> 1)
    {
      char v87 = sub_213D34((char *)(v38 > 1), v39 + 1, 1, v14);
      uint64_t v13 = v110;
      uint64_t v14 = v87;
    }
    *((void *)v14 + 2) = v15;
    unint64_t v40 = v14 + 32;
    uint64_t v41 = &v14[16 * v39 + 32];
    *(void *)uint64_t v41 = v16;
    *((void *)v41 + 1) = v12;
    if (v39)
    {
      while (1)
      {
        unint64_t v42 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v47 = &v40[16 * v15];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_119;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_120;
          }
          unint64_t v54 = v15 - 2;
          uint64_t v55 = &v40[16 * v15 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_122;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_125;
          }
          if (v59 >= v50)
          {
            uint64_t v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_129;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_83;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v71 = *((void *)v14 + 4);
            uint64_t v72 = *((void *)v14 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_77;
          }
          uint64_t v44 = *((void *)v14 + 4);
          uint64_t v43 = *((void *)v14 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_121;
        }
        unint64_t v54 = v15 - 2;
        char v60 = &v40[16 * v15 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_124;
        }
        char v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_127;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_128;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_83:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v65) {
          goto LABEL_123;
        }
        uint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_126;
        }
        if (v76 < v64) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v15)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v13) {
          goto LABEL_142;
        }
        char v82 = &v40[16 * v81];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v40[16 * v42];
        uint64_t v85 = *((void *)v84 + 1);
        sub_A64C4((char *)(v13 + 24 * *(void *)v82), (char *)(v13 + 24 * *(void *)v84), v13 + 24 * v85, v111, a3);
        if (v3) {
          goto LABEL_113;
        }
        if (v85 < v83) {
          goto LABEL_116;
        }
        if (v42 > *((void *)v14 + 2)) {
          goto LABEL_117;
        }
        *(void *)char v82 = v83;
        *(void *)&v40[16 * v81 + 8] = v85;
        unint64_t v86 = *((void *)v14 + 2);
        if (v42 >= v86) {
          goto LABEL_118;
        }
        unint64_t v15 = v86 - 1;
        memmove(&v40[16 * v42], v84 + 16, 16 * (v86 - 1 - v42));
        *((void *)v14 + 2) = v86 - 1;
        uint64_t v13 = v110;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    Swift::Int v6 = v109;
    if (v12 >= v109)
    {
      uint64_t v11 = v107;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = sub_2FD000();
  __break(1u);
  return result;
}

uint64_t sub_A64C4(char *__src, char *a2, unint64_t a3, char *__dst, void (*a5)(void, void, void))
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 24;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v29 = __src;
  uint64_t v28 = __dst;
  if (v10 >= v12)
  {
    if (v11 >= -23)
    {
      if (__dst != a2 || &a2[24 * v12] <= __dst)
      {
        uint64_t v18 = a5;
        memmove(__dst, a2, 24 * v12);
        a5 = v18;
      }
      uint64_t v19 = &v5[24 * v12];
      uint64_t v27 = v19;
      uint64_t v29 = v7;
      if (v8 < v7 && v11 >= 24)
      {
        unint64_t v20 = a3 - 24;
        uint64_t v21 = v7;
        while (1)
        {
          uint64_t v22 = (char *)(v20 + 24);
          uint64_t v23 = *((void *)v21 - 3);
          v21 -= 24;
          if (*((void *)v19 - 3) >= v23)
          {
            uint64_t v27 = v19 - 24;
            if (v22 < v19 || v20 >= (unint64_t)v19 || v22 != v19)
            {
              long long v25 = *(_OWORD *)(v19 - 24);
              *(void *)(v20 + 16) = *((void *)v19 - 1);
              *(_OWORD *)unint64_t v20 = v25;
            }
            uint64_t v21 = v7;
            v19 -= 24;
            if (v7 <= v8) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v22 != v7 || v20 >= (unint64_t)v7)
            {
              long long v24 = *(_OWORD *)v21;
              *(void *)(v20 + 16) = *((void *)v21 + 2);
              *(_OWORD *)unint64_t v20 = v24;
            }
            uint64_t v29 = v21;
            if (v21 <= v8) {
              goto LABEL_38;
            }
          }
          v20 -= 24;
          uint64_t v7 = v21;
          if (v19 <= v5) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v9 >= -23)
  {
    if (__dst != __src || &__src[24 * v10] <= __dst)
    {
      uint64_t v13 = a5;
      memmove(__dst, __src, 24 * v10);
      a5 = v13;
    }
    uint64_t v14 = &v5[24 * v10];
    uint64_t v27 = v14;
    if ((unint64_t)v7 < a3 && v9 >= 24)
    {
      do
      {
        if (*(void *)v7 >= *(void *)v5)
        {
          if (v8 != v5)
          {
            long long v17 = *(_OWORD *)v5;
            *((void *)v8 + 2) = *((void *)v5 + 2);
            *(_OWORD *)uint64_t v8 = v17;
          }
          v5 += 24;
          uint64_t v28 = v5;
          unint64_t v15 = v7;
        }
        else
        {
          unint64_t v15 = v7 + 24;
          if (v8 < v7 || v8 >= v15 || v8 != v7)
          {
            long long v16 = *(_OWORD *)v7;
            *((void *)v8 + 2) = *((void *)v7 + 2);
            *(_OWORD *)uint64_t v8 = v16;
          }
        }
        v8 += 24;
        if (v5 >= v14) {
          break;
        }
        uint64_t v7 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v29 = v8;
    }
LABEL_38:
    a5(&v29, &v28, &v27);
    return 1;
  }
  uint64_t result = sub_2FD080();
  __break(1u);
  return result;
}

uint64_t sub_A6794(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, void (*a6)(void), void (*a7)(void))
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v11 = sub_A6A88();
  if (v14) {
    goto LABEL_23;
  }
  uint64_t v15 = v11;
  unint64_t v54 = a6;
  uint64_t v55 = v12;
  uint64_t v56 = v13;
  long long v16 = (void *)*a5;
  unint64_t v18 = sub_42168(v11);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  if (__OFADD__(v19, v20))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v21 = v17;
  if (v16[3] >= v19 + v20)
  {
    if (a4)
    {
      long long v24 = (void *)*a5;
      if (v17) {
        goto LABEL_9;
      }
    }
    else
    {
      v54();
      long long v24 = (void *)*a5;
      if (v21) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    *(void *)(v24[6] + 8 * v18) = v15;
    Swift::Int v26 = (void *)(v24[7] + 16 * v18);
    *Swift::Int v26 = v55;
    v26[1] = v56;
    uint64_t v27 = v24[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v24[2] = v29;
LABEL_13:
    uint64_t v30 = sub_A6A88();
    if ((v33 & 1) == 0)
    {
      uint64_t v34 = v30;
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      do
      {
        uint64_t v41 = (void *)*a5;
        unint64_t v42 = sub_42168(v34);
        uint64_t v44 = v41[2];
        BOOL v45 = (v43 & 1) == 0;
        BOOL v28 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v28) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (v41[3] < v46)
        {
          ((void (*)(uint64_t, uint64_t))a7)(v46, 1);
          unint64_t v42 = sub_42168(v34);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v49 = (void *)*a5;
        if (v47)
        {
          long long v37 = (void *)(v49[7] + 16 * v42);
          *long long v37 = v35;
          v37[1] = v36;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          *(void *)(v49[6] + 8 * v42) = v34;
          uint64_t v50 = (void *)(v49[7] + 16 * v42);
          *uint64_t v50 = v35;
          v50[1] = v36;
          uint64_t v51 = v49[2];
          BOOL v28 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v28) {
            goto LABEL_25;
          }
          v49[2] = v52;
        }
        uint64_t v34 = sub_A6A88();
        uint64_t v35 = v38;
        uint64_t v36 = v39;
      }
      while ((v40 & 1) == 0);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_9C5F4();
    return swift_release();
  }
  a7();
  unint64_t v22 = sub_42168(v15);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v18 = v22;
    long long v24 = (void *)*a5;
    if ((v21 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    long long v25 = (void *)(v24[7] + 16 * v18);
    *long long v25 = v55;
    v25[1] = v56;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_2FD280();
  __break(1u);
  return result;
}

__n128 sub_A6A74@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)a1;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_A6A88()
{
  void (*v9)(uint64_t *__return_ptr, uint64_t *);
  long long v10;
  uint64_t result;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  long long v20;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v8 = *(void *)(v1 + 48);
    uint64_t v7 = *(void *)(v1 + 56);
    int64_t v9 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[5];
    uint64_t v19 = *(void *)(v8 + 8 * v6);
    int64_t v10 = *(_OWORD *)(v7 + 16 * v6);
    v0[3] = v4;
    v0[4] = v5;
    BOOL v20 = v10;
    v9(&v18, &v19);
    return v18;
  }
  uint64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (unint64_t)(v0[2] + 64) >> 6;
    if (v12 < v13)
    {
      char v14 = v0[1];
      uint64_t v15 = *(void *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        uint64_t v5 = (v15 - 1) & v15;
        unint64_t v6 = __clz(__rbit64(v15)) + (v12 << 6);
        int64_t v4 = v12;
        goto LABEL_3;
      }
      long long v16 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v13)
      {
        uint64_t v15 = *(void *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          uint64_t v12 = v16;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v13)
        {
          uint64_t v15 = *(void *)(v14 + 8 * (v3 + 3));
          if (v15)
          {
            uint64_t v12 = v3 + 3;
            goto LABEL_7;
          }
          long long v16 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v13)
          {
            uint64_t v15 = *(void *)(v14 + 8 * v16);
            if (v15) {
              goto LABEL_10;
            }
            uint64_t v12 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v13)
            {
              uint64_t v15 = *(void *)(v14 + 8 * v12);
              if (v15) {
                goto LABEL_7;
              }
              int64_t v4 = v13 - 1;
              char v17 = v3 + 6;
              while (v13 != v17)
              {
                uint64_t v15 = *(void *)(v14 + 8 * v17++);
                if (v15)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    __n128 result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_A6C00()
{
  void (*v14)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  void v23[4];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 16 * v6;
    uint64_t v8 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 56) + v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    char v14 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    _OWORD v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  long long v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    char v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      unint64_t v18 = v0[1];
      uint64_t v19 = *(void *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        uint64_t v5 = (v19 - 1) & v19;
        unint64_t v6 = __clz(__rbit64(v19)) + (v16 << 6);
        int64_t v4 = v16;
        goto LABEL_3;
      }
      BOOL v20 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        uint64_t v19 = *(void *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          long long v16 = v20;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          uint64_t v19 = *(void *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            long long v16 = v3 + 3;
            goto LABEL_7;
          }
          BOOL v20 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            uint64_t v19 = *(void *)(v18 + 8 * v20);
            if (v19) {
              goto LABEL_10;
            }
            long long v16 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              uint64_t v19 = *(void *)(v18 + 8 * v16);
              if (v19) {
                goto LABEL_7;
              }
              int64_t v4 = v17 - 1;
              char v21 = v3 + 6;
              while (v17 != v21)
              {
                uint64_t v19 = *(void *)(v18 + 8 * v21++);
                if (v19)
                {
                  long long v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    __n128 result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_A6DA4()
{
  sub_2FCDD0(66);
  v1._uint64_t countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  sub_2FC260(v1);
  v2._object = (void *)0x800000000032E480;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_2FC260(v2);
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v3._object = (void *)0x800000000030F100;
  sub_2FC260(v3);
  swift_bridgeObjectRetain();
  sub_371F4(&qword_400E18);
  v4._uint64_t countAndFlagsBits = sub_2FC400();
  sub_2FC260(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v5._object = (void *)0x800000000030F120;
  sub_2FC260(v5);
  swift_bridgeObjectRetain();
  sub_371F4(&qword_400E20);
  v6._uint64_t countAndFlagsBits = sub_2FC400();
  sub_2FC260(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_A6EE8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_A6F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4((uint64_t *)&unk_400E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A6FB0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_A6FE8()
{
  return sub_A7140((void (*)(void))&_swift_unknownObjectRelease, 40);
}

void sub_A7004(unsigned __int8 *a1)
{
  sub_A2EBC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_A7010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_371F4((uint64_t *)&unk_400E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_A7078(uint64_t a1)
{
}

uint64_t sub_A7080()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_A70B8(uint64_t *a1)
{
  return sub_A4EE4(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_A70C8()
{
  return sub_A7140((void (*)(void))&_swift_release, 32);
}

void sub_A70E4(unsigned __int8 *a1)
{
  sub_A49CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_A70EC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_A7124()
{
  return sub_A7140((void (*)(void))&_swift_release, 32);
}

uint64_t sub_A7140(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 24));

  return _swift_deallocObject(v2, a2, 7);
}

void sub_A719C()
{
}

uint64_t sub_A71A4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_A7204(uint64_t result, uint64_t a2, double a3)
{
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        return result;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          return result;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            return result;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (double *)(*(void *)(result + 56) + 16 * v10);
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation)) {
      ++v11;
    }
    a3 = a3 + *v11;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8) {
    return result;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_A7330(uint64_t a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  int64_t v3 = sub_1161A0(v2);
  swift_bridgeObjectRelease();
  unint64_t v7 = v3;
  sub_A5D0C((uint64_t *)&v7, sub_214298, &qword_400E18, (void (*)(void, void, void))sub_214078);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_116180(v4);
  swift_bridgeObjectRelease();
  unint64_t v7 = v5;
  sub_A5D0C((uint64_t *)&v7, sub_214284, &qword_400E20, (void (*)(void, void, void))sub_214078);
  return a1;
}

uint64_t sub_A7448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_A7490()
{
}

void sub_A7498()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  uint64_t v2 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_viewDocumentMap;
  *(void *)&v1[v2] = [self weakToStrongObjectsMapTable];
  uint64_t v3 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentViewMap;
  *(void *)&v1[v3] = [self strongToWeakObjectsMapTable];
  *(void *)&v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_scrollDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_locationProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = &v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_pendingState];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  uint64_t v5 = &v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginationCompleteSubscription];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_documentSubscriptions] = &_swiftEmptySetSingleton;
  uint64_t v6 = &v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_bookPaginationSubscription];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  unint64_t v7 = &v1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_updateStateCancellable];
  *(_OWORD *)unint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_log;
  if (qword_3FD710 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_2FB8A0();
  uint64_t v10 = sub_60044(v9, (uint64_t)qword_4170B8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(&v1[v8], v10, v9);
  sub_2FCDD0(32);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  v11._uint64_t countAndFlagsBits = sub_2FD3E0();
  sub_2FC260(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 8254;
  v12._object = (void *)0xE200000000000000;
  sub_2FC260(v12);
  v13._uint64_t countAndFlagsBits = 0x646F632874696E69;
  v13._object = (void *)0xEC000000293A7265;
  sub_2FC260(v13);
  v14._object = (void *)0x800000000030F1F0;
  v14._uint64_t countAndFlagsBits = 0xD000000000000019;
  sub_2FC260(v14);

  sub_2FD010();
  __break(1u);
}

uint64_t sub_A7728()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 1;
    *(unsigned char *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling) = 1;
    if ((*(void *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL) == 2)
    {
      uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController);
      if (*(unsigned char *)(v1 + 192) == 1) {
        *(unsigned char *)(v1 + 193) = 1;
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_A77C8(uint64_t result)
{
  if ((result & 1) == 0)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController);
      *(unsigned char *)(v1 + 193) = 0;
      if (*(unsigned char *)(v1 + 192) == 1) {
        BookContentViewController.updateScrollingReadingLoupe()();
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_A7844()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling) == 1)
    {
      *(unsigned char *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling) = 0;
      uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController);
      *(unsigned char *)(v1 + 193) = 0;
      if (*(unsigned char *)(v1 + 192) == 1) {
        BookContentViewController.updateScrollingReadingLoupe()();
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ContentLoader.setIgnorePageTurnGestures(_:)(Swift::Bool a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (id)Strong;
    uint64_t v3 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = *(void *)(v3 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, Swift::Bool, uint64_t, uint64_t))(v4 + 48))(v6, a1, ObjectType, v4);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void ContentLoader.adjustGestures(for:view:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  id v6 = v27;
  if (v27)
  {
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      sub_39F90(0, (unint64_t *)&qword_3FDC50);
      id v9 = [v8 be_textInputChild];
      LOBYTE(v8) = sub_2FCA70();

      if (v8)
      {
        id v10 = [a1 loupeGesture];
        if (v10)
        {
          Swift::String v11 = v10;
          double v12 = 0.25;
          [v10 setMinimumPressDuration:0.25];
          id v13 = v11;
          UIGestureRecognizer.be_allowedTouchTypes.setter((uint64_t)&off_3C1E50);

          Swift::String v14 = (void *)(v3 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
          swift_beginAccess();
          if (*v14)
          {
            uint64_t v15 = v14[1];
            uint64_t ObjectType = swift_getObjectType();
            char v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 24);
            swift_unknownObjectRetain();
            uint64_t v18 = v17(ObjectType, v15);
            swift_unknownObjectRelease();
            double v12 = 0.5;
            if (v18 != 2)
            {
              if (v18 == 3) {
                double v12 = 0.5;
              }
              else {
                double v12 = 0.25;
              }
            }
          }
          [v13 setBe_gestureDelay:v12];
          [v13 addTarget:v3 action:"handleLoupeGesture:"];
        }
        uint64_t v19 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusLongPressRecognizer;
        if (!*(void *)(v3 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusLongPressRecognizer))
        {
          id v20 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v3 action:"handleStylusGesture:"];
          [v20 setDelegate:v3];
          id v21 = v20;
          UIGestureRecognizer.be_allowedTouchTypes.setter((uint64_t)&off_3C1E78);

          [a2 addGestureRecognizer:v21];
          unint64_t v22 = *(void **)(v3 + v19);
          *(void *)(v3 + v19) = v21;
        }
        uint64_t v23 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusPanRecognizer;
        if (!*(void *)(v3 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusPanRecognizer))
        {
          id v24 = [objc_allocWithZone((Class)UIPanGestureRecognizer) initWithTarget:v3 action:"handleStylusGesture:"];
          [v24 setDelegate:v3];
          id v25 = v24;
          UIGestureRecognizer.be_allowedTouchTypes.setter((uint64_t)&off_3C1EA0);

          [a2 addGestureRecognizer:v25];
          Swift::Int v26 = *(void **)(v3 + v23);
          *(void *)(v3 + v23) = v25;

          id v6 = v26;
        }
      }
    }
  }
}

void sub_A7DE0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v10)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      id v4 = [a1 state];
      id v5 = [v3 be_textInputChild];
      [a1 locationInView:v5];
      double v7 = v6;
      double v9 = v8;

      sub_A7EF8((uint64_t)v4, v3, 0, v7, v9);
    }
  }
}

void sub_A7EF8(uint64_t a1, void *a2, char a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_8296C();
  if (v13)
  {
    oslog = sub_2FB880();
    os_log_type_t v21 = sub_2FC7B0();
    if (os_log_type_enabled(oslog, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v22 = 0;
      _os_log_impl(&def_7BFC0, oslog, v21, "Attempted to handle text interaction with no document or ordinal. Ignoring.", v22, 2u);
      swift_slowDealloc();
    }
LABEL_10:

    return;
  }
  uint64_t v14 = v12;
  if ((unint64_t)(a1 - 4) < 2)
  {
    *(unsigned char *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) = 0;
    uint64_t v23 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
    [*(id *)(v6 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
    id v24 = *(void **)(v6 + v23);
    *(void *)(v6 + v23) = 0;

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    oslog = Strong;
    uint64_t v26 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v27 = *(void *)(v26 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v27 + 32))(oslog, v14, ObjectType, v27);
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  if (a1 == 1)
  {
    double v29 = sub_A8700(a2, a4, a5);
    double v31 = v30;
    [a2 be_clearSelection];
    *(unsigned char *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) = 1;
    uint64_t v32 = (double *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint);
    double *v32 = v29;
    v32[1] = v31;
    if (a3)
    {
      uint64_t v33 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
      [*(id *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
      uint64_t v34 = *(void **)(v5 + v33);
      *(void *)(v5 + v33) = 0;

      uint64_t v35 = (void *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_currentLayoutProvider);
      swift_beginAccess();
      if (*v35)
      {
        uint64_t v36 = v35[1];
        uint64_t v37 = swift_getObjectType();
        uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
        swift_unknownObjectRetain();
        uint64_t v39 = v38(v37, v36);
        swift_unknownObjectRelease();
        double v40 = 0.5;
        if (v39 != 2)
        {
          if (v39 == 3) {
            double v40 = 0.5;
          }
          else {
            double v40 = 0.25;
          }
        }
      }
      else
      {
        double v40 = 0.25;
      }
      id v43 = [self scheduledTimerWithTimeInterval:v5 target:"stylusTimerFired:" selector:0 userInfo:0 repeats:v40];
      uint64_t v44 = *(void **)(v5 + v33);
      *(void *)(v5 + v33) = v43;
    }
    id v45 = [a2 be_textInputChild];
    uint64_t v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v46;
    *(void *)(v47 + 24) = a2;
    aBlock[4] = sub_A9190;
    aBlock[5] = v47;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_5C418;
    aBlock[3] = &unk_3C6190;
    char v48 = _Block_copy(aBlock);
    id v49 = a2;
    swift_release();
    [v45 selectTextWithGranularity:1 atPoint:v48 completionHandler:v29, v31];
    _Block_release(v48);

    sub_A8858(v6, a3 & 1, v49, v14, v29, v31);
  }
  else
  {
    if (a1 == 3)
    {
      *(unsigned char *)(v5 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) = 0;
      uint64_t v15 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
      [*(id *)(v6 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
      long long v16 = *(void **)(v6 + v15);
      *(void *)(v6 + v15) = 0;

      uint64_t v17 = swift_unknownObjectWeakLoadStrong();
      if (!v17) {
        return;
      }
      oslog = v17;
      uint64_t v18 = v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v19 = *(void *)(v18 + 8);
        uint64_t v20 = swift_getObjectType();
        (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v19 + 24))(oslog, v14, v20, v19);
LABEL_16:

        swift_unknownObjectRelease();
        return;
      }
      goto LABEL_10;
    }
    double v41 = sub_A8700(a2, a4, a5);
    sub_A8858(v5, a3 & 1, a2, v14, v41, v42);
  }
}

void sub_A8548(void *a1)
{
  uint64_t v1 = (char *)[a1 state];
  if ((unint64_t)(v1 - 3) >= 3)
  {
    if (v1 != (unsigned char *)&def_7BFC0 + 1) {
      return;
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    id v10 = (id)Strong;
    uint64_t v7 = Strong + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, ObjectType, v8);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (!v2) {
      return;
    }
    id v10 = (id)v2;
    uint64_t v3 = v2 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = *(void *)(v3 + 8);
      uint64_t v5 = swift_getObjectType();
      (*(void (**)(id, void, uint64_t, uint64_t))(v4 + 48))(v10, 0, v5, v4);
LABEL_9:

      swift_unknownObjectRelease();
      return;
    }
  }
}

double sub_A8700(void *a1, double a2, double a3)
{
  [a1 bounds];
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  id v14 = [a1 be_textInputChild];
  [v14 convertPoint:a1 toCoordinateSpace:a2];
  double v16 = v15;
  double v18 = v17;

  v28.origin.double x = v7;
  v28.origin.CGFloat y = v9;
  v28.size.CGFloat width = v11;
  v28.size.CGFloat height = v13;
  double MinX = CGRectGetMinX(v28);
  if (v16 <= MinX) {
    double v16 = MinX;
  }
  v29.origin.double x = v7;
  v29.origin.CGFloat y = v9;
  v29.size.CGFloat width = v11;
  v29.size.CGFloat height = v13;
  double MaxX = CGRectGetMaxX(v29);
  if (MaxX < v16) {
    double v16 = MaxX;
  }
  v30.origin.double x = v7;
  v30.origin.CGFloat y = v9;
  v30.size.CGFloat width = v11;
  v30.size.CGFloat height = v13;
  double MinY = CGRectGetMinY(v30);
  if (v18 <= MinY) {
    double v18 = MinY;
  }
  v31.origin.double x = v7;
  v31.origin.CGFloat y = v9;
  v31.size.CGFloat width = v11;
  v31.size.CGFloat height = v13;
  double MaxY = CGRectGetMaxY(v31);
  if (MaxY >= v18) {
    double v23 = v18;
  }
  else {
    double v23 = MaxY;
  }
  id v24 = [a1 be_textInputChild];
  [a1 convertPoint:v24 toCoordinateSpace:v16];
  double v26 = v25;

  return v26;
}

void sub_A8858(uint64_t a1, char a2, void *a3, uint64_t a4, double a5, double a6)
{
  if ((a2 & 1) != 0
    && (a5 - *(double *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint))
     * (a5 - *(double *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint))
     + (a6 - *(double *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint + 8))
     * (a6 - *(double *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusStartPoint + 8)) < 113.2096)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) = 0;
    uint64_t v11 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
    [*(id *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
    double v12 = *(void **)(a1 + v11);
    *(void *)(a1 + v11) = 0;
  }
  else
  {
    uint64_t v13 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
    [*(id *)(a1 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
    id v14 = *(void **)(a1 + v13);
    *(void *)(a1 + v13) = 0;

    if (objc_msgSend(a3, "be_hasSelectablePositionAtPoint:", a5, a6))
    {
      id v15 = [a3 be_textInputChild];
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v16;
      *(void *)(v17 + 24) = a4;
      *(double *)(v17 + 32) = a5;
      *(double *)(v17 + 40) = a6;
      *(void *)(v17 + 48) = a3;
      v20[4] = sub_A91F0;
      void v20[5] = v17;
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 1107296256;
      v20[2] = sub_5C45C;
      v20[3] = &unk_3C61E0;
      double v18 = _Block_copy(v20);
      id v19 = a3;
      swift_release();
      [v15 updateSelectionWithExtentPoint:1 withBoundary:v18 completionHandler:a5, a6];
      _Block_release(v18);
    }
  }
}

void sub_A8A88(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) == 1)
    {
      uint64_t v12 = swift_unknownObjectWeakLoadStrong();
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        uint64_t v14 = v12 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v15 = *(void *)(v14 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v15 + 40))(v13, a5, a6, ObjectType, v15, a1, a2);

          swift_unknownObjectRelease();
          return;
        }
      }
    }
  }
}

void sub_A8BA4(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v4 = Strong[OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState];

    if (v4 == 2) {
      [a2 be_selectForWebView:0];
    }
  }
}

Swift::Bool __swiftcall ContentLoader.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  uint64_t v3 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (!v23) {
    goto LABEL_12;
  }
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6 || (uint64_t v7 = v6, (Strong = swift_unknownObjectWeakLoadStrong()) == 0))
  {

LABEL_12:
    char v21 = 1;
    return v21 & 1;
  }
  CGFloat v9 = (char *)Strong;
  double v10 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusLongPressRecognizer);
  if (!v10
    || (sub_39F90(0, (unint64_t *)&qword_406D10),
        id v11 = v10,
        uint64_t v12 = _.super.isa,
        char v13 = sub_2FCA70(),
        v12,
        v11,
        (v13 & 1) == 0))
  {
    uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusPanRecognizer);
    if (!v14) {
      goto LABEL_11;
    }
    sub_39F90(0, (unint64_t *)&qword_406D10);
    uint64_t v15 = _.super.isa;
    id v16 = v14;
    char v17 = sub_2FCA70();

    if ((v17 & 1) == 0) {
      goto LABEL_11;
    }
  }
  double v18 = &v9[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler];
  if (!swift_unknownObjectWeakLoadStrong())
  {
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v19 = *((void *)v18 + 1);
  uint64_t ObjectType = swift_getObjectType();
  char v21 = (*(uint64_t (**)(char *, Class, Class, uint64_t, uint64_t, uint64_t))(v19 + 16))(v9, _.super.isa, shouldReceive.super.isa, v7, ObjectType, v19);

  swift_unknownObjectRelease();
  return v21 & 1;
}

void ContentLoader._performHighlighterAction(withGestureState:location:)(uint64_t a1, double a2, double a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  if (v7)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6) {
      sub_A7EF8(a1, v6, 1, a2, a3);
    }
  }
}

void sub_A9028()
{
  uint64_t v1 = OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusTimer) invalidate];
  uint64_t v2 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) != 2)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_stylusState) = 2;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2FBBA0();
    swift_release();
    swift_release();
    if (v4)
    {
      self;
      uint64_t v3 = (void *)swift_dynamicCastObjCClass();
      if (v3) {
        [v3 be_selectForWebView:0];
      }
    }
  }
}

uint64_t sub_A9118()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_A9150()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_A9190()
{
  sub_A8BA4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_A9198(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_A91A8()
{
  return swift_release();
}

uint64_t sub_A91B0()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_A91F0(uint64_t a1)
{
  sub_A8A88(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 48));
}

uint64_t ElementEntityType.rawValue.getter()
{
  uint64_t result = 0x726F68636E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 2:
      uint64_t result = 0x6261646E61707865;
      break;
    case 3:
      uint64_t result = 0x6867696C68676968;
      break;
    case 4:
      uint64_t result = 0x616964656DLL;
      break;
    case 5:
      uint64_t result = 0x79726F74736968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ElementEntityType.concreteType()()
{
  switch(*v0)
  {
    case 1:
      uint64_t v1 = type metadata accessor for BookmarkPaginationEntity(0);
      uint64_t v2 = (unint64_t *)&unk_4010D0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for BookmarkPaginationEntity;
      break;
    case 2:
      uint64_t v1 = type metadata accessor for ExpandableContentPaginationEntity(0);
      uint64_t v2 = (unint64_t *)&unk_4010C8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for ExpandableContentPaginationEntity;
      break;
    case 3:
      uint64_t v1 = type metadata accessor for HighlightPaginationEntity(0);
      uint64_t v2 = (unint64_t *)&unk_4010C0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for HighlightPaginationEntity;
      break;
    case 4:
      uint64_t v1 = type metadata accessor for MediaElementPaginationEntity(0);
      uint64_t v2 = (unint64_t *)&unk_4010B8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for MediaElementPaginationEntity;
      break;
    case 5:
      uint64_t v1 = type metadata accessor for HistoryPaginationEntity(0);
      uint64_t v2 = (unint64_t *)&unk_4010B0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for HistoryPaginationEntity;
      break;
    default:
      uint64_t v1 = type metadata accessor for AnchorPaginationEntity(0);
      uint64_t v2 = (unint64_t *)&unk_4010D8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for AnchorPaginationEntity;
      break;
  }
  sub_A9424(v2, v3);
  return v1;
}

uint64_t sub_A9424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BookEPUB::ElementEntityType_optional __swiftcall ElementEntityType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawCFDictionaryRef Value = &off_3C1EC8;
  v8._object = object;
  unint64_t v5 = sub_2FD0A0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 6;
  if (v5 < 6) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t sub_A94D4(unsigned __int8 *a1, char *a2)
{
  return sub_47594(*a1, *a2);
}

Swift::Int sub_A94E0()
{
  return sub_1B7B28();
}

uint64_t sub_A94E8()
{
  sub_2FC230();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_A95E4()
{
  return sub_1B7FA4();
}

BookEPUB::ElementEntityType_optional sub_A95EC(Swift::String *a1)
{
  return ElementEntityType.init(rawValue:)(*a1);
}

void sub_A95F8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x726F68636E61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6B72616D6B6F6F62;
      goto LABEL_3;
    case 2:
      *a1 = 0x6261646E61707865;
      a1[1] = 0xEA0000000000656CLL;
      break;
    case 3:
      *a1 = 0x6867696C68676968;
      a1[1] = 0xE900000000000074;
      break;
    case 4:
      *a1 = 0x616964656DLL;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x79726F74736968;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_A96D4()
{
  return sub_2FC3B0();
}

uint64_t sub_A9734()
{
  return sub_2FC3A0();
}

uint64_t ElementEntity.startingPageOffset.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 56))();
  uint64_t v3 = sub_A97DC(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_A97DC(uint64_t result)
{
  uint64_t v1 = result + 56;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v17 = *(void *)(result + 64);
    if (v17)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v17 = *(void *)(result + 72);
      if (v17)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v17 = *(void *)(result + 80);
        if (v17)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v17 = *(void *)(result + 88);
          if (v17)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v17 = *(void *)(result + 96);
            if (!v17) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 48);
  BookEPUB::ElementEntityType_optional result = *(void *)(v10 + 8 * v7);
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_7:
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    if (v13 < result) {
      BookEPUB::ElementEntityType_optional result = v13;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 1;
  if (v14 + 1 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 2;
  if (v14 + 2 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 3;
  if (v14 + 3 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v15 = *(void *)(v1 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v18 = 0;
  uint64_t v19 = 6;
  if (v9 > 6) {
    uint64_t v19 = v9;
  }
  uint64_t v20 = v19 - 6;
  while (v20 != v18)
  {
    unint64_t v17 = *(void *)(result + 104 + 8 * v18++);
    if (v17)
    {
      uint64_t v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

unint64_t sub_A99D8()
{
  unint64_t result = qword_4010E0;
  if (!qword_4010E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4010E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ElementEntityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA9AF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ElementEntityType()
{
  return &type metadata for ElementEntityType;
}

uint64_t dispatch thunk of ElementEntity.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ElementEntity.rects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ElementEntity.boundingRect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ElementEntity.entityType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ElementEntity.pageOffsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

unint64_t sub_A9B94()
{
  unint64_t result = qword_4010E8;
  if (!qword_4010E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4010E8);
  }
  return result;
}

uint64_t BEBookLayoutMode.description.getter(uint64_t a1)
{
  uint64_t result = 0x6465767265736572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6465676170;
      break;
    case 2:
      uint64_t result = 0x6C61636974726576;
      break;
    case 3:
      uint64_t result = 0x746E6F7A69726F68;
      break;
    default:
      type metadata accessor for BookLayoutMode(0);
      sub_2FD240();
      __break(1u);
      JUMPOUT(0xA9CA8);
  }
  return result;
}

uint64_t sub_A9CB8()
{
  uint64_t result = 0x6465767265736572;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6465676170;
      break;
    case 2:
      uint64_t result = 0x6C61636974726576;
      break;
    case 3:
      uint64_t result = 0x746E6F7A69726F68;
      break;
    default:
      sub_2FD240();
      __break(1u);
      JUMPOUT(0xA9D70);
  }
  return result;
}

uint64_t BEContentCleanupJSOptions.init<A, B>(layoutProvider:bookEntity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_AA204(a1, a2, a3, a4, a5, a6);
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t BEContentCleanupJSOptions.init<A>(bookEntity:theme:useNewTextStyling:readingMode:)(uint64_t a1, char *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_A9E5C(a1, a2, a3, a4, a5, a6);
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v9;
}

void sub_A9E5C(uint64_t a1, char *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a2;
  BOOL v39 = *a2 != 0;
  uint64_t v37 = *((void *)a2 + 1);
  unint64_t v38 = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  uint64_t v9 = *((void *)a2 + 4);
  uint64_t v11 = *((void *)a2 + 5);
  uint64_t v12 = *((void *)a2 + 6);
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 104))(a5, a6);
  uint64_t v14 = 2;
  if ((v13 - 1) < 3u) {
    uint64_t v14 = 3;
  }
  uint64_t v42 = v14;
  uint64_t v33 = v9;
  char v15 = v12;
  uint64_t v34 = v11;
  BookThemeEntity.fontFamily.getter();
  NSString v16 = sub_2FC140();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a6 + 192))(a5, a6);
  NSString v17 = sub_2FC140();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a6 + 184))(a5, a6);
  NSString v41 = sub_2FC140();
  swift_bridgeObjectRelease();
  char v40 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 168))(a5, a6);
  char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 256))(a5, a6);
  uint64_t v19 = (v38 >> 8) & 1;
  if (!v37) {
    LODWORD(v19) = v39;
  }
  if (v19 == 1)
  {
    if (v37)
    {
      if (v15) {
        uint64_t v20 = 1;
      }
      else {
        uint64_t v20 = 2;
      }
      uint64_t v21 = 2 * (v38 & 1);
      BOOL v22 = (v10 & 0x7FFFFFFFFFFFFFFFLL) != 0;
      uint64_t v23 = a4;
      char v24 = v18;
      double v25 = v16;
      if ((v38 & 0x100) == 0)
      {
        swift_bridgeObjectRelease();
        BOOL v26 = 0;
        BOOL v27 = 0;
LABEL_26:
        char v29 = a3;
        goto LABEL_30;
      }
LABEL_25:
      BOOL v27 = (v33 & 0x7FFFFFFFFFFFFFFFLL) != 0;
      swift_bridgeObjectRelease();
      BOOL v26 = (v34 & 0x7FFFFFFFFFFFFFFFLL) != 0;
      goto LABEL_26;
    }
    uint64_t v23 = a4;
    if (v8 > 4) {
      uint64_t v20 = 1;
    }
    else {
      uint64_t v20 = qword_32E7A0[v8];
    }
    char v29 = a3;
    char v24 = v18;
    double v25 = v16;
    uint64_t v21 = 2 * (v8 == 3);
    if (!v8) {
      goto LABEL_29;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    BOOL v26 = 0;
    BOOL v27 = 0;
    BOOL v22 = 1;
    goto LABEL_30;
  }
  BOOL v28 = v8 == 3;
  if (v37) {
    BOOL v28 = v38;
  }
  if (v28) {
    uint64_t v21 = 2;
  }
  else {
    uint64_t v21 = 0;
  }
  if (!v37)
  {
    char v24 = v18;
    double v25 = v16;
    uint64_t v20 = 0;
    char v29 = a3;
    uint64_t v23 = a4;
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  uint64_t v20 = 0;
  uint64_t v23 = a4;
  char v24 = v18;
  double v25 = v16;
  if ((v38 & 0x100) != 0)
  {
    BOOL v22 = 0;
    goto LABEL_25;
  }
  char v29 = a3;
LABEL_29:
  swift_bridgeObjectRelease();
  BOOL v26 = 0;
  BOOL v27 = 0;
  BOOL v22 = 0;
LABEL_30:
  BYTE2(v32) = v26;
  BYTE1(v32) = v27;
  LOBYTE(v32) = v22;
  LOBYTE(v31) = v24 & 1;
  id v30 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithMode:v42 useNewTextStyling:(v29 & 1) fontFamily:v25 language:v17 respectImageSizeClass:(v41 & 1) hasBuiltInFonts:(v31) justification:v20 fontWeight:v21 overrideLineHeight:v23 overrideLetterSpacing:v21 overrideWordSpacing:v23 readingMode:v23];

  if (!v30) {
    __break(1u);
  }
}

void sub_AA204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 160))(&v19, a3, a5);
  __int16 v13 = v19;
  char v14 = BYTE2(v19);
  long long v15 = v20;
  long long v16 = v21;
  long long v17 = v22;
  uint64_t v18 = v23;
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 152))(a3, a5);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
  sub_A9E5C(a2, (char *)&v13, v11 & 1, v12, a4, a6);
}

double UIEdgeInsets.adding(insets:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

void sub_AA334(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 fontsByLanguage];
  if (v3)
  {
    unsigned int v4 = v3;
    uint64_t v5 = sub_2FC080();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
}

void sub_AA3A8(void *a1, void **a2)
{
  char v2 = *a2;
  if (*a1) {
    v3.super.Class isa = sub_2FC060().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  Class isa = v3.super.isa;
  [v2 setFontsByLanguage:];
}

void sub_AA424(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 identifier];
  uint64_t v4 = sub_2FC180();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id BookTheme.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id BookTheme.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for BookTheme();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for BookTheme()
{
  return self;
}

id BookTheme.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookTheme();
  return [super dealloc];
}

const char *sub_AA5E8()
{
  return "multipleColumnMode";
}

id sub_AA5F4@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = [*a1 multipleColumnMode];
  *a2 = (_WORD)result;
  return result;
}

id sub_AA628(__int16 *a1, id *a2)
{
  return [*a2 setMultipleColumnMode:*a1];
}

const char *sub_AA63C()
{
  return "fontsByLanguage";
}

const char *sub_AA650()
{
  return "hasCustomLayout";
}

id sub_AA65C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 hasCustomLayout];
  *a2 = (_BYTE)result;
  return result;
}

id sub_AA690(unsigned __int8 *a1, id *a2)
{
  return [*a2 setHasCustomLayout:*a1];
}

const char *sub_AA6A4()
{
  return "identifier";
}

void sub_AA6B4(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = sub_2FC140();
  [v2 setIdentifier:v3];
}

const char *sub_AA718()
{
  return "isFontBolded";
}

id sub_AA724@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isFontBolded];
  *a2 = (_BYTE)result;
  return result;
}

id sub_AA758(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsFontBolded:*a1];
}

const char *sub_AA76C()
{
  return "justify";
}

id sub_AA778@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 justify];
  *a2 = (_BYTE)result;
  return result;
}

id sub_AA7AC(unsigned __int8 *a1, id *a2)
{
  return [*a2 setJustify:*a1];
}

const char *sub_AA7C0()
{
  return "letterSpacing";
}

id sub_AA7CC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 letterSpacing];
  *a2 = v4;
  return result;
}

id sub_AA800(double *a1, id *a2)
{
  return [*a2 setLetterSpacing:*a1];
}

const char *sub_AA814()
{
  return "lineHeight";
}

id sub_AA820@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 lineHeight];
  *a2 = v4;
  return result;
}

id sub_AA854(double *a1, id *a2)
{
  return [*a2 setLineHeight:*a1];
}

const char *sub_AA868()
{
  return "wordSpacing";
}

id sub_AA874@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 wordSpacing];
  *a2 = v4;
  return result;
}

id sub_AA8A8(double *a1, id *a2)
{
  return [*a2 setWordSpacing:*a1];
}

const char *sub_AA8BC()
{
  return "marginAdjustment";
}

id sub_AA8C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 marginAdjustment];
  *a2 = v4;
  return result;
}

id sub_AA8FC(double *a1, id *a2)
{
  return [*a2 setMarginAdjustment:*a1];
}

uint64_t sub_AA910()
{
  uint64_t v0 = sub_2FB8A0();
  sub_60A50(v0, qword_401120);
  sub_60044(v0, (uint64_t)qword_401120);
  sub_39F90(0, (unint64_t *)&qword_4000C0);
  sub_2FCBE0();
  return sub_2FB8B0();
}

uint64_t sub_AA9B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2FBBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_AAA34()
{
  return sub_2FBBB0();
}

void (*sub_AAAA4(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  _OWORD v2[5] = swift_getKeyPath();
  unsigned char v2[6] = sub_2FBB90();
  return sub_408A4;
}

uint64_t sub_AAB30()
{
  return swift_endAccess();
}

uint64_t sub_AAB98(uint64_t a1)
{
  uint64_t v2 = sub_371F4(&qword_400338);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  sub_371F4((uint64_t *)&unk_401190);
  sub_2FBB80();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_AAD0C()
{
  return swift_endAccess();
}

uint64_t sub_AAD70(uint64_t a1)
{
  uint64_t v2 = sub_371F4(&qword_400338);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  sub_371F4((uint64_t *)&unk_401190);
  sub_2FBB80();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_AAE9C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_371F4(&qword_400338);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8BookEPUB18StylesheetProvider__stylesheetSet;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_371F4((uint64_t *)&unk_401190);
  sub_2FBB70();
  swift_endAccess();
  return sub_40DD0;
}

uint64_t sub_AAFAC()
{
  return swift_unknownObjectRetain();
}

double StylesheetProvider.Layout.contentSize.getter()
{
  return *(double *)(v0 + 16);
}

void StylesheetProvider.Layout.contentSize.setter(double a1, double a2)
{
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t ContentLayoutProvider.bookType.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t StylesheetProvider.Layout.useNewTextStyling.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*StylesheetProvider.Layout.useNewTextStyling.modify())()
{
  return address(of:);
}

uint64_t StylesheetProvider.Layout.init(key:contentSize:useNewTextStyling:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(unsigned char *)(a4 + 32) = a3;
  return result;
}

void sub_AB010(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  long long v4 = *((_OWORD *)a1 + 1);
  char v5 = *((unsigned char *)a1 + 32);
  char v6 = *((unsigned char *)a1 + 40);
  char v7 = *((unsigned char *)a1 + 41);
  char v8 = *((unsigned char *)a1 + 42);
  long long v9 = *((_OWORD *)a1 + 3);
  long long v10 = *((_OWORD *)a1 + 4);
  long long v11 = *((_OWORD *)a1 + 5);
  uint64_t v12 = a1[12];
  uint64_t v13 = a1[13];
  uint64_t v14 = v1 + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider_state;
  if (*(void *)(v1 + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider_state + 104) != v13)
  {
    uint64_t v27 = a1[12];
    char v28 = *((unsigned char *)a1 + 42);
    long long v29 = *((_OWORD *)a1 + 5);
    long long v30 = *((_OWORD *)a1 + 4);
    long long v31 = *((_OWORD *)a1 + 3);
    long long v32 = *((_OWORD *)a1 + 1);
    if (qword_3FD720 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_2FB8A0();
    sub_60044(v15, (uint64_t)qword_401120);
    swift_retain();
    long long v16 = sub_2FB880();
    os_log_type_t v17 = sub_2FC7A0();
    if (os_log_type_enabled(v16, v17))
    {
      char v26 = v7;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134217984;
      v43[0] = *(void *)(v14 + 104);
      sub_2FCC70();
      swift_release();
      _os_log_impl(&def_7BFC0, v16, v17, "got new filter mode: %lu", v18, 0xCu);
      char v7 = v26;
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    long long v9 = v31;
    long long v4 = v32;
    long long v11 = v29;
    long long v10 = v30;
    char v8 = v28;
    uint64_t v12 = v27;
  }
  v43[0] = v2;
  v43[1] = v3;
  long long v44 = v4;
  char v45 = v5;
  char v46 = v6;
  char v47 = v7;
  char v48 = v8;
  long long v49 = v9;
  long long v50 = v10;
  long long v51 = v11;
  uint64_t v52 = v12;
  uint64_t v53 = v13;
  uint64_t v19 = *(void *)(v14 + 8);
  char v20 = *(unsigned char *)(v14 + 32);
  char v21 = *(unsigned char *)(v14 + 40);
  char v22 = *(unsigned char *)(v14 + 41);
  char v23 = *(unsigned char *)(v14 + 42);
  v33[0] = *(void *)v14;
  v33[1] = v19;
  long long v34 = *(_OWORD *)(v14 + 16);
  char v35 = v20;
  char v36 = v21;
  char v37 = v22;
  char v38 = v23;
  long long v24 = *(_OWORD *)(v14 + 64);
  long long v39 = *(_OWORD *)(v14 + 48);
  long long v40 = v24;
  long long v25 = *(_OWORD *)(v14 + 96);
  long long v41 = *(_OWORD *)(v14 + 80);
  long long v42 = v25;
  if ((sub_AD8F0((uint64_t)v43, (uint64_t)v33) & 1) == 0) {
    sub_AB8AC();
  }
}

uint64_t StylesheetProvider.__allocating_init<A, B, C>(bookEntity:imageFilterMode:layoutProvider:styleManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_allocObject();
  uint64_t v17 = sub_AED04(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v17;
}

uint64_t StylesheetProvider.init<A, B, C>(bookEntity:imageFilterMode:layoutProvider:styleManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = sub_AED04(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v11;
}

__n128 sub_AB3C8@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_unknownObjectRetain();
  sub_ABC9C(a2, a3, (uint64_t)&v19);
  uint64_t v8 = v19;
  __n128 v10 = v20;
  uint64_t v9 = v21;
  char v11 = BYTE8(v21);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 160))(&v19, a2, a3);
  swift_unknownObjectRelease();
  char v12 = v19;
  char v13 = BYTE1(v19);
  char v14 = BYTE2(v19);
  uint64_t v15 = v23;
  __n128 result = v20;
  long long v17 = v21;
  long long v18 = v22;
  *(void *)a4 = v8;
  *(__n128 *)(a4 + 8) = v10;
  *(void *)(a4 + 24) = v9;
  *(unsigned char *)(a4 + 32) = v11;
  *(unsigned char *)(a4 + 40) = v12;
  *(unsigned char *)(a4 + 41) = v13;
  *(unsigned char *)(a4 + 42) = v14;
  *(__n128 *)(a4 + 48) = result;
  *(_OWORD *)(a4 + 64) = v17;
  *(_OWORD *)(a4 + 80) = v18;
  *(void *)(a4 + 96) = v15;
  *(void *)(a4 + 104) = a1;
  return result;
}

uint64_t sub_AB4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3 + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider_state;
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider_state + 104);
  swift_unknownObjectRetain();
  sub_AB3C8(v7, a2, a3, (uint64_t)v40);
  uint64_t v8 = v40[1];
  char v9 = v42;
  char v10 = v43;
  char v11 = v44;
  char v12 = v45;
  uint64_t v13 = *(void *)v6;
  uint64_t v14 = *(void *)(v6 + 8);
  char v15 = *(unsigned char *)(v6 + 32);
  char v16 = *(unsigned char *)(v6 + 40);
  char v17 = *(unsigned char *)(v6 + 41);
  char v18 = *(unsigned char *)(v6 + 42);
  *(void *)uint64_t v6 = v40[0];
  *(void *)(v6 + 8) = v8;
  long long v19 = v41;
  *(unsigned char *)(v6 + 32) = v9;
  *(unsigned char *)(v6 + 40) = v10;
  *(unsigned char *)(v6 + 41) = v11;
  *(unsigned char *)(v6 + 42) = v12;
  long long v20 = v46;
  long long v21 = v47;
  long long v22 = v48;
  long long v23 = v49;
  v30[0] = v13;
  v30[1] = v14;
  long long v24 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)(v6 + 16) = v19;
  long long v31 = v24;
  char v32 = v15;
  char v33 = v16;
  char v34 = v17;
  char v35 = v18;
  long long v25 = *(_OWORD *)(v6 + 48);
  long long v26 = *(_OWORD *)(v6 + 64);
  *(_OWORD *)(v6 + 48) = v20;
  *(_OWORD *)(v6 + 64) = v21;
  long long v36 = v25;
  long long v37 = v26;
  long long v27 = *(_OWORD *)(v6 + 80);
  long long v28 = *(_OWORD *)(v6 + 96);
  *(_OWORD *)(v6 + 80) = v22;
  *(_OWORD *)(v6 + 96) = v23;
  long long v38 = v27;
  long long v39 = v28;
  sub_AB010(v30);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}