id sub_51B0(uint64_t a1)
{
  void *v2;
  uint64_t vars8;

  [*(id *)(a1 + 32) p_teardownPlayerIsTransferringToExpanded:0];
  v2 = *(void **)(a1 + 32);

  return [v2 p_stopAndInvalidate];
}

void sub_54B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_54D0(uint64_t a1)
{
  [*(id *)(a1 + 32) setContents:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setRemovePosterLayer:0];
}

id sub_5E80(uint64_t a1)
{
  return [*(id *)(a1 + 32) setOpacity:0.0];
}

id sub_5FE4(uint64_t a1, double a2)
{
  LODWORD(a2) = 1.0;
  return [*(id *)(a1 + 32) setOpacity:a2];
}

void sub_6904(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) layout];
  [v2 invalidate];

  LODWORD(v2) = UIAccessibilityLayoutChangedNotification;
  id v6 = [*(id *)(a1 + 32) moviePlayerViewController];
  v3 = [v6 view];
  v4 = [v3 _accessibleSubviews];
  v5 = [v4 firstObject];
  UIAccessibilityPostNotification((UIAccessibilityNotifications)v2, v5);
}

void sub_6C20(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) removePosterLayer];
  v3 = (void *)v2;
  if (v2) {
    (*(void (**)(uint64_t))(v2 + 16))(v2);
  }

  id v4 = [*(id *)(a1 + 32) autoplayConfig];
  [v4 enabled];
}

void sub_72EC(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) moviePlayerViewController];
  v3 = [v2 view];
  id v4 = [v3 subviews];

  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        [*(id *)(*((void *)&v12 + 1) + 8 * (void)v8) setBackgroundColor:*(void *)(a1 + 40)];
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  uint64_t v9 = *(void *)(a1 + 40);
  v10 = [*(id *)(a1 + 32) moviePlayerViewController];
  v11 = [v10 view];
  [v11 setBackgroundColor:v9];
}

void sub_78AC(uint64_t a1)
{
  [*(id *)(a1 + 32) setMoviePlayerControllerIsLoaded:1];
  uint64_t v2 = [*(id *)(a1 + 32) moviePlayerViewController];
  v3 = [v2 player];
  [v3 play];

  id v4 = [*(id *)(a1 + 32) layout];
  [v4 invalidate];
}

id sub_8FA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_positionViewsForEditing:*(unsigned __int8 *)(*(void *)(a1 + 32) + 8)];
}

id sub_B540(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"p_subAnimationEnded" withObject:0 afterDelay:0.0];
}

id sub_DDA4(uint64_t a1)
{
  id result = [UIApp activeInterfaceOrientation];
  *(void *)(*(void *)(a1 + 32) + 560) = result;
  return result;
}

id sub_E678(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_E6FC;
  v4[3] = &unk_456E38;
  long long v5 = v1;
  return [v2 syncPerformBlock:v4];
}

id sub_E6FC(uint64_t a1)
{
  long long v1 = *(void **)(*(void *)(a1 + 32) + 632);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_E780;
  v3[3] = &unk_456E10;
  v3[4] = *(void *)(a1 + 40);
  return [v1 enumeratePageHostsUsingBlock:v3];
}

id sub_E780(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 containerView];

  return [v3 setBackgroundColor:v2];
}

id sub_F0E8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) scrubberCallout];

  return [v1 setAlpha:0.0];
}

id sub_F1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_F258;
  v5[3] = &unk_456E88;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_F258(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_F2DC;
  v4[3] = &unk_456E60;
  long long v5 = v1;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_F2DC(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_F424(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_F4A0;
  v5[3] = &unk_456E88;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_F4A0(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_F524;
  v4[3] = &unk_456E60;
  long long v5 = v1;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_F524(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_FBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_FC24;
  v5[3] = &unk_456E88;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

char *sub_FC24(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 32) + 632);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_FD54;
  v6[3] = &unk_456E60;
  long long v7 = v2;
  [v3 enumeratePageHostsUsingBlock:v6];
  if ([*(id *)(a1 + 32) leftOverscrollView]
    && ![*(id *)(a1 + 32) currentRelativePageIndex])
  {
    (*(void (**)(void, id, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), [*(id *)(a1 + 32) leftOverscrollView], -1);
  }
  id result = (char *)[*(id *)(a1 + 32) rightOverscrollView];
  if (result)
  {
    long long v5 = (char *)[*(id *)(a1 + 32) currentRelativePageIndex];
    id result = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "pageCount");
    if (v5 == result - 1) {
      return (char *)(*(uint64_t (**)(void, id, id))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), [*(id *)(a1 + 32) rightOverscrollView], objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "pageCount"));
    }
  }
  return result;
}

uint64_t sub_FD54(uint64_t a1, void *a2)
{
  [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_FFD4(uint64_t a1)
{
  long long v2 = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "relativePageRangeForCanvasRect:pad:", 0, *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  long long v5 = &v2[v4];
  if (v2 != (char *)0x7FFFFFFFFFFFFFFFLL && v2 < v5)
  {
    long long v7 = v2;
    *(void *)&long long v3 = 134218242;
    long long v19 = v3;
    do
    {
      id v8 = [*(id *)(a1 + 40) pageInfoForRelativePageIndex:v7 forPresentationType:*(void *)(a1 + 48) v19];
      if (v8)
      {
        id v9 = v8;
        objc_opt_class();
        [*(id *)(a1 + 56) repForInfo:v9];
        v10 = (void *)TSUDynamicCast();
        if (v10)
        {
          id v11 = objc_msgSend(objc_msgSend(v10, "childReps"), "copy");
          long long v20 = 0u;
          long long v21 = 0u;
          long long v22 = 0u;
          long long v23 = 0u;
          long long v12 = (char *)[v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
          if (v12)
          {
            long long v13 = v12;
            uint64_t v14 = *(void *)v21;
            do
            {
              for (i = 0; i != v13; ++i)
              {
                if (*(void *)v21 != v14) {
                  objc_enumerationMutation(v11);
                }
                objc_opt_class();
                uint64_t v16 = TSUDynamicCast();
                if (v16) {
                  [*(id *)(a1 + 64) addObject:v16];
                }
              }
              long long v13 = (char *)[v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
            }
            while (v13);
          }
        }
      }
      else
      {
        v17 = BCReadingStatisticsLog();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          id v18 = [*(id *)(a1 + 40) description];
          *(_DWORD *)buf = v19;
          v25 = v7;
          __int16 v26 = 2114;
          id v27 = v18;
          _os_log_error_impl(&dword_0, v17, OS_LOG_TYPE_ERROR, "Can't find pageInfo for pageIndex %lu in navigation unit %{public}@", buf, 0x16u);
        }
      }
      ++v7;
    }
    while (v7 != v5);
  }
}

id sub_10424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v14 = +[BCProgressKitController sharedController];
  [v14 activateChapterForBook:a2 chapterID:a3 title:a4 completion:0];
  if (a5) {
    [v14 activateSectionForBook:a2 chapterID:a3 sectionID:a5 title:a6 completion:0];
  }
  [*(id *)(a1 + 32) info];
  long long v15 = (void *)BUProtocolCast();
  id v16 = a7;
  if (v15)
  {
    id v16 = [[[v15 adornmentInfo] title] containedStorage].stringValue;
    if (![v16 length]) {
      id v16 = a7;
    }
  }
  id v17 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentNavigator"), "storageAnchorForBookmarksUsingViewCenter:", objc_msgSend(*(id *)(a1 + 40), "isTwoUp") ^ 1);
  id v18 = [*(id *)(a1 + 40) currentContentNode];
  id v19 = [v17 range];
  return [v14 activateWidgetForBook:a2 chapterID:a3 sectionID:a5 widgetID:a7 title:v16 trackingProvider:*(void *)(a1 + 32) cfi:[v18 cfiForRange:v19 storageUID:[v17 storageUID] includeFilename:0 pedantic:1] completion:0];
}

void sub_106B0(uint64_t a1)
{
  long long v2 = objc_opt_new();
  id v3 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "navigationUnits");
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id obj = v3;
  id v4 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = 0;
    uint64_t v19 = *(void *)v21;
    uint64_t v18 = BCProgressContextTreeKey_uniqueID;
    uint64_t v17 = BCProgressContextTreeKey_title;
    uint64_t v16 = BCProgressContextTreeKey_displayOrder;
    uint64_t v15 = BCProgressContextTreeKey_cfi;
    do
    {
      long long v7 = 0;
      do
      {
        if (*(void *)v21 != v19) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v20 + 1) + 8 * (void)v7);
        id v9 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "uniqueIdentifierForNavigationUnit:", v8);
        id v10 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "parentTitleForNavigationUnit:", v8);
        id v11 = objc_opt_new();
        [v11 setValue:v9 forKey:v18];
        [v11 setValue:v10 forKey:v17];
        [v11 setValue:[NSNumber numberWithInteger:v7 + v6] forKey:v16];
        id v12 = [[v8 contentNodes] firstObject];
        id v13 = [v12 cfiForOffset:0 storageUID:[v12 nodeGUID] includeFilename:0 pedantic:1];
        if ([v13 length]) {
          [v11 setValue:v13 forKey:v15];
        }
        [v2 addObject:v11];

        long long v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
      v6 += (uint64_t)v7;
    }
    while (v5);
  }
  if ([v2 count]) {
    [*(id *)(a1 + 40) buildContextTree:v2 forBook:*(void *)(a1 + 48) completion:0];
  }
}

id sub_10AC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateScrubberCheckToolbarState:1];
}

id sub_1188C(uint64_t a1)
{
  +[CATransaction begin];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookNavigationDelegate"), "vantageDidChangeBy:reason:", *(void *)(a1 + 32), @"THVantageChangeReasonPresentationMode");

  return +[CATransaction commit];
}

void sub_1232C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
}

id sub_1234C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  objc_opt_class();
  long long v7 = (void *)TSUDynamicCast();
  objc_opt_class();
  [v7 drawable];
  id result = (id)TSUDynamicCast();
  if (result)
  {
    id result = [result widgetInfo];
    if (result == *(id *)(a1 + 32))
    {
      id v9 = [v7 findCharIndex];
      id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "reflowablePaginationController"), "paginationResultForContentNode:", *(void *)(a1 + 48));
      if (result)
      {
        id v10 = [result firstPageIndexIntersectingRange:v9, 1];
        unsigned int v11 = [*(id *)(a1 + 40) inFlowMode];
        id v12 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentRoot"), "navigationModel");
        uint64_t v13 = *(void *)(a1 + 48);
        id v14 = +[THPresentationType paginatedPresentationTypeInContext:](THPresentationType, "paginatedPresentationTypeInContext:", objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentRoot"), "context"));
        if (v11)
        {
          id result = [v12 absolutePageIndexForContentNodeRelativePageIndex:v10 inContentNode:v13 forPresentationType:v14];
          if (result != (id)0x7FFFFFFFFFFFFFFFLL) {
            id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentNavigator"), "setVisibleAbsolutePhysicalPageIndex:", result);
          }
        }
        else
        {
          id result = [v12 navigationUnitRelativePageIndexForContentNodeRelativePageIndex:v10 inContentNode:v13 forPresentationType:v14];
          if (result != (id)0x7FFFFFFFFFFFFFFFLL)
          {
            objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "activeSectionController"), "canvasRectForRelativePageIndex:", result);
            id result = [*(id *)(a1 + 40) p_setUnscaledCanvasRect:];
          }
        }
      }
      *a5 = 1;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    }
  }
  return result;
}

void sub_14704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_14724(uint64_t a1, uint64_t a2)
{
}

void sub_14734(uint64_t a1)
{
}

id sub_14744(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) corruptBookAlert];
}

id sub_15E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = +[BCProgressKitController sharedController];
  uint64_t v13 = *(void *)(a1 + 32);

  return [v12 updateWidgetProgressForBook:a2 chapterID:a3 sectionID:a5 widgetID:a7 percent:v13 completion:0];
}

id sub_15F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return [+[BCProgressKitController sharedController](BCProgressKitController, "sharedController") updateWidgetScoreForBook:chapterID:sectionID:widgetID:score:total:completion:a2, a3, a5, a7, *(void *)(a1 + 32), *(void *)(a1 + 40), 0];
}

void sub_16020(id a1, NSString *a2, NSString *a3, NSString *a4, NSString *a5, NSString *a6, NSString *a7)
{
  id v11 = +[BCProgressKitController sharedController];

  [v11 resetWidgetAttemptForBook:a2 chapterID:a3 sectionID:a5 widgetID:a7 completion:0];
}

id sub_161AC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contentPageNumberView];

  return [v1 setAlpha:0.0];
}

id sub_163B8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contentPageNumberView];

  return [v1 setAlpha:1.0];
}

id sub_165B8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contentPageNumberView];

  return [v1 setAlpha:1.0];
}

id sub_16C20(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "canvas", 0), "topLevelReps");
  id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) recursivelyPerformSelectorIfImplemented:"canvasDidScrollInFlowMode"];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_17A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_17B14;
  v5[3] = &unk_456E88;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_17B14(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_17B98;
  v4[3] = &unk_456E60;
  long long v5 = v1;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_17B98(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_17D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_17DA8;
  v5[3] = &unk_456E88;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_17DA8(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_17E2C;
  v4[3] = &unk_456E60;
  long long v5 = v1;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_17E2C(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_17FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_18034;
  v5[3] = &unk_456E88;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_18034(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_180B8;
  v4[3] = &unk_456E60;
  long long v5 = v1;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_180B8(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_18748(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) pageViewProvider];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_187D0;
  v6[3] = &unk_456E88;
  void v6[4] = *(void *)(a1 + 32);
  v6[5] = a2;
  return [v4 syncPerformBlock:v6];
}

id sub_187D0(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_18854;
  v4[3] = &unk_456E60;
  long long v5 = v1;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_18854(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_189D4(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) pageViewProvider];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_18A60;
  v8[3] = &unk_4570F0;
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  v8[5] = a2;
  v8[6] = v6;
  v8[4] = v5;
  return [v4 syncPerformBlock:v8];
}

id sub_18A60(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  uint64_t v3 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_18AF0;
  v5[3] = &unk_4570C8;
  uint64_t v7 = v3;
  long long v6 = v1;
  return [v2 enumeratePageHostsUsingBlock:v5];
}

id sub_18AF0(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL && result != *(id *)(a1 + 48))
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v4();
  }
  return result;
}

id sub_19E20(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) overscrollTransitionView];

  return [v1 setAlpha:0.0];
}

id sub_19E50(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "removeFromSuperview");
  [*(id *)(a1 + 32) setOverscrollTransitionView:0];
  id v2 = [*(id *)(a1 + 32) canvasViewController];

  return [v2 becomeFirstResponder];
}

id sub_1A044(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView) frame];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  id v10 = [*(id *)(a1 + 32) overscrollTransitionView];

  return [v10 setFrame:v3, v5, v7, v9];
}

id sub_1A0C8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 392) = 1;
  return [*(id *)(a1 + 32) setCurrentNavigationUnit:*(void *)(a1 + 40)];
}

id sub_1A498(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  id v5 = [*(id *)(a1 + 32) overscrollTransitionView];

  return [v5 setFrame:v1, v2, v3, v4];
}

id sub_1A4EC(uint64_t a1)
{
  double v2 = *(double *)(a1 + 56);
  double v3 = *(double *)(a1 + 72);
  double v4 = *(double *)(a1 + 80);
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setFrame:v2, 0.0, v3, v4];
  [*(id *)(*(void *)(a1 + 40) + OBJC_IVAR___TSADocumentViewController__scrollView) insertSubview:*(void *)(a1 + 32) atIndex:0];
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"), "layerHost"), "canvasLayer"), "popLayoutDisabled");
  *(unsigned char *)(*(void *)(a1 + 40) + 393) = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1A600;
  v6[3] = &unk_456E38;
  long long v7 = *(_OWORD *)(a1 + 40);
  return [+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue") addOperation:+[NSBlockOperation blockOperationWithBlock:v6]];
}

id sub_1A600(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 392) = 1;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavigator"), "clearFlowAnchorCache");
  [*(id *)(a1 + 32) p_verticalOverscrollSetPreviousChapterNavigationUnit:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) updateVisibleInfos];
  id v2 = [*(id *)(a1 + 32) bookNavigationDelegate];
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 vantageDidChangeBy:v3 reason:@"THVantageChangeReasonScrolling"];
}

id sub_1A944(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  id v5 = [*(id *)(a1 + 32) overscrollTransitionView];

  return [v5 setFrame:v1, v2, v3, v4];
}

id sub_1A998(uint64_t a1)
{
  double v2 = *(double *)(a1 + 56);
  double v3 = *(double *)(a1 + 72);
  double v4 = *(double *)(a1 + 80);
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setFrame:v2, 0.0, v3, v4];
  [*(id *)(*(void *)(a1 + 40) + OBJC_IVAR___TSADocumentViewController__scrollView) insertSubview:*(void *)(a1 + 32) atIndex:0];
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"), "layerHost"), "canvasLayer"), "popLayoutDisabled");
  *(unsigned char *)(*(void *)(a1 + 40) + 393) = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1AAAC;
  v6[3] = &unk_456E38;
  long long v7 = *(_OWORD *)(a1 + 40);
  return [+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue") addOperation:+[NSBlockOperation blockOperationWithBlock:v6]];
}

id sub_1AAAC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 392) = 1;
  [*(id *)(a1 + 32) setCurrentNavigationUnit:*(void *)(a1 + 40)];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavigator"), "clearFlowAnchorCache");
  double v2 = *(char **)(a1 + 32);
  [*(id *)&v2[OBJC_IVAR___TSADocumentViewController__scrollView] bounds];
  TSDRectWithSize();
  [v2 p_setUnscaledCanvasRect:];
  double v3 = *(void **)(a1 + 32);

  return [v3 updateVisibleInfos];
}

uint64_t sub_1AF9C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___TSADocumentViewController__scrollView;
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView), "layer"), "removeAnimationForKey:", @"slide-pages");
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavigator"), "setVisibleAbsolutePhysicalPageIndex:", *(void *)(a1 + 64));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "popThreadedLayoutAndRenderDisabled");
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "layerHost"), "canvasLayer"), "popLayoutDisabled");
  +[CATransaction flush];
  [*(id *)(*(void *)(a1 + 32) + v2) setUserInteractionEnabled:1];
  double v4 = *(void **)(a1 + 40);
  if (v4 && *(unsigned char *)(a1 + 72)) {
    [v4 setPreventBounceAnimation:1];
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    double v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

id sub_1B084(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 640);
  unint64_t v3 = (unint64_t)*(double *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1B10C;
  v5[3] = &unk_457228;
  void v5[4] = v1;
  return [v2 animateOverscrollWithDuration:v3 enumerator:v5];
}

id sub_1B10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1B188;
  v4[3] = &unk_457200;
  void v4[4] = a2;
  return [v2 enumeratePageHostsUsingBlock:v4];
}

uint64_t sub_1B188(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1B268(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 393) = 0;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "addSubview:", objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"));
  [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView) center];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "setCenter:", v2, v3);
  *(unsigned char *)(*(void *)(a1 + 32) + 392) = 1;
  [*(id *)(a1 + 32) setLastStorageAnchor:0];
  double v4 = *(void **)(a1 + 32);

  return [v4 setJustUpdatedPresentationType:0];
}

id sub_1B32C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bookNavigationDelegate];
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 vantageDidChangeBy:v3 reason:@"THVantageChangeReasonScrolling"];
}

id sub_1B7C0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) scrubber];

  return [v2 setHidden:v1];
}

id sub_1C55C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = [*(id *)(a1 + 32) view];

  return [v3 setUserInteractionEnabled:1];
}

id sub_1CD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v14 = +[BCProgressKitController sharedController];
  [v14 activateChapterForBook:a2 chapterID:a3 title:a4 completion:0];
  if (a5) {
    [v14 activateSectionForBook:a2 chapterID:a3 sectionID:a5 title:a6 completion:0];
  }
  uint64_t v15 = (void *)BUProtocolCast();
  id v16 = a7;
  if (v15)
  {
    id v16 = objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(v15, "adornmentInfo"), "title"), "containedStorage"), "stringValue");
    if (![v16 length]) {
      id v16 = a7;
    }
  }
  id v17 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentNavigator"), "storageAnchorForBookmarksUsingViewCenter:", objc_msgSend(*(id *)(a1 + 40), "isTwoUp") ^ 1);
  id v18 = [*(id *)(a1 + 40) currentContentNode];
  id v19 = [v17 range];
  [v14 activateWidgetForBook:a2 chapterID:a3 sectionID:a5 widgetID:a7 title:v16 trackingProvider:0 cfi:[v18 cfiForRange:v19 storageUID:[v17 storageUID] includeFilename:0 pedantic:1] completion:0];

  return [v14 updateWidgetProgressForBook:a2 chapterID:a3 sectionID:a5 widgetID:a7 percent:&off_498F28 completion:0];
}

void sub_1D158(id a1, NSString *a2, NSString *a3, NSString *a4, NSString *a5, NSString *a6, NSString *a7)
{
  id v8 = +[BCProgressKitController sharedController];

  [v8 deactivateCurrentWidgetForBook:a2 completion:0];
}

id sub_1DD54(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) interactiveCanvasController];
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 handleHyperlinkWithURL:v3];
}

id sub_1DF14(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHighlightedHyperlinkField:*(void *)(a1 + 40)];
}

id sub_1DF20(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHighlightedHyperlinkField:0];
}

id sub_1DF2C(uint64_t a1)
{
  [*(id *)(a1 + 32) setHighlightedHyperlinkField:0];
  id v2 = [*(id *)(a1 + 40) interactiveCanvasController];
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 32);

  return [v2 handleHyperlink:v3 hitRep:v4];
}

id sub_1E1CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHighlightedHyperlinkField:*(void *)(a1 + 40)];
}

id sub_1E1D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHighlightedHyperlinkField:0];
}

id sub_1E1E4(uint64_t a1)
{
  [*(id *)(a1 + 32) setHighlightedHyperlinkField:0];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1E274;
  v4[3] = &unk_456F28;
  long long v5 = *(_OWORD *)(a1 + 48);
  id v2 = *(void **)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  return [v2 dismissExpandedAnimatedWithCompletionBlock:v4];
}

id sub_1E274(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) interactiveCanvasController];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);

  return [v2 handleHyperlink:v3 hitRep:v4];
}

id sub_1F540(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 504);
  id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v7;
    do
    {
      long long v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) setAlpha:1.0];
        long long v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_1F738(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 504);
  id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v7;
    do
    {
      long long v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) setAlpha:0.0];
        long long v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

void sub_1F82C(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 504) = 0;
  *(void *)(*(void *)(a1 + 32) + 512) = 0;
}

id sub_1FA14(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) bookNavigationDelegate];

  return [v1 closeDocument];
}

id sub_1FD78(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 32) + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1FE00;
  v5[3] = &unk_457360;
  long long v6 = v2;
  uint64_t v7 = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_1FE00(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  long long v2 = *(void **)(*(void *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1FE90;
  v4[3] = &unk_457338;
  long long v5 = v1;
  uint64_t v6 = *(void *)(a1 + 48);
  return [v2 enumeratePageHostsUsingBlock:v4];
}

id sub_1FE90(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 40) containsIndex:[*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]]];
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);
    return (id)v4();
  }
  return result;
}

id sub_20158(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 32) + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_201E0;
  v5[3] = &unk_457360;
  long long v6 = v2;
  uint64_t v7 = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_201E0(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 32) + 632);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_20324;
  v7[3] = &unk_457338;
  long long v8 = v2;
  uint64_t v9 = *(void *)(a1 + 48);
  [v3 enumeratePageHostsUsingBlock:v7];
  uint64_t v4 = (char *)[*(id *)(a1 + 32) currentRelativePageIndex];
  if ([*(id *)(a1 + 32) leftOverscrollView] && (v4 == (char *)0x7FFFFFFFFFFFFFFFLL || !v4)) {
    (*(void (**)(void, id, uint64_t))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), [*(id *)(a1 + 32) leftOverscrollView], -1);
  }
  long long v5 = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "pageCount");
  id result = [*(id *)(a1 + 32) rightOverscrollView];
  if (result && (v4 == (char *)0x7FFFFFFFFFFFFFFFLL || v4 == v5 - 1)) {
    return (id)(*(uint64_t (**)(void, id, char *))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), [*(id *)(a1 + 32) rightOverscrollView], v5);
  }
  return result;
}

id sub_20324(uint64_t a1, void *a2)
{
  id result = [*(id *)(a1 + 32) p_relativePageIndexForPageInfo:[a2 pageInfo]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v4 = result;
    long long v5 = *(void **)(a1 + 40);
    if (!v5 || (id result = [v5 containsIndex:v4], result))
    {
      long long v6 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);
      return (id)v6();
    }
  }
  return result;
}

id sub_20578(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 568) = [*(id *)(a1 + 32) im_isCompactHeight];
  *(unsigned char *)(*(void *)(a1 + 32) + 569) = [*(id *)(a1 + 32) im_isCompactWidth];
  id result = [*(id *)(a1 + 32) interfaceOrientation];
  *(void *)(*(void *)(a1 + 32) + 560) = result;
  return result;
}

void sub_206A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_206BC(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 560);
  return result;
}

void sub_2079C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_207B4(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 568);
  return result;
}

void sub_20894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_208AC(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 569);
  return result;
}

void sub_20B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

id sub_20B98(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "configuration"), "scrubberFrame");
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  id v10 = [*(id *)(a1 + 32) scrubber];

  return [v10 setFrame:v3, v5, v7, v9];
}

id sub_20C0C(id result, void *a2)
{
  if (*(unsigned char *)(*(void *)(*((void *)result + 5) + 8) + 24) && *((unsigned char *)result + 64))
  {
    double v2 = (void *)*((void *)result + 4);
    double v3 = *((double *)result + 6);
    double v4 = *((double *)result + 7);
    [a2 transitionDuration];
    return [v2 bookViewWillAnimateRotationToSize:v3 duration:v4 v5];
  }
  return result;
}

id sub_20C88(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  double v3 = *(void **)(a1 + 32);
  double v4 = *(double *)(a1 + 40);
  double v5 = *(double *)(a1 + 48);
  if (v2) {
    [v3 bookViewDidRotateTransitionToSize:v4, v5];
  }
  else {
    [v3 bookViewDidTransitionToSize:v4, v5];
  }
  [*(id *)(a1 + 32) setLastLayoutSize:CGSizeZero.width, CGSizeZero.height];
  [*(id *)(a1 + 32) setIsTransitioning:0];
  id v6 = [*(id *)(a1 + 32) canvasViewController];

  return [v6 repositionGlossaryIfPopoverAnimated:0];
}

id sub_20D98(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 632) enumeratePageHostsUsingBlock:&stru_457490];
}

void sub_20DB4(id a1, THPageLayerAndSubviewHost *a2)
{
  id v2 = [(TSDRep *)[(THPageLayerAndSubviewHost *)a2 rep] layout];
  [v2 invalidatePosition];

  [v2 invalidate];
}

id sub_21140(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 224)) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THDocumentViewController bookViewWillRotateTransitionToSize:duration:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THDocumentViewController.mm") lineNumber:7682 description:@"expected nil value for '%s'", "mWhiteBackground"];
  }
  *(void *)(*(void *)(a1 + 32) + 224) = [objc_alloc((Class)UIView) initWithFrame:0.0, 0.0, 1024.0, 1024.0];
  [*(id *)(*(void *)(a1 + 32) + 224) setClipsToBounds:1];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "bounds");
  double MidX = CGRectGetMidX(v20);
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "window"), "statusBarMinDimension");
  double v4 = v3;
  [*(id *)(*(void *)(a1 + 32) + 224) bounds];
  [*(id *)(*(void *)(a1 + 32) + 224) setCenter:MidX, v4 + CGRectGetHeight(v21) * 0.5];
  [*(id *)(*(void *)(a1 + 32) + 224) setBackgroundColor:[UIColor whiteColor]];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "insertSubview:belowSubview:", *(void *)(*(void *)(a1 + 32) + 224), objc_msgSend(*(id *)(a1 + 32), "canvasScrollView"));
  double v5 = *(void **)(a1 + 32);
  id v6 = (void *)v5[28];
  objc_msgSend(objc_msgSend(v5, "canvasScrollView"), "frame");
  [v6 convertRect:[*(id *)(a1 + 32) view] fromView:v7, v8, v9, v10];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "canvasScrollView"), "setFrame:", v11, v12, v13, v14);
  uint64_t v15 = *(void **)(a1 + 32);
  id v16 = (void *)v15[28];
  id v17 = [v15 canvasScrollView];

  return [v16 addSubview:v17];
}

id sub_21A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_21AA0;
  v5[3] = &unk_456E88;
  void v5[4] = v2;
  void v5[5] = a2;
  return [v3 syncPerformBlock:v5];
}

id sub_21AA0(uint64_t a1)
{
  long long v1 = *(void **)(*(void *)(a1 + 32) + 632);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_21B24;
  v3[3] = &unk_457200;
  v3[4] = *(void *)(a1 + 40);
  return [v1 enumeratePageHostsUsingBlock:v3];
}

uint64_t sub_21B24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_22CD8(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) definesProperty:a2];
  if ((result & 1) == 0)
  {
    id v5 = +[TSWPParagraphStyle boxedDefaultValueForProperty:a2];
    id v6 = *(void **)(a1 + 32);
    return [v6 setBoxedValue:v5 forProperty:a2];
  }
  return result;
}

void sub_234B0(id a1, NSString *a2)
{
}

void sub_240C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_24698(uint64_t a1, uint64_t a2)
{
  return +[PFDURLProtocol registerHost:a2 bookRootURL:*(void *)(a1 + 32) withDRMContext:*(void *)(a1 + 40)];
}

uint64_t sub_25564(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  double v3 = (long long *)(a2 + 88 * *(void *)(result + 40));
  uint64_t v25 = *((void *)v3 + 10);
  long long v22 = v3[2];
  long long v23 = v3[3];
  long long v24 = v3[4];
  long long v20 = *v3;
  long long v21 = v3[1];
  long long v16 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  long long v17 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  long long v18 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  uint64_t v19 = *((void *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  long long v14 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  long long v15 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  if (*(unsigned char *)(result + 112))
  {
    double v4 = (long long *)(a2 + 88 * *(void *)(result + 64));
    long long v16 = v4[2];
    long long v17 = v4[3];
    long long v18 = v4[4];
    uint64_t v19 = *((void *)v4 + 10);
    long long v14 = *v4;
    long long v15 = v4[1];
  }
  uint64_t v5 = *(void *)(result + 72);
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i < v5; ++i)
    {
      if (v5 >= 1)
      {
        for (uint64_t j = 0; j < v5; ++j)
        {
          long long v10 = v22;
          long long v11 = v23;
          long long v12 = v24;
          uint64_t v13 = v25;
          long long v8 = v20;
          long long v9 = v21;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          if (*(unsigned char *)(v2 + 112))
          {
            long long v10 = v16;
            long long v11 = v17;
            long long v12 = v18;
            uint64_t v13 = v19;
            long long v8 = v14;
            long long v9 = v15;
            TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          }
          [*(id *)(v2 + 32) size:v8, v9, v10, v11, v12, v13];
          [*(id *)(v2 + 32) size];
          TSDGPUUpdateDataSetMetalPoint2DAtIndex();
          id result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          uint64_t v5 = *(void *)(v2 + 72);
        }
      }
    }
  }
  return result;
}

void sub_25998(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 40) isMotionBlurred];
  uint64_t v4 = *(void *)(a1 + 56);
  if (v4 >= 1)
  {
    uint64_t v5 = 0;
    while (v4 < 1)
    {
LABEL_18:
      if (++v5 >= v4) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = 0;
    while (1)
    {
      TSDGPUUpdateDataMetalPoint2DAtIndex();
      float v9 = *(double *)(a1 + 64) * v8;
      float v10 = *(double *)(a1 + 72) * (float)(1.0 - v7);
      uint64_t v11 = *(void *)(a1 + 80);
      if (v11 == 11)
      {
        double v15 = v9 / *(double *)(a1 + 96);
      }
      else
      {
        if (v11 != 13)
        {
          if (v11 == 14)
          {
            double v12 = v10 / *(double *)(a1 + 88);
            double v13 = *(double *)(a1 + 104);
            double v14 = (1.0 - v12) * *(double *)(a1 + 112);
          }
          else
          {
            double v13 = *(double *)(a1 + 104);
            double v12 = -(v9 - *(double *)(a1 + 96) * 2.0) / *(double *)(a1 + 96);
            double v14 = *(double *)(a1 + 112) * (1.0 - v12);
          }
          double v16 = v14 + v12 * v13;
          goto LABEL_14;
        }
        double v15 = -(v10 - *(double *)(a1 + 88) * 2.0) / *(double *)(a1 + 88);
      }
      double v16 = -((1.0 - v15) * *(double *)(a1 + 112) + v15 * *(double *)(a1 + 104));
LABEL_14:
      __sincos_stret(v16);
      TSDGPUUpdateDataMetalPoint3DAtIndex();
      TSDGPUUpdateDataMetalPoint3DAtIndex();
      TSDGPUUpdateDataSetMetalPoint3DAtIndex();
      TSDGPUUpdateDataSetMetalPoint3DAtIndex();
      if ([*(id *)(a1 + 40) isMotionBlurred] && *(unsigned char *)(a1 + 128)) {
        TSDGPUUpdateDataSetMetalPoint3DAtIndex();
      }
      ++v6;
      uint64_t v4 = *(void *)(a1 + 56);
      if (v6 >= v4) {
        goto LABEL_18;
      }
    }
  }
LABEL_19:
  switch(*(void *)(a1 + 80))
  {
    case 0xBLL:
      TSDGPUUpdateDataMetalPoint3DAtIndex();
      double v18 = v17;
      goto LABEL_26;
    case 0xCLL:
      TSDGPUUpdateDataMetalPoint2DAtIndex();
      double v21 = v20;
      [*(id *)(a1 + 48) size];
      double v23 = v22;
      TSDGPUUpdateDataMetalPoint3DAtIndex();
      double v25 = v24;
      goto LABEL_24;
    case 0xDLL:
      TSDGPUUpdateDataMetalPoint2DAtIndex();
      double v21 = (float)(1.0 - v26);
      [*(id *)(a1 + 48) size];
      double v23 = v27;
      TSDGPUUpdateDataMetalPoint3DAtIndex();
      double v25 = v28;
LABEL_24:
      double v18 = -(v25 - v21 * v23);
      goto LABEL_26;
    case 0xELL:
      TSDGPUUpdateDataMetalPoint3DAtIndex();
      double v18 = v29;
LABEL_26:
      double v19 = v18 * 0.5;
      break;
    default:
      double v19 = 0.5;
      break;
  }
  float v30 = v19;
  uint64_t v31 = *(void *)(a1 + 32) + 552;
  v32 = [*(id *)(a1 + 40) metalContext];
  *(float *)(v31 + 4 * (void)[v32 currentBuffer]) = v30;

  *(unsigned char *)(a2 + 88 * *(void *)(*(void *)(a1 + 32) + 48) + 56) = 0;
}

uint64_t sub_26228(uint64_t a1)
{
  TSUClamp();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  TSUClamp();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  uint64_t result = TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3 >= 3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 - 2;
    uint64_t v6 = 5;
    do
    {
      TSUClamp();
      TSUSineMap();
      TSUClamp();
      TSDGPUUpdateDataSetMetalFloatAtIndex();
      TSDGPUUpdateDataSetMetalFloatAtIndex();
      TSDGPUUpdateDataSetMetalPoint2DAtIndex();
      uint64_t result = TSDGPUUpdateDataSetMetalPoint2DAtIndex();
      ++v4;
      v6 += 2;
    }
    while (v5 != v4);
  }
  return result;
}

uint64_t sub_28E54(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 64);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      if (v2 >= 1)
      {
        for (uint64_t j = 0; j < v2; ++j)
        {
          TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          TSDGPUUpdateDataSetMetalPoint2DAtIndex();
          uint64_t result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          if (*(unsigned char *)(v1 + 96)) {
            uint64_t result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          }
          uint64_t v2 = *(void *)(v1 + 64);
        }
      }
    }
  }
  return result;
}

uint64_t sub_29328(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 72);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      if (v3 >= 1)
      {
        for (uint64_t j = 0; j < v3; ++j)
        {
          TSDGPUUpdateDataMetalPoint2DAtIndex();
          if (!*(unsigned char *)(v2 + 97)) {
            float v6 = 1.0 - v6;
          }
          [*(id *)(v2 + 32) fx:v6 withPercent:*(double *)(v2 + 80)];
          double v8 = v7 * -3.14159265;
          TSDGPUUpdateDataMetalPoint3DAtIndex();
          __sincos_stret(v8);
          uint64_t result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          if (*(unsigned char *)(v2 + 96) && *(unsigned char *)(v2 + 98)) {
            uint64_t result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          }
          uint64_t v3 = *(void *)(v2 + 72);
        }
      }
    }
    if (v3 >= 1)
    {
      uint64_t v9 = 0;
      float v40 = TSDMetalPoint3DZero[1];
      float v41 = TSDMetalPoint3DZero[0];
      float v39 = TSDMetalPoint3DZero[2];
      do
      {
        if (v3 >= 1)
        {
          for (uint64_t k = 0; k < v3; ++k)
          {
            unint64_t v11 = 0;
            float v12 = v39;
            float v13 = v40;
            float v14 = v41;
            do
            {
              if (v11 > 3)
              {
                uint64_t v15 = 0;
                uint64_t v16 = 0;
                uint64_t v17 = 0;
              }
              else
              {
                uint64_t v15 = qword_343F48[v11];
                uint64_t v16 = qword_343F68[v11];
                uint64_t v17 = qword_343F88[v11];
              }
              if (v17 + k >= 0 && v16 + k >= 0)
              {
                uint64_t v18 = v15 + v9;
                if (v15 + v9 >= 0 && v17 + v9 >= 0)
                {
                  uint64_t v19 = *(void *)(v2 + 72);
                  if (v17 + v9 < v19 && v18 < v19 && v17 + k < v19 && v16 + k < v19)
                  {
                    float v42 = v12;
                    TSDGPUUpdateDataMetalPoint3DAtIndex();
                    float v21 = v20;
                    float v23 = v22;
                    float v25 = v24;
                    TSDGPUUpdateDataMetalPoint3DAtIndex();
                    float v27 = v26;
                    float v29 = v28;
                    float v31 = v30;
                    TSDGPUUpdateDataMetalPoint3DAtIndex();
                    float v33 = v32 - v21;
                    float v35 = v34 - v23;
                    float v37 = v36 - v25;
                    float v14 = v14 + (float)((float)((float)(v29 - v23) * v37) - (float)((float)(v31 - v25) * v35));
                    float v13 = v13 + (float)((float)((float)(v31 - v25) * v33) - (float)((float)(v27 - v21) * v37));
                    float v12 = v42 + (float)((float)((float)(v27 - v21) * v35) - (float)((float)(v29 - v23) * v33));
                  }
                }
              }
              ++v11;
            }
            while (v11 != 4);
            uint64_t result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
            uint64_t v3 = *(void *)(v2 + 72);
          }
        }
        ++v9;
      }
      while (v9 < v3);
    }
  }
  *(unsigned char *)(a2 + 88 * *(void *)(v2 + 48) + 56) = 0;
  return result;
}

void sub_2C484(id a1)
{
  qword_573190 = (uint64_t)dispatch_queue_create("randomGenerator", 0);
}

void *sub_2C4B0(void *result)
{
  if (!*(void *)(result[4] + 72))
  {
    uint64_t v1 = result;
    uint64_t result = +[KNAnimationRandomGenerator randomGeneratorFromPluginContext:](KNAnimationRandomGenerator, "randomGeneratorFromPluginContext:");
    *(void *)(v1[4] + 72) = result;
  }
  return result;
}

void sub_2D030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_30F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_30F3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_30F4C(uint64_t a1)
{
}

void sub_30F54(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v3 = [v2 selection];
    [*(id *)(a1 + 32) setInsertionPoint:[v3 start]];
  }
  else if (([*(id *)(a1 + 40) isFirstResponder] & 1) == 0 {
         && [*(id *)(a1 + 48) takeFirstResponderOnTap])
  }
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 40) becomeFirstResponder];
  }
}

void sub_30FF8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    [v2 endEditing];
  }
  else if ((objc_msgSend(*(id *)(a1 + 40), "p_handleTapAtPoint:", *(double *)(a1 + 64), *(double *)(a1 + 72)) & 1) == 0&& !*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    id v3 = [*(id *)(a1 + 40) delegate];
    TSUProtocolCast();
    id v4 = (id)objc_claimAutoreleasedReturnValue();

    if (objc_opt_respondsToSelector()) {
      [v4 interactiveCanvasControllerWasTapped:*(void *)(a1 + 40)];
    }
  }
}

id sub_32380(uint64_t a1)
{
  [*(id *)(a1 + 32) postEvent:kBETestDriverPageTurnAnimationEnd sender:*(void *)(a1 + 40)];
  uint64_t v2 = kBETestDriverPageTurnEnd;
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 postEvent:v2 sender:v4];
}

id sub_325B8(uint64_t a1)
{
  [*(id *)(a1 + 32) postEvent:kBETestDriverPageTurnAnimationEnd sender:*(void *)(a1 + 40)];
  uint64_t v2 = kBETestDriverPageTurnEnd;
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 postEvent:v2 sender:v4];
}

BOOL sub_32A84(id a1, TSDRep *a2)
{
  uint64_t v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_32BFC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) object];
  id v3 = [v2 textInputEditor];
  uint64_t v4 = TSUProtocolCast();

  if (v4)
  {
    uint64_t v5 = *(char **)(a1 + 40);
    uint64_t v6 = OBJC_IVAR___TSDInteractiveCanvasController_mTextInputResponder;
    if (!*(void *)&v5[OBJC_IVAR___TSDInteractiveCanvasController_mTextInputResponder])
    {
      double v7 = [v5 layerHost];
      double v8 = [v7 canvasView];

      if (v8)
      {
        uint64_t v9 = [THTextInputResponder alloc];
        float v10 = [*(id *)(a1 + 40) layerHost];
        unint64_t v11 = [v10 canvasView];
        float v12 = [(THTextInputResponder *)v9 initWithNextResponder:v11];
        uint64_t v13 = *(void *)(a1 + 40);
        float v14 = *(void **)(v13 + v6);
        *(void *)(v13 + v6) = v12;
      }
    }
  }
  v15.receiver = *(id *)(a1 + 40);
  v15.super_class = (Class)THInteractiveCanvasController;
  [super p_maybeSetTextResponderEditorTo:v4];
}

uint64_t sub_32D34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_35B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_35B9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  objc_opt_class();
  double v8 = (void *)TSUDynamicCast();
  uint64_t v9 = *(void *)(a1 + 32);
  if (v8)
  {
    id result = [v8 enumerateSubtreeUsingBlock:v9];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  else
  {
    id result = (id)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v9 + 16))(*(void *)(a1 + 32), a2, a3, *(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_367A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_3746C(id a1, TSKModel *a2, BOOL *a3)
{
  return objc_opt_isKindOfClass() & 1;
}

int64_t sub_38784(id a1, TSUPair *a2, TSUPair *a3)
{
  id v4 = [(TSUPair *)a2 first];
  id v5 = [(TSUPair *)a3 first];

  return (int64_t)[v4 compare:v5];
}

void sub_39970(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_39990(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 160);
  if (v2)
  {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentNode startLoading]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Model/THModelContentNode.m") lineNumber:1204 description:@"expected nil value for '%s'", "mLoadOperation"];
    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 160);
  }

  *(void *)(*(void *)(a1 + 32) + 160) = 0;
  uint64_t v3 = *(void *)(a1 + 32);
  if (!*(void *)(v3 + 160))
  {
    *(void *)(*(void *)(a1 + 32) + 160) = -[THModelContentLoadOperation initWithDelegate:contentNode:documentRoot:applePubURL:documentEntryURI:]([THModelContentLoadOperation alloc], "initWithDelegate:contentNode:documentRoot:applePubURL:documentEntryURI:", *(void *)(a1 + 32), *(void *)(a1 + 32), [*(id *)(a1 + 32) documentRoot], *(void *)(*(void *)(a1 + 32) + 80), *(void *)(*(void *)(a1 + 32) + 72));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "contentLoadOperationQueue"), "addOperation:", *(void *)(*(void *)(a1 + 32) + 160));
    uint64_t v3 = *(void *)(a1 + 32);
  }
  *(_DWORD *)(v3 + 152) = 1;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  id v4 = *(void **)(a1 + 32);

  return [v4 p_clearFieldsForFutureLoading];
}

id sub_39AFC(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 32) + 152) = 3;
  [*(id *)(a1 + 32) setPaginatedBodyStale:0];
  [*(id *)(*(void *)(a1 + 32) + 208) cancel];

  *(void *)(*(void *)(a1 + 32) + 208) = 0;
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "reflowablePaginationController"), "paginateContentNode:paginationCompletionDelegate:priority:isForeground:activity:", *(void *)(a1 + 32), *(void *)(a1 + 32), 8, 1, *(void *)(a1 + 40));
  *(void *)(*(void *)(a1 + 32) + 208) = result;
  return result;
}

id sub_39B8C(uint64_t a1, void *a2)
{
  return [a2 logEvent:@"loadContentNodeBodies:begin" forContentNode:*(void *)(a1 + 32)];
}

uint64_t sub_39DE8(uint64_t a1)
{
  uint64_t v1 = 48;
  if (*(_DWORD *)(*(void *)(a1 + 32) + 152) == 5) {
    uint64_t v1 = 40;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + v1) + 16))();
}

void sub_3A4B8(uint64_t a1)
{
  [*(id *)(a1 + 32) willModify];
  id v24 = [*(id *)(a1 + 40) objectForKey:kTHModelStorageAnchorsForAnchorID];
  id v21 = [*(id *)(a1 + 40) objectForKey:kTHModelStorageAnchorsForCfiFrag];
  id v22 = [*(id *)(a1 + 40) objectForKey:kTHModelTextChildOffsetStorageAnchorsForCfiFrag];
  id v23 = [*(id *)(a1 + 40) objectForKey:kTHModelAnchorForCfiFrag];
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id obj = *(id *)(a1 + 40);
  uint64_t v2 = (char *)[obj countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    id v26 = 0;
    char v4 = 0;
    uint64_t v5 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v32 != v5) {
          objc_enumerationMutation(obj);
        }
        objc_opt_class();
        uint64_t v7 = TSUDynamicCast();
        if (v7)
        {
          double v8 = (void *)v7;
          id v9 = [*(id *)(a1 + 40) objectForKey:v7];
          if (v4 & 1 | (([v8 isFlow] & 1) == 0))
          {
            unsigned int v10 = [v8 isPaginated];
            id v11 = v26;
            if (v10) {
              id v11 = 0;
            }
            id v26 = v11;
            v4 |= v10;
          }
          else
          {
            char v4 = 0;
            id v26 = v9;
          }
          [v9 ownerRetain];
          [v9 setParent:*(void *)(a1 + 32)];
          objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "presentationContentBodies"), "setObject:forUncopiedKey:", v9, v8);
          [*(id *)(a1 + 32) setPageCount:[v9 pageCount] forPresentationType:v8];
          long long v29 = 0u;
          long long v30 = 0u;
          long long v27 = 0u;
          long long v28 = 0u;
          id v12 = [v9 pages];
          id v13 = [v12 countByEnumeratingWithState:&v27 objects:v35 count:16];
          if (v13)
          {
            id v14 = v13;
            uint64_t v15 = *(void *)v28;
            do
            {
              for (uint64_t j = 0; j != v14; uint64_t j = (char *)j + 1)
              {
                if (*(void *)v28 != v15) {
                  objc_enumerationMutation(v12);
                }
                [*(id *)(*((void *)&v27 + 1) + 8 * (void)j) setParent:*(void *)(a1 + 32)];
              }
              id v14 = [v12 countByEnumeratingWithState:&v27 objects:v35 count:16];
            }
            while (v14);
          }
          if (*(uint64_t *)(*(void *)(a1 + 32) + 168) >= 1)
          {
            uint64_t v17 = 0;
            do
            {
              id v18 = v9;
              ++v17;
            }
            while (v17 < *(void *)(*(void *)(a1 + 32) + 168));
          }
          [v9 ownerAutoreleasedAccess];
        }
      }
      uint64_t v3 = (char *)[obj countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v3);
  }
  else
  {
    id v26 = 0;
    char v4 = 0;
  }
  if ((*(_DWORD *)(*(void *)(a1 + 32) + 152) - 1) >= 2) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentNode contentLoadOperation:loadedContentBodies:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Model/THModelContentNode.m") lineNumber:1506 description:@"should be loading"];
  }
  uint64_t v19 = *(void *)(a1 + 32);
  if ((v26 == 0) | v4 & 1)
  {
    *(void *)(v19 + 176) += *(void *)(v19 + 168);
    *(void *)(*(void *)(a1 + 32) + 168) = 0;
    *(_DWORD *)(*(void *)(a1 + 32) + 152) = 4;
  }
  else
  {
    *(_DWORD *)(v19 + 152) = 3;
    [*(id *)(a1 + 32) setPaginatedBodyStale:0];
    [*(id *)(*(void *)(a1 + 32) + 208) cancel];

    *(void *)(*(void *)(a1 + 32) + 208) = 0;
    *(void *)(*(void *)(a1 + 32) + 208) = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "reflowablePaginationController"), "paginateContentNode:paginationCompletionDelegate:priority:isForeground:activity:", *(void *)(a1 + 32), *(void *)(a1 + 32), 8, 1, *(void *)(a1 + 48));
  }
  if (v21) {
    [*(id *)(a1 + 32) p_setStorageAnchorsForCfis:];
  }
  if (v22) {
    [*(id *)(a1 + 32) p_setTextChildOffsetStorageAnchorsForCfis];
  }
  if (v23) {
    [*(id *)(a1 + 32) setAnchorForCfiFrag:];
  }
  if (v24) {
    [*(id *)(a1 + 32) setStorageAnchorsForAnchorIDs:];
  }
  [*(id *)(a1 + 40) removeObjectForKey:kTHModelStorageAnchorsForAnchorID];
  [*(id *)(a1 + 40) removeObjectForKey:kTHModelStorageAnchorsForCfiFrag];
  [*(id *)(a1 + 40) removeObjectForKey:kTHModelTextChildOffsetStorageAnchorsForCfiFrag];
  [*(id *)(a1 + 40) removeObjectForKey:kTHModelAnchorForCfiFrag];
  float v20 = *(void **)(a1 + 56);
  if (v20 != *(void **)(*(void *)(a1 + 32) + 160))
  {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentNode contentLoadOperation:loadedContentBodies:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Model/THModelContentNode.m") lineNumber:1556 description:@"unknown operation finished"];
    float v20 = *(void **)(*(void *)(a1 + 32) + 160);
  }

  *(void *)(*(void *)(a1 + 32) + 160) = 0;
}

id sub_3A9CC(uint64_t a1, void *a2)
{
  return [a2 logEvent:@"loadContentNodeBodies:end" forContentNode:*(void *)(a1 + 32)];
}

uint64_t sub_3B368(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:*(unsigned __int8 *)(a1 + 48)];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_3B3C8(uint64_t a1)
{
  double v1 = 0.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 1.0;
  }
  return [*(id *)(a1 + 32) setAlpha:v1];
}

id sub_3B3E4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v2 = *(unsigned __int8 *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) layer];

  return [v3 setShouldRasterize:v2];
}

id sub_3B4A8(uint64_t a1)
{
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return +[CATransaction commit];
}

void sub_3B7D8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_3B7F8(uint64_t a1, uint64_t a2)
{
}

void sub_3B808(uint64_t a1)
{
}

id sub_3B814(uint64_t a1)
{
  double MidX = CGRectGetMidX(*(CGRect *)(a1 + 40));
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setCenter:MidX, CGRectGetMidY(*(CGRect *)(a1 + 40))];
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  long long v4 = *(_OWORD *)(a1 + 88);
  v6[0] = *(_OWORD *)(a1 + 72);
  v6[1] = v4;
  v6[2] = *(_OWORD *)(a1 + 104);
  return [v3 setTransform:v6];
}

uint64_t sub_3B8A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80))
  {
    uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v5[1] = v3;
    v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v2 setTransform:v5];
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setFrame:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_3CE70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_3CEA8(void **a1, unint64_t a2)
{
  long long v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      sub_3D1D0();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_3D278(v3, a2);
    uint64_t v7 = &v6[v5];
    id v9 = &v6[16 * v8];
    unsigned int v10 = *a1;
    id v11 = a1[1];
    id v12 = v7;
    if (v11 != *a1)
    {
      id v12 = v7;
      do
      {
        uint64_t v13 = *(v11 - 2);
        v11 -= 2;
        *((void *)v12 - 2) = v13;
        v12 -= 16;
        *((void *)v12 + 1) = v11[1];
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void *sub_3CF54(void *a1, uint64_t a2, void *a3)
{
  long long v4 = (void *)a2;
  uint64_t v7 = (void *)*a1;
  unint64_t v6 = a1[1];
  uint64_t v8 = a2 - *a1;
  uint64_t v9 = v8 >> 4;
  uint64_t v11 = (uint64_t)(a1 + 2);
  unint64_t v10 = a1[2];
  if (v6 >= v10)
  {
    unint64_t v12 = ((uint64_t)(v6 - (void)v7) >> 4) + 1;
    if (v12 >> 60) {
      sub_3D1D0();
    }
    uint64_t v13 = v10 - (void)v7;
    if (v13 >> 3 > v12) {
      unint64_t v12 = v13 >> 3;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    id v26 = a1 + 2;
    if (v14) {
      uint64_t v15 = (char *)sub_3D278((uint64_t)(a1 + 2), v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = &v15[16 * v9];
    __p = v15;
    id v23 = v16;
    id v24 = v16;
    float v25 = &v15[16 * v14];
    if (v9 == v14)
    {
      if (v8 < 1)
      {
        if (v7 == v4) {
          unint64_t v18 = 1;
        }
        else {
          unint64_t v18 = v8 >> 3;
        }
        uint64_t v19 = (char *)sub_3D278(v11, v18);
        uint64_t v16 = &v19[16 * (v18 >> 2)];
        __p = v19;
        id v23 = v16;
        float v25 = &v19[16 * v20];
        if (v15) {
          operator delete(v15);
        }
      }
      else
      {
        unint64_t v17 = v9 + 2;
        if (v9 >= -1) {
          unint64_t v17 = v9 + 1;
        }
        v16 -= 16 * (v17 >> 1);
        id v23 = v16;
      }
    }
    *(void *)uint64_t v16 = *a3;
    *((void *)v16 + 1) = a3[1];
    id v24 = v16 + 16;
    long long v4 = (void *)sub_3D33C(a1, &__p, v4);
    if (v24 != v23) {
      v24 += (v23 - v24 + 15) & 0xFFFFFFFFFFFFFFF0;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (a2 == v6)
  {
    *(void *)a2 = *a3;
    v7[2 * v9 + 1] = a3[1];
    a1[1] = a2 + 16;
  }
  else
  {
    sub_3D2E4((uint64_t)a1, a2, v6, (char *)(a2 + 16));
    if (v4 <= a3) {
      a3 += 2 * (a1[1] > (unint64_t)a3);
    }
    void *v4 = *a3;
    v7[2 * v9 + 1] = a3[1];
  }
  return v4;
}

void sub_3D150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_3D1D0()
{
}

void sub_3D1E8(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_3D244(exception, a1);
}

void sub_3D230(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_3D244(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_3D278(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_3D2B0();
  }
  return operator new(16 * a2);
}

void sub_3D2B0()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_3D2E4(uint64_t result, uint64_t a2, unint64_t a3, char *a4)
{
  long long v4 = *(char **)(result + 8);
  uint64_t v5 = v4 - a4;
  unint64_t v6 = (uint64_t *)(a2 + v4 - a4);
  uint64_t v7 = v4;
  while ((unint64_t)v6 < a3)
  {
    uint64_t v8 = *v6;
    uint64_t v9 = v6[1];
    v6 += 2;
    *(void *)uint64_t v7 = v8;
    *((void *)v7 + 1) = v9;
    v7 += 16;
  }
  *(void *)(result + 8) = v7;
  if (v4 != a4)
  {
    unint64_t v10 = v4 - 8;
    uint64_t v11 = 16 * (v5 >> 4);
    do
    {
      uint64_t v12 = *(void *)(a2 + v11 - 8);
      *((void *)v10 - 1) = *(void *)(a2 + v11 - 16);
      *(void *)unint64_t v10 = v12;
      v10 -= 16;
      v11 -= 16;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_3D33C(void *a1, void *a2, void *a3)
{
  uint64_t result = a2[1];
  uint64_t v5 = (void *)*a1;
  uint64_t v6 = result;
  if ((void *)*a1 != a3)
  {
    uint64_t v7 = a3;
    uint64_t v6 = a2[1];
    do
    {
      uint64_t v8 = *(v7 - 2);
      v7 -= 2;
      *(void *)(v6 - 16) = v8;
      v6 -= 16;
      *(void *)(v6 + 8) = v7[1];
    }
    while (v7 != v5);
  }
  a2[1] = v6;
  uint64_t v9 = (void *)a1[1];
  for (uint64_t i = (void *)a2[2]; a3 != v9; i += 2)
  {
    uint64_t v11 = *a3;
    uint64_t v12 = a3[1];
    a3 += 2;
    void *i = v11;
    i[1] = v12;
  }
  a2[2] = i;
  uint64_t v13 = (void *)*a1;
  *a1 = v6;
  a2[1] = v13;
  uint64_t v14 = a1[1];
  a1[1] = a2[2];
  a2[2] = v14;
  uint64_t v15 = a1[2];
  a1[2] = a2[3];
  a2[3] = v15;
  *a2 = a2[1];
  return result;
}

id sub_3DCB4(uint64_t a1, void *a2)
{
  return [a2 willBeAddedToDocumentRoot:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
}

id sub_3DD60(uint64_t a1, void *a2)
{
  return [a2 wasAddedToDocumentRoot:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
}

id sub_3DDFC(uint64_t a1, void *a2)
{
  return [a2 willBeRemovedFromDocumentRoot:*(void *)(a1 + 32)];
}

id sub_3DE98(uint64_t a1, void *a2)
{
  return [a2 wasRemovedFromDocumentRoot:*(void *)(a1 + 32)];
}

void sub_3E244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3E540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3E880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3E930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3EB9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3EC0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3EC64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3ED68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3EE80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3EF28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3F0FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_3F124(uint64_t a1, void *a2)
{
  id result = [a2 firstBodyCharacterIndexOverlappingPageRect:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_3F24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_3F264(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

id sub_3F274(uint64_t a1, void *a2)
{
  id result = [a2 originOfCharacterIndex:*(void *)(a1 + 40)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = v6;
  return result;
}

void sub_3F55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3FC00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_40720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_40AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

void sub_40D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_42408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_42428(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) p_layoutWithPageLayout:a2 outDidSync:*(void *)(*(void *)(a1 + 40) + 8) + 24];
}

void sub_427D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_42EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_42FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_43074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *sub_43484(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    sub_3D2B0();
  }
  return operator new(80 * a2);
}

uint64_t *sub_434CC(uint64_t **a1, unint64_t *a2)
{
  uint64_t v4 = (uint64_t *)operator new(0x30uLL);
  unint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  void v4[4] = *a2;
  void v4[5] = v6;
  uint64_t v7 = a1 + 1;
  uint64_t v8 = a1[1];
  if (v8)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v8;
        if (v5 >= v8[4]) {
          break;
        }
        uint64_t v8 = (uint64_t *)*v8;
        uint64_t v9 = v7;
        if (!*v7) {
          goto LABEL_8;
        }
      }
      uint64_t v8 = (uint64_t *)v8[1];
    }
    while (v8);
    uint64_t v9 = v7 + 1;
  }
  else
  {
    uint64_t v9 = a1 + 1;
  }
LABEL_8:
  sub_4355C(a1, (uint64_t)v7, v9, v4);
  return v4;
}

uint64_t *sub_4355C(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  unint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  id result = sub_435B4(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_435B4(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), unint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            uint64_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            uint64_t v9 = (uint64_t **)v2[1];
            unint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *uint64_t v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void *sub_4374C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_3D2B0();
  }
  return operator new(8 * a2);
}

uint64_t sub_43784(uint64_t **a1, unint64_t *a2)
{
  uint64_t v3 = sub_43800((uint64_t)a1, a2);
  if (v3 == v4) {
    return 0;
  }
  unint64_t v5 = v3;
  int v6 = v4;
  uint64_t v7 = 0;
  do
  {
    int v8 = sub_43898(a1, v5);
    operator delete(v5);
    ++v7;
    unint64_t v5 = v8;
  }
  while (v8 != v6);
  return v7;
}

void *sub_43800(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  unint64_t v4 = *a2;
  while (1)
  {
    unint64_t v5 = v3[4];
    if (v4 >= v5) {
      break;
    }
    uint64_t v2 = v3;
LABEL_7:
    uint64_t v3 = (void *)*v3;
    if (!v3) {
      return v2;
    }
  }
  if (v5 < v4)
  {
    ++v3;
    goto LABEL_7;
  }
  uint64_t v7 = (void *)*v3;
  id result = v3;
  if (*v3)
  {
    id result = v3;
    do
    {
      unint64_t v8 = v7[4];
      BOOL v9 = v8 >= v4;
      if (v8 >= v4) {
        unint64_t v10 = v7;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      if (v9) {
        id result = v7;
      }
      uint64_t v7 = (void *)*v10;
    }
    while (*v10);
  }
  uint64_t v11 = (void *)v3[1];
  if (v11)
  {
    do
    {
      if (v4 >= v11[4]) {
        uint64_t v12 = v11 + 1;
      }
      else {
        uint64_t v12 = v11;
      }
      uint64_t v11 = (void *)*v12;
    }
    while (*v12);
  }
  return result;
}

uint64_t *sub_43898(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    unint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      unint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  int v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_4390C(v6, a2);
  return v3;
}

uint64_t *sub_4390C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2;
  if (*a2)
  {
    unint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      uint64_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      uint64_t v3 = v4;
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  int v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    *int v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      id result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    uint64_t *v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      id result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      *uint64_t v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        id result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    uint64_t v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      uint64_t v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *uint64_t v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        uint64_t v16 = v7;
      }
      else
      {
        uint64_t v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      id v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      *id v24 = v23;
      goto LABEL_72;
    }
    uint64_t v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      unint64_t v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      id result = v7;
    }
    uint64_t v7 = *(uint64_t **)v12;
  }
  uint64_t v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  uint64_t v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    uint64_t v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    *uint64_t v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    uint64_t v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  id v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

void sub_43C90(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_43C90(a1, *a2);
    sub_43C90(a1, a2[1]);
    operator delete(a2);
  }
}

uint64_t sub_461BC(uint64_t a1, void *a2)
{
  [*(id *)(a1 + 32) calculatePointFromSearchReference:a2];
  [a2 setSearchReferencePoint:];
  unint64_t v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v4();
}

void sub_4767C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4791C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_47E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

NSUInteger THTrimHighlightRange(TSWPStorage *a1, _NSRange a2)
{
  NSUInteger location = a2.location;
  if (a1)
  {
    NSUInteger v4 = a2.length + 1;
    while (location + v4 - 1 > location)
    {
      [(TSWPStorage *)a1 characterAtIndex:location + v4-- - 2];
      if ((IsWhitespaceCharacter() & 1) == 0)
      {
        NSUInteger v5 = location + v4;
        while (1)
        {
          [(TSWPStorage *)a1 characterAtIndex:location];
          if (!IsWhitespaceCharacter()) {
            break;
          }
          ++location;
          if (!--v4) {
            return v5;
          }
        }
        return location;
      }
    }
  }
  return location;
}

BOOL sub_48E44(id a1, TSDRep *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(TSDRep *)a2 info];

  return [v4 conformsToProtocol:&OBJC_PROTOCOL___THWWidgetInfo];
}

BOOL sub_48E78(id a1, TSDRep *a2, unint64_t a3, BOOL *a4)
{
  id v4 = (void *)TSUProtocolCast();
  BOOL v5 = (objc_opt_respondsToSelector() & 1) != 0 && [v4 pressableAction] == 1;
  if (objc_opt_respondsToSelector()) {
    unsigned __int8 v6 = [v4 pressableMoveToHitTestFront];
  }
  else {
    unsigned __int8 v6 = 0;
  }
  return v5 | v6;
}

id sub_49550(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 288) setContents:0];
}

uint64_t sub_4C4E8(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = (void *)TSUDynamicCast();
  id v3 = [v2 drawable];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "paginationResults"), "firstPageIndexIntersectingRange:", objc_msgSend(v2, "findCharIndex"), 1);
    id v5 = [v3 widgetInfo];
    if ((objc_opt_respondsToSelector() & 1) == 0)
    {
      uint64_t result = objc_opt_respondsToSelector();
      if ((result & 1) == 0) {
        return result;
      }
      id v5 = [v5 adornmentInfo];
    }
    uint64_t v7 = *(void **)(a1 + 32);
    return (uint64_t)[v7 p_accumulateStorageUIDsForChildrenInObject:v5 forRelativePageIndex:v4];
  }
  else
  {
    objc_opt_class();
    uint64_t result = objc_opt_isKindOfClass();
    if (result)
    {
      id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "paginationResults"), "firstPageIndexIntersectingRange:", objc_msgSend(v2, "findCharIndex"), 1);
      long long v13 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      id v9 = [v3 allWPStorages];
      uint64_t result = (uint64_t)[v9 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (result)
      {
        uint64_t v10 = result;
        uint64_t v11 = *(void *)v14;
        do
        {
          uint64_t v12 = 0;
          do
          {
            if (*(void *)v14 != v11) {
              objc_enumerationMutation(v9);
            }
            objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "paginationResults"), "assignRelativePageIndex:toStorageUID:", v8, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "flowModelContentNodeBody"), "nodeUniqueIDForInfo:", *(void *)(*((void *)&v13 + 1) + 8 * v12++)));
          }
          while (v10 != v12);
          uint64_t result = (uint64_t)[v9 countByEnumeratingWithState:&v13 objects:v17 count:16];
          uint64_t v10 = result;
        }
        while (result);
      }
    }
  }
  return result;
}

void THWSceneViewReleaseData(int a1, void *a2)
{
}

void sub_4DF90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E0C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E14C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E1A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E2B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_4E31C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_4EC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_opt_class();
  uint64_t v7 = (void *)TSUDynamicCast();
  id v8 = objc_msgSend(objc_msgSend(v7, "stylesheet"), "variationOfStyle:propertyMap:", v7, *(void *)(a1 + 32));
  id v9 = *(void **)(a1 + 40);

  return [v9 setCharacterStyle:v8 range:a3 undoTransaction:0];
}

id sub_4EF64(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = (void *)TSUDynamicCast();
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 setValue:v3 forProperty:18];
}

id sub_53CD4(uint64_t a1, void *a2)
{
  return [a2 willBeAddedToDocumentRoot:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
}

id sub_53D94(uint64_t a1, void *a2)
{
  return [a2 wasAddedToDocumentRoot:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
}

id sub_53E40(uint64_t a1, void *a2)
{
  return [a2 willBeRemovedFromDocumentRoot:*(void *)(a1 + 32)];
}

id sub_53EEC(uint64_t a1, void *a2)
{
  return [a2 wasRemovedFromDocumentRoot:*(void *)(a1 + 32)];
}

char *sub_56D9C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  id v9 = *(char **)result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - *(void *)result) >> 4) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x333333333333333) {
      sub_3D1D0();
    }
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 4);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x199999999999999) {
      unint64_t v12 = 0x333333333333333;
    }
    else {
      unint64_t v12 = v11;
    }
    uint64_t result = sub_56ED8(v7, v12);
    long long v14 = (char *)v7[1];
    long long v13 = (void **)(v7 + 1);
    id v9 = v14;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      uint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  long long v13 = (void **)(result + 8);
  long long v15 = (unsigned char *)*((void *)result + 1);
  if (0xCCCCCCCCCCCCCCCDLL * ((v15 - v9) >> 4) >= a4) {
    goto LABEL_16;
  }
  long long v16 = &__src[16 * ((v15 - v9) >> 4)];
  if (v15 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v15 - v9);
    id v9 = (char *)*v13;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    uint64_t v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *long long v13 = &v9[v17];
  return result;
}

char *sub_56ED8(void *a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    sub_3D1D0();
  }
  uint64_t result = (char *)sub_43484((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[80 * v4];
  return result;
}

void *sub_56F2C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unsigned __int8 v6 = result;
    uint64_t result = sub_56ED8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_56F8C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_58620(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "currentContentNodes"), "containsObject:", a2) ^ 1;
}

void sub_58F24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a3 != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (a2) {
      id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionInfos"), "objectForKey:", a2);
    }
    else {
      id v8 = 0;
    }
    [a2 startLoading];
    if (*(unsigned char *)(a1 + 40)) {
      [a2 waitUntilFinishedLoadingAndPaginating];
    }
    v17[0] = 0;
    v17[1] = v17;
    v17[2] = 0x3052000000;
    v17[3] = sub_5915C;
    v17[4] = sub_5916C;
    id v18 = 0;
    id v18 = [*(id *)(a1 + 32) delegate];
    v16[0] = 0;
    v16[1] = v16;
    v16[2] = 0x3052000000;
    v16[3] = sub_5915C;
    uint64_t v9 = *(void *)(a1 + 32);
    v16[4] = sub_5916C;
    v16[5] = v9;
    uint64_t v12 = 0;
    long long v13 = &v12;
    uint64_t v14 = 0x2020000000;
    char v15 = 0;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_59178;
    v11[3] = &unk_457AD8;
    v11[4] = a2;
    v11[5] = v9;
    v11[10] = a3;
    v11[11] = a4;
    v11[6] = v8;
    v11[7] = v17;
    v11[8] = v16;
    v11[9] = &v12;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_59288;
    v10[3] = &unk_457B00;
    v10[4] = v8;
    v10[5] = v17;
    v10[6] = v16;
    [a2 performWhenFinishedLoading:v11 onError:v10];
    *((unsigned char *)v13 + 24) = 1;
    _Block_object_dispose(&v12, 8);
    _Block_object_dispose(v16, 8);
    _Block_object_dispose(v17, 8);
  }
}

void sub_5912C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_5915C(uint64_t a1, uint64_t a2)
{
}

void sub_5916C(uint64_t a1)
{
}

id sub_59178(uint64_t a1)
{
  objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "sectionController:didLoadContentNode:presentationType:", *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "presentationType"));
  id v2 = +[NSMutableArray array];
  unint64_t v3 = *(void *)(a1 + 80);
  for (unint64_t i = *(void *)(a1 + 88) + v3; v3 < i; unint64_t i = *(void *)(a1 + 88) + *(void *)(a1 + 80))
  {
    id v5 = [*(id *)(a1 + 32) pageAtRelativeIndex:v3 forPresentationType:[*(id *)(a1 + 40) presentationType]];
    if (v5) {
      [v2 addObject:v5];
    }
    ++v3;
  }
  id result = objc_msgSend(*(id *)(a1 + 48), "setPages:", objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "pages"), "arrayByAddingObjectsFromArray:", v2));
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    uint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    return [v7 sectionControllerInfosDidChange:v8];
  }
  return result;
}

id sub_59288(uint64_t a1)
{
  [*(id *)(a1 + 32) setPages:0];
  id v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);

  return [v2 showCorruptDocumentAlertForSectionController:v3];
}

id sub_594B8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) p_addPagesInRange:a2 forceLoad:1];
}

uint64_t sub_5960C(uint64_t a1, void *a2, void *a3)
{
  id v5 = objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a2, "pageController"), "contentNode"));
  uint64_t v6 = v5
     - (unsigned char *)objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a3, "pageController"), "contentNode"));

  return THNSComparisonResultFromInteger(v6);
}

void sub_5992C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_59944(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

uint64_t sub_59954(uint64_t a1)
{
  [*(id *)(a1 + 32) pageOriginForRelativePageIndex:*(void *)(a1 + 48)];
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "currentNavigationUnit"), "contentNodeForRelativePageIndex:forPresentationType:", *(void *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "presentationType"));
  if (v2) {
    id v3 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "pageControllers"), "objectForKey:", v2);
  }
  else {
    id v3 = 0;
  }
  objc_msgSend(v3, "desiredPageSizeForRelativePageIndex:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "currentNavigationUnit"), "nodeRelativePageIndexInContentNode:forNavigationUnitRelativePageIndex:presentationType:", v2, *(void *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "presentationType")));
  uint64_t result = TSDRectWithOriginAndSize();
  id v5 = *(void **)(*(void *)(a1 + 40) + 8);
  void v5[6] = v6;
  v5[7] = v7;
  v5[8] = v8;
  v5[9] = v9;
  return result;
}

id *sub_5A418(id *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != 0x7FFFFFFFFFFFFFFFLL)
  {
    id v5 = result;
    uint64_t v6 = a4 - 1;
    if (!a4) {
      uint64_t v6 = 0;
    }
    uint64_t v7 = v6 + a3;
    if (a2) {
      id v8 = objc_msgSend(objc_msgSend(result[4], "pageControllers"), "objectForKey:", a2);
    }
    else {
      id v8 = 0;
    }
    id v9 = v5[5];
    return (id *)[v8 layoutThroughRelativePageIndex:v7 layoutController:v9];
  }
  return result;
}

void sub_5C1D4(id a1, THModelContentNode *a2, THPageController *a3, BOOL *a4)
{
}

id sub_5D39C(uint64_t a1)
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "interactiveCanvasController");

  return [v1 pageLeft];
}

id sub_5D3CC(uint64_t a1)
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "interactiveCanvasController");

  return [v1 pageRight];
}

id sub_5D48C(uint64_t a1)
{
  return [*(id *)(a1 + 32) closeDocument];
}

id sub_5D528(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) chapterBrowserController];

  return [v1 transitionPageToDVC:0 chapterIndex:0];
}

void sub_5E274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_5E298(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_5E2A8(uint64_t a1)
{
}

void sub_5E2B0(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_5E310(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_5E370(void *a1)
{
  if ([*(id *)(*(void *)(a1[6] + 8) + 40) quality] < 0x65) {
    uint64_t v2 = a1[7];
  }
  else {
    uint64_t v2 = a1[6];
  }
  id v3 = [*(id *)(*(void *)(v2 + 8) + 40) image];
  id v4 = +[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", [v3 CGImage]);

  if (!v4)
  {
    id v5 = BCImageCacheLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
      sub_2A0830((uint64_t)a1, v5);
    }
  }
  [*(id *)(a1[5] + 8) setImage:v4];
}

void sub_5FB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_5FB74(uint64_t a1, uint64_t a2)
{
}

void sub_5FB84(uint64_t a1)
{
}

id sub_5FB90(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = (void *)TSUDynamicCast();
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 applePubRelativePath];
    if (v4) {
      [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setObject:v3 forKey:v4];
    }
  }
  objc_opt_class();
  id result = (id)TSUDynamicCast();
  if (result)
  {
    id v6 = result;
    id result = [result applePubRelativePath];
    if (result)
    {
      id v7 = result;
      id v8 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
      return [v8 setObject:v6 forKey:v7];
    }
  }
  return result;
}

uint64_t THNSComparisonResultFromInteger(uint64_t a1)
{
  if (a1 < 0) {
    uint64_t v1 = -1;
  }
  else {
    uint64_t v1 = a1;
  }
  if (v1 >= 1) {
    return 1;
  }
  else {
    return v1;
  }
}

uint64_t sub_5FF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "positioningOfDrawable:", a2), "bodyCharIndex");
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "positioningOfDrawable:", a3), "bodyCharIndex");
  if (v5 > v6) {
    return 1;
  }
  if (v6 > v5) {
    return -1;
  }
  objc_opt_class();
  id v8 = (void *)TSUDynamicCast();
  objc_opt_class();
  uint64_t v9 = TSUDynamicCast();
  if (v8)
  {
    unint64_t v10 = (void *)v9;
    if (v9)
    {
      id v11 = objc_msgSend(objc_msgSend(v8, "associatedInfo"), "geometry");
      id v12 = objc_msgSend(objc_msgSend(v10, "associatedInfo"), "geometry");
      [v11 position];
      double v14 = v13;
      [v12 position];
      if (v14 < v15) {
        return -1;
      }
      [v11 position];
      double v17 = v16;
      [v12 position];
      if (v17 > v18) {
        return 1;
      }
      [v11 position];
      double v20 = v19;
      [v12 position];
      if (v20 < v21) {
        return -1;
      }
      [v11 position];
      double v23 = v22;
      [v12 position];
      if (v23 > v24) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_60340(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_60784(void *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 2)
  {
    id v10 = objc_begin_catch(exc_buf);
    [v10 description];
    NSLog(@"THBookOpener caught exception: %@");
    [v9 setException:v10];
    objc_end_catch();
    JUMPOUT(0x60668);
  }
  objc_begin_catch(exc_buf);
  JUMPOUT(0x6066CLL);
}

void sub_608E4(id a1)
{
  byte_5731B8 = MGGetBoolAnswer();
}

void sub_60A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_60C18(id result)
{
  if (result)
  {
    uint64_t v1 = result;
    [result setTheme:[IMTheme themeWithIdentifier:kIMThemeIdentifierDefaultPageTheme]];
    [v1 setAppearanceStyle:0];
    id v2 = +[UITraitCollection bc_allAPITraits];
    return [v1 registerForTraitChanges:v2 withAction:"_traitCollectionDidChange:previousTraitCollection:"];
  }
  return result;
}

id sub_60FD4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 displaySettingsControllerDidChangeFlowMode:v3];
}

id sub_62A14(uint64_t a1)
{
  [*(id *)(a1 + 32) setSupportedSections:*(void *)(a1 + 40)];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tableView"), "reloadData");
  id v2 = *(void **)(a1 + 32);

  return [v2 p_setPopoverScrolling];
}

id sub_62A5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setPreferredContentSize: *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

uint64_t sub_62A68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_62A78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

BOOL sub_631A4(id a1, SCNNode *a2, BOOL *a3)
{
  return [(SCNNode *)a2 geometry] != 0;
}

BOOL sub_631D8(id a1, SCNNode *a2, BOOL *a3)
{
  return [(SCNNode *)a2 light] != 0;
}

BOOL sub_6320C(id a1, SCNNode *a2, BOOL *a3)
{
  return [(SCNNode *)a2 camera] != 0;
}

void sub_63568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_63580(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [@"THContinuousRotation" isEqualToString:a2];
  if ((result & 1) != 0
    || (id result = [@"THEaseInRotation" isEqualToString:a2], result))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_6430C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_6432C(uint64_t a1, uint64_t a2)
{
}

void sub_6433C(uint64_t a1)
{
}

id sub_64348(void *a1)
{
  id result = [*(id *)(a1[4] + 48) objectForKey:a1[5]];
  *(void *)(*(void *)(a1[6] + 8) + 40) = result;
  return result;
}

id sub_64380(void *a1)
{
  id result = [*(id *)(a1[4] + 48) objectForKey:a1[5]];
  if (result)
  {
    *(void *)(*(void *)(a1[6] + 8) + 40) = result;
  }
  else
  {
    uint64_t v3 = a1[5];
    id v4 = *(void **)(a1[4] + 48);
    uint64_t v5 = *(void *)(*(void *)(a1[6] + 8) + 40);
    return [v4 setObject:v5 forKey:v3];
  }
  return result;
}

id sub_64BF0(id result, void *a2)
{
  if (result)
  {
    objc_opt_class();
    uint64_t v3 = (void *)TSUDynamicCast();
    if (v3)
    {
      id v4 = v3;
      id result = [v3 nodeBodyExists];
      if (result)
      {
        return [a2 addObject:v4];
      }
    }
    else
    {
      objc_opt_class();
      id result = (id)TSUDynamicCast();
      if (result)
      {
        id v5 = [result childNodes];
        long long v9 = 0u;
        long long v10 = 0u;
        long long v11 = 0u;
        long long v12 = 0u;
        id result = [v5 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (result)
        {
          id v6 = result;
          uint64_t v7 = *(void *)v10;
          do
          {
            id v8 = 0;
            do
            {
              if (*(void *)v10 != v7) {
                objc_enumerationMutation(v5);
              }
              sub_64BF0(*(void *)(*((void *)&v9 + 1) + 8 * (void)v8), a2);
              id v8 = (char *)v8 + 1;
            }
            while (v6 != v8);
            id result = [v5 countByEnumeratingWithState:&v9 objects:v13 count:16];
            id v6 = result;
          }
          while (result);
        }
      }
    }
  }
  return result;
}

void sub_6621C(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = a2;
  if (a3)
  {
    id v5 = +[TSUAssertionHandler currentHandler];
    id v6 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWWebView initWithfilteredOutURLSchemes:requestScope:]_block_invoke");
    uint64_t v7 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Widgets/Web/THWWebView.m"];
    [v5 handleFailureInFunction:v6 file:v7 lineNumber:96 description:@"expected nil value for '%s'", "error"];
  }
  [*(id *)(a1 + 32) setWebView:v8];
}

void sub_66764(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  id v2 = [*(id *)(a1 + 32) webView];
  [v2 setAlpha:1.0];
}

uint64_t sub_667C4(uint64_t result)
{
  if (*(void *)(result + 40))
  {
    uint64_t v1 = result;
    id v2 = [*(id *)(result + 32) layer];
    [v2 setShouldRasterize:0];

    uint64_t v3 = [*(id *)(v1 + 32) webView];
    id v4 = [v3 layer];
    [v4 setShouldRasterize:0];

    id v5 = *(uint64_t (**)(void))(*(void *)(v1 + 40) + 16);
    return v5();
  }
  return result;
}

void sub_669F0(id a1, id a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    id v4 = THLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_2A08F0((uint64_t)v3, v4);
    }
  }
}

id *sub_66EB8(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _attemptURLLoad];
  }
  return result;
}

void sub_67170(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (v9)
  {
    id v6 = objc_alloc((Class)WKWebView);
    [*(id *)(a1 + 32) bounds];
    id v7 = [v6 initWithFrame:v9 configuration:nil];
    [v7 _overrideViewportWithArguments:&off_499BA8];
  }
  else
  {
    id v7 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v7, v5);
  }
}

void sub_67520(uint64_t a1, uint64_t a2)
{
  v8[0] = @"trigger";
  uint64_t v3 = +[NSString stringWithFormat:@"%@://", a2, @"url-filter"];
  id v7 = v3;
  id v4 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  v8[1] = @"action";
  v9[0] = v4;
  v9[1] = &off_499BD0;
  id v5 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:2];

  [*(id *)(a1 + 32) addObject:v5];
}

void sub_67620(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = +[TSUAssertionHandler currentHandler];
    id v7 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWWebView _createContentBlockingRulesWithfilteredOutURLSchemes:toRuleListStore:completion:]_block_invoke_2");
    uint64_t v8 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Widgets/Web/THWWebView.m"];
    [v6 handleFailureInFunction:v7 file:v8 lineNumber:389 description:@"expected nil value for '%s'", "error"];
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, id, id))(v9 + 16))(v9, v10, v5);
  }
}

void sub_67BDC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5) {
    [*(id *)(a1 + 32) addContentRuleList:v5];
  }
  if (v6)
  {
    id v7 = THLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_2A0968((uint64_t)v6, v7);
    }
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(uint64_t, void, id))(v8 + 16))(v8, *(void *)(a1 + 40), v6);
  }
}

void sub_694DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_69500(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  if (++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) >= 0xC8uLL)
  {
    *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = a5 + a6;
    *a7 = 1;
  }
  return result;
}

id sub_6A0BC(uint64_t a1, void *a2)
{
  return [a2 setAnnotationStorageRange:*(void *)(a1 + 32), *(void *)(a1 + 40)];
}

void sub_6B4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_6B6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_6B724(uint64_t a1, uint64_t a2)
{
}

void sub_6B734(uint64_t a1)
{
}

uint64_t sub_6B740(void *a1)
{
  id v2 = *(void **)(*(void *)(a1[5] + 8) + 40);
  objc_sync_enter(v2);
  if (([*(id *)(*(void *)(a1[6] + 8) + 40) isCancelled] & 1) == 0)
  {
    objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1[5] + 8) + 40), "queuedOperations"), "removeObject:", *(void *)(*(void *)(a1[6] + 8) + 40));
    (*(void (**)(void))(a1[4] + 16))();
  }

  return objc_sync_exit(v2);
}

void sub_6B7CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_6B8CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_6B8E4(void *a1)
{
  id v2 = *(void **)(*(void *)(a1[6] + 8) + 40);
  objc_sync_enter(v2);
  if (objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1[6] + 8) + 40), "waitingBlockTimers"), "containsObject:", a1[4]))
  {
    objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1[6] + 8) + 40), "waitingBlockTimers"), "removeObject:", a1[4]);
    (*(void (**)(void))(a1[5] + 16))();
  }

  return objc_sync_exit(v2);
}

void sub_6B970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_6BA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t THRangeExtendBackward(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >= a3) {
    unint64_t v3 = a3;
  }
  else {
    unint64_t v3 = a1;
  }
  return a1 - v3;
}

uint64_t THRangeExtendForward(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1 + a2 > a4) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSRange THRangeExtendForward(NSRange, NSUInteger, NSUInteger)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/NSRangeUtilities.m") lineNumber:20 description:@"Extending range that is already beyond end"];
  }
  return a1;
}

id sub_6CF00(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "settingNavigationBarHidden:animated:", *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
  id v2 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 40))
  {
    return [v2 p_hideNavigationBar];
  }
  else
  {
    return [v2 p_showNavigationBar];
  }
}

id sub_6CF6C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationBar"), "setHidden:", *(unsigned __int8 *)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = [*(id *)(a1 + 32) delegate];
  uint64_t v4 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 49);

  return [v3 didSetNavigationBarHidden:v4 animated:v5];
}

id sub_6D644(uint64_t a1)
{
  id result = (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void **)(a1 + 32);
    return [v4 addObject:v3];
  }
  return result;
}

id sub_6E794(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 128)) {
    uint64_t v2 = *(void *)(v1 + 128);
  }
  else {
    uint64_t v2 = 0;
  }
  return [*(id *)(v1 + 120) performSelector:v2 withObject:0.0];
}

id sub_6EA70(uint64_t a1)
{
  return [*(id *)(a1 + 32) animationDidEndWithContext:*(void *)(*(void *)(a1 + 40) + 112)];
}

void sub_6F244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_6F264(uint64_t a1)
{
  return [*(id *)(a1 + 32) present];
}

void sub_6F26C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  dispatch_semaphore_signal(WeakRetained);
}

void sub_6F2AC(uint64_t a1)
{
  [*(id *)(a1 + 32) waitUntilCompleted];
  [*(id *)(a1 + 40) removeAnimations];
  +[CATransaction commit];
  if (*(void *)(*(void *)(a1 + 40) + 120))
  {
    if (objc_opt_respondsToSelector())
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_6F3A4;
      block[3] = &unk_456D40;
      block[4] = *(void *)(a1 + 40);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

id sub_6F3A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 128)) {
    uint64_t v2 = *(void *)(v1 + 128);
  }
  else {
    uint64_t v2 = 0;
  }
  return [*(id *)(v1 + 120) performSelector:v2 withObject:0 afterDelay:0.0];
}

id sub_6FD6C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "curtainLayer"), "removeFromSuperlayer");
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setCurtainLayer:0];
}

id sub_70EEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }
  uint64_t v2 = +[UIApplication sharedApplication];

  return [(UIApplication *)v2 endIgnoringInteractionEvents];
}

__n128 sub_71E70(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (!v2[72])
  {
    unsigned int v3 = [v2 p_wantsCurtainFadeOut];
    uint64_t v2 = *(unsigned char **)(a1 + 32);
    if (v3)
    {
      [v2 p_fadeOutCurtain];
      uint64_t v2 = *(unsigned char **)(a1 + 32);
    }
  }
  [v2 delegate];
  if (objc_opt_respondsToSelector()) {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerWillEnd:passedThreshold:", *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  }
  id v4 = [*(id *)(a1 + 32) freeTransformLayer];
  long long v17 = *(_OWORD *)&CGAffineTransformIdentity.c;
  long long v18 = *(_OWORD *)&CGAffineTransformIdentity.a;
  v23[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v23[1] = v17;
  __n128 v16 = *(__n128 *)&CGAffineTransformIdentity.tx;
  v23[2] = v16;
  [v4 setAffineTransform:v23];
  id v5 = [*(id *)(a1 + 32) freeTransformLayer];
  [v5 removeAnimationForKey:kSnapToSizeAnimationName];
  id v6 = [*(id *)(a1 + 32) shadowLayer];
  [v6 removeAnimationForKey:kSnapToSizeAnimationName];
  id v7 = [*(id *)(a1 + 32) shadowLayer];
  [v7 removeAnimationForKey:kTHWFreeTransformControllerFadeOutAnimationName];
  [*(id *)(a1 + 32) delegate];
  if (objc_opt_respondsToSelector())
  {
    id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerStyledRep:", *(void *)(a1 + 32));
    objc_msgSend(objc_msgSend(v8, "shadowLayer"), "removeAllAnimations");
    objc_msgSend(objc_msgSend(v8, "reflectionLayer"), "removeAllAnimations");
  }
  [*(id *)(a1 + 32) p_cleanupExtraLayers];
  [*(id *)(a1 + 32) delegate];
  if (objc_opt_respondsToSelector()) {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerDidCleanupViews:passedThreshold:", *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  }
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerDidEnd:passedThreshold:", *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  [*(id *)(a1 + 32) setIsFreeTransformInProgress:0];
  --dword_5731D0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v9 = [+[UIApplication sharedApplication] windows];
  id v10 = [(NSArray *)v9 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v20;
    do
    {
      for (unint64_t i = 0; i != v11; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v12) {
          objc_enumerationMutation(v9);
        }
        [*(id *)(*((void *)&v19 + 1) + 8 * i) setUserInteractionEnabled:1];
      }
      id v11 = [(NSArray *)v9 countByEnumeratingWithState:&v19 objects:v24 count:16];
    }
    while (v11);
  }
  [+[UIWindow keyWindow](UIWindow, "keyWindow") endDisablingInterfaceAutorotation];
  double v14 = (_OWORD *)(*(void *)(a1 + 32) + 264);
  *double v14 = v18;
  v14[1] = v17;
  __n128 result = v16;
  v14[2] = v16;
  *(unsigned char *)(*(void *)(a1 + 32) + 72) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 314) = 0;
  return result;
}

void sub_743B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_743D0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_743DC(uint64_t a1, uint64_t a2)
{
}

void sub_743EC(uint64_t a1)
{
}

id sub_743F8(uint64_t a1)
{
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  id result = [v2 countByEnumeratingWithState:&v24 objects:v29 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v25;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v25 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v24 + 1) + 8 * (void)v6);
        id v8 = *(void **)(*(void *)(a1 + 40) + 8);
        if (!v8)
        {
          *(void *)(*(void *)(a1 + 40) + 8) = objc_alloc_init((Class)TSURetainedPointerKeyDictionary);
          id v8 = *(void **)(*(void *)(a1 + 40) + 8);
        }
        uint64_t v9 = (THPageLayerAndSubviewHost *)[v8 objectForKey:v7];
        id v10 = [*(id *)(a1 + 40) p_relativePageIndexForPageInfo:v7];
        if (v9) {
          goto LABEL_36;
        }
        uint64_t v9 = -[THPageLayerAndSubviewHost initWithPageInfo:scrimEnabled:delegate:]([THPageLayerAndSubviewHost alloc], "initWithPageInfo:scrimEnabled:delegate:", v7, *(unsigned __int8 *)(*(void *)(a1 + 40) + 56));
        [*(id *)(*(void *)(a1 + 40) + 8) setObject:v9 forUncopiedKey:v7];
        if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
          *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = +[NSMutableIndexSet indexSet];
        }
        if ((unint64_t)v10 <= 0x7FFFFFFFFFFFFFFELL) {
          [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addIndex:v10];
        }

        if (v9)
        {
LABEL_36:
          if (![(THPageLayerAndSubviewHost *)v9 rep])
          {
            TSDRectWithOriginAndSize();
            -[THPageLayerAndSubviewHost setUnscaledFrame:unscaledLayerOffset:viewScale:](v9, "setUnscaledFrame:unscaledLayerOffset:viewScale:");
            uint64_t v11 = *(void *)(a1 + 40);
            if (*(unsigned char *)(v11 + 56)) {
              [(THPageLayerAndSubviewHost *)v9 loadPreviewOnQueue:*(void *)(v11 + 40)];
            }
            [*(id *)(a1 + 48) addObject:[v9 view]];
            [*(id *)(a1 + 48) addObject:[v9 borderView]];
          }
        }
        [*(id *)(*(void *)(a1 + 40) + 16) removeObject:v9];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v24 objects:v29 count:16];
      id v4 = result;
    }
    while (result);
  }
  if (*(unsigned char *)(a1 + 88))
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    uint64_t v12 = *(void **)(*(void *)(a1 + 40) + 8);
    id result = [v12 countByEnumeratingWithState:&v20 objects:v28 count:16];
    if (result)
    {
      id v13 = result;
      uint64_t v14 = *(void *)v21;
      do
      {
        double v15 = 0;
        do
        {
          if (*(void *)v21 != v14) {
            objc_enumerationMutation(v12);
          }
          uint64_t v16 = *(void *)(*((void *)&v20 + 1) + 8 * (void)v15);
          id v17 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKey:v16];
          if (v17)
          {
            id v18 = v17;
            if (![v17 rep]
              && (objc_msgSend(*(id *)(a1 + 32), "tsu_containsObjectIdenticalTo:", v16) & 1) == 0)
            {
              long long v19 = *(void **)(*(void *)(a1 + 40) + 16);
              if (!v19)
              {
                *(void *)(*(void *)(a1 + 40) + 16) = objc_alloc_init((Class)TSUMutableRetainedPointerSet);
                long long v19 = *(void **)(*(void *)(a1 + 40) + 16);
              }
              [v19 addObject:v18];
            }
          }
          double v15 = (char *)v15 + 1;
        }
        while (v13 != v15);
        id result = [v12 countByEnumeratingWithState:&v20 objects:v28 count:16];
        id v13 = result;
      }
      while (result);
    }
  }
  return result;
}

void sub_749D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

id sub_749F4(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  [*(id *)(*(void *)(a1 + 32) + 16) removeAllObjects];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id obj = *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  id result = [obj countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v10;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(id *)(*((void *)&v9 + 1) + 8 * (void)v5);
        id v7 = [v6 pageInfo];
        [*(id *)(a1 + 40) addObject:[v6 view]];
        [*(id *)(a1 + 40) addObject:[v6 borderView]];
        if ([*(id *)(*(void *)(a1 + 32) + 8) objectForKey:v7] != v6) {
          [TSUAssertionHandler currentHandler] handleFailureInFunction:[NSString stringWithUTF8String:@"-[THPageViewProvider p_recyclePageHosts]_block_invoke"] file:[NSString stringWithUTF8String:@"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THPageViewProvider.m"] lineNumber:249 description:@"pageInfoToPageHost[%@] = %@; expected %@",
        }
            v7,
            [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:v7],
            v6);
        if ([*(id *)(*(void *)(a1 + 32) + 8) objectForKey:v7] == v6) {
          [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:v7];
        }
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [obj countByEnumeratingWithState:&v9 objects:v13 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_74CE8(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 8);
  id result = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v10;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:*(void *)(*((void *)&v9 + 1) + 8 * (void)v6)];
        if ([v7 rep])
        {
          [v7 canvasBoundsFrame];
          BOOL v8 = CGRectIntersectsRect(v14, *(CGRect *)(a1 + 40));
          if (!v8 || !*(unsigned char *)(a1 + 72)) {
            [v7 unloadPreviewAnimated:v8];
          }
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      id v4 = result;
    }
    while (result);
  }
  return result;
}

void sub_75090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_750A8(uint64_t a1, void *a2, unsigned char *a3)
{
  id result = [a2 absolutePageIndex];
  if (result == *(id *)(a1 + 40))
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = a2;
    *a3 = 1;
  }
  return result;
}

uint64_t sub_75224(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_7532C(void *a1)
{
  uint64_t v2 = *(void **)(a1[4] + 8);
  if (!v2)
  {
    *(void *)(a1[4] + 8) = objc_alloc_init((Class)TSURetainedPointerKeyDictionary);
    uint64_t v2 = *(void **)(a1[4] + 8);
  }
  id result = [v2 objectForKey:a1[5]];
  *(void *)(*(void *)(a1[6] + 8) + 40) = result;
  uint64_t v4 = a1[6];
  if (*(void *)(*(void *)(v4 + 8) + 40))
  {
    id result = [*(id *)(a1[4] + 16) containsObject:];
    uint64_t v4 = a1[6];
    if (result)
    {
      id result = [*(id *)(a1[4] + 16) removeObject:*(void *)(*(void *)(v4 + 8) + 40)];
      uint64_t v4 = a1[6];
    }
  }
  if (!*(void *)(*(void *)(v4 + 8) + 40)) {
    return [TSUAssertionHandler currentHandler].handleFailureInFunction:+[NSString stringWithUTF8String:"-[THPageViewProvider layerAndSubviewHostForPageInfo:]_block_invoke"] file:+[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THPageViewProvider.m"] lineNumber:423 description:@"invalid nil value for '%s'", "result"];
  }
  return result;
}

id sub_7553C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 16) = objc_alloc_init((Class)TSUMutableRetainedPointerSet);
    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  }
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 addObject:v3];
}

id sub_76790(uint64_t a1, CGContextRef c)
{
  CGContextScaleCTM(c, *(CGFloat *)(a1 + 40), *(CGFloat *)(a1 + 40));
  id v4 = [*(id *)(a1 + 32) wpTextHelper];
  id v5 = [*(id *)(a1 + 32) wpColumnHelper];
  double v6 = *(double *)(a1 + 40);

  return [v4 drawColumn:v5 inContext:c isFlipped:0 viewScale:v6];
}

id sub_78248(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePanelDescriptionExpanded];
}

uint64_t THIntegralCenterRectInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  v18.origin.x = a5;
  v18.origin.y = a6;
  v18.size.width = a7;
  v18.size.height = a8;
  CGRectGetMidX(v18);
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  CGRectGetWidth(v19);
  v20.origin.x = a5;
  v20.origin.y = a6;
  v20.size.width = a7;
  v20.size.height = a8;
  CGRectGetMidY(v20);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetHeight(v21);

  return TSDRoundedRectForMainScreen();
}

double THRectCenterRectInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  v19.origin.x = a5;
  v19.origin.y = a6;
  v19.size.width = a7;
  v19.size.height = a8;
  double MidX = CGRectGetMidX(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  double v16 = MidX - CGRectGetWidth(v20) * 0.5;
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  CGRectGetMidY(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetHeight(v22);
  return v16;
}

double THCenterOfIntegralRectCenteredOnPoint()
{
  TSDRoundedRectForMainScreen();
  CGFloat x = v6.origin.x;
  CGFloat y = v6.origin.y;
  CGFloat width = v6.size.width;
  CGFloat height = v6.size.height;
  double MidX = CGRectGetMidX(v6);
  v7.origin.CGFloat x = x;
  v7.origin.CGFloat y = y;
  v7.size.CGFloat width = width;
  v7.size.CGFloat height = height;
  CGRectGetMidY(v7);
  return MidX;
}

double THScaleNeededToFitSizeInSize(double a1, double a2, double a3, double a4)
{
  double result = 1.0;
  if (a2 > 0.0 && a1 > 0.0)
  {
    double result = a4 / a2;
    if (a3 / a1 < a4 / a2) {
      return a3 / a1;
    }
  }
  return result;
}

double THScaleNeededToFillSizeInSize(double a1, double a2, double a3, double a4)
{
  double result = 1.0;
  if (a2 > 0.0 && a1 > 0.0)
  {
    double result = a4 / a2;
    if (a3 / a1 >= a4 / a2) {
      return a3 / a1;
    }
  }
  return result;
}

CGFloat THRectMultiplyRectCenteredScalar(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  CGFloat v9 = CGRectGetMidX(*(CGRect *)&a1) - a3 * a5 * 0.5;
  v11.origin.CGFloat x = a1;
  v11.origin.CGFloat y = a2;
  v11.size.CGFloat width = a3;
  v11.size.CGFloat height = a4;
  CGRectGetMidY(v11);
  return v9;
}

void *sub_78EB8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackState:4];
  [*(id *)(a1 + 32) stopAllAnimations];
  double result = *(void **)(a1 + 32);
  if (!result[2])
  {
    return [result tearDownShow];
  }
  return result;
}

id sub_79004(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "showMode");
  if (result != 2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 p_triggerNextEvent];
  }
  return result;
}

id sub_790FC(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isAnimating] & 1) != 0
    || (id result = [*(id *)(*(void *)(a1 + 32) + 8) decrementCurrentEventIndex], result))
  {
    [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:2];
    objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "renderEventWithSession:", *(void *)(*(void *)(a1 + 32) + 8));
    [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:1];
    *(unsigned char *)(*(void *)(a1 + 32) + 26) = 0;
    id result = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "isAutomatic");
    if (result)
    {
      uint64_t v3 = *(void **)(a1 + 32);
      return [v3 p_triggerNextEvent];
    }
  }
  return result;
}

id sub_79234(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setEventIndex:*(void *)(a1 + 40) skipBreadCrumb:*(unsigned __int8 *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:2];
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "renderEventWithSession:", *(void *)(*(void *)(a1 + 32) + 8));
  [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:1];
  *(unsigned char *)(*(void *)(a1 + 32) + 26) = 0;
  id result = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "isAutomatic");
  if (result && *(unsigned char *)(a1 + 49))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 p_triggerNextEvent];
  }
  return result;
}

id sub_793CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) gotoEventIndex:0];
}

id sub_794C0(uint64_t a1)
{
  uint64_t v1 = *(id **)(a1 + 32);
  uint64_t v2 = (char *)[v1[1] KPFDocument] - 1;

  return [v1 gotoEventIndex:v2];
}

id sub_79584(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "eventIndexForSlideIndex:", *(void *)(a1 + 40));
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 gotoEventIndex:v2];
}

id sub_79670(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) visibleEventIndex];
  uint64_t v3 = (char *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "slideIndexForEventIndex:", v2);
  id v4 = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "eventIndexForSlideIndex:", v3);
  if (v2 == v4)
  {
    if (v3)
    {
      id v5 = v3 - 1;
    }
    else if (objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument", v4), "isLooping"))
    {
      id v5 = (char *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "slideCount") - 1;
    }
    else
    {
      id v5 = 0;
    }
    id v4 = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument", v4), "eventIndexForSlideIndex:", v5);
  }
  [*(id *)(*(void *)(a1 + 32) + 8) setEventIndex:v4 skipBreadCrumb:0];
  [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:2];
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "renderEventWithSession:", *(void *)(*(void *)(a1 + 32) + 8));
  id result = [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:1];
  *(unsigned char *)(*(void *)(a1 + 32) + 26) = 0;
  return result;
}

id sub_79A4C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) currentEvent];
  if ([*(id *)(*(void *)(a1 + 32) + 8) playbackStatus] == 4
    || [v2 isAutomatic]
    && [*(id *)(*(void *)(a1 + 32) + 8) playbackStatus] != 3)
  {
    id v2 = [*(id *)(*(void *)(a1 + 32) + 8) nextEvent];
  }
  id result = [v2 hyperlinkAtLocation:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  if (result)
  {
    id v4 = result;
    if ([result hasPrefix:@"?slide="])
    {
      objc_msgSend(*(id *)(a1 + 32), "gotoEventIndex:", objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "eventIndexForSlideIndex:", (int)(objc_msgSend(objc_msgSend(v4, "substringFromIndex:", 7), "intValue") - 1)));
    }
    else if ([v4 isEqualToString:@"?action=exitpresentation"])
    {
      if (!*(unsigned char *)(*(void *)(a1 + 32) + 24)) {
        goto LABEL_16;
      }
    }
    else
    {
      unsigned int v5 = [v4 isEqualToString:@"?action=retreat"];
      CGRect v6 = *(void **)(a1 + 32);
      if (v5) {
        [v6 retreatToPreviousSlide];
      }
      else {
        [v6 p_handleURL:v4];
      }
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
LABEL_16:
    CGRect v7 = *(void **)(a1 + 32);
    return [v7 p_announceStateUpdate];
  }
  return result;
}

id sub_79CD8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) transportControlCloneCanGotoPrev];
  if (result)
  {
    [*(id *)(a1 + 32) gotoPreviousSlide];
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 p_announceStateUpdate];
  }
  return result;
}

id sub_79DAC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) transportControlCloneCanGotoNext];
  if (result)
  {
    [*(id *)(a1 + 32) gotoNextEvent];
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 p_announceStateUpdate];
  }
  return result;
}

id sub_79E80(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) transportControlCloneCanGotoFirst];
  if (result)
  {
    [*(id *)(a1 + 32) resetToFirstEventAndShouldAutoPlay:0];
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 p_announceStateUpdate];
  }
  return result;
}

id sub_79F58(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) transportControlCloneCanGotoLast];
  if (result)
  {
    [*(id *)(a1 + 32) gotoLastEvent];
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 p_announceStateUpdate];
  }
  return result;
}

id sub_7A0AC(uint64_t a1)
{
  [*(id *)(a1 + 32) gotoSlideIndex:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);

  return [v2 p_announceStateUpdate];
}

id *sub_7A59C(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 8) playbackState] == 2)
  {
    [*(id *)(a1 + 32) p_playSoundtrack];
    [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackState:3];
  }
  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 8) playbackStatus];
  id result = *(id **)(a1 + 32);
  if (v2 != 4) {
    goto LABEL_10;
  }
  [result[1] setPlaybackStatus:2];
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "tearDown");
  unsigned int v4 = [*(id *)(*(void *)(a1 + 32) + 8) incrementCurrentEventIndex];
  id result = *(id **)(a1 + 32);
  if (v4)
  {
    objc_msgSend(objc_msgSend(result[1], "currentEvent"), "renderEventWithSession:", *(void *)(*(void *)(a1 + 32) + 8));
    [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:1];
    id result = *(id **)(a1 + 32);
    goto LABEL_10;
  }
  if (!*((unsigned char *)result + 24))
  {
LABEL_10:
    if (!*((unsigned char *)result + 26))
    {
      id result = (id *)[result isAnimating];
      uint64_t v5 = *(void *)(a1 + 32);
      if (result)
      {
        *(unsigned char *)(v5 + 26) = 1;
      }
      else
      {
        unsigned int v6 = objc_msgSend(objc_msgSend(*(id *)(v5 + 8), "currentEvent"), "isMoviePlaying");
        uint64_t v7 = *(void *)(a1 + 32);
        if (v6)
        {
          *(unsigned char *)(v7 + 26) = 1;
          id v8 = [*(id *)(*(void *)(a1 + 32) + 8) currentEvent];
          return (id *)[v8 stopMoviePlayback];
        }
        else if ([*(id *)(v7 + 8) playbackStatus] == 1 {
               && (CGFloat v9 = (char *)[*(id *)(*(void *)(a1 + 32) + 8) currentEventIndex],
        }
                   v9 < (char *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "eventCount")- 1))
        {
          id v10 = [*(id *)(*(void *)(a1 + 32) + 8) currentEvent];
          v13[0] = _NSConcreteStackBlock;
          v13[1] = 3221225472;
          v13[2] = sub_7A824;
          v13[3] = &unk_456DE0;
          v13[4] = *(void *)(a1 + 32);
          [v10 setAnimationEndHandler:v13];
          [*(id *)(*(void *)(a1 + 32) + 8) setPlaybackStatus:3];
          return (id *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "currentEvent"), "animateEventWithSession:", *(void *)(*(void *)(a1 + 32) + 8));
        }
        else
        {
          id result = (id *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "isLooping");
          if (result)
          {
            CGRect v11 = (char *)[*(id *)(*(void *)(a1 + 32) + 8) currentEventIndex];
            id result = (id *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "KPFDocument"), "eventCount");
            if (v11 == (char *)result - 1)
            {
              long long v12 = *(void **)(a1 + 32);
              return (id *)[v12 gotoFirstEvent];
            }
          }
        }
      }
    }
    return result;
  }

  return (id *)[result endshow];
}

id sub_7A824(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"p_animationEnded" withObject:0 afterDelay:0.0];
}

void sub_7AA30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_7D010(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_7D088;
  block[3] = &unk_456DE0;
  block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

char *sub_7D088(uint64_t a1)
{
  id result = (char *)objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 80), "asset"), "statusOfValueForKey:error:", @"tracks", 0);
  if (result == (unsigned char *)&dword_0 + 2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 showsClosedCaptions];
    return (char *)[v3 p_setShowsClosedCaptions:v4];
  }
  return result;
}

uint64_t sub_7DAB4(uint64_t a1)
{
  qword_5731D8 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_7DF60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_7E1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_7E2C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_7E4D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_7E7FC(uint64_t a1, void *a2)
{
  unsigned int v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 url];
  [v3 logEvent:@"viewControllerForAsset" forAsset:v4];
}

void sub_7F508(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = BCIMLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_2A09E0(a1, (uint64_t)v3, v4);
    }

    uint64_t v5 = +[NSError errorWithDomain:AssetEngineErrorDomain code:1001 userInfo:0];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_7F7CC;
    block[3] = &unk_4582C0;
    id v6 = *(id *)(a1 + 64);
    id v31 = v5;
    id v32 = v6;
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    v28[0] = 0;
    v28[1] = v28;
    v28[2] = 0x3032000000;
    v28[3] = sub_7F7E4;
    v28[4] = sub_7F7F4;
    id v29 = 0;
    id v8 = *(void **)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 48);
    id obj = 0;
    unsigned __int8 v10 = [v8 helper:v9 validateBookAuthorizationWithError:&obj needsCoordination:0];
    objc_storeStrong(&v29, obj);
    CGRect v11 = [*(id *)(a1 + 40) assetInfoForURL:*(void *)(a1 + 32)];
    long long v12 = [*(id *)(a1 + 40) descriptionForAsset:v11];
    [v12 loadMetadata];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_7F7FC;
    v17[3] = &unk_458388;
    unsigned __int8 v25 = v10;
    uint64_t v13 = *(void *)(a1 + 40);
    CGRect v14 = *(void **)(a1 + 48);
    long long v24 = v28;
    v17[4] = v13;
    id v18 = v14;
    id v19 = v11;
    id v20 = v12;
    id v21 = *(id *)(a1 + 56);
    char v26 = *(unsigned char *)(a1 + 72);
    id v22 = *(id *)(a1 + 32);
    id v23 = *(id *)(a1 + 64);
    id v15 = v12;
    id v16 = v11;
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, v17);

    _Block_object_dispose(v28, 8);
  }
}

void sub_7F7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_7F7CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

uint64_t sub_7F7E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_7F7F4(uint64_t a1)
{
}

void sub_7F7FC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 96))
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 88) + 8);
    uint64_t v4 = *(void *)(v2 + 40);
    id v3 = (id *)(v2 + 40);
    if (!v4)
    {
      id v29 = *(void **)(a1 + 32);
      uint64_t v30 = *(void *)(a1 + 40);
      uint64_t v31 = *(void *)(a1 + 48);
      uint64_t v32 = *(void *)(a1 + 56);
      uint64_t v33 = *(void *)(a1 + 64);
      id v65 = 0;
      long long v34 = [v29 _helper:v30 assetInfo:v31 viewControllerForBookDescription:v32 options:v33 error:&v65];
      objc_storeStrong(v3, v65);
LABEL_23:
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_80180;
      block[3] = &unk_458310;
      id v40 = *(id *)(a1 + 80);
      id v48 = v34;
      id v49 = v40;
      uint64_t v50 = *(void *)(a1 + 88);
      id v7 = v34;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      id v8 = v49;
      goto LABEL_24;
    }
  }
  if (!*(unsigned char *)(a1 + 97)
    || [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) code] != (char *)&stru_790.flags + 2
    || ([*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) domain],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = [v5 isEqualToString:AssetEngineErrorDomain],
        v5,
        !v6))
  {
LABEL_22:
    long long v34 = 0;
    goto LABEL_23;
  }
  id v7 = +[AEAssetEngine appInfoMgr];
  id v8 = [*(id *)(a1 + 72) path];
  uint64_t v9 = [v8 stringByAppendingPathComponent:@"iTunesMetadata.plist"];
  unsigned __int8 v10 = +[NSDictionary dictionaryWithContentsOfFile:v9];
  CGRect v11 = [v10 objectForKey:@"com.apple.iTunesStore.downloadInfo"];
  v46 = [v11 valueForKeyPath:@"accountInfo.DSPersonID"];
  long long v12 = [v11 valueForKeyPath:@"accountInfo.AltDSID"];
  uint64_t v13 = [v11 valueForKeyPath:@"accountInfo.AppleID"];
  if (![v13 length])
  {
    uint64_t v14 = [v10 objectForKeyedSubscript:@"apple-id"];

    uint64_t v13 = (void *)v14;
  }
  if (![v13 length])
  {

LABEL_21:
    goto LABEL_22;
  }
  v45 = v12;
  id v15 = +[ACAccountStore bu_sharedAccountStore];
  id v16 = [v15 ams_iTunesAccountWithUsername:v13];

  if (v16)
  {
    id v17 = [v16 credential];
    unsigned int v18 = [v17 isEmpty];

    if (!v18)
    {
      float v35 = [v16 ams_DSID];
      if ((objc_opt_respondsToSelector() & 1) != 0 && [v7 isConnectedToInternet] && v35)
      {
        v51[0] = _NSConcreteStackBlock;
        v51[1] = 3221225472;
        v51[2] = sub_7FFC4;
        v51[3] = &unk_458360;
        float v36 = *(void **)(a1 + 40);
        v51[4] = *(void *)(a1 + 32);
        id v52 = v36;
        id v53 = *(id *)(a1 + 64);
        id v37 = *(id *)(a1 + 80);
        id v54 = v35;
        id v55 = 0;
        uint64_t v38 = *(void *)(a1 + 88);
        id v56 = v37;
        uint64_t v57 = v38;
        id v39 = v35;
        +[PFDContext Xj3eVHDeBoTD6fVn6fY8:v39 completion:v51];

        goto LABEL_24;
      }

      goto LABEL_21;
    }
  }
  v43 = v16;
  v44 = v9;
  id v19 = BCIMLog();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    uint64_t v20 = *(void *)(a1 + 72);
    *(_DWORD *)buf = 138412546;
    uint64_t v67 = v20;
    __int16 v68 = 2112;
    v69 = v13;
    _os_log_impl(&dword_0, v19, OS_LOG_TYPE_INFO, "Auth needed due to non-existing account for asset at url, username: %@ -- %@", buf, 0x16u);
  }

  float v42 = [*(id *)(a1 + 64) objectForKeyedSubscript:BCTransactionOptionsTransactionKey];
  float v41 = [v7 _mainViewControllerForTransaction:v42];
  id v21 = objc_alloc_init((Class)AMSAuthenticateOptions);
  [v21 setCanMakeAccountActive:0];
  id v22 = [objc_alloc((Class)AMSAuthenticateRequest) initWithDSID:v46 altDSID:v45 username:v13 options:v21];
  id v23 = [objc_alloc((Class)AMSUIAuthenticateTask) initWithRequest:v22 presentingViewController:v41];
  long long v24 = [v23 performAuthentication];
  v58[0] = _NSConcreteStackBlock;
  v58[1] = 3221225472;
  v58[2] = sub_7FE1C;
  v58[3] = &unk_458338;
  unsigned __int8 v25 = *(void **)(a1 + 40);
  v58[4] = *(void *)(a1 + 32);
  id v59 = v25;
  id v60 = *(id *)(a1 + 64);
  id v26 = *(id *)(a1 + 80);
  uint64_t v27 = *(void *)(a1 + 88);
  id v63 = v26;
  uint64_t v64 = v27;
  id v61 = v13;
  id v62 = 0;
  id v28 = v13;
  [v24 addFinishBlock:v58];

LABEL_24:
}

void sub_7FE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2 || a3)
  {
    unsigned int v6 = BCIMLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_2A0A5C();
    }

    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_7FFA4;
    v9[3] = &unk_458310;
    id v11 = *(id *)(a1 + 72);
    id v7 = *(id *)(a1 + 64);
    uint64_t v8 = *(void *)(a1 + 80);
    id v10 = v7;
    uint64_t v12 = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

    uint64_t v5 = v11;
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_7FF90;
    block[3] = &unk_4582E8;
    uint64_t v4 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    id v14 = v4;
    id v15 = *(id *)(a1 + 48);
    id v16 = *(id *)(a1 + 72);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    uint64_t v5 = v14;
  }
}

id sub_7FF90(uint64_t a1)
{
  return [*(id *)(a1 + 32) _helper:*(void *)(a1 + 40) canRefetch:1 viewControllerWithOptions:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

uint64_t sub_7FFA4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[5] + 16))(a1[5], a1[4], *(void *)(*(void *)(a1[6] + 8) + 40));
}

void sub_7FFC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = BCIMLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_2A0AE4();
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_80160;
    block[3] = &unk_458310;
    id v11 = *(id *)(a1 + 72);
    id v5 = *(id *)(a1 + 64);
    uint64_t v6 = *(void *)(a1 + 80);
    id v10 = v5;
    uint64_t v12 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    id v7 = v11;
  }
  else
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_8014C;
    v13[3] = &unk_4582E8;
    uint64_t v8 = *(void **)(a1 + 40);
    v13[4] = *(void *)(a1 + 32);
    id v14 = v8;
    id v15 = *(id *)(a1 + 48);
    id v16 = *(id *)(a1 + 72);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);

    id v7 = v14;
  }
}

id sub_8014C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _helper:*(void *)(a1 + 40) canRefetch:0 viewControllerWithOptions:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

uint64_t sub_80160(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[5] + 16))(a1[5], a1[4], *(void *)(*(void *)(a1[6] + 8) + 40));
}

uint64_t sub_80180(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[5] + 16))(a1[5], a1[4], *(void *)(*(void *)(a1[6] + 8) + 40));
}

void sub_804C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_80540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_80700(uint64_t a1, void *a2)
{
  return [a2 logEvent:@"helperForURL" forAsset:*(void *)(a1 + 32)];
}

void sub_807D8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_80A90(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  [v1 setObject:[IMTheme themeWithIdentifier:kIMThemeIdentifierWhitePageTheme] forKey:[NSNumber numberWithInt:0]];
  [v1 setObject:[IMTheme themeWithIdentifier:kIMThemeIdentifierSepiaPageTheme] forKey:[NSNumber numberWithInt:1]];
  [v1 setObject:[IMTheme themeWithIdentifier:kIMThemeIdentifierGrayPageTheme] forKey:[NSNumber numberWithInt:2]];
  [v1 setObject:[IMTheme themeWithIdentifier:kIMThemeIdentifierNightPageTheme] forKey:[NSNumber numberWithInt:3]];
  [v1 setObject:[IMTheme themeWithIdentifier:kIMThemeIdentifierBlissClassicTheme] forKey:[NSNumber numberWithInt:4]];
  qword_5731F0 = (uint64_t)v1;
}

void sub_819A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_819C4(uint64_t a1, uint64_t a2)
{
  Weauint64_t k = objc_loadWeak((id *)(a1 + 32));

  return [Weak _updateAppearanceFromLightLevelController:a2];
}

id sub_82460(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) titleLabelNavigationBar];

  return [v1 setAlpha:1.0];
}

id sub_82490(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) titleLabelNavigationBar];

  return [v1 setHidden:0];
}

id sub_824C0(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabelNavigationBar"), "setAlpha:", 0.0);
  id v2 = [*(id *)(a1 + 32) actionlessBookmarkButton];

  return [v2 setAlpha:0.0];
}

id *sub_8250C(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    objc_msgSend(objc_msgSend(result[4], "titleLabelNavigationBar"), "setLeftItems:rightItems:titleView:animated:", &__NSArray0__struct, &__NSArray0__struct, 0, 0);
    id v3 = [v2[4] titleLabelNavigationBar];
    return (id *)[v3 setHidden:1];
  }
  return result;
}

void sub_82D10(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

id *sub_82D28(id *result, uint64_t a2)
{
  if (*(unsigned char *)(*((void *)result[5] + 1) + 24) && *((unsigned char *)result + 64) && !*((unsigned char *)result[4] + 210)) {
    return (id *)[result[4] p_bookViewWillAnimateRotationToSize:a2 withContext:*((double *)result + 6), *((double *)result + 7)];
  }
  return result;
}

id sub_82D68(uint64_t a1, uint64_t a2)
{
  id v3 = *(unsigned char **)(a1 + 32);
  if (!v3[210])
  {
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) && *(unsigned char *)(a1 + 64)) {
      [v3 p_bookViewDidAnimateRotationToSize:a2 withContext:*(double *)(a1 + 48), *(double *)(a1 + 56)];
    }
    id v5 = *(void **)(a1 + 32);
    double v6 = *(double *)(a1 + 48);
    double v7 = *(double *)(a1 + 56);
    if (*(unsigned char *)(a1 + 64)) {
      [v5 p_bookViewDidRotateTransitionToSize:a2 withContext:v6, v7];
    }
    else {
      [v5 p_bookViewDidTransitionToSize:a2 withContext:v6, v7];
    }
  }
  uint64_t v8 = *(void **)(a1 + 32);

  return [v8 emitReadingOrientationChangeEventIfNeeded];
}

id sub_83A80(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateFromTheme:0];
}

uint64_t sub_84090(uint64_t a1)
{
  [*(id *)(a1 + 32) p_unloadGlossaryViewControllerIfHiding];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_84234(uint64_t a1)
{
  [*(id *)(a1 + 32) setPresentingGlossary:1];
  id result = [*(id *)(a1 + 32) isGlossaryVisible];
  if ((result & 1) == 0)
  {
    [*(id *)(a1 + 32) p_ensureGlossaryViewController];
    id result = [*(id *)(a1 + 32) glossaryViewController];
    if (result)
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "setOriginalViewController:", objc_msgSend(*(id *)(a1 + 32), "visibleViewController"));
      objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "view"), "setAutoresizingMask:", 18);
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "setTheme:", objc_msgSend(*(id *)(a1 + 32), "theme"));
      [*(id *)(a1 + 32) vantageWillChangeBy:*(void *)(a1 + 32) reason:@"THVantageChangeReasonTransitionToGlossary"];
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "setModalTransitionStyle:", 0);
      objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), 1, &stru_458440);
      id v3 = *(void **)(a1 + 32);
      return [v3 vantageDidChangeBy:v3 reason:@"THVantageChangeReasonTransitionToGlossary"];
    }
  }
  return result;
}

void sub_8434C(id a1)
{
}

id sub_84CD0(uint64_t a1)
{
  double v2 = *(double *)(a1 + 56);
  double v3 = *(double *)(a1 + 64);
  double v4 = *(double *)(a1 + 88);
  double v5 = *(double *)(a1 + 96);
  memset(&v15, 0, sizeof(v15));
  CGAffineTransformMakeScale(&v15, v2 / v4, v3 / v5);
  TSDCenterOfRect();
  TSDCenterOfRect();
  TSDSubtractPoints();
  CGAffineTransform t1 = v15;
  CGAffineTransformMakeTranslation(&t2, v6, v7);
  CGAffineTransformConcat(&v14, &t1, &t2);
  CGAffineTransform v15 = v14;
  CGAffineTransform v11 = v14;
  id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "canvasScrollView");
  CGAffineTransform v10 = v11;
  return [v8 setTransform:&v10];
}

id sub_84DCC(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), "showPageThumbnailAtIndex:", *(void *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "p_addViewControllerInFront:reason:", objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), @"THVantageChangeReasonTransitionToTOC");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController", *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88)), "canvasScrollView"), "setTransform:", &v3);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "setVisibleInfoUpdatesAllowedInLandscape:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), "didTransitionFromCanvas");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "endRevealTOC");
  return [(*(id *)(a1 + 32)) p_removeViewController:[(*(id *)(a1 + 32)) documentViewController]];
}

uint64_t sub_851AC(uint64_t a1)
{
  [*(id *)(a1 + 32) setEnabled:1];
  +[UIViewController attemptRotationToDeviceOrientation];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    long long v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_85394(uint64_t a1)
{
  [*(id *)(a1 + 32) p_clearNotesFullscreenViewController];
  *(unsigned char *)(*(void *)(a1 + 32) + 273) = 0;
  double v2 = *(void **)(a1 + 32);
  if (*(void *)(a1 + 40))
  {
    [v2 showSearchPopoverWithText:];
  }
  else
  {
    id v3 = [v2 visibleViewController];
    if (v3 == [*(id *)(a1 + 32) documentViewController]
      && objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "isViewLoaded"))
    {
      objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "interactiveCanvasController"), "resumeEditing");
    }
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    double v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

uint64_t sub_856E4(uint64_t result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    objc_msgSend(objc_msgSend(*(id *)(*(void *)(result + 32) + 48), "interactiveCanvasController"), "layoutIfNeeded");
    if (*(unsigned char *)(v2 + 56)) {
      [*(id *)(v2 + 32) followAnchor:*(void *)(v2 + 40) pulse:0];
    }
    if (*(unsigned char *)(v2 + 57)) {
      [*(id *)(v2 + 32) hideLoadSpinner];
    }
    uint64_t result = *(void *)(v2 + 48);
    if (result)
    {
      id v3 = *(uint64_t (**)(void))(result + 16);
      return v3();
    }
  }
  return result;
}

id sub_85DB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_unloadStudyViewController];
}

id sub_86368(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"viewsAreReadyForOpenAnimation" forBookDescription:v3];
}

id sub_86AB4(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"didLoadBook:begin" forBookDescription:v3];
}

void sub_86AFC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) assetViewControllerDelegate];
  id v3 = +[NSError errorWithDomain:AssetEngineErrorDomain code:2003 userInfo:0];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_86BB0;
  block[3] = &unk_456F28;
  uint64_t v4 = *(void *)(a1 + 32);
  void block[4] = v2;
  void block[5] = v4;
  block[6] = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_86BB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) assetViewController:*(void *)(a1 + 40) handleFamilyChangeError:*(void *)(a1 + 48)];
}

id sub_86BC0(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"didLoadBook:end" forBookDescription:v3];
}

id sub_86E88(uint64_t a1)
{
  unsigned int v2 = +[NSThread isMainThread];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    return [v3 didLoadBook:0];
  }
  else
  {
    return [v3 performSelectorOnMainThread:"didLoadBook:" withObject:0 waitUntilDone:0];
  }
}

id sub_872C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_closeBookAndGoToStorePageForBook];
}

id sub_8747C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_closeBookAndGoToStorePageForBook];
}

id sub_87618(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) presentingViewController];

  return [v1 dismissViewControllerAnimated:1 completion:0];
}

id sub_87804(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_postponeAlertForRetinaUpdate];
}

id sub_8780C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_closeBookAndGoToStoreForRetinaUpdate];
}

id sub_87CEC(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"open" forBookDescription:v3];
}

id sub_880A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_jumpToLocation:*(void *)(a1 + 40)];
}

id sub_8828C(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"openDidFinish" forBookDescription:v3];
}

id sub_88670(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"close" forBookDescription:v3];
}

id sub_88934(uint64_t a1)
{
  [*(id *)(a1 + 32) setReadingStatisticsControllerLoaded:1];
  unsigned int v2 = *(void **)(a1 + 32);

  return [v2 _checkIfScanningReadingStatisticsCanBegin];
}

void sub_8A16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_8A184(uint64_t a1, uint64_t a2)
{
}

void sub_8A194(uint64_t a1)
{
}

id sub_8A1A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeObject:*(void *)(a1 + 40)];
}

id sub_8A1AC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeObject:*(void *)(a1 + 40)];
  unsigned int v2 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);

  return [v2 corruptBookAlert];
}

void sub_8A670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 168), 8);
  _Unwind_Resume(a1);
}

id sub_8A6B0(void *a1)
{
  id result = [*(id *)(a1[4] + 160) isEqual:a1[5]];
  if (result)
  {
    objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1[6] + 8) + 40), "guidedPanController"), "clearTarget");
    [*(id *)(*(void *)(a1[7] + 8) + 40) p_updateCanvasWithPendingPageIndexPath];
    id v3 = *(void **)(*(void *)(a1[6] + 8) + 40);
    uint64_t v4 = a1[8];
    return [v3 removePreviewForRelativePageIndex:v4];
  }
  return result;
}

id sub_8A738(void *a1)
{
  *(void *)(a1[4] + 160) = 0;
  [*(id *)(*(void *)(a1[5] + 8) + 40) endStaticLayoutAndRender:1];
  [*(id *)(*(void *)(a1[5] + 8) + 40) didEndFreeTransform];
  unsigned int v2 = *(void **)(*(void *)(a1[6] + 8) + 40);

  return [v2 corruptBookAlert];
}

id sub_8B200(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:1.0];
}

id sub_8B654(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"closeDocument" forBookDescription:v3];
}

id sub_8B69C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) navigationBarController];

  return [v1 startNavigationBarFade];
}

id sub_8B6C8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) navigationBarController];

  return [v1 completeNavigationBarFade];
}

id sub_8B6F4(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) bookDescription];

  return [a2 logEvent:@"requestClose" forBookDescription:v3];
}

id sub_8C4D4()
{
  objc_opt_class();
  v0 = (void *)BUDynamicCast();

  return [v0 setEnabled:1];
}

id sub_8C5A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_displaySettingsDidHide];
}

void sub_8C850(id a1)
{
}

id sub_8C95C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 p_searchDidHide];
}

id sub_8D92C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_TOCGlossaryPopoverDidHide];
}

void sub_8DA7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_8DA98(uint64_t a1, uint64_t a2)
{
  objc_copyWeak(&to, (id *)(a1 + 48));
  if (objc_loadWeak(&to))
  {
    [objc_loadWeak(&to) dismissActivePopover];
    id v4 = objc_msgSend(objc_msgSend(objc_loadWeak(&to), "documentRoot"), "activityItemProvider");
    double v5 = +[NSMutableArray arrayWithObject:v4];
    CGFloat v6 = v5;
    if (a2) {
      [(NSMutableArray *)v5 addObject:a2];
    }
    id v7 = [objc_alloc((Class)IMActivityController) initWithActivityItems:v6 applicationActivities:0 shareType:[v4 shareType] propertySource:[v4 propertySource] tracker:[*(id *)(a1 + 32) ba_effectiveAnalyticsTracker]];
    objc_msgSend(objc_msgSend(v7, "viewController"), "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 32), "overrideUserInterfaceStyle"));
    [objc_loadWeak(&to) setActivityViewController:[v7 viewController]];
    objc_msgSend(objc_msgSend(objc_loadWeak(&to), "activityViewController"), "setModalPresentationStyle:", 7);
    id v8 = objc_msgSend(objc_msgSend(objc_loadWeak(&to), "activityViewController"), "popoverPresentationController");
    [v8 setBarButtonItem:*(void *)(a1 + 40)];
    [v8 setPermittedArrowDirections:1];
    [v8 setDelegate:objc_loadWeak(&to)];
    [v8 setPassthroughViews:[objc_loadWeak(&to) p_popoverPassthroughViews]];
    [v8 bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:*(void *)(a1 + 32)];
    CGAffineTransform v10 = _NSConcreteStackBlock;
    uint64_t v11 = 3221225472;
    uint64_t v12 = sub_8DD18;
    uint64_t v13 = &unk_458528;
    objc_copyWeak(&v14, &to);
    [v7 setCompletionHandler:&v10];
    id v9 = objc_loadWeak(&to);
    [v9 bc_presentViewController:[v7 viewController:v10, v11, v12, v13] animated:1 tintColor:[UIColor bc_booksKeyColor] completion:&stru_458548];

    objc_destroyWeak(&v14);
  }
  objc_destroyWeak(&to);
}

void sub_8DCE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_8DD18(uint64_t a1)
{
  Weauint64_t k = objc_loadWeak((id *)(a1 + 32));

  return [Weak p_shareDidHide];
}

void sub_8DD44(id a1)
{
}

void sub_8DD50(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_8DDC8;
  v3[3] = &unk_4572A0;
  uint64_t v2 = *(void *)(a1 + 32);
  v3[4] = a2;
  void v3[5] = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

uint64_t sub_8DDC8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_8DE60(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_shareDidHide];
}

id sub_8E1DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 p_bookmarkPopoverDidHide];
}

id sub_8F384(uint64_t a1)
{
  return [*(id *)(a1 + 32) setEnabled:1];
}

id sub_8F9DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBackgroundColor:*(void *)(a1 + 40)];
}

id sub_8F9E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBackgroundColor:*(void *)(a1 + 40)];
}

id sub_8FDD8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v1 = 1.0;
  }
  else {
    double v1 = 0.0;
  }
  id v2 = [*(id *)(a1 + 32) actionlessBookmarkButton];

  return [v2 setAlpha:v1];
}

id sub_8FF20(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 searchButtonItem];
  uint64_t v4 = *(void *)(a1 + 40);

  return [v2 showSearchPopoverFromBarButtonItem:v3 withText:v4];
}

id sub_90468(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateFromTheme:0];
}

id sub_909B0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationOverlayView];
  [*(id *)(a1 + 32) p_navigationOverlayFrame];

  return [v2 setFrame:];
}

id sub_909F8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_90AC0;
  v3[3] = &unk_456E38;
  long long v4 = *(_OWORD *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_90B04;
  v2[3] = &unk_457140;
  v2[4] = v4;
  return +[UIView animateWithDuration:v3 animations:v2 completion:0.2];
}

id sub_90AC0(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  id v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

id sub_90B04(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v2 = *(void **)(a1 + 32);

  return [v2 setAlpha:1.0];
}

id sub_90CEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_90CF8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) superview];
  if (v2 == [*(id *)(a1 + 40) viewIfLoaded]) {
    [*(id *)(a1 + 32) removeFromSuperview];
  }
  [*(id *)(a1 + 32) setAlpha:1.0];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_90DBC;
  v4[3] = &unk_456DE0;
  void v4[4] = *(void *)(a1 + 40);
  return +[UIView animateWithDuration:v4 animations:&stru_458600 completion:0.2];
}

id sub_90DBC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationOverlayView];
  [*(id *)(a1 + 32) p_navigationOverlayFrame];

  return [v2 setFrame:];
}

id sub_90FB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) closeDocumentWithErrorBlock:0];
}

id sub_919C0(uint64_t a1, int a2)
{
  if (a2) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = 2;
  }
  return [*(id *)(a1 + 32) setDoNotDisturbStatusAtStart:v2];
}

void sub_91BAC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_91BF0(uint64_t a1, int a2)
{
  if ([*(id *)(a1 + 32) optedIn]) {
    id v4 = [*(id *)(a1 + 40) doNotDisturbStatusAtStart];
  }
  else {
    id v4 = 0;
  }
  unsigned int v5 = [*(id *)(a1 + 32) optedIn];
  uint64_t v6 = 1;
  if (!a2) {
    uint64_t v6 = 2;
  }
  if (v5) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = [objc_alloc((Class)BADoNotDisturbData) initWithStartStatus:v4 endStatus:v7];
  id v9 = +[BAEventReporter sharedReporter];
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_91CFC;
  v17[3] = &unk_456FB8;
  v17[4] = *(void *)(a1 + 88);
  return [v9 emitReadEventWithTracker:v10 readingSessionData:v11 contentData:v12 readingSettingsData:v13 upSellData:0 contentSettingsData:v14 doNotDisturbData:v8 startTime:v15 completion:v17];
}

void sub_91CFC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_91D74;
  block[3] = &unk_456FB8;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_91D74(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = 0;
}

id sub_9259C(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationBarController"), "navigationBar");
  id v5 = [*(id *)(a1 + 32) view];
  [v4 bounds];
  [v5 convertRect:v4];
  CGFloat x = v16.origin.x;
  CGFloat y = v16.origin.y;
  CGFloat width = v16.size.width;
  CGFloat height = v16.size.height;
  double v10 = CGRectGetWidth(v16);
  v17.origin.CGFloat x = x;
  v17.origin.CGFloat y = y;
  v17.size.CGFloat width = width;
  v17.size.CGFloat height = height;
  [a2 addRegionWithRect:0.0, 0.0, v10, CGRectGetMaxY(v17)];
  id v11 = [*(id *)(a1 + 32) visibleViewController];
  id result = [*(id *)(a1 + 32) documentViewController];
  if (v11 == result)
  {
    id v13 = [*(id *)(a1 + 32) documentViewController];
    uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 376);
    return [v13 buildHoverControlRegionForInteraction:v14 withBuilder:a2];
  }
  return result;
}

void sub_931A4()
{
  qword_5731E8 = BCDefaultAppearanceStyleKey;
}

uint64_t sub_938B4(uint64_t result)
{
  switch(result)
  {
    case 11:
      id result = 12;
      break;
    case 12:
      id result = 11;
      break;
    case 13:
      id result = 14;
      break;
    case 14:
      id result = 13;
      break;
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
      return result;
    case 21:
      id result = 24;
      break;
    case 22:
      id result = 23;
      break;
    case 23:
      id result = 22;
      break;
    case 24:
      id result = 21;
      break;
    case 31:
      id result = 32;
      break;
    case 32:
      id result = 31;
      break;
    case 41:
      id result = 42;
      break;
    case 42:
      id result = 41;
      break;
    case 43:
      id result = 44;
      break;
    case 44:
      id result = 43;
      break;
    default:
      switch(result)
      {
        case 'o':
          id result = 112;
          break;
        case 'p':
          id result = 111;
          break;
        case 'r':
          id result = 115;
          break;
        case 's':
          id result = 114;
          break;
        case 'y':
          id result = 122;
          break;
        case 'z':
          id result = 121;
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

void sub_946D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    [TSUAssertionHandler currentHandler] handleFailureInFunction:[NSString stringWithUTF8String:"-[THUserDataManager initWithBookDescription:]"] file:[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THUserDataManager.m"] lineNumber:124 description:@"Exception initializing user data managed. %@"];

    objc_end_catch();
    JUMPOUT(0x946B4);
  }
  _Unwind_Resume(exception_object);
}

void sub_948D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 32))
  {
    if (*(void *)(v1 + 24))
    {
      id v3 = objc_msgSend(objc_msgSend(*(id *)(v1 + 8), "metadataForPersistentStore:", *(void *)(a1 + 40)), "mutableCopy");
      id v4 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
      [v3 setObject:v4 forKey:@"THUserData-Metadata"];
      [*(id *)(*(void *)(a1 + 32) + 8) setMetadata:v3 forPersistentStore:*(void *)(a1 + 40)];

      *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
    }
  }
}

id sub_94A48(uint64_t a1)
{
  [*(id *)(a1 + 32) p_cacheMetadataDictionary];
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 24);
  if (v2) {
    id result = [v3 setObject:v2 forKey:*(void *)(a1 + 48)];
  }
  else {
    id result = [v3 removeObjectForKey:*(void *)(a1 + 48)];
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
  return result;
}

void sub_94B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_94BA0(uint64_t a1, uint64_t a2)
{
}

void sub_94BB0(uint64_t a1)
{
}

id sub_94BBC(uint64_t a1)
{
  [*(id *)(a1 + 32) p_cacheMetadataDictionary];
  id result = [*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_95E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_96680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_9669C(uint64_t a1, uint64_t a2)
{
}

void sub_966AC(uint64_t a1)
{
}

id sub_966B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = +[NSPredicate predicateWithFormat:@"(plStorageUUID BEGINSWITH[n] %@)", a2];

  return [v2 addObject:v3];
}

id sub_979BC(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(*(id *)(a1 + 32), "p_actionForInsertingAnnotationWithType:style:absolutePageIndex:range:storage:contentNode:updateBlock:", 1, 0, *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 40), objc_msgSend(*(id *)(a1 + 48), "contentNode"), 0);
  id v5 = *(void **)(a1 + 32);

  return [v5 p_performAction:v4 moc:a2];
}

id sub_97B38(uint64_t a1, uint64_t a2)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        [*(id *)(a1 + 40) p_performAction:[*(id *)(a1 + 40) p_actionForDeletingCachedAnnotation:moc:](*(void *)(*((void *)&v10 + 1) + 8 * i), a2) moc:a2];
      }
      id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v6);
  }
  return [*(id *)(a1 + 40) p_closeActionGroupWithMoc:a2];
}

BOOL sub_97D94(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 32) != 0x7FFFFFFFFFFFFFFFLL) {
    return [a2 annotationAbsolutePhysicalPageIndex] == *(id *)(a1 + 32);
  }
  id v3 = [a2 annotationStorageRange];
  unint64_t v4 = *(void *)(a1 + 40);
  return v4 <= (unint64_t)v3 && *(void *)(a1 + 48) + v4 >= (unint64_t)v3 + 1;
}

id sub_97EE4(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) p_actionForInsertingAnnotationWithType:0 style:0 absolutePageIndex:0x7FFFFFFFFFFFFFFFLL range:*(void *)(a1 + 56) storage:*(void *)(a1 + 64) contentNode:*(void *)(a1 + 40) updateBlock:[*(id *)(a1 + 48) contentNode]];
  id v5 = *(void **)(a1 + 32);

  return [v5 p_performAction:v4 moc:a2];
}

void sub_983A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_98424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9866C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_98694(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = -[THAnnotationCache initWithAnnotations:contentNode:]([THAnnotationCache alloc], "initWithAnnotations:contentNode:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_cachedBookmarksWithMoc:", a2), "allValues"), 0);
  id v3 = *(void **)(a1 + 32);
  objc_sync_enter(v3);
  [*(id *)(*(void *)(a1 + 32) + 176) setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKey:@"THMacAnnotationAllBookmarks"];

  return objc_sync_exit(v3);
}

void sub_98738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_9884C(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) p_actionForDeletingCachedAnnotation:*(void *)(a1 + 40) moc:a2];
  id v5 = *(void **)(a1 + 32);

  return [v5 p_performAction:v4 moc:a2];
}

void sub_98914(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(*(id *)(a1 + 32), "p_annotationsForFetchRequest:moc:migrateIfNecessary:", objc_msgSend(*(id *)(a1 + 32), "annotationRequestForNonSponsoredNonOrphaned"), a2, 0);
  if ([v4 count])
  {
    id v5 = [[THAnnotationTextLocator alloc] initWithDocumentRoot:*(void *)(a1 + 40)];
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v13 = a2;
      char v8 = 0;
      uint64_t v9 = *(void *)v17;
      do
      {
        for (unint64_t i = 0; i != v7; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v17 != v9) {
            objc_enumerationMutation(v4);
          }
          long long v11 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          if (objc_msgSend(*(id *)(a1 + 32), "p_annotationNeedsMigration:", v11))
          {
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            if (-[THAnnotationTextLocator locateAnnotationText:leftContext:rightContext:contentNodeID:storageID:](v5, "locateAnnotationText:leftContext:rightContext:contentNodeID:storageID:", [v11 annotationRepresentativeText], objc_msgSend(v11, "selectionPreContextText"), objc_msgSend(v11, "selectionPostContextText"), &v15, &v14))
            {
              id v12 = +[THModelContentNode annotationIDForInfoID:v14 contentNodeID:v15];
              [v11 setAnnotationStorageRange:0, 0];
              [v11 setPlStorageUUID:v12];
              char v8 = 1;
            }
          }
        }
        id v7 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v7);
      if (v8) {
        [*(id *)(a1 + 32) p_commitChangesWithMoc:v13];
      }
    }
  }
}

void sub_98CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_98CF8(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) p_getReadingLocationWithMOC:a2];
  if (result)
  {
    id result = [result readingProgress];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v4;
  }
  return result;
}

void sub_98DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_98E0C(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) p_getReadingLocationWithMOC:a2];
  if (result)
  {
    id result = [result readingProgressHighWaterMark];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v4;
  }
  return result;
}

void sub_99090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_990B8(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) p_getReadingLocationWithMOC:a2];
  if (result)
  {
    int v4 = result;
    id v5 = [THPageLocation alloc];
    id v6 = [v4 absolutePhysicalPageIndex];
    id v7 = [v4 annotationStorageRange];
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = -[THPageLocation initWithAbsolutePageIndex:range:storageUID:contentNodeGUID:](v5, "initWithAbsolutePageIndex:range:storageUID:contentNodeGUID:", v6, v7, v8, [v4 annotationStorageIDWithoutContentNodeID], [v4 annotationContentNodeID]);
    id result = [v4 placeholderHistory];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  }
  return result;
}

id *sub_99454(id *result, uint64_t a2, uint64_t a3)
{
  id v3 = result;
  if (a3 || !result[4])
  {
    id v4 = [result[5] p_actionForDeletingAEAnnotation:a2];
    id v5 = v3[5];
    id v6 = v3[6];
    return (id *)[v5 p_performAction:v4 moc:v6];
  }
  return result;
}

id sub_994B0(uint64_t a1, void *a2)
{
  [a2 setAnnotationModificationDate:[NSDate date]];
  id v4 = [*(id *)(a1 + 32) range];
  [a2 setAnnotationStorageRange:v4, v5];
  [a2 setAbsolutePhysicalPageIndex:[*(id *)(a1 + 32) absolutePhysicalPageIndex]];
  objc_msgSend(a2, "setPlStorageUUID:", +[THModelContentNode annotationIDForInfoID:contentNodeID:](THModelContentNode, "annotationIDForInfoID:contentNodeID:", objc_msgSend(*(id *)(a1 + 32), "storageUID"), objc_msgSend(*(id *)(a1 + 40), "nodeGUID")));
  [a2 setPlaceholderHistory:*(void *)(a1 + 48)];
  LODWORD(v6) = *(_DWORD *)(a1 + 64);
  [a2 updateReadingProgressAndBumpHighWaterMarkToProgress:v6];
  id v7 = *(void **)(a1 + 56);

  return [v7 p_addVersioningPropertiesAE:a2];
}

id sub_99588(uint64_t a1, void *a2)
{
  [a2 setPlaceholderHistory:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) p_addVersioningPropertiesAE:a2];
  LODWORD(v4) = *(_DWORD *)(a1 + 48);

  return [a2 updateReadingProgressAndBumpHighWaterMarkToProgress:v4];
}

void sub_99798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_997B8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_99844(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [(id)TSUProtocolCast() annotationUuid];

  return [v1 isEqualToString:v2];
}

void sub_99964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_9997C(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_sortedAssetIDVersionsWithMoc:", a2), "lastObject");
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_99BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_99C04(uint64_t a1, void *a2)
{
  id v4 = objc_alloc((Class)NSFetchRequest);
  id v5 = [v4 initWithEntityName:kAEAnnotationEntityName];
  [v5 setReturnsDistinctResults:1];
  [v5 setPropertiesToFetch:[NSArray arrayWithObject:kAEAnnotationAssetVersionKey]];
  [v5 setResultType:2];
  [v5 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"(annotationAssetID == %@)", objc_msgSend(*(id *)(a1 + 32), "annotationID"))];
  id result = [a2 executeFetchRequest:v5 error:0];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

int64_t sub_99CE0(id a1, id a2, id a3)
{
  objc_opt_class();
  id v3 = (void *)TSUDynamicCast();
  objc_opt_class();
  id v4 = (void *)TSUDynamicCast();
  if ([v4 isStrictlyNewerThanBookVersion:v3]) {
    return -1;
  }
  else {
    return [v3 isStrictlyNewerThanBookVersion:v4];
  }
}

id sub_99DD0(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) annotationRequestForNonSponsoredNonOrphaned];
  id v5 = *(void **)(a1 + 32);

  return [v5 p_annotationsForFetchRequest:v4 moc:a2 migrateIfNecessary:1];
}

void sub_9A060(id a1, AEAnnotation *a2)
{
}

id sub_9A1C4(uint64_t a1, void *a2)
{
  return [a2 setAnnotationStorageRange:*(void *)(a1 + 32), *(void *)(a1 + 40)];
}

id sub_9A424(uint64_t a1, void *a2)
{
  [a2 setPlStorageUUID:[*(id *)(a1 + 32) annotationIDForInfo:*(void *)(a1 + 40)]];
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);

  return [a2 setAnnotationStorageRange:v4, v5];
}

id sub_9A57C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [a2 annotationStorageRange];
  id v7 = [v4 cfiForRange:v5 storageUID:v6 includeFilename:[*(id *)(a1 + 32) nodeUniqueIDForInfo:*(void *)(a1 + 40)] pedantic:1];

  return [a2 setAnnotationLocation:v7];
}

id sub_9A780(void *a1, void *a2)
{
  [a2 setAbsolutePhysicalPageIndex:a1[4]];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];

  return [a2 setAnnotationStorageRange:v4, v5];
}

void sub_9A814(id a1, AEAnnotation *a2)
{
}

id sub_9A908(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) p_addVersioningPropertiesAE:a2];
}

void sub_9AA4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9AB34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9AD38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9B084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_9B180(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = TSUDynamicCast();
  objc_opt_class();
  uint64_t v3 = TSUDynamicCast();
  objc_opt_class();
  [*(id *)(a1 + 32) objectWithID:v2];
  id v4 = (id)TSUDynamicCast();
  if ([v4 isFault]) {
    id v4 = [(*(id *)(a1 + 40)) p_storageAnnotationForUUID:v3 includeDeleted:0 moc:*(void *)(a1 + 32)];
  }
  if (![v4 annotationUuid]) {
    [TSUAssertionHandler currentHandler] handleFailureInFunction:[NSString stringWithUTF8String:"-[THAnnotationController p_annotationsForManagedObjectIDs:moc:]_block_invoke"] file:[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THAnnotationController.m"] lineNumber:2051 description:[NSString stringWithFormat:@"invalid nil value for '%s'", @"annotation.annotationUuid"]];
  }
  id result = [v4 annotationUuid];
  if (result)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    id v7 = [v4 annotationUuid];
    return [v6 setObject:v4 forKey:v7];
  }
  return result;
}

void sub_9B4AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9B660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9BAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_9BAE4(uint64_t a1, void *a2)
{
  [a2 setAnnotationStorageRange:*(void *)(a1 + 32), *(void *)(a1 + 40)];
  uint64_t v4 = *(unsigned int *)(a1 + 48);

  return [a2 setAnnotationStyle:v4];
}

void sub_9BCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_9BCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = +[NSMutableDictionary dictionaryWithDictionary:*(void *)(a1 + 32)];
  uint64_t v5 = +[THModelStorageAnchor storageAnchorWithContentNode:storage:range:](THModelStorageAnchor, "storageAnchorWithContentNode:storage:range:", *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 72), *(void *)(a1 + 80));
  if (v5) {
    [(NSMutableDictionary *)v4 setObject:v5 forKey:@"THAnnotationStorageAnchorUndoContextKey"];
  }
  [*(id *)(a1 + 56) p_openUndoGroupWithContext:v4 actionName:[THBundle localizedStringForKey:@"Add Highlight" value:&stru_46D7E8 table:0]];
  id v6 = [*(id *)(a1 + 56) p_extendExistingAnnotationForRange:*(void *)(a1 + 72) storage:*(void *)(a1 + 80) contentNode:*(void *)(a1 + 48) style:*(void *)(a1 + 40) moc:*(unsigned int *)(a1 + 88) a2];
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3052000000;
  long long v16 = sub_9669C;
  long long v17 = sub_966AC;
  id v18 = 0;
  if (v6)
  {
    id v18 = v6;
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 48);
    id v7 = *(void **)(a1 + 56);
    uint64_t v9 = *(unsigned int *)(a1 + 88);
    uint64_t v10 = *(void *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_9BE98;
    v12[3] = &unk_458A60;
    v12[4] = &v13;
    objc_msgSend(*(id *)(a1 + 56), "p_performUndoableAction:moc:", objc_msgSend(v7, "p_actionForInsertingAnnotationWithType:style:absolutePageIndex:range:storage:contentNode:updateBlock:", 2, v9, 0x7FFFFFFFFFFFFFFFLL, *(void *)(a1 + 72), *(void *)(a1 + 80), v8, v10, v12), a2);
  }
  [*(id *)(a1 + 56) p_closeUndoGroup];
  long long v11 = [THCachedAnnotation alloc];
  *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) = [(THCachedAnnotation *)v11 initWithAnnotation:v14[5] contentNode:*(void *)(a1 + 40)];
  _Block_object_dispose(&v13, 8);
}

void sub_9BE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_9BE98(uint64_t result, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 40) = a2;
  return result;
}

id sub_9C170(uint64_t a1, uint64_t a2)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v4 = *(void **)(a1 + 32);
  id result = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (result)
  {
    id v6 = result;
    uint64_t v7 = *(void *)v11;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v8);
        if ([v9 annotationType] != 2) {
          [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THAnnotationController destroyAnnotations:undoContext:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THAnnotationController.m") lineNumber:2307 description:@"destroyAnnotations is only for highlight (ranged) annotations -- if we need it for somethign else, we should add a variant that does the right thing with undo"];
        }
        objc_msgSend(*(id *)(a1 + 40), "p_performUndoableAction:moc:", objc_msgSend(*(id *)(a1 + 40), "p_actionForDeletingCachedAnnotation:moc:", v9, a2), a2);
        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id result = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      id v6 = result;
    }
    while (result);
  }
  return result;
}

void sub_9C5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

THCachedAnnotation *sub_9C604(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) p_annotationForCachedAnnotation:*(void *)(a1 + 40) moc:a2];
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    BOOL v7 = result == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7 || !*(void *)(a1 + 48))
  {
    id result = [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THAnnotationController modifyAnnotation:undoContext:undoActionName:withBlock:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THAnnotationController.m") lineNumber:2345 description:@"invalid annotation"];
    uint64_t v6 = *(void *)(a1 + 56);
  }
  if (v6 && v5)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v8 = *(void **)(a1 + 32);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      void v9[2] = sub_9C760;
      v9[3] = &unk_458AB0;
      void v9[4] = v6;
      [*(id *)(a1 + 32) p_performUndoableAction:[v8 p_actionForUpdatingAnnotation:withBlock:v5, v9] moc:a2];
      id result = [[THCachedAnnotation alloc] initWithAnnotation:v5 contentNode:*(void *)(a1 + 48)];
      *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) = result;
    }
  }
  return result;
}

void sub_9C760(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [[THMutableAnnotation alloc] initWithAEAnnotation:a2];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_9C8F8(uint64_t a1, void *a2)
{
  return [a2 setAnnotationNote:*(void *)(a1 + 32)];
}

id sub_9C9D4(uint64_t a1, void *a2)
{
  return [a2 setAnnotationStyle:*(unsigned int *)(a1 + 32)];
}

void sub_9CB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

THAnnotationCache *sub_9CBA8(uint64_t a1, uint64_t a2)
{
  id result = -[THAnnotationCache initWithAnnotations:contentNode:]([THAnnotationCache alloc], "initWithAnnotations:contentNode:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_cachedAnnotationsForContentNode:moc:", *(void *)(a1 + 40), a2), "allValues"), *(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_9CE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_9CE9C(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = objc_opt_new();
  id v4 = [*(id *)(a1 + 32) p_annotationsForFetchRequest:*(void *)(a1 + 40) moc:a2 migrateIfNecessary:*(unsigned __int8 *)(a1 + 56)];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id result = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (result)
  {
    id v6 = result;
    uint64_t v7 = *(void *)v11;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = -[THCachedAnnotation initWithAnnotation:contentNode:]([THCachedAnnotation alloc], "initWithAnnotation:contentNode:", *(void *)(*((void *)&v10 + 1) + 8 * (void)v8), objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavModel"), "contentNodeForGUID:", objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * (void)v8), "annotationContentNodeID")));
        [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v9];

        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id result = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      id v6 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_9D1CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_9D2B8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 annotationContentNodeID];

  return [v2 isEqualToString:v3];
}

void sub_9D96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9DB6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_9E1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_9E1DC(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) undoWithAnnotationHost:*(void *)(a1 + 40) moc:a2];
  uint64_t v5 = *(void **)(a1 + 40);

  return [v5 p_processChangeList:v4 moc:a2];
}

void sub_9E4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_9E518(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) redoWithAnnotationHost:*(void *)(a1 + 40) moc:a2];
  uint64_t v5 = *(void **)(a1 + 40);

  return [v5 p_processChangeList:v4 moc:a2];
}

void sub_9EE64(uint64_t a1, void *a2)
{
  [a2 setAnnotationStyle:*(unsigned int *)(a1 + 80)];
  [a2 setAnnotationType:*(unsigned int *)(a1 + 84)];
  if (*(_DWORD *)(a1 + 84) == 1) {
    [a2 setPlStorageUUID:[*(id *)(a1 + 32) legacyBookmarkIDForInfo:[*(void *)(a1 + 40)]]];
  }
  if (*(void *)(a1 + 56) != 0x7FFFFFFFFFFFFFFFLL) {
    [a2 setAbsolutePhysicalPageIndex:];
  }
  [a2 setAnnotationStorageRange:*(void *)(a1 + 64), *(void *)(a1 + 72)];
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, a2);
  }
  uint64_t v5 = _AEBookPluginsAnnotationsLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412546;
    id v7 = [a2 annotationAssetID];
    __int16 v8 = 2112;
    id v9 = [a2 annotationUuid];
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "add bliss annotation: assetID: %@, uuid: %@", (uint8_t *)&v6, 0x16u);
  }
}

void sub_9F0AC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, a2);
  }
  uint64_t v4 = _AEBookPluginsAnnotationsLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412546;
    id v6 = [a2 annotationAssetID];
    __int16 v7 = 2112;
    id v8 = [a2 annotationUuid];
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "update bliss annotation: assetID: %@, uuid: %@", (uint8_t *)&v5, 0x16u);
  }
}

id sub_9FC08(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"p_hyperlinkAnimationEnded" withObject:0 afterDelay:0.0];
}

id sub_A068C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"p_animationEnded" withObject:0 afterDelay:0.0];
}

void sub_A0878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_A0A78(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 552) = [[THWPHighlightController alloc] initWithParentRep:*(void *)(a1 + 32)];
  if (![*(id *)(a1 + 32) parentRep]) {
    [TSUAssertionHandler currentHandler] handleFailureInFunction:[NSString stringWithUTF8String:"-[THWPRep highlightController]_block_invoke"] file:[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THWPRep.mm"] lineNumber:187 description:@"invalid nil value for '%s'", [self parentRep]];
  }
  id result = [*(id *)(a1 + 32) parentRep];
  if (result)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    uint64_t v4 = v3[69];
    return [v3 setupMarginNotesControllerForHighlightController:v4];
  }
  return result;
}

void sub_A3024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_A303C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_A304C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  v5.size.CGFloat height = a5;
  v5.size.CGFloat width = a4;
  v5.origin.CGFloat y = a3;
  v5.origin.CGFloat x = a2;
  *(CGRect *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = CGRectUnion(*(CGRect *)(*(void *)(*(void *)(a1 + 32) + 8)+ 48), v5);
}

void sub_A331C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A3530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A377C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A37E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)THChapterBrowserController;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_A3810(void *a1)
{
}

void sub_A3A34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A3AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A3C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A4088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A4140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A424C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A439C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A4468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A45C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A49C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A4FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A5128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A526C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A54D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A56A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_A56B8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_updateAdjacentChapterViews];
  *(unsigned char *)(*(void *)(a1 + 32) + 417) = 0;
  return result;
}

void sub_A5848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A5B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A5D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_A5F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_A5F54(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBorderVisible:1];
}

void sub_A6174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A6344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A6500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A66CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A6874(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_A68A0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 128) setAlpha:1.0];
}

void sub_A69C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A6A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A6B08(_Unwind_Exception *exception_object)
{
}

id sub_A6B20(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 128) setAlpha:0.0];
}

void sub_A6BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A6C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A6E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A6EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v11 = v10;

  _Unwind_Resume(a1);
}

void sub_A70CC(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;

  _Unwind_Resume(a1);
}

void sub_A70F0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 104) setContentOffset:1 animated:0.0];
  id v2 = [*(id *)(a1 + 32) introMediaViewController];
  [v2 prepareControlsForTOC];
}

void sub_A7160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A71F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A7464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A76FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A7968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A7AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A7CA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_A7D0C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBorderVisible:1];
}

void sub_A7E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A804C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A80F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A82CC(_Unwind_Exception *a1)
{
  id v6 = v3;

  _Unwind_Resume(a1);
}

void sub_A8388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A8498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v13 = v12;

  _Unwind_Resume(a1);
}

void sub_A8630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A86D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A895C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26)
{
  _Unwind_Resume(a1);
}

id sub_A8A00(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHighlightedHyperlinkField:*(void *)(a1 + 40)];
}

id sub_A8A0C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHighlightedHyperlinkField:0];
}

id sub_A8A18(uint64_t a1)
{
  [*(id *)(a1 + 32) setHighlightedHyperlinkField:0];
  id v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);

  return [v2 followLink:v3];
}

void sub_A8B34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A8BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A8CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A8D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A906C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A916C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A926C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_A9554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_A96BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A9820(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A9A90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_A9B2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AA08C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AA2E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AA594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AA6F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AA898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AB4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

BOOL sub_AB73C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  uint64_t v4 = TSUDynamicCast();
  CGRect v5 = v4;
  if (v4) {
    BOOL v6 = [v4 unsignedIntegerValue] == *(id *)(a1 + 32);
  }
  else {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_AB7B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AB808(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ABC84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ABD4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ABF7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_AC5A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_AC8DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ACA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_ACAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_ACBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_ACC60(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  if (v3 == *(void *)(v2 + 104))
  {
    [v2 p_backgroundScrollingDidEnd];
    uint64_t v2 = *(void *)(a1 + 40);
  }
  if (*(unsigned char *)(v2 + 168))
  {
    *(unsigned char *)(v2 + 168) = 0;
    [*(id *)(a1 + 40) p_updatePageThumbnails:1];
    uint64_t v2 = *(void *)(a1 + 40);
  }
  uint64_t v4 = *(void **)(v2 + 176);
  *(void *)(v2 + 176) = 0;

  if ([*(id *)(a1 + 40) transitioningPageToDVC])
  {
    [*(id *)(a1 + 40) p_updatePageThumbnails:1];
    [*(id *)(a1 + 40) p_pageThumbnailViewForPageIndex:[*(id *)(a1 + 40) transitioningThumbnailIndex]];
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    [*(id *)(a1 + 40) p_transitionThumbnailToDVC];
    CGRect v5 = +[UIApplication sharedApplication];
    [v5 endIgnoringInteractionEvents];

    [*(id *)(a1 + 40) setTransitioningPageToDVC:0];
    [*(id *)(a1 + 40) setTransitioningThumbnailIndex:0x7FFFFFFFFFFFFFFFLL];
  }
}

void sub_ACD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_ACF04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ACFC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AD4A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ADA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_ADC7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_ADD34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v12 = v11;

  _Unwind_Resume(a1);
}

void sub_ADEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

id sub_ADEFC(uint64_t a1)
{
  [*(id *)(a1 + 32) bounds];
  CGAffineTransformMakeScale(&v7, *(double *)(a1 + 64) / v2, *(double *)(a1 + 72) / v3);
  uint64_t v4 = *(void **)(a1 + 32);
  CGAffineTransform v6 = v7;
  [v4 setTransform:&v6];
  TSDCenterOfRect();
  id result = [*(id *)(a1 + 32) setCenter:];
  if (*(unsigned char *)(a1 + 88)) {
    return [*(id *)(a1 + 40) setShrouded:1 animated:1 duration:*(double *)(a1 + 80)];
  }
  return result;
}

id sub_ADF8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_thumbnailAnimationDidStopWithContext:*(void *)(a1 + 40)];
}

void sub_AE208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_AE374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AE3F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AE474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AE5F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AE684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AE7A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AE7BC(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) p_verticalSpaceLimited];
  id v5 = [*(id *)(a1 + 32) thumbnailTrackBackgroundView];
  double v3 = [v5 layer];
  *(float *)&double v4 = (float)v2;
  [v3 setOpacity:v4];
}

void sub_AE82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_AE84C(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 507) = 0;
  *(unsigned char *)(*(void *)(result + 32) + 492) = 0;
  return result;
}

void sub_AEB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AEC04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AECE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AEE38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AF030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_B02D4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:0.0];
}

void *sub_B02EC(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[3] == *(void *)(a1 + 40)) {
    return [result p_hideFallbackImageView];
  }
  return result;
}

void *sub_B0574(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[3] == *(void *)(a1 + 40))
  {
    id result = objc_msgSend(objc_msgSend(result, "interactiveCanvasController"), "currentlyWaitingOnThreadedLayoutAndRender");
    if ((result & 1) == 0)
    {
      double v3 = *(void **)(a1 + 32);
      return [v3 p_updateVisibleInfosOrRevealCanvas];
    }
  }
  return result;
}

void sub_B0F88(id a1)
{
  qword_573200 = (uint64_t)dispatch_queue_create("com.apple.thumbqueue", 0);
}

void sub_B0FF8(id a1)
{
  id v1 = [[UIImage th_imageNamed:@"thumbnail_placeholder.jpg"] CGImage];
  qword_573210 = (uint64_t)v1;

  CFRetain(v1);
}

void sub_B1E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_B1E80(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 32);
  objc_sync_enter(v2);
  if ([*(id *)(a1 + 32) willSetImageFromQueue]
    && [*(id *)(a1 + 32) imageData])
  {
    CGImageRef v3 = CGImageRetain((CGImageRef)+[TSDBitmapImageProvider CGImageForImageData:](TSDBitmapImageProvider, "CGImageForImageData:", [*(id *)(a1 + 32) imageData]));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_B1F8C;
    _OWORD v5[3] = &unk_457250;
    void v5[4] = *(void *)(a1 + 32);
    void v5[5] = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

    *(void *)(*(void *)(a1 + 32) + 112) = 0;
  }
  return objc_sync_exit(v2);
}

void sub_B1F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_B1F8C(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 32);
  objc_sync_enter(v2);
  if ([*(id *)(a1 + 32) willSetImageFromQueue]
    && [*(id *)(a1 + 32) superview])
  {
    [*(id *)(a1 + 32) setImage:*(void *)(a1 + 40)];
  }
  CGImageRelease(*(CGImageRef *)(a1 + 40));

  return objc_sync_exit(v2);
}

void sub_B1FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_B21A8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 136) setAlpha:*(double *)(a1 + 40)];
}

id sub_B2408(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) highlightView];

  return [v1 setAlpha:1.0];
}

id sub_B2598(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 88) setAlpha:0.0];
  unsigned int v2 = *(void **)(*(void *)(a1 + 32) + 120);

  return [v2 setAlpha:0.0];
}

id sub_B2714(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 88) setAlpha:1.0];
  unsigned int v2 = *(void **)(*(void *)(a1 + 32) + 120);

  return [v2 setAlpha:1.0];
}

id sub_B3830(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_B383C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 56) setAlpha:1.0];
}

id sub_B3A1C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  unsigned int v2 = *(void **)(*(void *)(a1 + 40) + 56);

  return [v2 setAlpha:0.0];
}

void sub_B3A64(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 56) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 65) = 0;
}

id sub_B3DF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_B4838(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_didLoadInfo:*(void *)(a1 + 40) onComplete:*(void *)(a1 + 48)];
}

id sub_B48FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_loadInfoOnComplete:*(void *)(a1 + 40)];
}

void sub_B5050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_B5164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_B5E00(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, char a12)
{
  if (a2 == 1)
  {
    id v12 = objc_begin_catch(exc_buf);
    if (v12)
    {
      long long v13 = v12;
      id v14 = +[TSUAssertionHandler currentHandler];
      uint64_t v15 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWPHighlightController updateCachedAnnotations]");
      long long v16 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THWPHighlightController.mm"];
      [v13 description];
      [v14 handleFailureInFunction:v15 file:v16 lineNumber:422 description:@"Exeption thrown %@"];
    }
    objc_end_catch();
    if ((a12 & 1) == 0) {
      JUMPOUT(0xB5DC4);
    }
    JUMPOUT(0xB5D94);
  }
  _Unwind_Resume(exc_buf);
}

void sub_B5ED4()
{
}

id sub_B9558(uint64_t a1)
{
  unsigned int v2 = +[UIPasteboard generalPasteboard];
  id v3 = [*(id *)(a1 + 32) annotationSelectedText];
  id v4 = [UTTypeUTF8PlainText identifier];

  return [(UIPasteboard *)v2 setValue:v3 forPasteboardType:v4];
}

id sub_B95C0(uint64_t a1)
{
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "annotationNote"), "length"))
  {
    id v2 = [(id)THBundle() localizedStringForKey:@"Delete Highlight" value:&stru_46D7E8 table:0];
    id v3 = [(id)THBundle() localizedStringForKey:@"The associated note will also be deleted." value:&stru_46D7E8 table:0];
    id v4 = [(id)THBundle() localizedStringForKey:@"Cancel" value:&stru_46D7E8 table:0];
    id v5 = [(id)THBundle() localizedStringForKey:@"Delete" value:&stru_46D7E8 table:0];
    CGAffineTransform v6 = +[UIAlertController alertControllerWithTitle:v2 message:v3 preferredStyle:1];
    [(UIAlertController *)v6 addAction:+[UIAlertAction actionWithTitle:v4 style:1 handler:0]];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_B979C;
    v10[3] = &unk_458DD0;
    int8x16_t v11 = vextq_s8(*(int8x16_t *)(a1 + 32), *(int8x16_t *)(a1 + 32), 8uLL);
    [(UIAlertController *)v6 addAction:+[UIAlertAction actionWithTitle:v5 style:2 handler:v10]];
    objc_opt_class();
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "parentRep"), "interactiveCanvasController"), "delegate");
    return [(id)TSUDynamicCast() presentViewController:v6 animated:1 completion:0];
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 32);
    id v8 = *(void **)(a1 + 40);
    return [v8 destroyAnnotation:v9 undoContext:0];
  }
}

id sub_B979C(uint64_t a1)
{
  return [*(id *)(a1 + 32) destroyAnnotation:*(void *)(a1 + 40) undoContext:0];
}

id sub_B97AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) showNoteEditorForAnnotation:*(void *)(a1 + 40)];
}

id sub_B97B8(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController");
  objc_opt_class();
  [v2 beginEditingRep:[*(id *)(a1 + 32) parentRep]];
  id v3 = (void *)TSUDynamicCast();
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 showDictionaryForAnnotation:v4];
}

id sub_B9834(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController");
  objc_opt_class();
  [v2 beginEditingRep:[*(id *)(a1 + 32) parentRep]];
  id v3 = (void *)TSUDynamicCast();
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 showTranslationForAnnotation:v4];
}

id sub_B98B0(uint64_t a1)
{
  objc_opt_class();
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController"), "delegate");
  id v2 = (void *)TSUDynamicCast();
  id v3 = [*(id *)(a1 + 40) annotationSelectedText];

  return [v2 presentSearchResultsForString:v3];
}

id sub_B9920(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController");
  objc_opt_class();
  [v2 beginEditingRep:[*(id *)(a1 + 32) parentRep]];
  id v3 = (void *)TSUDynamicCast();
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 shareAnnotation:v4];
}

id sub_BBBD4(uint64_t a1)
{
  BOOL v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "termsViewController"), "presentedViewController") != 0;
  id v3 = *(void **)(a1 + 40);

  return [v3 setPreferredDisplayMode:2 * v2];
}

id sub_BC218(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "recordOutgoingMajorNavigationJump");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "followLink:animated:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "recordCurrentLocationInHistory");
  id v2 = [*(id *)(a1 + 32) bookViewController];

  return [v2 updateNavigationAffordances];
}

double sub_BC570(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "definitionsViewController"), "view");
  if (v2
    && ([v2 frame],
        double v3 = CGRectGetWidth(v5) + dbl_344430[*(unsigned char *)(a1 + 40) == 0] * -2.0 + -824.0,
        v3 > 0.0))
  {
    return floor(v3 * 0.5);
  }
  else
  {
    return 0.0;
  }
}

void sub_BDC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_BDC48(uint64_t a1, uint64_t a2)
{
}

void sub_BDC58(uint64_t a1)
{
}

id sub_BDC64(void *a1)
{
  return [*(id *)(*(void *)(a1[5] + 8) + 40) selectEntry:a1[4] scrollPosition:a1[6] animated:0];
}

id sub_BE260(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "themePage"), "primaryTextColor"), "CGColor");
  double v3 = *(void **)(a1 + 32);

  return [v3 setForegroundColor:v2];
}

id sub_BF19C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
}

id sub_BF4F8(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) p_entryDidLoad:a2];
  double v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(unsigned int *)(a1 + 48);

  return [v3 scrollToLocation:v4 animated:0];
}

void sub_BFA84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_BFAA4(uint64_t a1, uint64_t a2)
{
}

void sub_BFAB4(uint64_t a1)
{
}

id sub_BFAC0(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) displayIndex:*(void *)(a1 + 32) withEntry:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 56)];
}

id sub_C0038(void *a1, void *a2)
{
  id v3 = [a1 term];
  id v4 = [a2 term];

  return [v3 localizedCaseInsensitiveCompare:v4];
}

NSString *sub_C07A4(void *a1)
{
  id v1 = objc_msgSend(objc_msgSend(a1, "normalizedTerm"), "characterAtIndex:", 0);
  __int16 v3 = (__int16)v1;
  if (![+[NSCharacterSet letterCharacterSet] characterIsMember:v1])__int16 v3 = 35; {
  return [+[NSString stringWithCharacters:&v3 length:1] uppercaseString];
  }
}

id sub_C0FFC(uint64_t a1, void *a2)
{
  id v4 = [a2 paragraphStyleAtCharIndex:0 effectiveRange:0];
  id v5 = objc_msgSend(objc_msgSend(v4, "stylesheet"), "variationOfStyle:propertyMap:", v4, *(void *)(a1 + 32));
  id v6 = [a2 length];

  return [a2 setParagraphStyle:v5 forCharRange:0 undoTransaction:v6];
}

id sub_C1780(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) p_glossaryEntryForTerm:[*(id *)(a1 + 32) term]];
  __int16 v3 = *(void **)(a1 + 40);
  if (v2) {
    [v3 showGlossaryEntry:];
  }
  else {
    [v3 showGlossary:*(void *)(a1 + 32)];
  }
  id v4 = [*(id *)(a1 + 32) glossaryPresenting];

  return [v4 glossaryPopoverWasDismissed];
}

void sub_C1F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [*(id *)(a1 + 32) icc];
  [v5 setInfosToDisplay:[NSArray arrayWithObject:a3]];
  [v5 recreateAllLayoutsAndReps];
  objc_opt_class();
  [v5 layoutForInfo:a3];
  id v6 = (void *)TSUDynamicCast();
  [*(id *)(a1 + 32) setGlossaryEntryLayout:v6];
  [v6 setLayoutStyleProvider:*(void *)(a1 + 32)];
  [v5 layoutIfNeeded];
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3052000000;
  unsigned __int8 v25 = sub_C21E0;
  id v26 = sub_C21F0;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_C21FC;
  v21[3] = &unk_458F60;
  v21[4] = &v22;
  uint64_t v27 = v21;
  id v7 = [*(id *)(a1 + 32) definition];
  [*(id *)(a1 + 32) p_insetScrollerContentEdges];
  (*(void (**)(void))(v23[5] + 16))();
  double v9 = v8;
  [v6 frame];
  double v10 = ceil(v9);
  objc_msgSend(objc_msgSend(objc_msgSend(v5, "canvasView"), "canvasLayer"), "setUnscaledSize:", v10, v11);
  [v6 frame];
  double v13 = v12;
  double v15 = v14;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "container"), "setFrame:", v16, v17, v12, v14);
  if (v13 >= v10) {
    double v10 = v13;
  }
  [v7 setContentSize:v10, v15];
  if ([*(id *)(a1 + 32) _isInPopoverPresentation])
  {
    [v6 frame];
    double v19 = v15 + 22.0;
    double v20 = 366.0;
    if (v19 >= 366.0)
    {
      double v10 = v18;
    }
    else
    {
      [v7 setBounces:0];
      double v20 = fmax(v19, 200.0);
    }
    [*(id *)(a1 + 32) setPreferredContentSize:v10, v20];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationController"), "setPreferredContentSize:", v10, v20);
  }
  _Block_object_dispose(&v22, 8);
}

void sub_C21B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_C21E0(uint64_t a1, uint64_t a2)
{
}

void sub_C21F0(uint64_t a1)
{
}

double sub_C21FC(uint64_t a1, void *a2)
{
  [a2 frameInRoot];
  double x = v4;
  CGFloat y = v6;
  CGFloat width = v8;
  CGFloat height = v10;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v12 = [a2 children];
  double v13 = (char *)[v12 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v13)
  {
    double v14 = v13;
    uint64_t v15 = *(void *)v22;
    do
    {
      double v16 = 0;
      do
      {
        if (*(void *)v22 != v15) {
          objc_enumerationMutation(v12);
        }
        v28.origin.double x = (*(double (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) + 16))();
        v28.origin.CGFloat y = v17;
        v28.size.CGFloat width = v18;
        v28.size.CGFloat height = v19;
        v26.origin.double x = x;
        v26.origin.CGFloat y = y;
        v26.size.CGFloat width = width;
        v26.size.CGFloat height = height;
        CGRect v27 = CGRectUnion(v26, v28);
        double x = v27.origin.x;
        CGFloat y = v27.origin.y;
        CGFloat width = v27.size.width;
        CGFloat height = v27.size.height;
        ++v16;
      }
      while (v14 != v16);
      double v14 = (char *)[v12 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v14);
  }
  return x;
}

BOOL sub_C3A54(id a1, TSDRep *a2)
{
  return [(TSDRep *)a2 conformsToProtocol:&OBJC_PROTOCOL___THMarginNotesOwner];
}

BOOL sub_C5920(id a1, CAFilter *a2)
{
  id v2 = [(CAFilter *)a2 name];

  return [v2 isEqualToString:@"kTHAXUndoInvertColorsFilter"];
}

id sub_C911C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) layoutIfNeeded];
}

id sub_C9130(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_didLayoutOnComplete:*(void *)(a1 + 40)];
}

id sub_C93E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_layoutOnComplete:*(void *)(a1 + 40)];
}

id sub_C958C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) p_setupCanvasForInfo:a3 withLayoutStyleProvider:*(void *)(a1 + 40) onComplete:*(void *)(a1 + 48)];
}

void sub_C9C00(id a1, UIMutableTraits *a2)
{
}

void sub_C9FA0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) activityIndicatorView];
  [v2 setAlpha:1.0];

  id v3 = [*(id *)(a1 + 32) openCloseButton];
  [v3 setAlpha:0.0];
}

void sub_CA010(uint64_t a1, int a2)
{
  uint64_t v2 = a2 ^ 1u;
  id v3 = [*(id *)(a1 + 32) activityIndicatorView];
  [v3 setHidden:v2];
}

void sub_CA12C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) activityIndicatorView];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) openCloseButton];
  [v3 setAlpha:1.0];
}

void sub_CA19C(uint64_t a1, uint64_t a2)
{
  double v4 = [*(id *)(a1 + 32) activityIndicatorView];
  [v4 stopAnimating];

  id v5 = [*(id *)(a1 + 32) activityIndicatorView];
  [v5 setHidden:a2];
}

void sub_CC294(uint64_t a1, void *a2)
{
  id v3 = a2;
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  id v11 = (id)objc_opt_new();
  Mutable = CGPathCreateMutable();
  CGRect v13 = CGRectInset(*(CGRect *)(a1 + 40), 1.0, 1.0);
  CGPathAddEllipseInRect(Mutable, 0, v13);
  [v11 setPath:Mutable];
  id v5 = +[UIColor colorWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:0.5];
  [v11 setStrokeColor:[v5 CGColor]];

  [v11 setLineWidth:1.0];
  id v6 = +[UIColor clearColor];
  objc_msgSend(v11, "setFillColor:", objc_msgSend(v6, "CGColor"));

  CGPathRelease(Mutable);
  id v7 = *(void **)(a1 + 32);
  double v8 = +[UIColor colorWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  double v9 = [v7 imageMaskWithColor:v8];

  [v9 drawInRect:CGRectMake(*(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96))];
  +[CATransaction commit];
  id v10 = [v3 CGContext];

  [v11 renderInContext:v10];
}

void sub_D0B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D0B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_D0CC0(uint64_t a1)
{
  [*(id *)(a1 + 32) clearSearchResults];
  if (objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "searchIndex"), "loaded"))
  {
    id v2 = [*(id *)(a1 + 40) stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
    *(void *)(*(void *)(a1 + 32) + 24) = v2;
    id v3 = *(void **)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 32);
    if (!*(unsigned char *)(a1 + 56))
    {
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_D1060;
      v14[3] = &unk_457360;
      v14[4] = v4;
      v14[5] = v2;
      v14[6] = v3;
      id v3 = v14;
    }
    if (*(void *)(v4 + 96))
    {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m") lineNumber:208 description:@"mOccurrenceMap should be nil"];
      uint64_t v4 = *(void *)(a1 + 32);
    }
    if (*(void *)(v4 + 104))
    {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m") lineNumber:209 description:@"mAnnotationOccurrenceMap should be nil"];
      uint64_t v4 = *(void *)(a1 + 32);
    }
    [*(id *)(v4 + 8) searchIndex] occurrenceMapForQuery:v2];
    *(void *)(*(void *)(a1 + 32) + 104) = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "annotationSearchIndex"), "occurrenceMapForQuery:", v2);
    *(void *)(*(void *)(a1 + 32) + 160) = -[THSearchRefTextLoadOperation initWithDelegate:documentRoot:searchArray:]([THSearchRefTextLoadOperation alloc], "initWithDelegate:documentRoot:searchArray:", *(void *)(a1 + 32), *(void *)(*(void *)(a1 + 32) + 8), objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "searchIndex"), "filterOutGlossaryKeysFromOccurrenceMap:", *(void *)(*(void *)(a1 + 32) + 96)));
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 160);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_D1108;
    v12[3] = &unk_4590C8;
    char v13 = *(unsigned char *)(a1 + 56);
    uint64_t v7 = *(void *)(a1 + 48);
    v12[4] = v5;
    void v12[5] = v7;
    v12[6] = v3;
    [v6 setCompletionBlock:v12];
    if (*(void *)(*(void *)(a1 + 32) + 152)) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m") lineNumber:228 description:@"mReferenceIndexLoadQueue should be nil"];
    }
    *(void *)(*(void *)(a1 + 32) + 152) = objc_alloc_init((Class)NSOperationQueue);
    [*(id *)(*(void *)(a1 + 32) + 152) setName:@"Search Reference Index Load"];
    return [*(id *)(*(void *)(a1 + 32) + 152) addOperation:*(void *)(*(void *)(a1 + 32) + 160)];
  }
  else
  {
    [*(id *)(a1 + 32) loadIndex];
    id v9 = +[TSUAssertionHandler currentHandler];
    id v10 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke");
    id v11 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m"];
    return [v9 handleFailureInFunction:v10 file:v11 lineNumber:172 description:@"Tried to search while index was not loaded."];
  }
}

uint64_t sub_D1060(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) p_recentsEntryForTrimmedQuery:*(void *)(a1 + 40) resultCount:[*(id *)(a1 + 32) searchResultCount]];
  [*(id *)(*(void *)(a1 + 32) + 16) removeObject:v2];
  [*(id *)(*(void *)(a1 + 32) + 16) insertObject:v2 atIndex:0];
  if ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 16) count] >= 0xB) {
    [*(id *)(*(void *)(a1 + 32) + 16) removeLastObject];
  }
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v3();
}

id sub_D1108(uint64_t a1)
{
  id v1 = &selRef_p_processSearchResultsWithCompletionBlock_;
  uint64_t v2 = 40;
  if (*(unsigned char *)(a1 + 56)) {
    id v1 = &selRef_p_processSuggestionsWithCompletionBlock_;
  }
  else {
    uint64_t v2 = 48;
  }
  return [*(id *)(a1 + 32) performSelectorOnMainThread:*v1 withObject:*(void *)(a1 + v2) waitUntilDone:0];
}

void sub_D118C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D11F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D162C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_D1694(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = (uint64_t)objc_msgSend(objc_msgSend(a2, "term"), "localizedCaseInsensitiveCompare:", objc_msgSend(a3, "term"));
  if (result)
  {
    uint64_t v7 = result;
    if ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 24) length] < 3
      || ((v8 = objc_msgSend(objc_msgSend(objc_msgSend(a2, "term"), "commonPrefixWithString:options:", *(void *)(*(void *)(a1 + 32) + 24), 3), "length"), id v9 = objc_msgSend(objc_msgSend(objc_msgSend(a3, "term"), "commonPrefixWithString:options:", *(void *)(*(void *)(a1 + 32) + 24), 3), "length"), v10 = v8 == v9, v8 > v9)? (result = -1): (result = 1), v10))
    {
      signed int v11 = [a2 rank];
      signed int v12 = [a3 rank];
      uint64_t v13 = -1;
      if (v11 >= v12) {
        uint64_t v13 = 1;
      }
      if (v11 == v12) {
        return v7;
      }
      else {
        return v13;
      }
    }
  }
  return result;
}

NSString *__cdecl sub_D1778(id a1, id a2)
{
  return (NSString *)[a2 term];
}

NSNumber *__cdecl sub_D1780(id a1, id a2)
{
  id v2 = [a2 occurenceCount];

  return +[NSNumber numberWithUnsignedInteger:v2];
}

void sub_D1EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_D1F54(id a1, id a2, BOOL *a3)
{
  objc_opt_class();
  id v3 = (void *)TSUDynamicCast();
  return ![v3 displayPageNumber] && objc_msgSend(objc_msgSend(v3, "cfi"), "length") != 0;
}

uint64_t sub_D1FB0(uint64_t a1, void *a2, void *a3)
{
  signed int v6 = [a2 rank];
  signed int v7 = [a3 rank];
  signed int v8 = v7;
  if (v6 != v7 && (v6 == 1 || v7 == 1))
  {
    BOOL v13 = v6 < v7;
    goto LABEL_17;
  }
  if ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 24) length] >= 3)
  {
    id v9 = [[[a2 term] commonPrefixWithString:*(void *)(*(void *)(a1 + 32) + 24) options:3] length];
    id v10 = objc_msgSend(objc_msgSend(objc_msgSend(a3, "term"), "commonPrefixWithString:options:", *(void *)(*(void *)(a1 + 32) + 24), 3), "length");
    BOOL v11 = v9 == v10;
    uint64_t result = v9 > v10 ? -1 : 1;
    if (!v11) {
      return result;
    }
  }
  BOOL v13 = v6 < v8;
  if (v6 != v8)
  {
LABEL_17:
    if (v13) {
      return -1;
    }
    else {
      return 1;
    }
  }
  id v14 = [a2 pageNumber];
  id v15 = [a3 pageNumber];
  uint64_t v16 = -1;
  if (v14 >= v15) {
    uint64_t v16 = 1;
  }
  if (v14 == v15) {
    return 0;
  }
  else {
    return v16;
  }
}

int64_t sub_D20B4(id a1, id a2, id a3)
{
  unsigned int v5 = [a2 rank];
  unsigned int v6 = [a3 rank];
  id v7 = [a2 pageNumber];
  id v8 = [a3 pageNumber];
  if (v5 == 1 || v6 == 1)
  {
    if (v5 == v6)
    {
      id v12 = [a2 term];
      id v13 = [a3 term];
      return (int64_t)[v12 localizedCaseInsensitiveCompare:v13];
    }
    else if (v5 == 1)
    {
      return -1;
    }
    else
    {
      return 1;
    }
  }
  else if (v7 == v8)
  {
    id v9 = [a2 cfi];
    id v10 = [a3 cfi];
    return (int64_t)[v9 caseInsensitiveCompare:v10];
  }
  else if (v7 < v8)
  {
    return -1;
  }
  else
  {
    return 1;
  }
}

void sub_D23F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D26F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D28C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_D28DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_indexloadFinished:[*(void *)(*(void *)(a1 + 32) + 136)]];
}

id sub_D28E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_indexloadFinished:*(void *)(*(void *)(a1 + 32) + 144)];
}

void sub_D293C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D29C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D3F58(uint64_t a1)
{
  [*(id *)(a1 + 32) p_updateButtonState];
  double v2 = *(double *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) contentContainerView];
  [v3 setAlpha:v2];

  double v4 = *(double *)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) footerView];
  [v5 setAlpha:v4];
}

uint64_t sub_D3FE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_D43A0(uint64_t a1)
{
  double v2 = [THSearchTableViewDataSource alloc];
  id v3 = [*(id *)(a1 + 32) searchController];
  double v4 = [(THSearchTableViewDataSource *)v2 initWithSearchController:v3 searchViewMode:0];
  [*(id *)(a1 + 32) setResultsDataSource:v4];

  [*(id *)(*(void *)(a1 + 32) + 48) setText:0];
  [*(id *)(a1 + 32) p_showBottomView:[*(id *)(*(void *)(a1 + 32) + 120) recentSearchCount] animated:1];
  id v6 = [*(id *)(a1 + 32) resultsViewController];
  id v5 = [v6 tableView];
  [v5 reloadData];
}

id sub_D4A44(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) pendingSearchText];

  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    double v4 = [*(id *)(a1 + 32) pendingSearchText];
    [v3 searchForString:v4];

    id v5 = *(void **)(a1 + 32);
    return [v5 setPendingSearchText:0];
  }
  else
  {
    id result = [*(id *)(a1 + 32) settingSearchForString];
    if ((result & 1) == 0)
    {
      id v7 = *(void **)(a1 + 32);
      return [v7 p_showRecents];
    }
  }
  return result;
}

id sub_D5554(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_configureAnimated:1];
}

void sub_D5638(uint64_t a1)
{
  objc_opt_class();
  double v2 = [*(id *)(a1 + 32) topViewController];
  TSUDynamicCast();
  id v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    id v3 = [v5 tableView];

    if (v3)
    {
      double v4 = [v5 tableView];
      [v4 reloadData];

      [*(id *)(a1 + 32) p_showBottomView:*(unsigned __int8 *)(*(void *)(a1 + 32) + 98) animated:0];
    }
  }
}

id sub_D67C8(uint64_t a1)
{
  [*(id *)(a1 + 32) setSettingSearchForString:0];
  double v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[6];

  return [v2 searchBarSearchButtonClicked:v3];
}

id sub_D68B8(uint64_t a1)
{
  [*(id *)(a1 + 32) _analyticsSubmitInBookSearchEventWithSearchText:*(void *)(a1 + 40)];
  double v2 = [*(id *)(*(void *)(a1 + 32) + 120) suggestionResults];
  uint64_t v3 = [*(id *)(a1 + 32) suggestionsDataSource];
  [v3 setSuggestions:v2];

  double v4 = [*(id *)(a1 + 32) suggestionsDataSource];
  [*(id *)(a1 + 32) setResultsDataSource:v4];

  id v5 = [*(id *)(a1 + 32) resultsViewController];
  id v6 = [v5 tableView];
  [v6 reloadData];

  id v7 = *(void **)(a1 + 32);

  return [v7 p_showBottomView:1 animated:1];
}

void sub_D6D7C(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) progressView];
  [v2 setAlpha:0.8];

  id v3 = [*(id *)(a1 + 32) spinner];
  [v3 setAlpha:1.0];
}

id sub_D6ECC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) unsignedIntegerValue];
  [*(id *)(a1 + 40) recordOutgoingMajorNavigationJump];
  id v3 = *(void **)(a1 + 40);

  return [v3 navigateToAbsolutePageIndex:v2];
}

void sub_D6FF8(uint64_t a1)
{
  [*(id *)(a1 + 32) recordOutgoingMajorNavigationJump];
  id v2 = [*(id *)(*(void *)(a1 + 40) + 120) anchorForSelectedSearchResult:*(void *)(a1 + 48)];
  [*(id *)(a1 + 32) navigateToSearchResult:v2];
  [*(id *)(a1 + 32) recordCurrentLocationInHistory];
  [*(id *)(a1 + 32) updateNavigationAffordances];
}

void sub_D7150(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) progressView];
  [v2 setAlpha:0.8];

  id v3 = [*(id *)(a1 + 32) spinner];
  [v3 setAlpha:1.0];
}

void sub_D7540(uint64_t a1)
{
  [*(id *)(a1 + 32) p_showBottomView:1 animated:1];
  id v3 = [*(id *)(a1 + 32) resultsViewController];
  id v2 = [v3 tableView];
  [v2 reloadData];
}

id sub_D7A34(uint64_t a1, uint64_t a2)
{
  double v4 = objc_opt_new();
  if (a2 == 2048) {
    [*(id *)(a1 + 32) secondaryBackgroundColor];
  }
  else {
  id v5 = [*(id *)(a1 + 40) backgroundColor];
  }
  [v4 setBackgroundColor:v5];

  return v4;
}

double THRandomWithMagnitude(double a1)
{
  double v2 = drand48();
  return (v2 + -0.5 + v2 + -0.5) * a1;
}

double THRandomWithMaximum(double a1)
{
  return drand48() * a1;
}

double TH3DPointApplyTransform(double *a1, double a2, double a3, double a4)
{
  return a1[3] + a3 * a1[1] + a2 * *a1 + a4 * a1[2];
}

double TH3DPointSubtract(double a1, double a2, double a3, double a4)
{
  return a4 - a1;
}

double THNormalVector(CALayer *a1)
{
  [(CALayer *)a1 frame];
  double MidX = CGRectGetMidX(v21);
  [(CALayer *)a1 frame];
  double MidY = CGRectGetMidY(v22);
  double v4 = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  double v9 = 0.0;
  double v10 = 0.0;
  double v11 = 0.0;
  if (a1)
  {
    [(CALayer *)a1 transform];
    [(CALayer *)a1 transform];
    double v7 = v20;
    double v6 = v19;
    double v5 = v18;
    double v4 = v17;
    double v11 = v13;
    double v10 = v14;
    double v9 = v15;
    double v8 = v16;
  }
  return v8 + v9 + MidY * v10 + MidX * v11 - (v7 + MidY * v5 + MidX * v4 + v6 * 0.0);
}

double THDistanceFromRectCenterToEdge(CGRect a1, CGPoint a2)
{
  CGFloat height = a1.size.height;
  CGFloat width = a1.size.width;
  CGFloat y = a1.origin.y;
  CGFloat x = a1.origin.x;
  TSDNormalizePoint();
  double v8 = v7;
  if (v6 == 0.0)
  {
    float v11 = INFINITY;
  }
  else
  {
    double v9 = v6;
    v15.origin.CGFloat x = x;
    v15.origin.CGFloat y = y;
    v15.size.CGFloat width = width;
    v15.size.CGFloat height = height;
    float v10 = CGRectGetWidth(v15) * 0.5 / v9;
    float v11 = fabsf(v10);
  }
  if (v8 == 0.0)
  {
    float v13 = INFINITY;
  }
  else
  {
    v16.origin.CGFloat x = x;
    v16.origin.CGFloat y = y;
    v16.size.CGFloat width = width;
    v16.size.CGFloat height = height;
    float v12 = CGRectGetHeight(v16) * 0.5 / v8;
    float v13 = fabsf(v12);
  }
  return fminf(v11, v13);
}

double THBoundingCubeForTransformedRect@<D0>(CGRect a1@<0:D0, 8:D1, 16:D2, 24:D3>, CATransform3D *a2@<X0>, double *a3@<X8>)
{
  CGFloat height = a1.size.height;
  CGFloat width = a1.size.width;
  CGFloat y = a1.origin.y;
  CGFloat x = a1.origin.x;
  double MinX = CGRectGetMinX(a1);
  v43.origin.CGFloat x = x;
  v43.origin.CGFloat y = y;
  v43.size.CGFloat width = width;
  v43.size.CGFloat height = height;
  double MaxX = CGRectGetMaxX(v43);
  v44.origin.CGFloat x = x;
  v44.origin.CGFloat y = y;
  v44.size.CGFloat width = width;
  v44.size.CGFloat height = height;
  double MinY = CGRectGetMinY(v44);
  v45.origin.CGFloat x = x;
  v45.origin.CGFloat y = y;
  v45.size.CGFloat width = width;
  v45.size.CGFloat height = height;
  CGFloat MaxY = CGRectGetMaxY(v45);
  double m12 = a2->m12;
  CGFloat m13 = a2->m13;
  double m14 = a2->m14;
  double m21 = a2->m21;
  double m22 = a2->m22;
  double m23 = a2->m23;
  double m24 = a2->m24;
  double m31 = a2->m31;
  CGFloat m32 = a2->m32;
  double m33 = a2->m33;
  double m34 = a2->m34;
  float v24 = m14 + MinY * m12 + MinX * a2->m11 + m13 * 0.0;
  float v25 = m24 + MinY * m22 + MinX * m21 + m23 * 0.0;
  float v26 = m34 + MinY * m32 + MinX * m31 + m33 * 0.0;
  float v27 = m14 + MinY * m12 + MaxX * a2->m11 + m13 * 0.0;
  float v28 = fminf(fminf(v24, INFINITY), v27);
  float v29 = m24 + MinY * m22 + MaxX * m21 + m23 * 0.0;
  float v30 = fminf(fminf(v25, INFINITY), v29);
  float v31 = m34 + MinY * m32 + MaxX * m31 + m33 * 0.0;
  float v32 = fminf(fminf(v26, INFINITY), v31);
  float v33 = fmaxf(fmaxf(v24, 0.0), v27);
  float v34 = fmaxf(fmaxf(v25, 0.0), v29);
  float v35 = fmaxf(fmaxf(v26, 0.0), v31);
  CGFloat v36 = MaxY * m12;
  CGFloat v37 = MaxY * m22;
  CGFloat v38 = MaxY * m32;
  float v39 = m14 + v36 + MinX * a2->m11 + m13 * 0.0;
  float v40 = m24 + v37 + MinX * m21 + m23 * 0.0;
  *(float *)&CGFloat m32 = m34 + v38 + MinX * m31 + m33 * 0.0;
  float v41 = m14 + v36 + MaxX * a2->m11 + m13 * 0.0;
  *(float *)&CGFloat m13 = m24 + v37 + MaxX * m21 + m23 * 0.0;
  *(float *)&CGFloat v38 = m34 + v38 + MaxX * m31 + m33 * 0.0;
  *a3 = fminf(fminf(v28, v39), v41);
  a3[1] = fminf(fminf(v30, v40), *(float *)&m13);
  a3[2] = fminf(fminf(v32, *(float *)&m32), *(float *)&v38);
  a3[3] = fmaxf(fmaxf(v33, v39), v41);
  double result = fmaxf(fmaxf(v35, *(float *)&m32), *(float *)&v38);
  a3[4] = fmaxf(fmaxf(v34, v40), *(float *)&m13);
  a3[5] = result;
  return result;
}

id sub_DE63C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFlownOut:*(unsigned __int8 *)(a1 + 40)];
}

void sub_E0D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_E0D6C(void *result, void *a2)
{
  if (*(unsigned char *)(*(void *)(result[5] + 8) + 24))
  {
    double v2 = result;
    if (*((unsigned char *)result + 48))
    {
      [*(id *)(result[4] + 8) setScalingMode:1];
      double v4 = (void *)v2[4];
      [a2 transitionDuration];
      return [v4 p_layoutViewsWithDuration:];
    }
  }
  return result;
}

void *sub_E0DEC(void *result, void *a2)
{
  id v3 = result;
  if (*(unsigned char *)(*(void *)(result[5] + 8) + 24) && *((unsigned char *)result + 48)) {
    double result = [*(id *)(result[4] + 8) setScalingMode:0];
  }
  if (!*((unsigned char *)v3 + 48))
  {
    double v4 = (void *)v3[4];
    [a2 transitionDuration];
    return [v4 p_layoutViewsWithDuration:];
  }
  return result;
}

void *sub_E0FB8(void *result)
{
  uint64_t v1 = result[4];
  if (!*(unsigned char *)(v1 + 120)) {
    return [*(id *)(v1 + 16) studyViewControllerIsDone:];
  }
  return result;
}

id sub_E1970(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) backdrop];

  return [v1 setAlpha:1.0];
}

id sub_E19A0(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "optionsButton"), "setAlpha:", 1.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "doneButton"), "setAlpha:", 1.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabel"), "setAlpha:", 1.0);
  double v2 = *(void **)(a1 + 32);

  return [v2 refreshStatusBarAppearance];
}

uint64_t sub_E1A04(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    uint64_t result = (*(uint64_t (**)(void))(result + 16))();
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 120) = 0;
  return result;
}

id sub_E1A48(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = [*(id *)(*(void *)(a1 + 32) + 8) noteCards];
  id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v7;
    do
    {
      double v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) setFlownOut:0 animated:1 duration:((double)(uint64_t)[*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) cardIndex]) * 0.0500000007+ 0.430000011];
        double v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_E1DE0(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "optionsButton"), "setAlpha:", 0.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "doneButton"), "setAlpha:", 0.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabel"), "setAlpha:", 0.0);
  double v2 = *(void **)(a1 + 32);

  return [v2 refreshStatusBarAppearance];
}

id sub_E1E44(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) backdrop];

  return [v1 setAlpha:0.0];
}

uint64_t sub_E1E74(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    uint64_t result = (*(uint64_t (**)(void))(result + 16))();
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 120) = 0;
  return result;
}

void sub_E7D24(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  float v12 = objc_alloc_init(THHighlightLine);
  -[THHighlightLine setFullLineRect:](v12, "setFullLineRect:", a2, a3, a4, a5);
  -[THHighlightLine setCurrentLineRect:](v12, "setCurrentLineRect:", a2, a3, a4, a5);
  [(THHighlightLine *)v12 setBaseline:a6];
  [(THHighlightLine *)v12 setUnderlineOffset:2.0];
  [*(id *)(a1 + 32) p_setupContentLayerForHighlightLine:v12];
  if ([(THHighlightLine *)v12 contentLayer]) {
    [*(id *)(*(void *)(a1 + 32) + 80) addObject:[v12 contentLayer]];
  }
}

void sub_E8710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_E872C(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

CGFloat sub_E873C(uint64_t a1, CTLineRef line, double a3, double a4)
{
  CGFloat descent = 0.0;
  *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = CTLineGetTypographicBounds(line, 0, &descent, 0)
                                                              + *(double *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                          + 48);
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  CGFloat result = descent + a4 + *(double *)(v6 + 56);
  *(CGFloat *)(v6 + 56) = result;
  return result;
}

void sub_E886C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CGFloat sub_E8888(uint64_t a1, CTLineRef line, double a3, double a4)
{
  CGFloat descent = 0.0;
  CTLineGetTypographicBounds(line, 0, &descent, 0);
  CGFloat result = descent + a4;
  *(CGFloat *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = descent + a4;
  return result;
}

void sub_E89EC(uint64_t a1, const __CTLine *a2, CGFloat a3, CGFloat a4)
{
  CGContextSetTextPosition(*(CGContextRef *)(a1 + 32), a3, a4);
  CGContextSetShouldSmoothFonts(*(CGContextRef *)(a1 + 32), 0);
  CGContextSetShouldAntialias(*(CGContextRef *)(a1 + 32), 1);
  uint64_t v6 = *(CGContext **)(a1 + 32);

  CTLineDraw(a2, v6);
}

void sub_E9FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EA140(void *a1)
{
}

void sub_EA14C(_Unwind_Exception *a1)
{
}

void sub_EA1B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EA270(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_EA284(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 40) = [*(id *)(a1 + 40) copyFixingSize];
  [*(id *)(a1 + 32) stopPagination];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "navigationUnits");
  id result = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        long long v7 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v6);
        long long v13 = 0u;
        long long v14 = 0u;
        long long v15 = 0u;
        long long v16 = 0u;
        id v8 = [v7 contentNodes];
        id v9 = [v8 countByEnumeratingWithState:&v13 objects:v21 count:16];
        if (v9)
        {
          id v10 = v9;
          uint64_t v11 = *(void *)v14;
          do
          {
            float v12 = 0;
            do
            {
              if (*(void *)v14 != v11) {
                objc_enumerationMutation(v8);
              }
              [*(id *)(*((void *)&v13 + 1) + 8 * (void)v12) invalidatePresentationType:[*(id *)(a1 + 32) presentationType]];
              float v12 = (char *)v12 + 1;
            }
            while (v10 != v12);
            id v10 = [v8 countByEnumeratingWithState:&v13 objects:v21 count:16];
          }
          while (v10);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v6 != v4);
      id result = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
      id v4 = result;
    }
    while (result);
  }
  return result;
}

void sub_EA4A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EA650(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EA730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_EA748(uint64_t a1)
{
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id obj = [[[*(id *)(a1 + 32) documentRoot] navigationModel] navigationUnits];
  id v2 = [obj countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (!v2) {
    return [*(id *)(a1 + 32) p_updatePaginationInProgress];
  }
  id v3 = v2;
  char v4 = 0;
  uint64_t v5 = *(void *)v21;
  do
  {
    uint64_t v6 = 0;
    do
    {
      if (*(void *)v21 != v5) {
        objc_enumerationMutation(obj);
      }
      long long v7 = *(void **)(*((void *)&v20 + 1) + 8 * (void)v6);
      long long v16 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      id v8 = [v7 contentNodes];
      id v9 = [v8 countByEnumeratingWithState:&v16 objects:v24 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v17;
        do
        {
          for (unint64_t i = 0; i != v10; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v17 != v11) {
              objc_enumerationMutation(v8);
            }
            uint64_t v13 = *(void *)(*((void *)&v16 + 1) + 8 * i);
            if (![*(id *)(a1 + 32) paginationResultForContentNode:v13])
            {
              [*(id *)(a1 + 32) paginateContentNode:v13 paginationCompletionDelegate:0 priority:0 isForeground:0 activity:*(void *)(a1 + 40)];
              char v4 = 1;
            }
          }
          id v10 = [v8 countByEnumeratingWithState:&v16 objects:v24 count:16];
        }
        while (v10);
      }
      uint64_t v6 = (char *)v6 + 1;
    }
    while (v6 != v3);
    id result = [obj countByEnumeratingWithState:&v20 objects:v25 count:16];
    id v3 = result;
  }
  while (result);
  if ((v4 & 1) == 0) {
    return [*(id *)(a1 + 32) p_updatePaginationInProgress];
  }
  return result;
}

void sub_EA9A4(uint64_t a1)
{
  if (objc_msgSend(*(id *)(a1 + 32), "isEqualIncludingSize:", objc_msgSend(*(id *)(a1 + 40), "presentationType")))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "observers", 0), "copy");
    id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v9;
      do
      {
        uint64_t v6 = 0;
        do
        {
          if (*(void *)v9 != v5) {
            objc_enumerationMutation(v2);
          }
          long long v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
          if ((objc_opt_respondsToSelector() & 1) != 0
            && objc_msgSend(*(id *)(a1 + 32), "isEqualIncludingSize:", objc_msgSend(*(id *)(a1 + 40), "presentationType")))
          {
            [v7 paginationController:*(void *)(a1 + 40) paginationCompleteStateChangedTo:*(unsigned __int8 *)(a1 + 48)];
          }
          uint64_t v6 = (char *)v6 + 1;
        }
        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }
      while (v4);
    }
  }
}

void sub_EAD54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EAF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB0C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB30C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB444(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB4E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB5F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB8D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EB948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EBB6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EBB98(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) paginationResultForContentNode:*(void *)(a1 + 40)];
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "observers"), "copy");
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v11;
      do
      {
        long long v8 = 0;
        do
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v4);
          }
          long long v9 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v8);
          if (objc_opt_respondsToSelector()) {
            [v9 paginationController:*(void *)(a1 + 32) paginationResultChanged:v3 forContentNode:*(void *)(a1 + 40) paginationProgress:*(unsigned __int8 *)(a1 + 56) paginationComplete:*(double *)(a1 + 48)];
          }
          long long v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v6);
    }
  }
}

void sub_EBECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EBF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EC450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_EC468(uint64_t a1, void *a2)
{
  id result = [a2 containsOccurrenceOfWord:*(void *)(a1 + 32)];
  if (result) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  return result;
}

void sub_ECF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_ECFBC(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_ED030;
  v3[3] = &unk_4593E8;
  long long v4 = *(_OWORD *)(a1 + 32);
  return [a2 enumerateOccurrencesWithBlock:v3];
}

id sub_ED030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [*(id *)(a1 + 32) objectForKey:*(void *)(a3 + 16)];
  id v7 = +[TSUPairNonRetainedSecond pairWithFirst:a2 second:a3];
  if (v6)
  {
    id result = [v6 addObject:v7];
  }
  else
  {
    id v9 = +[NSMutableArray array];
    [v9 addObject:v7];
    id result = [*(id *)(a1 + 32) setObject:v9 forKey:*(void *)(a3 + 16)];
  }
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

_WORD *sub_ED178(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return [*(id *)(a1 + 32) addObject:a2];
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = [a3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (!v6) {
    return [*(id *)(a1 + 32) addObject:a2];
  }
  id v7 = v6;
  uint64_t v8 = *(void *)v12;
LABEL_4:
  uint64_t v9 = 0;
  while (1)
  {
    if (*(void *)v12 != v8) {
      objc_enumerationMutation(a3);
    }
    id result = [*(id *)(*((void *)&v11 + 1) + 8 * v9) second];
    if (result)
    {
      if (*result == 1) {
        return result;
      }
    }
    if (v7 == (id)++v9)
    {
      id v7 = [a3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v7) {
        goto LABEL_4;
      }
      return [*(id *)(a1 + 32) addObject:a2];
    }
  }
}

id sub_ED460(uint64_t a1)
{
  objc_opt_class();
  id v2 = (void *)TSUDynamicCast();
  if (!v2) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchIndex p_cfiForString:paragraphRange:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THModelSearchIndex.m") lineNumber:476 description:@"invalid nil value for '%s'", "term"];
  }
  uint64_t v3 = *(void *)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_ED574;
  _OWORD v5[3] = &unk_459460;
  long long v6 = *(_OWORD *)(a1 + 40);
  return [v2 enumerateOccurrencesOfWord:v3 withBlock:v5];
}

id sub_ED574(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return [TSUAssertionHandler currentHandler] handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchIndex p_cfiForString:paragraphRange:]_block_invoke_2") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THModelSearchIndex.m") lineNumber:480 description:@"invalid nil value for '%s'", "occurrence"];
  }
  id v3 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a2 + 16)];
  if (!v3) {
    return [TSUAssertionHandler currentHandler] handleFailureInFunction:+[NSString stringWithUTF8String:"-[THSearchIndex p_cfiForString:paragraphRange:]_block_invoke_2"] file:+[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THModelSearchIndex.m"] lineNumber:484 description:@"invalid nil value for '%s'", "cfi"];
  }
  id v4 = v3;
  id v5 = *(void **)(a1 + 40);

  return [v5 addObject:v4];
}

id KNBundle()
{
  if (qword_573230 != -1) {
    dispatch_once(&qword_573230, &stru_4594A8);
  }
  v0 = (void *)qword_573228;

  return v0;
}

void sub_EEC48(id a1)
{
  uint64_t v1 = +[NSBundle bundleForClass:objc_opt_class()];
  uint64_t v2 = qword_573228;
  qword_573228 = v1;

  _objc_release_x1(v1, v2);
}

void sub_F018C(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"cellHeight" forKey:55.0];
  [(IMConfigurationAdder *)a2 addFloat:@"chapterLabelFontSize" forKey:16.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonLeftMargin" forKey:10.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRadius" forKey:12.5];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRightMargin" forKey:12.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonWidth" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"headerImageToTocTableMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addBool:0 forKey:@"multiLevelIndent"];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberLeftMargin" forKey:20.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginChapter" forKey:10.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:15.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel1" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel2" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel3" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:15.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:15.0];
  [(IMConfigurationAdder *)a2 addBool:1 forKey:@"pageNumberDynamicWidth"];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberFontSize" forKey:12.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberLeftMargin" forKey:10.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberWidth" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelFontSize" forKey:15.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelRightMargin" forKey:5.0];
  [(IMConfigurationAdder *)a2 addFloat:@"separatorColorWhite" forKey:201.0];

  [(IMConfigurationAdder *)a2 addFloat:@"viewTopToTocTableMargin" forKey:150.0];
}

id sub_F03A4(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate regularWidthPredicate];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_F04F0;
  v10[3] = &unk_459510;
  void v10[4] = *(void *)(a1 + 32);
  [a2 addWithPredicate:v4 adder:v10];
  id v5 = +[IMConfigurationPredicate compactWidthPredicate];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_F053C;
  v9[3] = &unk_459510;
  void v9[4] = *(void *)(a1 + 32);
  [a2 addWithPredicate:v5 adder:v9];
  id v6 = +[IMConfigurationPredicate compactWidthPredicate];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_F0588;
  v8[3] = &unk_459510;
  v8[4] = *(void *)(a1 + 32);
  return [a2 addWithPredicate:v6 adder:v8];
}

id sub_F04F0(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate compactHeightPredicate];
  uint64_t v5 = *(void *)(a1 + 32);

  return [a2 addWithPredicate:v4 adder:v5];
}

id sub_F053C(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate regularHeightPredicate];
  uint64_t v5 = *(void *)(a1 + 32);

  return [a2 addWithPredicate:v4 adder:v5];
}

id sub_F0588(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate compactHeightPredicate];
  uint64_t v5 = *(void *)(a1 + 32);

  return [a2 addWithPredicate:v4 adder:v5];
}

id sub_F05D4(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate regularWidthPredicate];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_F0720;
  v10[3] = &unk_459510;
  void v10[4] = *(void *)(a1 + 32);
  [a2 addWithPredicate:v4 adder:v10];
  id v5 = +[IMConfigurationPredicate compactWidthPredicate];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_F076C;
  v9[3] = &unk_459510;
  void v9[4] = *(void *)(a1 + 32);
  [a2 addWithPredicate:v5 adder:v9];
  id v6 = +[IMConfigurationPredicate compactWidthPredicate];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_F07B8;
  v8[3] = &unk_459510;
  v8[4] = *(void *)(a1 + 32);
  return [a2 addWithPredicate:v6 adder:v8];
}

id sub_F0720(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate compactHeightPredicate];
  uint64_t v5 = *(void *)(a1 + 32);

  return [a2 addWithPredicate:v4 adder:v5];
}

id sub_F076C(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate regularHeightPredicate];
  uint64_t v5 = *(void *)(a1 + 32);

  return [a2 addWithPredicate:v4 adder:v5];
}

id sub_F07B8(uint64_t a1, void *a2)
{
  id v4 = +[IMConfigurationPredicate compactHeightPredicate];
  uint64_t v5 = *(void *)(a1 + 32);

  return [a2 addWithPredicate:v4 adder:v5];
}

void sub_F08F8(id a1, IMConfigurationAdder *a2)
{
  id v3 = +[IMConfigurationPredicate regularHeightPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_459550];
}

void sub_F0944(id a1, IMConfigurationAdder *a2)
{
  id v3 = +[IMConfigurationPredicate regularWidthPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_459570];
}

void sub_F0990(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"cellHeight" forKey:44.0];
  [(IMConfigurationAdder *)a2 addFloat:@"chapterLabelFontSize" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonLeftMargin" forKey:6.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRadius" forKey:12.5];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRightMargin" forKey:75.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonWidth" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"headerImageToTocTableMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addBool:1 forKey:@"multiLevelIndent"];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberLeftMargin" forKey:75.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginChapter" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel1" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel2" forKey:45.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel3" forKey:25.0];
  [(IMConfigurationAdder *)a2 addBool:0 forKey:@"pageNumberDynamicWidth"];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberFontSize" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberLeftMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberWidth" forKey:54.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelFontSize" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelRightMargin" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"separatorColorWhite" forKey:201.0];

  [(IMConfigurationAdder *)a2 addFloat:@"viewTopToTocTableMargin" forKey:150.0];
}

void sub_F0BA0(id a1, IMConfigurationAdder *a2)
{
  id v3 = +[IMConfigurationPredicate regularHeightPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_4595B0];
}

void sub_F0BEC(id a1, IMConfigurationAdder *a2)
{
  id v3 = +[IMConfigurationPredicate regularWidthPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_4595D0];
}

void sub_F0C38(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"cellHeight" forKey:44.0];
  [(IMConfigurationAdder *)a2 addFloat:@"chapterLabelFontSize" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonLeftMargin" forKey:6.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRadius" forKey:12.5];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRightMargin" forKey:75.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonWidth" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"headerImageToTocTableMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addBool:1 forKey:@"multiLevelIndent"];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberLeftMargin" forKey:75.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginChapter" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel1" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel2" forKey:45.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel3" forKey:25.0];
  [(IMConfigurationAdder *)a2 addBool:0 forKey:@"pageNumberDynamicWidth"];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberFontSize" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberLeftMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberWidth" forKey:54.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelFontSize" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelRightMargin" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"separatorColorWhite" forKey:201.0];

  [(IMConfigurationAdder *)a2 addFloat:@"viewTopToTocTableMargin" forKey:150.0];
}

void sub_F0E48(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"cellHeight" forKey:55.0];
  [(IMConfigurationAdder *)a2 addFloat:@"chapterLabelFontSize" forKey:16.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonLeftMargin" forKey:10.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRadius" forKey:12.5];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRightMargin" forKey:12.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonWidth" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"headerImageToTocTableMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addBool:0 forKey:@"multiLevelIndent"];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberLeftMargin" forKey:20.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginChapter" forKey:10.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:15.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel1" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel2" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel3" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:15.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:15.0];
  [(IMConfigurationAdder *)a2 addBool:1 forKey:@"pageNumberDynamicWidth"];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberFontSize" forKey:12.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberLeftMargin" forKey:10.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberWidth" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelFontSize" forKey:15.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelRightMargin" forKey:5.0];
  [(IMConfigurationAdder *)a2 addFloat:@"separatorColorWhite" forKey:201.0];

  [(IMConfigurationAdder *)a2 addFloat:@"viewTopToTocTableMargin" forKey:150.0];
}

void sub_F10AC(id a1, IMConfigurationAdder *a2)
{
  id v3 = +[IMConfigurationPredicate regularHeightPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_459630];
}

void sub_F10F8(id a1, IMConfigurationAdder *a2)
{
  id v3 = +[IMConfigurationPredicate regularWidthPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_459650];
}

void sub_F1144(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"cellHeight" forKey:75.0];
  [(IMConfigurationAdder *)a2 addFloat:@"chapterLabelFontSize" forKey:20.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonLeftMargin" forKey:13.0];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRadius" forKey:12.5];
  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonWidth" forKey:35.0];
  [(IMConfigurationAdder *)a2 addFloat:@"headerImageToTocTableMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addBool:1 forKey:@"multiLevelIndent"];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberColorWhite" forKey:0.6];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginChapter" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberRightMarginSection" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel1" forKey:65.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel2" forKey:75.0];
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalWidthLevel3" forKey:55.0];
  [(IMConfigurationAdder *)a2 addBool:0 forKey:@"pageNumberDynamicWidth"];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberFontSize" forKey:20.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberLeftMargin" forKey:0.0];
  [(IMConfigurationAdder *)a2 addFloat:@"pageNumberWidth" forKey:54.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelFontSize" forKey:20.0];
  [(IMConfigurationAdder *)a2 addFloat:@"sectionLabelRightMargin" forKey:17.0];
  [(IMConfigurationAdder *)a2 addFloat:@"separatorColorWhite" forKey:230.0];
  [(IMConfigurationAdder *)a2 addFloat:@"viewTopToTocTableMargin" forKey:150.0];
  [(IMConfigurationAdder *)a2 addWithPredicate:+[IMConfigurationPredicate landscapePredicate] adder:&stru_459670];
  id v3 = +[IMConfigurationPredicate portraitPredicate];

  [(IMConfigurationAdder *)a2 addWithPredicate:v3 adder:&stru_459690];
}

void sub_F137C(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberLeftMargin" forKey:180.0];

  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRightMargin" forKey:180.0];
}

void sub_F13E0(id a1, IMConfigurationAdder *a2)
{
  [(IMConfigurationAdder *)a2 addFloat:@"ordinalNumberLeftMargin" forKey:38.0];

  [(IMConfigurationAdder *)a2 addFloat:@"discloseButtonRightMargin" forKey:38.0];
}

uint64_t _highlightRowInfos(void)
{
  if (qword_573240 != -1) {
    dispatch_once(&qword_573240, &stru_4596B0);
  }
  return qword_573238;
}

void sub_F2CF4(id a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_5732A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_5732A8))
  {
    dword_573248 = 3;
    qword_573250 = (uint64_t)[(id)THBundle() localizedStringForKey:@"Yellow" value:&stru_46D7E8 table:0];
    dword_573258 = 1;
    qword_573260 = (uint64_t)[(id)THBundle() localizedStringForKey:@"Green" value:&stru_46D7E8 table:0];
    dword_573268 = 2;
    qword_573270 = (uint64_t)[(id)THBundle() localizedStringForKey:@"Blue" value:&stru_46D7E8 table:0];
    dword_573278 = 4;
    qword_573280 = (uint64_t)[(id)THBundle() localizedStringForKey:@"Pink" value:&stru_46D7E8 table:0];
    dword_573288 = 5;
    qword_573290 = (uint64_t)[(id)THBundle() localizedStringForKey:@"Purple" value:&stru_46D7E8 table:0];
    dword_573298 = 6;
    qword_5732A0 = (uint64_t)[(id)THBundle() localizedStringForKey:@"Underline" value:&stru_46D7E8 table:0];
    __cxa_guard_release(&qword_5732A8);
  }
  qword_573238 = (uint64_t)&dword_573248;
}

void sub_F2E70(_Unwind_Exception *a1)
{
}

double _studyOptionsPopoverSize(void)
{
  if (+[UIFont bc_accessibilityFontSizesEnabled])double v0 = 360.0; {
  else
  }
    double v0 = 320.0;
  +[UIFont bc_accessibilityFontSizesEnabled];
  return v0;
}

id sub_F49BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 bodyStorage];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [v4 range];
  [v5 setStorage:v4 range:v6, v7];
  uint64_t v8 = *(void **)(a1 + 32);
  id v9 = [+[TSUFont systemFontOfSize:](TSUFont, "systemFontOfSize:", 12.0) familyName];
  long long v10 = THNoteCardBackTextColor((int)[*(id *)(a1 + 40) darkMode]);

  return [v8 setFontFamily:v9 textColor:v10 underlineColor:0 characterSpacing:0 lineSpacingMode:4 lineSpacingAmount:-0.01 alignment:1.0];
}

uint64_t sub_F7A50(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_F7B40(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setHidden:", 1);
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_F7C94(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_F7D84(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setHidden:", 1);
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_F8050(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 40), "setPreferredDisplayMode:", 2 * (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "notesSidebarViewController"), "presentedViewController") != 0));
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 p_isEditing];
  id v4 = [*(id *)(a1 + 32) p_isCollapsed];

  return [v2 p_configureToolbarsForEditing:v3 collapsed:v4];
}

id sub_F8880(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "recordCurrentLocationInHistory");
  id v2 = [*(id *)(a1 + 32) bookViewController];

  return [v2 updateNavigationAffordances];
}

id sub_F8A64(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateSectionProviders];
}

NSString *__cdecl sub_F9F90(id a1, id a2)
{
  return (NSString *)[a2 stringValue];
}

void sub_FB7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_FB7DC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_FB7EC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  v5.size.CGFloat height = a5;
  v5.size.CGFloat width = a4;
  v5.origin.CGFloat y = a3;
  v5.origin.CGFloat x = a2;
  *(CGRect *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = CGRectUnion(*(CGRect *)(*(void *)(*(void *)(a1 + 32) + 8)+ 48), v5);
}

id sub_FBF18(uint64_t a1, void *a2)
{
  double v4 = *(double *)(a1 + 40);
  *(float *)&double v4 = v4;
  [a2 setFloatValue:17 forProperty:v4];
  [a2 setFloatValue:81 forProperty:0.0];
  [a2 setFloatValue:80 forProperty:0.0];
  [a2 setFloatValue:87 forProperty:0.0];
  id result = [a2 setFloatValue:88 forProperty:0.0];
  if (*(void *)(a1 + 32))
  {
    return [a2 setValue:forProperty:];
  }
  return result;
}

id sub_FBFBC(uint64_t a1, void *a2)
{
  id result = [a2 definesProperty:17];
  if (result)
  {
    double v5 = *(double *)(a1 + 32);
    *(float *)&double v5 = v5;
    return [a2 setFloatValue:17 forProperty:v5];
  }
  return result;
}

void sub_1018EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1019B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_101AE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setMoviePlayerControllerIsLoaded:1];
}

id sub_10230C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "introMediaControllerMoviePlayerWillShowControls");
  [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:1.0];
  id v2 = *(void **)(a1 + 32);

  return [v2 setControlsHidden:0];
}

id sub_102368(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshStatusBarAppearance];
}

id sub_102370(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "introMediaControllerMoviePlayerWillShowControls");
  id v2 = *(void **)(a1 + 32);

  return [v2 setControlsHidden:0];
}

id sub_1023B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshStatusBarAppearance];
}

id sub_102624(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "introMediaControllerMoviePlayerWillHideControls");
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "controlsView"), "setAlpha:", 0.0);
  [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:0.0];
  id v2 = *(void **)(a1 + 32);

  return [v2 setControlsHidden:1];
}

id sub_10269C(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshStatusBarAppearance];
}

id sub_10474C(uint64_t a1)
{
  return [*(id *)(a1 + 32) clearAndReloadAnnotations];
}

id sub_104754(uint64_t a1)
{
  return [*(id *)(a1 + 32) setInSizeTransition:0];
}

id sub_104ED0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) numberOfSections];
  if (result)
  {
    [*(id *)(a1 + 32) rectForSection:[*(id *)(a1 + 32) numberOfSections] - 1];
    double MaxY = CGRectGetMaxY(v4);
    [*(id *)(a1 + 32) bounds];
    return (id)(MaxY >= CGRectGetHeight(v5));
  }
  return result;
}

void sub_106CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_106D04(uint64_t a1, uint64_t a2)
{
  id v7 = [*(id *)(a1 + 32) cachedAnnotationForIndexPath:a2];
  uint64_t v3 = [v7 annotationNote];
  if (v3)
  {
    CGRect v4 = (void *)v3;
    CGRect v5 = [v7 annotationNote];
    id v6 = [v5 length];

    if (v6) {
      ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    }
  }
}

int64_t sub_106F38(id a1, id a2, id a3)
{
  id v4 = a2;
  id v5 = a3;
  id v6 = v4;
  id v7 = v5;
  id v8 = [v6 section];
  if (v8 == [v7 section])
  {
    id v9 = [v6 row];
    if (v9 == [v7 row])
    {
      int64_t v10 = 0;
      goto LABEL_9;
    }
    id v11 = [v6 row];
    id v12 = [v7 row];
  }
  else
  {
    id v11 = [v6 section];
    id v12 = [v7 section];
  }
  if ((uint64_t)v11 < (uint64_t)v12) {
    int64_t v10 = 1;
  }
  else {
    int64_t v10 = -1;
  }
LABEL_9:

  return v10;
}

id sub_10C604(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) isCurrentPageBookmarkedForBookmarkMenuPopoverViewController:*(void *)(a1 + 40)] ^ 1;
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 setCurrentPageBookmarked:v2 forBookmarkMenuPopoverViewController:v4];
}

id sub_10C648(uint64_t a1)
{
  return [*(id *)(a1 + 32) jumpToPageLocation:*(void *)(a1 + 40) touchHistory:1 minor:0];
}

id sub_10ED50(uint64_t a1)
{
  return [*(id *)(a1 + 32) _animationDidStop];
}

id sub_1100C0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) newImageSourceForTextureName:*(void *)(a1 + 40)];

  return v1;
}

void sub_112330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_112348(uint64_t a1, uint64_t a2)
{
}

void sub_112358(uint64_t a1)
{
}

id sub_112364(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  uint64_t v3 = [[THPageLocation alloc] initWithDictionaryRepresentation:a2];

  return [v2 addObject:v3];
}

void sub_112508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_112524(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = [a2 dictionaryRepresentation];

  return [v2 addObject:v3];
}

id sub_113730(uint64_t a1)
{
  [*(id *)(a1 + 32) setCenter: *(double *)(a1 + 48), *(double *)(a1 + 56)];
  [*(id *)(a1 + 40) addSubview:*(void *)(a1 + 32)];
  double v2 = *(double *)(a1 + 64);
  id v3 = [*(id *)(a1 + 32) layer];

  return [v3 setZPosition:v2];
}

id sub_113C34(uint64_t a1)
{
  [*(id *)(a1 + 32) setCenter:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  double v2 = *(void **)(a1 + 40);
  if (v2) {
    [v2 addSubview:*(void *)(a1 + 32)];
  }
  else {
    [*(id *)(a1 + 32) removeFromSuperview];
  }
  double v3 = *(double *)(a1 + 64);
  id v4 = [*(id *)(a1 + 32) layer];

  return [v4 setZPosition:v3];
}

id sub_113FF8(uint64_t a1)
{
  +[CATransaction begin];
  [*(id *)(a1 + 32) setWindowLevel:*(double *)(a1 + 72)];
  [*(id *)(a1 + 32) setBackgroundColor:*(void *)(a1 + 40)];
  [*(id *)(a1 + 48) setCenter:*(double *)(a1 + 80), *(double *)(a1 + 88)];
  long long v2 = *(_OWORD *)(a1 + 112);
  v4[0] = *(_OWORD *)(a1 + 96);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 128);
  [*(id *)(a1 + 48) setTransform:v4];
  [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 48)];
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 56), "subviews"), "count")) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[UIWindow(THAdditions) rootView]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Utility/UIWindow_THAdditions.m") lineNumber:212 description:@"clip view shouldn't have any subviews"];
  }
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 64), "subviews"), "count") != (char *)&dword_0 + 1) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[UIWindow(THAdditions) rootView]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Utility/UIWindow_THAdditions.m") lineNumber:213 description:@"new root view should only have one subview"];
  }
  [*(id *)(a1 + 64) removeFromSuperview];
  return +[CATransaction commit];
}

id sub_117A9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) present];
}

id sub_117AA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 120)) {
    uint64_t v2 = *(void *)(v1 + 120);
  }
  else {
    uint64_t v2 = 0;
  }
  return [*(id *)(v1 + 112) performSelector:v2 withObject:];
}

id sub_117BF0(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 120)) {
    uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 120);
  }
  else {
    uint64_t v1 = 0;
  }
  return [*(id *)(*(void *)(a1 + 32) + 112) performSelector:v1 withObject:* (double *)(a1 + 40)];
}

BOOL THFlowBodyHintCompareCharIndex(uint64_t a1, unint64_t a2)
{
  return *(void *)(a1 + 24) + *(void *)(a1 + 16) <= a2;
}

void sub_11878C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_118848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_11885C(uint64_t a1, void *a2)
{
  if (objc_msgSend(objc_msgSend(a2, "layoutController"), "isLayoutOffscreen")) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THFlowPageController layoutContentAtLayoutAnchor:padAbove:padBelow:]_block_invoke") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THFlowPageController.mm") lineNumber:141 description:@"should be laying out into an onscreen layout"];
  }
  id v4 = [*(id *)(a1 + 32) bodyIndex];
  [*(id *)(a1 + 32) offsetFromBodyTop];
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);

  return [a2 layoutContentAtBodyIndex:v4 offsetFromTop:v5 padAbove:v6];
}

void sub_1189B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1189C4(uint64_t a1, void *a2)
{
  return [a2 layoutContentFromBottom:*(void *)(a1 + 32)];
}

void sub_118A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_118A70(uint64_t a1, void *a2)
{
  return [a2 layoutContentFromTop:*(void *)(a1 + 32)];
}

void sub_118BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_118DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_118EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_sync_exit(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

__n128 sub_118F04(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

id sub_118F14(uint64_t a1, void *a2)
{
  id result = [a2 firstLineInRect:*(void *)(a1 + 72) fromCharIndex:*(double *)(a1 + 40) toCharIndex:*(double *)(a1 + 48) rect:*(double *)(a1 + 56) rect:*(double *)(a1 + 64)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  *(void *)(v4 + 48) = result;
  *(void *)(v4 + 56) = v5;
  return result;
}

void sub_1191B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_119384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_11952C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Block_object_dispose((const void *)(v2 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_11954C(uint64_t a1, void *a2)
{
  id result = [a2 firstBodyCharacterIndexOverlappingPageRect:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

id sub_119588(uint64_t a1, void *a2)
{
  CGFloat y = CGRectZero.origin.y;
  CGFloat width = CGRectZero.size.width;
  CGFloat height = CGRectZero.size.height;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v6 = [a2 bodyLayouts];
  id result = [v6 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (result)
  {
    id v8 = result;
    CGFloat x = CGRectZero.origin.x;
    id v9 = 0;
    uint64_t v10 = *(void *)v29;
    double v11 = 1.79769313e308;
    do
    {
      id v12 = 0;
      do
      {
        if (*(void *)v29 != v10) {
          objc_enumerationMutation(v6);
        }
        long long v13 = *(void **)(*((void *)&v28 + 1) + 8 * (void)v12);
        objc_msgSend(objc_msgSend(v13, "parent", *(void *)&x), "bodyRectForChildLayout:", v13);
        double v15 = v14;
        double v17 = v16;
        double v19 = v18;
        double v21 = v20;
        TSDDistanceToRectFromRect();
        if (v22 < v11)
        {
          CGFloat x = v15;
          CGFloat y = v17;
          CGFloat width = v19;
          CGFloat height = v21;
          id v9 = v13;
          double v11 = v22;
        }
        id v12 = (char *)v12 + 1;
      }
      while (v8 != v12);
      id result = [v6 countByEnumeratingWithState:&v28 objects:v32 count:16];
      id v8 = result;
    }
    while (result);
    if (v9)
    {
      __int16 v27 = 0;
      double MidY = CGRectGetMidY(*(CGRect *)(a1 + 40));
      v33.origin.CGFloat x = x;
      v33.origin.CGFloat y = y;
      v33.size.CGFloat width = width;
      v33.size.CGFloat height = height;
      if (MidY <= CGRectGetMidY(v33))
      {
        double v24 = CGPointZero.x;
        double v25 = CGPointZero.y;
      }
      else
      {
        v34.origin.CGFloat x = x;
        v34.origin.CGFloat y = y;
        v34.size.CGFloat width = width;
        v34.size.CGFloat height = height;
        double v24 = CGRectGetWidth(v34);
        v35.origin.CGFloat x = x;
        v35.origin.CGFloat y = y;
        v35.size.CGFloat width = width;
        v35.size.CGFloat height = height;
        double v25 = CGRectGetHeight(v35);
      }
      id result = +[TSWPColumn charIndexForPoint:inColumnsArray:allowPastBreak:allowNotFound:pastCenterGoesToNextChar:isAtEndOfLine:leadingEdge:](TSWPColumn, "charIndexForPoint:inColumnsArray:allowPastBreak:allowNotFound:pastCenterGoesToNextChar:isAtEndOfLine:leadingEdge:", objc_msgSend(v9, "columns", *(void *)&x), 0, 0, 0, (char *)&v27 + 1, &v27, v24, v25);
      *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    }
  }
  return result;
}

void sub_1198CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

__n128 sub_1198EC(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

id sub_1198FC(uint64_t a1, void *a2)
{
  id result = [a2 originOfCharacterIndex:*(void *)(a1 + 40)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = v6;
  return result;
}

void sub_119A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_119CDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_119E14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_119F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_11A074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_11A174(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_11A6E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_11A840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_11A8E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *sub_11AFEC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_3D2B0();
  }
  return operator new(40 * a2);
}

uint64_t KNAnimationTypeFromKPFAnimationType(void *a1)
{
  if ([a1 isEqualToString:@"none"]) {
    return 0;
  }
  if ([a1 isEqualToString:@"buildIn"]) {
    return 1;
  }
  if ([a1 isEqualToString:@"buildOut"]) {
    return 2;
  }
  if ([a1 isEqualToString:@"transition"]) {
    return 3;
  }
  if ([a1 isEqualToString:@"actionBuild"]) {
    return 4;
  }
  return 0;
}

TSDLayout *__cdecl sub_11EF38(id a1, TSDRep *a2)
{
  return (TSDLayout *)[(TSDRep *)a2 layout];
}

id sub_11EFE8(uint64_t a1, void *a2)
{
  uint64_t v4 = OBJC_IVAR___TSDRep_mCanvas;
  id v5 = [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___TSDRep_mCanvas) repForLayout:a2];
  if (!v5) {
    id v5 = objc_msgSend(objc_alloc((Class)objc_msgSend(a2, "repClassOverride")), "initWithLayout:canvas:", a2, *(void *)(*(void *)(a1 + 32) + v4));
  }
  [v5 setParentRep:*(void *)(a1 + 32)];

  return v5;
}

uint64_t sub_11F314(uint64_t a1, void *a2, void *a3)
{
  id v5 = objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a2, "pageController"), "contentNode"));
  uint64_t v6 = v5
     - (unsigned char *)objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a3, "pageController"), "contentNode"));

  return THNSComparisonResultFromInteger(v6);
}

void sub_12083C(id a1)
{
  id v1 = objc_alloc_init((Class)NSOperationQueue);
  qword_5732B8 = (uint64_t)v1;

  [v1 setMaxConcurrentOperationCount:1];
}

id sub_120928(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) performSelector:*(void *)(a1 + 40) withObject:a2];
}

id sub_120A00(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) performSelector:*(void *)(a1 + 48) onThread:*(void *)(a1 + 40) withObject:a2 waitUntilDone:0];
}

id sub_121880(uint64_t a1)
{
  return +[THReflowablePaginationCache _evictOlderCacheFiles:*(void *)(a1 + 32)];
}

void sub_121BF8(_Unwind_Exception *a1)
{
}

void sub_121C00()
{
}

void sub_122380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1223AC(uint64_t a1, uint64_t a2)
{
}

void sub_1223BC(uint64_t a1)
{
}

id sub_1223C8(uint64_t a1)
{
  objc_opt_class();
  id result = (id)TSUDynamicCast();
  if (result)
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    return [result accumulateDisplayPageNumbersIntoAbsolutePageIndexMap:v3 AndDisplayPageNumberArray:v4];
  }
  return result;
}

void sub_1227F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *sub_1230D0(NSRange *a1)
{
  objc_opt_class();
  id result = (void *)TSUDynamicCast();
  if (result)
  {
    v3.NSUInteger location = (NSUInteger)[result range];
    return (void *)(NSIntersectionRange(v3, a1[32]).length != 0);
  }
  return result;
}

void sub_123704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1248B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"p_AnimationEnded" withObject:0 afterDelay:0.0];
}

void sub_129D2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL THTimeIntervalsAlmostEqual(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.01;
}

unint64_t THMinIndex(unint64_t a1, unint64_t a2)
{
  if (a1 >= a2) {
    unint64_t v2 = a2;
  }
  else {
    unint64_t v2 = a1;
  }
  if (a2 == 0x7FFFFFFFFFFFFFFFLL) {
    unint64_t v2 = a1;
  }
  if (a1 == 0x7FFFFFFFFFFFFFFFLL) {
    return a2;
  }
  else {
    return v2;
  }
}

unint64_t THMaxIndex(unint64_t a1, unint64_t a2)
{
  if (a1 <= a2) {
    unint64_t v2 = a2;
  }
  else {
    unint64_t v2 = a1;
  }
  if (a2 == 0x7FFFFFFFFFFFFFFFLL) {
    unint64_t v2 = a1;
  }
  if (a1 == 0x7FFFFFFFFFFFFFFFLL) {
    return a2;
  }
  else {
    return v2;
  }
}

uint64_t THBundle()
{
  if (qword_5732F0 != -1) {
    dispatch_once(&qword_5732F0, &stru_459C50);
  }
  return qword_5732E8;
}

void sub_12A000(id a1)
{
  qword_5732E8 = +[NSBundle bundleForClass:objc_opt_class()];
}

void sub_12A910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_12A9AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_12AAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_12AB80(NSRange *a1, void *a2)
{
  v5.NSUInteger location = (NSUInteger)[a2 annotationStorageRange];
  v5.length = v3;
  return NSIntersectionRange(a1[32], v5).length != 0;
}

void sub_12AC1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_12AC74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_12ACE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_12AD4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_12B288(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setAlpha:", 1.0);
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "setAlpha:", 1.0);
  if (*(unsigned char *)(a1 + 40))
  {
    id v3 = [*(id *)(a1 + 32) scrimView];
    return [v3 setAlpha:0.5];
  }
  return result;
}

id sub_12B2F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_didFade];
}

id sub_12BD3C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setAlpha:", 0.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrimView"), "setAlpha:", 0.0);
  id v2 = [*(id *)(a1 + 32) closeButton];

  return [v2 setAlpha:0.0];
}

id sub_12BD98(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setAlpha:", 1.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "removeFromSuperview");
  [*(id *)(a1 + 32) setView:0];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrimView"), "removeFromSuperview");
  [*(id *)(a1 + 32) setScrimView:0];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "removeFromSuperview");
  [*(id *)(a1 + 32) setCloseButton:0];
  [*(id *)(a1 + 32) p_didFade];
  id v2 = *(void **)(a1 + 32);

  return [v2 setIsDismissing:0];
}

BOOL sub_12F480(uint64_t a1, void *a2)
{
  return [*(id *)(a1 + 32) contentNodeForGUID:[a2 annotationContentNodeID]] == 0;
}

id sub_12FD38(uint64_t a1)
{
  [*(id *)(a1 + 32) p_performRenderJob:*(void *)(a1 + 40) accessController:*(void *)(a1 + 48) location:*(void *)(a1 + 56) width:*(void *)(a1 + 64) editingWidth:*(void *)(a1 + 88) text:*(void *)(a1 + 96) range:*(void *)(a1 + 104) interfaceStyle:*(double *)(a1 + 72)];
  [*(id *)(a1 + 40) didFinish];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 performSelectorOnMainThread:"p_finishedRenderJob:" withObject:v3 waitUntilDone:0];
}

void sub_12FE98(uint64_t a1)
{
  uint64_t v4 = objc_alloc_init(THNotesViewRenderedAnnotation);
  id v2 = objc_msgSend(*(id *)(a1 + 32), "p_newHighlightLayerForAnnotation:width:storage:text:range:interfaceStyle:maxLines:documentRoot:", objc_msgSend(*(id *)(a1 + 40), "annotation"), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(double *)(a1 + 64), objc_msgSend(*(id *)(a1 + 40), "maxLines"), objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "contentNode"), "documentRoot"));
  [(THNotesViewRenderedAnnotation *)v4 setHighlightLayer:v2];
  [v2 textFrame];
  -[THNotesViewRenderedAnnotation setHighlightTextFrame:](v4, "setHighlightTextFrame:");
  id v3 = objc_msgSend(*(id *)(a1 + 32), "p_newHighlightLayerForAnnotation:width:storage:text:range:interfaceStyle:maxLines:documentRoot:", objc_msgSend(*(id *)(a1 + 40), "annotation"), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(double *)(a1 + 96), objc_msgSend(v2, "numberOfLines"), objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "contentNode"), "documentRoot"));
  [(THNotesViewRenderedAnnotation *)v4 setEditingHighlightLayer:v3];

  +[CATransaction flush];
  [*(id *)(a1 + 40) setRenderedAnnotation:v4];
}

void sub_130954(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
}

void sub_130980(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  unint64_t v7 = *(void *)(v6 + 24);
  if (v7 < *(void *)(*(void *)(a1 + 32) + 104))
  {
    id v14 = objc_alloc_init((Class)AEHighlightLine);
    double v15 = a3 + 1.0;
    [v14 setFullLineRect:a2, v15, a4, a5];
    [v14 setCurrentLineRect:a2, v15, a4, a5];
    [v14 setUnderlinePosition:a6];
    [*(id *)(a1 + 40) addObject:v14];

    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
    unint64_t v7 = *(void *)(v6 + 24);
  }
  *(void *)(v6 + 24) = v7 + 1;
}

void sub_132428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_132440(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  uint64_t v21 = *(void *)(a2 + 256);
  long long v18 = *(_OWORD *)(a2 + 208);
  long long v19 = *(_OWORD *)(a2 + 224);
  long long v20 = *(_OWORD *)(a2 + 240);
  long long v16 = *(_OWORD *)(a2 + 176);
  long long v17 = *(_OWORD *)(a2 + 192);
  do
  {
    uint64_t v4 = v3;
    [*(id *)(a1 + 32) p_angleFromQuadrant:v3++ inRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), v10, v11, v12, v13, v14, v15];
    id result = [*(id *)(a1 + 32) p_angleFromQuadrant:v3 & 3 inRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
    if (v4 == 4)
    {
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 704);
      if (!v6) {
        continue;
      }
    }
    for (uint64_t i = 0; i != v6; ++i)
    {
      TSDMixAnglesInRadians();
      TSDDeltaFromAngle();
      if (*(unsigned char *)(a1 + 104))
      {
        TSDMultiplyPointScalar();
        TSDCenterOfRect();
        TSDGPUUpdateDataSetMetalPoint2DAtIndex();
        TSDGPUUpdateDataSetMetalPoint2DAtIndex();
        TSDGPUUpdateDataSetMetalFloatAtIndex();
        ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
        TSDGPUUpdateDataSetMetalPoint2DAtIndex();
        TSDGPUUpdateDataSetMetalPoint2DAtIndex();
        long long v12 = v18;
        long long v13 = v19;
        long long v14 = v20;
        uint64_t v15 = v21;
        long long v10 = v16;
        long long v11 = v17;
        id result = (id)TSDGPUUpdateDataSetMetalFloatAtIndex();
        ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      }
      else
      {
        TSDMultiplyPointScalar();
        char v8 = 1;
        do
        {
          char v9 = v8;
          TSDGPUUpdateDataSetMetalPoint2DAtIndex();
          TSDGPUUpdateDataSetMetalPoint2DAtIndex();
          long long v12 = v18;
          long long v13 = v19;
          long long v14 = v20;
          uint64_t v15 = v21;
          long long v10 = v16;
          long long v11 = v17;
          id result = (id)TSDGPUUpdateDataSetMetalFloatAtIndex();
          char v8 = 0;
          ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
        }
        while ((v9 & 1) != 0);
      }
    }
  }
  while (v3 != 5);
  return result;
}

void sub_1329C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1329E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  uint64_t v21 = *(void *)(a2 + 256);
  long long v18 = *(_OWORD *)(a2 + 208);
  long long v19 = *(_OWORD *)(a2 + 224);
  long long v20 = *(_OWORD *)(a2 + 240);
  long long v16 = *(_OWORD *)(a2 + 176);
  long long v17 = *(_OWORD *)(a2 + 192);
  do
  {
    uint64_t v4 = v3;
    [*(id *)(a1 + 32) p_angleFromQuadrant:v3++ inRect:*(double *)(a1 + 48) *(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72) v10 v11 v12 v13 v14 v15];
    id result = [*(id *)(a1 + 32) p_angleFromQuadrant:(v3 & 3) inRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
    if (v4 == 4)
    {
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 704);
      if (!v6) {
        continue;
      }
    }
    for (uint64_t i = 0; i != v6; ++i)
    {
      TSDMixAnglesInRadians();
      TSDDeltaFromAngle();
      TSDMultiplyPointScalar();
      char v8 = 1;
      do
      {
        char v9 = v8;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex();
        TSDGPUUpdateDataSetMetalPoint2DAtIndex();
        long long v12 = v18;
        long long v13 = v19;
        long long v14 = v20;
        uint64_t v15 = v21;
        long long v10 = v16;
        long long v11 = v17;
        id result = (id)TSDGPUUpdateDataSetMetalFloatAtIndex();
        char v8 = 0;
        ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      }
      while ((v9 & 1) != 0);
    }
  }
  while (v3 != 5);
  return result;
}

uint64_t sub_133B34(uint64_t result)
{
  switch(result)
  {
    case 11:
      id result = 12;
      break;
    case 12:
      id result = 11;
      break;
    case 13:
      id result = 14;
      break;
    case 14:
      id result = 13;
      break;
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
      return result;
    case 21:
      id result = 24;
      break;
    case 22:
      id result = 23;
      break;
    case 23:
      id result = 22;
      break;
    case 24:
      id result = 21;
      break;
    case 31:
      id result = 32;
      break;
    case 32:
      id result = 31;
      break;
    case 41:
      id result = 42;
      break;
    case 42:
      id result = 41;
      break;
    case 43:
      id result = 44;
      break;
    case 44:
      id result = 43;
      break;
    default:
      switch(result)
      {
        case 'o':
          id result = 112;
          break;
        case 'p':
          id result = 111;
          break;
        case 'r':
          id result = 115;
          break;
        case 's':
          id result = 114;
          break;
        case 'y':
          id result = 122;
          break;
        case 'z':
          id result = 121;
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

id sub_134E5C(uint64_t a1)
{
  return +[TSDBitmapImageProvider temporaryCGImageSourceForImageData:*(void *)(a1 + 32)];
}

NSArray *__cdecl sub_138EB0(id a1, NSArray *a2)
{
  return (NSArray *)&__NSArray0__struct;
}

id sub_139450(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_cleanupGlossaryPopover];
}

uint64_t sub_13A0D4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_13D8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_13D8D8(uint64_t a1, uint64_t a2)
{
}

void sub_13D8E8(uint64_t a1)
{
}

id sub_13D8F4(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setActivityController:0];
}

void sub_13DC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_13DC38(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setActivityController:0];
}

id sub_13DF08(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_deleteSelectedNotes];
}

void sub_13E640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_13E71C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_13E844(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dispatchQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_13E8C8;
  block[3] = &unk_456DE0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_sync(v2, block);
}

id sub_13E8C8(uint64_t a1)
{
  [*(id *)(a1 + 32) setReceivedPreRoll:1];
  id result = [*(id *)(a1 + 32) presentCompletionBlock];
  if (result)
  {
    (*((void (**)(void))[*(id *)(a1 + 32) presentCompletionBlock] + 2))();
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 setPresentCompletionBlock:0];
  }
  return result;
}

void sub_13EE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

id *sub_13EE70(id *result, uint64_t a2)
{
  if (*(unsigned char *)(*((void *)result[5] + 1) + 24))
  {
    if (*((unsigned char *)result + 64)) {
      return (id *)[result[4] bookViewWillAnimateRotationToSize:a2 withContext:*((double *)result + 6), *((double *)result + 7)];
    }
  }
  return result;
}

id sub_13EEA0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) && *(unsigned char *)(a1 + 64)) {
    [*(id *)(a1 + 32) bookViewDidAnimateRotationToSize:a2 withContext:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  }
  uint64_t v4 = *(void **)(a1 + 32);
  double v5 = *(double *)(a1 + 48);
  double v6 = *(double *)(a1 + 56);
  if (*(unsigned char *)(a1 + 64))
  {
    return [v4 bookViewDidRotateTransitionToSize:a2 withContext:v5 v6];
  }
  else
  {
    return [v4 bookViewDidTransitionToSize:a2 withContext:v5, v6];
  }
}

uint64_t sub_13FED4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_setMoviePlayerBackgroundColor:animated:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_curtainColor"), "UIColor"), 0);
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1400A8(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController", 0), "view"), "subviews");
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) setBackgroundColor:*(void *)(a1 + 40)];
        double v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"), "view"), "setBackgroundColor:", *(void *)(a1 + 40));
}

uint64_t sub_1403FC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_setMoviePlayerBackgroundColor:animated:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_curtainColor"), "UIColor"), 0);
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_140468(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_setMoviePlayerBackgroundColor:animated:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_curtainColor"), "UIColor"), 0);
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_1404D4(uint64_t a1)
{
  [+[BCAudioMuxingCoordinator sharedInstance] notifyPlaybackWillStart:*(void *)(a1 + 32)];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"), "setShowsPlaybackControls:", 1);
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"), "player"), "play");
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_14066C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsWhitePointAdaptivityStyleUpdate];
}

id sub_1406F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsWhitePointAdaptivityStyleUpdate];
}

id sub_142A84(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    double v4 = 0.0;
  }
  else
  {
    [v3 setHidden:0];
    id v3 = *(void **)(a1 + 32);
    double v4 = 1.0;
  }

  return [v3 setAlpha:v4];
}

id sub_142AD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHidden:*(unsigned __int8 *)(a1 + 40)];
}

id sub_143BD4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "contentContainerView"), "addSubview:", objc_msgSend(*(id *)(a1 + 32), "view"));
    int v2 = *(void **)(a1 + 32);
  }
  else
  {
    int v2 = 0;
  }
  objc_msgSend(objc_msgSend(v2, "view"), "setFrame:", *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  double v3 = *(double *)(a1 + 88);
  double v4 = *(double *)(a1 + 96);
  double v5 = *(double *)(a1 + 104);
  double v6 = *(double *)(a1 + 112);
  id v7 = [*(id *)(a1 + 48) view];

  return [v7 setFrame:v3, v4, v5, v6];
}

uint64_t sub_143C88(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "removeFromSuperview");
  [*(id *)(a1 + 32) removeFromParentViewController];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setFrame:", *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88));
  [*(id *)(a1 + 40) didMoveToParentViewController:*(void *)(a1 + 48)];
  *(unsigned char *)(*(void *)(a1 + 48) + 16) &= 0xFCu;
  [*(id *)(a1 + 48) didPresentViewController:*(void *)(a1 + 40)];
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    double v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1467D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePanelDescriptionExpanded];
}

int64_t sub_1471C8(id a1, id a2, id a3)
{
  id v5 = [a2 integerValue];
  if ((uint64_t)v5 > (uint64_t)[a3 integerValue]) {
    return 1;
  }
  id v7 = [a2 integerValue];
  if ((uint64_t)v7 >= (uint64_t)[a3 integerValue]) {
    return 0;
  }
  else {
    return -1;
  }
}

uint64_t sub_149064(uint64_t a1)
{
  if (objc_opt_respondsToSelector()) {
    [*(id *)(a1 + 32) expandableExpandedPresentationDidEnd];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    double v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_14959C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

id sub_1495C0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) && *(unsigned char *)(a1 + 72))
  {
    [*(id *)(a1 + 32) bookViewWillAnimateRotationToSize:a2 withContext:*(double *)(a1 + 56), *(double *)(a1 + 64)];
    double v3 = *(_OWORD **)(*(void *)(a1 + 48) + 8);
    v3[2] = v5;
    v3[3] = v6;
    void v3[4] = v7;
  }
  return [*(id *)(a1 + 32) p_updateScrollViewLayout];
}

id sub_149634(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) && *(unsigned char *)(a1 + 72))
  {
    double v4 = *(void **)(a1 + 32);
    long long v5 = *(_OWORD **)(*(void *)(a1 + 48) + 8);
    double v6 = *(double *)(a1 + 56);
    double v7 = *(double *)(a1 + 64);
    long long v8 = v5[3];
    v13[0] = v5[2];
    v13[1] = v8;
    v13[2] = v5[4];
    [v4 bookViewDidAnimateRotationToSize:a2 withContext:v13 transform:v6];
  }
  long long v9 = *(void **)(a1 + 32);
  double v10 = *(double *)(a1 + 56);
  double v11 = *(double *)(a1 + 64);
  if (*(unsigned char *)(a1 + 72)) {
    return [v9 bookViewDidRotateTransitionToSize:a2 withContext:v10, v11];
  }
  else {
    return [v9 bookViewDidTransitionToSize:a2 withContext:v10, v11];
  }
}

id sub_14B688(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsWhitePointAdaptivityStyleUpdate];
}

uint64_t sub_14C568(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_14D344(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

uint64_t sub_14D358(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 10) = 0;
  return result;
}

uint64_t sub_14E7C0(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (*(void *)(v3 + 80))
    {
      uint64_t result = (uint64_t)[*(id *)(v3 + 32) expandedPanel:0 willChangeToVisible:*(unsigned __int8 *)(a1 + 40)];
      uint64_t v3 = *(void *)(a1 + 32);
    }
    if (*(void *)(v3 + 88))
    {
      uint64_t result = (uint64_t)[*(id *)(v3 + 32) expandedPanel:1 willChangeToVisible:*(unsigned __int8 *)(a1 + 40)];
      uint64_t v3 = *(void *)(a1 + 32);
    }
    if (*(void *)(v3 + 96))
    {
      double v4 = *(void **)(v3 + 32);
      uint64_t v5 = *(unsigned __int8 *)(a1 + 40);
      return (uint64_t)[v4 expandedPanel:2 willChangeToVisible:v5];
    }
  }
  return result;
}

id sub_14E864(uint64_t a1)
{
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  --*(void *)(*(void *)(a1 + 32) + 72);
  int v2 = *(void **)(a1 + 32);
  if (!v2[9])
  {
    objc_msgSend(objc_msgSend(v2, "closeButton"), "setTsdAlpha:", *(double *)(a1 + 48));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "topPanel"), "view"), "setTsdAlpha:", *(double *)(a1 + 56));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bottomPanel"), "view"), "setTsdAlpha:", *(double *)(a1 + 64));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "controlPanel"), "view"), "setTsdAlpha:", *(double *)(a1 + 72));
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "setHidden:", *(double *)(a1 + 48) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "topPanel"), "view"), "setHidden:", *(double *)(a1 + 56) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bottomPanel"), "view"), "setHidden:", *(double *)(a1 + 64) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "controlPanel"), "view"), "setHidden:", *(double *)(a1 + 72) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "topPanel"), "view"), "alphaAnimationDidEnd");
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bottomPanel"), "view"), "alphaAnimationDidEnd");
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "controlPanel"), "view"), "alphaAnimationDidEnd");
  }
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }

  return +[CATransaction commit];
}

id sub_155D80(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePanelDescriptionExpanded];
}

id sub_1573C8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 320) setMinimizeInfoChange:0];
}

void sub_157F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

char *sub_157F3C(void *a1, void *a2)
{
  id v3 = [a2 layoutForInfo:a1[4]];
  objc_msgSend(objc_msgSend(v3, "geometry"), "size");
  *(void *)(*(void *)(a1[5] + 8) + 24) = v4;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v14 = 0u;
  id v5 = [v3 children];
  uint64_t result = (char *)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (result)
  {
    double v7 = result;
    uint64_t v8 = *(void *)v14;
    do
    {
      long long v9 = 0;
      do
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v5);
        }
        objc_opt_class();
        uint64_t v10 = (void *)TSUDynamicCast();
        if (!v10) {
          BCReportAssertionFailureWithMessage();
        }
        double v11 = *(double *)(*(void *)(a1[6] + 8) + 24);
        [v10 textWidth];
        if (v11 >= v12) {
          double v12 = v11;
        }
        *(double *)(*(void *)(a1[6] + 8) + 24) = v12;
        ++v9;
      }
      while (v7 != v9);
      uint64_t result = (char *)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
      double v7 = result;
    }
    while (result);
  }
  return result;
}

id sub_159014(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateWithDelegate];
}

uint64_t sub_15901C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_15A908(uint64_t a1)
{
  +[CATransaction begin];
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 64), "canvas"), "contentsScale");
  [*(id *)(a1 + 32) setRasterizationScale:];
  [*(id *)(a1 + 32) setShouldRasterize:*(unsigned __int8 *)(a1 + 48)];
  [*(id *)(a1 + 32) spi_setPreloadsCache:*(unsigned __int8 *)(a1 + 48)];
  +[CATransaction commit];

  return +[CATransaction flush];
}

id sub_15C190(uint64_t a1)
{
  +[CATransaction begin];
  +[CATransaction setValue:kCFBooleanTrue forKey:kCATransactionDisableActions];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_objectForLayer:key:", objc_msgSend(*(id *)(a1 + 32), "targetLayer"), @"opacity"), "floatValue");
  int v3 = v2;
  [*(id *)(a1 + 32) teardownTarget];
  id v4 = [*(id *)(a1 + 32) targetLayer];
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
  [*(id *)(a1 + 32) didAnimate];
  if (v4)
  {
    [v4 setHidden:0];
    LODWORD(v6) = v3;
    [v4 setOpacity:v6];
  }
  +[CATransaction commit];
  [*(id *)(a1 + 32) didAnimatePostCommit];
  id v7 = +[UIWindow keyWindow];

  return [v7 endDisablingInterfaceAutorotation];
}

id sub_160764(uint64_t a1)
{
  [*(id *)(a1 + 32) p_stop];
  objc_opt_class();
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieLayout"), "mediaListener");
  uint64_t v2 = TSUDynamicCast();
  id v3 = +[THWAVController sharedController];

  return [v3 transportControllerDidStopPlaying:v2];
}

uint64_t sub_1607D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_16090C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setSeeking:0];
}

id sub_160AC8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isPlaying];
  if (result)
  {
    [*(id *)(a1 + 32) stop];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieInfo"), "startTime");
    id v3 = *(void **)(a1 + 32);
    return [v3 setTimeToBeginPlaybackAt:];
  }
  return result;
}

id sub_16109C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isPlaying];
  if (result)
  {
    [*(id *)(a1 + 32) changeCurrentTimeTo:0.0];
    [*(id *)(a1 + 32) p_stop];
    objc_opt_class();
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieLayout"), "mediaListener");
    uint64_t v3 = TSUDynamicCast();
    id v4 = +[THWAVController sharedController];
    return [v4 transportControllerDidStartAutoplaying:v3];
  }
  return result;
}

uint64_t sub_161134(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_16241C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) p_largeThumbnail];
  if (v2)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1624AC;
    v3[3] = &unk_456E38;
    void v3[4] = *(void *)(a1 + 32);
    void v3[5] = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
  }
}

id sub_1624AC(id result)
{
  uint64_t v1 = *((void *)result + 4);
  if (*(_DWORD *)(v1 + 80) == 1)
  {
    id v2 = result;
    *(_DWORD *)(v1 + 80) = 2;
    [*(id *)(*((void *)result + 4) + 64) setContents:[*((id *)result + 5) CGImage]];
    LODWORD(v3) = 1.0;
    [*(id *)(v2[4] + 64) setOpacity:v3];
    LODWORD(v4) = 1.0;
    [*(id *)(v2[4] + 72) setOpacity:v4];
    [*(id *)(v2[4] + 64) setHidden:0];
    uint64_t v5 = *(void **)(v2[4] + 72);
    return [v5 setHidden:0];
  }
  return result;
}

void *sub_162760(void *result)
{
  uint64_t v1 = result[4];
  if (*(_DWORD *)(v1 + 80) == 3)
  {
    id v2 = result;
    *(_DWORD *)(v1 + 80) = 0;
    [*(id *)(result[4] + 64) setContents:0];
    [*(id *)(v2[4] + 64) setHidden:1];
    double v3 = *(void **)(v2[4] + 72);
    return [v3 setHidden:1];
  }
  return result;
}

id sub_162B80(uint64_t a1)
{
  if ([*(id *)(a1 + 32) parentRep])
  {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "frameInUnscaledCanvas");
    double x = v2;
    double y = v4;
  }
  else
  {
    double x = CGPointZero.x;
    double y = CGPointZero.y;
  }
  double v6 = *(void **)(a1 + 32);
  id v7 = (void *)v6[39];
  [v6 frameInUnscaledCanvas];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "viewScale");

  return [v7 setUnscaledFrame:v9 unscaledLayerOffset:v11 viewScale:v13 x:v15 y:x viewScale:v16];
}

id sub_163EA4(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = [*(id *)(a1 + 32) p_layerForState:*(void *)(*(void *)(a1 + 32) + 297) == a3 pageIndex:a3];

  return [a2 setLayer:v4];
}

id sub_1651C8(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsPressableAtPoint:0];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "pressableRep"), "setHandlingPress:", 0);
  double v2 = *(void **)(a1 + 32);

  return [v2 p_invokeAction];
}

id sub_165218(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsPressableAtPoint:0];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "pressableRep"), "setHandlingPress:", 0);
  double v2 = *(void **)(a1 + 32);

  return [v2 p_invokeAction];
}

id sub_1652D4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_165344;
  v3[3] = &unk_456DE0;
  void v3[4] = v1;
  return [v1 p_recoilAnimationWithCompletionBlock:v3];
}

id sub_165344(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_invokeAction];
}

id sub_16C86C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  else {
    double v1 = 1.0;
  }
  id v2 = [*(id *)(a1 + 32) movieUIView];

  return [v2 setAlpha:v1];
}

id sub_16C8B8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) movieUIView];

  return [v2 setHidden:v1];
}

id sub_16C9F8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) transportController];

  return [v1 play];
}

id sub_16CAA4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) transportController];

  return [v1 pause];
}

id sub_16CB78(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) movieIsPlaying];
  double v3 = *(void **)(a1 + 32);
  if (v2)
  {
    return [v3 pause];
  }
  else
  {
    return [v3 play];
  }
}

id sub_16D07C(id *a1)
{
  [a1[4] notifyPlaybackWillStart:a1[5]];
  id result = [a1[5] playingTransportController];
  if (result != a1[6])
  {
    id v3 = objc_msgSend(objc_msgSend(objc_msgSend(a1[5], "playingTransportController"), "movieLayout"), "info");
    if (v3 != objc_msgSend(objc_msgSend(a1[6], "movieLayout"), "info")) {
      objc_msgSend(objc_msgSend(a1[5], "playingTransportController"), "stop");
    }
    [a1[5] setPlayingTransportController:a1[6]];
    id v4 = objc_msgSend(objc_msgSend(a1[5], "autoplayingTransportControllers"), "allObjects");
    objc_msgSend(objc_msgSend(a1[5], "autoplayingTransportControllers"), "removeAllObjects");
    return [v4 makeObjectsPerformSelector:"stop"];
  }
  return result;
}

id sub_16D2B8(uint64_t a1)
{
  [*(id *)(a1 + 32) notifyPlaybackWillStart:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 40) autoplayingTransportControllers];
  uint64_t v3 = *(void *)(a1 + 48);

  return [v2 addObject:v3];
}

id sub_170948(uint64_t a1)
{
  [*(id *)(a1 + 32) pConfigureScrubberVisibility];
  id v2 = *(void **)(a1 + 32);

  return [v2 pConfigureHUDVisibility];
}

uint64_t sub_170984(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_173FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  TSDRectWithSize();

  return [v3 paintRect:a2];
}

id sub_174780(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2 != *(void **)(a1 + 40))
  {
    [*(id *)(a1 + 40) setCalloutsVisible:1 animated:0];
    id v2 = *(void **)(a1 + 32);
  }

  return [v2 setCalloutsVisible:1 animated:1];
}

id sub_17576C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePanelDescriptionExpanded];
}

BOOL sub_175CD8(id a1, TSDRep *a2)
{
  return [(TSDRep *)a2 conformsToProtocol:&OBJC_PROTOCOL___TSDGestureTarget];
}

uint64_t sub_177E84(uint64_t a1)
{
  [*(id *)(a1 + 32) p_adjustScrollViewContentInsets];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "trackingController"), "popDisableUpdates");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "trackingController"), "popDisableUpdates");
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "stageCanvasController"), "scrollContentICC"), "trackingController"), "popDisableUpdates");
  [*(id *)(a1 + 40) invalidateReps];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "invalidateReps");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "stageCanvasController"), "scrollContentICC"), "invalidateReps");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layout"), "sidebarLayout"), "clearPreviousCallout");
  if (*(void *)(a1 + 56)) {
    [*(id *)(a1 + 40) invalidateLayers];
  }
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "stageCanvasController"), "scrollContainerICC"), "invalidateLayers");
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1781A0(uint64_t a1)
{
  [*(id *)(a1 + 32) applyScrollingPolicy];
  id v2 = *(void **)(a1 + 32);

  return [v2 setUserInteractionEnabled:1];
}

id sub_17AF64(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) autosizedCanvasControllerDidLayout:];
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "layoutController"), "rectOfTopLevelLayouts");
  [*(id *)(*(void *)(a1 + 32) + 32) autosizedCanvasController:adjustedBoundsRectForTopLevelBoundsRect:];
  uint64_t v4 = *(void *)(a1 + 32);
  *(double *)(v4 + 48) = v2;
  *(double *)(v4 + 56) = v3;
  if (v2 <= 0.0) {
    double v5 = 1.0;
  }
  else {
    double v5 = v2;
  }
  if (v3 <= 0.0) {
    double v6 = 1.0;
  }
  else {
    double v6 = v3;
  }
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 24), "canvasLayer"), "setUnscaledSize:", v5, v6);
  id v7 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v7 autosizedCanvasControllerDidResize:];
}

void sub_17B474(id a1, THPageLayerViewProvider *a2)
{
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "removeAnimationForKey:", @"displacement");
  id v3 = [[a2 borderView] layer];

  [v3 removeAnimationForKey:@"displacement"];
}

void sub_17B4E4(id a1, THPageLayerViewProvider *a2)
{
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "removeAnimationForKey:", @"displacement");
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", @"displacement");
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "removeAnimationForKey:", @"opacity");
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", @"opacity");

  [(THPageLayerViewProvider *)a2 setVisible:1];
}

void sub_17B590(id a1, THPageLayerViewProvider *a2)
{
  id v3 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
  [(CABasicAnimation *)v3 setRemovedOnCompletion:0];
  [(CABasicAnimation *)v3 setDuration:0.1];
  [(CABasicAnimation *)v3 setBeginTime:0.0];
  [(CABasicAnimation *)v3 setBeginTimeMode:kCAAnimationRelative];
  [(CABasicAnimation *)v3 setFillMode:kCAFillModeForwards];
  [(CABasicAnimation *)v3 setToValue:+[NSNumber numberWithFloat:0.0]];
  [(CABasicAnimation *)v3 setFromValue:+[NSNumber numberWithFloat:0.0]];
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "addAnimation:forKey:", v3, @"opacity");
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "addAnimation:forKey:", v3, @"opacity");

  [(THPageLayerViewProvider *)a2 setVisible:0];
}

id sub_17B764(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(void *)(a1 + 40) == a3)
  {
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", @"opacity");
    BOOL v4 = 1;
  }
  else
  {
    double v6 = fmin(fmax(1.0 / (*(double *)(a1 + 48) - *(double *)(a1 + 56)) * (*(double *)(a1 + 64) - *(double *)(a1 + 56)), 0.0), 1.0);
    *(float *)&double v6 = v6;
    *(float *)&double v6 = fabsf(*(float *)&v6);
    [*(id *)(a1 + 32) _solveForInput:v6];
    float v8 = v7;
    double v9 = v7;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "setOpaque:", 0);
    double v10 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
    [(CABasicAnimation *)v10 setRemovedOnCompletion:0];
    [(CABasicAnimation *)v10 setDuration:*(double *)(a1 + 72)];
    [(CABasicAnimation *)v10 setBeginTime:0.0];
    [(CABasicAnimation *)v10 setBeginTimeMode:kCAAnimationRelative];
    [(CABasicAnimation *)v10 setFillMode:kCAFillModeBoth];
    *(float *)&double v11 = v8;
    [(CABasicAnimation *)v10 setToValue:+[NSNumber numberWithFloat:v11]];
    -[CABasicAnimation setFromValue:](v10, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", @"opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v10, @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v10, @"opacity");
    BOOL v4 = fabs(v9 + -1.0) < 0.00999999978;
  }

  return [a2 setVisible:v4];
}

id sub_17B9F8(uint64_t a1, void *a2, uint64_t a3)
{
  double v5 = 0.0;
  if (*(void *)(a1 + 40) != a3)
  {
    double v5 = *(double *)(a1 + 48);
    *(float *)&double v5 = v5;
  }
  *(float *)&double v5 = fabsf(*(float *)&v5);
  [*(id *)(a1 + 32) _solveForInput:v5];
  float v7 = 1.0 - v6;
  double v8 = (float)(1.0 - v6);
  double v9 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
  [(CABasicAnimation *)v9 setRemovedOnCompletion:0];
  [(CABasicAnimation *)v9 setDuration:*(double *)(a1 + 56)];
  [(CABasicAnimation *)v9 setBeginTime:*(double *)(a1 + 64)];
  [(CABasicAnimation *)v9 setBeginTimeMode:kCAAnimationRelative];
  [(CABasicAnimation *)v9 setFillMode:kCAFillModeBoth];
  *(float *)&double v10 = v7;
  [(CABasicAnimation *)v9 setToValue:+[NSNumber numberWithFloat:v10]];
  -[CABasicAnimation setFromValue:](v9, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", @"opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v9, @"opacity");
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v9, @"opacity");
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", @"displacement");
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", @"displacement");
  BOOL v11 = fabs(v8 + -1.0) < 0.00999999978;

  return [a2 setVisible:v11];
}

id sub_17BC54(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(void *)(a1 + 40) == a3)
  {
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", @"opacity");
    BOOL v4 = 1;
  }
  else
  {
    double v5 = fmin(fmax(1.0 / (*(double *)(a1 + 48) - *(double *)(a1 + 56)) * (*(double *)(a1 + 64) - *(double *)(a1 + 56)), 0.0), 1.0);
    *(float *)&double v5 = v5;
    *(float *)&double v5 = fabsf(*(float *)&v5);
    [*(id *)(a1 + 32) _solveForInput:v5];
    float v7 = v6;
    double v8 = v6;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "setOpaque:", 0);
    double v9 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
    [(CABasicAnimation *)v9 setRemovedOnCompletion:0];
    [(CABasicAnimation *)v9 setDuration:0.25];
    [(CABasicAnimation *)v9 setBeginTime:0.0];
    [(CABasicAnimation *)v9 setBeginTimeMode:kCAAnimationRelative];
    [(CABasicAnimation *)v9 setFillMode:kCAFillModeBoth];
    *(float *)&double v10 = v7;
    [(CABasicAnimation *)v9 setToValue:+[NSNumber numberWithFloat:v10]];
    *(float *)&double v11 = v7;
    [(CABasicAnimation *)v9 setFromValue:+[NSNumber numberWithFloat:v11]];
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v9, @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v9, @"opacity");
    BOOL v4 = fabs(v8 + -1.0) < 0.00999999978;
  }

  return [a2 setVisible:v4];
}

id sub_17BE90(uint64_t a1, void *a2, uint64_t a3)
{
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", @"displacement");
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", @"displacement");
  uint64_t v6 = *(void *)(a1 + 32);
  float v7 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
  [(CABasicAnimation *)v7 setRemovedOnCompletion:0];
  [(CABasicAnimation *)v7 setDuration:*(double *)(a1 + 40)];
  [(CABasicAnimation *)v7 setBeginTime:0.0];
  [(CABasicAnimation *)v7 setBeginTimeMode:kCAAnimationRelative];
  [(CABasicAnimation *)v7 setFillMode:kCAFillModeBoth];
  BOOL v8 = v6 == a3;
  BOOL v9 = v6 == a3;
  double v10 = 0.0;
  if (v8) {
    *(float *)&double v10 = 1.0;
  }
  [(CABasicAnimation *)v7 setToValue:+[NSNumber numberWithFloat:v10]];
  -[CABasicAnimation setFromValue:](v7, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", @"opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v7, @"opacity");
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v7, @"opacity");

  return [a2 setVisible:v9];
}

id sub_17C074(uint64_t a1, void *a2, uint64_t a3)
{
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", @"displacement");
  id result = [[[a2 borderView] layer] removeAnimationForKey:@"displacement"];
  if (*(void *)(a1 + 32) != a3)
  {
    float v7 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
    [(CABasicAnimation *)v7 setRemovedOnCompletion:0];
    [(CABasicAnimation *)v7 setDuration:*(double *)(a1 + 40)];
    [(CABasicAnimation *)v7 setBeginTime:0.0];
    [(CABasicAnimation *)v7 setBeginTimeMode:kCAAnimationRelative];
    [(CABasicAnimation *)v7 setFillMode:kCAFillModeBoth];
    LODWORD(v8) = 1.0;
    [(CABasicAnimation *)v7 setToValue:+[NSNumber numberWithFloat:v8]];
    -[CABasicAnimation setFromValue:](v7, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", @"opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v7, @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v7, @"opacity");
    return [a2 setVisible:0];
  }
  return result;
}

id sub_17C254(uint64_t a1, void *a2)
{
  BOOL v4 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
  [(CABasicAnimation *)v4 setRemovedOnCompletion:0];
  [(CABasicAnimation *)v4 setDuration:(double)*(unint64_t *)(a1 + 32)];
  [(CABasicAnimation *)v4 setBeginTime:0.0];
  [(CABasicAnimation *)v4 setBeginTimeMode:kCAAnimationRelative];
  [(CABasicAnimation *)v4 setFillMode:kCAFillModeForwards];
  [(CABasicAnimation *)v4 setToValue:+[NSNumber numberWithFloat:0.0]];
  -[CABasicAnimation setFromValue:](v4, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", @"opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v4, @"opacity");
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v4, @"opacity");

  return [a2 setVisible:0];
}

id sub_17C3E8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [[a2 view] layer];
  if (v5 == a3)
  {
    [v6 removeAnimationForKey:@"opacity"];
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", @"opacity");
  }
  else
  {
    [v6 setOpaque:0];
    float v7 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
    [(CABasicAnimation *)v7 setRemovedOnCompletion:0];
    [(CABasicAnimation *)v7 setDuration:0.1];
    [(CABasicAnimation *)v7 setBeginTime:0.0];
    [(CABasicAnimation *)v7 setBeginTimeMode:kCAAnimationRelative];
    [(CABasicAnimation *)v7 setFillMode:kCAFillModeBoth];
    [(CABasicAnimation *)v7 setToValue:+[NSNumber numberWithFloat:0.0]];
    -[CABasicAnimation setFromValue:](v7, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", @"opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v7, @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v7, @"opacity");
  }

  return [a2 setVisible:v5 == a3];
}

void sub_17C56C(id a1, THPageLayerViewProvider *a2, int64_t a3)
{
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view", a3), "layer"), "removeAnimationForKey:", @"opacity");
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", @"opacity");

  [(THPageLayerViewProvider *)a2 setVisible:1];
}

id sub_17C7D4(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 64))
  {
    id v6 = [a2 view];
    [a2 canvasBoundsFrame];
    objc_msgSend(objc_msgSend(a2, "view"), "frame");
    TSDRectWithOriginAndSize();
    [v6 setFrame:];
  }
  double v7 = (double)a3 - *(double *)(a1 + 40);
  double v8 = (double)(unint64_t)(*(void *)(a1 + 48) - 1);
  double v9 = v8 + 0.5;
  double v10 = 0.0;
  BOOL v11 = v7 < -0.5 || v9 < v7;
  double v12 = 0.0;
  if (v11)
  {
    double v12 = -1.0;
    if (v7 >= -0.5 || v7 <= -1.0)
    {
      if (v7 <= -1.0) {
        goto LABEL_22;
      }
      double v14 = v8 + 1.0;
      if (v9 >= v7 || v14 <= v7)
      {
        double v12 = 0.0;
        if (v9 <= v7) {
          double v12 = 1.0;
        }
        goto LABEL_22;
      }
      double v16 = v7 - v9;
    }
    else
    {
      double v16 = v7 + 0.5;
    }
    double v12 = v16 + v16;
  }
LABEL_22:
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "setOpaque:", 0);
  if (v12 > -1.0 && v12 < 1.0)
  {
    if (v12 >= 0.0)
    {
      double v10 = 1.0;
      if (v12 <= 0.0) {
        goto LABEL_31;
      }
    }
    else
    {
      double v12 = fabs(v12);
    }
    *(float *)&double v17 = v12;
    [*(id *)(a1 + 32) _solveForInput:v17];
    double v10 = 1.0 - v19 * *(double *)(a1 + 56);
  }
LABEL_31:
  double v20 = fabs(v10 + -1.0);
  if (v20 >= 0.00999999978)
  {
    uint64_t v21 = +[CABasicAnimation animationWithKeyPath:@"opacity"];
    [(CABasicAnimation *)v21 setRemovedOnCompletion:0];
    [(CABasicAnimation *)v21 setDuration:0.1];
    [(CABasicAnimation *)v21 setBeginTime:0.0];
    [(CABasicAnimation *)v21 setBeginTimeMode:kCAAnimationRelative];
    [(CABasicAnimation *)v21 setFillMode:kCAFillModeBoth];
    float v22 = v10;
    *(float *)&double v23 = v22;
    [(CABasicAnimation *)v21 setToValue:+[NSNumber numberWithFloat:v23]];
    *(float *)&double v24 = v22;
    [(CABasicAnimation *)v21 setFromValue:+[NSNumber numberWithFloat:v24]];
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v21, @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v21, @"opacity");
  }
  else
  {
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", @"opacity");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", @"opacity");
  }

  return [a2 setVisible:v20 < 0.00999999978];
}

THGuidedPanRectWell *sub_17CC1C(void *a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
  [a1 guidedPanTargetUnscaledRect];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  uint64_t v21 = -[THGuidedPanRectWell initWithUnscaledRect:wellRect:target:]([THGuidedPanRectWell alloc], "initWithUnscaledRect:wellRect:target:", a1, v13, v15, v17, v19, a3, a4, a5, a6);
  [(THGuidedPanRectWell *)v21 setSmoothWeight:0.1];
  v33.origin.double x = v14;
  v33.origin.double y = v16;
  v33.size.CGFloat width = v18;
  v33.size.CGFloat height = v20;
  double MidX = CGRectGetMidX(v33);
  CGFloat v23 = v14;
  CGFloat v24 = v16;
  CGFloat v25 = v18;
  CGFloat v26 = v20;
  if (a2) {
    double MaxY = CGRectGetMaxY(*(CGRect *)&v23);
  }
  else {
    double MaxY = CGRectGetMinY(*(CGRect *)&v23);
  }
  -[THGuidedPanRectWell setFocalPoint:](v21, "setFocalPoint:", MidX, MaxY);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_17D99C;
  v32[3] = &unk_45A318;
  *(double *)&v32[4] = a7;
  [(THGuidedPanRectWell *)v21 setWeightBlock:v32];
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_17DA14;
  v30[3] = &unk_45A340;
  v30[4] = v21;
  char v31 = a2;
  [(THGuidedPanRectWell *)v21 setRatingBlock:v30];
  return v21;
}

double sub_17D1A0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  [*(id *)(a1 + 32) unconsumedMovementWithMovement:*(void *)(a1 + 40) controller:a4 a5];
  TSDPointLength();
  double v7 = v6 / *(double *)(a1 + 48);
  double v8 = (1.0 - v7 + -1.0) * 3.14159265;
  BOOL v9 = v7 <= 1.0;
  double v10 = -3.14159265;
  if (v9) {
    double v10 = v8;
  }
  float v11 = v10;
  return (float)(cosf(v11) + 1.0) * 0.5;
}

uint64_t sub_17D238(uint64_t a1)
{
  [*(id *)(a1 + 32) currentBlendedWeight];
  if (v2 > 0.7)
  {
    TSDNormalizePoint();
    if (fabs(v3) >= 0.5) {
      return 5;
    }
  }
  [*(id *)(a1 + 32) currentBlendedWeight];
  if (v4 > 0.7) {
    return 3;
  }
  [*(id *)(a1 + 32) currentBlendedWeight];
  double v7 = v6;
  [*(id *)(a1 + 32) previousBlendedWeight];
  return v7 <= v8;
}

double sub_17D99C(uint64_t a1)
{
  TSDPointLength();
  double v3 = v2 / *(double *)(a1 + 32);
  double v4 = 1.0 - v3;
  BOOL v5 = v3 <= 1.0;
  double v6 = 0.0;
  if (v5) {
    double v6 = v4;
  }
  float v7 = (v6 * 0.7 + -1.0) * 3.14159265;
  return (float)(cosf(v7) + 1.0) * 0.5;
}

uint64_t sub_17DA14(uint64_t a1, double a2, double a3, double a4)
{
  TSDPointLength();
  double v7 = v6;
  TSDNormalizePoint();
  double v9 = v8;
  [*(id *)(a1 + 32) currentBlendedWeight];
  if (v10 > 0.25)
  {
    [*(id *)(a1 + 32) currentBlendedWeight];
    double v12 = v11;
    [*(id *)(a1 + 32) previousBlendedWeight];
    if (v12 > v13 * 0.9) {
      return 4;
    }
  }
  double v15 = fabs(v9);
  uint64_t result = 6;
  if (!*(unsigned char *)(a1 + 40) || v15 <= 0.5 || v7 <= 300.0 || a4 <= 0.0)
  {
    if (a4 < 0.0 && v7 > 300.0 && v15 > 0.5 && *(unsigned char *)(a1 + 40) == 0) {
      return 6;
    }
    else {
      return 0;
    }
  }
  return result;
}

TSDContentLocation *sub_17DCB0(uint64_t a1, double a2, double a3)
{
  *(void *)(*(void *)(a1 + 32) + 16) = 0;
  if (a2 != 0.0)
  {
    double v4 = a3 * 1000.0;
    uint64_t v5 = *(void *)(a1 + 32);
    if (*(unsigned char *)(v5 + 104))
    {
      [(id)v5 _getBouncingDecelerationOffset:v5 + 96 forTimeInterval:v5 + 24 lastUpdateOffset:v4 min:*(double *)(v5 + 96) max:*(double *)(v5 + 40) decelerationFactor:*(double *)(v5 + 56) decelerationLnFactor:*(double *)(a1 + 40) velocity:*(double *)(a1 + 48)];
    }
    else if (*(double *)(v5 + 24) != 0.0)
    {
      [(id)v5 _getStandardDecelerationOffset:v5 + 96 forTimeInterval:v5 + 24 min:v4 max:*(double *)(v5 + 40) decelerationFactor:*(double *)(v5 + 56) decelerationLnFactor:*(double *)(a1 + 40) velocity:*(double *)(a1 + 48)];
    }
  }
  double v6 = +[TSDContentLocation contentLocationWithUnscaledPoint:viewScale:](TSDContentLocation, "contentLocationWithUnscaledPoint:viewScale:", *(double *)(*(void *)(a1 + 32) + 88), *(double *)(*(void *)(a1 + 32) + 96), *(double *)(*(void *)(a1 + 32) + 8));
  TSDInterpolateFloats();
  *(void *)(*(void *)(a1 + 32) + 8) = v7;
  return v6;
}

BOOL sub_17DD80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(v1 + 24) * *(double *)(v1 + 24);
  if (v2 < 0.0001)
  {

    *(void *)(*(void *)(a1 + 32) + 112) = 0;
  }
  return v2 < 0.0001;
}

id sub_180390(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateWithDelegate];
}

uint64_t sub_180398(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_181B7C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, 1);
  }
  return result;
}

uint64_t sub_181B98(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, 2);
  }
  return result;
}

uint64_t sub_181BB4(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, 3);
  }
  return result;
}

id sub_181BD0(uint64_t a1)
{
  [*(id *)(a1 + 32) setLastTimeScore:[*(id *)(a1 + 40) score]];
  id result = [*(id *)(a1 + 32) firstTimeScore];
  if (!result)
  {
    id v3 = [*(id *)(a1 + 40) score];
    double v4 = *(void **)(a1 + 32);
    return [v4 setFirstTimeScore:v3];
  }
  return result;
}

void sub_184A74(id a1, id a2, THWScrollableCanvasController *a3, BOOL *a4)
{
}

id sub_185350(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 304) setMinimizeInfoChange:0];
}

id sub_186A94(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnswerState:*(void *)(a1 + 40)];
  double v2 = *(void **)(a1 + 32);

  return [v2 setUserHasCheckedAnswer:0];
}

id sub_186E1C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnswerState:*(void *)(a1 + 40)];
  double v2 = *(void **)(a1 + 32);

  return [v2 setUserHasCheckedAnswer:0];
}

id sub_18703C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnswerState:*(void *)(a1 + 40)];
  double v2 = *(void **)(a1 + 32);

  return [v2 setUserHasCheckedAnswer:0];
}

id sub_1874FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) reviewQuestionUpdateChoiceIndex:a2 withState:a3];
}

id sub_187968(uint64_t a1)
{
  return [*(id *)(a1 + 32) setUserHasCheckedAnswer:1];
}

id sub_187A50(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnswerState:0];
  [*(id *)(a1 + 32) setLastTimeScore:[NSDecimalNumber zero]];
  double v2 = *(void **)(a1 + 32);

  return [v2 setUserHasCheckedAnswer:0];
}

id sub_187BA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCurrentPage:*(void *)(a1 + 40)];
}

id sub_189F28(uint64_t a1)
{
  id result = *(id *)(a1 + 32);
  if (!*((unsigned char *)result + 8) && *(void *)(a1 + 40) == *((void *)result + 6)) {
    return [result p_autoplayStart];
  }
  return result;
}

id THCanvasCreate(void *a1, id *a2, void *a3)
{
  return THCanvasCreateWithClass(a1, a2, a3, 0, 0);
}

id THCanvasCreateWithClass(id result, id *a2, void *a3, void *a4, void *a5)
{
  if (!a2 || !a3) {
    return result;
  }
  double v6 = a5;
  uint64_t v7 = a4;
  id v9 = result;
  if (!a4)
  {
    uint64_t v7 = objc_opt_class();
    if (v6) {
      goto LABEL_5;
    }
LABEL_14:
    double v6 = objc_opt_class();
    goto LABEL_5;
  }
  if (!a5) {
    goto LABEL_14;
  }
LABEL_5:
  if (([v7 isSubclassOfClass:objc_opt_class()] & 1) == 0) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, id<TSDCanvasLayerHosting> *, Class, Class)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m") lineNumber:53 description:@"bogus ICC class"];
  }
  if (([v6 isSubclassOfClass:objc_opt_class()] & 1) == 0) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, id<TSDCanvasLayerHosting> *, Class, Class)"), file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m"), lineNumber:54, description:@"bogus CVC class"];
  }
  id v10 = *a2;
  if (!*a2)
  {
    id v10 = objc_alloc_init((Class)v7);
    [v10 setDelegate:v9];
    double v11 = [[THCanvasEditor alloc] initWithInteractiveCanvasController:v10];
    [v10 setCanvasEditor:v11];
  }
  id v12 = objc_alloc_init((Class)v6);
  [v10 setLayerHost:v12];
  id result = [v12 setInteractiveCanvasController:v10];
  *a2 = v10;
  *a3 = v12;
  return result;
}

id THCanvasAndScrollViewCreate(void *a1, id *a2, id *a3, void *a4)
{
  return THCanvasAndScrollViewCreateWithClass(a1, a2, a3, a4, 0, 0, 0);
}

id THCanvasAndScrollViewCreateWithClass(id result, id *a2, id *a3, void *a4, void *a5, void *a6, void *a7)
{
  if (a2 && a3 && a4)
  {
    THCanvasCreateWithClass(result, a2, a3, a5, a6);
    if (!a7) {
      a7 = objc_opt_class();
    }
    if (([a7 isSubclassOfClass:objc_opt_class()] & 1) == 0) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasAndScrollViewCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, id<TSDCanvasLayerHosting> *, TSKScrollView **, Class, Class, Class)"), file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m"), lineNumber:131, description:@"bogus scroll view class"];
    }
    id v11 = objc_alloc_init((Class)a7);
    objc_msgSend(v11, "addSubview:", objc_msgSend(*a3, "canvasView"));
    id result = [v11 setDelegate:*a2];
    *a4 = v11;
  }
  return result;
}

id THCanvasAndClippingLayerHostCreateWithClass(id result, id *a2, THWClippingLayerHost **a3, void *a4)
{
  if (a2 && a3)
  {
    uint64_t v5 = a4;
    id v7 = result;
    if (!a4) {
      uint64_t v5 = objc_opt_class();
    }
    if (([v5 isSubclassOfClass:objc_opt_class()] & 1) == 0) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasAndClippingLayerHostCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, THWClippingLayerHost **, Class)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m") lineNumber:96 description:@"bogus ICC class"];
    }
    id v8 = *a2;
    if (!*a2)
    {
      id v8 = objc_alloc_init((Class)v5);
      [v8 setDelegate:v7];
      id v9 = [[THCanvasEditor alloc] initWithInteractiveCanvasController:v8];
      [v8 setCanvasEditor:v9];
    }
    id v10 = objc_alloc_init(THWClippingLayerHost);
    [v8 setLayerHost:v10];
    id result = [(THWClippingLayerHost *)v10 setInteractiveCanvasController:v8];
    *a2 = v8;
    *a3 = v10;
  }
  return result;
}

uint64_t sub_18D138(uint64_t a1)
{
  [*(id *)(a1 + 32) handler];
  if (objc_opt_respondsToSelector()) {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "handler"), "freeTransformPostAnimationDidCancelWithRep:expandableRep:", objc_msgSend(*(id *)(a1 + 32), "rep"), objc_msgSend(*(id *)(a1 + 32), "rep"));
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1902E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateWithDelegate];
}

uint64_t sub_1902E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_191F90(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

id sub_1940CC(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "showRep"), "playPreparedShow");
  id v2 = [*(id *)(a1 + 32) layout];

  return [v2 hidePlayButton];
}

id sub_194190(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "showRep"), "stopShow");
  id v2 = [*(id *)(a1 + 32) layout];

  return [v2 showPlayButton];
}

id sub_1946DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePanelDescriptionExpanded];
}

void sub_19BB78(id a1)
{
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  qword_573308 = (uint64_t)CGBitmapContextCreate(0, 1uLL, 1uLL, 8uLL, 4uLL, DeviceRGB, 5u);

  CGColorSpaceRelease(DeviceRGB);
}

id sub_1A06B0(uint64_t a1)
{
  if ([*(id *)(a1 + 40) pressableHandler]) {
    id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "pressableHandler"), "widgetInteractionEnabled");
  }
  else {
    id v2 = &dword_0 + 1;
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 setUserInteractionEnabled:v2];
}

uint64_t sub_1A0708(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

CFStringRef THUniqueIdForPath(void *a1)
{
  id v2 = objc_alloc_init((Class)NSFileManager);
  char v29 = 0;
  if ([v2 fileExistsAtPath:a1 isDirectory:&v29])
  {
    if (v29)
    {
      id v3 = [a1 stringByAppendingPathComponent:@"OPS"];
      unsigned __int8 v4 = [v2 fileExistsAtPath:a1 isDirectory:&v29];
      if ((v4 & (v29 != 0)) != 0) {
        id v5 = v3;
      }
      else {
        id v5 = a1;
      }
      id v23 = v2;
      id v6 = [v2 enumeratorAtPath:v5];
      memset(&c, 0, sizeof(c));
      CC_MD5_Init(&c);
      long long v24 = 0u;
      long long v25 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      id v7 = [v6 countByEnumeratingWithState:&v24 objects:v33 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v25;
        do
        {
          for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v25 != v9) {
              objc_enumerationMutation(v6);
            }
            id v11 = (const char *)[*(id *)(*((void *)&v24 + 1) + 8 * i) UTF8String];
            CC_LONG v12 = strlen(v11);
            CC_MD5_Update(&c, v11, v12);
            id v13 = [v6 fileAttributes];
            NSFileAttributeType v14 = (NSFileAttributeType)[v13 valueForKey:NSFileType];
            if (v14 == NSFileTypeRegular)
            {
              id v15 = [v13 valueForKey:NSFileSize];
              *(_DWORD *)data = 0;
              *(_DWORD *)data = [v15 unsignedIntValue];
              CC_MD5_Update(&c, data, 4u);
              id v16 = [v13 valueForKey:NSFileModificationDate];
              if (v16)
              {
                *(void *)bytes = 0;
                [v16 timeIntervalSinceReferenceDate];
                *(void *)bytes = v17;
                CC_MD5_Update(&c, bytes, 8u);
              }
            }
            else if ([(NSString *)v14 isEqualToString:NSFileTypeDirectory])
            {
              [v6 skipDescendents];
            }
          }
          id v8 = [v6 countByEnumeratingWithState:&v24 objects:v33 count:16];
        }
        while (v8);
      }
      CC_MD5_Final(data, &c);
      uint64_t v18 = 0;
      char v32 = 0;
      *(_OWORD *)bytes = 0u;
      long long v31 = 0u;
      double v19 = &bytes[1];
      do
      {
        unint64_t v20 = data[v18];
        *(v19 - 1) = a0123456789abcd[v20 >> 4];
        *double v19 = a0123456789abcd[v20 & 0xF];
        v19 += 2;
        ++v18;
      }
      while (v18 != 16);
      CFStringRef v21 = (id)CFStringCreateWithBytes(0, bytes, 32, 0x600u, 0);
      id v2 = v23;
    }
    else
    {
      CFStringRef v21 = (const __CFString *)+[NSString md5StringWithContentsOfFile:a1];
    }
  }
  else
  {
    CFStringRef v21 = 0;
  }

  return v21;
}

uint64_t THIsApplePubAtPath(void *a1)
{
  id v2 = +[NSFileManager defaultManager];
  char v16 = 0;
  unsigned int v3 = [(NSFileManager *)v2 fileExistsAtPath:a1 isDirectory:&v16];
  BOOL v4 = 0;
  BOOL v5 = 0;
  if (v3)
  {
    if (v16)
    {
      id v6 = [a1 stringByAppendingPathComponent:@"mimetype"];
      char v15 = 0;
      unsigned int v7 = [(NSFileManager *)v2 fileExistsAtPath:v6 isDirectory:&v15];
      BOOL v4 = 0;
      BOOL v5 = 0;
      if (v7) {
        BOOL v8 = v15 == 0;
      }
      else {
        BOOL v8 = 0;
      }
      if (v8)
      {
        uint64_t v9 = [(NSFileManager *)v2 attributesOfItemAtPath:v6 error:0];
        if (v9 && [(NSDictionary *)v9 fileSize] <= 0x3FF)
        {
          uint64_t v14 = 0;
          uint64_t v10 = +[NSString stringWithContentsOfFile:v6 usedEncoding:&v14 error:0];
          id v11 = [(NSString *)v10 rangeOfString:@"ibooks" options:1];
          BOOL v5 = v11 != (id)0x7FFFFFFFFFFFFFFFLL;
          BOOL v4 = v11 == (id)0x7FFFFFFFFFFFFFFFLL
            && [(NSString *)v10 rangeOfString:@"epub" options:1] != (id)0x7FFFFFFFFFFFFFFFLL;
        }
        else
        {
          BOOL v4 = 0;
          BOOL v5 = 0;
        }
      }
    }
    else
    {
      id v12 = [a1 pathExtension];
      if ([v12 caseInsensitiveCompare:@"ibooks"])
      {
        BOOL v5 = 0;
        BOOL v4 = [v12 caseInsensitiveCompare:@"epub"] == 0;
      }
      else
      {
        BOOL v4 = 0;
        BOOL v5 = 1;
      }
    }
  }
  return v4 | v5;
}

id sub_1A1E28(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 281) = *(unsigned char *)(a1 + 40);
  id result = [*(id *)(a1 + 32) hasBeenRemoved];
  if ((result & 1) == 0)
  {
    unsigned int v3 = *(void **)(a1 + 32);
    return [v3 p_updateWantsSpinner];
  }
  return result;
}

id sub_1A54E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateWithDelegate];
}

uint64_t sub_1A54EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A788C()
{
  return TSDGPUUpdateDataSetMetalPoint2DAtIndex();
}

void sub_1A7F2C(id a1)
{
  uint64_t v1 = objc_alloc_init(THApplicationDelegate);

  +[TSKApplicationDelegate setSurrogateDelegate:v1];
}

id sub_1A8268(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(-[NSArray objectAtIndex:](NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, 1uLL, 1), "objectAtIndex:", 0), "stringByAppendingPathComponent:", @"Documents"), "stringByAppendingPathComponent:", objc_msgSend(*(id *)(a1 + 32), "assetID"));
  id result = (id)[+[NSFileManager defaultManager] fileExistsAtPath:v2];
  if (result)
  {
    uint64_t v7 = 0;
    id result = (id)[+[NSFileManager defaultManager] moveItemAtPath:v2 toPath:*(void *)(a1 + 40) error:&v7];
    if ((result & 1) == 0)
    {
      id v4 = +[TSUAssertionHandler currentHandler];
      BOOL v5 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[THApplicationDelegate p_upgradeContextDirectoryForAsset:newPath:]_block_invoke");
      id v6 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THApplicationDelegate.m"];
      return [v4 handleFailureInFunction:v5, v6, 129, @"failed to move old context directory to new path with error: %@", v7 file lineNumber description];
    }
  }
  return result;
}

void sub_1A84E0(id a1)
{
  qword_573328 = [(uint64_t)[objc_alloc((Class)NSSet) initWithObjects:@"http", @"https", @"mailto", @"urn", @"ibooks", 0]];
}

void sub_1A858C(id a1)
{
  qword_573338 = (uint64_t)[objc_alloc((Class)NSSet) initWithObjects:@"itms", @"itmss", @"itms-books", @"itms-bookss", @"itms-itunesu", 0];
}

void sub_1A8774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1A8960(id result, int a2)
{
  if (a2)
  {
    uint64_t v2 = *((void *)result + 5);
    uint64_t v3 = *((void *)result + 4);
    v4.receiver = (id)*((void *)result + 6);
    v4.super_class = (Class)THApplicationDelegate;
    return [super openURL:v3 sourceDocumentRoot:v2];
  }
  return result;
}

void sub_1A89EC(id a1)
{
  id v1 = [[NSURL supportediBooksURLSchemes] mutableCopy];
  uint64_t v2 = +[NSSet setWithArray:&off_499AE8];
  [v1 unionSet:[NSSet setWithArray:&off_499B00]];
  [v1 minusSet:v2];
  qword_573348 = (uint64_t)v1;
}

void RandGenerator::RandGenerator(RandGenerator *this)
{
}

{
  SP_InitRand(&this->var0.var0);
}

void RandGenerator::randomDouble(RandGenerator *this)
{
  for (double i = SP_RandDouble(&this->var0.var0); i >= 1.0; double i = SP_RandDouble(&this->var0.var0))
    ;
}

void RandGenerator::randWithMinMax(RandGenerator *this, double a2, double a3)
{
  if (a2 <= a3) {
    RandGenerator::randomDouble(this);
  }
}

void sub_1AC290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1AC3A8()
{
}

void sub_1AC494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1AC5A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1AC6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1ADB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1ADB54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1ADB64(uint64_t a1)
{
}

id sub_1ADB6C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:a2];
}

id sub_1AEA7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_exposeWebView];
}

id sub_1AEF04(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_exposeWebView];
}

uint64_t sub_1AF40C(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) p_cacheLoadExternalContentApproval:a2];
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_1AF5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AF5C0(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

uint64_t sub_1AF5D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1B02F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePanelDescriptionExpanded];
}

id sub_1B0D1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_exposeWebView];
}

id sub_1B0E28(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_autoplayIfDesired];
}

id sub_1B0EB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_pauseOnCanvas];
}

id sub_1B0F38(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_pauseOnCanvas];
}

void sub_1B14D4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) info];
  uint64_t v3 = [v2 autoplayConfig];
  unsigned int v4 = [v3 enabled];
  BOOL v5 = @"manual.";
  if (v4) {
    BOOL v5 = @"autoplay.";
  }
  id v6 = v5;

  uint64_t v7 = [*(id *)(a1 + 32) info];
  BOOL v8 = [v7 bookID];
  id v19 = [(__CFString *)v6 stringByAppendingString:v8];

  id v9 = objc_alloc_init((Class)NSURLComponents);
  [v9 setScheme:@"x-ibooks-th"];
  [v9 setHost:v19];
  uint64_t v10 = [*(id *)(a1 + 40) path];
  id v11 = [*(id *)(a1 + 32) info];
  id v12 = [v11 bookBundleURL];
  id v13 = [v12 path];
  uint64_t v14 = [v10 im_stringWithPathRelativeTo:v13 allowBacktracking:0];

  if (([v14 hasPrefix:@"/"] & 1) == 0)
  {
    uint64_t v15 = [@"/" stringByAppendingString:v14];

    uint64_t v14 = (void *)v15;
  }
  [v9 setPath:v14];
  char v16 = [v9 URL];
  uint64_t v17 = +[NSHTTPCookieStorage sharedHTTPCookieStorage];
  [v17 setCookieAcceptPolicy:0];

  uint64_t v18 = [*(id *)(a1 + 32) webView];
  [v18 loadURL:v16];
}

id sub_1B1868(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id result = *(id *)(v2 + 336);
  if (result)
  {
    id result = [result removeFromSuperlayer];
    uint64_t v2 = *(void *)(a1 + 32);
  }
  *(unsigned char *)(v2 + 282) = 1;
  return result;
}

void sub_1B1934(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 283) = 1;
  uint64_t v2 = [*(id *)(a1 + 32) layout];
  [v2 hidePlayButton];

  uint64_t v3 = *(id **)(a1 + 32);
  if (v3[43])
  {
    [v3[43] removeFromSuperlayer];
    uint64_t v4 = *(void *)(a1 + 32);
    BOOL v5 = *(void **)(v4 + 344);
    *(void *)(v4 + 344) = 0;

    uint64_t v3 = *(id **)(a1 + 32);
  }
  id v6 = [v3 interactiveCanvasController];
  [v6 layoutInvalidated];
}

id sub_1B43BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*(id *)(a1 + 32) p_filterAnimation:a2 forLayer:a3 key:a4 forPlacardRep:0];
}

id sub_1B4D80(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1B4DF0;
  v3[3] = &unk_456DE0;
  void v3[4] = v1;
  return [v1 p_addDropAnimationWithCompletion:v3];
}

id sub_1B4DF0(uint64_t a1)
{
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 288), "layer"), "removeAllAnimations");
  [*(id *)(*(void *)(a1 + 32) + 296) resumeLayerUpdatesAndLayoutImmediately];
  [*(id *)(*(void *)(a1 + 32) + 288) teardown];

  *(void *)(*(void *)(a1 + 32) + 288) = 0;
  *(void *)(*(void *)(a1 + 32) + 296) = 0;

  return +[CATransaction commit];
}

id sub_1B559C(uint64_t a1)
{
  [*(id *)(a1 + 32) beginAnimations:@"scale" context:0];
  [*(id *)(a1 + 32) setAnimationDuration:0.15];
  CGAffineTransformMakeScale(&v5, 1.1, 1.1);
  uint64_t v2 = *(void **)(a1 + 40);
  CGAffineTransform v4 = v5;
  [v2 setAffineTransform:&v4];
  return [*(id *)(a1 + 32) commitAnimations];
}

id sub_1B5C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*(id *)(a1 + 32) p_filterAnimation:a2 forLayer:a3 key:a4 forPlacardRep:*(void *)(a1 + 40)];
}

id sub_1B9ACC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) layer];

  return [v1 setMasksToBounds:0];
}

id sub_1BB074(uint64_t a1)
{
  return [*(id *)(a1 + 32) shouldStopLoading];
}

uint64_t sub_1BB2CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1BB3D0(uint64_t a1)
{
  [*(id *)(a1 + 32) setOpacity:0.0];
  [*(id *)(a1 + 32) setHidden:1];
  [*(id *)(a1 + 40) p_setupGestureRecognizers];
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "sceneView"), "layer");
  LODWORD(v3) = 1.0;
  [v2 setOpacity:v3];
  CGAffineTransform v4 = *(void **)(a1 + 40);

  return [v4 resumeIdleAnimationIfNecessary];
}

id sub_1BB718(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1BB78C;
  v3[3] = &unk_456DE0;
  id v1 = *(void **)(a1 + 32);
  void v3[4] = *(void *)(a1 + 40);
  return [v1 performRead:v3];
}

void sub_1BB78C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) sceneInfo];
  if (v2) {
    id v2 = [*(id *)(a1 + 32) p_loadSceneFromURL:[v2 sourceURL]];
  }
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1BB830;
  v3[3] = &unk_456E38;
  void v3[4] = *(void *)(a1 + 32);
  void v3[5] = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_1BB830(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsLoading:0];
  [*(id *)(a1 + 32) setIsLoaded:1];
  [*(id *)(a1 + 32) setScene:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 32) delegate];
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 sceneDidLoadForSceneController:v3];
}

void sub_1BBD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1BBD5C(uint64_t a1, uint64_t a2)
{
}

void sub_1BBD6C(uint64_t a1)
{
}

id sub_1BBD78(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = a3;
  id result = [*(id *)(a1 + 32) shouldStopLoading];
  *a4 = (_BYTE)result;
  return result;
}

void sub_1BC8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1BC8D4(uint64_t result, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

void sub_1BC9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC9C4(uint64_t a1, uint64_t a2)
{
}

void sub_1BC9D4(uint64_t a1)
{
}

id sub_1BC9E0(uint64_t a1, uint64_t a2, void *a3)
{
  id result = objc_msgSend(a3, "pageNumberStringForAbsolutePageIndex:presentationType:", a2, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "presentationType"));
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_1BEAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1BEAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "documentNavigator:willNavigateToAbsolutePageIndex:inContentNode:", *(void *)(a1 + 32), a2, a3);
  unsigned int v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "isCorrupt");
  BOOL v8 = *(void **)(a1 + 32);
  if (v7)
  {
    id v9 = [v8 delegate];
    uint64_t v10 = *(void *)(a1 + 32);
    return [v9 documentNavigatorBookIsCorrupt:v10];
  }
  else
  {
    id result = objc_msgSend(objc_msgSend(v8, "documentLinkResolver"), "anchorFromCustomLink:presentationType:", *(void *)(a1 + 40), objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "presentationType"));
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
    if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
    {
      id result = +[THContentLinkResolver navigableAnchorFromLink:withContentNode:presentationType:](THContentLinkResolver, "navigableAnchorFromLink:withContentNode:presentationType:", a4, a3, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "presentationType"));
      *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
    }
  }
  return result;
}

void sub_1BF380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

id sub_1BF3A0(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "rectForBodyAnchor:", *(void *)(a1 + 40));
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  id v10 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "absolutePageIndexForBodyStorageAnchor:", *(void *)(a1 + 40));
  id v11 = [*(id *)(a1 + 32) delegate];
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 48);

  return [v11 documentNavigator:v12 scrollToAbsolutePageIndex:v10 specificUnscaledCanvasRect:0 animated:v13 willPulse:v3 v5 v7 v9];
}

id sub_1BF43C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id result = [a2 drawable];
  if (result == *(id *)(a1 + 32))
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a4;
    *a5 = 1;
  }
  return result;
}

id sub_1BF494(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) absolutePageIndex];
  uint64_t v5 = *(unsigned __int8 *)(a1 + 80);
  double v6 = *(double *)(a1 + 48);
  double v7 = *(double *)(a1 + 56);
  double v8 = *(double *)(a1 + 64);
  double v9 = *(double *)(a1 + 72);

  return [v2 documentNavigator:v3 scrollToAbsolutePageIndex:v4 specificUnscaledCanvasRect:v5 animated:v6 willPulse:v7];
}

id sub_1BF4FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_scrollToAbsolutePageIndex:*(void *)(a1 + 40) animated:1];
}

id sub_1BF5C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setVisibleAbsolutePhysicalPageIndex:*(void *)(a1 + 40)];
}

id sub_1BF75C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"p_pulseStorageAnchor:" withObject:*(void *)(a1 + 40) afterDelay:0.0];
}

void sub_1BF944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1BF95C(void *a1)
{
  id v2 = [*(id *)(*(void *)(a1[6] + 8) + 40) delegate];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[8];

  return [v2 documentNavigator:v3 editAnnotation:v4 noteSelectionRange:v5, v6];
}

void sub_1BFE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1BFE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  objc_opt_class();
  double v7 = (void *)TSUDynamicCast();
  objc_opt_class();
  [v7 drawable];
  id result = (id)TSUDynamicCast();
  if (result)
  {
    id result = [result widgetInfo];
    if (result == *(id *)(a1 + 32))
    {
      id result = [v7 findCharIndex];
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      *(void *)(v9 + 32) = result;
      *(void *)(v9 + 40) = 1;
      *a5 = 1;
    }
  }
  return result;
}

id sub_1C0730(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsScrollingAcrossSections:0];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 setVisibleAbsolutePhysicalPageIndex:v3 animated:0];
}

id sub_1C0854(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsScrollingAcrossSections:0];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 setVisibleAbsolutePhysicalPageIndex:v3 animated:0];
}

double SP_Init(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 136) = 20;
  return result;
}

uint64_t SP_InitSeed(CC_SHA1_CTX *c, void *__src, CC_LONG a3)
{
  if (a3 >= 0x14) {
    size_t v6 = 20;
  }
  else {
    size_t v6 = a3;
  }
  if (v6) {
    memmove(&c[1], __src, v6);
  }
  if (a3 >= 0x14)
  {
    CC_SHA1_Init(c);
  }
  else
  {
    bzero((char *)&c[1] + v6, (20 - v6));
    CC_SHA1_Init(c);
    if (!a3) {
      goto LABEL_11;
    }
  }
  CC_SHA1_Update(c, __src, a3);
LABEL_11:
  uint64_t result = CC_SHA1_Final((unsigned __int8 *)&c[1].Nl, c);
  c[1].data[3] = 0;
  return result;
}

uint64_t SP_InitRand(CC_SHA1_CTX *a1)
{
  int v2 = open("/dev/random", 0);
  read(v2, __src, 0x14uLL);
  close(v2);
  return SP_InitSeed(a1, __src, 0x14u);
}

CC_SHA1_CTX *SP_Random(CC_SHA1_CTX *c, char *__dst, unsigned int a3)
{
  if (a3)
  {
    unsigned int v3 = a3;
    uint64_t v5 = c;
    p_Nl = &c[1].Nl;
    double v7 = c + 1;
    for (CC_LONG i = c[1].data[3]; ; CC_LONG i = 0)
    {
      if (i != 20)
      {
        if (v3 >= 20 - i) {
          size_t v9 = 20 - i;
        }
        else {
          size_t v9 = v3;
        }
        CC_MD5_CTX c = (CC_SHA1_CTX *)memmove(__dst, (char *)p_Nl + i, v9);
        v5[1].data[3] += v9;
        v3 -= v9;
        if (!v3) {
          return c;
        }
        __dst += v9;
      }
      CC_SHA1_Init(v5);
      CC_SHA1_Update(v5, p_Nl, 0x14u);
      CC_SHA1_Update(v5, v7, 0x14u);
      CC_SHA1_Final((unsigned __int8 *)p_Nl, v5);
      v5[1].data[3] = 0;
    }
  }
  return c;
}

uint64_t SP_RandInt64(CC_SHA1_CTX *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3 - a2;
  if (a3 != a2)
  {
    unint64_t __dst = 0;
    SP_Random(a1, (char *)&__dst, 8u);
    v3 += __dst % (v4 + 1);
  }
  return v3;
}

uint64_t SP_RandInt32(CC_SHA1_CTX *a1)
{
  unsigned int __dst = 0;
  SP_Random(a1, (char *)&__dst, 4u);
  return __dst;
}

uint64_t SP_RandSize(CC_SHA1_CTX *a1)
{
  uint64_t __dst = 0;
  SP_Random(a1, (char *)&__dst, 8u);
  return __dst;
}

double SP_RandDouble(CC_SHA1_CTX *a1)
{
  unint64_t __dst = 0;
  SP_Random(a1, (char *)&__dst, 8u);
  return (double)__dst * 5.42101086e-20;
}

id sub_1C26F0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "stylesheet");
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 addStyle:v3];
}

id sub_1C2730(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "stylesheet");
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 addStyle:v3];
}

uint64_t _THSearchModelForString(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6 = [objc_alloc((Class)TSKDocumentModelEnumerator) initWithRootModelObject:a1 filter:0];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v25;
    uint64_t v15 = v19;
    while (2)
    {
      for (CC_LONG i = 0; i != v7; CC_LONG i = (char *)i + 1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(v6);
        }
        if (*(void *)(*((void *)&v24 + 1) + 8 * i) != a1 || (a4 & 1) == 0)
        {
          id v10 = (void *)TSUProtocolCast();
          if (objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector())
          {
            uint64_t v20 = 0;
            CFStringRef v21 = &v20;
            uint64_t v22 = 0x2020000000;
            char v23 = 0;
            v18[0] = _NSConcreteStackBlock;
            v18[1] = 3221225472;
            v19[0] = sub_1C2C98;
            v19[1] = &unk_45AAA8;
            v19[2] = &v20;
            id v11 = [v10 searchForString:a2 options:a3 onHit:v18];
            if (v11)
            {
              while (!*((unsigned char *)v21 + 24) && ([v11 isComplete] & 1) == 0)
                [v10 continueSearch:v11];
            }
            int v12 = *((unsigned __int8 *)v21 + 24);
            _Block_object_dispose(&v20, 8);
            if (v12)
            {
              uint64_t v13 = 1;
              goto LABEL_19;
            }
          }
        }
      }
      id v7 = [v6 countByEnumeratingWithState:&v24 objects:v28 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
  uint64_t v13 = 0;
LABEL_19:

  return v13;
}

void sub_1C2C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1C2C98(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

uint64_t THSearchModelForString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _THSearchModelForString(a1, a2, a3, 0);
}

id THSearchModelsForString(void *a1, uint64_t a2, uint64_t a3)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id result = [a1 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (result)
  {
    id v7 = result;
    uint64_t v8 = *(void *)v11;
    while (2)
    {
      size_t v9 = 0;
      do
      {
        if (*(void *)v11 != v8) {
          objc_enumerationMutation(a1);
        }
        if (_THSearchModelForString(*(void *)(*((void *)&v10 + 1) + 8 * (void)v9), a2, a3, 0)) {
          return &dword_0 + 1;
        }
        size_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id result = [a1 countByEnumeratingWithState:&v10 objects:v14 count:16];
      id v7 = result;
      if (result) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t THSearchModelChildrenForString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _THSearchModelForString(a1, a2, a3, 1);
}

id sub_1C30B8(uint64_t a1, void *a2)
{
  [a2 setValue:*(void *)(a1 + 32) forProperty:16];
  uint64_t v4 = *(void *)(a1 + 40);

  return [a2 setValue:v4 forProperty:18];
}

id sub_1C3108(uint64_t a1, void *a2)
{
  [a2 setValue:*(void *)(a1 + 32) forProperty:16];
  uint64_t v4 = *(void *)(a1 + 40);

  return [a2 setValue:v4 forProperty:18];
}

id sub_1C331C(uint64_t a1, void *a2)
{
  [a2 setValue:*(void *)(a1 + 32) forProperty:16];
  [a2 setCGFloatValue:17 forProperty:*(double *)(a1 + 48)];
  uint64_t v4 = *(void *)(a1 + 40);

  return [a2 setValue:v4 forProperty:18];
}

id sub_1C337C(uint64_t a1, void *a2)
{
  [a2 setValue:*(void *)(a1 + 32) forProperty:16];
  [a2 setCGFloatValue:17 forProperty:*(double *)(a1 + 48)];
  uint64_t v4 = *(void *)(a1 + 40);

  return [a2 setValue:v4 forProperty:18];
}

id sub_1C35D4(uint64_t a1, void *a2)
{
  [a2 setValue:*(void *)(a1 + 32) forProperty:16];
  [a2 setCGFloatValue:17 forProperty:*(double *)(a1 + 56)];
  id result = [a2 setValue:*(void *)(a1 + 40) forProperty:18];
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v5 = *(void **)(a1 + 48);
    return [v5 p_removeBackgroundFillFromStyle:a2];
  }
  return result;
}

id sub_1C3654(uint64_t a1, void *a2)
{
  [a2 setValue:*(void *)(a1 + 32) forProperty:16];
  [a2 setCGFloatValue:17 forProperty:*(double *)(a1 + 56)];
  [a2 setValue:*(void *)(a1 + 40) forProperty:18];
  id result = [a2 setIntValue:*(unsigned int *)(a1 + 64) forProperty:86];
  if (*(unsigned char *)(a1 + 68)) {
    id result = [*(id *)(a1 + 48) p_removeBackgroundFillFromStyle:a2];
  }
  if (*(unsigned char *)(a1 + 69))
  {
    [a2 setFloatValue:81 forProperty:0.0];
    [a2 setFloatValue:80 forProperty:0.0];
    [a2 setFloatValue:87 forProperty:0.0];
    return [a2 setFloatValue:88 forProperty:0.0];
  }
  return result;
}

void sub_1C3A90(id a1, TSWPListStyle *a2)
{
  if ([(TSWPListStyle *)a2 definesProperty:180])
  {
    id v3 = [(TSWPListStyle *)a2 valueForProperty:180];
    id v4 = [(TSWPListStyle *)a2 valueForProperty:183];
    uint64_t v5 = +[NSNumber numberWithInt:2];
    id v6 = +[TSWPListStyle defaultLabelString];
    id v12 = +[TSWPListStyle defaultLabelIndents];
    id v7 = +[NSMutableArray arrayWithArray:v3];
    uint64_t v8 = +[NSMutableArray arrayWithArray:v4];
    size_t v9 = (NSMutableArray *)[(TSWPListStyle *)a2 valueForProperty:177];
    if (![(NSMutableArray *)v8 count])
    {
      while (1)
      {
        id v10 = [(NSMutableArray *)v8 count];
        if (v10 >= [(NSMutableArray *)v7 count]) {
          break;
        }
        [(NSMutableArray *)v8 addObject:v6];
      }
    }
    if (![(NSMutableArray *)v9 count]) {
      size_t v9 = +[NSMutableArray arrayWithArray:v12];
    }
    if ([v3 count])
    {
      unint64_t v11 = 0;
      do
      {
        objc_opt_class();
        [v3 objectAtIndex:v11];
        if ([(id)TSUDynamicCast() intValue] == 3)
        {
          [(NSMutableArray *)v7 replaceObjectAtIndex:v11 withObject:v5];
          if (v11 >= (unint64_t)[(NSMutableArray *)v8 count]) {
            [(NSMutableArray *)v8 addObject:v6];
          }
          else {
            [(NSMutableArray *)v8 replaceObjectAtIndex:v11 withObject:v6];
          }
        }
        ++v11;
      }
      while (v11 < (unint64_t)[v3 count]);
    }
    [(TSWPListStyle *)a2 setValue:v9 forProperty:177];
    [(TSWPListStyle *)a2 setValue:v7 forProperty:180];
    [(TSWPListStyle *)a2 setValue:v8 forProperty:183];
  }
}

void sub_1C3D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  TSWPAttributeEnumerator::~TSWPAttributeEnumerator((TSWPAttributeEnumerator *)va);
  _Unwind_Resume(a1);
}

void sub_1C3E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  TSWPAttributeEnumerator::~TSWPAttributeEnumerator((TSWPAttributeEnumerator *)va);
  _Unwind_Resume(a1);
}

void sub_1C3F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  TSWPAttributeEnumerator::~TSWPAttributeEnumerator((TSWPAttributeEnumerator *)va);
  _Unwind_Resume(a1);
}

int64_t sub_1C4510(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationStorageRange];
  id v5 = [(THAnnotation *)a3 annotationStorageRange];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

int64_t sub_1C4554(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationAbsolutePhysicalPageIndex];
  id v5 = [(THAnnotation *)a3 annotationAbsolutePhysicalPageIndex];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

BOOL sub_1C4D50(NSRange *a1, void *a2)
{
  v5.NSUInteger location = (NSUInteger)[a2 annotationStorageRange];
  v5.length = v3;
  return NSIntersectionRange(a1[32], v5).length != 0;
}

id sub_1C4E34(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v23 = a1;
  id v3 = [*(id *)(*(void *)(a1 + 32) + 16) objectEnumerator];
  id v4 = [v3 countByEnumeratingWithState:&v36 objects:v43 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v37;
    do
    {
      for (CC_LONG i = 0; i != v5; CC_LONG i = (char *)i + 1)
      {
        if (*(void *)v37 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v36 + 1) + 8 * i);
        long long v32 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        long long v35 = 0u;
        id v9 = [v8 countByEnumeratingWithState:&v32 objects:v42 count:16];
        if (v9)
        {
          id v10 = v9;
          uint64_t v11 = *(void *)v33;
          do
          {
            for (uint64_t j = 0; j != v10; uint64_t j = (char *)j + 1)
            {
              if (*(void *)v33 != v11) {
                objc_enumerationMutation(v8);
              }
              [v2 setObject:*(void *)(*((void *)&v32 + 1) + 8 * (void)j) forKey:[*(id *)(*((void *)&v32 + 1) + 8 * (void)j) annotationUuid]];
            }
            id v10 = [v8 countByEnumeratingWithState:&v32 objects:v42 count:16];
          }
          while (v10);
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v36 objects:v43 count:16];
    }
    while (v5);
  }
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v13 = *(void **)(*(void *)(v23 + 32) + 80);
  id v14 = [v13 countByEnumeratingWithState:&v28 objects:v41 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v29;
    do
    {
      for (uint64_t k = 0; k != v15; uint64_t k = (char *)k + 1)
      {
        if (*(void *)v29 != v16) {
          objc_enumerationMutation(v13);
        }
        [v2 setObject:[*(id *)(*((void *)&v28 + 1) + 8 * (void)k) annotationUuid] forKey:k];
      }
      id v15 = [v13 countByEnumeratingWithState:&v28 objects:v41 count:16];
    }
    while (v15);
  }
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v18 = *(void **)(*(void *)(v23 + 32) + 88);
  id result = [v18 countByEnumeratingWithState:&v24 objects:v40 count:16];
  if (result)
  {
    id v20 = result;
    uint64_t v21 = *(void *)v25;
    do
    {
      uint64_t v22 = 0;
      do
      {
        if (*(void *)v25 != v21) {
          objc_enumerationMutation(v18);
        }
        [v2 setObject:*((void *)&v24 + 1) + 8 * (void)v22 forKey:[(*((void *)&v24 + 1) + 8 * (void)v22) annotationUuid]];
        uint64_t v22 = (char *)v22 + 1;
      }
      while (v20 != v22);
      id result = [v18 countByEnumeratingWithState:&v24 objects:v40 count:16];
      id v20 = result;
    }
    while (result);
  }
  *(void *)(*(void *)(v23 + 32) + 24) = v2;
  return result;
}

int64_t sub_1C5334(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationAbsolutePhysicalPageIndex];
  id v5 = [(THAnnotation *)a3 annotationAbsolutePhysicalPageIndex];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

int64_t sub_1C5644(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationAbsolutePhysicalPageIndex];
  id v5 = [(THAnnotation *)a3 annotationAbsolutePhysicalPageIndex];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

int64_t sub_1C5750(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationStorageRange];
  id v5 = [(THAnnotation *)a3 annotationStorageRange];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

int64_t sub_1C5908(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationStorageRange];
  id v5 = [(THAnnotation *)a3 annotationStorageRange];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

id sub_1C5E60(void *a1, void *a2)
{
  if (a1 == a2) {
    return &dword_0 + 1;
  }
  id result = 0;
  if (a1)
  {
    if (a2)
    {
      id v5 = [a1 annotationStorageRange];
      uint64_t v7 = v6;
      id v9 = [a2 annotationStorageRange];
      id result = 0;
      if (v5 == v9 && v7 == v8)
      {
        unsigned int v10 = [a1 annotationStyle];
        if (v10 == [a2 annotationStyle])
        {
          id v11 = [a1 annotationNote];
          id v12 = [a2 annotationNote];
          if (v11 == v12) {
            return &dword_0 + 1;
          }
          id result = [v11 isEqualToString:v12];
          if (result) {
            return &dword_0 + 1;
          }
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C646C(id a1, THAnnotation *a2)
{
  return [(THAnnotation *)a2 annotationNote] != 0;
}

BOOL sub_1C649C(id a1, THAnnotation *a2)
{
  return a2 != 0;
}

BOOL sub_1C6514(NSRange *a1, void *a2)
{
  v12.NSUInteger location = (NSUInteger)[a2 annotationStorageRange];
  NSUInteger location = v12.location;
  NSUInteger length = v12.length;
  NSRange v5 = NSIntersectionRange(v12, a1[2]);
  NSUInteger v6 = a1[2].location;
  NSUInteger v7 = a1[2].length;
  BOOL v9 = location != v6 || length != v7;
  return v5.location == v6 && v5.length == v7 && v9;
}

BOOL sub_1C65DC(uint64_t a1, void *a2)
{
  return [a2 annotationStorageRange] == *(id *)(a1 + 32) && v3 == *(void *)(a1 + 40);
}

BOOL sub_1C6690(uint64_t a1, void *a2)
{
  v7.NSUInteger location = (NSUInteger)[a2 annotationStorageRange];
  NSRange v4 = NSIntersectionRange(v7, *(NSRange *)(a1 + 32));
  return v4.location == *(void *)(a1 + 32)
      && v4.length == *(void *)(a1 + 40)
      && [a2 annotationStyle] == *(_DWORD *)(a1 + 48);
}

void sub_1C67C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1C67E4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(NSRange **)(*(void *)(a1 + 32) + 8);
  NSUInteger location = v3[2].location;
  id result = [a2 annotationStorageRange];
  v7.NSUInteger location = (NSUInteger)result;
  v7.NSUInteger length = v6;
  if (location != 0x7FFFFFFFFFFFFFFFLL)
  {
    NSRange v8 = NSUnionRange(v3[2], v7);
    id result = (id)v8.location;
    NSRange v7 = v8;
  }
  *(NSRange *)(*(void *)(*(void *)(a1 + 32) + 8) + 32) = v7;
  return result;
}

int64_t sub_1C6978(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4 = [(THAnnotation *)a2 annotationStorageRange];
  id v5 = [(THAnnotation *)a3 annotationStorageRange];
  int64_t v6 = 1;
  if (v4 <= v5) {
    int64_t v6 = -1;
  }
  if (v4 == v5) {
    return 0;
  }
  else {
    return v6;
  }
}

int64_t sub_1C69CC(id a1, THAnnotation *a2, THAnnotation *a3)
{
  if ([(THAnnotation *)a2 annotationIsUnderline]
    && ![(THAnnotation *)a3 annotationIsUnderline])
  {
    return 1;
  }
  if (([(THAnnotation *)a2 annotationIsUnderline] & 1) == 0
    && ([(THAnnotation *)a3 annotationIsUnderline] & 1) != 0)
  {
    return -1;
  }
  id v6 = [(THAnnotation *)a2 annotationCreationDate];
  id v7 = [(THAnnotation *)a3 annotationCreationDate];

  return (int64_t)[v6 compare:v7];
}

int64_t sub_1C6A78(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v5 = [(THAnnotation *)a2 annotationAbsolutePhysicalPageIndex];
  id v6 = [(THAnnotation *)a3 annotationAbsolutePhysicalPageIndex];
  if (v5 == v6)
  {
    int64_t result = [-[THAnnotation annotationStorageUID](a2, "annotationStorageUID") compare:[-[THAnnotation annotationStorageUID](a3, "annotationStorageUID")]];
    if (result != 1)
    {
      if (result)
      {
        return -1;
      }
      else
      {
        id v8 = [(THAnnotation *)a2 annotationStorageRange];
        unint64_t v10 = v9;
        id v11 = [(THAnnotation *)a3 annotationStorageRange];
        int64_t v13 = 1;
        if (v8 <= v11) {
          int64_t v13 = -1;
        }
        int64_t v14 = 1;
        if (v10 <= v12) {
          int64_t v14 = -1;
        }
        if (v10 == v12) {
          int64_t v14 = 0;
        }
        if (v8 == v11) {
          return v14;
        }
        else {
          return v13;
        }
      }
    }
  }
  else if (v5 > v6)
  {
    return 1;
  }
  else
  {
    return -1;
  }
  return result;
}

NSNumber *sub_1C73D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [*(id *)(a1 + 32) bookDescription];
  id v6 = [*(id *)(a1 + 32) bookMetadata];
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyAssetId])
  {
    id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookDescription"), "asset");
    return (NSNumber *)[v7 assetID];
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyStoreId])
  {
    id v9 = [*(id *)(a1 + 32) bookDescription];
    return (NSNumber *)[v9 storeID];
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyStoreUrl])
  {
    id v10 = [*(id *)(a1 + 32) bookDescription];
    return (NSNumber *)[v10 storeURL];
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyAssetCover])
  {
    id v11 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookDescription"), "asset"), "url");
    id v12 = [[AEPluginRegistry sharedInstance] pluginForURL:v11 helperForURL:withOptions:0];
    return (NSNumber *)[v12 helperCoverImage];
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyTitle])
  {
    int64_t result = (NSNumber *)[v6 objectForKey:@"itemName"];
    if (!result)
    {
      return (NSNumber *)[v5 bookTitle];
    }
    return result;
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyAuthor])
  {
    int64_t result = (NSNumber *)[v6 objectForKey:@"artistName"];
    if (!result)
    {
      return (NSNumber *)[v5 bookAuthor];
    }
    return result;
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyVersion])
  {
    return (NSNumber *)[v5 bookVersionString];
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyPublisherLocation]) {
    return 0;
  }
  if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyPublisherName])
  {
    return (NSNumber *)[v6 objectForKey:@"publisher"];
  }
  else if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyPublisherYear])
  {
    int64_t v13 = *(void **)(a1 + 32);
    return (NSNumber *)[v13 yearFromReleaseDate];
  }
  else if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyIsContentProtected])
  {
    id v14 = objc_msgSend(objc_msgSend(v5, "drmContext"), "kiUanAfQBD5qIUraolUj");
    return +[NSNumber numberWithBool:v14];
  }
  else if ([a3 isEqualToString:AEAssetActivityItemProviderPropertyAssetType])
  {
    id v15 = [v5 asset];
    return (NSNumber *)[v15 assetType];
  }
  else
  {
    if (![a3 isEqualToString:AEAssetActivityItemProviderPropertyBookDescription]) {
      return 0;
    }
    id v16 = [v6 objectForKeyedSubscript:@"description"];
    if (![v16 length]) {
      id v16 = [v6 objectForKeyedSubscript:@"bookDescription"];
    }
    if (![v16 length]) {
      id v16 = [v6 objectForKeyedSubscript:@"longDescription"];
    }
    int64_t result = (NSNumber *)[v16 length];
    if (result)
    {
      return [v16 im_stringByStrippingHTML];
    }
  }
  return result;
}

double TSUNormalizedPointInRect(double a1, double a2, double a3, double a4, double a5)
{
  return (a1 - a3) / a5;
}

void sub_1C89DC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1C8A04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (long long *)(a2 + 88 * *(void *)(a1 + 48));
  uint64_t v27 = *((void *)v3 + 10);
  long long v24 = v3[2];
  long long v25 = v3[3];
  long long v26 = v3[4];
  long long v22 = *v3;
  long long v23 = v3[1];
  double v5 = *(double *)(a1 + 64);
  double v4 = *(double *)(a1 + 72);
  if (!*(unsigned char *)(a1 + 160))
  {
    [*(id *)(a1 + 32) p_texCoordFromX:v5 y:v4];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    CGRectGetMinX(*(CGRect *)(a1 + 112));
    CGRectGetMaxX(*(CGRect *)(a1 + 112));
    TSUClamp();
    [*(id *)(a1 + 32) p_texCoordFromX:v22 y:v23 v24 v25 v26 v27];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    double v14 = *(double *)(a1 + 64);
    CGRectGetMinY(*(CGRect *)(a1 + 112));
    CGRectGetMaxY(*(CGRect *)(a1 + 112));
    TSUClamp();
    [*(id *)(a1 + 32) p_texCoordFromX:v14 y:v15 v22:v23 v24:v25 v26:v27];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    CGRectGetMinX(*(CGRect *)(a1 + 112));
    CGRectGetMaxX(*(CGRect *)(a1 + 112));
    TSUClamp();
    [*(id *)(a1 + 32) p_texCoordFromX:v22 y:v23 v24 v25 v26 v27];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    goto LABEL_8;
  }
  char v6 = 1;
  do
  {
    char v7 = v6;
    [*(id *)(a1 + 32) p_texCoordFromX:v5 y:v4 v16 v17 v18 v19 v20 v21];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    long long v18 = v24;
    long long v19 = v25;
    long long v20 = v26;
    uint64_t v21 = v27;
    long long v16 = v22;
    long long v17 = v23;
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    char v6 = 0;
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  while ((v7 & 1) != 0);
  CGRectGetMinX(*(CGRect *)(a1 + 112));
  CGRectGetMaxX(*(CGRect *)(a1 + 112));
  TSUClamp();
  [*(id *)(a1 + 32) p_texCoordFromX:v22 y:v23 v24 v25 v26 v27];
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  double v8 = *(double *)(a1 + 64);
  CGRectGetMinY(*(CGRect *)(a1 + 112));
  CGRectGetMaxY(*(CGRect *)(a1 + 112));
  TSUClamp();
  [*(id *)(a1 + 32) p_texCoordFromX:v8 y:v9 v22:v23 v24:v25 v26:v27];
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  uint64_t result = TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (*(double *)(a1 + 144) > 0.0 || *(double *)(a1 + 152) > 0.0)
  {
    double v11 = *(double *)(a1 + 64);
    double v12 = v11 + CGRectGetWidth(*(CGRect *)(a1 + 112)) * *(double *)(a1 + 96);
    CGRectGetMinY(*(CGRect *)(a1 + 112));
    CGRectGetMaxY(*(CGRect *)(a1 + 112));
    TSUClamp();
    [*(id *)(a1 + 32) p_texCoordFromX:v12 y:v13 v22 v23 v24 v25 v26 v27];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    CGRectGetHeight(*(CGRect *)(a1 + 112));
    CGRectGetMinX(*(CGRect *)(a1 + 112));
    CGRectGetMaxX(*(CGRect *)(a1 + 112));
    TSUClamp();
    [*(id *)(a1 + 32) p_texCoordFromX:v22 y:v23 v24 v25 v26 v27];
    TSDGPUUpdateDataSetMetalPoint2DAtIndex();
LABEL_8:
    uint64_t result = TSDGPUUpdateDataSetMetalPoint2DAtIndex();
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return result;
}

uint64_t sub_1C91E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (long long *)(a2 + 88 * *(void *)(a1 + 64));
  uint64_t v36 = *((void *)v3 + 10);
  long long v33 = v3[2];
  long long v34 = v3[3];
  long long v35 = v3[4];
  long long v31 = *v3;
  long long v32 = v3[1];
  if (*(unsigned char *)(a1 + 216) && *(double *)(a1 + 144) > 0.0) {
    CGRectGetHeight(*(CGRect *)(a1 + 152));
  }
  CGRectGetMinX(*(CGRect *)(a1 + 152));
  CGRectGetMaxX(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v5 = v4;
  CGRectGetMinY(*(CGRect *)(a1 + 152));
  CGRectGetMaxY(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v7 = v6;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  [*(id *)(a1 + 32) p_texCoordFromX:v5 y:v7 v31:v32 v33:v34 v35:v36];
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (*(unsigned char *)(a1 + 216) && *(double *)(a1 + 104) > 0.0) {
    CGRectGetWidth(*(CGRect *)(a1 + 152));
  }
  CGRectGetMinX(*(CGRect *)(a1 + 152));
  CGRectGetMaxX(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v9 = v8;
  CGRectGetMinY(*(CGRect *)(a1 + 152));
  CGRectGetMaxY(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v11 = v10;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  [*(id *)(a1 + 32) p_texCoordFromX:v9 y:v11 v31:v32 v33:v33 v34:v34 v35:v35 v36:v36];
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (*(unsigned char *)(a1 + 216) && *(double *)(a1 + 144) > 0.0) {
    CGRectGetHeight(*(CGRect *)(a1 + 152));
  }
  CGRectGetMinX(*(CGRect *)(a1 + 152));
  CGRectGetMaxX(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v13 = v12;
  CGRectGetMinY(*(CGRect *)(a1 + 152));
  CGRectGetMaxY(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v15 = v14;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  [*(id *)(a1 + 32) p_texCoordFromX:v13 y:v15 v31:v32 v33:v34 v35:v36];
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  TSDGPUUpdateDataSetMetalFloatAtIndex();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (*(unsigned char *)(a1 + 216) && *(double *)(a1 + 104) > 0.0) {
    CGRectGetWidth(*(CGRect *)(a1 + 152));
  }
  CGRectGetMinX(*(CGRect *)(a1 + 152));
  CGRectGetMaxX(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v17 = v16;
  CGRectGetMinY(*(CGRect *)(a1 + 152));
  CGRectGetMaxY(*(CGRect *)(a1 + 152));
  TSUClamp();
  double v19 = v18;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  [*(id *)(a1 + 32) p_texCoordFromX:v17 y:v19 v31:v32 v33:v34 v35:v36];
  TSDGPUUpdateDataSetMetalPoint2DAtIndex();
  uint64_t result = TSDGPUUpdateDataSetMetalFloatAtIndex();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (*(unsigned char *)(a1 + 216))
  {
    double v21 = *(double *)(a1 + 200);
    if (v21 > 0.0 && *(double *)(a1 + 104) == 0.0)
    {
      double v22 = *(double *)(a1 + 88);
      double v23 = v22 + CGRectGetWidth(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 128);
      double v24 = *(double *)(a1 + 96) + *(double *)(a1 + 208) * *(double *)(a1 + 136);
      double MaxY = CGRectGetMaxY(*(CGRect *)(a1 + 152));
      double MinY = CGRectGetMinY(*(CGRect *)(a1 + 152));
      if (MinY < v24) {
        double MinY = v24;
      }
      if (MaxY >= MinY) {
        double MaxY = MinY;
      }
      TSDGPUUpdateDataSetMetalPoint2DAtIndex();
      [*(id *)(a1 + 32) p_texCoordFromX:v23 y:MaxY v31:v32 v33:v34 v35:v36];
      TSDGPUUpdateDataSetMetalPoint2DAtIndex();
      TSDGPUUpdateDataSetMetalFloatAtIndex();
      ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      double v27 = *(double *)(a1 + 96);
      double v28 = v27 + CGRectGetHeight(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 136);
      CGRectGetMinX(*(CGRect *)(a1 + 152));
      CGRectGetMaxX(*(CGRect *)(a1 + 152));
      TSUClamp();
      double v30 = v29;
      TSDGPUUpdateDataSetMetalPoint2DAtIndex();
      [*(id *)(a1 + 32) p_texCoordFromX:v30 y:v28 v31 v32 v33 v34 v35 v36];
      TSDGPUUpdateDataSetMetalPoint2DAtIndex();
      uint64_t result = TSDGPUUpdateDataSetMetalFloatAtIndex();
      ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    }
  }
  return result;
}

TSUColor *THNoteCardBackgroundColor(int a1)
{
  if (a1) {
    return +[TSUColor colorWithWhite:0.31372549 alpha:1.0];
  }
  else {
    return (TSUColor *)+[TSUColor whiteColor];
  }
}

TSUColor *THNoteDarkenBackgroundColor(int a1)
{
  double v1 = 0.945098039;
  if (a1) {
    double v1 = 0.254901961;
  }
  return +[TSUColor colorWithWhite:v1 alpha:1.0];
}

TSUColor *THNoteDarkerBackgroundColor(int a1)
{
  double v1 = 0.85;
  if (a1) {
    double v1 = 0.196078431;
  }
  return +[TSUColor colorWithWhite:v1 alpha:1.0];
}

TSUColor *THNoteCardBorderColor(int a1, int a2)
{
  if (a1) {
    return sub_1CD4F8(1, (uint64_t)&stru_45AEB8);
  }
  double v3 = 0.05;
  if (!a2) {
    double v3 = 0.012;
  }
  return +[TSUColor colorWithWhite:0.0 alpha:v3];
}

TSUColor *sub_1CD4F8(int a1, uint64_t a2)
{
  id v4 = +[UITraitCollection _currentTraitCollection];
  if (a1) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 1;
  }
  +[UITraitCollection _setCurrentTraitCollection:](UITraitCollection, "_setCurrentTraitCollection:", +[UITraitCollection traitCollectionWithUserInterfaceStyle:v5]);
  double v6 = +[TSUColor colorWithUIColor:(*(uint64_t (**)(uint64_t))(a2 + 16))(a2)];
  +[UITraitCollection _setCurrentTraitCollection:v4];
  return v6;
}

UIColor *__cdecl sub_1CD588(id a1)
{
  return (UIColor *)+[UIColor bc_booksQuaternaryLabelColor];
}

TSUColor *THNoteCardHeaderColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AED8);
}

UIColor *__cdecl sub_1CD5A0(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor];
}

TSUColor *THNoteCardFooterColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AEF8);
}

UIColor *__cdecl sub_1CD5B8(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor];
}

TSUColor *THNoteCardFooterFlipCardColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AF18);
}

UIColor *__cdecl sub_1CD5D0(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor];
}

TSUColor *THNoteCardHoveredTextColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AF38);
}

UIColor *__cdecl sub_1CD5E8(id a1)
{
  return (UIColor *)+[UIColor bc_booksTertiaryLabelColor];
}

TSUColor *THNoteCardPressedTextColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AF58);
}

UIColor *__cdecl sub_1CD600(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor];
}

TSUColor *THNoteCardFrontTextColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AF78);
}

UIColor *__cdecl sub_1CD618(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor];
}

TSUColor *THNoteCardBackTextColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AF98);
}

UIColor *__cdecl sub_1CD630(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor];
}

TSUColor *THNoteCardEmptyHeadingTextColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AFB8);
}

UIColor *__cdecl sub_1CD648(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor];
}

TSUColor *THNoteCardEmptyBodyTextColor(int a1)
{
  return sub_1CD4F8(a1, (uint64_t)&stru_45AFD8);
}

UIColor *__cdecl sub_1CD660(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor];
}

double sub_1CD66C()
{
  kTHNoteCardOffset = (__int128)CGSizeZero;
  kTHNoteCardBodyLeftMargin = 0x404D800000000000;
  kTHNoteCardBodyWidth = 0x4088580000000000;
  double result = 0.0;
  kTHNoteCardShadowOffset = xmmword_344FE0;
  kTHNoteCardShadowOffsetRetina = xmmword_344FE0;
  return result;
}

id sub_1CF474(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 161) = 0;
  int v2 = *(unsigned __int8 *)(a1 + 48);
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "studyOptions"), "shuffle");
  if (v2 != result)
  {
    [*(id *)(a1 + 32) studyOptionsWillChangeShuffle:*(void *)(a1 + 40)];
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    return [v4 studyOptionsDidChangeShuffle:v5];
  }
  return result;
}

void sub_1CF8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_1CF8F4(uint64_t a1, uint64_t a2)
{
}

void sub_1CF904(uint64_t a1)
{
}

void sub_1CF910(uint64_t a1, void *a2)
{
  if (([a2 annotationIsOrphan] & 1) == 0)
  {
    if (!*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)) {
      *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) = [*(id *)(a1 + 32) bodyStorageForPresentationType:[THPresentationType paginatedPresentationTypeInContext:](THPresentationType, "paginatedPresentationTypeInContext:", [*(id *)(a1 + 32) context])];
    }
    id v4 = [*(id *)(*(void *)(a1 + 40) + 8) storageForAnnotation:a2];
    if (v4)
    {
      id v5 = v4;
      double v7 = objc_alloc_init(THAnnotationNoteCardInfo);
      [(THAnnotationNoteCardInfo *)v7 setStorage:v5];
      [(THAnnotationNoteCardInfo *)v7 setAnnotation:a2];
      [(THAnnotationNoteCardInfo *)v7 setTitle:*(void *)(a1 + 48)];
      -[THAnnotationNoteCardInfo setPageIndex:](v7, "setPageIndex:", [*(id *)(*(void *)(a1 + 40) + 8) absolutePageIndexForAnnotation:a2]);
      if ([(THAnnotationNoteCardInfo *)v7 storage] == *(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)) {
        uint64_t v6 = (uint64_t)[a2 annotationStorageRange];
      }
      else {
        uint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
      }
      [(THAnnotationNoteCardInfo *)v7 setBodyPosition:v6];
      -[THAnnotationNoteCardInfo setPageNumberString:](v7, "setPageNumberString:", [*(id *)(*(void *)(a1 + 40) + 8) pageNumberStringForAnnotation:a2]);
      [*(id *)(a1 + 56) addObject:v7];
    }
  }
}

int64_t sub_1CFBC4(id a1, THNoteCardInfo *a2, THNoteCardInfo *a3)
{
  unsigned int v5 = [(THNoteCardInfo *)a2 noteCardTypeSortOrder];
  unsigned int v6 = [(THNoteCardInfo *)a3 noteCardTypeSortOrder];
  if (v5 > v6) {
    return 1;
  }
  if (v5 < v6) {
    return -1;
  }

  return (int64_t)[(THNoteCardInfo *)a2 compareToNoteCard:a3];
}

id sub_1D1088(uint64_t a1)
{
  [*(id *)(a1 + 32) p_handleDelayedCardUpdate];
  int v2 = *(void **)(a1 + 32);

  return [v2 p_resetFlipOnBelowTopCard];
}

uint64_t sub_1D1FBC(uint64_t a1)
{
  objc_opt_class();
  int v2 = (void *)TSUDynamicCast();
  objc_opt_class();
  double v3 = (void *)TSUDynamicCast();
  id v4 = [*(id *)(*(void *)(a1 + 32) + 32) indexOfObject:[v2 noteCardInfo]];
  id v5 = [*(id *)(*(void *)(a1 + 32) + 32) indexOfObject:[v3 noteCardInfo]];
  if (v4 >= v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = -1;
  }
  if (v4 > v5) {
    return 1;
  }
  else {
    return v6;
  }
}

void sub_1D248C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1D2524(uint64_t result)
{
  if (++*(void *)(*(void *)(*(void *)(result + 48) + 8) + 24) == *(void *)(*(void *)(*(void *)(result + 56)
                                                                                                  + 8)
                                                                                      + 24))
  {
    uint64_t v1 = result;
    [*(id *)(result + 32) p_recreateNoteCardLayers];
    id result = *(void *)(v1 + 40);
    if (result)
    {
      int v2 = *(uint64_t (**)(void))(result + 16);
      return v2();
    }
  }
  return result;
}

id sub_1D2958(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_recreateNoteCardLayers];
}

id sub_1D2B94(uint64_t a1, void *a2)
{
  id result = [a2 flashScrollIndicators];
  *(void *)(*(void *)(a1 + 32) + 88) = a2;
  return result;
}

id sub_1D4114(uint64_t a1, CGContextRef c)
{
  CGContextScaleCTM(c, *(CGFloat *)(*(void *)(a1 + 32) + 80), *(CGFloat *)(*(void *)(a1 + 32) + 80));
  [*(id *)(a1 + 40) drawInRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  CGContextSetShadowWithColor(c, *(CGSize *)(*(void *)(a1 + 32) + 56), *(CGFloat *)(*(void *)(a1 + 32) + 72), (CGColorRef)[*(id *)(*(void *)(a1 + 32) + 48) CGColor]);
  [*(id *)(*(void *)(a1 + 32) + 24) tsu_boundingSizeWithFont:*(void *)(*(void *)(a1 + 32) + 32)];
  TSDRectWithSize();
  TSDCenterRectOverRect();
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  [*(id *)(*(void *)(a1 + 32) + 32) pointSize];
  double v13 = v7 + (v11 - v12) * -0.5;
  uint64_t v14 = [NSDictionary dictionaryWithObjectsAndKeys:*[*(id *)(*(void *)(a1 + 32) + 32) platformFont], NSFontAttributeName, *[*(id *)(*(void *)(a1 + 32) + 40) platformColor], NSForegroundColorAttributeName, 0];
  double v15 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v15 drawInRect:v14 withAttributes:v5, v9, v11];
}

void sub_1D4658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4678(uint64_t a1, uint64_t a2)
{
}

void sub_1D4688(uint64_t a1)
{
}

id sub_1D4694(uint64_t a1)
{
  objc_opt_class();
  int v2 = (void *)TSUDynamicCast();
  id result = objc_msgSend(objc_msgSend(v2, "stem"), "isEqualToString:", *(void *)(a1 + 32));
  if (result) {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = v2;
  }
  return result;
}

id sub_1D46EC(uint64_t a1)
{
  objc_opt_class();
  id v2 = [(id)TSUDynamicCast() inflection];
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 isEqualToString:v3];
}

void sub_1D49F4(_Unwind_Exception *a1)
{
}

void sub_1D4D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4D88(uint64_t a1, uint64_t a2)
{
}

void sub_1D4D98(uint64_t a1)
{
}

id sub_1D4DA4(uint64_t a1, void *a2)
{
  id result = [a2 objectForKey:*(void *)(a1 + 32)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_1D4F34(uint64_t a1, void *a2)
{
  return [a2 setObject:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];
}

id sub_1D5024(uint64_t a1, void *a2)
{
  return [a2 removeObjectForKey:*(void *)(a1 + 32)];
}

id sub_1D5158(uint64_t a1, void *a2)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  double v4 = *(void **)(a1 + 32);
  id result = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (result)
  {
    id v6 = result;
    uint64_t v7 = *(void *)v11;
    do
    {
      double v8 = 0;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v10 + 1) + 8 * (void)v8);
        if (![a2 objectForKey:v9]) {
          [a2 setObject:[*(id *)(a1 + 32) objectForKey:v9] forKey:v9];
        }
        double v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id result = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      id v6 = result;
    }
    while (result);
  }
  return result;
}

void sub_1D5404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1D541C(uint64_t a1, void *a2)
{
  id result = [a2 mutableCopy];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
  return result;
}

uint64_t sub_1D5A4C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 64);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      if (v2 >= 1)
      {
        for (uint64_t j = 0; j < v2; ++j)
        {
          TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          if (*(unsigned char *)(v1 + 104)) {
            TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          }
          TSDGPUUpdateDataSetMetalPoint2DAtIndex();
          id result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          uint64_t v2 = *(void *)(v1 + 64);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D5F84(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 56);
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i < v4; ++i)
    {
      if (v4 >= 1)
      {
        uint64_t v6 = 0;
        double v7 = ((double)i + (double)i) / (double)(v4 - 1) + -1.0;
        double v12 = v7;
        do
        {
          if (*(unsigned char *)(v3 + 177)) {
            double v8 = -(((double)v6 + (double)v6) / (double)(v4 - 1) + -1.0);
          }
          else {
            double v8 = ((double)v6 + (double)v6) / (double)(v4 - 1) + -1.0;
          }
          double v9 = *(double *)(v3 + 64);
          double v10 = *(double *)(v3 + 72);
          if (*(unsigned char *)(v3 + 176)) {
            TSDGPUUpdateDataMetalPoint3DAtIndex();
          }
          double v11 = v7 * v10 + v8 * v9 - *(double *)(v3 + 80);
          if (v11 >= 0.0 && v11 < *(double *)(v3 + 88)) {
            __sincos_stret(v11 * *(double *)(v3 + 96));
          }
          TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          id result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          if (*(unsigned char *)(v3 + 176) && *(unsigned char *)(v3 + 178)) {
            id result = TSDGPUUpdateDataSetMetalPoint3DAtIndex();
          }
          ++v6;
          uint64_t v4 = *(void *)(v3 + 56);
          double v7 = v12;
        }
        while (v6 < v4);
      }
    }
  }
  *(unsigned char *)(a2 + 88 * *(void *)(v3 + 168) + 56) = 0;
  return result;
}

void sub_1D8A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[AEAnnotation(THAdditions) p_userDataDictionary]") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Annotations/AEAnnotation_THAdditions.m") lineNumber:148 description:@"exception trying to unarchive user data dictionary: %@"];
    objc_end_catch();
    JUMPOUT(0x1D89D4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D8B40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[AEAnnotation(THAdditions) p_setUserDataDictionary:]") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Annotations/AEAnnotation_THAdditions.m") lineNumber:177 description:@"exception trying to archive user data dictionary: %@"];
    objc_end_catch();
    JUMPOUT(0x1D8B18);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DA2B4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) transportUI];
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2)
  {
    id v4 = [v3 transportUI];
    return [v4 mediaWasPressed];
  }
  else
  {
    return [v3 togglePlayPause];
  }
}

id sub_1DA6A4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) audioRep];

  return [v1 play];
}

id sub_1DA764(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) audioRep];

  return [v1 pause];
}

id sub_1DA89C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) audioRep];

  return [v1 stop];
}

id sub_1DA8C8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) movieRep];

  return [v1 stop];
}

id sub_1DA974(uint64_t a1)
{
  if ([*(id *)(a1 + 32) audioRep])
  {
    unsigned int v2 = [*(id *)(a1 + 32) movieIsPlaying];
    uint64_t v3 = *(void **)(a1 + 32);
    if (v2) {
      [v3 pause];
    }
    else {
      [v3 play];
    }
  }
  id result = [*(id *)(a1 + 32) movieRep];
  if (result)
  {
    double v5 = result;
    if ([result isPlaying])
    {
      return [v5 stop];
    }
    else
    {
      return [v5 play];
    }
  }
  return result;
}

void sub_1DEEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1DEEC0(uint64_t a1, void *a2)
{
  objc_msgSend(objc_msgSend(a2, "valueForKey:", TSWReviewChoiceDescriptionFractionKey), "floatValue");
  if (v3 > 0.0) {
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  uint64_t v5 = a1 + 32;
  id v4 = *(void **)(a1 + 32);
  if (*(uint64_t *)(*(void *)(*(void *)(v5 + 8) + 8) + 24) <= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = 2;
  }
  double v7 = +[NSNumber numberWithInteger:v6];
  double v8 = TSWReviewQuestionDescriptionCardinalityKey;

  return [v4 setValue:v7 forKey:v8];
}

void sub_1DFB98(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_1DFC10;
  v1[3] = &unk_456E38;
  long long v2 = *(_OWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

id sub_1DFC10(uint64_t a1)
{
  if (!+[NSThread isMainThread]) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentLoadOperation appendMainThreadCompletionBlock:]_block_invoke_2") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/ApplePub/THImporter/THModelContentLoadOperation.mm") lineNumber:133 description:@"This operation must only be performed on the main thread."];
  }
  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0
    && ([*(id *)(*(void *)(a1 + 32) + 8) isClosing] & 1) == 0)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v2 = *(void **)(a1 + 40);
    id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v9;
      do
      {
        for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v9 != v5) {
            objc_enumerationMutation(v2);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8 * i) + 16))();
        }
        id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }
      while (v4);
    }
  }
  [*(id *)(a1 + 40) removeAllObjects];
  return [*(id *)(a1 + 32) setCompletionBlock:0];
}

void sub_1E02CC()
{
}

void sub_1E06F8(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    if (a2 == 2)
    {
      objc_begin_catch(exc_buf);
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentLoadOperation loadNavigationPageContentNode]") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/ApplePub/THImporter/THModelContentLoadOperation.mm") lineNumber:290 description:@"Exception raised during navigation read. %@"];
      objc_end_catch();
    }
    else
    {
      objc_begin_catch(exc_buf);
    }
    JUMPOUT(0x1E0690);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1E0C34(_Unwind_Exception *a1)
{
}

id sub_1E13B4(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) definesProperty:a2];
  if ((result & 1) == 0)
  {
    id v5 = +[TSWPParagraphStyle boxedDefaultValueForProperty:a2];
    uint64_t v6 = *(void **)(a1 + 32);
    return [v6 setBoxedValue:v5 forProperty:a2];
  }
  return result;
}

void sub_1E338C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1E33A4(void *a1, void *a2)
{
  id v4 = a2;
  if (a1[4])
  {
    id v3 = [[PFDUrlHandlerAssetInfo alloc] initWithContext:a1[5] bookRootURL:a1[6]];
    [v4 setObject:v3 forKeyedSubscript:a1[4]];
  }
  *(void *)(*(void *)(a1[7] + 8) + 24) = [v4 count];
}

void sub_1E34FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1E3514(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (*(void *)(a1 + 32))
  {
    [v3 removeObjectForKey:];
    id v3 = v4;
  }
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 count];
}

void sub_1E3694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1E36AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1E36BC(uint64_t a1)
{
}

void sub_1E36C4(uint64_t a1, void *a2)
{
  id v6 = [a2 objectForKeyedSubscript:*(void *)(a1 + 32)];
  id v3 = [v6 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1E3C50(uint64_t a1)
{
  [*(id *)(a1 + 32) _resetForNewLoad];
  id v13 = [*(id *)(a1 + 40) URL];
  long long v2 = [(id)objc_opt_class() _assetInfoForURL:v13];
  id v3 = *(void **)(*(void *)(a1 + 32) + 48);
  if (v3)
  {
    uint64_t v4 = [v3 hosts];
    id v5 = [v13 host];
    unsigned int v6 = [v4 containsObject:v5];

    if (v6) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = -1003;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  long long v8 = [v2 path];
  id v9 = [v8 length];

  if (!v9)
  {
    uint64_t v7 = -1100;
    goto LABEL_15;
  }
  if (![v2 fileSize])
  {
    uint64_t v7 = -1014;
    goto LABEL_15;
  }
  if (![v2 assetIsInsideBookRootPath])
  {
    uint64_t v7 = -1102;
    goto LABEL_15;
  }
  if (v7)
  {
LABEL_15:
    [*(id *)(a1 + 32) _sendErrorForErrorCode:v7];
    goto LABEL_16;
  }
  int64_t v10 = +[BuLr3rwnVU31zt9OioJ56 dataChunkSize];
  id v11 = [v2 fileSize];
  double v12 = *(void **)(a1 + 32);
  if (v10 >= (uint64_t)v11) {
    [v12 _sendSmallFileForAsset:v2];
  }
  else {
    [v12 _sendLargeFileForAsset:v2];
  }
LABEL_16:
}

id sub_1E3E28(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanupDispatchIO];
}

void sub_1E4494(uint64_t a1, int a2, void *a3, int a4)
{
  uint64_t v7 = a3;
  long long v8 = v7;
  if (a4)
  {
    if (a4 == 89) {
      uint64_t v9 = -999;
    }
    else {
      uint64_t v9 = -3001;
    }
    [*(id *)(a1 + 32) _sendErrorForErrorCode:v9];
  }
  else
  {
    if (v7 && v7 != &_dispatch_data_empty)
    {
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_1E45A0;
      _OWORD v13[3] = &unk_45B3B0;
      int64_t v10 = *(void **)(a1 + 40);
      v13[4] = *(void *)(a1 + 32);
      id v14 = v10;
      id v11 = *(id *)(a1 + 48);
      uint64_t v12 = *(void *)(a1 + 56);
      id v15 = v11;
      uint64_t v16 = v12;
      dispatch_data_apply(v8, v13);
    }
    if (a2)
    {
      [*(id *)(a1 + 32) _cleanupDispatchIO];
      [*(id *)(a1 + 32) _sendDidFinish];
    }
  }
}

BOOL sub_1E45A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = a2;
  int64_t v10 = *(void **)(a1 + 32);
  if (a5)
  {
    [v10 _maybeSendDidReceiveResponse:*(void *)(a1 + 40)];
    if (*(void *)(a1 + 48))
    {
      id v11 = +[NSMutableData dataWithLength:*(void *)(a1 + 56)];
      uint64_t v12 = *(void **)(a1 + 48);
      id v13 = v11;
      uint64_t v18 = 0;
      unsigned int v14 = [v12 BaSrRpzcWCyAjSdjbc8j:withSize:into:error:a4, a5, [v13 mutableBytes], &v18];
      id v15 = 0;
      if (v14) {
        BOOL v16 = v18 == 0;
      }
      else {
        BOOL v16 = 0;
      }
      if (v16)
      {
        [v13 setLength:a5];
        id v15 = v13;
      }
    }
    else
    {
      id v15 = [objc_alloc((Class)NSData) initWithBytes:a4 length:a5];
    }
    [*(id *)(a1 + 32) _sendDidReceiveData:v15];
  }
  else
  {
    [v10 _sendErrorForErrorCode:-1014];
  }

  return a5 != 0;
}

void sub_1E6474()
{
}

__CFDictionary *sub_1E6498(const void **a1)
{
  Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  if (CFDictionaryGetCount((CFDictionaryRef)a1[17]) >= 1) {
    CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserFairplayInfoKey, a1[17]);
  }
  if (CFArrayGetCount((CFArrayRef)a1[19]) >= 1) {
    CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserFontObfuscationInfoKey, a1[19]);
  }
  if (CFDictionaryGetCount((CFDictionaryRef)a1[18]) >= 1) {
    CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserEncryptionInfoKey, a1[18]);
  }
  return Mutable;
}

void sub_1E6DEC()
{
}

void sub_1E7070(id a1)
{
  qword_573370 = &off_499BF8;
}

void sub_1E78E0(void *a1, int a2)
{
  sub_1E7BA0(v3 - 112, *(void **)(v3 - 104));
  if (a2 == 2)
  {
    id v6 = objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1E7874);
  }
  objc_begin_catch(a1);
  if (!v2) {
    JUMPOUT(0x1E7890);
  }
  JUMPOUT(0x1E787CLL);
}

void sub_1E7B2C(_Unwind_Exception *a1)
{
}

void sub_1E7BA0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1E7BA0(a1, *a2);
    sub_1E7BA0(a1, a2[1]);
    sub_1E7BFC((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1E7BFC(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

id sub_1E7E28(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) definesProperty:a2];
  if ((result & 1) == 0)
  {
    id v5 = +[TSWPParagraphStyle boxedDefaultValueForProperty:a2];
    id v6 = *(void **)(a1 + 32);
    return [v6 setBoxedValue:v5 forProperty:a2];
  }
  return result;
}

void sub_1E8344(_Unwind_Exception *a1)
{
}

void sub_1E8364(void *a1, int a2)
{
  if (a2 == 2)
  {
    objc_end_catch();
    JUMPOUT(0x1E8304);
  }
  JUMPOUT(0x1E830CLL);
}

_xmlNode *CXFirstChildNamed(_xmlNode *a1, xmlChar *str1)
{
  if (!a1) {
    return 0;
  }
  for (uint64_t i = a1->children; i; uint64_t i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE && xmlStrEqual(str1, i->name)) {
      break;
    }
  }
  return i;
}

_xmlNode *CXNextSiblingNamed(_xmlNode *a1, xmlChar *str1)
{
  if (!a1) {
    return 0;
  }
  for (uint64_t i = a1->next; i; uint64_t i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE && xmlStrEqual(str1, i->name)) {
      break;
    }
  }
  return i;
}

uint64_t CXFirstNodeMatchingXPathQuery(_xmlNode *a1, const xmlChar *a2)
{
  uint64_t v4 = xmlXPathNewContext(a1->doc);
  id v5 = v4;
  if (v4
    && (v4->node = a1, (uint64_t v4 = (xmlXPathContext *)xmlXPathEvalExpression(a2, v4)) != 0)
    && (xmlNodePtr node = v4->node) != 0
    && SLODWORD(node->_private) >= 1)
  {
    uint64_t v7 = **(void **)&node->type;
  }
  else
  {
    uint64_t v7 = 0;
  }
  xmlXPathFreeObject((xmlXPathObjectPtr)v4);
  xmlXPathFreeContext(v5);
  return v7;
}

_xmlNode *pCXFindChild(_xmlNode *a1, CXNamespace *a2, xmlChar *str1)
{
  if (!a1) {
    return 0;
  }
  for (uint64_t i = a1->children; i; uint64_t i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE
      && xmlStrEqual(str1, i->name)
      && [(CXNamespace *)a2 containsNode:i])
    {
      break;
    }
  }
  return i;
}

_xmlNode *pCXFindChildWithAttributeValue(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, const xmlChar *a4, const xmlChar *a5)
{
  for (uint64_t i = pCXFindChild(a1, a2, a3); ; uint64_t i = CXFindNextChild(v10, a2, a3))
  {
    int64_t v10 = i;
    if (!i) {
      break;
    }
    properties = i->properties;
    if (properties)
    {
      while (!xmlStrEqual(a4, properties->name))
      {
        properties = properties->next;
        if (!properties) {
          goto LABEL_9;
        }
      }
      children = properties->children;
      if (children)
      {
        if (xmlStrEqual(a5, children->content)) {
          break;
        }
      }
    }
LABEL_9:
    ;
  }
  return v10;
}

_xmlNode *CXFindNextChild(_xmlNode *a1, CXNamespace *a2, xmlChar *str1)
{
  for (uint64_t i = a1->next; i; uint64_t i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE
      && xmlStrEqual(str1, i->name)
      && [(CXNamespace *)a2 containsNode:i])
    {
      break;
    }
  }
  return i;
}

_xmlNode *CXFindRequiredChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  uint64_t v4 = pCXFindChild(a1, a2, a3);
  if (!v4) {
    +[NSException raise:@"TCXmlException", @"Could not find node: %s", a3 format];
  }
  return v4;
}

_xmlNode *CXFirstChild(_xmlNode *a1)
{
  if (!a1) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "xmlNodePtr CXFirstChild(xmlNodePtr)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCXmlUtilities.mm") lineNumber:184 description:@"Bad node."];
  }
  for (id result = a1->children; result; id result = result->next)
  {
    if (result->type == XML_ELEMENT_NODE) {
      break;
    }
  }
  return result;
}

_xmlNode *CXNextSibling(_xmlNode *a1)
{
  id v1 = a1;
  if (!a1) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "xmlNodePtr CXNextSibling(xmlNodePtr)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCXmlUtilities.mm") lineNumber:198 description:@"Bad node."];
  }
  do
    id v1 = v1->next;
  while (v1 && v1->type != XML_ELEMENT_NODE);
  return v1;
}

_xmlNode *CXFirstChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  id v5 = CXFirstChild(a1);
  pTCXmlCheckName(v5, a2, a3);
  return v5;
}

uint64_t pTCXmlCheckName(_xmlNode *a1, CXNamespace *a2, xmlChar *str2)
{
  if (!a1) {
    return (uint64_t)+[NSException raise:@"TCXmlException", @"Could not find node: %s", str2 format];
  }
  if (!xmlStrEqual(a1->name, str2)) {
    return (uint64_t)+[NSException raise:@"TCXmlException", @"Could not find node: %s", str2 format];
  }
  uint64_t result = [(CXNamespace *)a2 containsNode:a1];
  if ((result & 1) == 0) {
    return (uint64_t)+[NSException raise:@"TCXmlException", @"Could not find node: %s", str2 format];
  }
  return result;
}

_xmlNode *CXNextSibling(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  id v5 = CXNextSibling(a1);
  pTCXmlCheckName(v5, a2, a3);
  return v5;
}

_xmlNode *CXRequiredLongChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  return CXRequiredLongChild(a1, a2, a3, 0);
}

_xmlNode *CXRequiredLongChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, int a4)
{
  uint64_t result = pCXFindChild(a1, a2, a3);
  if (result)
  {
    Content = (char *)xmlNodeGetContent(result);
    uint64_t v7 = CXLongValueFromString((uint64_t)Content, Content, a4);
    xmlFree(Content);
    return (_xmlNode *)v7;
  }
  return result;
}

uint64_t CXLongValueFromString(uint64_t a1, char *a2, int a3)
{
  double v9 = 0.0;
  int v8 = 0;
  CXSplitValueAndUnit(+[NSString stringWithXmlString:a2], &v9, &v8);
  if (v8)
  {
    if (a3)
    {
      double v5 = CXUnitToPoint(v8);
      return (uint64_t)(v9 * (v5 / CXUnitToPoint(a3)));
    }
    else
    {
      return (uint64_t)v9;
    }
  }
  else
  {
    uint64_t v10 = 0;
    if (a2)
    {
      sfaxmlXmlCharToLong(a2, &v10);
      return v10;
    }
    else
    {
      return 0;
    }
  }
}

uint64_t CXCountChildren(_xmlNode *a1, CXNamespace *a2, xmlChar *str1)
{
  children = a1->children;
  if (!children) {
    return 0;
  }
  uint64_t v6 = 0;
  do
  {
    if (children->type == XML_ELEMENT_NODE && xmlStrEqual(str1, children->name)) {
      uint64_t v6 = v6 + [(CXNamespace *)a2 containsNode:children];
    }
    children = children->next;
  }
  while (children);
  return v6;
}

_xmlAttr *CXFindAttribute(_xmlNode *a1, xmlChar *str2)
{
  if (!a1) {
    return 0;
  }
  for (uint64_t i = a1->properties; i; uint64_t i = i->next)
  {
    name = i->name;
    if (name && xmlStrEqual(name, str2)) {
      break;
    }
  }
  return i;
}

_xmlAttr *CXFindAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *str2)
{
  if (!a1) {
    return 0;
  }
  for (uint64_t i = a1->properties; i; uint64_t i = i->next)
  {
    name = i->name;
    if (name && xmlStrEqual(name, str2) && [(CXNamespace *)a2 containsAttribute:i]) {
      break;
    }
  }
  return i;
}

char *CXBoolValueFromString(unsigned __int8 *a1, char *a2)
{
  uint64_t result = a2;
  uint64_t v3 = 0;
  if (a2)
  {
    sfaxmlXmlCharToLong(a2, &v3);
    return (char *)(v3 != 0);
  }
  return result;
}

char *CXLongValueFromString(unsigned __int8 *a1, char *a2)
{
  uint64_t result = a2;
  uint64_t v3 = 0;
  if (a2)
  {
    sfaxmlXmlCharToLong(a2, &v3);
    return (char *)v3;
  }
  return result;
}

uint64_t CXLongValue(uint64_t a1, int a2)
{
  String = (char *)xmlNodeListGetString(*(xmlDocPtr *)(a1 + 64), *(const xmlNode **)(a1 + 24), 1);
  uint64_t v4 = CXLongValueFromString((uint64_t)String, String, a2);
  if (String) {
    xmlFree(String);
  }
  return v4;
}

id CXSplitValueAndUnit(void *a1, void *a2, _DWORD *a3)
{
  *a2 = 0;
  *a3 = 0;
  id v5 = [a1 stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
  id result = [v5 length];
  uint64_t v7 = result;
  if (result)
  {
    int v8 = (int)result;
    uint64_t v9 = 0;
    uint64_t v10 = ((void)result << 32) - 0x100000000;
    while (1)
    {
      unsigned int v11 = [v5 characterAtIndex:v10 >> 32];
      unsigned int v12 = v11;
      if (v11 <= 0x7F)
      {
        if ((_DefaultRuneLocale.__runetype[v11] & 0x100) != 0) {
          goto LABEL_9;
        }
      }
      else if (__maskrune(v11, 0x100uLL))
      {
        goto LABEL_9;
      }
      if (v12 != 37 && v12)
      {
LABEL_10:
        int v13 = v8 - v9;
        uint64_t v14 = v8 - (int)v9;
        id result = objc_msgSend(objc_msgSend(v5, "substringToIndex:", v13), "doubleValue");
        *a2 = v15;
        if (v9)
        {
          id result = CXUnitWithName((NSString *)[v5 substringFromIndex:v14]);
          *a3 = result;
        }
        return result;
      }
LABEL_9:
      ++v9;
      v10 -= 0x100000000;
      if (v7 == v9) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double CXUnitToPoint(int a1)
{
  int v1 = a1 - 6;
  if (a1 - 6) < 0xB && ((0x77Fu >> v1)) {
    return dbl_3455E8[v1];
  }
  [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:[NSString stringWithUTF8String:@"double CXUnitToPoint(CXUnit)"] file:[NSString stringWithUTF8String:@"/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCXmlUtilities.mm"] lineNumber:997 description:@"Unhandled attribute value unit"];
  return 1.0;
}

_xmlAttr *CXRequiredLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  id result = CXFindAttribute(a1, a2, a3);
  if (result)
  {
    return (_xmlAttr *)CXLongValue((uint64_t)result, 0);
  }
  return result;
}

_xmlAttr *CXRequiredLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, int a4)
{
  id result = CXFindAttribute(a1, a2, a3);
  if (result)
  {
    return (_xmlAttr *)CXLongValue((uint64_t)result, a4);
  }
  return result;
}

BOOL CXOptionalLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t *a4)
{
  id v5 = CXFindAttribute(a1, a2, a3);
  uint64_t v6 = v5;
  if (v5) {
    *a4 = CXLongValue((uint64_t)v5, 0);
  }
  return v6 != 0;
}

BOOL CXOptionalLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t *a4, int a5)
{
  uint64_t v7 = CXFindAttribute(a1, a2, a3);
  int v8 = v7;
  if (v7) {
    *a4 = CXLongValue((uint64_t)v7, a5);
  }
  return v8 != 0;
}

uint64_t CXDefaultLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  id v5 = CXFindAttribute(a1, a2, a3);
  if (!v5) {
    return a4;
  }

  return CXLongValue((uint64_t)v5, 0);
}

uint64_t CXDefaultLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4, int a5)
{
  uint64_t v7 = CXFindAttribute(a1, a2, a3);
  if (!v7) {
    return a4;
  }

  return CXLongValue((uint64_t)v7, a5);
}

uint64_t CXDefaultLongAttributeFromStream(_xmlTextReader *a1, CXNamespace *a2, const xmlChar *a3, uint64_t a4)
{
  AttributeNs = (char *)xmlTextReaderGetAttributeNs(a1, a3, (const xmlChar *)[(CXNamespace *)a2 uri]);
  if (AttributeNs)
  {
    uint64_t v6 = AttributeNs;
    uint64_t v8 = 0;
    sfaxmlXmlCharToLong(AttributeNs, &v8);
    a4 = v8;
    xmlFree(v6);
  }
  return a4;
}

unint64_t CXUnsignedLongValue(_xmlAttr *a1)
{
  unint64_t v4 = 0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  uint64_t v2 = String;
  if (String) {
    sfaxmlXmlCharToUnsignedLong((const char *)String, &v4);
  }
  xmlFree(v2);
  return v4;
}

_xmlAttr *CXRequiredUnsignedLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  id result = CXFindAttribute(a1, a2, a3);
  if (result)
  {
    return (_xmlAttr *)CXUnsignedLongValue(result);
  }
  return result;
}

BOOL CXOptionalUnsignedLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, unint64_t *a4)
{
  id v5 = CXFindAttribute(a1, a2, a3);
  uint64_t v6 = v5;
  if (v5) {
    *a4 = CXUnsignedLongValue(v5);
  }
  return v6 != 0;
}

unint64_t CXDefaultUnsignedLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  id v5 = CXFindAttribute(a1, a2, a3);
  if (!v5) {
    return a4;
  }

  return CXUnsignedLongValue(v5);
}

double CXFraction(NSString *a1)
{
  double v5 = 0.0;
  int v4 = 0;
  CXSplitValueAndUnit(a1, &v5, &v4);
  if (v4 == 13)
  {
    double v2 = v5;
    double v3 = 100.0;
  }
  else
  {
    double result = 0.0;
    if (v4) {
      return result;
    }
    double v2 = v5;
    double v3 = 100000.0;
  }
  return v2 / v3;
}

double CXRequiredFractionAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  double v3 = CXRequiredStringAttribute(a1, a2, a3);
  if (!v3) {
    return 0.0;
  }

  return CXFraction(&v3->_private);
}

_xmlAttr *CXRequiredStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  double result = CXFindAttribute(a1, a2, a3);
  if (result)
  {
    id v4 = [objc_alloc((Class)NSString) initWithValueOfXmlAttribute:result];
    return (_xmlAttr *)v4;
  }
  return result;
}

BOOL CXOptionalFractionAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double *a4)
{
  uint64_t v7 = 0;
  CXOptionalStringAttribute(a1, a2, a3, &v7, 1);
  double v5 = v7;
  if (v7) {
    *a4 = CXFraction(v7);
  }
  return v5 != 0;
}

BOOL CXOptionalStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString **a4)
{
  return CXOptionalStringAttribute(a1, a2, a3, a4, 1);
}

double CXDefaultFractionAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double a4)
{
  uint64_t v7 = 0;
  CXOptionalStringAttribute(a1, a2, a3, &v7, 1);
  double v5 = v7;
  if (!v7) {
    return a4;
  }

  return CXFraction(v5);
}

double CXDoubleValue(_xmlAttr *a1)
{
  double v4 = 0.0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  double v2 = String;
  if (String) {
    sfaxmlXmlCharToDouble((uint64_t)String, &v4);
  }
  xmlFree(v2);
  return v4;
}

double CXRequiredDoubleAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  double v3 = CXFindAttribute(a1, a2, a3);
  if (!v3) {
    return 0.0;
  }

  return CXDoubleValue(v3);
}

BOOL CXOptionalDoubleAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double *a4)
{
  double v5 = CXFindAttribute(a1, a2, a3);
  uint64_t v6 = v5;
  if (v5) {
    *a4 = CXDoubleValue(v5);
  }
  return v6 != 0;
}

double CXDefaultDoubleAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double a4)
{
  double v5 = CXFindAttribute(a1, a2, a3);
  if (!v5) {
    return a4;
  }

  return CXDoubleValue(v5);
}

uint64_t CXBoolValue(_xmlAttr *a1)
{
  unsigned __int8 v4 = 0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  double v2 = String;
  if (String) {
    sfaxmlXmlCharToBool(String, &v4);
  }
  xmlFree(v2);
  return v4;
}

_xmlAttr *CXRequiredBoolAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  double result = CXFindAttribute(a1, a2, a3);
  if (result)
  {
    return (_xmlAttr *)CXBoolValue(result);
  }
  return result;
}

BOOL CXOptionalBoolAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, BOOL *a4)
{
  double v5 = CXFindAttribute(a1, a2, a3);
  uint64_t v6 = v5;
  if (v5) {
    *a4 = CXBoolValue(v5);
  }
  return v6 != 0;
}

BOOL CXOptionalBoolAttributeFromStream(_xmlTextReader *a1, CXNamespace *a2, const xmlChar *a3, BOOL *a4)
{
  AttributeNs = (char *)xmlTextReaderGetAttributeNs(a1, a3, (const xmlChar *)[(CXNamespace *)a2 uri]);
  uint64_t v6 = AttributeNs;
  if (AttributeNs)
  {
    uint64_t v8 = 0;
    sfaxmlXmlCharToLong(AttributeNs, &v8);
    *a4 = v8 != 0;
    xmlFree(v6);
  }
  return v6 != 0;
}

uint64_t CXDefaultBoolAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  double v5 = CXFindAttribute(a1, a2, a3);
  if (!v5) {
    return a4;
  }

  return CXBoolValue(v5);
}

BOOL CXDefaultBoolAttributeFromStream(_xmlTextReader *a1, CXNamespace *a2, const xmlChar *a3, BOOL a4)
{
  AttributeNs = (char *)xmlTextReaderGetAttributeNs(a1, a3, (const xmlChar *)[(CXNamespace *)a2 uri]);
  if (AttributeNs)
  {
    uint64_t v6 = AttributeNs;
    uint64_t v8 = 0;
    sfaxmlXmlCharToLong(AttributeNs, &v8);
    a4 = v8 != 0;
    xmlFree(v6);
  }
  return a4;
}

_xmlAttr *CXRequiredBase64DecodedDataAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  double result = CXRequiredStringAttribute(a1, a2, a3);
  if (result)
  {
    return (_xmlAttr *)decodeBase64(&result->_private);
  }
  return result;
}

uint64_t decodeBase64(NSString *a1)
{
  if (((unint64_t)[(NSMutableString *)removeCRs(a1) length] & 3) == 0) {
    operator new[]();
  }
  return 0;
}

BOOL CXOptionalStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString **a4, int a5)
{
  uint64_t v7 = CXFindAttribute(a1, a2, a3);
  if (v7)
  {
    id v8 = [objc_alloc((Class)NSString) initWithValueOfXmlAttribute:v7];
    if (a5) {
      id v8 = v8;
    }
    *a4 = (NSString *)v8;
  }
  return v7 != 0;
}

NSString *CXDefaultStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString *a4)
{
  double v5 = CXFindAttribute(a1, a2, a3);
  if (!v5) {
    return a4;
  }
  id v6 = [objc_alloc((Class)NSString) initWithValueOfXmlAttribute:v5];

  return (NSString *)v6;
}

uint64_t CXBoolValue(_xmlNode *a1)
{
  unsigned __int8 v4 = 0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  double v2 = String;
  if (String) {
    sfaxmlXmlCharToBool(String, &v4);
  }
  xmlFree(v2);
  return v4;
}

BOOL CXChildOptionalBoolContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, BOOL *a4)
{
  double v5 = pCXFindChild(a1, a2, a3);
  id v6 = v5;
  if (v5) {
    *a4 = CXBoolValue(v5);
  }
  return v6 != 0;
}

uint64_t CXChildDefaultBoolContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  double v5 = pCXFindChild(a1, a2, a3);
  if (!v5) {
    return a4;
  }

  return CXBoolValue(v5);
}

double CXDoubleValue(_xmlNode *a1)
{
  double v4 = 0.0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  double v2 = String;
  if (String) {
    sfaxmlXmlCharToDouble((uint64_t)String, &v4);
  }
  xmlFree(v2);
  return v4;
}

BOOL CXChildOptionalDoubleContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double *a4)
{
  double v5 = pCXFindChild(a1, a2, a3);
  id v6 = v5;
  if (v5) {
    *a4 = CXDoubleValue(v5);
  }
  return v6 != 0;
}

double CXChildDefaultDoubleContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double a4)
{
  double v5 = pCXFindChild(a1, a2, a3);
  if (!v5) {
    return a4;
  }

  return CXDoubleValue(v5);
}

NSString *CXChildDefaultStringContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString *a4)
{
  double v5 = pCXFindChild(a1, a2, a3);
  if (!v5) {
    return a4;
  }
  id v6 = [objc_alloc((Class)NSString) initWithContentOfXmlNode:v5];

  return (NSString *)v6;
}

NSString *CXDefaultStringContent(_xmlNode *a1, NSString *a2)
{
  if (!a1) {
    return a2;
  }
  id v2 = [objc_alloc((Class)NSString) initWithContentOfXmlNode:a1];

  return (NSString *)v2;
}

xmlNode *CXNewTextNode(xmlChar *name, NSString *a2)
{
  double v3 = xmlNewNode(0, name);
  if (a2) {
    double v4 = [(NSString *)a2 xmlString];
  }
  else {
    double v4 = "";
  }
  double v5 = xmlNewText((const xmlChar *)v4);
  xmlAddChild(v3, v5);
  return v3;
}

xmlAttrPtr CXNewAttribute(_xmlNode *a1, const xmlChar *a2, NSString *a3)
{
  if (a3) {
    double v5 = [(NSString *)a3 xmlString];
  }
  else {
    double v5 = "";
  }

  return xmlNewProp(a1, a2, (const xmlChar *)v5);
}

BOOL CXNodeHasName(_xmlNode *a1, CXNamespace *a2, xmlChar *str2)
{
  if (!a1 || !xmlStrEqual(a1->name, str2)) {
    return 0;
  }

  return [(CXNamespace *)a2 containsNode:a1];
}

uint64_t decodeBase64Char(int a1)
{
  unsigned int v1 = a1 - 65;
  if (a1 == 47) {
    char v2 = 63;
  }
  else {
    char v2 = -1;
  }
  if (a1 == 61) {
    char v3 = 64;
  }
  else {
    char v3 = v2;
  }
  if (a1 == 43) {
    char v4 = 62;
  }
  else {
    char v4 = v3;
  }
  if ((a1 - 48) <= 9) {
    char v5 = a1 + 4;
  }
  else {
    char v5 = v4;
  }
  if ((a1 - 97) <= 0x19) {
    char v6 = a1 - 71;
  }
  else {
    char v6 = v5;
  }
  if (v1 > 0x19) {
    LOBYTE(v1) = v6;
  }
  return v1;
}

NSMutableString *removeCRs(NSString *a1)
{
  char v2 = +[NSMutableString stringWithCapacity:[(NSString *)a1 length]];
  char v3 = [(NSString *)a1 componentsSeparatedByString:@"\n"];
  NSUInteger v4 = [(NSArray *)v3 count];
  if (v4)
  {
    NSUInteger v5 = v4;
    for (uint64_t i = 0; i != v5; ++i)
      [(NSMutableString *)v2 appendString:[(NSArray *)v3 objectAtIndex:i]];
  }
  return v2;
}

id CXUnitWithName(NSString *a1)
{
  id v2 = (id)qword_573380;
  if (!qword_573380)
  {
    id v2 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1), @"f", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 2), @"fd", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 3), @"deg", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 5), @"rad", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 4), @"grad", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 6), @"pt", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 7), @"in", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 8), @"cm", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 9),
           @"mm",
           +[NSNumber numberWithInt:10],
           @"px",
           +[NSNumber numberWithInt:11],
           @"pc",
           +[NSNumber numberWithInt:11],
           @"pi",
           +[NSNumber numberWithInt:12],
           @"emu",
           +[NSNumber numberWithInt:13],
           @"%",
           0);
    qword_573380 = (uint64_t)v2;
  }
  id v3 = [v2 objectForKey:[a1 lowercaseString]];

  return [v3 intValue];
}

CFStringRef TCXmlStringForBool(int a1)
{
  if (a1) {
    return @"1";
  }
  else {
    return @"0";
  }
}

NSString *TCXmlStringForInt(uint64_t a1)
{
  return +[NSString stringWithFormat:@"%ld", a1];
}

id TCXmlStringForEnum(uint64_t a1, void *a2)
{
  return [a2 stringForValue:a1];
}

NSString *TCXmlStringForDouble(double a1)
{
  return +[NSString stringWithFormat:@"%g", *(void *)&a1];
}

void sub_1EACCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1EB8AC(uint64_t **a1, const xmlChar **a2, uint64_t a3, uint64_t **a4)
{
  char v6 = sub_1EB934((uint64_t)a1, &v10, a2);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    id v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x30uLL);
    void v7[4] = **a4;
    v7[5] = 0;
    sub_4355C(a1, v10, v8, v7);
  }
  return v7;
}

uint64_t *sub_1EB934(uint64_t a1, void *a2, const xmlChar **a3)
{
  NSUInteger v5 = (uint64_t *)(a1 + 8);
  NSUInteger v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        if ((xmlStrcmp(*a3, (const xmlChar *)v4[4]) & 0x80000000) == 0) {
          break;
        }
        NSUInteger v4 = (uint64_t *)*v7;
        NSUInteger v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if ((xmlStrcmp((const xmlChar *)v7[4], *a3) & 0x80000000) == 0) {
        break;
      }
      NSUInteger v5 = v7 + 1;
      NSUInteger v4 = (uint64_t *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

id PFXCommonApplePubCssPropertyNameWithCssPropertyName(const char *a1)
{
  return [objc_alloc((Class)NSString) initWithFormat:@"-ibooks-%s" a1];
}

id PFXCommonApplePubAttributeNameWithAttributeName(const char *a1)
{
  return [objc_alloc((Class)NSString) initWithFormat:@"ibooks:%s" a1];
}

void TCTaggedMessageStructure::TCTaggedMessageStructure(TCTaggedMessageStructure *this, NSString *a2)
{
  int v2 = dword_573390++;
  this->var0 = v2;
  this->var1 = a2;
}

{
  int v2;

  int v2 = dword_573390++;
  this->var0 = v2;
  this->var1 = a2;
}

void TCTaggedMessageStructure::~TCTaggedMessageStructure(TCTaggedMessageStructure *this)
{
}

{
}

TCMessageEntry *sub_1EC1AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a1) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "TCMessageEntry *createEntryForException(NSException *, ...)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCMessageContext.mm") lineNumber:527 description:@"All exceptions passed to TCMessageContext should be non-nil."];
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v10 = [a1 getEntry];
    id v11 = v10;
  }
  else
  {
    uint64_t v12 = TCUnknownProblemMessage;
    if (objc_msgSend(objc_msgSend(a1, "name"), "isEqualToString:", NSMallocException)) {
      int v13 = (unsigned int *)TCOutOfMemoryMessage;
    }
    else {
      int v13 = (unsigned int *)v12;
    }
    return [[TCMessageEntry alloc] initWithTag:*v13 affectedObject:0 text:*((void *)v13 + 1) parameters:&a9];
  }
  return (TCMessageEntry *)v10;
}

void sub_1EC838(void *a1)
{
  int v2 = *(void **)(a1[4] + 40);
  if (v2) {
    [v2 addWarning:[TSKWarning warningWithMessage:*a1[6] + 8]];
  }
  id v3 = [[TCMessageEntry alloc] initWithTag:*(unsigned int *)a1[6] affectedObject:a1[5] text:*(void *)(a1[6] + 8) parameters:a1[7]];
  [*(id *)(a1[4] + 8) addMessageEntry:v3];
}

uint64_t sub_1EC94C(void *a1)
{
  uint64_t result = *(void *)(a1[4] + 40);
  if (result)
  {
    uint64_t result = objc_opt_respondsToSelector();
    if (result)
    {
      uint64_t v3 = a1[5];
      NSUInteger v4 = *(void **)(a1[4] + 40);
      uint64_t v5 = a1[6];
      return (uint64_t)[v4 addIncompatibleMovieInfo:v3 withCompatibilityLevel:v5];
    }
  }
  return result;
}

uint64_t TCVerifyInputMeetsCondition(uint64_t result)
{
  if ((result & 1) == 0) {
    return (uint64_t)+[TCMessageException raise:TCInvalidFileFormatMessage];
  }
  return result;
}

void sub_1ED618(uint64_t a1, uint64_t a2)
{
}

void sub_1ED628(uint64_t a1)
{
}

NSNull *sub_1ED634(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 24) lastObject];
  int v2 = *(NSNull **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t result = +[NSNull null];
  if (v2 == result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = 0;
  }
  else
  {
    uint64_t result = (NSNull *)objc_opt_respondsToSelector();
    if ((result & 1) == 0)
    {
      objc_opt_class();
      uint64_t result = (NSNull *)objc_opt_isKindOfClass();
      if (result)
      {
        NSUInteger v4 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
        [v4 setInUse:1];
        uint64_t result = (NSNull *)[v4 key];
        *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
      }
    }
  }
  return result;
}

id sub_1ED778(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) addMessageEntry:*(void *)(a1 + 40)];
}

id sub_1ED7F8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) addMessageEntry:*(void *)(a1 + 40)];
}

id sub_1ED878(uint64_t a1)
{
  int v2 = *(NSNull **)(a1 + 32);
  if (!v2) {
    int v2 = +[NSNull null];
  }
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 24);

  return [v3 addObject:v2];
}

id sub_1ED93C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 24) count];
  if (result)
  {
    [*(id *)(*(void *)(a1 + 32) + 24) lastObject];
    if ((objc_opt_respondsToSelector() & 1) == 0) {
      +[NSNull null];
    }
    uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 24);
    return [v3 removeLastObject];
  }
  return result;
}

id sub_1EDA88(uint64_t a1)
{
  int v2 = objc_alloc_init(TCMessagePlaceholderInfo);
  [*(id *)(*(void *)(a1 + 32) + 24) addObject:v2];

  id result = [(TCMessagePlaceholderInfo *)v2 key];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_1EDB54(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 24) count];
  if (result)
  {
    id v3 = [*(id *)(*(void *)(a1 + 32) + 24) lastObject];
    if ([v3 isInUse]) {
      objc_msgSend(*(id *)(a1 + 32), "setObject:forPlaceholderKey:", *(void *)(a1 + 40), objc_msgSend(v3, "key"));
    }
    NSUInteger v4 = *(void **)(*(void *)(a1 + 32) + 24);
    return [v4 removeLastObject];
  }
  return result;
}

id sub_1EDC60(uint64_t a1)
{
  int v2 = +[NSNull null];
  id v3 = *(__CFString **)(a1 + 32);
  if (v3)
  {
    if (v3 == kTCMessageContext_NullObjectThatMakesWarningUnremovable) {
      goto LABEL_5;
    }
    int v2 = (NSNull *)[*(id *)(a1 + 32) identifier];
  }
  id v3 = (__CFString *)v2;
LABEL_5:
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void **)(*(void *)(a1 + 40) + 32);

  return [v5 setObject:v3 forKey:v4];
}

id sub_1EDD3C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 32) count];
  if (!result) {
    return result;
  }
  id v14 = [*(id *)(*(void *)(a1 + 32) + 8) copy];
  id v3 = [v14 objectEnumerator];
  id v4 = [v3 nextObject];
  if (!v4) {
    goto LABEL_17;
  }
  id v5 = v4;
  do
  {
    id v6 = [v5 affectedObjects];
    uint64_t v7 = (char *)[v6 count];
    if (!v7) {
      goto LABEL_16;
    }
    char v8 = 0;
    uint64_t v9 = v7 - 1;
    do
    {
      id v10 = (__CFString *)[v6 objectAtIndex:v9];
      if (v10 == kTCMessageContext_NullObjectThatMakesWarningUnremovable) {
        goto LABEL_11;
      }
      id v11 = (__CFString *)[*(id *)(*(void *)(a1 + 32) + 32) objectForKey:v10];
      if (!v11) {
        goto LABEL_13;
      }
      uint64_t v12 = v11;
      if (v11 != (__CFString *)+[NSNull null])
      {
        if (v12 != kTCMessageContext_NullObjectThatMakesWarningUnremovable)
        {
          [v6 replaceObjectAtIndex:v9 withObject:v12];
          goto LABEL_13;
        }
LABEL_11:
        [v6 removeObjectAtIndex:v9];
        char v8 = 1;
        goto LABEL_13;
      }
      [v6 removeObjectAtIndex:v9];
LABEL_13:
      --v9;
    }
    while (v9 != (char *)-1);
    if (!(([v6 count] != 0) | v8 & 1)) {
      [*(id *)(*(void *)(a1 + 32) + 8) removeObject:v5];
    }
LABEL_16:
    id v5 = [v3 nextObject];
  }
  while (v5);
LABEL_17:

  int v13 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v13 removeAllObjects];
}

void sub_1EE228()
{
}

void *sub_1EE24C(void *a1, void *a2)
{
  id result = a2;
  if (*a1)
  {
    id v5 = (uint64_t *)a1[1];
    if (!v5) {
      operator new();
    }
    id result = operator new(0x18uLL);
    result[2] = a2;
    uint64_t v6 = *v5;
    *id result = *v5;
    result[1] = v5;
    *(void *)(v6 + 8) = result;
    uint64_t *v5 = (uint64_t)result;
    ++v5[2];
  }
  else
  {
    *a1 = a2;
  }
  return result;
}

void sub_1EE434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1EE57C(uint64_t a1)
{
  *(void *)a1 = 0;
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    while (1)
    {
      uint64_t v2 = *(void *)(v2 + 8);
      if (v2 == *(void *)(a1 + 8)) {
        break;
      }
    }
    if (v2)
    {
      sub_1EE5FC((void *)v2);
      operator delete();
    }
  }
  return a1;
}

void *sub_1EE5FC(void *result)
{
  if (result[2])
  {
    unsigned int v1 = result;
    id result = (void *)result[1];
    uint64_t v2 = *v1;
    uint64_t v3 = *result;
    *(void *)(v3 + 8) = *(void *)(*v1 + 8);
    **(void **)(v2 + 8) = v3;
    v1[2] = 0;
    if (result != v1)
    {
      do
      {
        id v4 = (void *)result[1];
        operator delete(result);
        id result = v4;
      }
      while (v4 != v1);
    }
  }
  return result;
}

uint64_t sub_1EE660(uint64_t a1, const xmlChar **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 8;
  do
  {
    int v6 = xmlStrcmp(*(const xmlChar **)(v3 + 32), *a2);
    uint64_t v7 = (uint64_t *)(v3 + 8);
    if (v6 >= 0)
    {
      uint64_t v7 = (uint64_t *)v3;
      uint64_t v5 = v3;
    }
    uint64_t v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || xmlStrcmp(*a2, *(const xmlChar **)(v5 + 32)) < 0) {
    return v2;
  }
  return v5;
}

CFStringRef sub_1EE74C(uint64_t a1)
{
  return CFStringCreateWithFormat(0, 0, @"(xmlChar*)%s", a1);
}

uint64_t sub_1EE780(const xmlChar *a1, const xmlChar *a2)
{
  return xmlStrEqual(a1, a2);
}

uint64_t sub_1EE79C(const xmlChar *a1)
{
  unsigned int v1 = a1;
  unsigned int v2 = xmlStrlen(a1);
  if (v2 >= 0x11)
  {
    uint64_t v6 = 0;
    int v4 = v2;
    do
      int v4 = 257 * v4 + v1[v6++];
    while (v6 != 8);
    uint64_t v7 = -8;
    do
      int v4 = 257 * v4 + v1[v2 + v7++];
    while (v7);
  }
  else if (v2)
  {
    unsigned int v3 = v2;
    int v4 = v2;
    do
    {
      int v5 = *v1++;
      int v4 = 257 * v4 + v5;
      --v3;
    }
    while (v3);
  }
  else
  {
    int v4 = 0;
  }
  return ((v4 << v2) + v4);
}

void sub_1EE838(uint64_t a1, void *a2)
{
}

void sub_1EE84C(int a1, void *a2)
{
}

void sub_1EE854()
{
  qword_573B38 = 0;
  unk_573B40 = 0;
  TCXmlStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  qword_573B48 = (uint64_t)sub_1EE74C;
  qword_573B50 = (uint64_t)sub_1EE780;
  qword_573B58 = (uint64_t)sub_1EE79C;
  TCOwnedXmlStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  *(void *)algn_573B68 = 0;
  qword_573B70 = (uint64_t)sub_1EE838;
  unk_573B78 = sub_1EE74C;
  qword_573B80 = (uint64_t)sub_1EE780;
  unk_573B88 = sub_1EE79C;
  TCCStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  *(void *)algn_573B98 = 0;
  qword_573BA0 = 0;
  unk_573BA8 = sub_1EE74C;
  qword_573BB0 = (uint64_t)sub_1EE780;
  unk_573BB8 = sub_1EE79C;
  TCOwnedXmlStringValueCallBacks = kCFTypeDictionaryValueCallBacks.version;
  *(void *)algn_573BC8 = 0;
  qword_573BD0 = (uint64_t)sub_1EE838;
  unk_573BD8 = sub_1EE74C;
  qword_573BE0 = (uint64_t)sub_1EE780;
  TCOwnedNonPooledXmlStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  unk_573BF0 = 0;
  qword_573BF8 = (uint64_t)sub_1EE84C;
  unk_573C00 = sub_1EE74C;
  qword_573C08 = (uint64_t)sub_1EE780;
  unk_573C10 = sub_1EE79C;
  TCOwnedNonPooledXmlStringValueCallBacks = kCFTypeDictionaryValueCallBacks.version;
  unk_573C20 = 0;
  qword_573C28 = (uint64_t)sub_1EE84C;
  unk_573C30 = sub_1EE74C;
  qword_573C38 = (uint64_t)sub_1EE780;
}

CGFloat createFlippingAboutPoint@<D0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  CGAffineTransformMakeTranslation((CGAffineTransform *)a3, a4, a5);
  long long v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)&v18.a = *(_OWORD *)a3;
  *(_OWORD *)&v18.CC_MD5_CTX c = v10;
  *(_OWORD *)&v18.tdouble x = *(_OWORD *)(a3 + 32);
  double v11 = 1.0;
  if (a1) {
    double v12 = -1.0;
  }
  else {
    double v12 = 1.0;
  }
  if (a2) {
    double v11 = -1.0;
  }
  CGAffineTransformScale(&v19, &v18, v12, v11);
  long long v13 = *(_OWORD *)&v19.c;
  *(_OWORD *)a3 = *(_OWORD *)&v19.a;
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)&v19.tx;
  long long v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)&v17.a = *(_OWORD *)a3;
  *(_OWORD *)&v17.CC_MD5_CTX c = v14;
  *(_OWORD *)&v17.tdouble x = *(_OWORD *)(a3 + 32);
  CGAffineTransformTranslate(&v19, &v17, -a4, -a5);
  long long v15 = *(_OWORD *)&v19.c;
  *(_OWORD *)a3 = *(_OWORD *)&v19.a;
  *(_OWORD *)(a3 + 16) = v15;
  CGFloat result = v19.tx;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)&v19.tx;
  return result;
}

void getScaleFactorBetweenLengths(double a1, float a2)
{
  if (*(float *)&a1 == 0.0)
  {
    LODWORD(a1) = 1.0;
    if (a2 != 0.0) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler", a1) handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "float getScaleFactorBetweenLengths(float, float)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCAffineTransformUtils.mm") lineNumber:36 description:@"Trying to map a zero-length segment onto a nonzero-length one"];
    }
  }
}

double getScaleFactorsBetweenRects(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGFloat v11 = a5;
  float Width = CGRectGetWidth(*(CGRect *)&a1);
  v25.origin.double x = v11;
  v25.origin.double y = a6;
  v25.size.CGFloat width = a7;
  v25.size.CGFloat height = a8;
  double v16 = CGRectGetWidth(v25);
  float v17 = v16;
  *(float *)&double v16 = Width;
  getScaleFactorBetweenLengths(v16, v17);
  double v19 = v18;
  v26.origin.double x = a1;
  v26.origin.double y = a2;
  v26.size.CGFloat width = a3;
  v26.size.CGFloat height = a4;
  *(float *)&CGFloat v11 = CGRectGetHeight(v26);
  v27.origin.double x = a5;
  v27.origin.double y = a6;
  v27.size.CGFloat width = a7;
  v27.size.CGFloat height = a8;
  double Height = CGRectGetHeight(v27);
  float v21 = Height;
  LODWORD(Height) = LODWORD(v11);
  getScaleFactorBetweenLengths(Height, v21);
  return v19;
}

CGFloat mapSrcRectOntoDstRect@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  double ScaleFactorsBetweenRects = getScaleFactorsBetweenRects(a2, a3, a4, a5, a6, a7, a8, a9);
  CGFloat v31 = v18;
  CGFloat v32 = ScaleFactorsBetweenRects;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v37.origin.double x = a6;
  v37.origin.double y = a7;
  v37.size.CGFloat width = a8;
  v37.size.CGFloat height = a9;
  CGFloat MidX = CGRectGetMidX(v37);
  v38.origin.double x = a6;
  v38.origin.double y = a7;
  v38.size.CGFloat width = a8;
  v38.size.CGFloat height = a9;
  CGFloat MidY = CGRectGetMidY(v38);
  CGAffineTransformMakeTranslation((CGAffineTransform *)a1, MidX, MidY);
  long long v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v35.a = *(_OWORD *)a1;
  *(_OWORD *)&v35.CC_MD5_CTX c = v21;
  *(_OWORD *)&v35.tdouble x = *(_OWORD *)(a1 + 32);
  CGAffineTransformScale(&v36, &v35, v32, v31);
  long long v22 = *(_OWORD *)&v36.c;
  *(_OWORD *)a1 = *(_OWORD *)&v36.a;
  *(_OWORD *)(a1 + 16) = v22;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v36.tx;
  long long v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v34.a = *(_OWORD *)a1;
  *(_OWORD *)&v34.CC_MD5_CTX c = v23;
  *(_OWORD *)&v34.tdouble x = *(_OWORD *)(a1 + 32);
  CGFloat v24 = a2;
  *(CGFloat *)&long long v23 = a3;
  CGFloat v25 = a4;
  CGFloat v26 = a5;
  CGFloat v27 = -CGRectGetMidX(*(CGRect *)((char *)&v23 - 8));
  v39.origin.double x = a2;
  v39.origin.double y = a3;
  v39.size.CGFloat width = a4;
  v39.size.CGFloat height = a5;
  CGFloat v28 = CGRectGetMidY(v39);
  CGAffineTransformTranslate(&v36, &v34, v27, -v28);
  long long v29 = *(_OWORD *)&v36.c;
  *(_OWORD *)a1 = *(_OWORD *)&v36.a;
  *(_OWORD *)(a1 + 16) = v29;
  CGFloat result = v36.tx;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v36.tx;
  return result;
}

CGFloat rotateRectAboutCenterDeg@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, float a6@<S4>)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  CGFloat MidX = CGRectGetMidX(*(CGRect *)&a2);
  v27.origin.double x = a2;
  v27.origin.double y = a3;
  v27.size.CGFloat width = a4;
  v27.size.CGFloat height = a5;
  CGFloat MidY = CGRectGetMidY(v27);
  CGAffineTransformMakeTranslation((CGAffineTransform *)a1, MidX, MidY);
  long long v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v25.a = *(_OWORD *)a1;
  *(_OWORD *)&v25.CC_MD5_CTX c = v14;
  *(_OWORD *)&v25.tdouble x = *(_OWORD *)(a1 + 32);
  CGAffineTransformRotate(&v26, &v25, a6 * 3.14159265 / 180.0);
  long long v15 = *(_OWORD *)&v26.c;
  *(_OWORD *)a1 = *(_OWORD *)&v26.a;
  *(_OWORD *)(a1 + 16) = v15;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v26.tx;
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v24.a = *(_OWORD *)a1;
  *(_OWORD *)&v24.CC_MD5_CTX c = v16;
  *(_OWORD *)&v24.tdouble x = *(_OWORD *)(a1 + 32);
  CGFloat v17 = a2;
  *(CGFloat *)&long long v16 = a3;
  CGFloat v18 = a4;
  CGFloat v19 = a5;
  CGFloat v20 = -CGRectGetMidX(*(CGRect *)((char *)&v16 - 8));
  v28.origin.double x = a2;
  v28.origin.double y = a3;
  v28.size.CGFloat width = a4;
  v28.size.CGFloat height = a5;
  CGFloat v21 = CGRectGetMidY(v28);
  CGAffineTransformTranslate(&v26, &v24, v20, -v21);
  long long v22 = *(_OWORD *)&v26.c;
  *(_OWORD *)a1 = *(_OWORD *)&v26.a;
  *(_OWORD *)(a1 + 16) = v22;
  CGFloat result = v26.tx;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v26.tx;
  return result;
}

double transformRect(double *a1, double a2, double a3)
{
  if (a1[1] != 0.0) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:[NSString stringWithUTF8String:"CGRect transformRect(CGRect, CGAffineTransform)"] file:[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCAffineTransformUtils.mm"] lineNumber:73 description:&stru_46D7E8];
  }
  double v6 = a1[2];
  if (v6 != 0.0)
  {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGRect transformRect(CGRect, CGAffineTransform)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCAffineTransformUtils.mm") lineNumber:74 description:&stru_46D7E8];
    double v6 = a1[2];
  }
  return a1[4] + a3 * v6 + *a1 * a2;
}

double getTransformedSizeOf(double a1, double a2, float a3)
{
  memset(&v12, 0, sizeof(v12));
  CGAffineTransformMakeRotation(&v12, a3 * 3.14159265 / -180.0);
  float64x2_t v3 = vmulq_f64(*(float64x2_t *)&v12.c, (float64x2_t)0);
  float64x2_t v4 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_f64(v3, (float64x2_t)0, *(float64x2_t *)&v12.a));
  float64x2_t v5 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_n_f64(v3, *(float64x2_t *)&v12.a, a1));
  float64x2_t v6 = vmulq_n_f64(*(float64x2_t *)&v12.c, a2);
  float64x2_t v7 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_n_f64(v6, *(float64x2_t *)&v12.a, a1));
  float64x2_t v8 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_f64(v6, (float64x2_t)0, *(float64x2_t *)&v12.a));
  *(void *)&double result = *(_OWORD *)&vcvtq_f64_f32(vsub_f32(vcvt_f32_f64(vmaxnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vmaxnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vmaxnmq_f64(v4, v5))), v8))), v7)), vcvt_f32_f64(vminnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vminnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vminnmq_f64(v4, v5))), v8))), v7))));
  return result;
}

CGAffineTransform *getRotatedCorners(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5, float a6)
{
  double TransformedSizeOf = getTransformedSizeOf(a4, a5, a6);
  double v14 = v13;
  memset(&v48, 0, sizeof(v48));
  CGAffineTransformMakeTranslation(&v48, a4 * -0.5, a5 * -0.5);
  memset(&v47, 0, sizeof(v47));
  CGAffineTransformMakeRotation(&v47, a6 * 3.14159265 / -180.0);
  memset(&v46, 0, sizeof(v46));
  CGAffineTransformMakeTranslation(&v46, TransformedSizeOf * 0.5, v14 * 0.5);
  memset(&v45, 0, sizeof(v45));
  double result = CGAffineTransformMakeTranslation(&v45, a2, a3);
  uint64_t v16 = 0;
  double d = v48.d;
  uint64_t v18 = *(void *)&v48.b;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a4;
  *(void *)(a1 + 24) = 0;
  *(double *)(a1 + 32) = a4;
  *(double *)(a1 + 40) = a5;
  *(void *)(a1 + 48) = 0;
  *(double *)(a1 + 56) = a5;
  long long v19 = *(_OWORD *)&v45.c;
  double c = v46.c;
  double v21 = v46.d;
  double v22 = v47.c;
  double v23 = v47.d;
  double v24 = v48.c;
  float64x2_t v25 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v48.a, 0);
  float64x2_t v26 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v48.tx, 0);
  float64x2_t v27 = (float64x2_t)vdupq_lane_s64(v18, 0);
  float64x2_t v28 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v48.ty, 0);
  float64x2_t v29 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.a, 0);
  float64x2_t v30 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.tx, 0);
  float64x2_t v31 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.b, 0);
  float64x2_t v32 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.ty, 0);
  float64x2_t v33 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.a, 0);
  float64x2_t v34 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.tx, 0);
  float64x2_t v35 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.b, 0);
  float64x2_t v36 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.ty, 0);
  float64x2_t v37 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.a, 0);
  float64x2_t v38 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.tx, 0);
  float64x2_t v39 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.b, 0);
  float64x2_t v40 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.ty, 0);
  do
  {
    float v41 = (double *)(a1 + v16);
    float64x2x2_t v49 = vld2q_f64(v41);
    float64x2_t v42 = vmlaq_f64(vmulq_n_f64(v49.val[1], v24), v49.val[0], v25);
    v49.val[0] = vaddq_f64(v28, vmlaq_f64(vmulq_n_f64(v49.val[1], d), v49.val[0], v27));
    v49.val[1] = vaddq_f64(v26, v42);
    float64x2_t v43 = vmlaq_f64(vmulq_n_f64(v49.val[0], v22), v49.val[1], v29);
    v49.val[0] = vaddq_f64(v32, vmlaq_f64(vmulq_n_f64(v49.val[0], v23), v49.val[1], v31));
    v49.val[1] = vaddq_f64(v30, v43);
    float64x2_t v44 = vmlaq_f64(vmulq_n_f64(v49.val[0], c), v49.val[1], v33);
    v49.val[0] = vaddq_f64(v36, vmlaq_f64(vmulq_n_f64(v49.val[0], v21), v49.val[1], v35));
    v49.val[1] = vaddq_f64(v34, v44);
    v50.val[0] = vaddq_f64(v38, vmlaq_f64(vmulq_n_f64(v49.val[0], *(double *)&v19), v49.val[1], v37));
    v50.val[1] = vaddq_f64(v40, vmlaq_f64(vmulq_n_f64(v49.val[0], *((double *)&v19 + 1)), v49.val[1], v39));
    vst2q_f64(v41, v50);
    v16 += 32;
  }
  while (v16 != 64);
  return result;
}

uint64_t PFXHtmlStyleDisplayValue(PFSPropertySet *a1)
{
  id v1 = [(PFSPropertySet *)a1 valueForProperty:"display"];
  if (v1
    && (unsigned int v2 = v1, [v1 count])
    && (id v3 = [v2 lastObject], objc_msgSend(v3, "type") == &stru_108))
  {
    return objc_msgSend(objc_msgSend(v3, "value"), "isEqualToString:", @"none") ^ 1;
  }
  else
  {
    return 1;
  }
}

void *sub_1F000C(uint64_t **a1, const xmlChar **a2, uint64_t a3, void **a4)
{
  float64x2_t v6 = sub_1EB934((uint64_t)a1, &v10, a2);
  float64x2_t v7 = (void *)*v6;
  if (!*v6)
  {
    float64x2_t v8 = (uint64_t **)v6;
    float64x2_t v7 = operator new(0x30uLL);
    void v7[4] = **a4;
    *((unsigned char *)v7 + 40) = 0;
    sub_4355C(a1, v10, v8, v7);
  }
  return v7;
}

void sub_1F0450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

PFXString *PFXStringWithXmlString(const xmlChar *a1, uint64_t *a2)
{
  float64x2_t v8 = a1;
  if (!*a2) {
    operator new();
  }
  uint64_t v3 = sub_1EE660(*a2, &v8);
  if (*a2 + 8 != v3) {
    return *(PFXString **)(v3 + 40);
  }
  float64x2_t v5 = [PFXString alloc];
  float64x2_t v4 = [(PFXString *)v5 initWithXmlString:v8];
  [(PFXString *)v4 nsString];
  float64x2_t v6 = (uint64_t **)*a2;
  uint64_t v9 = &v8;
  sub_1EB8AC(v6, &v8, (uint64_t)&std::piecewise_construct, (uint64_t **)&v9)[5] = (uint64_t)v4;
  return v4;
}

PFXString *PFXAttributeNameWithXmlAttributeName(const unsigned __int8 *a1)
{
  return PFXStringWithXmlString(a1, &qword_5733D8);
}

void sub_1F24AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1F2558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1F2604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t xmlCharToI(unsigned __int8 *a1, uint64_t a2)
{
  unsigned int v2 = *a1;
  if (v2 >= (unsigned __int16)PFXCh0 && (unsigned __int16)PFXCh9 >= v2)
  {
    a2 = 0;
    float64x2_t v4 = a1 + 1;
    do
    {
      a2 = 10 * a2 - (unsigned __int16)PFXCh0 + (int)v2;
      unsigned int v5 = *v4++;
      unsigned int v2 = v5;
    }
    while (v5 >= (unsigned __int16)PFXCh0 && (unsigned __int16)PFXCh9 >= v2);
  }
  return a2;
}

uint64_t THImportLog()
{
  if (qword_573430 != -1) {
    dispatch_once(&qword_573430, &stru_45BF48);
  }
  return qword_573428;
}

void sub_1F3228(id a1)
{
  qword_573428 = (uint64_t)os_log_create("com.apple.iBooks", "TCPublication.Import");
}

const xmlChar *PFXBezierPathWithSvgPath(const xmlChar *result)
{
  if (result)
  {
    id v1 = result;
    if (xmlStrlen(result))
    {
      id v2 = objc_alloc_init((Class)TSDBezierPath);
      int v4 = *v1;
      LOBYTE(v3) = *v1;
      CGFloat v11 = (char *)(v1 + 1);
      if (v4)
      {
        do
        {
          int v5 = (char)v3;
          if ((v3 & 0x80) != 0) {
            __uint32_t v6 = __maskrune((char)v3, 0x4000uLL);
          }
          else {
            __uint32_t v6 = _DefaultRuneLocale.__runetype[(char)v3] & 0x4000;
          }
          while (!v6)
          {
            do
            {
              if (v5 < 76)
              {
                if (v5 == 67)
                {
                  sub_1F3480((const char **)&v11);
                  sub_1F34D4(&v11);
                  sub_1F3480((const char **)&v11);
                  sub_1F34D4(&v11);
                  [v2 curveToPoint:sub_1F3480((const char **)&v11)];
                }
              }
              else if (v5 > 76)
              {
                if (v5 == 122 || v5 == 90)
                {
                  [v2 closePath];
                  goto LABEL_29;
                }
                if (v5 == 77)
                {
                  [v2 moveToPoint:sub_1F3480((const char **)&v11)];
                  goto LABEL_29;
                }
              }
              else
              {
                [v2 lineToPoint:sub_1F3480((const char **)&v11)];
              }
              for (uint64_t i = v11; ; uint64_t i = ++v11)
              {
                __darwin_ct_rune_t v8 = *i;
                if (!(v8 < 0 ? __maskrune(v8, 0x4000uLL) : _DefaultRuneLocale.__runetype[v8] & 0x4000)) {
                  break;
                }
              }
              int v10 = *v11;
            }
            while (v10 == 44);
            if (!*v11) {
              break;
            }
            if ((char)v10 < 0) {
              __uint32_t v6 = __maskrune((char)v10, 0x100uLL);
            }
            else {
              __uint32_t v6 = _DefaultRuneLocale.__runetype[(char)v10] & 0x100;
            }
          }
LABEL_29:
          int v3 = *v11++;
        }
        while (v3);
      }
      return (const xmlChar *)v2;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1F342C(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);

    objc_end_catch();
    JUMPOUT(0x1F3400);
  }
  _Unwind_Resume(exception_object);
}

double sub_1F3480(const char **a1)
{
  float v2 = strtof(*a1, (char **)a1);
  sub_1F34D4((char **)a1);
  strtof(*a1, (char **)a1);
  return v2;
}

uint64_t sub_1F34D4(char **a1)
{
  for (uint64_t i = *a1; ; *a1 = i)
  {
    __darwin_ct_rune_t v3 = *i;
    __uint32_t v4 = v3 < 0 ? __maskrune(v3, 0x4000uLL) : _DefaultRuneLocale.__runetype[v3] & 0x4000;
    int v5 = *a1;
    if (!v4) {
      break;
    }
    uint64_t i = v5 + 1;
  }
  if (*v5 != 44) {
    goto LABEL_9;
  }
  while (1)
  {
    *a1 = ++v5;
LABEL_9:
    __darwin_ct_rune_t v6 = *v5;
    if (v6 < 0) {
      break;
    }
    uint64_t result = _DefaultRuneLocale.__runetype[v6] & 0x4000;
    if (!result) {
      return result;
    }
LABEL_11:
    int v5 = *a1;
  }
  uint64_t result = __maskrune(v6, 0x4000uLL);
  if (result) {
    goto LABEL_11;
  }
  return result;
}

const xmlChar *PFXBezierPathWithCssPathValue(NSArray *a1)
{
  if ((char *)[(NSArray *)a1 count] == (char *)&dword_0 + 1 {
    && (id v2 = -[NSArray lastObject](a1, "lastObject"), [v2 type] == (char *)&stru_108.addr + 2)
  }
    && (id v3 = [v2 value],
        (objc_msgSend(objc_msgSend(v3, "objectAtIndex:", 0), "isEqualToString:", @"svg-path(") & 1) != 0))
  {
    return PFXBezierPathWithSvgPath((const xmlChar *)objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(v3, "objectAtIndex:", 1), "objectAtIndex:", 0), "value"), "UTF8String"));
  }
  else
  {
    return 0;
  }
}

void sub_1F3944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL TCFloatEqual(float a1, float a2)
{
  float v2 = fabsf(a1) * 0.0000001;
  return vabds_f32(a1, a2) <= v2;
}

BOOL TCFloatEqualByEpsilon(float a1, float a2, float a3)
{
  return vabds_f32(a1, a2) <= a3;
}

BOOL TCDoubleEqual(double a1, double a2)
{
  return vabdd_f64(a1, a2) <= fabs(a1) * 0.0000001;
}

BOOL TCDoubleEqualByEpsilon(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) <= a3;
}

id TCObjectEqual(objc_object *a1, objc_object *a2)
{
  if (a1 == a2) {
    return &dword_0 + 1;
  }
  id result = 0;
  if (a1)
  {
    if (a2) {
      return [(objc_object *)a1 isEqual:a2];
    }
  }
  return result;
}

uint64_t TCIntegerHash(int a1)
{
  return (-1640531535 * a1);
}

id TCDefaultAuthorName(void)
{
  if (qword_573448 != -1) {
    dispatch_once(&qword_573448, &stru_45C058);
  }
  double v0 = (void *)qword_573440;

  return [v0 localizedStringForKey:@"Imported Author" value:&stru_46D7E8 table:@"TCCompatibility"];
}

uint64_t TCBundle()
{
  if (qword_573448 != -1) {
    dispatch_once(&qword_573448, &stru_45C058);
  }
  return qword_573440;
}

void sub_1F3FAC(id a1)
{
  qword_573440 = +[NSBundle bundleForClass:objc_opt_class()];
}

id TCRemoveFileSecurely(id result)
{
  if (result)
  {
    id v1 = result;
    id result = [result length];
    if (result)
    {
      uint64_t v2 = 0;
      return (id)[+[NSFileManager defaultManager] removeItemAtPath:v1 error:&v2];
    }
  }
  return result;
}

void PFSCssLexer::PFSCssLexer(PFSCssLexer *this, const char *a2, PFSStyleParserHandler *a3)
{
  uint64_t v4 = yyFlexLexer::yyFlexLexer((uint64_t)this, 0, 0);
  *(void *)uint64_t v4 = off_45C088;
  *(_DWORD *)(v4 + 28) = 1;
  *(void *)(v4 + 528) = a2;
  operator new();
}

void sub_1F421C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void PFSCssLexer::~PFSCssLexer(PFSCssLexer *this)
{
  *(void *)this = off_45C088;
  uint64_t v2 = *((void *)this + 68);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 69);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 67);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  yyFlexLexer::~yyFlexLexer(this);
}

{
  uint64_t vars8;

  PFSCssLexer::~PFSCssLexer(this);

  operator delete();
}

uint64_t PFSCssLexer::caller(PFSCssLexer *this)
{
  return *((void *)this + 70);
}

void *sub_1F43C0(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1F4474();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    __darwin_ct_rune_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    __darwin_ct_rune_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_1F4474()
{
}

uint64_t sub_1F448C(uint64_t a1, const std::string *a2, int a3)
{
  uint64_t v6 = std::streambuf::basic_streambuf();
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_DWORD *)(v6 + 96) = a3;
  std::string::operator=((std::string *)(v6 + 64), a2);
  sub_1F452C(a1);
  return a1;
}

void sub_1F4508(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 87) < 0) {
    operator delete(*v2);
  }
  std::streambuf::~streambuf();
  _Unwind_Resume(a1);
}

void sub_1F452C(uint64_t a1)
{
  *(void *)(a1 + 88) = 0;
  uint64_t v2 = (std::string *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 87);
  if (v3 < 0)
  {
    size_t v4 = *(std::string **)(a1 + 64);
    unint64_t v5 = *(void *)(a1 + 72);
  }
  else
  {
    size_t v4 = v2;
    unint64_t v5 = *(unsigned __int8 *)(a1 + 87);
  }
  int v6 = *(_DWORD *)(a1 + 96);
  if ((v6 & 8) != 0)
  {
    *(void *)(a1 + 88) = (char *)v4 + v5;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = (char *)v4 + v5;
  }
  if ((v6 & 0x10) != 0)
  {
    *(void *)(a1 + 88) = (char *)v4 + v5;
    std::string::size_type v7 = v3 < 0 ? (*(void *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1 : 22;
    std::string::resize(v2, v7, 0);
    uint64_t v8 = *(char *)(a1 + 87) < 0 ? *(void *)(a1 + 72) : *(unsigned __int8 *)(a1 + 87);
    *(void *)(a1 + 40) = v4;
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = (char *)v4 + v8;
    if ((*(unsigned char *)(a1 + 96) & 3) != 0)
    {
      if (v5 >> 31)
      {
        uint64_t v9 = ((v5 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
        unint64_t v10 = 0x7FFFFFFF * ((v9 + ((v5 - 0x80000000 - v9) >> 1)) >> 30);
        size_t v4 = (std::string *)((char *)v4 + v10 + 0x7FFFFFFF);
        unint64_t v5 = v5 - v10 - 0x7FFFFFFF;
        *(void *)(a1 + 48) = v4;
      }
      if (v5) {
        *(void *)(a1 + 48) = (char *)v4 + v5;
      }
    }
  }
}

void sub_1F47C0(id a1)
{
  qword_573450 = (uint64_t)[objc_alloc((Class)NSSet) initWithObjects:@"head", @"math", @"object", @"table", @"svg", 0];
}

void sub_1F50CC(_Unwind_Exception *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    if (!v2) {
      JUMPOUT(0x1F4FC0);
    }
    JUMPOUT(0x1F50A8);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1F5210(int a1, xmlTextReaderPtr *a2, NSObject *a3)
{
  int v4 = a1 - 2;
  unint64_t v5 = xmlTextReaderName(*a2);
  v6[0] = 67109634;
  v6[1] = v4;
  __int16 v7 = 2080;
  uint64_t v8 = "";
  __int16 v9 = 2080;
  unint64_t v10 = v5;
  _os_log_debug_impl(&dword_0, a3, OS_LOG_TYPE_DEBUG, "%*sending element %s", (uint8_t *)v6, 0x1Cu);
}

void sub_1F589C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1F59D8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1F58D0(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_1F5AD0(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(void *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_1F5958(uint64_t a1, void *a2)
{
  unint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    sub_1F6254((void **)a1);
    unint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = (void *)(v5 + 8 * (v4 >> 9));
  if (*(void *)(a1 + 16) == v5) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v6 + 8 * (v4 & 0x1FF);
  }
  if (v7 == *v6) {
    uint64_t v7 = *(v6 - 1) + 4096;
  }
  *(void *)(v7 - 8) = *a2;
  uint64_t v8 = *(void *)(a1 + 40) + 1;
  *(void *)(a1 + 32) = v4 - 1;
  *(void *)(a1 + 40) = v8;
}

uint64_t sub_1F59D8(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  char v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      char v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 256;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1F5A80((uint64_t)a1);
}

uint64_t sub_1F5A80(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void sub_1F5AD0(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int16 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      float64x2_t v34 = (char *)sub_4374C(v5, v33);
      float64x2_t v35 = &v34[8 * (v33 >> 2)];
      float64x2_t v37 = &v34[8 * v36];
      float64x2_t v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        float v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)float v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      __int16 v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_1F5DE8(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1F5F00((uint64_t)a1, &v54);
    float64x2_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    __int16 v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      float64x2_t v34 = (char *)sub_4374C((uint64_t)(a1 + 3), v46);
      float64x2_t v35 = &v34[8 * (v46 >> 2)];
      float64x2_t v37 = &v34[8 * v47];
      CGAffineTransform v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      float64x2_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  id v56 = a1 + 3;
  *(void *)&long long v54 = sub_4374C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  id v53 = operator new(0x1000uLL);
  sub_1F6020(&v54, &v53);
  float64x2_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1F6138((uint64_t)&v54, v27);
  }
  float64x2_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1F5D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1F5DE8(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      long long v19 = (char *)sub_4374C(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      float64x2_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_1F5F00(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_4374C(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_1F6020(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_4374C(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_1F6138(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_4374C(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_1F6254(void **a1)
{
  unint64_t v2 = a1[1];
  BOOL v3 = a1[2];
  unint64_t v4 = v3 - v2;
  if (v3 == v2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = ((v3 - v2) << 6) - 1;
  }
  uint64_t v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(void)a1[5]] < 0x200)
  {
    uint64_t v7 = (uint64_t)(a1 + 3);
    uint64_t v8 = a1[3];
    uint64_t v9 = *a1;
    uint64_t v10 = v8 - (unsigned char *)*a1;
    if (v4 >= v10)
    {
      if (v8 == v9) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = v10 >> 2;
      }
      unint64_t v46 = a1 + 3;
      __p = sub_4374C(v7, v11);
      float64x2_t v43 = (char *)__p;
      float64x2_t v44 = (char *)__p;
      uint64_t v45 = (char *)__p + 8 * v12;
      float v41 = operator new(0x1000uLL);
      sub_1F6020(&__p, &v41);
      uint64_t v13 = (char *)a1[1];
      uint64_t v14 = v44;
      if (v13 == a1[2])
      {
        unint64_t v33 = (char *)a1[1];
      }
      else
      {
        do
        {
          if (v14 == v45)
          {
            int64_t v15 = v43 - (unsigned char *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p) {
                unint64_t v23 = 1;
              }
              else {
                unint64_t v23 = (v14 - (unsigned char *)__p) >> 2;
              }
              uint64_t v24 = (char *)sub_4374C((uint64_t)v46, v23);
              uint64_t v26 = v43;
              uint64_t v14 = &v24[8 * (v23 >> 2)];
              uint64_t v27 = v44 - v43;
              if (v44 != v43)
              {
                uint64_t v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v28 = 8 * (v27 >> 3);
                float64x2_t v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  uint64_t v30 = *(void *)v26;
                  v26 += 8;
                  *(void *)float64x2_t v29 = v30;
                  v29 += 8;
                  v28 -= 8;
                }
                while (v28);
              }
              long long v31 = __p;
              __p = v24;
              float64x2_t v43 = &v24[8 * (v23 >> 2)];
              float64x2_t v44 = v14;
              uint64_t v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                uint64_t v14 = v44;
              }
            }
            else
            {
              uint64_t v16 = v15 >> 3;
              BOOL v17 = v15 >> 3 < -1;
              uint64_t v18 = (v15 >> 3) + 2;
              if (v17) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = v16 + 1;
              }
              uint64_t v20 = &v43[-8 * (v19 >> 1)];
              int64_t v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                uint64_t v14 = v43;
              }
              uint64_t v22 = &v14[-8 * (v19 >> 1)];
              uint64_t v14 = &v20[v21];
              float64x2_t v43 = v22;
              float64x2_t v44 = &v20[v21];
            }
          }
          uint64_t v32 = *(void *)v13;
          v13 += 8;
          *(void *)uint64_t v14 = v32;
          uint64_t v14 = v44 + 8;
          v44 += 8;
        }
        while (v13 != a1[2]);
        unint64_t v33 = (char *)a1[1];
      }
      uint64_t v36 = *a1;
      float64x2_t v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      __p = v36;
      float64x2_t v43 = v33;
      float64x2_t v38 = (char *)a1[3];
      uint64_t v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      float64x2_t v44 = v13;
      uint64_t v45 = v38;
      if (v14 - v37 == 8) {
        uint64_t v40 = 256;
      }
      else {
        uint64_t v40 = (uint64_t)a1[4] + 512;
      }
      a1[4] = (void *)v40;
      if (v13 != v33) {
        float64x2_t v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8];
      }
      if (v36) {
        operator delete(v36);
      }
    }
    else
    {
      if (v2 == v9)
      {
        __p = operator new(0x1000uLL);
        sub_1F5DE8(a1, &__p);
        float64x2_t v34 = a1[2];
        __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }
      else
      {
        __p = operator new(0x1000uLL);
      }
      sub_1F5F00((uint64_t)a1, &__p);
      if ((unsigned char *)a1[2] - (unsigned char *)a1[1] == 8) {
        uint64_t v35 = 256;
      }
      else {
        uint64_t v35 = (uint64_t)a1[4] + 512;
      }
      a1[4] = (void *)v35;
    }
  }
  else
  {
    a1[4] = v6 + 512;
    __p = (void *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    sub_1F5F00((uint64_t)a1, &__p);
  }
}

void sub_1F651C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  operator delete(v12);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1F6FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1F7490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1F7628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void sub_1F7C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  int64_t v21 = *(void **)v19;
  if (*(void *)v19)
  {
    *(void *)(v19 + 8) = v21;
    operator delete(v21);
  }
  _Unwind_Resume(exception_object);
}

void sub_1F7C80(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_1F7CD8(a1, *(void ***)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

void sub_1F7CD8(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      BOOL v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_1F7D24(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_1F7FB0(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_1F845C(a1 + 32, (unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  BOOL v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x38uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  long long v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)uint64_t v18 = 0;
  *((void *)i + 5) = 0;
  *((void *)i + 6) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_1F8504(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  uint64_t v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_38:
    *uint64_t v27 = i;
    goto LABEL_39;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    uint64_t v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_1F7F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_1F8750(v11, v10);
  _Unwind_Resume(a1);
}

unint64_t sub_1F7FB0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return sub_1F7FF0((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_1F7FF0(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      BOOL v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_1F839C(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_1F82F0(a2, a3);
  }
  else
  {
    return sub_1F81F8(a2, a3);
  }
}

unint64_t sub_1F81F8(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_1F82F0(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_1F839C(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_1F845C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_1F8504(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_1F85F4(a1, prime);
    }
  }
}

void sub_1F85F4(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_3D2B0();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      int v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            void *v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            int v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          int v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    int v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void sub_1F8750(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *sub_1F87B0(void *a1, uint64_t a2)
{
  int8x8_t v4 = (char *)operator new(0x38uLL);
  *(void *)int8x8_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *((_OWORD *)v4 + 1) = *(_OWORD *)a2;
  *((void *)v4 + 4) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 24);
  *((void *)v4 + 1) = sub_1F7FB0((uint64_t)(a1 + 3), (uint64_t)(v4 + 16));
  return sub_1F8864(a1, v4);
}

void sub_1F8848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_1F8750(v11, v10);
  _Unwind_Resume(a1);
}

void *sub_1F8864(void *a1, void *a2)
{
  int8x8_t v4 = (unsigned __int8 *)(a2 + 2);
  unint64_t v5 = sub_1F7FB0((uint64_t)(a1 + 3), (uint64_t)(a2 + 2));
  a2[1] = v5;
  uint64_t v6 = sub_1F88C8((uint64_t)a1, v5, v4);
  sub_1F8A3C(a1, a2, v6);
  return a2;
}

unsigned __int8 *sub_1F88C8(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6 = a1 + 32;
  float v7 = *(float *)(a1 + 32);
  unint64_t v8 = *(void *)(a1 + 8);
  float v9 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  if (!v8 || (float)(v7 * (float)v8) < v9)
  {
    BOOL v10 = 1;
    if (v8 >= 3) {
      BOOL v10 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v11 = v10 | (2 * v8);
    unint64_t v12 = vcvtps_u32_f32(v9 / v7);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    sub_1F8B24(a1, v13);
    unint64_t v8 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
  v14.i16[0] = vaddlv_u8(v14);
  unint64_t v15 = v14.u32[0];
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v16 = a2;
    if (v8 <= a2) {
      unint64_t v16 = a2 % v8;
    }
  }
  else
  {
    unint64_t v16 = (v8 - 1) & a2;
  }
  uint64_t v17 = *(unsigned __int8 **)(*(void *)a1 + 8 * v16);
  if (v17)
  {
    uint64_t v18 = *(unsigned __int8 **)v17;
    if (*(void *)v17)
    {
      int v19 = 0;
      do
      {
        unint64_t v20 = *((void *)v18 + 1);
        if (v15 > 1)
        {
          unint64_t v21 = *((void *)v18 + 1);
          if (v20 >= v8) {
            unint64_t v21 = v20 % v8;
          }
        }
        else
        {
          unint64_t v21 = v20 & (v8 - 1);
        }
        if (v21 != v16) {
          break;
        }
        int v22 = v20 == a2 ? sub_1F845C(v6, v18 + 16, a3) : 0;
        if (v19 & (v22 ^ 1)) {
          break;
        }
        v19 |= v22;
        uint64_t v17 = *(unsigned __int8 **)v17;
        uint64_t v18 = *(unsigned __int8 **)v17;
      }
      while (*(void *)v17);
    }
  }
  return v17;
}

void *sub_1F8A3C(void *result, void *a2, void *a3)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(void *)(*result + 8 * v4) = result + 2;
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
LABEL_18:
    *(void *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
    if (v6 != v4) {
      goto LABEL_18;
    }
  }
LABEL_19:
  ++result[3];
  return result;
}

void sub_1F8B24(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_1F8C14(a1, prime);
    }
  }
}

void sub_1F8C14(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_3D2B0();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(unsigned __int8 ***)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = (unint64_t)v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      unint64_t v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unint64_t v12 = *v7;
      if (*v7)
      {
        unint64_t v18 = v9.u32[0];
        do
        {
          unint64_t v13 = *((void *)v12 + 1);
          if (v10 > 1)
          {
            if (v13 >= a2) {
              v13 %= a2;
            }
          }
          else
          {
            v13 &= a2 - 1;
          }
          if (v13 == v8)
          {
            uint64_t v7 = (unsigned __int8 **)v12;
          }
          else if (*(void *)(*(void *)a1 + 8 * v13))
          {
            uint8x8_t v14 = *(unsigned __int8 **)v12;
            if (*(void *)v12)
            {
              unint64_t v15 = v12;
              while (1)
              {
                int v16 = sub_1F845C(a1 + 32, v12 + 16, v14 + 16);
                uint64_t v17 = *(unsigned __int8 **)v15;
                if (!v16) {
                  break;
                }
                uint8x8_t v14 = *(unsigned __int8 **)v17;
                unint64_t v15 = *(unsigned __int8 **)v15;
                if (!*(void *)v17) {
                  goto LABEL_32;
                }
              }
              uint8x8_t v14 = *(unsigned __int8 **)v15;
              uint64_t v17 = v15;
LABEL_32:
              unint64_t v10 = v18;
            }
            else
            {
              uint64_t v17 = v12;
            }
            *uint64_t v7 = v14;
            *(void *)uint64_t v17 = **(void **)(*(void *)a1 + 8 * v13);
            **(void **)(*(void *)a1 + 8 * v13) = v12;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v13) = v7;
            uint64_t v7 = (unsigned __int8 **)v12;
            unint64_t v8 = v13;
          }
          unint64_t v12 = *v7;
        }
        while (*v7);
      }
    }
  }
  else
  {
    unint64_t v11 = *(void **)a1;
    *(void *)a1 = 0;
    if (v11) {
      operator delete(v11);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void *sub_1F8DE4(void *a1, long long *a2)
{
  int8x8_t v4 = operator new(0x30uLL);
  long long v5 = *a2;
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a2 + 2) = 0;
  void *v4 = 0;
  v4[1] = 0;
  *((_OWORD *)v4 + 1) = v5;
  void v4[4] = v6;
  void v4[5] = v7;
  v4[1] = sub_1F7FB0((uint64_t)(a1 + 3), (uint64_t)(v4 + 2));
  return sub_1F8864(a1, v4);
}

void sub_1F8E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_1F8750(v11, v10);
  _Unwind_Resume(a1);
}

void *sub_1F8E90(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_1F8F44(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    unint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (void *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7) {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x28uLL);
  void *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  i[4] = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_1F8504(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  unint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *i = *v20;
LABEL_38:
    *unint64_t v20 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v21 = *(void *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    unint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1F9154(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1F9168(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_1F91AC(a1, a2, (uint64_t)&__p);
  unint64_t v3 = __p;
  __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *sub_1F91AC@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  uint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    unint64_t v7 = v6;
    uint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *unint64_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_1F92E0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1F4474();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

unsigned __int8 *sub_1F9368(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_1F7FB0((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  uint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  unint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if (sub_1F845C(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      unint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

uint64_t sub_1F946C(uint64_t a1)
{
  sub_1F7CD8(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1F94A8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      int8x8_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

unsigned __int8 *sub_1F94F4(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_1F9368(a1, a2);
  int8x8_t v5 = v4;
  if (v4)
  {
    uint64_t v6 = (uint64_t)(a1 + 4);
    uint8x8_t v7 = v4;
    do
      uint8x8_t v7 = *(unsigned __int8 **)v7;
    while (v7 && (sub_1F845C(v6, v7 + 16, a2) & 1) != 0);
  }
  return v5;
}

void sub_1F9644(void *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2 == 2)
  {
    id v16 = objc_begin_catch(exc_buf);
    uint64_t v17 = PFSSemanticException;
    [v16 name];
    [v16 reason];
    +[NSDictionary dictionaryWithObjectsAndKeys:v17];
    objc_end_catch();
    JUMPOUT(0x1F9608);
  }
  objc_begin_catch(exc_buf);
  objc_exception_rethrow();
}

void sub_1F96E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  objc_end_catch();
  PFSStyleParserHandler::~PFSStyleParserHandler((id *)va);
  _Unwind_Resume(a1);
}

uint64_t PFSStyleParserHandler::dictionary(PFSStyleParserHandler *this)
{
  return *((void *)this + 4);
}

uint64_t PFSStyleParserHandler::fonts(PFSStyleParserHandler *this)
{
  return *((void *)this + 6);
}

uint64_t PFSStyleParserHandler::errMsg(PFSStyleParserHandler *this)
{
  return *((void *)this + 9);
}

void PFSStyleParserHandler::PFSStyleParserHandler(PFSStyleParserHandler *this, const char *a2, NSURL *a3, PFSPageCache *a4)
{
}

void sub_1F9A24()
{
}

void PFSStyleParserHandler::~PFSStyleParserHandler(id *this)
{
  id v2 = *this;
  if (v2)
  {
    (*(void (**)(id))(*(void *)v2 + 8))(v2);
    *this = 0;
  }
}

uint64_t PFSStyleParserHandler::currentDictionary(PFSStyleParserHandler *this)
{
  return *((void *)this + 5);
}

NSMutableDictionary *PFSStyleParserHandler::setCurrentDictionary(NSMutableDictionary *this, NSMutableDictionary *a2)
{
  isa = (NSMutableDictionary *)this[5].super.super.isa;
  if (isa != a2)
  {
    unint64_t v4 = this;

    this = a2;
    v4[5].super.super.isa = (Class)this;
  }
  return this;
}

uint64_t PFSStyleParserHandler::currentFontDictionary(PFSStyleParserHandler *this)
{
  return *((void *)this + 7);
}

NSMutableDictionary *PFSStyleParserHandler::setCurrentFontDictionary(NSMutableDictionary *this, NSMutableDictionary *a2)
{
  isa = (NSMutableDictionary *)this[7].super.super.isa;
  if (isa != a2)
  {
    unint64_t v4 = this;

    this = a2;
    v4[7].super.super.isa = (Class)this;
  }
  return this;
}

id PFSStyleParserHandler::setErrMsg(id *this, const char *a2)
{
  id result = [objc_alloc((Class)NSString) initWithUTF8String:a2];
  this[9] = result;
  return result;
}

uint64_t PFSStyleParserHandler::lexer(PFSStyleParserHandler *this)
{
  return *(void *)this;
}

void PFSStyleParserHandler::importHandler(PFSStyleParserHandler *this, NSString *a2, NSArray *a3)
{
  if (!a3
    || ![(NSArray *)a3 count]
    || +[PFSStyleParser mediaListIncludesScreen:a3])
  {
    id v6 = +[PFXCommon dataWithContentsOfURLString:a2 sourceUrl:*((void *)this + 8)];
    if (v6)
    {
      uint8x8_t v7 = v6;
      if ([v6 length])
      {
        id v8 = objc_alloc_init((Class)NSMutableDictionary);
        id v9 = objc_alloc_init((Class)NSMutableDictionary);
        +[PFSStyleParser parseCSSFrom:intoDict:fontDict:sourceUrl:pageCache:](PFSStyleParser, "parseCSSFrom:intoDict:fontDict:sourceUrl:pageCache:", [v7 bytes], v8, v9, *((void *)this + 8), *((void *)this + 1));
        +[PFSStyleParser mergeCSSDict:v8 intoCSSDict:*((void *)this + 4)];
        +[PFSStyleParser mergeFontDict:v9 intoFontDict:*((void *)this + 6)];
      }
    }
  }
}

BOOL PFSStyleParserHandler::startMediaHandler(PFSStyleParserHandler *this, NSArray *a2)
{
  BOOL result = +[PFSStyleParser mediaListIncludesScreen:a2];
  if (!result) {
    *((unsigned char *)this + 88) = 1;
  }
  return result;
}

uint64_t PFSStyleParserHandler::endMediaHandler(uint64_t this, NSArray *a2)
{
  *(unsigned char *)(this + 88) = 0;
  return this;
}

id *PFSStyleParserHandler::startMasterPageHandler(id *this, NSString *a2, NSString *a3)
{
  if (!a3)
  {
    int8x8_t v3 = this;
    this = (id *)[this[1] addMasterPageWithName:a2];
    v3[2] = this;
  }
  return this;
}

uint64_t PFSStyleParserHandler::endMasterPageHandler(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

id PFSStyleParserHandler::startRegularPageHandler(id *this)
{
  id result = [this[1] addPage];
  this[2] = result;
  return result;
}

uint64_t PFSStyleParserHandler::endRegularPageHandler(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

id PFSStyleParserHandler::startSlotHandler(id *this, NSString *a2)
{
  id result = [this[2] addSlotWithId:a2];
  this[3] = result;
  return result;
}

uint64_t PFSStyleParserHandler::endSlotHandler(uint64_t this)
{
  *(void *)(this + 24) = 0;
  return this;
}

void PFSStyleParserHandler::positionedSlotsHandler(id *this, NSArray *a2)
{
  id v4 = [objc_alloc((Class)NSMutableSet) initWithCapacity:-[NSArray count](a2, "count")];
  if ([(NSArray *)a2 count])
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v5 = [(NSArray *)a2 countByEnumeratingWithState:&v20 objects:v25 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v21;
      do
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v21 != v7) {
            objc_enumerationMutation(a2);
          }
          id v9 = *(void **)(*((void *)&v20 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            [v4 addObject:v9];
          }
          else
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              [this[2] addFlow:v9];
              [v4 addObjectsFromArray:[v9 subarrayWithRange:0, [v9 count] - 1]];
            }
          }
        }
        id v6 = [(NSArray *)a2 countByEnumeratingWithState:&v20 objects:v25 count:16];
      }
      while (v6);
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v10 = objc_msgSend(objc_msgSend(this[2], "slots", 0), "allKeys");
    id v11 = [v10 countByEnumeratingWithState:&v16 objects:v24 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v17;
      do
      {
        for (uint64_t j = 0; j != v12; uint64_t j = (char *)j + 1)
        {
          if (*(void *)v17 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void *)(*((void *)&v16 + 1) + 8 * (void)j);
          if (([v4 containsObject:v15] & 1) == 0) {
            objc_msgSend(objc_msgSend(this[2], "slots"), "removeObjectForKey:", v15);
          }
        }
        id v12 = [v10 countByEnumeratingWithState:&v16 objects:v24 count:16];
      }
      while (v12);
    }
  }
  else
  {
    objc_msgSend(objc_msgSend(this[2], "slots"), "removeAllObjects");
  }
}

void PFSStyleParserHandler::startFontFaceHandler(NSMutableDictionary *this)
{
  id v2 = (NSMutableDictionary *)objc_alloc_init((Class)NSMutableDictionary);
  PFSStyleParserHandler::setCurrentFontDictionary(this, v2);
}

NSMutableDictionary *PFSStyleParserHandler::endFontFaceHandler(NSMutableDictionary *this)
{
  objc_opt_class();
  [(objc_class *)this[7].super.super.isa objectForKey:@"font-weight"];
  uint64_t v2 = TSUDynamicCast();
  if (v2 && (v3 = (void *)v2, objc_opt_class(), [v3 lastObject], (uint64_t v4 = TSUDynamicCast()) != 0))
  {
    +[PFSUtilities fontWeightFromHtmlStr:v4 parentWeight:400.0];
    double v6 = v5;
  }
  else
  {
    double v6 = 400.0;
  }
  objc_opt_class();
  [(objc_class *)this[7].super.super.isa objectForKey:@"font-style"];
  uint64_t v7 = TSUDynamicCast();
  if (v7)
  {
    id v8 = (void *)v7;
    objc_opt_class();
    [v8 lastObject];
    CFStringRef v9 = +[PFSUtilities identValueOrNilFromPair:TSUDynamicCast()];
  }
  else
  {
    CFStringRef v9 = @"normal";
  }
  objc_opt_class();
  [(objc_class *)this[7].super.super.isa objectForKey:@"font-family"];
  uint64_t v10 = TSUDynamicCast();
  if (v10)
  {
    id v11 = (void *)v10;
    objc_opt_class();
    [v11 lastObject];
    id v12 = (void *)TSUDynamicCast();
    if ([v12 type] == &stru_108 || objc_msgSend(v12, "type") == (char *)&stru_B8.reserved3 + 3)
    {
      id v13 = [v12 stringValue];
      if (v13)
      {
        float v14 = +[NSMutableString stringWithString:v13];
        uint64_t v15 = v14;
        if (v6 != -65536.0) {
          [(NSMutableString *)v14 appendFormat:@"%f", *(void *)&v6];
        }
        if (v9) {
          [(NSMutableString *)v15 appendString:v9];
        }
        id v16 = [objc_alloc((Class)NSDictionary) initWithObjectsAndKeys:this[7].super.super.isa, v15, 0];
        +[PFSStyleParser mergeFontDict:v16 intoFontDict:this[6].super.super.isa];
      }
    }
  }

  return PFSStyleParserHandler::setCurrentFontDictionary(this, 0);
}

void PFSStyleParserHandler::startSelectorHandler(NSMutableDictionary *this, NSArray *a2)
{
  if (!LOBYTE(this[11].super.super.isa))
  {
    uint64_t v7 = (NSMutableDictionary *)objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v4 = [(NSArray *)a2 objectEnumerator];
    id v5 = [(NSEnumerator *)v4 nextObject];
    if (v5)
    {
      id v6 = v5;
      do
      {
        [v6 freeze];
        [(NSMutableDictionary *)v7 setObject:+[NSMutableDictionary dictionary] forKey:v6];
        id v6 = [(NSEnumerator *)v4 nextObject];
      }
      while (v6);
    }
    PFSStyleParserHandler::setCurrentDictionary(this, v7);
  }
}

NSMutableDictionary *PFSStyleParserHandler::endSelectorHandler(NSMutableDictionary *this, NSArray *a2)
{
  if (!LOBYTE(this[11].super.super.isa))
  {
    uint64_t v2 = this;
    +[PFSStyleParser mergeCSSDict:v2[5].super.super.isa intoCSSDict:v2[4].super.super.isa];
    return PFSStyleParserHandler::setCurrentDictionary(v2, 0);
  }
  return this;
}

id PFSStyleParserHandler::propertyHandler(PFSStyleParserHandler *this, const char *a2, NSArray *a3)
{
  id v6 = (void *)*((void *)this + 3);
  if (v6)
  {
    return [v6 addPropertyValue:a3 forProperty:a2];
  }
  id result = (id)*((void *)this + 2);
  if (result)
  {
    id v8 = [result properties];
    CFStringRef v9 = +[NSString stringWithUTF8String:a2];
    uint64_t v10 = v8;
LABEL_7:
    return [v10 setObject:a3 forKey:v9];
  }
  if (!*((void *)this + 5))
  {
    if (!*((void *)this + 7)) {
      return result;
    }
    CFStringRef v9 = +[NSString stringWithUTF8String:a2];
    uint64_t v10 = (void *)*((void *)this + 7);
    goto LABEL_7;
  }
  id v11 = +[NSString stringWithUTF8String:a2];
  id v12 = objc_msgSend(objc_msgSend(*((id *)this + 5), "allKeys"), "objectEnumerator");
  id result = [v12 nextObject];
  if (result)
  {
    id v13 = result;
    do
    {
      objc_msgSend(objc_msgSend(*((id *)this + 5), "objectForKey:", v13), "setObject:forKey:", a3, v11);
      id result = [v12 nextObject];
      id v13 = result;
    }
    while (result);
  }
  return result;
}

uint64_t PFSStyleParserHandler::nextSelectorParseIndex(PFSStyleParserHandler *this)
{
  uint64_t v1 = *((void *)this + 10);
  *((void *)this + 10) = v1 + 1;
  return v1;
}

id PFSStyleParserHandler::newFullUri(PFSStyleParserHandler *this, NSString *a2)
{
  return +[PFSStyleParser newFullUri:a2 sourceUrl:*((void *)this + 8)];
}

void PFSStyleSimpleSelector::PFSStyleSimpleSelector(PFSStyleSimpleSelector *this)
{
  *(void *)this = this;
  *((void *)this + 1) = this;
  *((_OWORD *)this + 1) = xmmword_345750;
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
}

{
  *(void *)this = this;
  *((void *)this + 1) = this;
  *((_OWORD *)this + 1) = xmmword_345750;
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
}

void PFSStyleSimpleSelector::~PFSStyleSimpleSelector(PFSStyleSimpleSelector *this)
{
  for (uint64_t i = *((void *)this + 1); (PFSStyleSimpleSelector *)i != this; uint64_t i = *(void *)(i + 8))
    free(*(void **)(i + 16));
  sub_1EE5FC(this);
}

uint64_t PFSStyleSimpleSelector::freeze(uint64_t this)
{
  *(unsigned char *)(this + 32) = 1;
  return this;
}

uint64_t PFSStyleSimpleSelector::specificity(PFSStyleSimpleSelector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t PFSStyleSimpleSelector::hash(PFSStyleSimpleSelector *this)
{
  return *((void *)this + 3);
}

uint64_t PFSStyleSimpleSelector::frozen(PFSStyleSimpleSelector *this)
{
  return *((unsigned __int8 *)this + 32);
}

void *PFSStyleSimpleSelector::setElement(PFSStyleSimpleSelector *this, char *__s)
{
  return sub_1FA73C((uint64_t *)this, 33, __s, 1);
}

void *sub_1FA73C(uint64_t *a1, char a2, char *__s, char a4)
{
  size_t v8 = strlen(__s);
  uint64_t v9 = a1[3];
  if (v8)
  {
    uint64_t v10 = __s;
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v9 = 16777619 * (v9 ^ v11);
      --v8;
    }
    while (v8);
  }
  a1[3] = v9;
  *((_DWORD *)a1 + 9) += 1 << (8 * a4);
  size_t v12 = strlen(__s);
  id v13 = (char *)malloc_type_malloc(v12 + 2, 0x25203452uLL);
  *id v13 = a2;
  strcpy(v13 + 1, __s);
  float v14 = a1;
  while (1)
  {
    float v14 = (uint64_t *)v14[1];
    if (v14 == a1) {
      break;
    }
    if (strcmp(v13, (const char *)v14[2]) < 0)
    {
      id result = operator new(0x18uLL);
      result[2] = v13;
      uint64_t v16 = *v14;
      *(void *)(v16 + 8) = result;
      *id result = v16;
      *float v14 = (uint64_t)result;
      result[1] = v14;
      goto LABEL_9;
    }
  }
  id result = operator new(0x18uLL);
  result[2] = v13;
  uint64_t v17 = *a1;
  *(void *)(v17 + 8) = result;
  *a1 = (uint64_t)result;
  *id result = v17;
  result[1] = a1;
LABEL_9:
  ++a1[2];
  return result;
}

void *PFSStyleSimpleSelector::addHashIdentifier(PFSStyleSimpleSelector *this, char *__s)
{
  return sub_1FA73C((uint64_t *)this, 35, __s, 3);
}

void *PFSStyleSimpleSelector::addPseudoClass(PFSStyleSimpleSelector *this, NSString *a2)
{
  int8x8_t v3 = [(NSString *)a2 UTF8String];

  return sub_1FA73C((uint64_t *)this, 37, v3, 2);
}

void *PFSStyleSimpleSelector::addAttrib(PFSStyleSimpleSelector *this, char *__s)
{
  return sub_1FA73C((uint64_t *)this, 36, __s, 2);
}

uint64_t *PFSStyleSimpleSelector::addClass(uint64_t *this, char *__s)
{
  if (*__s) {
    return sub_1FA73C(this, 46, __s, 2);
  }
  return this;
}

BOOL PFSStyleSimpleSelector::isEqualTo(PFSStyleSimpleSelector *this, const PFSStyleSimpleSelector *a2)
{
  if (*((void *)this + 3) != *((void *)a2 + 3)) {
    return 0;
  }
  uint64_t v4 = a2;
  id v5 = this;
  while (1)
  {
    id v5 = (PFSStyleSimpleSelector *)*((void *)v5 + 1);
    uint64_t v4 = (const PFSStyleSimpleSelector *)*((void *)v4 + 1);
    if (v5 == this || v4 == a2) {
      break;
    }
    if (strcmp(*((const char **)v5 + 2), *((const char **)v4 + 2))) {
      return 0;
    }
  }
  return v5 == this && v4 == a2;
}

BOOL PFSStyleSimpleSelector::isSubsetOf(PFSStyleSimpleSelector *this, const PFSStyleSimpleSelector *a2)
{
  uint64_t v4 = a2;
  id v5 = this;
LABEL_2:
  id v5 = (PFSStyleSimpleSelector *)*((void *)v5 + 1);
  if (v5 != this)
  {
    while (1)
    {
      uint64_t v4 = (const PFSStyleSimpleSelector *)*((void *)v4 + 1);
      if (v4 == a2) {
        break;
      }
      id v6 = (const char *)*((void *)v4 + 2);
      uint64_t v7 = (const char *)*((void *)v5 + 2);
      if ((strcmp(v6, v7) & 0x80000000) == 0)
      {
        if ((strcmp(v7, v6) & 0x80000000) == 0) {
          goto LABEL_2;
        }
        return v5 == this;
      }
    }
  }
  return v5 == this;
}

char *sub_1FC1B8(uint64_t a1, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = __src;
  if (a3)
  {
    id v5 = a4;
    uint64_t v10 = *(void *)(a1 + 16);
    uint64_t v8 = a1 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = *(char **)(v8 - 8);
    if (a3 <= (v10 - (uint64_t)v11) >> 3)
    {
      uint64_t v18 = v11 - __src;
      if (a3 <= (v11 - __src) >> 3)
      {
        long long v21 = *(char **)(v8 - 8);
        uint64_t v20 = a3;
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = v18 >> 3;
        long long v21 = &v11[8 * (a3 - (v18 >> 3))];
        do
        {
          *(void *)&v11[v19] = *(void *)a4;
          v19 += 8;
        }
        while (8 * a3 - 8 * v20 != v19);
        *(void *)(a1 + 8) = v21;
        if (v11 == __src) {
          return v4;
        }
      }
      long long v22 = &__src[8 * a3];
      long long v23 = &v21[-8 * a3];
      unint64_t v24 = v21;
      if (v23 < v11)
      {
        unint64_t v24 = v21;
        do
        {
          uint64_t v25 = *(void *)v23;
          v23 += 8;
          *(void *)unint64_t v24 = v25;
          v24 += 8;
        }
        while (v23 < v11);
      }
      *(void *)(a1 + 8) = v24;
      if (v21 != v22) {
        memmove(&v21[-8 * ((v21 - v22) >> 3)], __src, v21 - v22);
      }
      if (v4 <= v5)
      {
        if (*(void *)(a1 + 8) <= (unint64_t)v5) {
          unint64_t v26 = 0;
        }
        else {
          unint64_t v26 = a3;
        }
        v5 += 8 * v26;
      }
      uint64_t v27 = v4;
      do
      {
        *(void *)uint64_t v27 = *(void *)v5;
        v27 += 8;
        --v20;
      }
      while (v20);
    }
    else
    {
      size_t v12 = *(unsigned char **)a1;
      unint64_t v13 = a3 + ((uint64_t)&v11[-*(void *)a1] >> 3);
      if (v13 >> 61) {
        sub_3D1D0();
      }
      uint64_t v14 = (__src - v12) >> 3;
      uint64_t v15 = v9 - (void)v12;
      if (v15 >> 2 > v13) {
        unint64_t v13 = v15 >> 2;
      }
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v16 = v13;
      }
      uint64_t v36 = v8;
      if (v16) {
        uint64_t v17 = (char *)sub_4374C(v8, v16);
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v28 = &v17[8 * v14];
      __p = v17;
      uint64_t v33 = v28;
      uint64_t v35 = &v17[8 * v16];
      uint64_t v29 = 8 * a3;
      uint64_t v30 = &v28[8 * a3];
      do
      {
        *(void *)uint64_t v28 = *(void *)v5;
        v28 += 8;
        v29 -= 8;
      }
      while (v29);
      uint64_t v34 = v30;
      uint64_t v4 = sub_1FCCD4((void **)a1, (uint64_t)&__p, v4);
      if (v34 != v33) {
        v34 += (v33 - v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      }
      if (__p) {
        operator delete(__p);
      }
    }
  }
  return v4;
}

void sub_1FC3A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1FCC2C(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  int8x8_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      int8x8_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    id v6 = (unsigned char *)(&stru_7E0 + 32);
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    id v6 = "/System/Library/PrivateFrameworks/UIAccessibility.framework/UIAccessibility";
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1F5A80((uint64_t)a1);
}

char *sub_1FCCD4(void **a1, uint64_t a2, char *__src)
{
  unint64_t v5 = *(char **)(a2 + 8);
  id v6 = (char *)*a1;
  uint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    uint64_t v7 = *(char **)(a2 + 8);
    do
    {
      uint64_t v9 = *((void *)v8 - 1);
      v8 -= 8;
      *((void *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    uint64_t v7 = *(char **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v11 + v12;
  unint64_t v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v13;
  uint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  uint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void sub_1FCD9C(void *a1, unsigned char *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 9) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_1FCE24(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(unsigned char *)(*(void *)(v5 + ((v8 >> 9) & 0x7FFFFFFFFFFFF8)) + (v8 & 0xFFF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_1FCE24(void *a1)
{
  uint64_t v2 = (char *)a1[4];
  BOOL v3 = (unint64_t)v2 >= 0x1000;
  uint64_t v4 = v2 - 4096;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_4374C(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_1F5DE8(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1F5F00((uint64_t)a1, &v54);
    float64x2_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_4374C((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      CGAffineTransform v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      float64x2_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  id v56 = a1 + 3;
  *(void *)&long long v54 = sub_4374C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  id v53 = operator new(0x1000uLL);
  sub_1F6020(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1F6138((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1FD0F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1FD13C(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v2 - v3) << 9) - 1;
  }
  uint64_t v5 = (char *)(v4 - (a1[5] + a1[4]));
  if ((unint64_t)v5 < 0x1000) {
    a2 = 1;
  }
  if ((unint64_t)v5 < 0x2000) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void *sub_1FD1AC(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    id result = sub_1FD228(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      id result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1FD20C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1FD228(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_3D1D0();
  }
  id result = (char *)sub_4374C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_1FD26C(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (void *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7) {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_1F8504(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  int64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *i = *v20;
LABEL_38:
    *int64_t v20 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v21 = *(void *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    int64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1FD478(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1FD48C(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  uint64_t v11 = operator new(0x20uLL);
  void *v11 = 0;
  v11[1] = v7;
  v11[2] = **a4;
  *((_DWORD *)v11 + 6) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_1F8504(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  int64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *v11 = *v20;
LABEL_38:
    *int64_t v20 = v11;
    goto LABEL_39;
  }
  void *v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    int64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_1FD69C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_2030F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20310C(id a1)
{
  qword_5736D0 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
}

void sub_203BD4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    +[TSDStroke emptyStroke];
    JUMPOUT(0x203B94);
  }
  _Unwind_Resume(a1);
}

void sub_2049F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_2062AC(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) containsProperty:a2];
  if ((result & 1) == 0)
  {
    id v5 = +[TSWPParagraphStyle boxedDefaultValueForProperty:a2];
    uint64_t v6 = *(void **)(a1 + 32);
    return [v6 setBoxedObject:v5 forProperty:a2];
  }
  return result;
}

void sub_206FD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20A8DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20AA78(_Unwind_Exception *a1)
{
}

void sub_20B770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20DE7C(_Unwind_Exception *a1)
{
}

BOOL sfaxmlNsEqual(uint64_t a1, uint64_t a2)
{
  if (!(a1 | a2)) {
    return 1;
  }
  BOOL result = 0;
  if (a1)
  {
    if (a2) {
      return xmlStrEqual(*(const xmlChar **)(a1 + 16), *(const xmlChar **)(a2 + 16)) != 0;
    }
  }
  return result;
}

uint64_t sfaxmlNSMutableDataWriteCallback(void *a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

id sfaxmlDumpNodeToRetainedNSData(xmlNode *a1)
{
  id v2 = objc_alloc_init((Class)NSMutableData);
  if (a1)
  {
    int v3 = xmlKeepBlanksDefault(0);
    IO = xmlOutputBufferCreateIO((xmlOutputWriteCallback)sfaxmlNSMutableDataWriteCallback, 0, v2, 0);
    xmlNodeDumpOutput(IO, a1->doc, a1, 0, 1, 0);
    xmlOutputBufferClose(IO);
    xmlKeepBlanksDefault(v3);
  }
  return v2;
}

CFStringRef sfaxmlNodeDescription(xmlNode *a1)
{
  if (!a1) {
    return @"null node";
  }
  id v1 = sfaxmlDumpNodeToRetainedNSData(a1);
  char v4 = 0;
  [v1 appendBytes:&v4 length:1];
  id v2 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", [v1 bytes]);

  return (const __CFString *)v2;
}

uint64_t sfaPushZLibFileReadHandlers_libxml(void)
{
  return xmlRegisterInputCallbacks((xmlInputMatchCallback)sub_20E63C, (xmlInputOpenCallback)sub_20E644, (xmlInputReadCallback)j__gzread, (xmlInputCloseCallback)sub_20E6A0);
}

uint64_t sub_20E63C()
{
  return 1;
}

gzFile sub_20E644(const char *a1)
{
  if (!a1 || !xmlCheckFilename(a1)) {
    return 0;
  }

  return gzopen(a1, "rb");
}

uint64_t sub_20E6A0(gzFile_s *a1)
{
  if (gzclose(a1)) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 0;
  }
}

uint64_t sfaPopZLibFileReadHandlers_libxml(int a1)
{
  uint64_t result = xmlPopInputCallbacks();
  if (result != a1)
  {
    id v3 = +[TSUAssertionHandler currentHandler];
    char v4 = +[NSString stringWithUTF8String:"void sfaPopZLibFileReadHandlers_libxml(int)"];
    id v5 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/SFArchiving/SFArchivingUtils.mm"];
    return (uint64_t)[v3 handleFailureInFunction:v4 file:v5 lineNumber:138 description:@"Unbalanced calls to Push/PopZLibFileReadHandlers_libxml"];
  }
  return result;
}

xmlDocPtr sfaxmlSAXParseFile(xmlSAXHandler *a1, const char *a2, int a3, int val)
{
  int v7 = xmlSubstituteEntitiesDefault(val);
  int v8 = xmlRegisterInputCallbacks((xmlInputMatchCallback)sub_20E63C, (xmlInputOpenCallback)sub_20E644, (xmlInputReadCallback)j__gzread, (xmlInputCloseCallback)sub_20E6A0);
  xmlDocPtr v9 = xmlSAXParseFile(a1, a2, a3);
  sfaPopZLibFileReadHandlers_libxml(v8);
  xmlSubstituteEntitiesDefault(v7);
  return v9;
}

xmlDocPtr sfaxmlParseFile(const char *a1)
{
  int v2 = xmlRegisterInputCallbacks((xmlInputMatchCallback)sub_20E63C, (xmlInputOpenCallback)sub_20E644, (xmlInputReadCallback)j__gzread, (xmlInputCloseCallback)sub_20E6A0);
  xmlDocPtr v3 = sfaxmlSAXParseFile(0, a1, 0, 1);
  sfaPopZLibFileReadHandlers_libxml(v2);
  return v3;
}

void sub_21056C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  if (a2)
  {
    if (__p) {
      operator delete(__p);
    }
    sub_1F946C((uint64_t)&a51);
    sub_1F946C((uint64_t)&a57);
    sub_2108CC((uint64_t)&a63);
    sub_2108CC((uint64_t)&a69);
    if (SLOBYTE(STACK[0x227]) < 0) {
      operator delete((void *)STACK[0x210]);
    }
    if (*(char *)(v69 - 233) < 0) {
      operator delete(*(void **)(v69 - 256));
    }
    if (*(char *)(v69 - 201) < 0) {
      operator delete(*(void **)(v69 - 224));
    }
    if (*(char *)(v69 - 169) < 0) {
      operator delete(*(void **)(v69 - 192));
    }
    if (a2 == 2)
    {
      id v72 = objc_begin_catch(a1);
      objc_end_catch();
    }
    else
    {
      objc_begin_catch(a1);
    }
    JUMPOUT(0x2104D8);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2108CC(uint64_t a1)
{
  sub_210908(a1, *(void **)(a1 + 16));
  int v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_210908(uint64_t a1, void *a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      xmlDocPtr v3 = (void *)*v2;
      sub_1E7BFC((uint64_t)(v2 + 2));
      operator delete(v2);
      int v2 = v3;
    }
    while (v3);
  }
}

unsigned __int8 *sub_21094C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  int v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_1F7FB0(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    float v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_1F845C(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_210BE8(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_1F8504(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  sub_210D2C((uint64_t)v26, 0);
  return i;
}

void sub_210BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_210D2C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unsigned char *sub_210BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  int v8 = operator new(0x40uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  void *v8 = 0;
  v8[1] = a2;
  uint64_t result = v8 + 2;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    uint64_t result = sub_210C8C(result, *(void **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    v8[4] = *((void *)v10 + 2);
    *(_OWORD *)uint64_t result = v11;
  }
  void v8[5] = 0;
  v8[6] = 0;
  void v8[7] = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_210C74(_Unwind_Exception *a1)
{
  sub_210D2C(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_210C8C(unsigned char *__dst, void *__src, unint64_t a3)
{
  id v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_1F4474();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    int v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    void *v5 = v8;
    id v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_210D2C(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1E7BFC((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

unsigned __int8 *sub_210D84(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  int v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_1F7FB0(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    float v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_1F845C(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_21101C(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_1F8504(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_210FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_1F8750((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_21101C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  int v8 = operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  void *v8 = 0;
  v8[1] = a2;
  uint64_t result = v8 + 2;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    uint64_t result = sub_210C8C(result, *(void **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    v8[4] = *((void *)v10 + 2);
    *(_OWORD *)uint64_t result = v11;
  }
  void v8[5] = 0;
  v8[6] = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_2110AC(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1F8750(v3, v2);
  _Unwind_Resume(a1);
}

void sub_211F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_21211C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_212FA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  if (a22) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_2138F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2164E4()
{
}

unint64_t sub_21650C(uint64_t a1, int a2)
{
  unsigned int v4 = *(unsigned __int16 *)(a1 + 24);
  if (v4 <= BYTE2(a2) || *(unsigned __int16 *)(a1 + 26) <= (unsigned __int16)a2)
  {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "TSDStroke *&TCStrokeMatrix::operator[](TSUColumnRowCoordinate)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCTableStrokeFlattener.h") lineNumber:32 description:@"Matrix coordonate out of range"];
    unsigned int v4 = *(unsigned __int16 *)(a1 + 24);
  }
  return *(void *)a1 + 8 * (BYTE2(a2) + (unsigned __int16)a2 * (unint64_t)v4);
}

uint64_t sub_2166C4(uint64_t a1, int a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = a2;
  uint64_t v4 = 0;
  sub_216734(a1, (unsigned __int16)a2 * (unint64_t)HIWORD(a2) + (unsigned __int16)a2, &v4);
  return a1;
}

void sub_216718(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_216734(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_216764((void **)a1, a2 - v3, a3);
  }
}

void sub_216764(void **a1, unint64_t a2, void *a3)
{
  int v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  uint64_t v7 = v8;
  unint64_t v9 = *(void **)(v6 - 8);
  if (a2 <= (v8 - (unsigned char *)v9) >> 3)
  {
    if (a2)
    {
      uint64_t v16 = 8 * a2;
      float v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      unint64_t v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    uint64_t v10 = (char *)v9 - (unsigned char *)*a1;
    unint64_t v11 = a2 + (v10 >> 3);
    if (v11 >> 61) {
      sub_3D1D0();
    }
    uint64_t v12 = v10 >> 3;
    uint64_t v13 = v7 - (unsigned char *)*a1;
    if (v13 >> 2 > v11) {
      unint64_t v11 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v11;
    }
    if (v14) {
      BOOL v15 = (char *)sub_4374C(v6, v14);
    }
    else {
      BOOL v15 = 0;
    }
    float v18 = &v15[8 * v12];
    BOOL v19 = &v18[8 * a2];
    uint64_t v20 = 8 * a2;
    unint64_t v21 = v18;
    do
    {
      *(void *)unint64_t v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    size_t v22 = &v15[8 * v14];
    unint64_t v24 = (char *)*a1;
    uint64_t v23 = (char *)a1[1];
    if (v23 != *a1)
    {
      do
      {
        uint64_t v25 = *((void *)v23 - 1);
        v23 -= 8;
        *((void *)v18 - 1) = v25;
        v18 -= 8;
      }
      while (v23 != v24);
      uint64_t v23 = (char *)*a1;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
    {
      operator delete(v23);
    }
  }
}

void sub_216F58(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];

  id v3 = [*(id *)(a1 + 32) taskToURLHandlerMap];
  [v3 setObject:*(void *)(a1 + 48) forKey:*(void *)(a1 + 40)];
}

void sub_2170D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2170F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_217100(uint64_t a1)
{
}

void sub_217108(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) taskToURLHandlerMap];
  uint64_t v2 = [v6 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  [v5 removeObjectForKey:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];

  [v6 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_217268(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didReceiveResponse:*(void *)(a1 + 48)];
}

void sub_217384(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didReceiveData:*(void *)(a1 + 48)];
}

void sub_217474(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didFinish];
  [*(id *)(a1 + 32) _removeTaskForHandler:*(void *)(a1 + 40)];
}

void sub_217594(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _taskForHandler:*(void *)(a1 + 40)];
  [v2 didFailWithError:*(void *)(a1 + 48)];
  [*(id *)(a1 + 32) _removeTaskForHandler:*(void *)(a1 + 40)];
}

void sub_217704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21771C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  uint64_t v2 = [v5 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_21781C(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) urlHandlerToTaskMap];
  uint64_t v2 = [v4 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = [*(id *)(a1 + 32) taskToURLHandlerMap];
  [v3 removeObjectForKey:v2];

  [v4 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_217BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_217F3C(uint64_t a1)
{
  objc_opt_class();
  id v2 = [(id)TSUDynamicCast() drawable];
  id v3 = [*(id *)(a1 + 32) url];

  return [v2 setHyperlinkURL:v3];
}

void sub_218218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_218370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_218438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sfaxmlBoolToXmlChar(int a1, char *__str, size_t __size)
{
  id v3 = "false";
  if (a1) {
    id v3 = "true";
  }
  return snprintf(__str, __size, "%s", v3);
}

uint64_t sfaxmlXmlCharToBool(const xmlChar *a1, unsigned char *a2)
{
  if (!xmlStrcasecmp(a1, (const xmlChar *)"TRUE")) {
    goto LABEL_4;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"FALSE")) {
    goto LABEL_6;
  }
  if (xmlStrEqual(a1, (const xmlChar *)"1"))
  {
LABEL_4:
    LOBYTE(v4) = 1;
LABEL_7:
    *a2 = v4;
    return 1;
  }
  if (xmlStrEqual(a1, (const xmlChar *)"0")) {
    goto LABEL_6;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"y")) {
    goto LABEL_4;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"n")) {
    goto LABEL_6;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"t")) {
    goto LABEL_4;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"f"))
  {
LABEL_6:
    LOBYTE(v4) = 0;
    goto LABEL_7;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"yes")) {
    goto LABEL_4;
  }
  int v4 = xmlStrcasecmp(a1, (const xmlChar *)"no");
  uint64_t result = 0;
  if (!v4) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sfaxmlLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%ld", a1);
}

char *sfaxmlXmlCharToLong(char *a1, uint64_t *a2)
{
  __endptr = 0;
  uint64_t v4 = strtol(a1, &__endptr, 10);
  if (*__endptr || !*a1)
  {
    if (strchr(a1, 37))
    {
      v4 *= 1000;
    }
    else
    {
      uint64_t result = strchr(a1, 112);
      if (!result) {
        return result;
      }
      if (result[1] != 116) {
        return 0;
      }
      v4 *= 20;
    }
  }
  *a2 = v4;
  return (unsigned char *)(&dword_0 + 1);
}

uint64_t sfaxmlUnsignedLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%lu", a1);
}

uint64_t sfaxmlXmlCharToUnsignedLong(const char *a1, unint64_t *a2)
{
  __endptr = 0;
  unint64_t v4 = strtoul(a1, &__endptr, 10);
  if (*__endptr || !*a1) {
    return 0;
  }
  *a2 = v4;
  return 1;
}

uint64_t sfaxmlLongLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%lld", a1);
}

uint64_t sfaxmlXmlCharToLongLong(const char *a1, uint64_t *a2)
{
  __endptr = 0;
  uint64_t v4 = strtoll(a1, &__endptr, 10);
  if (*__endptr || !*a1) {
    return 0;
  }
  *a2 = v4;
  return 1;
}

uint64_t sfaxmlUnsignedLongLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%llu", a1);
}

uint64_t sfaxmlXmlCharToUnsignedLongLong(const char *a1, unint64_t *a2)
{
  __endptr = 0;
  unint64_t v4 = strtoull(a1, &__endptr, 10);
  if (*__endptr || !*a1) {
    return 0;
  }
  *a2 = v4;
  return 1;
}

int *sfaxmlFloatToXmlChar(char *a1, size_t __n, float a3)
{
  if (fabsf(a3) != INFINITY) {
    return (int *)snprintf(a1, __n, "%.*g", 8, a3);
  }
  if (a3 >= 0.0)
  {
    strncpy(a1, "INF", __n);
    return &dword_0 + 3;
  }
  else
  {
    strncpy(a1, "-INF", __n);
    return &dword_4;
  }
}

uint64_t sfaxmlXmlCharToFloat(uint64_t a1, float *a2)
{
  id v3 = (const char *)(a1 - 1);
  do
  {
    int v4 = v3[1];
    if (v4 < 0) {
      __uint32_t v5 = __maskrune(v3[1], 0x4000uLL);
    }
    else {
      __uint32_t v5 = _DefaultRuneLocale.__runetype[v4] & 0x4000;
    }
    ++v3;
  }
  while (v5);
  BOOL v6 = v4 == 43;
  if (v4 == 43) {
    uint64_t v7 = v3 + 1;
  }
  else {
    uint64_t v7 = v3;
  }
  size_t v8 = strlen(v7);
  if (v8 < 3) {
    goto LABEL_14;
  }
  unint64_t v9 = v8;
  if (!strncasecmp(v7, "NAN", 3uLL))
  {
    int v13 = 2143289344;
LABEL_21:
    float v12 = *(float *)&v13;
    goto LABEL_22;
  }
  if (!strncasecmp(v7, "INF", 3uLL))
  {
    int v13 = 2139095040;
    goto LABEL_21;
  }
  if (v9 >= 4 && !strncasecmp(v7, "-INF", 4uLL))
  {
    int v13 = -8388608;
    goto LABEL_21;
  }
LABEL_14:
  unint64_t v14 = 0;
  double v10 = strtod(v7, &v14);
  if (*v14 || !v3[v6]) {
    return 0;
  }
  float v12 = v10;
LABEL_22:
  *a2 = v12;
  return 1;
}

int *sfaxmlDoubleToXmlChar(char *a1, size_t __n, double a3)
{
  if (fabs(a3) != INFINITY) {
    return (int *)snprintf(a1, __n, "%.*g", 17, a3);
  }
  if (a3 >= 0.0)
  {
    strncpy(a1, "INF", __n);
    return &dword_0 + 3;
  }
  else
  {
    strncpy(a1, "-INF", __n);
    return &dword_4;
  }
}

uint64_t sfaxmlXmlCharToDouble(uint64_t a1, double *a2)
{
  id v3 = (const char *)(a1 - 1);
  do
  {
    int v4 = v3[1];
    if (v4 < 0) {
      __uint32_t v5 = __maskrune(v3[1], 0x4000uLL);
    }
    else {
      __uint32_t v5 = _DefaultRuneLocale.__runetype[v4] & 0x4000;
    }
    ++v3;
  }
  while (v5);
  BOOL v6 = v4 == 43;
  if (v4 == 43) {
    uint64_t v7 = v3 + 1;
  }
  else {
    uint64_t v7 = v3;
  }
  size_t v8 = strlen(v7);
  if (v8 >= 3)
  {
    unint64_t v9 = v8;
    if (!strncasecmp(v7, "NAN", 3uLL))
    {
      unint64_t v12 = 0x7FF8000000000000;
    }
    else if (!strncasecmp(v7, "INF", 3uLL))
    {
      unint64_t v12 = 0x7FF0000000000000;
    }
    else
    {
      if (v9 < 4 || strncasecmp(v7, "-INF", 4uLL)) {
        goto LABEL_14;
      }
      unint64_t v12 = 0xFFF0000000000000;
    }
    double v10 = *(double *)&v12;
    goto LABEL_22;
  }
LABEL_14:
  int v13 = 0;
  double v10 = strtod(v7, &v13);
  if (*v13 || !v3[v6]) {
    return 0;
  }
LABEL_22:
  *a2 = v10;
  return 1;
}

BOOL sfaxmlXmlCharToNSString(uint64_t a1, NSString **a2)
{
  id v3 = +[NSString stringWithUTF8String:a1];
  *a2 = v3;
  return v3 != 0;
}

void sub_2190E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2194F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

double PFXAffineTransformWithSvgTransform@<D0>(const char *a1@<X0>, void *a2@<X8>)
{
  if (a1
    && *a1
    && (uint64_t v15 = 0,
        uint64_t v16 = 0,
        uint64_t v13 = 0,
        uint64_t v14 = 0,
        uint64_t v11 = 0,
        uint64_t v12 = 0,
        sscanf(a1, "matrix(%lg,%lg,%lg,%lg,%lg,%lg)", &v16, &v15, &v14, &v13, &v12, &v11) > 5))
  {
    uint64_t v5 = v15;
    *(void *)&long long v4 = v16;
    uint64_t v7 = v13;
    uint64_t v6 = v14;
    uint64_t v9 = v11;
    uint64_t v8 = v12;
    *a2 = v16;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
    a2[4] = v8;
    a2[5] = v9;
  }
  else
  {
    long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
    *(_OWORD *)a2 = *(_OWORD *)&CGAffineTransformIdentity.a;
    *((_OWORD *)a2 + 1) = v3;
    long long v4 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    *((_OWORD *)a2 + 2) = v4;
  }
  return *(double *)&v4;
}

CGAffineTransform *PFXAffineTransformWithCssTransformValue@<X0>(NSArray *a1@<X0>, CGRect a2@<0:D0, 8:D1, 16:D2, 24:D3>, PFXHtmlReaderState *a3@<X1>, uint64_t a4@<X8>)
{
  CGFloat height = a2.size.height;
  CGFloat width = a2.size.width;
  CGFloat y = a2.origin.y;
  CGFloat x = a2.origin.x;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  CGFloat MidX = CGRectGetMidX(a2);
  v69.origin.CGFloat x = x;
  v69.origin.CGFloat y = y;
  v69.size.CGFloat width = width;
  CGFloat v52 = height;
  v69.size.CGFloat height = height;
  CGFloat MidY = CGRectGetMidY(v69);
  CGAffineTransformMakeTranslation((CGAffineTransform *)a4, MidX, MidY);
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  id v13 = [(NSArray *)a1 countByEnumeratingWithState:&v64 objects:v68 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v65;
    do
    {
      for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v65 != v15) {
          objc_enumerationMutation(a1);
        }
        float v17 = *(void **)(*((void *)&v64 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 && [v17 type] == (char *)&stru_108.addr + 2)
        {
          id v18 = [v17 value];
          if ([v18 count] == (char *)&dword_0 + 2)
          {
            id v19 = [v18 objectAtIndex:0];
            id v20 = [[v18 objectAtIndex:1] mutableCopy];
            if ([v20 count])
            {
              unint64_t v21 = 0;
              do
              {
                if (objc_msgSend(objc_msgSend(v20, "objectAtIndex:", v21), "type") == &stru_20.segname[4]) {
                  [v20 removeObjectAtIndex:v21];
                }
                else {
                  ++v21;
                }
              }
              while (v21 < (unint64_t)[v20 count]);
            }
            if (([v19 isEqualToString:@"matrix("] != 0)
            {
              if ([v20 count] != (char *)&dword_4 + 2) {
                continue;
              }
              objc_msgSend(objc_msgSend(objc_msgSend(v20, "objectAtIndex:", 0), "value"), "doubleValue");
              uint64_t v23 = v22;
              objc_msgSend(objc_msgSend(objc_msgSend(v20, "objectAtIndex:", 1), "value"), "doubleValue");
              uint64_t v25 = v24;
              objc_msgSend(objc_msgSend(objc_msgSend(v20, "objectAtIndex:", 2), "value"), "doubleValue");
              uint64_t v27 = v26;
              objc_msgSend(objc_msgSend(objc_msgSend(v20, "objectAtIndex:", 3), "value"), "doubleValue");
              uint64_t v29 = v28;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", [v20 objectAtIndex:4], a3);
              uint64_t v31 = v30;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", [v20 objectAtIndex:5], a3);
              v62[0] = v23;
              v62[1] = v25;
              v62[2] = v27;
              v62[3] = v29;
              v62[4] = v31;
              v62[5] = v32;
              long long v33 = *(_OWORD *)(a4 + 16);
              v61[0] = *(_OWORD *)a4;
              v61[1] = v33;
              v61[2] = *(_OWORD *)(a4 + 32);
              p_CGAffineTransform t1 = (CGAffineTransform *)v62;
              p_CGAffineTransform t2 = (CGAffineTransform *)v61;
              goto LABEL_27;
            }
            if ([v19 isEqualToString:@"translate("]
            {
              if ([v20 count] != (char *)&dword_0 + 2) {
                continue;
              }
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", [v20 objectAtIndex:0], a3);
              CGFloat v37 = v36;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", [v20 objectAtIndex:1], a3);
              CGAffineTransformMakeTranslation(&v60, v37, v38);
              long long v39 = *(_OWORD *)(a4 + 16);
              v59[0] = *(_OWORD *)a4;
              v59[1] = v39;
              v59[2] = *(_OWORD *)(a4 + 32);
              p_CGAffineTransform t1 = &v60;
              p_CGAffineTransform t2 = (CGAffineTransform *)v59;
              goto LABEL_27;
            }
            if ([v19 isEqualToString:@"rotate("]
            {
              if ([v20 count] != (char *)&dword_0 + 1) {
                continue;
              }
              +[PFXStyleUtilities angleInDegreesInPair:readerState:](PFXStyleUtilities, "angleInDegreesInPair:readerState:", [v20 objectAtIndex:0], a3);
              CGAffineTransformMakeRotation(&v58, v40 * 3.14159265 / 180.0);
              long long v41 = *(_OWORD *)(a4 + 16);
              v57[0] = *(_OWORD *)a4;
              v57[1] = v41;
              v57[2] = *(_OWORD *)(a4 + 32);
              p_CGAffineTransform t1 = &v58;
              p_CGAffineTransform t2 = (CGAffineTransform *)v57;
              goto LABEL_27;
            }
            if (objc_msgSend(v19, "isEqualToString:", @"scale(") {
              && [v20 count] == (char *)&dword_0 + 2)
            }
            {
              objc_msgSend(objc_msgSend(objc_msgSend(v20, "objectAtIndex:", 0), "value"), "doubleValue");
              CGFloat v43 = v42;
              objc_msgSend(objc_msgSend(objc_msgSend(v20, "objectAtIndex:", 1), "value"), "doubleValue");
              CGAffineTransformMakeScale(&t1, v43, v44);
              long long v45 = *(_OWORD *)(a4 + 16);
              *(_OWORD *)&t2.a = *(_OWORD *)a4;
              *(_OWORD *)&t2.double c = v45;
              *(_OWORD *)&t2.tCGFloat x = *(_OWORD *)(a4 + 32);
              p_CGAffineTransform t1 = &t1;
              p_CGAffineTransform t2 = &t2;
LABEL_27:
              CGAffineTransformConcat(&v63, p_t1, p_t2);
              long long v46 = *(_OWORD *)&v63.c;
              *(_OWORD *)a4 = *(_OWORD *)&v63.a;
              *(_OWORD *)(a4 + 16) = v46;
              *(_OWORD *)(a4 + 32) = *(_OWORD *)&v63.tx;
              continue;
            }
          }
        }
      }
      id v14 = [(NSArray *)a1 countByEnumeratingWithState:&v64 objects:v68 count:16];
    }
    while (v14);
  }
  v70.origin.CGFloat x = x;
  v70.origin.CGFloat y = y;
  v70.size.CGFloat width = width;
  v70.size.CGFloat height = v52;
  CGFloat v47 = -CGRectGetMidX(v70);
  v71.origin.CGFloat x = x;
  v71.origin.CGFloat y = y;
  v71.size.CGFloat width = width;
  v71.size.CGFloat height = v52;
  CGFloat v48 = CGRectGetMidY(v71);
  CGAffineTransformMakeTranslation(&v54, v47, -v48);
  long long v49 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)&v53.a = *(_OWORD *)a4;
  *(_OWORD *)&v53.double c = v49;
  *(_OWORD *)&v53.tCGFloat x = *(_OWORD *)(a4 + 32);
  uint64_t result = CGAffineTransformConcat(&v63, &v54, &v53);
  long long v51 = *(_OWORD *)&v63.c;
  *(_OWORD *)a4 = *(_OWORD *)&v63.a;
  *(_OWORD *)(a4 + 16) = v51;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)&v63.tx;
  return result;
}

id PFXTSDInfoGeometry(const char *a1)
{
  if (!a1) {
    return 0;
  }
  double v18 = 0.0;
  double v19 = 0.0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v15 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v12 = 0;
  sscanf(a1, "affineGeometry(%lg, %lg, %lg,%lg,%lg,%lg,%lg,%lg)", &v19, &v18, &v17, &v16, &v15, &v14, &v13, &v12);
  uint64_t v2 = v16;
  uint64_t v1 = v17;
  uint64_t v3 = v15;
  uint64_t v5 = v13;
  uint64_t v4 = v14;
  uint64_t v6 = v12;
  id v7 = objc_alloc((Class)TSDInfoGeometry);
  id v8 = [v7 initWithSize:v19, v18];
  v11[0] = v1;
  v11[1] = v2;
  v11[2] = v3;
  v11[3] = v4;
  v11[4] = v5;
  v11[5] = v6;
  id v9 = [v8 geometryByAppendingTransform:v11];

  return v9;
}

id sub_21EE2C(void *a1)
{
  id result = +[PFDUrlHandler registerHost:a1[4] bookRootURL:a1[5] withDRMContext:a1[6]];
  if (result)
  {
    uint64_t v3 = a1[7];
    return (id)+[NSURLProtocol registerClass:v3];
  }
  return result;
}

id sub_21EF20(uint64_t a1)
{
  id result = +[PFDUrlHandler unregisterHost:*(void *)(a1 + 32)];
  if (!result)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    return +[NSURLProtocol unregisterClass:v3];
  }
  return result;
}

void sub_21FC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t TCUnicodeCharForZapfDingbatsCodePoint(int a1)
{
  if ((a1 - 32) > 0xDE) {
    return 0;
  }
  else {
    return word_345B78[(__int16)(a1 - 32)];
  }
}

uint64_t TCUnicodeCharForMTExtraCodePoint(int a1)
{
  if ((a1 - 32) > 0x5D) {
    return 0;
  }
  else {
    return word_345D36[(__int16)(a1 - 32)];
  }
}

uint64_t TCUnicodeCharForWingdingsCodePoint(int a1)
{
  if ((a1 - 32) > 0xDE) {
    return 0;
  }
  else {
    return word_345DF2[(__int16)(a1 - 32)];
  }
}

uint64_t TCUnicodeCharForWingdings2CodePoint(int a1)
{
  if ((a1 - 37) > 0xD4) {
    return 0;
  }
  else {
    return word_345FB0[(__int16)(a1 - 37)];
  }
}

id TCUnicodeCharForSymbolCodePoint(int a1)
{
  unsigned __int8 v1 = a1;
  if ((a1 - 32) >= 0xE0) {
    [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:[NSString stringWithUTF8String:"unichar TCUnicodeCharForSymbolCodePoint(UInt16)"] file:[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCStringAdditions.mm"] lineNumber:572 description:@"Symbol code point out of range"];
  }
  unsigned __int8 v6 = v1;
  id v2 = [objc_alloc((Class)NSString) initWithBytesNoCopy:&v6 length:1 encoding:6 freeWhenDone:0];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 characterAtIndex:0];
  }
  else
  {
    NSLog(@"Could not encode byte 0x%02X as symbol character", v6);
    return 0;
  }
  return v4;
}

void *TCCodePointMapperForFontFamilyName(NSString *a1)
{
  if (!a1) {
    return 0;
  }
  NSComparisonResult v2 = [(NSString *)a1 caseInsensitiveCompare:@"Symbol"];
  uint64_t v3 = TCUnicodeCharForSymbolCodePoint;
  if (v2)
  {
    NSComparisonResult v4 = [(NSString *)a1 caseInsensitiveCompare:@"Zapf Dingbats"];
    uint64_t v3 = TCUnicodeCharForZapfDingbatsCodePoint;
    if (v4)
    {
      NSComparisonResult v5 = [(NSString *)a1 caseInsensitiveCompare:@"ZapfDingbats"];
      uint64_t v3 = TCUnicodeCharForZapfDingbatsCodePoint;
      if (v5)
      {
        NSComparisonResult v6 = [(NSString *)a1 caseInsensitiveCompare:@"Wingdings"];
        uint64_t v3 = TCUnicodeCharForWingdingsCodePoint;
        if (v6)
        {
          NSComparisonResult v7 = [(NSString *)a1 caseInsensitiveCompare:@"Wingdings 2"];
          uint64_t v3 = TCUnicodeCharForWingdings2CodePoint;
          if (v7)
          {
            NSComparisonResult v8 = [(NSString *)a1 caseInsensitiveCompare:@"Wingdings2"];
            uint64_t v3 = TCUnicodeCharForWingdings2CodePoint;
            if (v8) {
              return 0;
            }
          }
        }
      }
    }
  }
  return v3;
}

id TCFontFamilyIsPi(NSString *a1)
{
  id v2 = (id)qword_573798;
  if (!qword_573798)
  {
    id v2 = [objc_alloc((Class)NSSet) initWithObjects:@"Bookshelf Symbol 7", @"Monotype Sorts", @"MS Reference Specialty", @"MT Extra", @"Marlett", @"Webdings", @"Wingdings", @"Wingdings 2", @"Wingdings 3", 0];
    qword_573798 = (uint64_t)v2;
  }

  return [v2 containsObject:a1];
}

id TCFontFamilyHasCodePointsInPiRange(NSString *a1)
{
  id v2 = (id)qword_5737A0;
  if (!qword_5737A0)
  {
    id v2 = [objc_alloc((Class)NSSet) initWithObjects:@"Apple Chancery", @"Hoefler Text Ornaments", @"Type Embellishments One LET", 0];
    qword_5737A0 = (uint64_t)v2;
  }

  return [v2 containsObject:a1];
}

void sub_221B5C()
{
}

void sub_221C7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_222D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void PFDEpubEncryptionParser::PFDEpubEncryptionParser(PFDEpubEncryptionParser *this, const char *a2)
{
  PFDEpubXmlParseHandler::PFDEpubXmlParseHandler(this);
  *(void *)uint64_t v4 = &off_45C220;
  *(_OWORD *)(v4 + 192) = 0u;
  NSComparisonResult v5 = (std::string *)(v4 + 192);
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(void *)(v4 + 208) = 0;
  *((void *)this + 17) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  *((void *)this + 18) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  *((void *)this + 19) = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
  if (a2)
  {
    if (*a2) {
      std::string::assign(v5, a2);
    }
  }
}

void sub_2233FC(_Unwind_Exception *a1)
{
  if (v1[215] < 0) {
    operator delete(*v2);
  }
  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler((PFDEpubXmlParseHandler *)v1);
  _Unwind_Resume(a1);
}

void PFDEpubEncryptionParser::~PFDEpubEncryptionParser(PFDEpubEncryptionParser *this)
{
  *(void *)this = &off_45C220;
  id v2 = (const void *)*((void *)this + 17);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 17) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 18);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 18) = 0;
  }
  uint64_t v4 = (const void *)*((void *)this + 19);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 19) = 0;
  }
  NSComparisonResult v5 = (const void *)*((void *)this + 20);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 20) = 0;
  }
  NSComparisonResult v6 = (const void *)*((void *)this + 21);
  if (v6)
  {
    CFRelease(v6);
    *((void *)this + 21) = 0;
  }
  NSComparisonResult v7 = (const void *)*((void *)this + 22);
  if (v7)
  {
    CFRelease(v7);
    *((void *)this + 22) = 0;
  }
  NSComparisonResult v8 = (const void *)*((void *)this + 23);
  if (v8)
  {
    CFRelease(v8);
    *((void *)this + 23) = 0;
  }
  if (*((char *)this + 215) < 0) {
    operator delete(*((void **)this + 24));
  }

  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  PFDEpubEncryptionParser::~PFDEpubEncryptionParser(this);

  operator delete();
}

const xmlChar *PFDEpubEncryptionParser::StartRead(PFDEpubEncryptionParser *this)
{
  *((void *)this + 27) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"EncryptedData");
  *((void *)this + 28) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"compression");
  *((void *)this + 29) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"deenc:compression");
  *((void *)this + 30) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"EncryptionMethod");
  *((void *)this + 31) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"Algorithm");
  *((void *)this + 32) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"CipherReference");
  *((void *)this + 33) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"URI");
  id result = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"KeyName");
  *((void *)this + 34) = result;
  *((void *)this + 35) = @"encryptionAlgorithm";
  *((void *)this + 36) = @"compressionAlgorithm";
  *((void *)this + 37) = @"http://www.idpf.org/2008/embedding";
  *((void *)this + 38) = @"http://itunes.apple.com/dataenc";
  return result;
}

void PFDEpubEncryptionParser::StopRead(PFDEpubEncryptionParser *this)
{
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  id v2 = (const void *)*((void *)this + 35);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 35) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 36);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 36) = 0;
  }
  uint64_t v4 = (const void *)*((void *)this + 37);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 37) = 0;
  }
  NSComparisonResult v5 = (const void *)*((void *)this + 38);
  if (v5)
  {
    CFRelease(v5);
    *((void *)this + 38) = 0;
  }
}

void PFDEpubEncryptionParser::StartElement(uint64_t a1, const xmlChar *a2, uint64_t a3)
{
  PFDEpubXmlParseHandler::StartElement(a1);
  if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 216)))
  {
    NSComparisonResult v6 = *(const void **)(a1 + 160);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 160) = 0;
    }
    NSComparisonResult v7 = *(const void **)(a1 + 168);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 168) = 0;
    }
    NSComparisonResult v8 = *(const void **)(a1 + 176);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(a1 + 176) = 0;
    }
    id v9 = *(const void **)(a1 + 184);
    if (v9)
    {
      CFRelease(v9);
      *(void *)(a1 + 184) = 0;
    }
    uint64_t v10 = sub_1EE660(a3, (const xmlChar **)(a1 + 224));
    if (a3 + 8 == v10) {
      uint64_t v10 = sub_1EE660(a3, (const xmlChar **)(a1 + 232));
    }
    if (v10 != a3 + 8)
    {
      uint64_t v11 = (const char *)(v10 + 40);
      if (*(char *)(v10 + 63) < 0) {
        uint64_t v11 = *(const char **)v11;
      }
      *(void *)(a1 + 184) = CFStringCreateWithCString(kCFAllocatorDefault, v11, 0x8000100u);
    }
  }
  else if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 240)))
  {
    uint64_t v12 = *(const void **)(a1 + 160);
    if (v12)
    {
      CFRelease(v12);
      *(void *)(a1 + 160) = 0;
    }
    uint64_t v13 = sub_1EE660(a3, (const xmlChar **)(a1 + 248));
    if (a3 + 8 != v13)
    {
      uint64_t v14 = (const char *)(v13 + 40);
      if (*(char *)(v13 + 63) < 0) {
        uint64_t v14 = *(const char **)v14;
      }
      *(void *)(a1 + 160) = CFStringCreateWithCString(kCFAllocatorDefault, v14, 0x8000100u);
    }
  }
  else if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 256)))
  {
    uint64_t v15 = *(const void **)(a1 + 168);
    if (v15)
    {
      CFRelease(v15);
      *(void *)(a1 + 168) = 0;
    }
    uint64_t v16 = sub_1EE660(a3, (const xmlChar **)(a1 + 264));
    if (a3 + 8 != v16)
    {
      PFDEpubXmlParseHandler::hrefStrippingHash((std::string *)(v16 + 40), &v31);
      if (*(char *)(a1 + 215) < 0) {
        uint64_t v18 = *(void *)(a1 + 200);
      }
      else {
        uint64_t v18 = *(unsigned __int8 *)(a1 + 215);
      }
      std::string::size_type v19 = v31.__r_.__value_.__r.__words[0];
      if (v18)
      {
        char v17 = *(unsigned char *)(a1 + 215);
        if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          id v20 = &v31;
        }
        else {
          id v20 = (std::string *)v31.__r_.__value_.__r.__words[0];
        }
        if (v17 >= 0) {
          unint64_t v21 = (char *)(a1 + 192);
        }
        else {
          unint64_t v21 = *(char **)(a1 + 192);
        }
        if (v17 >= 0) {
          int64_t v22 = *(unsigned __int8 *)(a1 + 215);
        }
        else {
          int64_t v22 = *(void *)(a1 + 200);
        }
        if (v22)
        {
          if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int64_t size = HIBYTE(v31.__r_.__value_.__r.__words[2]);
          }
          else {
            int64_t size = v31.__r_.__value_.__l.__size_;
          }
          if (size >= v22)
          {
            uint64_t v24 = (std::string *)((char *)v20 + size);
            int v25 = *v21;
            uint64_t v26 = v20;
            do
            {
              int64_t v27 = size - v22;
              if (v27 == -1) {
                break;
              }
              uint64_t v28 = (std::string *)memchr(v26, v25, v27 + 1);
              if (!v28) {
                break;
              }
              uint64_t v29 = v28;
              if (!memcmp(v28, v21, v22))
              {
                if (v29 == v24 || v29 != v20) {
                  break;
                }
                goto LABEL_53;
              }
              uint64_t v26 = (std::string *)((char *)&v29->__r_.__value_.__l.__data_ + 1);
              int64_t size = (char *)v24 - ((char *)&v29->__r_.__value_.__l.__data_ + 1);
            }
            while (size >= v22);
          }
        }
        else
        {
LABEL_53:
          std::string::erase(&v31, 0, v22);
          std::string::size_type v19 = v31.__r_.__value_.__r.__words[0];
        }
      }
      if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v30 = &v31;
      }
      else {
        uint64_t v30 = (std::string *)v19;
      }
      *(void *)(a1 + 168) = CFStringCreateWithCString(kCFAllocatorDefault, (const char *)v30, 0x8000100u);
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
    }
    if (!*(void *)(a1 + 168)) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubEncryptionParser::StartElement(const xmlChar *, const PFDEpubXmlParseHandler::Attributes &)"), file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubEncryptionParser.cpp"), lineNumber:157, description:@"invalid nil value for '%s'", @"mManifestHref"];
    }
  }
}

void sub_2239B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t PFDEpubEncryptionParser::EndElement(PFDEpubEncryptionParser *this, xmlChar *str1)
{
  if (xmlStrEqual(str1, *((const xmlChar **)this + 27)))
  {
    CFStringRef v4 = (const __CFString *)*((void *)this + 20);
    if (v4 && *((void *)this + 21))
    {
      if (CFStringCompare(*((CFStringRef *)this + 37), v4, 0))
      {
        if (CFStringCompare(*((CFStringRef *)this + 38), *((CFStringRef *)this + 20), 0)
          || (uint64_t v11 = (const void *)*((void *)this + 22)) == 0)
        {
          Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
          CFDictionaryAddValue(Mutable, *((const void **)this + 35), *((const void **)this + 20));
          NSComparisonResult v6 = (const void *)*((void *)this + 22);
          if (v6) {
            CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserFairPlayIdKey, v6);
          }
          NSComparisonResult v7 = (const void *)*((void *)this + 23);
          if (v7) {
            CFDictionaryAddValue(Mutable, *((const void **)this + 36), v7);
          }
          CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 18), *((const void **)this + 21), Mutable);
          CFRelease(Mutable);
        }
        else
        {
          CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 17), *((const void **)this + 21), v11);
        }
      }
      else
      {
        CFArrayAppendValue(*((CFMutableArrayRef *)this + 19), *((const void **)this + 21));
      }
    }
  }
  else if (xmlStrEqual(str1, *((const xmlChar **)this + 34)))
  {
    NSComparisonResult v8 = (const void *)*((void *)this + 22);
    if (v8)
    {
      CFRelease(v8);
      *((void *)this + 22) = 0;
    }
    id v9 = (char *)this + 112;
    if (*((char *)this + 135) < 0) {
      id v9 = *(const char **)v9;
    }
    CFStringRef v10 = CFStringCreateWithCString(kCFAllocatorDefault, v9, 0x8000100u);
    *((void *)this + 22) = v10;
    if (!v10) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubEncryptionParser::EndElement(const xmlChar *)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubEncryptionParser.cpp") lineNumber:197 description:@"invalid nil value for '%s'", "mRightsId"];
    }
  }

  return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
}

void PFDEpubRightsParser::PFDEpubRightsParser(PFDEpubRightsParser *this)
{
  PFDEpubXmlParseHandler::PFDEpubXmlParseHandler(this);
  void *v2 = &off_45C280;
  v2[18] = 0;
  v2[19] = 0;
  *((void *)this + 17) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
}

void sub_223C34(_Unwind_Exception *a1)
{
  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void PFDEpubRightsParser::~PFDEpubRightsParser(PFDEpubRightsParser *this)
{
  *(void *)this = &off_45C280;
  id v2 = (const void *)*((void *)this + 17);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 17) = 0;
  }
  uint64_t v3 = (const void *)*((void *)this + 18);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 18) = 0;
  }
  CFStringRef v4 = (const void *)*((void *)this + 19);
  if (v4)
  {
    CFRelease(v4);
    *((void *)this + 19) = 0;
  }

  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(this);
}

{
  uint64_t vars8;

  PFDEpubRightsParser::~PFDEpubRightsParser(this);

  operator delete();
}

const xmlChar *PFDEpubRightsParser::StartRead(PFDEpubRightsParser *this)
{
  *((void *)this + 20) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"sID");
  *((void *)this + 21) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"sData");
  id result = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"sinf");
  *((void *)this + 22) = result;
  return result;
}

void *PFDEpubRightsParser::StopRead(void *this)
{
  this[20] = 0;
  this[21] = 0;
  this[22] = 0;
  return this;
}

void PFDEpubRightsParser::StartElement(uint64_t a1, const xmlChar *a2)
{
  PFDEpubXmlParseHandler::StartElement(a1);
  if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 176)))
  {
    CFStringRef v4 = *(const void **)(a1 + 152);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(a1 + 152) = 0;
    }
    NSComparisonResult v5 = *(const void **)(a1 + 144);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(a1 + 144) = 0;
    }
  }
}

uint64_t PFDEpubRightsParser::EndElement(PFDEpubRightsParser *this, xmlChar *str1)
{
  if (xmlStrEqual(str1, *((const xmlChar **)this + 20)))
  {
    CFStringRef v4 = (const void *)*((void *)this + 19);
    if (v4)
    {
      CFRelease(v4);
      *((void *)this + 19) = 0;
    }
    NSComparisonResult v5 = (char *)this + 112;
    if (*((char *)this + 135) < 0) {
      NSComparisonResult v5 = *(const char **)v5;
    }
    CFStringRef v6 = CFStringCreateWithCString(kCFAllocatorDefault, v5, 0x8000100u);
    *((void *)this + 19) = v6;
    if (!v6) {
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubRightsParser::EndElement(const xmlChar *)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubRightsParser.cpp") lineNumber:205 description:@"invalid nil value for '%s'", "mRightsId"];
    }
    goto LABEL_57;
  }
  if (xmlStrEqual(str1, *((const xmlChar **)this + 21)))
  {
    NSComparisonResult v7 = (const void *)*((void *)this + 18);
    if (v7)
    {
      CFRelease(v7);
      *((void *)this + 18) = 0;
    }
    if (*((char *)this + 135) >= 0) {
      LODWORD(v8) = *((unsigned __int8 *)this + 135);
    }
    else {
      uint64_t v8 = *((void *)this + 15);
    }
    CFIndex v9 = 3 * vcvtpd_u64_f64((double)v8 * 0.25);
    Mutable = CFDataCreateMutable(kCFAllocatorDefault, v9);
    if (!Mutable)
    {
      *((void *)this + 18) = 0;
      [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubRightsParser::EndElement(const xmlChar *)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubRightsParser.cpp") lineNumber:210 description:@"invalid nil value for '%s'", "mSinfData"];
      goto LABEL_57;
    }
    uint64_t v11 = Mutable;
    CFDataSetLength(Mutable, v9);
    if (*((char *)this + 135) >= 0) {
      uint64_t v12 = (unsigned __int8 *)this + 112;
    }
    else {
      uint64_t v12 = (unsigned __int8 *)*((void *)this + 14);
    }
    MutableBytePtr = CFDataGetMutableBytePtr(v11);
    if (!v12 || (MutableBytePtr ? (BOOL v14 = 3 * ((v8 + 3) >> 2) > v9) : (BOOL v14 = 1), v14))
    {
      uint64_t v15 = v11;
      CFIndex v16 = 0;
LABEL_56:
      CFDataSetLength(v15, v16);
      *((void *)this + 18) = v11;
      goto LABEL_57;
    }
    if (!v8)
    {
      uint64_t v30 = MutableBytePtr;
LABEL_53:
      unsigned int v34 = v30 - MutableBytePtr;
      if (v30 - MutableBytePtr > v9) {
        [+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler") handleFailureInFunction:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UInt32 RTSPProtocolBase64Decode(const UInt8 *, UInt32, UInt8 *, UInt32)") file:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubRightsParser.cpp") lineNumber:110 description:@"bad decode results"];
      }
      CFIndex v16 = v34;
      uint64_t v15 = v11;
      goto LABEL_56;
    }
    int v20 = 0;
    int v21 = 0;
    unsigned int v22 = 0;
    uint64_t v23 = (char *)&v12[v8];
    uint64_t v24 = MutableBytePtr;
    do
    {
      unsigned int v26 = *v12++;
      unsigned int v25 = v26;
      int v27 = byte_34618A[v26];
      if (v27 == 255)
      {
        if (v25 == 61)
        {
          v22 <<= 6;
          ++v20;
        }
      }
      else
      {
        UInt8 v28 = v27 | ((_BYTE)v22 << 6);
        ++v21;
        int v20 = 0;
        if ((v21 & 3) != 0)
        {
          unsigned int v22 = v27 | (v22 << 6);
        }
        else
        {
          unsigned int v29 = v22 << 6;
          *uint64_t v24 = BYTE2(v29);
          v24[1] = BYTE1(v29);
          v24[2] = v28;
          v24 += 3;
          unsigned int v22 = 0;
        }
      }
    }
    while (v12 < (unsigned __int8 *)v23);
    if (v20)
    {
      *uint64_t v24 = BYTE2(v22);
      uint64_t v30 = v24 + 1;
      if (v20 != 1) {
        goto LABEL_53;
      }
    }
    else
    {
      if ((v8 & 3) != 3)
      {
        if ((v8 & 3) != 2)
        {
          uint64_t v30 = v24;
          goto LABEL_53;
        }
        unsigned int v31 = v22 >> 4;
        uint64_t v32 = 1;
        uint64_t v30 = v24;
        goto LABEL_52;
      }
      unsigned int v33 = v22 >> 10;
      v22 <<= 6;
      *uint64_t v24 = v33;
      uint64_t v30 = v24 + 1;
    }
    unsigned int v31 = v22 >> 8;
    uint64_t v32 = 2;
LABEL_52:
    *uint64_t v30 = v31;
    uint64_t v30 = &v24[v32];
    goto LABEL_53;
  }
  if (xmlStrEqual(str1, *((const xmlChar **)this + 22)))
  {
    char v17 = (const void *)*((void *)this + 19);
    if (v17)
    {
      uint64_t v18 = (const void *)*((void *)this + 18);
      if (!v18
        || (CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 17), v17, v18),
            (char v17 = (const void *)*((void *)this + 19)) != 0))
      {
        CFRelease(v17);
        *((void *)this + 19) = 0;
      }
    }
    std::string::size_type v19 = (const void *)*((void *)this + 18);
    if (v19)
    {
      CFRelease(v19);
      *((void *)this + 18) = 0;
    }
  }
LABEL_57:

  return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
}

void sub_226B30(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x226AECLL);
  }
  _Unwind_Resume(a1);
}

void sub_22826C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_229150(_Unwind_Exception *a1)
{
}

void sub_22A37C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_22A444(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_22A47C(id a1)
{
  qword_5737E0 = (uint64_t)objc_alloc_init((Class)TSUMutablePointerSet);
  dword_5737E8 = 0;
}

BOOL sub_22A4AC(uint64_t a1)
{
  return sub_22A50C(a1) != 0;
}

id sub_22A4CC(uint64_t a1)
{
  uint64_t v2 = 0;
  return [sub_22A50C(a1) dataWithContentsOfURL:a1 error:&v2];
}

void *sub_22A50C(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)&dword_5737E8);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v2 = (void *)qword_5737E0;
  id v3 = [(id)qword_5737E0 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
LABEL_3:
    uint64_t v6 = 0;
    while (1)
    {
      if (*(void *)v10 != v5) {
        objc_enumerationMutation(v2);
      }
      NSComparisonResult v7 = *(void **)(*((void *)&v9 + 1) + 8 * v6);
      if (objc_msgSend(v7, "p_canDecryptFileAtURL:", a1)) {
        break;
      }
      if (v4 == (id)++v6)
      {
        id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v4) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    NSComparisonResult v7 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_5737E8);
  return v7;
}

void sub_22A738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void PFDEpubXmlParseHandler::PFDEpubXmlParseHandler(PFDEpubXmlParseHandler *this)
{
  *(void *)this = &off_45C310;
  *((void *)this + 1) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = (char *)this + 24;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
}

void PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(PFDEpubXmlParseHandler *this)
{
  *(void *)this = &off_45C310;
  uint64_t v2 = (xmlTextReader *)*((void *)this + 1);
  if (v2) {
    xmlFreeTextReader(v2);
  }
  if (*((char *)this + 135) < 0) {
    operator delete(*((void **)this + 14));
  }
  if (*((char *)this + 111) < 0) {
    operator delete(*((void **)this + 11));
  }
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  if (*((char *)this + 63) < 0) {
    operator delete(*((void **)this + 5));
  }
  sub_22AE84((uint64_t)this + 16, *((char **)this + 3));
}

BOOL PFDEpubXmlParseHandler::parse(PFDEpubXmlParseHandler *this, std::string::value_type *__s)
{
  if (!__s) {
    return 1;
  }
  if (!*__s) {
    return 1;
  }
  std::string::assign((std::string *)((char *)this + 40), __s);
  if (*((char *)this + 111) < 0)
  {
    **((unsigned char **)this + 11) = 0;
    *((void *)this + 12) = 0;
  }
  else
  {
    *((unsigned char *)this + 88) = 0;
    *((unsigned char *)this + 111) = 0;
  }
  std::string::assign((std::string *)((char *)this + 88), __s);
  xmlTextReaderPtr v5 = xmlReaderForFile(__s, 0, 2048);
  *((void *)this + 1) = v5;
  if (!v5) {
    return 1;
  }
  (*(void (**)(PFDEpubXmlParseHandler *))(*(void *)this + 40))(this);
  int v6 = xmlTextReaderRead(*((xmlTextReaderPtr *)this + 1));
  if (v6 == 1)
  {
    do
    {
      int v7 = xmlTextReaderNodeType(*((xmlTextReaderPtr *)this + 1));
      switch(v7)
      {
        case 15:
          uint64_t v13 = xmlTextReaderConstLocalName(*((xmlTextReaderPtr *)this + 1));
          (*(void (**)(PFDEpubXmlParseHandler *, const xmlChar *))(*(void *)this + 16))(this, v13);
          break;
        case 3:
          long long v12 = xmlTextReaderConstValue(*((xmlTextReaderPtr *)this + 1));
          (*(void (**)(PFDEpubXmlParseHandler *, const xmlChar *))(*(void *)this + 8))(this, v12);
          break;
        case 1:
          sub_22AE84((uint64_t)this + 16, *((char **)this + 3));
          *((void *)this + 3) = 0;
          *((void *)this + 4) = 0;
          *((void *)this + 2) = (char *)this + 24;
          if (xmlTextReaderHasAttributes(*((xmlTextReaderPtr *)this + 1)))
          {
            for (int i = xmlTextReaderMoveToFirstAttribute(*((xmlTextReaderPtr *)this + 1));
                  i == 1;
                  int i = xmlTextReaderMoveToNextAttribute(*((xmlTextReaderPtr *)this + 1)))
            {
              long long v9 = xmlTextReaderConstLocalName(*((xmlTextReaderPtr *)this + 1));
              long long v10 = xmlTextReaderConstValue(*((xmlTextReaderPtr *)this + 1));
              if (v9) {
                BOOL v11 = v10 == 0;
              }
              else {
                BOOL v11 = 1;
              }
              if (!v11)
              {
                v16[0] = v9;
                v16[1] = v10;
                sub_22AEE8((uint64_t **)this + 2, v16, v16);
              }
            }
            xmlTextReaderMoveToElement(*((xmlTextReaderPtr *)this + 1));
          }
          BOOL v14 = xmlTextReaderConstLocalName(*((xmlTextReaderPtr *)this + 1));
          (**(void (***)(PFDEpubXmlParseHandler *, const xmlChar *, char *))this)(this, v14, (char *)this + 16);
          break;
      }
      int v15 = xmlTextReaderRead(*((xmlTextReaderPtr *)this + 1));
    }
    while (v15 == 1);
    int v6 = v15;
  }
  (*(void (**)(PFDEpubXmlParseHandler *))(*(void *)this + 48))(this);
  xmlFreeTextReader(*((xmlTextReaderPtr *)this + 1));
  *((void *)this + 1) = 0;
  return v6 == 0;
}

uint64_t PFDEpubXmlParseHandler::StartElement(uint64_t result)
{
  if (*(char *)(result + 135) < 0)
  {
    **(unsigned char **)(result + 112) = 0;
    *(void *)(result + 120) = 0;
  }
  else
  {
    *(unsigned char *)(result + 112) = 0;
    *(unsigned char *)(result + 135) = 0;
  }
  return result;
}

std::string *PFDEpubXmlParseHandler::FoundText(std::string *this, const std::string::value_type *a2)
{
  if (a2) {
    return std::string::append((std::string *)((char *)this + 112), a2);
  }
  return this;
}

uint64_t PFDEpubXmlParseHandler::EndElement(uint64_t this, const unsigned __int8 *a2)
{
  if (*(char *)(this + 135) < 0)
  {
    **(unsigned char **)(this + 112) = 0;
    *(void *)(this + 120) = 0;
  }
  else
  {
    *(unsigned char *)(this + 112) = 0;
    *(unsigned char *)(this + 135) = 0;
  }
  return this;
}

void PFDEpubXmlParseHandler::hrefStrippingHash(std::string *this@<X0>, std::string *a2@<X8>)
{
  int v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v4 & 0x80000000) == 0)
  {
    *a2 = *this;
    goto LABEL_4;
  }
  sub_210C8C(a2, this->__r_.__value_.__l.__data_, this->__r_.__value_.__l.__size_);
  int v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_4:
    if (!(_BYTE)v4) {
      return;
    }
    goto LABEL_5;
  }
  if (!this->__r_.__value_.__l.__size_) {
    return;
  }
LABEL_5:
  std::string::size_type v5 = std::string::find(this, 35, 0);
  if (v5 != -1) {
    std::string::erase(a2, v5, 0xFFFFFFFFFFFFFFFFLL);
  }
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v6 = this;
  }
  else {
    int v6 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  int v7 = xmlURIUnescapeString((const char *)v6, -1, 0);
  if (v7)
  {
    std::string::assign(a2, v7);
    xmlFree(v7);
  }
}

void sub_22AE64(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_22AE84(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_22AE84(a1, *(void *)a2);
    sub_22AE84(a1, *((void *)a2 + 1));
    if (a2[63] < 0) {
      operator delete(*((void **)a2 + 5));
    }
    operator delete(a2);
  }
}

uint64_t *sub_22AEE8(uint64_t **a1, const xmlChar **a2, void *a3)
{
  std::string::size_type v5 = (uint64_t **)sub_1EB934((uint64_t)a1, &v8, a2);
  id result = *v5;
  if (!*v5)
  {
    sub_22AF68((uint64_t)a1, a3, (uint64_t)&v7);
    sub_4355C(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *sub_22AF68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  int v7 = (char *)a2[1];
  void v6[4] = *a2;
  id result = sub_1F43C0(v6 + 5, v7);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_22AFD4(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_22AFF0(v3, v2);
  _Unwind_Resume(a1);
}

void sub_22AFF0(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 63) < 0) {
      operator delete(__p[5]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_22BCF0(_Unwind_Exception *a1)
{
  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_22D400(void *exc_buf, int a2)
{
  if (a2 == 2)
  {
    id v3 = objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x22D390);
  }
  objc_begin_catch(exc_buf);
  if (!v2) {
    JUMPOUT(0x22D3ACLL);
  }
  JUMPOUT(0x22D398);
}

void sub_22E27C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  sub_2108CC(v41 - 176);
  if (*(char *)(v41 - 105) < 0) {
    operator delete(*(void **)(v41 - 128));
  }
  if (a2 == 2)
  {
    id v44 = objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x22E218);
  }
  objc_begin_catch(a1);
  if (!v40) {
    JUMPOUT(0x22E228);
  }
  JUMPOUT(0x22E220);
}

void sub_22E524(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_22E598(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_1F7FB0(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    BOOL v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (int i = *v14; i; int i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_1F845C(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  char v17 = operator new(0x40uLL);
  v29[0] = v17;
  v29[1] = a1 + 16;
  void *v17 = 0;
  v17[1] = v10;
  uint64_t v18 = *a4;
  long long v19 = **a4;
  v17[4] = *((void *)*a4 + 2);
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)uint64_t v18 = 0;
  v17[6] = 0;
  v17[7] = 0;
  void v17[5] = 0;
  char v30 = 1;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_1F8504(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  unsigned int v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)v29[0] = *v26;
    *unsigned int v26 = v29[0];
  }
  else
  {
    *(void *)v29[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v29[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v29[0])
    {
      unint64_t v27 = *(void *)(*(void *)v29[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v27 >= v11) {
          v27 %= v11;
        }
      }
      else
      {
        v27 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v27) = v29[0];
    }
  }
  int i = (unsigned __int8 *)v29[0];
  v29[0] = 0;
  ++*v8;
  sub_210D2C((uint64_t)v29, 0);
  return i;
}

void sub_22E828(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_210D2C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

char *sub_2318D4(uint64_t a1, char *__src, char *a3)
{
  id v3 = a3;
  unint64_t v4 = __src;
  int v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    unint64_t v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 3) + 1;
    if (v14 >> 61) {
      sub_3D1D0();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 3;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 2 > v14) {
      unint64_t v14 = v17 >> 2;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      long long v19 = (char *)sub_4374C(a1 + 16, v18);
    }
    else {
      long long v19 = 0;
    }
    float v20 = &v19[8 * v16];
    __p = v19;
    unint64_t v27 = v20;
    UInt8 v28 = v20;
    unsigned int v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 2;
        }
        unint64_t v23 = (char *)sub_4374C(v8, v22);
        float v20 = &v23[8 * (v22 >> 2)];
        __p = v23;
        unint64_t v27 = v20;
        unsigned int v29 = &v23[8 * v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 8 * (v21 >> 1);
        unint64_t v27 = v20;
      }
    }
    *(void *)float v20 = *(void *)v3;
    UInt8 v28 = v20 + 8;
    unint64_t v4 = sub_2329AC((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    *(void *)__srdouble c = *(void *)a3;
    *(void *)(a1 + 8) = __src + 8;
  }
  else
  {
    unint64_t v9 = __src + 8;
    unint64_t v10 = v6 - 8;
    unint64_t v11 = *(void **)(a1 + 8);
    while (v10 < v6)
    {
      uint64_t v12 = *(void *)v10;
      v10 += 8;
      *v11++ = v12;
    }
    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 8 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(void *)unint64_t v4 = *(void *)v3;
  }
  return v4;
}

void sub_231AE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2329AC(void **a1, uint64_t a2, char *__src)
{
  uint64_t v5 = *(char **)(a2 + 8);
  int v6 = (char *)*a1;
  unint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    unint64_t v7 = *(char **)(a2 + 8);
    do
    {
      uint64_t v9 = *((void *)v8 - 1);
      v8 -= 8;
      *((void *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  unint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    unint64_t v7 = *(char **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v11 + v12;
  unint64_t v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v13;
  unint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  uint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void sub_232CE0(void *exc_buf, int a2)
{
  if (a2 == 2)
  {
    id v3 = objc_begin_catch(exc_buf);
    if (v2) {
      void *v2 = +[TCMessageException nsError:v3 domain:@"com.apple.iWork.Compatibility.ApplePubImport"];
    }
    objc_end_catch();
  }
  else
  {
    objc_begin_catch(exc_buf);
  }
  JUMPOUT(0x232CB4);
}

void sub_2333A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2377F4(id a1)
{
}

void sub_237838()
{
}

void sub_2378C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_23791C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  unint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)BuLr3rwnVU31zt9OioJ56;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_2379EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_237B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_237D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_237D8C(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  }
}

void sub_237DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t yyFlexLexer::yywrap(yyFlexLexer *this)
{
  return 1;
}

uint64_t yyFlexLexer::yylex(yyFlexLexer *this)
{
  (*(void (**)(yyFlexLexer *, const char *, ...))(*(void *)this + 112))(this, "yyFlexLexer::yylex invoked but %option yyclass used", vars0);
  return 0;
}

uint64_t PFSCssLexer::yylex(PFSCssLexer *this)
{
  if (!*((_DWORD *)this + 100))
  {
    *((_DWORD *)this + 100) = 1;
    if (!*((_DWORD *)this + 101)) {
      *((_DWORD *)this + 101) = 1;
    }
    uint64_t v2 = (std::ios_base *)((char *)this + *(void *)(*((void *)this + 6) - 24) + 48);
    if ((v2->__rdstate_ & 5) != 0)
    {
      v2->__rdbuf_ = *(void **)((char *)&std::cin + (unint64_t)std::cin.__vftable[-2].~basic_istream_0 + 40);
      std::ios_base::clear(v2, 0);
    }
    uint64_t v3 = (std::ostream *)((char *)this + *(void *)(*((void *)this + 27) - 24) + 216);
    if (((uint64_t)v3[4].__vftable & 5) != 0)
    {
      v3[5].__vftable = *(std::ostream_vtbl **)((char *)&std::cout
                                              + (unint64_t)std::cout.__vftable[-2].~basic_ostream_0
                                              + 40);
      std::ios_base::clear((std::ios_base *)v3, 0);
    }
    uint64_t v4 = *((void *)this + 54);
    if (!v4 || !*(void *)(v4 + 8 * *((void *)this + 52)))
    {
      double v5 = yyFlexLexer::yyensure_buffer_stack(this);
      *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52)) = (*(uint64_t (**)(PFSCssLexer *, char *, uint64_t, double))(*(void *)this + 32))(this, (char *)this + 48, 0x4000, v5);
    }
    yyFlexLexer::yy_load_buffer_state(this);
  }
  int v6 = (void *)((char *)this + 392);
  unint64_t v7 = (char *)this + 448;
  while (1)
  {
LABEL_13:
    uint64_t v8 = (unsigned char *)*((void *)this + 49);
    unsigned char *v8 = *((unsigned char *)this + 376);
    int v9 = *((_DWORD *)this + 101);
    unint64_t v10 = v8;
    do
    {
LABEL_14:
      uint64_t v11 = byte_3462D8[*v8];
      if (word_34C066[v9])
      {
        *((_DWORD *)this + 110) = v9;
        *((void *)this + 56) = v8;
      }
      uint64_t v12 = v9;
      uint64_t v13 = word_348C54[v9] + v11;
      if (v9 != (__int16)word_3463D8[v13])
      {
        do
        {
          uint64_t v12 = word_3491EC[v12];
          if (v12 >= 617) {
            uint64_t v11 = *((unsigned __int8 *)&unk_349784 + v11);
          }
          uint64_t v13 = word_348C54[v12] + v11;
        }
        while (word_3463D8[v13] != (unsigned __int16)v12);
      }
      int v9 = word_3497D0[v13];
      ++v8;
    }
    while (v9 != 616);
    while (2)
    {
      int v14 = *((_DWORD *)this + 110);
      uint64_t v15 = (unsigned char **)v7;
LABEL_22:
      uint64_t v16 = *v15;
      int v17 = (__int16)word_34C066[v14];
      *((void *)this + 1) = v10;
      *((void *)this + 2) = v16 - v10;
      *((unsigned char *)this + 376) = *v16;
      unsigned char *v16 = 0;
      *((void *)this + 49) = v16;
LABEL_23:
      switch(v17)
      {
        case 0:
          unsigned char *v16 = *((unsigned char *)this + 376);
          continue;
        case 1:
          goto LABEL_13;
        case 2:
          return 258;
        case 3:
          return 259;
        case 4:
          return 260;
        case 5:
          return 261;
        case 6:
          return 262;
        case 7:
          return 266;
        case 8:
          return 267;
        case 9:
          return 268;
        case 10:
          return 269;
        case 11:
          return 270;
        case 12:
          return 271;
        case 13:
          return 272;
        case 14:
          return 273;
        case 15:
          return 274;
        case 16:
          return 275;
        case 17:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 265;
        case 18:
          return 276;
        case 19:
          return 277;
        case 20:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 263;
        case 21:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 264;
        case 22:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 278;
        case 23:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 279;
        case 24:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 280;
        case 25:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 281;
        case 26:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 282;
        case 27:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 283;
        case 28:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 284;
        case 29:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 285;
        case 30:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 286;
        case 31:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 287;
        case 32:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 288;
        case 33:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 289;
        case 34:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 290;
        case 35:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 291;
        case 36:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 292;
        case 37:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 293;
        case 38:
          *((void *)this + 65) = *((void *)this + 1);
          return 294;
        case 39:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 295;
        case 40:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 296;
        case 41:
        case 42:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 297;
        case 43:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 298;
        case 44:
        case 45:
          *((void *)this + 65) = strdup(*((const char **)this + 1));
          return 299;
        case 46:
          return 123;
        case 47:
          return **((char **)this + 1);
        case 48:
          unsigned int v26 = v6;
          unint64_t v27 = v7;
          (*(void (**)(PFSCssLexer *, void, void))(*(void *)this + 104))(this, *((void *)this + 1), *((void *)this + 2));
          goto LABEL_43;
        case 49:
          uint64_t v18 = *((void *)this + 1);
          unsigned char *v16 = *((unsigned char *)this + 376);
          uint64_t v19 = *((void *)this + 54);
          uint64_t v20 = *((void *)this + 52);
          uint64_t v21 = *(void *)(v19 + 8 * v20);
          if (*(_DWORD *)(v21 + 64))
          {
            uint64_t v22 = *((void *)this + 48);
          }
          else
          {
            uint64_t v22 = *(void *)(v21 + 32);
            *((void *)this + 48) = v22;
            *(void *)uint64_t v21 = *(void *)((char *)this + *(void *)(*((void *)this + 6) - 24) + 88);
            uint64_t v21 = *(void *)(v19 + 8 * v20);
            *(_DWORD *)(v21 + 64) = 1;
          }
          uint64_t v30 = v6;
          unsigned int v31 = v7;
          if (*v6 <= (unint64_t)(*(void *)(v21 + 8) + v22))
          {
            *((void *)this + 49) = *((void *)this + 1) + ~v18 + (int)v16;
            int previous_state = yyFlexLexer::yy_get_previous_state(this);
            int v9 = yyFlexLexer::yy_try_NUL_trans(this, previous_state);
            unint64_t v10 = (unsigned char *)*((void *)this + 1);
            if (!v9)
            {
              int v14 = *((_DWORD *)this + 110);
              int v6 = v30;
              unint64_t v7 = v31;
              uint64_t v15 = (unsigned char **)v31;
              goto LABEL_22;
            }
            int v6 = v30;
            unint64_t v7 = v31;
            uint64_t v8 = (unsigned char *)(*v30 + 1);
            *uint64_t v30 = v8;
            goto LABEL_14;
          }
          unsigned int v29 = v10;
          int next_buffer = yyFlexLexer::yy_get_next_buffer(this);
          if (next_buffer != 1)
          {
            unint64_t v7 = v31;
            if (!next_buffer)
            {
              *((void *)this + 49) = *((void *)this + 1) + ~v18 + (int)v16;
              int v9 = yyFlexLexer::yy_get_previous_state(this);
              int v6 = v30;
              unint64_t v7 = v31;
              uint64_t v8 = (unsigned char *)*((void *)this + 49);
              unint64_t v10 = (unsigned char *)*((void *)this + 1);
              goto LABEL_14;
            }
            int v6 = v30;
            if (next_buffer != 2) {
              goto LABEL_13;
            }
            *((void *)this + 49) = *(void *)(*(void *)(*((void *)this + 54) + 8 * *((void *)this + 52)) + 8)
                                   + *((void *)this + 48);
            int v14 = yyFlexLexer::yy_get_previous_state(this);
            int v6 = v30;
            unint64_t v7 = v31;
            unint64_t v10 = (unsigned char *)*((void *)this + 1);
            uint64_t v15 = (unsigned char **)v30;
            goto LABEL_22;
          }
          *((_DWORD *)this + 102) = 0;
          if ((*(unsigned int (**)(PFSCssLexer *))(*(void *)this + 88))(this))
          {
            *((void *)this + 49) = *((void *)this + 1);
            int v24 = *((_DWORD *)this + 101);
            if (v24 >= 1) {
              --v24;
            }
            int v17 = (v24 >> 1) + 50;
            int v6 = v30;
            unint64_t v7 = v31;
            unint64_t v10 = v29;
            goto LABEL_23;
          }
          int v6 = v30;
          unint64_t v7 = v31;
          if (!*((_DWORD *)this + 102))
          {
            (*(void (**)(PFSCssLexer *, char *))(*(void *)this + 56))(this, (char *)this + 48);
            int v6 = v30;
            unint64_t v7 = v31;
          }
          break;
        case 50:
          return 0;
        default:
          unsigned int v26 = v6;
          unint64_t v27 = v7;
          (*(void (**)(PFSCssLexer *, const char *))(*(void *)this + 112))(this, "fatal flex scanner internal error--no action found");
LABEL_43:
          unint64_t v7 = v27;
          int v6 = v26;
          goto LABEL_13;
      }
      break;
    }
  }
}

double yyFlexLexer::yyensure_buffer_stack(yyFlexLexer *this)
{
  uint64_t v2 = (void *)*((void *)this + 54);
  if (v2)
  {
    uint64_t v3 = *((void *)this + 53);
    if (*((void *)this + 52) >= (unint64_t)(v3 - 1))
    {
      uint64_t v4 = v3 + 8;
      double v5 = (char *)malloc_type_realloc(v2, 8 * (v3 + 8), 0x332DE5BFuLL);
      *((void *)this + 54) = v5;
      if (!v5)
      {
        (*(void (**)(yyFlexLexer *, const char *))(*(void *)this + 112))(this, "out of dynamic memory in yyensure_buffer_stack()");
        double v5 = (char *)*((void *)this + 54);
      }
      int v6 = &v5[8 * *((void *)this + 53)];
      double result = 0.0;
      *((_OWORD *)v6 + 2) = 0u;
      *((_OWORD *)v6 + 3) = 0u;
      *(_OWORD *)int v6 = 0u;
      *((_OWORD *)v6 + 1) = 0u;
      *((void *)this + 53) = v4;
    }
  }
  else
  {
    uint64_t v8 = malloc_type_malloc(8uLL, 0x3C24D9A4uLL);
    *((void *)this + 54) = v8;
    if (!v8)
    {
      (*(void (**)(yyFlexLexer *, const char *))(*(void *)this + 112))(this, "out of dynamic memory in yyensure_buffer_stack()");
      uint64_t v8 = (void *)*((void *)this + 54);
    }
    void *v8 = 0;
    double result = 0.0;
    *((_OWORD *)this + 26) = xmmword_3462C0;
  }
  return result;
}

void yyFlexLexer::yy_load_buffer_state(yyFlexLexer *this)
{
  uint64_t v2 = (char *)this + 48;
  uint64_t v1 = *((void *)this + 6);
  uint64_t v3 = *((void *)this + 54);
  uint64_t v4 = *((void *)this + 52);
  uint64_t v5 = *(void *)(v3 + 8 * v4);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *(void *)(v5 + 16);
  *((void *)this + 48) = v6;
  *((void *)this + 49) = v7;
  *((void *)this + 1) = v7;
  uint64_t v8 = (std::ios_base *)((char *)this + *(void *)(v1 - 24) + 48);
  v8->__rdbuf_ = **(void ***)(v3 + 8 * v4);
  std::ios_base::clear(v8, 0);
  v2[328] = **((unsigned char **)v2 + 43);
}

uint64_t yyFlexLexer::yy_get_previous_state(yyFlexLexer *this)
{
  uint64_t v1 = *((unsigned int *)this + 101);
  uint64_t v2 = (unsigned char *)*((void *)this + 1);
  uint64_t v3 = (unsigned char *)*((void *)this + 49);
  if (v2 < v3)
  {
    do
    {
      if (*v2) {
        uint64_t v4 = byte_3462D8[*v2];
      }
      else {
        uint64_t v4 = &dword_0 + 1;
      }
      if (word_34C066[(int)v1])
      {
        *((_DWORD *)this + 110) = v1;
        *((void *)this + 56) = v2;
      }
      uint64_t v5 = (int)v1;
      uint64_t v6 = word_348C54[(int)v1] + v4;
      if (v1 != (__int16)word_3463D8[v6])
      {
        do
        {
          uint64_t v5 = word_3491EC[v5];
          if (v5 >= 617) {
            uint64_t v4 = *((unsigned __int8 *)&unk_349784 + v4);
          }
          uint64_t v6 = word_348C54[v5] + v4;
        }
        while (word_3463D8[v6] != (unsigned __int16)v5);
      }
      uint64_t v1 = word_3497D0[v6];
      ++v2;
    }
    while (v2 != v3);
  }
  return v1;
}

uint64_t yyFlexLexer::yy_try_NUL_trans(yyFlexLexer *this, int a2)
{
  uint64_t v2 = a2;
  if (word_34C066[a2])
  {
    uint64_t v3 = *((void *)this + 49);
    *((_DWORD *)this + 110) = a2;
    *((void *)this + 56) = v3;
  }
  uint64_t v4 = word_348C54[a2] + 1;
  if ((__int16)word_3463D8[v4] != a2)
  {
    do
    {
      int v5 = (unsigned __int16)word_3491EC[v2];
      uint64_t v2 = (__int16)v5;
      uint64_t v4 = word_348C54[(__int16)v5] + 1;
    }
    while (v5 != word_3463D8[v4]);
  }
  int v6 = (unsigned __int16)word_3497D0[v4];
  if (v6 == 616) {
    LOWORD(v6) = 0;
  }
  return (__int16)v6;
}

uint64_t yyFlexLexer::yy_get_next_buffer(yyFlexLexer *this)
{
  uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
  uint64_t v3 = *(unsigned char **)(v2 + 8);
  uint64_t v4 = (char *)*((void *)this + 1);
  if (*((void *)this + 49) > (unint64_t)&v3[*((void *)this + 48) + 1])
  {
    (*(void (**)(yyFlexLexer *, const char *))(*(void *)this + 112))(this, "fatal flex scanner internal error--end of buffer missed");
    uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
  }
  uint64_t v5 = *((void *)this + 49);
  uint64_t v6 = *((void *)this + 1);
  if (!*(_DWORD *)(v2 + 60))
  {
    if (v5 - v6 == 1) {
      return 1;
    }
    else {
      return 2;
    }
  }
  int v7 = ~v6;
  int v8 = v7 + v5;
  if (v7 + (int)v5 >= 1)
  {
    int v9 = v7 + v5;
    do
    {
      char v10 = *v4++;
      *v3++ = v10;
      --v9;
    }
    while (v9);
    uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
  }
  if (*(_DWORD *)(v2 + 64) == 2)
  {
    *((void *)this + 48) = 0;
    *(void *)(v2 + 32) = 0;
LABEL_28:
    if (v8)
    {
      unint64_t v20 = 0;
      uint64_t v11 = 2;
      *(_DWORD *)(v2 + 64) = 2;
    }
    else
    {
      (*(void (**)(yyFlexLexer *, char *))(*(void *)this + 56))(this, (char *)this + 48);
      unint64_t v20 = *((void *)this + 48);
      uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
      uint64_t v11 = 1;
    }
    goto LABEL_31;
  }
  int v12 = ~v8;
  int v13 = *(_DWORD *)(v2 + 24);
  unsigned int v14 = v13 + ~v8;
  if (!v14)
  {
    uint64_t v15 = (char *)*((void *)this + 49);
    while (1)
    {
      uint64_t v16 = *(void **)(v2 + 8);
      if (!*(_DWORD *)(v2 + 40)) {
        break;
      }
      int v17 = 2 * v13;
      *(_DWORD *)(v2 + 24) = v17;
      uint64_t v18 = (char *)malloc_type_realloc(v16, v17 + 2, 0x332DE5BFuLL);
      *(void *)(v2 + 8) = v18;
      if (!v18) {
        goto LABEL_19;
      }
LABEL_20:
      uint64_t v15 = &v18[(int)v15 - (int)v16];
      *((void *)this + 49) = v15;
      uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
      int v13 = *(_DWORD *)(v2 + 24);
      unsigned int v14 = v13 + v12;
      if (v13 + v12) {
        goto LABEL_21;
      }
    }
    *(void *)(v2 + 8) = 0;
LABEL_19:
    (*(void (**)(yyFlexLexer *, const char *))(*(void *)this + 112))(this, "fatal error - scanner input buffer overflow");
    uint64_t v18 = *(char **)(v2 + 8);
    goto LABEL_20;
  }
LABEL_21:
  if (v14 >= 0x2000) {
    uint64_t v19 = 0x2000;
  }
  else {
    uint64_t v19 = v14;
  }
  unint64_t v20 = (*(uint64_t (**)(yyFlexLexer *, void, uint64_t))(*(void *)this + 96))(this, *(void *)(v2 + 8) + v8, v19);
  *((void *)this + 48) = v20;
  if ((v20 & 0x80000000) != 0)
  {
    (*(void (**)(yyFlexLexer *, const char *))(*(void *)this + 112))(this, "input in flex scanner failed");
    unint64_t v20 = *((void *)this + 48);
  }
  uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
  *(void *)(v2 + 32) = v20;
  if (!v20) {
    goto LABEL_28;
  }
  uint64_t v11 = 0;
LABEL_31:
  unint64_t v21 = v20 + v8;
  if (v21 > *(int *)(v2 + 24))
  {
    size_t v22 = v21 + (v20 >> 1);
    unint64_t v23 = malloc_type_realloc(*(void **)(v2 + 8), v22, 0x332DE5BFuLL);
    uint64_t v24 = *((void *)this + 54);
    uint64_t v25 = *((void *)this + 52);
    *(void *)(*(void *)(v24 + 8 * v25) + 8) = v23;
    uint64_t v2 = *(void *)(v24 + 8 * v25);
    if (!*(void *)(v2 + 8))
    {
      (*(void (**)(yyFlexLexer *, const char *))(*(void *)this + 112))(this, "out of dynamic memory in yy_get_next_buffer()");
      uint64_t v2 = *(void *)(*((void *)this + 54) + 8 * *((void *)this + 52));
    }
    *(_DWORD *)(v2 + 24) = v22 - 2;
    unint64_t v21 = *((void *)this + 48) + v8;
  }
  *((void *)this + 48) = v21;
  *(unsigned char *)(*(void *)(v2 + 8) + v21) = 0;
  *(unsigned char *)(*((void *)this + 48)
           + *(void *)(*(void *)(*((void *)this + 54) + 8 * *((void *)this + 52)) + 8)
           + 1) = 0;
  *((void *)this + 1) = *(void *)(*(void *)(*((void *)this + 54) + 8 * *((void *)this + 52)) + 8);
  return v11;
}

uint64_t yyFlexLexer::yyFlexLexer(uint64_t a1, std::istream *a2, std::ostream *a3)
{
  *(void *)a1 = off_45C3B8;
  if (a2) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = &std::cin;
  }
  uint64_t v6 = *(void **)((char *)&v5[2].__gc_ + (unint64_t)v5->__vftable[-2].~basic_istream_0);
  *(void *)(a1 + 56) = 0;
  std::ios_base::init((std::ios_base *)(a1 + 64), v6);
  *(void *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = -1;
  if (a3) {
    int v7 = a3;
  }
  else {
    int v7 = &std::cout;
  }
  int v8 = *(std::ostream_vtbl **)((char *)&v7[5].__vftable + (unint64_t)v7->__vftable[-2].~basic_ostream_0);
  std::ios_base::init((std::ios_base *)(a1 + 224), v8);
  *(void *)(a1 + 360) = 0;
  *(_DWORD *)(a1 + 368) = -1;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 408) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 512) = 0;
  return a1;
}

void sub_239068(_Unwind_Exception *a1)
{
}

double yyFlexLexer::ctor_common(yyFlexLexer *this)
{
  *((void *)this + 49) = 0;
  *((void *)this + 50) = 0;
  *(void *)&double result = 1;
  *((void *)this + 3) = 1;
  *((_DWORD *)this + 102) = 0;
  *((void *)this + 57) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 53) = 0;
  *((void *)this + 54) = 0;
  *((void *)this + 52) = 0;
  *((void *)this + 62) = 0;
  *((void *)this + 63) = 0;
  *((_DWORD *)this + 128) = 0;
  return result;
}

uint64_t yyFlexLexer::yyFlexLexer(uint64_t a1, void *a2, void *a3)
{
  *(void *)a1 = off_45C3B8;
  uint64_t v5 = *(void **)((char *)a2 + *(void *)(*a2 - 24) + 40);
  *(void *)(a1 + 56) = 0;
  std::ios_base::init((std::ios_base *)(a1 + 64), v5);
  *(void *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = -1;
  uint64_t v6 = *(void **)((char *)a3 + *(void *)(*a3 - 24) + 40);
  std::ios_base::init((std::ios_base *)(a1 + 224), v6);
  *(void *)(a1 + 360) = 0;
  *(_DWORD *)(a1 + 368) = -1;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 408) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 512) = 0;
  return a1;
}

void sub_23921C(_Unwind_Exception *a1)
{
}

void yyFlexLexer::~yyFlexLexer(yyFlexLexer *this)
{
  *(void *)this = off_45C3B8;
  if (*((void *)this + 57)) {
    operator delete[]();
  }
  free(*((void **)this + 5));
  uint64_t v2 = *((void *)this + 54);
  if (v2) {
    uint64_t v3 = *(void *)(v2 + 8 * *((void *)this + 52));
  }
  else {
    uint64_t v3 = 0;
  }
  (*(void (**)(yyFlexLexer *, uint64_t))(*(void *)this + 40))(this, v3);
  free(*((void **)this + 54));
  std::ostream::~ostream();
  std::istream::~istream();
}

{
  uint64_t vars8;

  yyFlexLexer::~yyFlexLexer(this);

  operator delete();
}

void yyFlexLexer::switch_streams(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = a1[54];
  if (v6) {
    uint64_t v7 = *(void *)(v6 + 8 * a1[52]);
  }
  else {
    uint64_t v7 = 0;
  }
  (*(void (**)(void *, uint64_t))(*a1 + 40))(a1, v7);
  uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, 0x4000);
  (*(void (**)(void *, uint64_t))(*a1 + 16))(a1, v8);
  int v9 = (std::ios_base *)((char *)a1 + *(void *)(a1[27] - 24) + 216);
  v9->__rdbuf_ = *(void **)((char *)a3 + *(void *)(*a3 - 24) + 40);

  std::ios_base::clear(v9, 0);
}

uint64_t yyFlexLexer::switch_streams(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 80))();
}

uint64_t yyFlexLexer::LexerInput(yyFlexLexer *this, char *a2)
{
  uint64_t v2 = (void *)((char *)this + 48);
  if ((*((unsigned char *)this + *(void *)(*((void *)this + 6) - 24) + 80) & 7) != 0) {
    return 0;
  }
  std::istream::read();
  if (*((unsigned char *)v2 + *(void *)(*v2 - 24) + 32)) {
    return -1;
  }
  else {
    return *((void *)this + 7);
  }
}

uint64_t yyFlexLexer::LexerOutput(yyFlexLexer *this, const char *a2)
{
  return std::ostream::write((char *)this + 216, a2);
}

void *yyrealloc(void *a1, size_t a2)
{
  return malloc_type_realloc(a1, a2, 0x332DE5BFuLL);
}

uint64_t yyFlexLexer::yyunput(uint64_t this, char a2, char *a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = this;
  uint64_t v6 = *(unsigned char **)(this + 392);
  *uint64_t v6 = *(unsigned char *)(this + 376);
  uint64_t v7 = *(void *)(*(void *)(this + 432) + 8 * *(void *)(this + 416));
  unint64_t v8 = *(void *)(v7 + 8);
  if ((unint64_t)v6 < v8 + 2)
  {
    uint64_t v9 = *(void *)(this + 384) + 2;
    uint64_t v10 = *(int *)(v7 + 24);
    uint64_t v11 = v10 + v8 + 2;
    unint64_t v12 = v8 + v9;
    if (v9 >= 1)
    {
      do
      {
        char v13 = *(unsigned char *)--v12;
        *(unsigned char *)--uint64_t v11 = v13;
        uint64_t v7 = *(void *)(*(void *)(this + 432) + 8 * *(void *)(this + 416));
        unint64_t v8 = *(void *)(v7 + 8);
      }
      while (v12 > v8);
      LODWORD(v10) = *(_DWORD *)(v7 + 24);
    }
    int v14 = v11 - v12;
    v6 += v14;
    uint64_t v3 = &a3[v14];
    *(void *)(this + 384) = (int)v10;
    *(void *)(v7 + 32) = (int)v10;
    if ((unint64_t)v6 < v8 + 2) {
      this = (*(uint64_t (**)(uint64_t, const char *))(*(void *)this + 112))(this, "flex scanner push-back overflow");
    }
  }
  *(v6 - 1) = a2;
  uint64_t v15 = v6 - 1;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 376) = *v15;
  *(void *)(v5 + 392) = v15;
  return this;
}

uint64_t yyFlexLexer::yyinput(yyFlexLexer *this)
{
  **((unsigned char **)this + 49) = *((unsigned char *)this + 376);
  for (int i = (unsigned char *)*((void *)this + 49); !*i; int i = (unsigned char *)*((void *)this + 49))
  {
    if ((unint64_t)i < *(void *)(*(void *)(*((void *)this + 54) + 8 * *((void *)this + 52)) + 8)
                             + *((void *)this + 48))
    {
      unsigned char *i = 0;
      break;
    }
    uint64_t v6 = *((void *)this + 1);
    *((void *)this + 49) = i + 1;
    int next_buffer = yyFlexLexer::yy_get_next_buffer(this);
    if (next_buffer != 1)
    {
      if (next_buffer != 2)
      {
        if (!next_buffer) {
          *((void *)this + 49) = &i[*((void *)this + 1) - v6];
        }
        break;
      }
      (*(void (**)(yyFlexLexer *, char *))(*(void *)this + 56))(this, (char *)this + 48);
    }
    if ((*(unsigned int (**)(yyFlexLexer *))(*(void *)this + 88))(this)) {
      return 0;
    }
    if (!*((_DWORD *)this + 102)) {
      (*(void (**)(yyFlexLexer *, char *))(*(void *)this + 56))(this, (char *)this + 48);
    }
    **((unsigned char **)this + 49) = *((unsigned char *)this + 376);
  }
  uint64_t v3 = (unsigned char *)*((void *)this + 49);
  uint64_t result = *v3;
  unsigned char *v3 = 0;
  uint64_t v5 = (unsigned char *)(*((void *)this + 49) + 1);
  *((void *)this + 49) = v5;
  *((unsigned char *)this + 376) = *v5;
  return result;
}

void yyFlexLexer::yyrestart(yyFlexLexer *this, void *a2)
{
  uint64_t v4 = *((void *)this + 54);
  if (v4 && (uint64_t v5 = *((void *)this + 52), *(void *)(v4 + 8 * v5))
    || (double v6 = yyFlexLexer::yyensure_buffer_stack(this),
        v7 = (*(uint64_t (**)(yyFlexLexer *, char *, uint64_t, double))(*(void *)this + 32))(this, (char *)this + 48, 0x4000, v6), v5 = *((void *)this + 52), *(void *)(*((void *)this + 54) + 8 * v5) = v7, (uint64_t v4 = *((void *)this + 54)) != 0))
  {
    uint64_t v8 = *(void *)(v4 + 8 * v5);
  }
  else
  {
    uint64_t v8 = 0;
  }
  yyFlexLexer::yy_init_buffer(this, v8, a2);

  yyFlexLexer::yy_load_buffer_state(this);
}

int *yyFlexLexer::yy_init_buffer(yyFlexLexer *a1, uint64_t a2, void *a3)
{
  int v6 = *__error();
  yyFlexLexer::yy_flush_buffer(a1, a2);
  *(void *)a2 = *(void *)((char *)a3 + *(void *)(*a3 - 24) + 40);
  *(_DWORD *)(a2 + 60) = 1;
  uint64_t v7 = *((void *)a1 + 54);
  if (v7) {
    uint64_t v7 = *(void *)(v7 + 8 * *((void *)a1 + 52));
  }
  if (v7 != a2) {
    *(void *)(a2 + 52) = 1;
  }
  *(_DWORD *)(a2 + 44) = 0;
  uint64_t result = __error();
  *uint64_t result = v6;
  return result;
}

uint64_t yyFlexLexer::yyrestart(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 56))();
}

void yyFlexLexer::yy_switch_to_buffer(uint64_t a1, uint64_t a2)
{
  yyFlexLexer::yyensure_buffer_stack((yyFlexLexer *)a1);
  uint64_t v4 = *(void *)(a1 + 432);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 416);
    uint64_t v6 = *(void *)(v4 + 8 * v5);
    if (v6 != a2)
    {
      if (v6)
      {
        **(unsigned char **)(a1 + 392) = *(unsigned char *)(a1 + 376);
        uint64_t v4 = *(void *)(a1 + 432);
        uint64_t v5 = *(void *)(a1 + 416);
        uint64_t v7 = *(void *)(a1 + 384);
        *(void *)(*(void *)(v4 + 8 * v5) + 16) = *(void *)(a1 + 392);
        *(void *)(*(void *)(v4 + 8 * v5) + 32) = v7;
      }
      *(void *)(v4 + 8 * v5) = a2;
      yyFlexLexer::yy_load_buffer_state((yyFlexLexer *)a1);
      *(_DWORD *)(a1 + 408) = 1;
    }
  }
}

_DWORD *yyFlexLexer::yy_create_buffer(yyFlexLexer *a1, void *a2, int a3)
{
  uint64_t v6 = malloc_type_malloc(0x48uLL, 0x3C24D9A4uLL);
  if (!v6) {
    (*(void (**)(yyFlexLexer *, const char *))(*(void *)a1 + 112))(a1, "out of dynamic memory in yy_create_buffer()");
  }
  void v6[6] = a3;
  uint64_t v7 = malloc_type_malloc(a3 + 2, 0x3C24D9A4uLL);
  *((void *)v6 + 1) = v7;
  if (!v7) {
    (*(void (**)(yyFlexLexer *, const char *))(*(void *)a1 + 112))(a1, "out of dynamic memory in yy_create_buffer()");
  }
  v6[10] = 1;
  yyFlexLexer::yy_init_buffer(a1, (uint64_t)v6, a2);
  return v6;
}

void *yyalloc(size_t a1)
{
  return malloc_type_malloc(a1, 0x3C24D9A4uLL);
}

uint64_t yyFlexLexer::yy_create_buffer(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 32))();
}

void yyFlexLexer::yy_delete_buffer(uint64_t a1, void **a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 432);
    if (v3) {
      uint64_t v4 = *(void ***)(v3 + 8 * *(void *)(a1 + 416));
    }
    else {
      uint64_t v4 = 0;
    }
    if (v4 == a2) {
      *(void *)(v3 + 8 * *(void *)(a1 + 416)) = 0;
    }
    if (*((_DWORD *)a2 + 10)) {
      free(a2[1]);
    }
    free(a2);
  }
}

void yyFlexLexer::yy_flush_buffer(yyFlexLexer *this, uint64_t a2)
{
  if (a2)
  {
    *(void *)(a2 + 32) = 0;
    **(unsigned char **)(a2 + 8) = 0;
    *(unsigned char *)(*(void *)(a2 + 8) + 1) = 0;
    *(void *)(a2 + 16) = *(void *)(a2 + 8);
    *(_DWORD *)(a2 + 48) = 1;
    *(_DWORD *)(a2 + 64) = 0;
    uint64_t v2 = *((void *)this + 54);
    if (v2) {
      uint64_t v2 = *(void *)(v2 + 8 * *((void *)this + 52));
    }
    if (v2 == a2) {
      yyFlexLexer::yy_load_buffer_state(this);
    }
  }
}

void yyFlexLexer::yypush_buffer_state(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    yyFlexLexer::yyensure_buffer_stack((yyFlexLexer *)a1);
    uint64_t v4 = *(void *)(a1 + 432);
    uint64_t v5 = *(void *)(a1 + 416);
    if (*(void *)(v4 + 8 * v5))
    {
      **(unsigned char **)(a1 + 392) = *(unsigned char *)(a1 + 376);
      uint64_t v4 = *(void *)(a1 + 432);
      uint64_t v6 = *(void *)(a1 + 416);
      uint64_t v7 = *(void *)(a1 + 384);
      *(void *)(*(void *)(v4 + 8 * v6) + 16) = *(void *)(a1 + 392);
      *(void *)(*(void *)(v4 + 8 * v6) + 32) = v7;
      uint64_t v5 = v6 + 1;
      *(void *)(a1 + 416) = v5;
    }
    *(void *)(v4 + 8 * v5) = a2;
    yyFlexLexer::yy_load_buffer_state((yyFlexLexer *)a1);
    *(_DWORD *)(a1 + 408) = 1;
  }
}

void yyFlexLexer::yypop_buffer_state(yyFlexLexer *this)
{
  uint64_t v1 = *((void *)this + 54);
  if (v1 && *(void *)(v1 + 8 * *((void *)this + 52)))
  {
    (*(void (**)(yyFlexLexer *))(*(void *)this + 40))(this);
    uint64_t v3 = *((void *)this + 52);
    *(void *)(*((void *)this + 54) + 8 * v3) = 0;
    if (v3) {
      *((void *)this + 52) = --v3;
    }
    uint64_t v4 = *((void *)this + 54);
    if (v4)
    {
      if (*(void *)(v4 + 8 * v3))
      {
        yyFlexLexer::yy_load_buffer_state(this);
        *((_DWORD *)this + 102) = 1;
      }
    }
  }
}

_DWORD *yyFlexLexer::yy_push_state(_DWORD *this, int a2)
{
  uint64_t v3 = (uint64_t)this;
  int v4 = this[9];
  if (this[8] >= v4)
  {
    int v5 = v4 + 25;
    this[9] = v5;
    uint64_t v6 = (void *)*((void *)this + 5);
    this = v6 ? malloc_type_realloc(v6, 4 * v5, 0x332DE5BFuLL) : malloc_type_malloc(4 * v5, 0x3C24D9A4uLL);
    *(void *)(v3 + 40) = this;
    if (!this) {
      this = (_DWORD *)(*(uint64_t (**)(uint64_t, const char *))(*(void *)v3 + 112))(v3, "out of memory expanding start-condition stack");
    }
  }
  int v7 = *(_DWORD *)(v3 + 404);
  if (v7 >= 1) {
    --v7;
  }
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v9 = *(int *)(v3 + 32);
  *(_DWORD *)(v3 + 32) = v9 + 1;
  *(_DWORD *)(v8 + 4 * v9) = v7 >> 1;
  *(_DWORD *)(v3 + 404) = (2 * a2) | 1;
  return this;
}

_DWORD *yyFlexLexer::yy_pop_state(_DWORD *this)
{
  uint64_t v1 = this;
  int v2 = this[8];
  int v3 = v2 - 1;
  this[8] = v2 - 1;
  if (v2 <= 0)
  {
    this = (_DWORD *)(*(uint64_t (**)(_DWORD *, const char *))(*(void *)this + 112))(this, "start-condition stack underflow");
    int v3 = v1[8];
  }
  v1[101] = (2 * *(_DWORD *)(*((void *)v1 + 5) + 4 * v3)) | 1;
  return this;
}

uint64_t yyFlexLexer::yy_top_state(yyFlexLexer *this)
{
  return *(unsigned int *)(*((void *)this + 5) + 4 * *((int *)this + 8) - 4);
}

void yyFlexLexer::LexerError(yyFlexLexer *this, char *a2)
{
  int v2 = sub_239E20(&std::cerr, a2);
  sub_239E68(v2);
  exit(2);
}

void *sub_239E20(void *a1, char *__s)
{
  size_t v4 = strlen(__s);

  return sub_239F20(a1, (uint64_t)__s, v4);
}

void *sub_239E68(void *a1)
{
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
  int v2 = std::locale::use_facet(&v4, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v2->__vftable[2].~facet_0)(v2, 10);
  std::locale::~locale(&v4);
  std::ostream::put();
  std::ostream::flush();
  return a1;
}

void sub_239F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

void *sub_239F20(void *a1, uint64_t a2, uint64_t a3)
{
  std::ostream::sentry::sentry();
  if (v13)
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      uint64_t v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_23A0C4(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  std::ostream::sentry::~sentry();
  return a1;
}

void sub_23A05C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  std::ostream::sentry::~sentry();
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x23A03CLL);
}

void sub_23A0B0(_Unwind_Exception *a1)
{
}

uint64_t sub_23A0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      sub_23A24C(__p, v12, __c);
      char v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_23A230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_23A24C(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_1F4474();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void deleteString(void *a1)
{
  if (a1) {
    free(a1);
  }
}

unsigned __int8 *getnum(unsigned __int8 *result)
{
  uint64_t v1 = result;
  if (((char)*result & 0x80000000) == 0)
  {
    uint64_t v2 = *result;
    uint64_t v1 = result;
    do
    {
      if (v2 != 46 && (_DefaultRuneLocale.__runetype[v2] & 0x400) == 0) {
        break;
      }
      int v3 = (char)*++v1;
      uint64_t v2 = v3;
    }
    while ((v3 & 0x80000000) == 0);
  }
  *uint64_t v1 = 0;
  return result;
}

char *strdupWithoutQuotes(char *a1)
{
  int v1 = *a1;
  if (v1 == 39 || v1 == 34) {
    ++a1;
  }
  uint64_t v2 = strdup(a1);
  size_t v3 = strlen(v2);
  int v4 = v2[v3 - 1];
  if (v4 == 39 || v4 == 34) {
    v2[v3 - 1] = 0;
  }
  return v2;
}

char *strdupWithoutURLOrQuotes(char *a1)
{
  if (!strncmp(a1, "url", 3uLL)) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = 0;
  }
  for (int i = &a1[v2]; ; ++i)
  {
    int v4 = *i;
    if (v4 != 32) {
      break;
    }
  }
  if (v4 == 40) {
    int v5 = i + 1;
  }
  else {
    int v5 = i;
  }
  do
    int v6 = *v5++;
  while (v6 == 32);
  size_t v7 = strlen(v5 - 1);
  size_t v8 = (unsigned __int8 *)&v5[v7];
  int v9 = v5[v7 - 2];
  if (v9 == 41)
  {
    *(v8 - 2) = 0;
    size_t v10 = v7 - 2;
    int v9 = *(v8 - 3);
  }
  else
  {
    size_t v10 = v7 - 1;
  }
  if (v9 == 32)
  {
    uint64_t v11 = (unsigned __int8 *)&v5[v10 - 1];
    do
    {
      unsigned __int8 *v11 = 0;
      int v12 = *--v11;
    }
    while (v12 == 32);
  }

  return strdupWithoutQuotes(v5 - 1);
}

PFSPair *pairForTerm2(uint64_t a1, char *a2)
{
  id v4 = objc_alloc((Class)NSString);
  int v5 = a2;
  if ((*a2 & 0x80000000) == 0)
  {
    uint64_t v6 = *a2;
    int v5 = a2;
    do
    {
      if (v6 != 46 && (_DefaultRuneLocale.__runetype[v6] & 0x400) == 0) {
        break;
      }
      int v7 = *++v5;
      uint64_t v6 = v7;
    }
    while ((v7 & 0x80000000) == 0);
  }
  char *v5 = 0;
  id v8 = [v4 initWithUTF8String:a2];
  int v9 = [[PFSPair alloc] initWithType:a1 value:v8];
  free(a2);

  return v9;
}

uint64_t yylex(void *a1, PFSStyleParserHandler *this)
{
  size_t v3 = (void *)PFSStyleParserHandler::lexer(this);
  uint64_t result = (*(uint64_t (**)(void *))(*v3 + 64))(v3);
  *a1 = v3[65];
  return result;
}

uint64_t yyparse(PFSStyleParserHandler *a1)
{
  if (yydebug) {
    fwrite("Starting parse\n", 0xFuLL, 1uLL, __stderrp);
  }
  unsigned int v1 = 0;
  int v2 = 0;
  v133 = (void **)v134;
  unint64_t v128 = 200;
  __srdouble c = v134;
  size_t v3 = (__int16 *)v135;
  id v4 = (__int16 *)v135;
  unsigned int v127 = -2;
  while (1)
  {
    __int16 *v3 = v2;
    if (&v4[v128 - 1] <= v3)
    {
      if (v128 >> 4 > 0x270
        || (2 * v128 >= 0x2710 ? (uint64_t v5 = 10000) : (uint64_t v5 = 2 * v128),
            (uint64_t v6 = (__int16 *)malloc_type_malloc(10 * v5 + 7, 0x1AEE7DBBuLL)) == 0))
      {
        v111 = v136;
        goto LABEL_243;
      }
      int v7 = v6;
      uint64_t v8 = v3 - v4;
      uint64_t v9 = v8 + 1;
      memcpy(v6, v4, 2 * (v8 + 1));
      memcpy((char *)v7 + ((2 * v5 + 7) & 0xFFFFFFFFFFFFFFF8), __src, 8 * (v8 + 1));
      if (v4 != (__int16 *)v135) {
        free(v4);
      }
      if (yydebug) {
        fprintf(__stderrp, "Stack size increased to %lu\n", v5);
      }
      size_t v3 = &v7[v8];
      if (v5 <= v9)
      {
        uint64_t v117 = 1;
        v111 = v136;
        goto LABEL_252;
      }
      unint64_t v128 = v5;
      v133 = (void **)((char *)&v7[4 * v9 - 4] + ((2 * v5 + 7) & 0xFFFFFFFFFFFFFFF8));
      __srdouble c = (char *)v7 + ((2 * v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      id v4 = v7;
    }
    if (yydebug) {
      fprintf(__stderrp, "Entering state %d\n", v2);
    }
    int v10 = word_34C538[v2];
    if (v10 == -193) {
      goto LABEL_48;
    }
    int v11 = v127;
    if (v127 == -2)
    {
      if (yydebug) {
        fwrite("Reading a token: ", 0x11uLL, 1uLL, __stderrp);
      }
      int v12 = (void *)PFSStyleParserHandler::lexer(a1);
      int v11 = (*(uint64_t (**)(void *))(*v12 + 64))(v12);
      v124 = (void *)v12[65];
    }
    if (v11 <= 0)
    {
      if (yydebug) {
        fwrite("Now at end of input.\n", 0x15uLL, 1uLL, __stderrp);
      }
      unsigned int v1 = 0;
      unsigned int v127 = 0;
    }
    else
    {
      unsigned int v127 = v11;
      if (v11 > 0x12B) {
        unsigned int v1 = 2;
      }
      else {
        unsigned int v1 = byte_34C7AA[v11];
      }
      if (yydebug)
      {
        fprintf(__stderrp, "%s ", "Next token is");
        char v13 = __stderrp;
        if (v1 >= 0x3D) {
          fprintf(__stderrp, "nterm %s (");
        }
        else {
          fprintf(__stderrp, "token %s (");
        }
        fputc(41, v13);
        fputc(10, __stderrp);
      }
    }
    uint64_t v14 = v1 + v10;
    if (v14 > 0x235 || v1 != word_34C8D6[v14])
    {
LABEL_48:
      unsigned int v19 = byte_34D1AE[v2];
      if (!byte_34D1AE[v2]) {
        goto LABEL_232;
      }
LABEL_49:
      v129 = v4;
      unsigned int v130 = v1;
      uint64_t v20 = v19;
      uint64_t v21 = byte_34D2E7[v19];
      size_t v22 = (PFSPair *)v133[1 - v21];
      v131 = v3;
      v132 = v22;
      if (yydebug)
      {
        fprintf(__stderrp, "Reducing stack by rule %d (line %lu):\n", v20 - 1, word_34D612[v20]);
        if (v21)
        {
          uint64_t v23 = 0;
          do
          {
            int v24 = v23 + 1;
            fprintf(__stderrp, "   $%double d = ", v23 + 1);
            uint64_t v25 = __stderrp;
            if (byte_34D736[word_34D952[v20] + v23] < 61) {
              fprintf(__stderrp, "token %s (");
            }
            else {
              fprintf(__stderrp, "nterm %s (");
            }
            fputc(41, v25);
            fputc(10, __stderrp);
            ++v23;
          }
          while (v21 != v24);
        }
      }
      unsigned int v26 = v131;
      unint64_t v27 = v133;
      switch((int)v20)
      {
        case 2:
          goto LABEL_68;
        case 3:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 38:
        case 39:
        case 50:
        case 52:
        case 69:
        case 70:
        case 71:
        case 72:
        case 111:
        case 144:
        case 145:
          goto LABEL_57;
        case 4:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
          break;
        case 23:
        case 24:
          PFSStyleParserHandler::commentHandler(a1, +[NSString string]);
          goto LABEL_57;
        case 25:
          unsigned int v29 = (NSArray *)[objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 3)];
          PFSStyleParserHandler::namespaceDeclarationHandler(a1, 0, (NSString *)&v29->super.isa);
          goto LABEL_67;
        case 26:
          uint64_t v30 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 5)];
          unsigned int v31 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*(v27 - 3)];
          PFSStyleParserHandler::namespaceDeclarationHandler(a1, v30, v31);

          uint64_t v32 = *(v27 - 5);
          if (v32) {
            free(v32);
          }
          goto LABEL_68;
        case 27:
        case 37:
        case 75:
        case 81:
        case 98:
        case 99:
        case 117:
        case 119:
          goto LABEL_78;
        case 28:
          unsigned int v29 = (NSArray *)objc_alloc_init((Class)NSMutableArray);
          unsigned int v33 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*(v27 - 3)];
          PFSStyleParserHandler::importHandler(a1, v33, v29);

LABEL_67:
LABEL_68:
          unsigned int v34 = *(v27 - 3);
          if (v34) {
            goto LABEL_69;
          }
          goto LABEL_57;
        case 29:
          uint64_t v35 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 4)];
          PFSStyleParserHandler::importHandler(a1, v35, (NSArray *)*(v27 - 2));

          double v36 = *(v27 - 4);
          if (v36) {
            free(v36);
          }
          goto LABEL_105;
        case 30:
          UInt8 v28 = strdupWithoutQuotes((char *)*v133);
          goto LABEL_74;
        case 31:
          UInt8 v28 = strdupWithoutURLOrQuotes((char *)*v133);
          goto LABEL_74;
        case 32:
          PFSStyleParserHandler::endMediaHandler((uint64_t)a1, (NSArray *)*(v133 - 4));
          CGFloat v37 = *(v27 - 4);
          goto LABEL_121;
        case 33:
          PFSStyleParserHandler::endMediaHandler((uint64_t)a1, (NSArray *)*(v133 - 5));
          CGFloat v37 = *(v27 - 5);
          goto LABEL_121;
        case 34:
          PFSStyleParserHandler::startMediaHandler(a1, (NSArray *)*v133);
LABEL_78:
          CGFloat v38 = (PFSPair *)*v27;
          goto LABEL_173;
        case 35:
          long long v39 = (PFSPair *)objc_alloc_init((Class)NSMutableArray);
          id v40 = [objc_alloc((Class)NSString) initWithUTF8String:*(v27 - 1)];
          v132 = v39;
          [(PFSPair *)v39 addObject:v40];
          goto LABEL_204;
        case 36:
          id v41 = [objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 1)];
          [*(v27 - 4) addObject:v41];

          double v42 = *(v27 - 1);
          if (!v42) {
            goto LABEL_114;
          }
          goto LABEL_113;
        case 40:
          PFSStyleParserHandler::endMasterPageHandler((uint64_t)a1);
          goto LABEL_57;
        case 41:
          CGFloat v43 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*v133];
          PFSStyleParserHandler::startMasterPageHandler((id *)a1, v43, 0);
          if (*v27) {
            free(*v27);
          }

          goto LABEL_57;
        case 42:
          id v44 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 2)];
          long long v45 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*v27];
          PFSStyleParserHandler::startMasterPageHandler((id *)a1, v44, v45);
          long long v46 = *(v27 - 2);
          if (v46) {
            free(v46);
          }
          if (*v27) {
            free(*v27);
          }

          goto LABEL_57;
        case 43:
          PFSStyleParserHandler::endRegularPageHandler((uint64_t)a1);
          goto LABEL_57;
        case 44:
          PFSStyleParserHandler::startRegularPageHandler((id *)a1);
          goto LABEL_57;
        case 45:
          id v47 = [objc_alloc((Class)NSString) initWithUTF8String:*v133];
          id v48 = objc_alloc((Class)TSUPair);
          id v49 = v47;
          id v50 = 0;
          goto LABEL_97;
        case 46:
          id v51 = [objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 1)];
          id v52 = [objc_alloc((Class)NSString) initWithUTF8String:*v27];
          v132 = (PFSPair *)[objc_alloc((Class)TSUPair) initWithFirst:v51 second:v52];

          CGAffineTransform v53 = *(v27 - 1);
          if (v53) {
            free(v53);
          }
          goto LABEL_130;
        case 47:
          id v47 = [objc_alloc((Class)NSString) initWithUTF8String:*v133];
          id v48 = objc_alloc((Class)TSUPair);
          id v49 = 0;
          id v50 = v47;
LABEL_97:
          CGAffineTransform v54 = (PFSPair *)[v48 initWithFirst:v49 second:v50];
          goto LABEL_111;
        case 48:
          PFSStyleParserHandler::endFontFaceHandler((NSMutableDictionary *)a1);
          goto LABEL_57;
        case 49:
          PFSStyleParserHandler::startFontFaceHandler((NSMutableDictionary *)a1);
          goto LABEL_57;
        case 51:
          CGFloat v37 = *(v133 - 6);
          goto LABEL_121;
        case 59:
          PFSStyleParserHandler::endSlotHandler((uint64_t)a1);
          goto LABEL_57;
        case 60:
          long long v55 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 2)];
          PFSStyleParserHandler::startSlotHandler((id *)a1, v55);

          unsigned int v34 = *(v27 - 2);
          if (v34) {
LABEL_69:
          }
            free(v34);
          goto LABEL_57;
        case 61:
          PFSStyleParserHandler::positionedSlotsHandler((id *)a1, (NSArray *)*(v133 - 2));
LABEL_105:
          CGFloat v37 = *(v27 - 2);
          goto LABEL_121;
        case 62:
          PFSStyleParserHandler::positionedSlotsHandler((id *)a1, 0);
          goto LABEL_57;
        case 63:
        case 79:
        case 112:
          v132 = [objc_alloc((Class)NSMutableArray) initWithObjects:*v133];
          goto LABEL_178;
        case 64:
          [*(v133 - 4) addObject:*v133];

          goto LABEL_114;
        case 65:
        case 108:
          UInt8 v28 = (char *)[objc_alloc((Class)NSString) initWithUTF8String:*v133];
LABEL_74:
          v132 = (PFSPair *)v28;
          goto LABEL_130;
        case 66:
          id v56 = [objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 4)];
          [*(v27 - 2) addObject:[v56 substringToIndex:([v56 length] - 1)]];

          uint64_t v57 = *(v27 - 4);
          if (!v57) {
            goto LABEL_169;
          }
          goto LABEL_144;
        case 67:
          id v47 = [objc_alloc((Class)NSString) initWithUTF8String:*v133];
          CGAffineTransform v54 = [(PFSPair *)objc_alloc((Class)NSMutableArray) initWithObjects:v47, 0];
LABEL_111:
          v132 = v54;

          goto LABEL_130;
        case 68:
          id v58 = [objc_alloc((Class)NSString) initWithUTF8String:*v133];
          [*(v27 - 4) addObject:v58];

          double v42 = *v27;
          if (*v27) {
LABEL_113:
          }
            free(v42);
LABEL_114:
          CGFloat v38 = (PFSPair *)*(v27 - 4);
          goto LABEL_173;
        case 73:
          PFSStyleParserHandler::propertyHandler(a1, (const char *)*(v133 - 4), (NSArray *)*(v133 - 1));
          id v59 = *(v27 - 4);
          if (v59) {
            free(v59);
          }
          CGFloat v37 = *(v27 - 1);
          goto LABEL_121;
        case 74:
          PFSStyleParserHandler::propertyHandler(a1, (const char *)*(v133 - 3), (NSArray *)*v133);
          CGAffineTransform v60 = *(v27 - 3);
          if (v60) {
            free(v60);
          }
          CGFloat v37 = *v27;
LABEL_121:

          goto LABEL_57;
        case 76:
          goto LABEL_172;
        case 77:
          PFSStyleParserHandler::endStyleHandler(a1);
          PFSStyleParserHandler::endSelectorHandler((NSMutableDictionary *)a1, (NSArray *)*(v27 - 4));
          id v61 = *(v27 - 4);
LABEL_57:
          v132 = 0;
          break;
        case 78:
          PFSStyleParserHandler::startSelectorHandler((NSMutableDictionary *)a1, (NSArray *)*(v133 - 1));
          PFSStyleParserHandler::startStyleHandler(a1);
          goto LABEL_172;
        case 80:
          [*(v133 - 3) addObject:*v133];

          goto LABEL_125;
        case 82:
        case 83:
LABEL_125:
          CGFloat v38 = (PFSPair *)*(v27 - 3);
          goto LABEL_173;
        case 84:
          v132 = [[PFSStyleSelector alloc] initWithParseOrder:PFSStyleParserHandler::nextSelectorParseIndex(a1)];
          PFSStyleSimpleSelector::setElement((PFSStyleSimpleSelector *)[(PFSPair *)v132 addSimpleSelector], (char *)*v27);
          goto LABEL_130;
        case 85:
          v132 = [[PFSStyleSelector alloc] initWithParseOrder:PFSStyleParserHandler::nextSelectorParseIndex(a1)];
          PFSStyleSimpleSelector::addHashIdentifier((PFSStyleSimpleSelector *)[(PFSPair *)v132 addSimpleSelector], (char *)*v27 + 1);
          goto LABEL_130;
        case 86:
          v132 = [[PFSStyleSelector alloc] initWithParseOrder:PFSStyleParserHandler::nextSelectorParseIndex(a1)];
          PFSStyleSimpleSelector::addClass((uint64_t *)[(PFSPair *)v132 addSimpleSelector], (char *)*v27);
          goto LABEL_130;
        case 87:
          v132 = [[PFSStyleSelector alloc] initWithParseOrder:PFSStyleParserHandler::nextSelectorParseIndex(a1)];
          PFSStyleSimpleSelector::addAttrib((PFSStyleSimpleSelector *)[(PFSPair *)v132 addSimpleSelector], (char *)*v27);
LABEL_130:
          id v62 = *v27;
          if (!*v27) {
            break;
          }
          goto LABEL_206;
        case 88:
          v132 = [[PFSStyleSelector alloc] initWithParseOrder:PFSStyleParserHandler::nextSelectorParseIndex(a1)];
          PFSStyleSimpleSelector::addPseudoClass((PFSStyleSimpleSelector *)[(PFSPair *)v132 addSimpleSelector], (NSString *)*v27);
          goto LABEL_178;
        case 89:
          PFSStyleSimpleSelector::addHashIdentifier((PFSStyleSimpleSelector *)[*(v133 - 1) curSimpleSelector], (char *)*v133 + 1);
          goto LABEL_136;
        case 90:
          PFSStyleSimpleSelector::addClass((uint64_t *)[*(v133 - 1) curSimpleSelector], (char *)*v133);
          goto LABEL_136;
        case 91:
          PFSStyleSimpleSelector::addAttrib((PFSStyleSimpleSelector *)[*(v133 - 1) curSimpleSelector], (char *)*v133);
LABEL_136:
          if (*v27) {
            free(*v27);
          }
          goto LABEL_172;
        case 92:
          PFSStyleSimpleSelector::addPseudoClass((PFSStyleSimpleSelector *)[*(v133 - 1) curSimpleSelector], (NSString *)*v133);
          goto LABEL_171;
        case 93:
          PFSStyleSimpleSelector::setElement((PFSStyleSimpleSelector *)[*(v133 - 2) addSimpleSelector], (char *)*v133);
          goto LABEL_143;
        case 94:
          PFSStyleSimpleSelector::addHashIdentifier((PFSStyleSimpleSelector *)[*(v133 - 2) addSimpleSelector], (char *)*v133 + 1);
          goto LABEL_143;
        case 95:
          PFSStyleSimpleSelector::addClass((uint64_t *)[*(v133 - 2) addSimpleSelector], (char *)*v133);
          goto LABEL_143;
        case 96:
          PFSStyleSimpleSelector::addAttrib((PFSStyleSimpleSelector *)[*(v133 - 2) addSimpleSelector], (char *)*v133);
LABEL_143:
          uint64_t v57 = *v27;
          if (*v27) {
LABEL_144:
          }
            free(v57);
          goto LABEL_169;
        case 97:
          PFSStyleSimpleSelector::addPseudoClass((PFSStyleSimpleSelector *)[*(v133 - 2) addSimpleSelector], (NSString *)*v133);
          goto LABEL_168;
        case 100:
          v132 = (PFSPair *)*(v133 - 3);
          goto LABEL_205;
        case 101:
          CGAffineTransform v63 = "*";
          goto LABEL_176;
        case 102:
          size_t v64 = strlen((const char *)*(v133 - 6));
          size_t v65 = strlen((const char *)*(v133 - 4));
          size_t v66 = v64 + v65 + strlen((const char *)*(v133 - 2)) + 1;
          malloc_type_id_t v67 = 1545653838;
          goto LABEL_150;
        case 103:
          size_t v68 = strlen((const char *)*(v133 - 6));
          size_t v69 = strlen((const char *)*(v133 - 4));
          size_t v66 = v68 + v69 + strlen((const char *)*(v133 - 2)) + 1;
          malloc_type_id_t v67 = 953256919;
LABEL_150:
          CGRect v70 = (char *)malloc_type_malloc(v66, v67);
          CGRect v71 = strcpy(v70, (const char *)*(v27 - 6));
          id v72 = strcat(v71, (const char *)*(v27 - 4));
          strcat(v72, (const char *)*(v27 - 2));
          v73 = *(v27 - 6);
          if (v73) {
            free(v73);
          }
          v132 = (PFSPair *)v70;
          v74 = *(v27 - 4);
          if (v74) {
            free(v74);
          }
          id v62 = *(v27 - 2);
          if (!v62) {
            break;
          }
          goto LABEL_206;
        case 104:
          goto LABEL_169;
        case 105:
          CGAffineTransform v63 = "=";
          goto LABEL_176;
        case 106:
          CGAffineTransform v63 = "INCLUDED";
          goto LABEL_176;
        case 107:
          CGAffineTransform v63 = "DASHMTCH";
          goto LABEL_176;
        case 109:
          uint64_t v122 = v21;
          uint64_t v123 = v20;
          id v75 = [objc_alloc((Class)NSString) initWithUTF8String:"FUNCTION "];
          id v76 = objc_alloc((Class)NSString);
          id v77 = [v76 initWithUTF8String:*(v133 - 4)];
          id v78 = objc_alloc((Class)NSString);
          id v79 = [v78 initWithUTF8String:*(v133 - 2)];
          id v80 = [objc_alloc((Class)NSString) initWithUTF8String:"ENDFUNCTION"];
          id v81 = [objc_alloc((Class)NSArray) initWithObjects:v75, v77, v79, v80, 0];
          unint64_t v27 = v133;
          v132 = (PFSPair *)objc_msgSend(objc_msgSend(v81, "componentsJoinedByString:", +[NSString string](NSString, "string")), "mutableCopy");

          v82 = *(v27 - 4);
          if (v82) {
            free(v82);
          }
          v83 = *(v27 - 2);
          if (v83) {
            free(v83);
          }
          uint64_t v21 = v122;
          uint64_t v20 = v123;
          break;
        case 110:
          CGFloat v38 = (PFSPair *)(&dword_0 + 1);
          goto LABEL_173;
        case 113:
          id v84 = [objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 1)];
          v85 = [[PFSPair alloc] initWithType:*(char *)*(v27 - 1) value:v84];

          v86 = *(v27 - 1);
          if (v86) {
            free(v86);
          }
          [*(v27 - 2) addObject:v85];

          [*(v27 - 2) addObject:*v27];
LABEL_168:

LABEL_169:
          CGFloat v38 = (PFSPair *)*(v27 - 2);
          goto LABEL_173;
        case 114:
          [*(v133 - 1) addObject:*v133];
LABEL_171:

LABEL_172:
          CGFloat v38 = (PFSPair *)*(v27 - 1);
LABEL_173:
          v132 = v38;
          break;
        case 115:
          CGAffineTransform v63 = "/";
          goto LABEL_176;
        case 116:
          CGAffineTransform v63 = ",";
LABEL_176:
          v87 = (PFSPair *)strdup(v63);
          goto LABEL_216;
        case 118:
          id v88 = [objc_alloc((Class)NSString) initWithUTF8String:"-"];
          v89 = [PFSPair alloc];
          id v90 = [*v27 type];
          id v91 = [v88 stringByAppendingString:[*v133 value]];
          unint64_t v27 = v133;
          v132 = [(PFSPair *)v89 initWithType:v90 value:v91];

LABEL_178:
          break;
        case 120:
          id v92 = [objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 4)];
          id v93 = [objc_alloc((Class)NSMutableArray) initWithObjects:v92, *(v27 - 2), 0];

          v132 = [[PFSPair alloc] initWithType:298 value:v93];
          id v62 = *(v27 - 4);
          if (!v62) {
            break;
          }
          goto LABEL_206;
        case 121:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 296;
          goto LABEL_215;
        case 122:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 278;
          goto LABEL_215;
        case 123:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 279;
          goto LABEL_215;
        case 124:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 280;
          goto LABEL_215;
        case 125:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 281;
          goto LABEL_215;
        case 126:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 282;
          goto LABEL_215;
        case 127:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 283;
          goto LABEL_215;
        case 128:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 284;
          goto LABEL_215;
        case 129:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 285;
          goto LABEL_215;
        case 130:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 286;
          goto LABEL_215;
        case 131:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 287;
          goto LABEL_215;
        case 132:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 288;
          goto LABEL_215;
        case 133:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 289;
          goto LABEL_215;
        case 134:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 290;
          goto LABEL_215;
        case 135:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 291;
          goto LABEL_215;
        case 136:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 292;
          goto LABEL_215;
        case 137:
          id v40 = [objc_alloc((Class)NSString) initWithUTF8String:(char *)*(v133 - 1) + 1];
          v96 = [PFSPair alloc];
          uint64_t v97 = 265;
          goto LABEL_203;
        case 138:
          v98 = strdupWithoutQuotes((char *)*(v133 - 1));
          v99 = *(v27 - 1);
          if (v99) {
            free(v99);
          }
          id v100 = [objc_alloc((Class)NSString) initWithUTF8String:v98];
          v132 = [[PFSPair alloc] initWithType:263 value:v100];

          if (!v98) {
            break;
          }
          id v62 = v98;
          goto LABEL_206;
        case 139:
          id v40 = [objc_alloc((Class)NSString) initWithUTF8String:*(v133 - 1)];
          v96 = [PFSPair alloc];
          uint64_t v97 = 264;
LABEL_203:
          v132 = [(PFSPair *)v96 initWithType:v97 value:v40];
LABEL_204:

LABEL_205:
          id v62 = *(v27 - 1);
          if (v62) {
LABEL_206:
          }
            free(v62);
          break;
        case 140:
          uint64_t v101 = v21;
          v102 = strdupWithoutURLOrQuotes((char *)*(v133 - 1));
          v103 = *(v27 - 1);
          if (v103) {
            free(v103);
          }
          v104 = (NSString *)[objc_alloc((Class)NSString) initWithUTF8String:v102];
          id v105 = PFSStyleParserHandler::newFullUri(a1, v104);

          v132 = [[PFSPair alloc] initWithType:297 value:v105];
          if (v102) {
            free(v102);
          }
          uint64_t v21 = v101;
          break;
        case 141:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 299;
          goto LABEL_215;
        case 142:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 295;
          goto LABEL_215;
        case 143:
          v94 = (char *)*(v133 - 1);
          uint64_t v95 = 293;
LABEL_215:
          v87 = pairForTerm2(v95, v94);
LABEL_216:
          v132 = v87;
          break;
        default:
          unsigned int v26 = v131;
          unint64_t v27 = v133;
          break;
      }
      if (yydebug)
      {
        fprintf(__stderrp, "%s ", "-> $$ =");
        v106 = __stderrp;
        uint64_t v107 = byte_34D379[v20];
        if (v20) {
          fprintf(__stderrp, "nterm %s (");
        }
        else {
          fprintf(__stderrp, "token %s (");
        }
        fputc(41, v106);
        fputc(10, __stderrp);
        v108 = &v27[-v21];
        size_t v3 = &v26[-v21];
        if (yydebug)
        {
          id v4 = v129;
          sub_23BD4C(v129, (unint64_t)v3);
          unsigned int v1 = v130;
LABEL_225:
          v108[1] = v132;
          int v109 = *v3;
          uint64_t v110 = (v109 + word_34D40C[v107 - 61]);
          v133 = v108 + 1;
          if (v110 <= 0x235
            && (unsigned __int16)word_34C8D6[v110] == (unsigned __int16)v109)
          {
            int v15 = word_34CD42[v110];
          }
          else
          {
            int v15 = word_34D472[v107 - 61];
          }
          goto LABEL_229;
        }
      }
      else
      {
        v108 = &v27[-v21];
        uint64_t v107 = byte_34D379[v20];
        size_t v3 = &v26[-v21];
      }
      unsigned int v1 = v130;
      id v4 = v129;
      goto LABEL_225;
    }
    int v15 = word_34CD42[v14];
    if (v15 <= 0) {
      break;
    }
    if (v14 == 96)
    {
      uint64_t v117 = 0;
      v111 = v136;
      goto LABEL_251;
    }
    if (yydebug)
    {
      fprintf(__stderrp, "%s ", "Shifting");
      uint64_t v16 = __stderrp;
      if (v1 >= 0x3D) {
        fprintf(__stderrp, "nterm %s (");
      }
      else {
        fprintf(__stderrp, "token %s (");
      }
      fputc(41, v16);
      fputc(10, __stderrp);
    }
    if (v127) {
      int v17 = -2;
    }
    else {
      int v17 = 0;
    }
    unsigned int v127 = v17;
    char v18 = v133;
    v133[1] = v124;
    v133 = v18 + 1;
LABEL_229:
    ++v3;
    int v2 = v15;
  }
  if (word_34CD42[v14])
  {
    unsigned int v19 = -v15;
    goto LABEL_49;
  }
LABEL_232:
  uint64_t v112 = sub_23BDE4(0, v2, v127);
  uint64_t v113 = v112;
  v111 = v136;
  if ((unint64_t)v112 < 0x81)
  {
    unint64_t v116 = 128;
  }
  else
  {
    if (v112 < 0) {
      size_t v114 = -1;
    }
    else {
      size_t v114 = 2 * v112;
    }
    v115 = (char *)malloc_type_malloc(v114, 0x6DB23605uLL);
    unint64_t v116 = 128;
    if (v115)
    {
      unint64_t v116 = v114;
      v111 = v115;
    }
  }
  if (v113 - 1 < v116)
  {
    sub_23BDE4(v111, v2, v127);
    PFSStyleParserHandler::setErrMsg((id *)a1, v111);
    goto LABEL_244;
  }
  PFSStyleParserHandler::setErrMsg((id *)a1, "syntax error");
  if (v113)
  {
LABEL_243:
    PFSStyleParserHandler::setErrMsg((id *)a1, "memory exhausted");
    uint64_t v117 = 2;
LABEL_251:
    int v7 = v4;
    goto LABEL_252;
  }
LABEL_244:
  if (v3 != v4)
  {
    v118 = v3 - 1;
    do
    {
      sub_23C050("Error: popping", byte_34D4D8[v2]);
      int v2 = *v118;
      if (yydebug) {
        sub_23BD4C(v4, (unint64_t)v118);
      }
    }
    while (v118-- != v4);
    uint64_t v117 = 1;
    size_t v3 = v4;
    goto LABEL_251;
  }
  uint64_t v117 = 1;
  int v7 = v3;
LABEL_252:
  if (v127 != -2 && v127) {
    sub_23C050("Cleanup: discarding lookahead", v1);
  }
  if (yydebug) {
    sub_23BD4C(v7, (unint64_t)v3);
  }
  while (v3 != v7)
  {
    uint64_t v120 = *v3--;
    sub_23C050("Cleanup: popping", byte_34D4D8[v120]);
  }
  if (v7 != (__int16 *)v135) {
    free(v7);
  }
  if (v111 != v136) {
    free(v111);
  }
  return v117;
}

uint64_t sub_23BD4C(__int16 *a1, unint64_t a2)
{
  fwrite("Stack now", 9uLL, 1uLL, __stderrp);
  while ((unint64_t)a1 <= a2)
  {
    int v4 = *a1++;
    fprintf(__stderrp, " %d", v4);
  }
  uint64_t v5 = __stderrp;

  return fputc(10, v5);
}

uint64_t sub_23BDE4(unsigned char *a1, int a2, unsigned int a3)
{
  int v3 = word_34C538[a2];
  if (v3 >= -192)
  {
    if (a3 > 0x12B) {
      uint64_t v5 = 2;
    }
    else {
      uint64_t v5 = byte_34C7AA[a3];
    }
    int v7 = off_45C458[v5];
    uint64_t v8 = sub_23C130(0, v7);
    long long v38 = 0u;
    long long v37 = 0u;
    double v36 = v7;
    strcpy(v35, "syntax error, unexpected %s");
    int v9 = -v3 & (v3 >> 31);
    if (566 - v3 >= 61) {
      int v10 = 61;
    }
    else {
      int v10 = 566 - v3;
    }
    if (v9 < v10)
    {
      int v11 = 0;
      int v12 = &v35[27];
      uint64_t v13 = v9;
      uint64_t v14 = v3;
      uint64_t v15 = v10;
      uint64_t v16 = ", expecting %s";
      int v17 = 1;
      uint64_t v34 = v8;
      unint64_t v18 = v8;
      while (1)
      {
        if (v13 != 1 && v13 == word_34C8D6[v13 + v14])
        {
          if (v17 == 5)
          {
            v35[27] = 0;
            int v17 = 1;
            unint64_t v18 = v34;
            goto LABEL_24;
          }
          unsigned int v19 = off_45C458[v13];
          (&v36)[v17] = v19;
          uint64_t v20 = sub_23C130(0, v19);
          BOOL v21 = __CFADD__(v20, v18);
          v18 += v20;
          int v22 = v21;
          --v12;
          do
          {
            int v23 = *(unsigned __int8 *)v16++;
            *++int v12 = v23;
          }
          while (v23);
          ++v17;
          v11 |= v22;
          uint64_t v16 = " or %s";
        }
        if (++v13 >= v15) {
          goto LABEL_24;
        }
      }
    }
    int v11 = 0;
    int v17 = 1;
    unint64_t v18 = v8;
LABEL_24:
    uint64_t v24 = 0;
    while (v35[v24++])
      ;
    unint64_t v6 = v18 + v24 - 1;
    if (v11 | (v6 < v18)) {
      return -1;
    }
    if (!a1) {
      return v6;
    }
    int v27 = 0;
    for (int i = v35; ; i += v32)
    {
      int v29 = *i;
      *a1 = v29;
      if (v29 != 37) {
        break;
      }
      if (i[1] != 115 || v27 >= v17) {
        goto LABEL_38;
      }
      int v33 = v27 + 1;
      uint64_t v31 = sub_23C130((uint64_t)a1, (&v36)[v27]);
      uint64_t v32 = 2;
      int v27 = v33;
LABEL_40:
      a1 += v31;
    }
    if (!v29) {
      return v6;
    }
LABEL_38:
    uint64_t v31 = 1;
    uint64_t v32 = 1;
    goto LABEL_40;
  }
  return 0;
}

const char *sub_23C050(const char *result, int a2)
{
  if (yydebug)
  {
    int v3 = "Deleting";
    if (result) {
      int v3 = result;
    }
    fprintf(__stderrp, "%s ", v3);
    int v4 = __stderrp;
    if (a2 >= 61) {
      fprintf(__stderrp, "nterm %s (");
    }
    else {
      fprintf(__stderrp, "token %s (");
    }
    fputc(41, v4);
    uint64_t v5 = __stderrp;
    return (const char *)fputc(10, v5);
  }
  return result;
}

uint64_t sub_23C130(uint64_t a1, unsigned char *a2)
{
  if (*a2 != 34)
  {
LABEL_13:
    uint64_t v10 = 0;
    if (a1)
    {
      do
      {
        int v11 = a2[v10];
        *(unsigned char *)(a1 + v10++) = v11;
      }
      while (v11);
    }
    else
    {
      while (a2[v10++])
        ;
    }
    return v10 - 1;
  }
  uint64_t v2 = 0;
  int v3 = a2;
  for (i = a2; ; int v3 = i)
  {
    int v6 = (char)*++i;
    int v5 = v6;
    char v7 = v6;
    if (v6 > 91)
    {
      if (v5 == 92)
      {
        int v9 = v3[2];
        uint64_t v8 = v3 + 2;
        if (v9 != 92) {
          goto LABEL_13;
        }
        char v7 = 92;
        int i = v8;
      }
      goto LABEL_10;
    }
    if (v5 == 34) {
      break;
    }
    if (v5 == 39 || v5 == 44) {
      goto LABEL_13;
    }
LABEL_10:
    if (a1) {
      *(unsigned char *)(a1 + v2) = v7;
    }
    ++v2;
  }
  if (a1) {
    *(unsigned char *)(a1 + v2) = 0;
  }
  return v2;
}

char **sb_stemmer_list()
{
  return off_571D70;
}

void *sb_stemmer_new(char *__s2, const char *a2)
{
  if (a2 && strcmp("UTF_8", a2)) {
    return 0;
  }
  int v3 = "da";
  for (int i = &off_45C800; strcmp(v3, __s2) || *((_DWORD *)i - 6) != 1; i += 5)
  {
    int v3 = (const char *)i[1];
    if (!v3) {
      return 0;
    }
  }
  char v7 = malloc_type_malloc(0x20uLL, 0xA00400770BE9BuLL);
  int v5 = v7;
  if (v7)
  {
    long long v8 = *((_OWORD *)i - 1);
    *(_OWORD *)char v7 = v8;
    v7[2] = *i;
    uint64_t v9 = ((uint64_t (*)(void))v8)();
    _OWORD v5[3] = v9;
    if (!v9)
    {
      uint64_t v10 = (void (*)(void))v5[1];
      if (v10) {
        v10(0);
      }
      free(v5);
      return 0;
    }
  }
  return v5;
}

void sb_stemmer_delete(void *a1)
{
  if (a1)
  {
    uint64_t v2 = (void (*)(void))a1[1];
    if (v2) {
      v2(a1[3]);
    }
    free(a1);
  }
}

uint64_t sb_stemmer_stem(uint64_t a1, void *__src, int a3)
{
  if (SN_set_current(*(void *)(a1 + 24), a3, __src))
  {
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 + 24) + 12) = 0;
  }
  else if (((*(uint64_t (**)(void))(a1 + 16))(*(void *)(a1 + 24)) & 0x80000000) != 0)
  {
    return 0;
  }
  else
  {
    *(unsigned char *)(**(void **)(a1 + 24) + *(int *)(*(void *)(a1 + 24) + 12)) = 0;
    return **(void **)(a1 + 24);
  }
  return result;
}

uint64_t sb_stemmer_length(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 24) + 12);
}

void *SN_create_env(int a1, int a2, int a3)
{
  int v6 = malloc_type_calloc(1uLL, 0x38uLL, 0x1090040893BA05AuLL);
  if (!v6) {
    return v6;
  }
  s = create_s();
  *int v6 = s;
  if (!s) {
    goto LABEL_13;
  }
  if (!a1) {
    goto LABEL_9;
  }
  long long v8 = malloc_type_calloc(a1, 8uLL, 0x10040436913F5uLL);
  void v6[4] = v8;
  if (!v8)
  {
LABEL_13:
    SN_close_env((uint64_t)v6, a1);
    return 0;
  }
  if (a1 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      *(void *)(v6[4] + v9) = create_s();
      if (!*(void *)(v6[4] + v9)) {
        goto LABEL_13;
      }
      v9 += 8;
    }
    while (8 * a1 != v9);
  }
LABEL_9:
  if (a2)
  {
    uint64_t v10 = malloc_type_calloc(a2, 4uLL, 0x100004052888210uLL);
    v6[5] = v10;
    if (!v10) {
      goto LABEL_13;
    }
  }
  if (a3)
  {
    int v11 = malloc_type_calloc(a3, 1uLL, 0x100004077774924uLL);
    void v6[6] = v11;
    if (!v11) {
      goto LABEL_13;
    }
  }
  return v6;
}

void SN_close_env(uint64_t a1, int a2)
{
  if (a1)
  {
    if (a2)
    {
      if (a2 >= 1)
      {
        uint64_t v3 = 0;
        uint64_t v4 = 8 * a2;
        do
        {
          lose_s(*(void *)(*(void *)(a1 + 32) + v3));
          v3 += 8;
        }
        while (v4 != v3);
      }
      free(*(void **)(a1 + 32));
    }
    free(*(void **)(a1 + 40));
    free(*(void **)(a1 + 48));
    if (*(void *)a1) {
      lose_s(*(void *)a1);
    }
    free((void *)a1);
  }
}

uint64_t SN_set_current(uint64_t a1, int a2, void *__src)
{
  uint64_t result = replace_s(a1, 0, *(_DWORD *)(a1 + 12), a2, __src, 0);
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

void *create_s()
{
  uint64_t result = malloc_type_malloc(0xAuLL, 0xCFBD9132uLL);
  if (result) {
    *result++ = 0x100000001;
  }
  return result;
}

void lose_s(uint64_t a1)
{
  if (a1) {
    free((void *)(a1 - 8));
  }
}

uint64_t skip_utf8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (a5 < 0)
  {
    while ((int)a2 > (int)a3)
    {
      uint64_t v5 = (int)a2 - 1;
      if (*(char *)(a1 + v5) < 0 && (int)v5 > (int)a3)
      {
        uint64_t v5 = (int)a2 - 1;
        while (*(unsigned __int8 *)(a1 + v5) <= 0xBFu)
        {
          if (--v5 <= (int)a3)
          {
            uint64_t v5 = a3;
            break;
          }
        }
      }
      LODWORD(a2) = v5;
      if (__CFADD__(a5++, 1)) {
        return v5;
      }
    }
  }
  else
  {
    if (!a5) {
      return a2;
    }
    while ((int)a2 < (int)a4)
    {
      uint64_t v5 = (a2 + 1);
      if (*(unsigned __int8 *)(a1 + (int)a2) >= 0xC0u && (int)v5 < (int)a4)
      {
        uint64_t v5 = (int)a2 + 1;
        while (*(char *)(a1 + v5) <= -65)
        {
          if (++v5 >= (int)a4)
          {
            uint64_t v5 = a4;
            break;
          }
        }
      }
      LODWORD(a2) = v5;
      BOOL v7 = __OFSUB__(a5--, 1);
      if ((a5 < 0) ^ v7 | (a5 == 0)) {
        return v5;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t in_grouping_U(uint64_t a1, uint64_t a2, int a3, signed int a4, int a5)
{
  uint64_t v10 = *(void *)a1;
  int v12 = *(_DWORD *)(a1 + 8);
  int v11 = *(_DWORD *)(a1 + 12);
  while (1)
  {
    signed int v14 = 0;
    uint64_t result = sub_23C8F0(v10, v12, v11, (unsigned int *)&v14);
    if (!result) {
      break;
    }
    if (v14 > a4
      || v14 - a3 < 0
      || ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) == 0)
    {
      return result;
    }
    v12 += result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5) {
      return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_23C8F0(uint64_t a1, int a2, int a3, unsigned int *a4)
{
  if (a2 >= a3) {
    return 0;
  }
  uint64_t v4 = a2 + 1;
  unsigned int v5 = *(unsigned __int8 *)(a1 + a2);
  if (v5 < 0xC0 || v4 == a3)
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t v8 = a2 + 2;
    char v9 = *(unsigned char *)(a1 + v4);
    if (v5 < 0xE0 || v8 == a3)
    {
      uint64_t result = 2;
      unsigned int v5 = v9 & 0x3F | ((v5 & 0x1F) << 6);
    }
    else
    {
      unsigned int v5 = ((v5 & 0xF) << 12) | ((v9 & 0x3F) << 6) | *(unsigned char *)(a1 + v8) & 0x3F;
      uint64_t result = 3;
    }
  }
  *a4 = v5;
  return result;
}

uint64_t in_grouping_b_U(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = *(void *)a1;
  int v11 = *(_DWORD *)(a1 + 16);
  int v12 = *(_DWORD *)(a1 + 8);
  while (1)
  {
    int v14 = 0;
    uint64_t result = sub_23CA1C(v10, v12, v11, &v14);
    if (!result) {
      break;
    }
    if (v14 > a4
      || v14 - a3 < 0
      || ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) == 0)
    {
      return result;
    }
    v12 -= result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5) {
      return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_23CA1C(uint64_t a1, int a2, int a3, int *a4)
{
  if (a2 <= a3) {
    return 0;
  }
  uint64_t v5 = a2 - 1;
  int v6 = *(char *)(a1 + v5);
  int v7 = *(unsigned __int8 *)(a1 + v5);
  uint64_t result = 1;
  if (v5 != a3 && v6 < 0)
  {
    uint64_t v9 = a2 - 2;
    unsigned int v10 = *(unsigned __int8 *)(a1 + v9);
    if (v9 == a3 || v10 >= 0xC0)
    {
      int v7 = v7 & 0x3F | ((v10 & 0x1F) << 6);
      uint64_t result = 2;
    }
    else
    {
      int v7 = v7 & 0x3F | ((v10 & 0x3F) << 6) & 0xFFF | ((v10 & 0xF) << 12);
      uint64_t result = 3;
    }
  }
  *a4 = v7;
  return result;
}

uint64_t out_grouping_U(uint64_t a1, uint64_t a2, int a3, signed int a4, int a5)
{
  uint64_t v10 = *(void *)a1;
  int v12 = *(_DWORD *)(a1 + 8);
  int v11 = *(_DWORD *)(a1 + 12);
  while (1)
  {
    signed int v14 = 0;
    uint64_t result = sub_23C8F0(v10, v12, v11, (unsigned int *)&v14);
    if (!result) {
      break;
    }
    if (v14 <= a4
      && v14 - a3 >= 0
      && ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) != 0)
    {
      return result;
    }
    v12 += result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5) {
      return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t out_grouping_b_U(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = *(void *)a1;
  int v11 = *(_DWORD *)(a1 + 16);
  int v12 = *(_DWORD *)(a1 + 8);
  while (1)
  {
    int v14 = 0;
    uint64_t result = sub_23CA1C(v10, v12, v11, &v14);
    if (!result) {
      break;
    }
    if (v14 <= a4
      && v14 - a3 >= 0
      && ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) != 0)
    {
      return result;
    }
    v12 -= result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5) {
      return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t in_grouping(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  int v5 = *(_DWORD *)(a1 + 12);
  uint64_t v6 = *(int *)(a1 + 8);
  if ((int)v6 > v5) {
    int v5 = *(_DWORD *)(a1 + 8);
  }
  int v7 = v6 + 1;
  while (v5 != v6)
  {
    int v8 = *(unsigned __int8 *)(*(void *)a1 + v6);
    if (v8 > a4) {
      return 1;
    }
    unint64_t v9 = (v8 - a3);
    if ((v9 & 0x80000000) != 0 || ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7)) & 1) == 0) {
      return 1;
    }
    ++v6;
    *(_DWORD *)(a1 + 8) = v7++;
    if (!a5) {
      return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t in_grouping_b(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v5 = *(int *)(a1 + 16);
  uint64_t v6 = *(int *)(a1 + 8);
  int v7 = v6 - 1;
  while (v6 > v5)
  {
    int v8 = *(unsigned __int8 *)(*(void *)a1 + v6 - 1);
    if (v8 > a4) {
      return 1;
    }
    unint64_t v9 = (v8 - a3);
    if ((v9 & 0x80000000) != 0 || ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7)) & 1) == 0) {
      return 1;
    }
    *(_DWORD *)(a1 + 8) = v7--;
    --v6;
    if (!a5) {
      return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t out_grouping(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  int v5 = *(_DWORD *)(a1 + 12);
  uint64_t v6 = *(int *)(a1 + 8);
  if ((int)v6 > v5) {
    int v5 = *(_DWORD *)(a1 + 8);
  }
  int v7 = v6 + 1;
  while (1)
  {
    if (v5 == v6) {
      return 0xFFFFFFFFLL;
    }
    int v8 = *(unsigned __int8 *)(*(void *)a1 + v6);
    if (v8 <= a4)
    {
      unint64_t v9 = (v8 - a3);
      if (v9 & 0x80000000) == 0 && ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7))) {
        break;
      }
    }
    ++v6;
    *(_DWORD *)(a1 + 8) = v7++;
    if (!a5) {
      return 0;
    }
  }
  return 1;
}

uint64_t out_grouping_b(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v5 = *(int *)(a1 + 16);
  uint64_t v6 = *(int *)(a1 + 8);
  int v7 = v6 - 1;
  while (1)
  {
    if (v6 <= v5) {
      return 0xFFFFFFFFLL;
    }
    int v8 = *(unsigned __int8 *)(*(void *)a1 + v6 - 1);
    if (v8 <= a4)
    {
      unint64_t v9 = (v8 - a3);
      if (v9 & 0x80000000) == 0 && ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7))) {
        break;
      }
    }
    *(_DWORD *)(a1 + 8) = v7--;
    --v6;
    if (!a5) {
      return 0;
    }
  }
  return 1;
}

uint64_t eq_s(uint64_t a1, int a2, void *__s2)
{
  uint64_t v3 = *(int *)(a1 + 8);
  if (*(_DWORD *)(a1 + 12) - (int)v3 < a2 || memcmp((const void *)(*(void *)a1 + v3), __s2, a2)) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v3 + a2;
  return 1;
}

uint64_t eq_s_b(uint64_t a1, int a2, void *__s2)
{
  uint64_t v3 = *(int *)(a1 + 8);
  if ((int)v3 - *(_DWORD *)(a1 + 16) < a2 || memcmp((const void *)(*(void *)a1 + v3 - a2), __s2, a2)) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v3 - a2;
  return 1;
}

uint64_t eq_v(uint64_t a1, _DWORD *__s2)
{
  return eq_s(a1, *(__s2 - 1), __s2);
}

uint64_t eq_v_b(uint64_t a1, _DWORD *__s2)
{
  return eq_s_b(a1, *(__s2 - 1), __s2);
}

uint64_t find_among(uint64_t a1, uint64_t a2, int a3)
{
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  uint64_t v8 = *(int *)(a1 + 8);
  char v9 = 1;
  while (1)
  {
    int v10 = v5 + ((a3 - v5) >> 1);
    if (v6 >= v7) {
      LODWORD(v11) = v7;
    }
    else {
      LODWORD(v11) = v6;
    }
    uint64_t v12 = v10;
    int v13 = *(_DWORD *)(a2 + 32 * v10);
    if ((int)v11 >= v13)
    {
      int v14 = 0;
    }
    else
    {
      uint64_t v11 = (int)v11;
      while (*(_DWORD *)(a1 + 12) - v8 != v11)
      {
        int v14 = *(unsigned __int8 *)(*(void *)a1 + v8 + v11)
            - *(unsigned __int8 *)(*(void *)(a2 + 32 * v12 + 8) + v11);
        if (v14) {
          goto LABEL_13;
        }
        if (++v11 >= v13)
        {
          int v14 = 0;
          LODWORD(v11) = v13;
          goto LABEL_13;
        }
      }
      int v14 = -1;
    }
LABEL_13:
    if (v14 < 0) {
      a3 = v12;
    }
    else {
      int v5 = v12;
    }
    if (v14 < 0) {
      int v7 = v11;
    }
    else {
      int v6 = v11;
    }
    if (a3 - v5 <= 1)
    {
      BOOL v15 = v5 >= 1 || a3 == v5;
      BOOL v16 = !v15;
      char v17 = v16 & v9;
      char v9 = 0;
      if ((v17 & 1) == 0) {
        break;
      }
    }
  }
  while (1)
  {
    uint64_t v18 = v5;
    uint64_t v19 = a2 + 32 * v5;
    if (v6 >= *(_DWORD *)v19)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v19 + v8;
      uint64_t v20 = *(uint64_t (**)(uint64_t))(v19 + 24);
      if (!v20) {
        break;
      }
      int v21 = v20(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v19 + v8;
      if (v21) {
        break;
      }
    }
    int v5 = *(_DWORD *)(v19 + 16);
    if (v5 < 0) {
      return 0;
    }
  }
  return *(unsigned int *)(a2 + 32 * v18 + 20);
}

uint64_t find_among_b(uint64_t a1, uint64_t a2, int a3)
{
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  uint64_t v8 = *(int *)(a1 + 8);
  int v9 = v8 - *(_DWORD *)(a1 + 16);
  uint64_t v10 = v8 + *(void *)a1 - 1;
  char v11 = 1;
  while (1)
  {
    int v12 = v5 + ((a3 - v5) >> 1);
    if (v6 >= v7) {
      int v13 = v7;
    }
    else {
      int v13 = v6;
    }
    uint64_t v14 = v12;
    int v15 = *(_DWORD *)(a2 + 32 * v12);
    if (v15 + ~v13 < 0)
    {
      int v19 = 0;
      int v16 = v13;
    }
    else
    {
      int v16 = v13;
      char v17 = (unsigned __int8 *)(v10 - v13);
      int v18 = v15 - v13;
      while (v9 != v16)
      {
        int v19 = *v17 - *(unsigned __int8 *)(*(void *)(a2 + 32 * v14 + 8) + --v18);
        if (v19) {
          goto LABEL_13;
        }
        ++v16;
        --v17;
        if (v18 <= 0)
        {
          int v19 = 0;
          int v16 = v15;
          goto LABEL_13;
        }
      }
      int v19 = -1;
    }
LABEL_13:
    if (v19 < 0) {
      a3 = v14;
    }
    else {
      int v5 = v14;
    }
    if (v19 < 0) {
      int v7 = v16;
    }
    else {
      int v6 = v16;
    }
    if (a3 - v5 <= 1)
    {
      BOOL v20 = v5 >= 1 || a3 == v5;
      BOOL v21 = !v20;
      char v22 = v21 & v11;
      char v11 = 0;
      if ((v22 & 1) == 0) {
        break;
      }
    }
  }
  while (1)
  {
    uint64_t v23 = v5;
    uint64_t v24 = a2 + 32 * v5;
    if (v6 >= *(_DWORD *)v24)
    {
      *(_DWORD *)(a1 + 8) = v8 - *(_DWORD *)v24;
      uint64_t v25 = *(uint64_t (**)(uint64_t))(v24 + 24);
      if (!v25) {
        break;
      }
      int v26 = v25(a1);
      *(_DWORD *)(a1 + 8) = v8 - *(_DWORD *)v24;
      if (v26) {
        break;
      }
    }
    int v5 = *(_DWORD *)(v24 + 16);
    if (v5 < 0) {
      return 0;
    }
  }
  return *(unsigned int *)(a2 + 32 * v23 + 20);
}

uint64_t replace_s(uint64_t a1, int a2, int a3, int a4, void *__src, _DWORD *a6)
{
  int v12 = *(_DWORD **)a1;
  if (!v12)
  {
    int v13 = malloc_type_malloc(0xAuLL, 0xCFBD9132uLL);
    if (!v13)
    {
      *(void *)a1 = 0;
      return 0xFFFFFFFFLL;
    }
    *int v13 = 0x100000001;
    int v12 = v13 + 1;
    *(void *)a1 = v12;
  }
  int v14 = a2 - a3 + a4;
  if (!v14) {
    goto LABEL_12;
  }
  int v15 = *(v12 - 1);
  if (v15 + v14 > *(v12 - 2))
  {
    int v12 = sub_23D29C((uint64_t)v12, v15 + v14);
    *(void *)a1 = v12;
    if (!v12) {
      return 0xFFFFFFFFLL;
    }
  }
  memmove((char *)v12 + a3 + v14, (char *)v12 + a3, v15 - a3);
  int v12 = *(_DWORD **)a1;
  *(_DWORD *)(*(void *)a1 - 4) = v15 + v14;
  int v16 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 12) += v14;
  if (v16 >= a3)
  {
    int v17 = v16 + v14;
  }
  else
  {
    int v17 = a2;
    if (v16 <= a2) {
      goto LABEL_12;
    }
  }
  *(_DWORD *)(a1 + 8) = v17;
LABEL_12:
  if (a4) {
    memmove((char *)v12 + a2, __src, a4);
  }
  uint64_t result = 0;
  if (a6) {
    *a6 = v14;
  }
  return result;
}

_DWORD *sub_23D29C(uint64_t a1, int a2)
{
  uint64_t v4 = (void *)(a1 - 8);
  int v5 = malloc_type_realloc((void *)(a1 - 8), a2 + 29, 0x5E4C5CB9uLL);
  if (v5)
  {
    _DWORD *v5 = a2 + 20;
    return v5 + 2;
  }
  else
  {
    if (a1) {
      free(v4);
    }
    return 0;
  }
}

uint64_t slice_from_s(uint64_t a1, int a2, void *__src)
{
  int v4 = *(_DWORD *)(a1 + 20);
  if ((v4 & 0x80000000) == 0
    && (int v6 = *(_DWORD *)(a1 + 24), v4 <= v6)
    && (int v7 = *(_DWORD *)(a1 + 12), v6 <= v7)
    && *(void *)a1
    && v7 <= *(_DWORD *)(*(void *)a1 - 4))
  {
    return replace_s(a1, v4, v6, a2, __src, 0);
  }
  else
  {
    return 0xFFFFFFFFLL;
  }
}

uint64_t slice_from_v(uint64_t a1, _DWORD *__src)
{
  return slice_from_s(a1, *(__src - 1), __src);
}

uint64_t slice_del(uint64_t a1)
{
  return slice_from_s(a1, 0, 0);
}

uint64_t insert_s(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  int v10 = 0;
  if (replace_s(a1, a2, a3, a4, a5, &v10)) {
    return 0xFFFFFFFFLL;
  }
  int v8 = *(_DWORD *)(a1 + 20);
  if (v8 >= a2) {
    *(_DWORD *)(a1 + 20) = v10 + v8;
  }
  int v9 = *(_DWORD *)(a1 + 24);
  uint64_t result = 0;
  if (v9 >= a2) {
    *(_DWORD *)(a1 + 24) = v10 + v9;
  }
  return result;
}

uint64_t insert_v(uint64_t a1, int a2, int a3, _DWORD *__src)
{
  int v9 = 0;
  if (replace_s(a1, a2, a3, *(__src - 1), __src, &v9)) {
    return 0xFFFFFFFFLL;
  }
  int v7 = *(_DWORD *)(a1 + 20);
  if (v7 >= a2) {
    *(_DWORD *)(a1 + 20) = v9 + v7;
  }
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t result = 0;
  if (v8 >= a2) {
    *(_DWORD *)(a1 + 24) = v9 + v8;
  }
  return result;
}

_DWORD *slice_to(uint64_t *a1, _DWORD *__dst)
{
  uint64_t v2 = __dst;
  int v3 = *((_DWORD *)a1 + 5);
  if ((v3 & 0x80000000) == 0)
  {
    int v5 = *((_DWORD *)a1 + 6);
    int v6 = v5 - v3;
    if (v5 >= v3)
    {
      int v7 = *((_DWORD *)a1 + 3);
      if (v5 <= v7)
      {
        uint64_t v8 = *a1;
        if (*a1)
        {
          if (v7 <= *(_DWORD *)(v8 - 4))
          {
            if (*(__dst - 2) < v6)
            {
              uint64_t v2 = sub_23D29C((uint64_t)__dst, v6);
              if (!v2) {
                return v2;
              }
              uint64_t v8 = *a1;
              int v3 = *((_DWORD *)a1 + 5);
            }
            memmove(v2, (const void *)(v8 + v3), v6);
            *(v2 - 1) = v6;
            return v2;
          }
        }
      }
    }
  }
  if (__dst)
  {
    free(__dst - 2);
    return 0;
  }
  return v2;
}

_DWORD *assign_to(uint64_t a1, _DWORD *__dst)
{
  uint64_t v2 = __dst;
  int v4 = *(_DWORD *)(a1 + 12);
  if (*(__dst - 2) >= v4 || (uint64_t v2 = sub_23D29C((uint64_t)__dst, v4)) != 0)
  {
    memmove(v2, *(const void **)a1, v4);
    *(v2 - 1) = v4;
  }
  return v2;
}

uint64_t danish_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  int v3 = *(_DWORD *)(a1 + 8);
  int v4 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 3);
  if (v4 < 0
    || (*(_DWORD *)(*(void *)(a1 + 40) + 4) = v4,
        *(_DWORD *)(a1 + 8) = v3,
        (out_grouping_U(a1, (uint64_t)&unk_34DA76, 97, 248, 1) & 0x80000000) != 0)
    || (int v5 = in_grouping_U(a1, (uint64_t)&unk_34DA76, 97, 248, 1), v5 < 0))
  {
    unsigned int v8 = 0;
  }
  else
  {
    int v6 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v6;
    int v7 = *(_DWORD **)(a1 + 40);
    if (v6 <= v7[1]) {
      int v6 = v7[1];
    }
    *int v7 = v6;
    unsigned int v8 = 1;
  }
  *(_DWORD *)(a1 + 16) = v2;
  int v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  int v10 = **(_DWORD **)(a1 + 40);
  if (v9 >= v10)
  {
    *(_DWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v9;
    if (v9 <= v10
      || (char v11 = *(unsigned char *)(v9 + *(void *)a1 - 1), (v11 & 0xE0) != 0x60)
      || ((0x1C4030u >> v11) & 1) == 0
      || (int among_b = find_among_b(a1, (uint64_t)&unk_45D000, 32)) == 0)
    {
      *(_DWORD *)(a1 + 16) = v2;
      goto LABEL_17;
    }
    int v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b == 2)
    {
      if (in_grouping_b_U(a1, (uint64_t)&unk_34DA89, 97, 229, 0)) {
        goto LABEL_17;
      }
    }
    else if (among_b != 1)
    {
      goto LABEL_17;
    }
    uint64_t v40 = slice_del(a1);
    if ((v40 & 0x80000000) != 0) {
      return v40;
    }
  }
LABEL_17:
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  int v14 = sub_23D9B4(a1);
  if (v14 >= 0) {
    unsigned int v15 = v8;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v14) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = v8;
  }
  if (v14) {
    int v17 = v14 >> 31;
  }
  else {
    int v17 = 4;
  }
  if ((v17 | 4) == 4)
  {
    int v18 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v18;
    int v19 = v18;
  }
  else
  {
    if (v14 < 0) {
      return v16;
    }
    int v18 = *(_DWORD *)(a1 + 8);
    int v19 = *(_DWORD *)(a1 + 12);
  }
  int v20 = v18 - v19;
  *(_DWORD *)(a1 + 24) = v18;
  if (!eq_s_b(a1, 2, &unk_34DB1D)
    || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8), !eq_s_b(a1, 2, &unk_34DB1F))
    || (int v2 = slice_del(a1), (v2 & 0x80000000) == 0))
  {
    int v24 = *(_DWORD *)(a1 + 12) + v20;
    *(_DWORD *)(a1 + 8) = v24;
    int v25 = **(_DWORD **)(a1 + 40);
    if (v24 >= v25)
    {
      int v26 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 16) = v25;
      *(_DWORD *)(a1 + 8) = v24;
      *(_DWORD *)(a1 + 24) = v24;
      uint64_t v27 = v24 - 1;
      if ((int)v27 > v25)
      {
        char v28 = *(unsigned char *)(*(void *)a1 + v27);
        if (v28 & 0xE0) == 0x60 && ((0x180080u >> v28))
        {
          int v29 = find_among_b(a1, (uint64_t)&unk_45D480, 5);
          if (v29)
          {
            int v30 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 16) = v26;
            *(_DWORD *)(a1 + 20) = v30;
            if (v29 == 2)
            {
              int v31 = slice_from_s(a1, 4, &unk_34DB21);
              if ((v31 & 0x80000000) == 0) {
                goto LABEL_73;
              }
            }
            else
            {
              if (v29 != 1) {
                goto LABEL_73;
              }
              int v31 = slice_del(a1);
              if ((v31 & 0x80000000) == 0)
              {
                int v33 = *(_DWORD *)(a1 + 8);
                int v32 = *(_DWORD *)(a1 + 12);
                int v34 = sub_23D9B4(a1);
                int v35 = v34 >> 31;
                if (!v34) {
                  int v35 = 4;
                }
                if ((v35 | 4) == 4)
                {
                  *(_DWORD *)(a1 + 8) = v33 - v32 + *(_DWORD *)(a1 + 12);
                }
                else
                {
                  if (v34 >= 0) {
                    int v41 = v2;
                  }
                  else {
                    int v41 = v34;
                  }
                  if (v34) {
                    int v2 = v41;
                  }
                  if (v34 < 0) {
                    goto LABEL_33;
                  }
                }
LABEL_73:
                int v2 = 1;
                goto LABEL_33;
              }
            }
            int v2 = v31;
            goto LABEL_33;
          }
        }
      }
      *(_DWORD *)(a1 + 16) = v26;
    }
LABEL_58:
    int v23 = *(_DWORD *)(a1 + 12) + v20;
    *(_DWORD *)(a1 + 8) = v23;
    goto LABEL_59;
  }
LABEL_33:
  int v21 = v2 >> 31;
  if (!v2) {
    int v21 = 5;
  }
  if (!v21 || v21 == 5) {
    goto LABEL_58;
  }
  if (v2 >= 0) {
    unsigned int v22 = v16;
  }
  else {
    unsigned int v22 = v2;
  }
  if (v2) {
    uint64_t v16 = v22;
  }
  else {
    uint64_t v16 = v16;
  }
  if ((v2 & 0x80000000) == 0)
  {
    int v23 = *(_DWORD *)(a1 + 8);
LABEL_59:
    int v36 = **(_DWORD **)(a1 + 40);
    if (v23 < v36)
    {
LABEL_62:
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
      return 1;
    }
    int v37 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v36;
    *(_DWORD *)(a1 + 24) = v23;
    if (out_grouping_b_U(a1, (uint64_t)&unk_34DA76, 97, 248, 0))
    {
      *(_DWORD *)(a1 + 16) = v37;
      goto LABEL_62;
    }
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    **(void **)(a1 + 32) = slice_to((uint64_t *)a1, **(_DWORD ***)(a1 + 32));
    long long v39 = **(_DWORD ***)(a1 + 32);
    if (!v39) {
      return 0xFFFFFFFFLL;
    }
    *(_DWORD *)(a1 + 16) = v37;
    if (!eq_v_b(a1, v39)) {
      goto LABEL_62;
    }
    uint64_t v40 = slice_del(a1);
    if ((v40 & 0x80000000) == 0) {
      goto LABEL_62;
    }
    return v40;
  }
  return v16;
}

uint64_t sub_23D9B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  int v2 = **(_DWORD **)(a1 + 40);
  if (v1 < v2) {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 12);
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2;
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t v7 = v1 - 1;
  if ((int)v7 <= v2 || (*(unsigned __int8 *)(*(void *)a1 + v7) | 0x10) != 0x74)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45D400, 4);
  if (!result)
  {
LABEL_11:
    *(_DWORD *)(a1 + 16) = v5;
    return result;
  }
  int v8 = *(_DWORD *)(a1 + 8);
  int v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 20) = v8;
  uint64_t v10 = (v9 + v1 - v6);
  *(_DWORD *)(a1 + 8) = v10;
  int v11 = skip_utf8(*(void *)a1, v10, v5, 0, -1);
  if (v11 < 0) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 20) = v11;
  int v12 = slice_del(a1);
  if (v12 >= 0) {
    return 1;
  }
  else {
    return v12 & (v12 >> 31);
  }
}

void *danish_UTF_8_create_env()
{
  return SN_create_env(1, 2, 0);
}

void danish_UTF_8_close_env(uint64_t a1)
{
}

uint64_t dutch_UTF_8_stem(uint64_t a1)
{
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  for (uint64_t i = v3; ; uint64_t i = *(unsigned int *)(a1 + 8))
  {
    *(_DWORD *)(a1 + 20) = i;
    uint64_t v5 = (int)i + 1;
    uint64_t v6 = *(unsigned int *)(a1 + 12);
    if ((int)v5 >= (int)v6) {
      break;
    }
    char v7 = *(unsigned char *)(*(void *)a1 + v5);
    if ((v7 & 0xE0) != 0xA0 || ((0x1448AA12u >> v7) & 1) == 0) {
      break;
    }
    int among = find_among(a1, (uint64_t)&unk_45D520, 11);
    if (!among) {
      goto LABEL_19;
    }
    uint64_t i = *(unsigned int *)(a1 + 8);
    *(_DWORD *)(a1 + 24) = i;
    switch(among)
    {
      case 1:
        uint64_t v10 = a1;
        int v11 = &unk_34DB36;
        break;
      case 2:
        uint64_t v10 = a1;
        int v11 = &unk_34DB37;
        break;
      case 3:
        uint64_t v10 = a1;
        int v11 = &unk_34DB38;
        break;
      case 4:
        uint64_t v10 = a1;
        int v11 = &unk_34DB39;
        break;
      case 5:
        uint64_t v10 = a1;
        int v11 = &unk_34DB3A;
        break;
      case 6:
        uint64_t v6 = *(unsigned int *)(a1 + 12);
        goto LABEL_6;
      default:
        continue;
    }
    uint64_t v12 = slice_from_s(v10, 1, v11);
    if ((v12 & 0x80000000) != 0) {
      return v12;
    }
LABEL_8:
    ;
  }
  *(_DWORD *)(a1 + 24) = i;
LABEL_6:
  int v8 = skip_utf8(*(void *)a1, i, 0, v6, 1);
  if ((v8 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) = v8;
    goto LABEL_8;
  }
LABEL_19:
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 20) = v3;
  if (eq_s(a1, 1, &unk_34DB3B))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    uint64_t v12 = slice_from_s(a1, 1, &unk_34DB3C);
    if ((v12 & 0x80000000) == 0)
    {
      uint64_t v13 = *(unsigned int *)(a1 + 8);
      goto LABEL_23;
    }
    return v12;
  }
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t v13 = v3;
LABEL_23:
  while (2)
  {
    if (!in_grouping_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 0))
    {
      LODWORD(v1) = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v1;
      if (eq_s(a1, 1, &unk_34DB4E))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!in_grouping_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 0))
        {
          uint64_t v14 = a1;
          unsigned int v15 = &unk_34DB4F;
          goto LABEL_29;
        }
      }
      *(_DWORD *)(a1 + 8) = v1;
      if (eq_s(a1, 1, &unk_34DB50))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        uint64_t v14 = a1;
        unsigned int v15 = &unk_34DB51;
LABEL_29:
        uint64_t v12 = slice_from_s(v14, 1, v15);
        if ((v12 & 0x80000000) != 0) {
          return v12;
        }
LABEL_30:
        *(_DWORD *)(a1 + 8) = v13;
        continue;
      }
    }
    break;
  }
  *(_DWORD *)(a1 + 8) = v13;
  uint64_t v16 = skip_utf8(*(void *)a1, v13, 0, *(unsigned int *)(a1 + 12), 1);
  if ((v16 & 0x80000000) == 0)
  {
    uint64_t v13 = v16;
    goto LABEL_30;
  }
  *(_DWORD *)(a1 + 8) = v3;
  int v17 = *(_DWORD **)(a1 + 40);
  _DWORD *v17 = *(_DWORD *)(a1 + 12);
  v17[1] = *(_DWORD *)(a1 + 12);
  int v18 = out_grouping_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 1);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v18;
    int v19 = in_grouping_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 1);
    if ((v19 & 0x80000000) == 0)
    {
      int v20 = *(_DWORD *)(a1 + 8) + v19;
      *(_DWORD *)(a1 + 8) = v20;
      if (v20 <= 3) {
        int v20 = 3;
      }
      **(_DWORD **)(a1 + 40) = v20;
      int v21 = out_grouping_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 1);
      if ((v21 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v21;
        int v22 = in_grouping_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 1);
        if ((v22 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v22;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v23 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v23;
  *(_DWORD *)(a1 + 24) = v23;
  if ((int)v23 <= (int)v3) {
    goto LABEL_61;
  }
  char v24 = *(unsigned char *)(v23 + *(void *)a1 - 1);
  if ((v24 & 0xE0) != 0x60) {
    goto LABEL_61;
  }
  if (((0x84020u >> v24) & 1) == 0) {
    goto LABEL_61;
  }
  int among_b = find_among_b(a1, (uint64_t)&unk_45D680, 5);
  if (!among_b) {
    goto LABEL_61;
  }
  int v26 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v26;
  if (among_b == 3)
  {
    if (**(_DWORD **)(a1 + 40) <= v26)
    {
      if (!out_grouping_b_U(a1, (uint64_t)&unk_34DB6A, 97, 232, 0))
      {
        uint64_t v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0) {
          goto LABEL_165;
        }
      }
      goto LABEL_60;
    }
    goto LABEL_52;
  }
  if (among_b == 2)
  {
    uint64_t v28 = sub_23E4E0(a1);
    uint64_t v1 = v28;
    unsigned int v29 = v28 >> 31;
    if (!v28) {
      unsigned int v29 = 2;
    }
    if ((v29 | 2) == 2) {
      goto LABEL_61;
    }
    if ((v28 & 0x80000000) == 0)
    {
      int v30 = *(_DWORD *)(a1 + 8);
      int v31 = *(_DWORD *)(a1 + 12);
      goto LABEL_62;
    }
    goto LABEL_144;
  }
  if (among_b != 1) {
    goto LABEL_61;
  }
  if (**(_DWORD **)(a1 + 40) > v26)
  {
LABEL_52:
    LODWORD(v1) = 0;
    goto LABEL_61;
  }
  uint64_t v27 = slice_from_s(a1, 4, &unk_34DB66);
  if ((v27 & 0x80000000) != 0) {
    goto LABEL_165;
  }
LABEL_60:
  LODWORD(v1) = 1;
LABEL_61:
  int v30 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v30;
  int v31 = v30;
LABEL_62:
  int v32 = sub_23E5A4(a1);
  if (v32 >= 0) {
    unsigned int v33 = v1;
  }
  else {
    unsigned int v33 = v32;
  }
  if (v32) {
    uint64_t v1 = v33;
  }
  else {
    uint64_t v1 = v1;
  }
  if (v32) {
    int v34 = v32 >> 31;
  }
  else {
    int v34 = 4;
  }
  if ((v34 | 4) != 4)
  {
    if ((v32 & 0x80000000) == 0)
    {
      int v37 = *(_DWORD *)(a1 + 8);
      int v36 = *(_DWORD *)(a1 + 12);
      goto LABEL_75;
    }
LABEL_129:
    if (v1) {
      goto LABEL_144;
    }
    goto LABEL_145;
  }
  int v35 = v30 - v31;
  int v36 = *(_DWORD *)(a1 + 12);
  int v37 = v36 + v35;
  *(_DWORD *)(a1 + 8) = v36 + v35;
LABEL_75:
  *(_DWORD *)(a1 + 24) = v37;
  if (eq_s_b(a1, 4, &unk_34DB7B))
  {
    int v38 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v38;
    if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v38)
    {
      int v39 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 1, &unk_34DB7F))
      {
        *(_DWORD *)(a1 + 8) = v38 - v39 + *(_DWORD *)(a1 + 12);
        uint64_t v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0)
        {
LABEL_165:
          uint64_t v1 = v27;
          if ((v27 & 0x80000000) != 0) {
            return v1;
          }
          goto LABEL_145;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_34DB80)) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        int v54 = sub_23E4E0(a1);
        unsigned int v55 = v54 >= 0 ? v1 : v54;
        uint64_t v1 = v54 ? v55 : v1;
        unsigned int v56 = v54 ? v54 >> 31 : 5;
        if (v56 == 5 || !v56) {
          goto LABEL_78;
        }
        if ((v54 & 0x80000000) == 0)
        {
          int v42 = *(_DWORD *)(a1 + 8);
          int v41 = *(_DWORD *)(a1 + 12);
          goto LABEL_79;
        }
        goto LABEL_129;
      }
    }
  }
LABEL_78:
  int v40 = v37 - v36;
  int v41 = *(_DWORD *)(a1 + 12);
  int v42 = v41 + v40;
  *(_DWORD *)(a1 + 8) = v41 + v40;
LABEL_79:
  *(_DWORD *)(a1 + 24) = v42;
  uint64_t v43 = v42 - 1;
  if ((int)v43 > *(_DWORD *)(a1 + 16)
    && (char v44 = *(unsigned char *)(*(void *)a1 + v43), (v44 & 0xE0) == 0x60)
    && ((0x40890u >> v44) & 1) != 0
    && (int v45 = find_among_b(a1, (uint64_t)&unk_45D720, 6)) != 0)
  {
    int v46 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v46;
    switch(v45)
    {
      case 1:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v46) {
          goto LABEL_136;
        }
        uint64_t v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0) {
          goto LABEL_165;
        }
        int v48 = *(_DWORD *)(a1 + 8);
        int v47 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 24) = v48;
        if (eq_s_b(a1, 2, &unk_34DB82))
        {
          int v49 = *(_DWORD *)(a1 + 8);
          *(_DWORD *)(a1 + 20) = v49;
          if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v49)
          {
            int v50 = *(_DWORD *)(a1 + 12);
            if (!eq_s_b(a1, 1, &unk_34DB84))
            {
              int v58 = v49 - v50;
LABEL_114:
              *(_DWORD *)(a1 + 8) = v58 + *(_DWORD *)(a1 + 12);
LABEL_135:
              uint64_t v27 = slice_del(a1);
              if ((v27 & 0x80000000) != 0) {
                goto LABEL_165;
              }
              goto LABEL_136;
            }
          }
        }
        *(_DWORD *)(a1 + 8) = v48 - v47 + *(_DWORD *)(a1 + 12);
        int v51 = sub_23E678(a1);
        if (v51 > 0) {
          goto LABEL_136;
        }
        BOOL v52 = v51 != 0;
        int v53 = v51 ? 1 : 7;
        uint64_t v1 = v51 ? v51 : v1;
LABEL_127:
        if (v53 == 7) {
          goto LABEL_136;
        }
        if (v52) {
          goto LABEL_129;
        }
        int v63 = *(_DWORD *)(a1 + 8);
        int v62 = *(_DWORD *)(a1 + 12);
        break;
      case 2:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v46) {
          goto LABEL_136;
        }
        int v57 = *(_DWORD *)(a1 + 12);
        if (eq_s_b(a1, 1, &unk_34DB85)) {
          goto LABEL_136;
        }
        int v58 = v46 - v57;
        goto LABEL_114;
      case 3:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v46) {
          goto LABEL_136;
        }
        uint64_t v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0) {
          goto LABEL_165;
        }
        int v59 = sub_23E5A4(a1);
        if (v59 >= 0) {
          unsigned int v60 = v1;
        }
        else {
          unsigned int v60 = v59;
        }
        BOOL v52 = v59 >> 31;
        if (v59) {
          uint64_t v1 = v60;
        }
        else {
          uint64_t v1 = v1;
        }
        if (v59) {
          int v53 = v59 >> 31;
        }
        else {
          int v53 = 7;
        }
        if (v53) {
          goto LABEL_127;
        }
        goto LABEL_136;
      case 4:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v46) {
          goto LABEL_136;
        }
        goto LABEL_135;
      case 5:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v46 || !**(unsigned char **)(a1 + 48)) {
          goto LABEL_136;
        }
        goto LABEL_135;
      default:
        goto LABEL_136;
    }
  }
  else
  {
LABEL_136:
    int v61 = v42 - v41;
    int v62 = *(_DWORD *)(a1 + 12);
    int v63 = v62 + v61;
    *(_DWORD *)(a1 + 8) = v62 + v61;
  }
  if (!out_grouping_b_U(a1, (uint64_t)&unk_34DB86, 73, 232, 0))
  {
    uint64_t v64 = *(int *)(a1 + 8);
    if ((int)v64 - 1 > *(_DWORD *)(a1 + 16))
    {
      char v65 = *(unsigned char *)(*(void *)a1 + v64 - 1);
      if (v65 & 0xE0) == 0x60 && ((0x208022u >> v65))
      {
        int v66 = *(_DWORD *)(a1 + 12);
        if (find_among_b(a1, (uint64_t)&unk_45D7E0, 4))
        {
          if (!out_grouping_b_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 0))
          {
            uint64_t v75 = *(unsigned int *)(a1 + 16);
            uint64_t v76 = (*(_DWORD *)(a1 + 12) + v64 - v66);
            *(_DWORD *)(a1 + 8) = v76;
            *(_DWORD *)(a1 + 24) = v76;
            int v77 = skip_utf8(*(void *)a1, v76, v75, 0, -1);
            if ((v77 & 0x80000000) == 0)
            {
              *(_DWORD *)(a1 + 8) = v77;
              *(_DWORD *)(a1 + 20) = v77;
              uint64_t v27 = slice_del(a1);
              if ((v27 & 0x80000000) != 0) {
                goto LABEL_165;
              }
            }
          }
        }
      }
    }
  }
  *(_DWORD *)(a1 + 8) = v63 - v62 + *(_DWORD *)(a1 + 12);
  uint64_t v1 = 1;
LABEL_144:
  if ((v1 & 0x80000000) == 0)
  {
LABEL_145:
    uint64_t v67 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v67;
    uint64_t v68 = v67;
    while (2)
    {
      *(_DWORD *)(a1 + 20) = v68;
      uint64_t v69 = *(unsigned int *)(a1 + 12);
      if ((int)v68 < (int)v69 && (*(unsigned __int8 *)(*(void *)a1 + (int)v68) | 0x10) == 0x59)
      {
        int v70 = find_among(a1, (uint64_t)&unk_45D8C0, 3);
        if (!v70) {
          goto LABEL_162;
        }
        uint64_t v68 = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v68;
        switch(v70)
        {
          case 1:
            uint64_t v72 = a1;
            v73 = &unk_34DBCC;
            break;
          case 2:
            uint64_t v72 = a1;
            v73 = &unk_34DBCD;
            break;
          case 3:
            uint64_t v69 = *(unsigned int *)(a1 + 12);
            goto LABEL_154;
          default:
            goto LABEL_156;
        }
        uint64_t v12 = slice_from_s(v72, 1, v73);
        if ((v12 & 0x80000000) != 0) {
          return v12;
        }
        goto LABEL_156;
      }
      *(_DWORD *)(a1 + 24) = v68;
LABEL_154:
      int v71 = skip_utf8(*(void *)a1, v68, 0, v69, 1);
      if (v71 < 0)
      {
LABEL_162:
        *(_DWORD *)(a1 + 8) = v67;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v71;
LABEL_156:
      uint64_t v68 = *(unsigned int *)(a1 + 8);
      continue;
    }
  }
  return v1;
}

void *dutch_UTF_8_create_env()
{
  return SN_create_env(0, 2, 1);
}

void dutch_UTF_8_close_env(uint64_t a1)
{
}

uint64_t sub_23E4E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  if (**(_DWORD **)(a1 + 40) > v1) {
    return 0;
  }
  int v4 = *(_DWORD *)(a1 + 12);
  int v5 = out_grouping_b_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 0);
  uint64_t result = 0;
  if (!v5)
  {
    int v6 = v1 - v4;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v6;
    if (eq_s_b(a1, 3, &unk_34DBA7)) {
      return 0;
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v6;
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) == 0)
    {
      int v7 = sub_23E678(a1);
      if (v7 >= 1) {
        return 1;
      }
      else {
        return v7 & (v7 >> 31);
      }
    }
  }
  return result;
}

uint64_t sub_23E5A4(uint64_t a1)
{
  **(unsigned char **)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  uint64_t result = eq_s_b(a1, 1, &unk_34DBAA);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    if (**(_DWORD **)(a1 + 40) <= v3)
    {
      int v4 = *(_DWORD *)(a1 + 12);
      int v5 = out_grouping_b_U(a1, (uint64_t)&unk_34DB3D, 97, 232, 0);
      uint64_t result = 0;
      if (!v5)
      {
        *(_DWORD *)(a1 + 8) = v3 - v4 + *(_DWORD *)(a1 + 12);
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) == 0)
        {
          **(unsigned char **)(a1 + 48) = 1;
          int v6 = sub_23E678(a1);
          if (v6 >= 1) {
            return 1;
          }
          else {
            return v6 & (v6 >> 31);
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E678(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  if ((int)v1 - 1 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(*(void *)a1 + v1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x100810u >> v3) & 1) == 0) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 12);
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45D860, 3);
  if (result)
  {
    uint64_t v6 = *(unsigned int *)(a1 + 16);
    uint64_t v7 = (*(_DWORD *)(a1 + 12) + v1 - v5);
    *(_DWORD *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 24) = v7;
    int v8 = skip_utf8(*(void *)a1, v7, v6, 0, -1);
    if (v8 < 0) {
      return 0;
    }
    *(_DWORD *)(a1 + 8) = v8;
    *(_DWORD *)(a1 + 20) = v8;
    int v9 = slice_del(a1);
    if (v9 >= 0) {
      return 1;
    }
    else {
      return v9 & (v9 >> 31);
    }
  }
  return result;
}

uint64_t english_UTF_8_stem(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 12);
  uint64_t v3 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v3;
  if ((int)v3 + 2 < (int)v2)
  {
    char v4 = *(unsigned char *)(*(void *)a1 + v3 + 2);
    if (v4 & 0xE0) == 0x60 && ((0x28C5212u >> v4))
    {
      int among = find_among(a1, (uint64_t)&unk_45D920, 18);
      uint64_t v2 = *(unsigned int *)(a1 + 12);
      if (among)
      {
        int v6 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v6;
        if (v6 >= (int)v2)
        {
          switch(among)
          {
            case 1:
              uint64_t v23 = &unk_34DBD0;
              goto LABEL_158;
            case 2:
              uint64_t v23 = &unk_34DBD3;
              goto LABEL_158;
            case 3:
              uint64_t v23 = &unk_34DBD6;
              goto LABEL_158;
            case 4:
              uint64_t v23 = &unk_34DBD9;
              goto LABEL_158;
            case 5:
              uint64_t v23 = &unk_34DBDC;
              goto LABEL_158;
            case 6:
              uint64_t v23 = &unk_34DBDF;
LABEL_158:
              uint64_t v71 = a1;
              int v72 = 3;
              break;
            case 7:
              uint64_t v23 = &unk_34DBE2;
              goto LABEL_165;
            case 8:
              uint64_t v23 = &unk_34DBE7;
              goto LABEL_163;
            case 9:
              uint64_t v23 = &unk_34DBEB;
              goto LABEL_165;
            case 10:
              uint64_t v23 = &unk_34DBF0;
LABEL_163:
              uint64_t v71 = a1;
              int v72 = 4;
              break;
            case 11:
              uint64_t v23 = &unk_34DBF4;
LABEL_165:
              uint64_t v71 = a1;
              int v72 = 5;
              break;
            default:
              return 1;
          }
          uint64_t v10 = slice_from_s(v71, v72, v23);
          if ((v10 & 0x80000000) == 0) {
            return 1;
          }
          return v10;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 8) = v3;
  int v7 = skip_utf8(*(void *)a1, v3, 0, v2, 3);
  if (v7 >= 0) {
    int v8 = v7;
  }
  else {
    int v8 = v3;
  }
  *(_DWORD *)(a1 + 8) = v8;
  if (v7 < 0) {
    return 1;
  }
  *(_DWORD *)(a1 + 8) = v3;
  **(unsigned char **)(a1 + 48) = 0;
  uint64_t v9 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v9;
  if (eq_s(a1, 1, &unk_34DC4D))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    uint64_t v10 = slice_del(a1);
    if ((v10 & 0x80000000) != 0) {
      return v10;
    }
  }
  *(_DWORD *)(a1 + 8) = v9;
  *(_DWORD *)(a1 + 20) = v9;
  if (eq_s(a1, 1, &unk_34DC4E))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    uint64_t v10 = slice_from_s(a1, 1, &unk_34DC4F);
    if ((v10 & 0x80000000) != 0) {
      return v10;
    }
    **(unsigned char **)(a1 + 48) = 1;
  }
  for (*(_DWORD *)(a1 + 8) = v9; ; *(_DWORD *)(a1 + 8) = v11)
  {
    while (!in_grouping_U(a1, (uint64_t)&unk_34DC50, 97, 121, 0))
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      if (!eq_s(a1, 1, &unk_34DC54)) {
        break;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 8) = v9;
      uint64_t v10 = slice_from_s(a1, 1, &unk_34DC55);
      if ((v10 & 0x80000000) != 0) {
        return v10;
      }
      **(unsigned char **)(a1 + 48) = 1;
      uint64_t v9 = *(unsigned int *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 8) = v9;
    uint64_t v11 = skip_utf8(*(void *)a1, v9, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v11 & 0x80000000) != 0) {
      break;
    }
    uint64_t v9 = v11;
  }
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t v12 = *(_DWORD **)(a1 + 40);
  *uint64_t v12 = *(_DWORD *)(a1 + 12);
  v12[1] = *(_DWORD *)(a1 + 12);
  uint64_t v13 = *(int *)(a1 + 8);
  if ((int)v13 + 4 < *(_DWORD *)(a1 + 12)
    && (char v14 = *(unsigned char *)(*(void *)a1 + v13 + 4), (v14 & 0xE0) == 0x60)
    && ((0x244000u >> v14) & 1) != 0
    && find_among(a1, (uint64_t)&unk_45DB60, 3))
  {
    int v15 = *(_DWORD *)(a1 + 8);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v13;
    int v16 = out_grouping_U(a1, (uint64_t)&unk_34DC50, 97, 121, 1);
    if (v16 < 0) {
      goto LABEL_33;
    }
    *(_DWORD *)(a1 + 8) += v16;
    int v17 = in_grouping_U(a1, (uint64_t)&unk_34DC50, 97, 121, 1);
    if (v17 < 0) {
      goto LABEL_33;
    }
    int v15 = *(_DWORD *)(a1 + 8) + v17;
    *(_DWORD *)(a1 + 8) = v15;
  }
  **(_DWORD **)(a1 + 40) = v15;
  int v18 = out_grouping_U(a1, (uint64_t)&unk_34DC50, 97, 121, 1);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v18;
    int v19 = in_grouping_U(a1, (uint64_t)&unk_34DC50, 97, 121, 1);
    if ((v19 & 0x80000000) == 0) {
      *(_DWORD *)(*(void *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v19;
    }
  }
LABEL_33:
  *(_DWORD *)(a1 + 16) = v3;
  int v20 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 24) = v20;
  if (v20 > (int)v3)
  {
    int v21 = *(unsigned __int8 *)(v20 + *(void *)a1 - 1);
    if (v21 == 115 || v21 == 39)
    {
      int among_b = find_among_b(a1, (uint64_t)&unk_45DBC0, 3);
      if (among_b)
      {
        int v20 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v20;
        if (among_b == 1)
        {
          uint64_t v10 = slice_del(a1);
          if ((v10 & 0x80000000) != 0) {
            return v10;
          }
          int v20 = *(_DWORD *)(a1 + 8);
        }
      }
      else
      {
        int v20 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 8) = v20;
      }
    }
  }
  *(_DWORD *)(a1 + 24) = v20;
  if (v20 > *(_DWORD *)(a1 + 16))
  {
    int v24 = *(unsigned __int8 *)(*(void *)a1 + v20 - 1);
    if (v24 == 115 || v24 == 100)
    {
      int v25 = find_among_b(a1, (uint64_t)&unk_45DC20, 6);
      if (v25)
      {
        uint64_t v26 = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v26;
        switch(v25)
        {
          case 3:
            int v28 = skip_utf8(*(void *)a1, v26, *(unsigned int *)(a1 + 16), 0, -1);
            if (v28 < 0) {
              goto LABEL_60;
            }
            *(_DWORD *)(a1 + 8) = v28;
            int v29 = out_grouping_b_U(a1, (uint64_t)&unk_34DC50, 97, 121, 1);
            if (v29 < 0) {
              goto LABEL_60;
            }
            *(_DWORD *)(a1 + 8) -= v29;
            uint64_t v10 = slice_del(a1);
            if ((v10 & 0x80000000) == 0) {
              goto LABEL_60;
            }
            return v10;
          case 2:
            unsigned int v30 = *(_DWORD *)(a1 + 12);
            int v31 = skip_utf8(*(void *)a1, v26, *(unsigned int *)(a1 + 16), v30, -2);
            if ((v31 & 0x80000000) == 0)
            {
              *(_DWORD *)(a1 + 8) = v31;
              uint64_t v27 = &unk_34DC68;
              uint64_t v32 = a1;
              int v33 = 1;
              goto LABEL_59;
            }
            *(_DWORD *)(a1 + 8) = v26 - v30 + *(_DWORD *)(a1 + 12);
            uint64_t v27 = &unk_34DC69;
            break;
          case 1:
            uint64_t v27 = &unk_34DC66;
            break;
          default:
            goto LABEL_60;
        }
        uint64_t v32 = a1;
        int v33 = 2;
LABEL_59:
        uint64_t v10 = slice_from_s(v32, v33, v27);
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        return v10;
      }
    }
  }
LABEL_60:
  int v34 = *(_DWORD *)(a1 + 16);
  uint64_t v35 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v35;
  *(_DWORD *)(a1 + 24) = v35;
  if ((int)v35 - 5 > v34)
  {
    int v36 = *(unsigned __int8 *)(v35 + *(void *)a1 - 1);
    if (v36 == 103 || v36 == 100)
    {
      if (find_among_b(a1, (uint64_t)&unk_45DCE0, 8))
      {
        int v37 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v37;
        if (v37 <= *(_DWORD *)(a1 + 16))
        {
          LODWORD(v39) = 0;
          goto LABEL_140;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  int v38 = sub_23EF6C(a1);
  uint64_t v39 = v38 & (v38 >> 31);
  int v40 = v38 >> 31;
  if (!v38) {
    int v40 = 11;
  }
  if (v40 != 11 && v40)
  {
    if (v38 < 0) {
      return v39;
    }
    int v41 = *(_DWORD *)(a1 + 8);
    int v42 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v41 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v41;
    int v42 = v41;
  }
  int v43 = sub_23F1A4((_DWORD *)a1);
  if (v43 >= 0) {
    unsigned int v44 = v39;
  }
  else {
    unsigned int v44 = v43;
  }
  if (v43) {
    uint64_t v39 = v44;
  }
  else {
    uint64_t v39 = v39;
  }
  if (v43) {
    int v45 = v43 >> 31;
  }
  else {
    int v45 = 12;
  }
  if (v45 != 12 && v45)
  {
    if (v43 < 0) {
      return v39;
    }
    int v48 = *(_DWORD *)(a1 + 8);
    int v47 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v46 = v41 - v42;
    int v47 = *(_DWORD *)(a1 + 12);
    int v48 = v46 + v47;
    *(_DWORD *)(a1 + 8) = v46 + v47;
  }
  int v49 = sub_23F278(a1);
  if (v49 >= 0) {
    unsigned int v50 = v39;
  }
  else {
    unsigned int v50 = v49;
  }
  if (v49) {
    uint64_t v39 = v50;
  }
  else {
    uint64_t v39 = v39;
  }
  if (v49) {
    int v51 = v49 >> 31;
  }
  else {
    int v51 = 13;
  }
  if (v51 != 13 && v51)
  {
    if (v49 < 0) {
      return v39;
    }
    int v54 = *(_DWORD *)(a1 + 8);
    int v53 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v52 = v48 - v47;
    int v53 = *(_DWORD *)(a1 + 12);
    int v54 = v52 + v53;
    *(_DWORD *)(a1 + 8) = v52 + v53;
  }
  int v55 = sub_23F49C(a1);
  if (v55 >= 0) {
    unsigned int v56 = v39;
  }
  else {
    unsigned int v56 = v55;
  }
  if (v55) {
    uint64_t v39 = v56;
  }
  else {
    uint64_t v39 = v39;
  }
  if (v55) {
    int v57 = v55 >> 31;
  }
  else {
    int v57 = 14;
  }
  if (v57 != 14 && v57)
  {
    if (v55 < 0) {
      return v39;
    }
    int v60 = *(_DWORD *)(a1 + 8);
    int v59 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v58 = v54 - v53;
    int v59 = *(_DWORD *)(a1 + 12);
    int v60 = v58 + v59;
    *(_DWORD *)(a1 + 8) = v58 + v59;
  }
  int v61 = sub_23F5E4(a1);
  if (v61 >= 0) {
    unsigned int v62 = v39;
  }
  else {
    unsigned int v62 = v61;
  }
  if (v61) {
    uint64_t v39 = v62;
  }
  else {
    uint64_t v39 = v39;
  }
  if (v61) {
    int v63 = v61 >> 31;
  }
  else {
    int v63 = 15;
  }
  if (v63 != 15 && v63)
  {
    if (v61 < 0) {
      return v39;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v60 - v59 + *(_DWORD *)(a1 + 12);
  }
  int v64 = sub_23F6E8(a1);
  if (v64 >= 0) {
    unsigned int v65 = v39;
  }
  else {
    unsigned int v65 = v64;
  }
  if (v64) {
    uint64_t v39 = v65;
  }
  else {
    uint64_t v39 = v39;
  }
  if (v64) {
    int v66 = v64 >> 31;
  }
  else {
    int v66 = 16;
  }
  if ((v66 | 0x10) == 0x10 || (v64 & 0x80000000) == 0)
  {
LABEL_140:
    int v67 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v67;
    int v68 = sub_23F7F0(a1);
    int v69 = v68 >> 31;
    if (!v68) {
      int v69 = 17;
    }
    if (v69 != 17 && v69)
    {
      if (v68 >= 0) {
        unsigned int v70 = v39;
      }
      else {
        unsigned int v70 = v68;
      }
      if (v68) {
        uint64_t v39 = v70;
      }
      else {
        uint64_t v39 = v39;
      }
      if (v68 < 0) {
        return v39;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v67;
    }
    return 1;
  }
  return v39;
}

uint64_t sub_23EF6C(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v4 = *(unsigned char *)(*(void *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0x2000090u >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45DDE0, 6);
  if (!result) {
    return result;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (result == 2)
  {
    int v7 = *(_DWORD *)(a1 + 12);
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34DC50, 97, 121, 1) & 0x80000000) != 0) {
      return 0;
    }
    *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 12);
    uint64_t v9 = *(int *)(a1 + 8);
    if ((int)v9 - 1 <= *(_DWORD *)(a1 + 16)) {
      goto LABEL_17;
    }
    char v10 = *(unsigned char *)(*(void *)a1 + v9 - 1);
    if ((v10 & 0xE0) != 0x60 || ((0x41570D4u >> v10) & 1) == 0) {
      goto LABEL_17;
    }
    uint64_t result = find_among_b(a1, (uint64_t)&unk_45DEA0, 13);
    if (!result) {
      return result;
    }
    int v14 = v9 - v8;
    int v8 = *(_DWORD *)(a1 + 12);
    LODWORD(v9) = v8 + v14;
    *(_DWORD *)(a1 + 8) = v8 + v14;
    if (result != 3)
    {
      if (result != 2)
      {
        if (result != 1) {
          return 1;
        }
        uint64_t result = insert_s(a1, v8 + v14, v8 + v14, 1, &unk_34DCB7);
        *(_DWORD *)(a1 + 8) = v9;
        if ((result & 0x80000000) == 0) {
          return 1;
        }
        return result;
      }
      *(_DWORD *)(a1 + 24) = v9;
      int v15 = skip_utf8(*(void *)a1, (v8 + v14), *(unsigned int *)(a1 + 16), 0, -1);
      if ((v15 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) = v15;
        *(_DWORD *)(a1 + 20) = v15;
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        return 1;
      }
    }
    else
    {
LABEL_17:
      if (v9 == **(_DWORD **)(a1 + 40))
      {
        uint64_t result = sub_23F8F0((_DWORD *)a1);
        if (result)
        {
          int v11 = v9 - v8;
          int v12 = *(_DWORD *)(a1 + 12);
          int v13 = v12 + v9 - v8;
          *(_DWORD *)(a1 + 8) = v13;
          uint64_t result = insert_s(a1, v12 + v11, v12 + v11, 1, &unk_34DCB8);
          *(_DWORD *)(a1 + 8) = v13;
          if ((result & 0x80000000) == 0) {
            return 1;
          }
        }
        return result;
      }
    }
    return 0;
  }
  if (result != 1) {
    return 1;
  }
  if (**(_DWORD **)(a1 + 40) > v6) {
    return 0;
  }
  uint64_t result = slice_from_s(a1, 2, &unk_34DCB5);
  if ((result & 0x80000000) == 0) {
    return 1;
  }
  return result;
}

uint64_t sub_23F1A4(_DWORD *a1)
{
  int v2 = a1[2];
  int v3 = a1[3];
  a1[6] = v2;
  if (eq_s_b((uint64_t)a1, 1, &unk_34DCEC)
    || (a1[2] = v2 - v3 + a1[3], uint64_t result = eq_s_b((uint64_t)a1, 1, &unk_34DCED), result))
  {
    a1[5] = a1[2];
    int v5 = out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_34DC50, 97, 121, 0);
    uint64_t result = 0;
    if (!v5)
    {
      if (a1[2] <= a1[4])
      {
        return 0;
      }
      else
      {
        int v6 = slice_from_s((uint64_t)a1, 1, &unk_34DCEE);
        if (v6 >= 0) {
          return 1;
        }
        else {
          return v6 & (v6 >> 31);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F278(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v4 = *(unsigned char *)(*(void *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0xC7200u >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45E040, 24);
  if (!result) {
    return result;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (**(_DWORD **)(a1 + 40) > v6) {
    return 0;
  }
  switch((int)result)
  {
    case 1:
      int v7 = &unk_34DCEF;
      goto LABEL_27;
    case 2:
      int v7 = &unk_34DCF3;
      goto LABEL_27;
    case 3:
      int v7 = &unk_34DCF7;
      goto LABEL_27;
    case 4:
      int v7 = &unk_34DCFB;
      goto LABEL_27;
    case 5:
      int v7 = &unk_34DCFF;
      goto LABEL_25;
    case 6:
      int v7 = &unk_34DD02;
      goto LABEL_25;
    case 7:
      int v7 = &unk_34DD05;
      goto LABEL_25;
    case 8:
      int v7 = &unk_34DD08;
      goto LABEL_23;
    case 9:
      int v7 = &unk_34DD0A;
      goto LABEL_25;
    case 10:
      int v7 = &unk_34DD0D;
      goto LABEL_25;
    case 11:
      int v7 = &unk_34DD10;
      goto LABEL_25;
    case 12:
      int v7 = &unk_34DD13;
      goto LABEL_25;
    case 13:
      uint64_t result = eq_s_b(a1, 1, &unk_34DD16);
      if (!result) {
        return result;
      }
      int v7 = &unk_34DD17;
LABEL_23:
      uint64_t v8 = a1;
      int v9 = 2;
      goto LABEL_28;
    case 14:
      int v7 = &unk_34DD19;
LABEL_25:
      uint64_t v8 = a1;
      int v9 = 3;
      goto LABEL_28;
    case 15:
      int v7 = &unk_34DD1C;
LABEL_27:
      uint64_t v8 = a1;
      int v9 = 4;
LABEL_28:
      uint64_t result = slice_from_s(v8, v9, v7);
      if ((result & 0x80000000) == 0) {
        goto LABEL_29;
      }
      return result;
    case 16:
      int v10 = in_grouping_b_U(a1, (uint64_t)&unk_34DD20, 99, 116, 0);
      uint64_t result = 0;
      if (v10) {
        return result;
      }
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      goto LABEL_29;
    default:
LABEL_29:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_23F49C(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 - 2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(v1 + *(void *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x81220u >> v3) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45E340, 9);
  if (!result) {
    return result;
  }
  int v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  int v6 = *(_DWORD **)(a1 + 40);
  if (*v6 > v5) {
    return 0;
  }
  switch((int)result)
  {
    case 1:
      int v7 = &unk_34DD9B;
      uint64_t v8 = a1;
      int v9 = 4;
      goto LABEL_14;
    case 2:
      int v7 = &unk_34DD9F;
      uint64_t v8 = a1;
      int v9 = 3;
      goto LABEL_14;
    case 3:
      int v7 = &unk_34DDA2;
      goto LABEL_13;
    case 4:
      int v7 = &unk_34DDA4;
LABEL_13:
      uint64_t v8 = a1;
      int v9 = 2;
LABEL_14:
      uint64_t result = slice_from_s(v8, v9, v7);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      goto LABEL_18;
    case 5:
      goto LABEL_17;
    case 6:
      if (v6[1] > v5) {
        return 0;
      }
LABEL_17:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) == 0) {
        goto LABEL_18;
      }
      return result;
    default:
LABEL_18:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_23F5E4(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v4 = *(unsigned char *)(*(void *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0x1C7228u >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45E460, 18);
  if (!result) {
    return result;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v6) {
    return 0;
  }
  if (result == 2)
  {
    int v7 = *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 1, &unk_34DDD2))
    {
      *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
      uint64_t result = eq_s_b(a1, 1, &unk_34DDD3);
      if (!result) {
        return result;
      }
    }
  }
  else if (result != 1)
  {
    return 1;
  }
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) == 0) {
    return 1;
  }
  return result;
}

uint64_t sub_23F6E8(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  int v3 = *(unsigned __int8 *)(v1 + *(void *)a1 - 1);
  if (v3 != 108 && v3 != 101) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_45E6A0, 2);
  if (!result) {
    return result;
  }
  int v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  if (result == 2)
  {
    if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v5)
    {
      uint64_t result = eq_s_b(a1, 1, &unk_34DE0E);
      if (!result) {
        return result;
      }
      goto LABEL_15;
    }
    return 0;
  }
  if (result != 1) {
    return 1;
  }
  int v6 = *(_DWORD **)(a1 + 40);
  if (v6[1] <= v5) {
    goto LABEL_15;
  }
  if (*v6 > v5) {
    return 0;
  }
  int v7 = *(_DWORD *)(a1 + 12);
  if (sub_23F8F0((_DWORD *)a1)) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v5 - v7 + *(_DWORD *)(a1 + 12);
LABEL_15:
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) == 0) {
    return 1;
  }
  return result;
}

uint64_t sub_23F7F0(uint64_t a1)
{
  if (!**(unsigned char **)(a1 + 48)) {
    return 0;
  }
  while (1)
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v2;
    if (!eq_s(a1, 1, &unk_34DE11)) {
      break;
    }
    LODWORD(v3) = v2;
LABEL_7:
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 8) = v3;
    uint64_t result = slice_from_s(a1, 1, &unk_34DE12);
    if ((result & 0x80000000) != 0) {
      return result;
    }
  }
  uint64_t v3 = v2;
  while (1)
  {
    *(_DWORD *)(a1 + 8) = v3;
    uint64_t v4 = skip_utf8(*(void *)a1, v3, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v4 & 0x80000000) != 0) {
      break;
    }
    uint64_t v3 = v4;
    *(_DWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 20) = v4;
    if (eq_s(a1, 1, &unk_34DE11)) {
      goto LABEL_7;
    }
  }
  *(_DWORD *)(a1 + 8) = v2;
  return 1;
}

void *english_UTF_8_create_env()
{
  return SN_create_env(0, 2, 1);
}

void english_UTF_8_close_env(uint64_t a1)
{
}

BOOL sub_23F8F0(_DWORD *a1)
{
  int v3 = a1[2];
  int v2 = a1[3];
  if (!out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_34DCE7, 89, 121, 0)
    && !in_grouping_b_U((uint64_t)a1, (uint64_t)&unk_34DC50, 97, 121, 0)
    && !out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_34DC50, 97, 121, 0))
  {
    return 1;
  }
  a1[2] = v3 - v2 + a1[3];
  int v4 = out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_34DC50, 97, 121, 0);
  BOOL result = 0;
  if (!v4)
  {
    int v6 = in_grouping_b_U((uint64_t)a1, (uint64_t)&unk_34DC50, 97, 121, 0);
    BOOL result = 0;
    if (!v6) {
      return a1[2] <= a1[4];
    }
  }
  return result;
}

uint64_t finnish_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  int v3 = *(_DWORD **)(a1 + 40);
  _DWORD *v3 = *(_DWORD *)(a1 + 12);
  v3[1] = *(_DWORD *)(a1 + 12);
  if ((out_grouping_U(a1, (uint64_t)&unk_34DE13, 97, 246, 1) & 0x80000000) != 0
    || (int v4 = in_grouping_U(a1, (uint64_t)&unk_34DE13, 97, 246, 1), v4 < 0)
    || (int v5 = *(_DWORD *)(a1 + 8) + v4,
        *(_DWORD *)(a1 + 8) = v5,
        **(_DWORD **)(a1 + 40) = v5,
        (out_grouping_U(a1, (uint64_t)&unk_34DE13, 97, 246, 1) & 0x80000000) != 0)
    || (int v6 = in_grouping_U(a1, (uint64_t)&unk_34DE13, 97, 246, 1), v6 < 0))
  {
    LODWORD(v7) = 0;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v6;
    LODWORD(v7) = 1;
  }
  *(_DWORD *)(a1 + 8) = v2;
  **(unsigned char **)(a1 + 48) = 0;
  int v9 = *(_DWORD *)(a1 + 8);
  int v8 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 16) = v9;
  *(_DWORD *)(a1 + 8) = v8;
  int v10 = **(_DWORD **)(a1 + 40);
  if (v8 >= v10)
  {
    *(_DWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v8;
    int among_b = find_among_b(a1, (uint64_t)&unk_45E6E0, 10);
    if (!among_b)
    {
      *(_DWORD *)(a1 + 16) = v9;
      goto LABEL_19;
    }
    int v12 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v9;
    *(_DWORD *)(a1 + 20) = v12;
    if (among_b == 2)
    {
      if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v12) {
        goto LABEL_19;
      }
    }
    else if (among_b == 1 && in_grouping_b_U(a1, (uint64_t)&unk_34DE26, 97, 246, 0))
    {
      goto LABEL_19;
    }
    int v13 = slice_del(a1);
    if (v13 >= 0) {
      uint64_t v7 = v7;
    }
    else {
      uint64_t v7 = v13;
    }
    if (v13 < 0) {
      return v7;
    }
  }
LABEL_19:
  int v14 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  int v15 = **(_DWORD **)(a1 + 40);
  if (v14 >= v15)
  {
    int v16 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v15;
    *(_DWORD *)(a1 + 24) = v14;
    int v17 = find_among_b(a1, (uint64_t)&unk_45E820, 9);
    if (v17)
    {
      uint64_t v18 = *(int *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v16;
      *(_DWORD *)(a1 + 20) = v18;
      switch(v17)
      {
        case 1:
          int v19 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_34DE5A)) {
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 8) = v18 - v19 + *(_DWORD *)(a1 + 12);
          goto LABEL_40;
        case 2:
          uint64_t v20 = slice_del(a1);
          if ((v20 & 0x80000000) == 0)
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            if (!eq_s_b(a1, 3, &unk_34DE5B)) {
              goto LABEL_41;
            }
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
            uint64_t v20 = slice_from_s(a1, 3, &unk_34DE5E);
            if ((v20 & 0x80000000) == 0) {
              goto LABEL_41;
            }
          }
          return v20;
        case 3:
          goto LABEL_40;
        case 4:
          if ((int)v18 - 1 <= v16 || *(unsigned char *)(*(void *)a1 + v18 - 1) != 97) {
            goto LABEL_41;
          }
          int v21 = &unk_45E940;
          goto LABEL_35;
        case 5:
          if ((int)v18 - 2 <= v16 || *(unsigned __int8 *)(v18 + *(void *)a1 - 1) != 164) {
            goto LABEL_41;
          }
          int v21 = &unk_45EA00;
LABEL_35:
          uint64_t v22 = a1;
          int v23 = 6;
          break;
        case 6:
          if ((int)v18 - 2 <= v16 || *(unsigned char *)(v18 + *(void *)a1 - 1) != 101) {
            goto LABEL_41;
          }
          int v21 = &unk_45EAC0;
          uint64_t v22 = a1;
          int v23 = 2;
          break;
        default:
          goto LABEL_41;
      }
      if (find_among_b(v22, (uint64_t)v21, v23))
      {
LABEL_40:
        uint64_t v20 = slice_del(a1);
        if ((v20 & 0x80000000) != 0) {
          return v20;
        }
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v16;
    }
  }
LABEL_41:
  int v24 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v24;
  int v25 = **(_DWORD **)(a1 + 40);
  if (v24 >= v25)
  {
    int v26 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v25;
    *(_DWORD *)(a1 + 24) = v24;
    int v27 = find_among_b(a1, (uint64_t)&unk_45EB00, 30);
    if (v27)
    {
      int v28 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v26;
      *(_DWORD *)(a1 + 20) = v28;
      switch(v27)
      {
        case 1:
          int v29 = &unk_34DEA5;
          goto LABEL_60;
        case 2:
          int v29 = &unk_34DEA6;
          goto LABEL_60;
        case 3:
          int v29 = &unk_34DEA7;
          goto LABEL_60;
        case 4:
          int v29 = &unk_34DEA8;
          goto LABEL_60;
        case 5:
          int v29 = &unk_34DEA9;
          goto LABEL_51;
        case 6:
          int v29 = &unk_34DEAB;
LABEL_51:
          uint64_t v30 = a1;
          int v31 = 2;
          goto LABEL_61;
        case 7:
          int v32 = *(_DWORD *)(a1 + 12) - v28;
          if ((find_among_b(a1, (uint64_t)&unk_45EEC0, 7)
             || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v32, eq_s_b(a1, 2, &unk_34DEAD)))
            && (uint64_t v33 = *(unsigned int *)(a1 + 16),
                uint64_t v34 = (*(_DWORD *)(a1 + 12) - v32),
                *(_DWORD *)(a1 + 8) = v34,
                int v35 = skip_utf8(*(void *)a1, v34, v33, 0, -1),
                (v35 & 0x80000000) == 0))
          {
            *(_DWORD *)(a1 + 8) = v35;
            *(_DWORD *)(a1 + 20) = v35;
          }
          else
          {
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v32;
          }
          goto LABEL_62;
        case 8:
          if (in_grouping_b_U(a1, (uint64_t)&unk_34DE13, 97, 246, 0)
            || out_grouping_b_U(a1, (uint64_t)&unk_34DE13, 97, 246, 0))
          {
            break;
          }
          goto LABEL_62;
        case 9:
          int v29 = &unk_34DEAF;
LABEL_60:
          uint64_t v30 = a1;
          int v31 = 1;
LABEL_61:
          if (eq_s_b(v30, v31, v29)) {
            goto LABEL_62;
          }
          break;
        default:
LABEL_62:
          uint64_t v20 = slice_del(a1);
          if ((v20 & 0x80000000) != 0) {
            return v20;
          }
          **(unsigned char **)(a1 + 48) = 1;
          break;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v26;
    }
  }
  int v36 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v36;
  int v37 = *(_DWORD *)(*(void *)(a1 + 40) + 4);
  if (v36 >= v37)
  {
    int v38 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v37;
    *(_DWORD *)(a1 + 24) = v36;
    int v39 = find_among_b(a1, (uint64_t)&unk_45EFA0, 14);
    if (v39)
    {
      int v40 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v38;
      *(_DWORD *)(a1 + 20) = v40;
      if (v39 == 1)
      {
        int v41 = *(_DWORD *)(a1 + 12);
        if (eq_s_b(a1, 2, &unk_34DF33)) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 8) = v40 - v41 + *(_DWORD *)(a1 + 12);
      }
      int v42 = slice_del(a1);
      if (v42 >= 0) {
        uint64_t v7 = v7;
      }
      else {
        uint64_t v7 = v42;
      }
      if (v42 < 0) {
        return v7;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v38;
    }
  }
LABEL_75:
  int v43 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v43;
  if (!**(unsigned char **)(a1 + 48))
  {
    int v52 = sub_2400EC(a1);
    if (v52 >= 0) {
      unsigned int v53 = v7;
    }
    else {
      unsigned int v53 = v52;
    }
    unsigned int v50 = v52 >> 31;
    if (v52) {
      uint64_t v7 = v53;
    }
    else {
      uint64_t v7 = v7;
    }
    if (v52) {
      int v54 = v52 >> 31;
    }
    else {
      int v54 = 10;
    }
    if (v54 && v54 != 10)
    {
LABEL_106:
      if (v50) {
        return v7;
      }
      goto LABEL_110;
    }
    goto LABEL_109;
  }
  int v44 = **(_DWORD **)(a1 + 40);
  if (v43 < v44)
  {
LABEL_109:
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
    goto LABEL_110;
  }
  int v45 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v44;
  *(_DWORD *)(a1 + 24) = v43;
  if (v43 <= v44
    || *(unsigned __int8 *)(v43 + *(void *)a1 - 1) - 105 > 1
    || !find_among_b(a1, (uint64_t)&unk_45F160, 2))
  {
    *(_DWORD *)(a1 + 16) = v45;
    goto LABEL_109;
  }
  int v46 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 16) = v45;
  *(_DWORD *)(a1 + 20) = v46;
  int v47 = slice_del(a1);
  if (v47 >= 0) {
    int v48 = 1;
  }
  else {
    int v48 = v47 & (v47 >> 31);
  }
  if (v48 >= 0) {
    unsigned int v49 = v7;
  }
  else {
    unsigned int v49 = v48;
  }
  unsigned int v50 = v48 >> 31;
  if (v48) {
    uint64_t v7 = v49;
  }
  else {
    uint64_t v7 = v7;
  }
  if (v48) {
    int v51 = v48 >> 31;
  }
  else {
    int v51 = 8;
  }
  if ((v51 | 8) == 8) {
    goto LABEL_109;
  }
  if (v48 < 0) {
    goto LABEL_106;
  }
LABEL_110:
  int v55 = sub_24024C(a1);
  int v56 = v55 >> 31;
  if (!v55) {
    int v56 = 11;
  }
  if (!v56
    || v56 == 11
    || (v55 >= 0 ? (v57 = v7) : (v57 = v55), v55 ? (uint64_t v7 = v57) : (uint64_t v7 = v7), (v55 & 0x80000000) == 0))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  return v7;
}

uint64_t sub_2400EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  int v2 = **(_DWORD **)(a1 + 40);
  if (v1 < v2) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2;
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t result = eq_s_b(a1, 1, &unk_34DF6C);
  if (!result) {
    goto LABEL_6;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  int v7 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 20) = v6;
  if (in_grouping_b_U(a1, (uint64_t)&unk_34DE13, 97, 246, 0)) {
    goto LABEL_5;
  }
  *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 16) = v5;
    int v8 = *(_DWORD *)(a1 + 8);
    int v9 = *(_DWORD *)(*(void *)(a1 + 40) + 4);
    if (v8 >= v9)
    {
      *(_DWORD *)(a1 + 16) = v9;
      *(_DWORD *)(a1 + 8) = v8;
      *(_DWORD *)(a1 + 24) = v8;
      if (v8 - 2 <= v9 || *(unsigned char *)(v8 + *(void *)a1 - 1) != 97)
      {
LABEL_5:
        uint64_t result = 0;
LABEL_6:
        *(_DWORD *)(a1 + 16) = v5;
        return result;
      }
      uint64_t result = find_among_b(a1, (uint64_t)&unk_45F1A0, 2);
      if (!result) {
        goto LABEL_6;
      }
      int v10 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v5;
      *(_DWORD *)(a1 + 20) = v10;
      if (result != 1) {
        goto LABEL_16;
      }
      int v11 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 2, &unk_34DF6D))
      {
        *(_DWORD *)(a1 + 8) = v10 - v11 + *(_DWORD *)(a1 + 12);
LABEL_16:
        LODWORD(result) = slice_del(a1);
        if ((int)result >= 0) {
          return 1;
        }
        else {
          return result;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24024C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  int v2 = **(_DWORD **)(a1 + 40);
  if (v1 < v2) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 12);
  int v6 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2;
  int v7 = v5 - v1;
  if (!find_among_b(a1, (uint64_t)&unk_45EEC0, 7)) {
    goto LABEL_27;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 16);
  uint64_t v9 = (*(_DWORD *)(a1 + 12) - v7);
  *(_DWORD *)(a1 + 8) = v9;
  *(_DWORD *)(a1 + 24) = v9;
  int v10 = skip_utf8(*(void *)a1, v9, v8, 0, -1);
  if (v10 < 0
    || (*(_DWORD *)(a1 + 8) = v10, *(_DWORD *)(a1 + 20) = v10, uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
  {
LABEL_27:
    int v11 = *(_DWORD *)(a1 + 12) - v7;
    *(_DWORD *)(a1 + 8) = v11;
    *(_DWORD *)(a1 + 24) = v11;
    if (in_grouping_b_U(a1, (uint64_t)&unk_34DF76, 97, 228, 0)
      || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8),
          out_grouping_b_U(a1, (uint64_t)&unk_34DE13, 97, 246, 0))
      || (uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
    {
      int v12 = *(_DWORD *)(a1 + 12) - v7;
      *(_DWORD *)(a1 + 8) = v12;
      *(_DWORD *)(a1 + 24) = v12;
      if (!eq_s_b(a1, 1, &unk_34DF87)) {
        goto LABEL_14;
      }
      int v13 = *(_DWORD *)(a1 + 8);
      int v14 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 20) = v13;
      if (!eq_s_b(a1, 1, &unk_34DF88))
      {
        *(_DWORD *)(a1 + 8) = v13 - v14 + *(_DWORD *)(a1 + 12);
        if (!eq_s_b(a1, 1, &unk_34DF89)) {
          goto LABEL_14;
        }
      }
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) == 0)
      {
LABEL_14:
        int v15 = *(_DWORD *)(a1 + 12) - v7;
        *(_DWORD *)(a1 + 8) = v15;
        *(_DWORD *)(a1 + 24) = v15;
        if (!eq_s_b(a1, 1, &unk_34DF8A)
          || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8), !eq_s_b(a1, 1, &unk_34DF8B))
          || (uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v7;
          *(_DWORD *)(a1 + 16) = v6;
          if ((in_grouping_b_U(a1, (uint64_t)&unk_34DE13, 97, 246, 1) & 0x80000000) != 0) {
            return 0;
          }
          uint64_t v16 = *(unsigned int *)(a1 + 8);
          *(_DWORD *)(a1 + 24) = v16;
          int v17 = skip_utf8(*(void *)a1, v16, *(unsigned int *)(a1 + 16), 0, -1);
          if (v17 < 0) {
            return 0;
          }
          *(_DWORD *)(a1 + 8) = v17;
          *(_DWORD *)(a1 + 20) = v17;
          **(void **)(a1 + 32) = slice_to((uint64_t *)a1, **(_DWORD ***)(a1 + 32));
          uint64_t v18 = **(_DWORD ***)(a1 + 32);
          if (v18)
          {
            uint64_t result = eq_v_b(a1, v18);
            if (result)
            {
              LODWORD(result) = slice_del(a1);
              if ((int)result >= 0) {
                return 1;
              }
              else {
                return result;
              }
            }
          }
          else
          {
            return 0xFFFFFFFFLL;
          }
        }
      }
    }
  }
  return result;
}

void *finnish_UTF_8_create_env()
{
  return SN_create_env(1, 2, 1);
}

void finnish_UTF_8_close_env(uint64_t a1)
{
}

BOOL sub_2404DC(uint64_t a1)
{
  return find_among_b(a1, (uint64_t)&unk_45EEC0, 7) != 0;
}

uint64_t sub_240508(uint64_t a1)
{
  uint64_t result = eq_s_b(a1, 1, &unk_34DF0D);
  if (result) {
    return in_grouping_b_U(a1, (uint64_t)&unk_34DF0E, 97, 246, 0) == 0;
  }
  return result;
}

uint64_t french_UTF_8_stem(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  int v100 = *(_DWORD *)(a1 + 8);
  while (!in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v5;
    if (eq_s(a1, 1, &unk_34DFA5)
      && (*(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8), !in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0)))
    {
      uint64_t v3 = a1;
      int v4 = &unk_34DFA6;
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v5;
      if (!eq_s(a1, 1, &unk_34DFA7)
        || (*(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8), in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0)))
      {
        *(_DWORD *)(a1 + 8) = v5;
        if (eq_s(a1, 1, &unk_34DFA9))
        {
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
          uint64_t v3 = a1;
          int v4 = &unk_34DFAA;
          goto LABEL_17;
        }
        break;
      }
      uint64_t v3 = a1;
      int v4 = &unk_34DFA8;
    }
LABEL_17:
    uint64_t v6 = slice_from_s(v3, 1, v4);
    if ((v6 & 0x80000000) != 0) {
      return v6;
    }
LABEL_18:
    *(_DWORD *)(a1 + 8) = v2;
  }
  *(_DWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 20) = v2;
  if (eq_s(a1, 1, &unk_34DFAB))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    if (!in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0))
    {
      uint64_t v3 = a1;
      int v4 = &unk_34DFAC;
      goto LABEL_17;
    }
  }
  *(_DWORD *)(a1 + 8) = v2;
  if (eq_s(a1, 1, &unk_34DFAD))
  {
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    if (eq_s(a1, 1, &unk_34DFAE))
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      uint64_t v3 = a1;
      int v4 = &unk_34DFAF;
      goto LABEL_17;
    }
  }
  *(_DWORD *)(a1 + 8) = v2;
  uint64_t v7 = skip_utf8(*(void *)a1, v2, 0, *(unsigned int *)(a1 + 12), 1);
  if ((v7 & 0x80000000) == 0)
  {
    uint64_t v2 = v7;
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = v100;
  uint64_t v8 = *(_DWORD **)(a1 + 40);
  _DWORD *v8 = *(_DWORD *)(a1 + 12);
  v8[1] = *(_DWORD *)(a1 + 12);
  void v8[2] = *(_DWORD *)(a1 + 12);
  uint64_t v9 = *(unsigned int *)(a1 + 8);
  if (in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0)
    || in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0)
    || (int v14 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1), v14 < 0))
  {
    *(_DWORD *)(a1 + 8) = v9;
    uint64_t v10 = (int)v9 + 2;
    uint64_t v11 = *(unsigned int *)(a1 + 12);
    uint64_t v12 = *(void *)a1;
    if ((int)v10 < (int)v11)
    {
      char v13 = *(unsigned char *)(v12 + v10);
      if (v13 & 0xE0) == 0x60 && ((0x51000u >> v13))
      {
        if (find_among(a1, (uint64_t)&unk_45F1E0, 3))
        {
          int v14 = *(_DWORD *)(a1 + 8);
          goto LABEL_34;
        }
        uint64_t v12 = *(void *)a1;
        uint64_t v11 = *(unsigned int *)(a1 + 12);
      }
    }
    *(_DWORD *)(a1 + 8) = v9;
    int v15 = skip_utf8(v12, v9, 0, v11, 1);
    if ((v15 & 0x80000000) == 0)
    {
      *(_DWORD *)(a1 + 8) = v15;
      int v16 = out_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 1);
      if ((v16 & 0x80000000) == 0)
      {
        int v14 = *(_DWORD *)(a1 + 8) + v16;
        goto LABEL_34;
      }
    }
  }
  else
  {
LABEL_34:
    **(_DWORD **)(a1 + 40) = v14;
  }
  *(_DWORD *)(a1 + 8) = v9;
  int v17 = out_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 1);
  if ((v17 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v17;
    int v18 = in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 1);
    if ((v18 & 0x80000000) == 0)
    {
      int v19 = *(_DWORD *)(a1 + 8) + v18;
      *(_DWORD *)(a1 + 8) = v19;
      *(_DWORD *)(*(void *)(a1 + 40) + 4) = v19;
      int v20 = out_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 1);
      if ((v20 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v20;
        int v21 = in_grouping_U(a1, (uint64_t)&unk_34DF91, 97, 251, 1);
        if ((v21 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v21;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v100;
  int v22 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v22;
  *(_DWORD *)(a1 + 24) = v22;
  int among_b = find_among_b(a1, (uint64_t)&unk_45F240, 43);
  if (among_b)
  {
    int v24 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v24;
    switch(among_b)
    {
      case 1:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        goto LABEL_95;
      case 2:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_34DFB9)) {
          goto LABEL_96;
        }
        int v25 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v25;
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) <= v25) {
          goto LABEL_95;
        }
        int v26 = &unk_34DFBB;
        goto LABEL_85;
      case 3:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        int v26 = &unk_34DFBE;
        goto LABEL_85;
      case 4:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        int v27 = &unk_34DFC1;
LABEL_53:
        LODWORD(v28) = 1;
        uint64_t v6 = slice_from_s(a1, 1, v27);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        goto LABEL_159;
      case 5:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        int v26 = &unk_34DFC2;
        goto LABEL_85;
      case 6:
        if (**(_DWORD **)(a1 + 40) > v24) {
          break;
        }
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        int v29 = find_among_b(a1, (uint64_t)&unk_45F7A0, 6);
        if (!v29) {
          goto LABEL_96;
        }
        int v30 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v30;
        switch(v29)
        {
          case 1:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              goto LABEL_96;
            }
            uint64_t v6 = slice_del(a1);
            if ((v6 & 0x80000000) != 0) {
              return v6;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            if (!eq_s_b(a1, 2, &unk_34DFC5)) {
              goto LABEL_96;
            }
            int v30 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v30;
            break;
          case 2:
            uint64_t v99 = *(void *)(a1 + 40);
            if (*(_DWORD *)(v99 + 8) <= v30) {
              goto LABEL_95;
            }
            if (*(_DWORD *)(v99 + 4) > v30) {
              goto LABEL_96;
            }
            int v26 = &unk_34DFC7;
            goto LABEL_85;
          case 3:
            goto LABEL_231;
          case 4:
            if (**(_DWORD **)(a1 + 40) > v30) {
              goto LABEL_96;
            }
            int v27 = &unk_34DFCA;
            goto LABEL_53;
          default:
            goto LABEL_96;
        }
        goto LABEL_231;
      case 7:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        uint64_t v31 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v31;
        uint64_t v32 = v31 - 1;
        if ((int)v32 <= *(_DWORD *)(a1 + 16)) {
          goto LABEL_96;
        }
        char v33 = *(unsigned char *)(*(void *)a1 + v32);
        if ((v33 & 0xE0) != 0x60) {
          goto LABEL_96;
        }
        if (((0x401008u >> v33) & 1) == 0) {
          goto LABEL_96;
        }
        int v34 = find_among_b(a1, (uint64_t)&unk_45F860, 3);
        if (!v34) {
          goto LABEL_96;
        }
        int v30 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v30;
        switch(v34)
        {
          case 3:
LABEL_231:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              goto LABEL_96;
            }
            break;
          case 2:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30)
            {
              int v26 = &unk_34DFCE;
              goto LABEL_85;
            }
            break;
          case 1:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30)
            {
              int v26 = &unk_34DFCB;
LABEL_85:
              uint64_t v37 = a1;
              int v38 = 3;
LABEL_86:
              uint64_t v6 = slice_from_s(v37, v38, v26);
              if ((v6 & 0x80000000) != 0) {
                return v6;
              }
LABEL_96:
              LODWORD(v28) = 1;
              goto LABEL_159;
            }
            break;
          default:
            goto LABEL_96;
        }
LABEL_95:
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        goto LABEL_96;
      case 8:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v24) {
          break;
        }
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_34DFD1)) {
          goto LABEL_96;
        }
        int v35 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v35;
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v35) {
          goto LABEL_96;
        }
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_34DFD3)) {
          goto LABEL_96;
        }
        int v36 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v36;
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) <= v36) {
          goto LABEL_95;
        }
        int v26 = &unk_34DFD5;
        goto LABEL_85;
      case 9:
        int v26 = &unk_34DFD8;
        goto LABEL_85;
      case 10:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v24) {
          break;
        }
        int v26 = &unk_34DFDB;
        uint64_t v37 = a1;
        int v38 = 2;
        goto LABEL_86;
      case 11:
        uint64_t v39 = *(void *)(a1 + 40);
        if (*(_DWORD *)(v39 + 8) <= v24) {
          goto LABEL_95;
        }
        if (*(_DWORD *)(v39 + 4) > v24) {
          break;
        }
        int v26 = &unk_34DFDD;
        goto LABEL_85;
      case 12:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v24
          || out_grouping_b_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0))
        {
          break;
        }
        goto LABEL_95;
      case 13:
        if (**(_DWORD **)(a1 + 40) > v24) {
          break;
        }
        int v40 = &unk_34DFE0;
        goto LABEL_101;
      case 14:
        if (**(_DWORD **)(a1 + 40) > v24) {
          break;
        }
        int v40 = &unk_34DFE3;
LABEL_101:
        int v41 = slice_from_s(a1, 3, v40);
        goto LABEL_102;
      case 15:
        int v44 = *(_DWORD *)(a1 + 12);
        if (in_grouping_b_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0)
          || **(_DWORD **)(a1 + 40) > *(_DWORD *)(a1 + 8))
        {
          break;
        }
        *(_DWORD *)(a1 + 8) = v24 - v44 + *(_DWORD *)(a1 + 12);
        int v41 = slice_del(a1);
LABEL_102:
        unsigned int v42 = v41 & (v41 >> 31);
        if (v41 >= 0) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v42;
        }
        if ((v41 & 0x80000000) == 0) {
          goto LABEL_111;
        }
        if ((v42 & 0x80000000) == 0) {
          goto LABEL_159;
        }
        unsigned int v43 = v42 >> 31;
        goto LABEL_145;
      default:
        goto LABEL_96;
    }
  }
  LODWORD(v28) = 1;
LABEL_111:
  int v45 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v45;
  int v46 = *(int **)(a1 + 40);
  int v47 = *v46;
  if (v45 >= *v46)
  {
    int v48 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v47;
    *(_DWORD *)(a1 + 24) = v45;
    if (v45 <= v47
      || (char v49 = *(unsigned char *)(v45 + *(void *)a1 - 1), (v49 & 0xE0) != 0x60)
      || ((0x41C0222u >> v49) & 1) == 0)
    {
      int v50 = 0;
      goto LABEL_116;
    }
    int v50 = find_among_b(a1, (uint64_t)&unk_45F8C0, 35);
    if (!v50) {
      goto LABEL_116;
    }
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    if (v50 != 1) {
      goto LABEL_153;
    }
    int v68 = out_grouping_b_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0);
    int v50 = 0;
    if (v68)
    {
LABEL_116:
      *(_DWORD *)(a1 + 16) = v48;
    }
    else
    {
      int v50 = slice_del(a1);
      if ((v50 & 0x80000000) == 0)
      {
LABEL_153:
        int v50 = 1;
        goto LABEL_116;
      }
    }
    if (v50 >= 0) {
      unsigned int v51 = v28;
    }
    else {
      unsigned int v51 = v50;
    }
    unsigned int v43 = v50 >> 31;
    if (v50) {
      uint64_t v28 = v51;
    }
    else {
      uint64_t v28 = v28;
    }
    if (v50) {
      int v52 = v50 >> 31;
    }
    else {
      int v52 = 6;
    }
    if (!v52) {
      goto LABEL_159;
    }
    if (v52 == 6)
    {
      int v45 = *(_DWORD *)(a1 + 12);
      int v46 = *(int **)(a1 + 40);
      goto LABEL_129;
    }
LABEL_145:
    if (!v43)
    {
LABEL_159:
      int v71 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 8) = v71;
      *(_DWORD *)(a1 + 24) = v71;
      if (eq_s_b(a1, 1, &unk_34DF8C))
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        int v72 = &unk_34DF8D;
        goto LABEL_163;
      }
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
      if (eq_s_b(a1, 2, &unk_34DF8E))
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        int v72 = &unk_34DF90;
LABEL_163:
        uint64_t v6 = slice_from_s(a1, 1, v72);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
      }
      goto LABEL_172;
    }
    return v28;
  }
LABEL_129:
  *(_DWORD *)(a1 + 8) = v45;
  int v53 = *v46;
  if (v45 >= v53)
  {
    int v54 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v53;
    *(_DWORD *)(a1 + 24) = v45;
    int v55 = find_among_b(a1, (uint64_t)&unk_45FD20, 38);
    if (!v55) {
      goto LABEL_135;
    }
    int v56 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v56;
    switch(v55)
    {
      case 3:
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        int v70 = *(_DWORD *)(a1 + 8);
        int v69 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 24) = v70;
        if (eq_s_b(a1, 1, &unk_34E17E))
        {
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          goto LABEL_157;
        }
        *(_DWORD *)(a1 + 8) = v70 - v69 + *(_DWORD *)(a1 + 12);
        break;
      case 2:
        goto LABEL_157;
      case 1:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v56)
        {
LABEL_135:
          *(_DWORD *)(a1 + 16) = v54;
          int v45 = *(_DWORD *)(a1 + 12);
          goto LABEL_136;
        }
LABEL_157:
        uint64_t v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
        break;
    }
    *(_DWORD *)(a1 + 16) = v54;
    goto LABEL_159;
  }
LABEL_136:
  *(_DWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 24) = v45;
  if (eq_s_b(a1, 1, &unk_34E21A)
    && (int v57 = *(_DWORD *)(a1 + 8),
        int v58 = *(_DWORD *)(a1 + 12),
        *(_DWORD *)(a1 + 20) = v57,
        !out_grouping_b_U(a1, (uint64_t)&unk_34E21B, 97, 232, 0)))
  {
    *(_DWORD *)(a1 + 8) = v57 - v58 + *(_DWORD *)(a1 + 12);
    uint64_t v6 = slice_del(a1);
    if ((v6 & 0x80000000) != 0) {
      return v6;
    }
    int v59 = *(_DWORD *)(a1 + 8);
  }
  else
  {
    int v59 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v59;
  }
  int v60 = **(_DWORD **)(a1 + 40);
  if (v59 >= v60)
  {
    int v61 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v60;
    *(_DWORD *)(a1 + 8) = v59;
    *(_DWORD *)(a1 + 24) = v59;
    int v62 = find_among_b(a1, (uint64_t)&unk_4601E0, 7);
    if (v62)
    {
      int v63 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v63;
      switch(v62)
      {
        case 1:
          if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v63) {
            break;
          }
          int v64 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_34E22C)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 8) = v63 - v64 + *(_DWORD *)(a1 + 12);
          unsigned int v65 = &unk_34E22D;
          uint64_t v66 = a1;
          int v67 = 1;
LABEL_169:
          if (!eq_s_b(v66, v67, v65)) {
            break;
          }
LABEL_170:
          uint64_t v6 = slice_del(a1);
          if ((v6 & 0x80000000) == 0) {
            break;
          }
          return v6;
        case 2:
          uint64_t v6 = slice_from_s(a1, 1, &unk_34E22E);
          if ((v6 & 0x80000000) != 0) {
            return v6;
          }
          break;
        case 3:
          goto LABEL_170;
        case 4:
          unsigned int v65 = &unk_34E22F;
          uint64_t v66 = a1;
          int v67 = 2;
          goto LABEL_169;
        default:
          break;
      }
    }
    *(_DWORD *)(a1 + 16) = v61;
  }
LABEL_172:
  int v74 = *(_DWORD *)(a1 + 16);
  uint64_t v75 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v75;
  if ((int)v75 - 2 <= v74) {
    goto LABEL_190;
  }
  char v76 = *(unsigned char *)(v75 + *(void *)a1 - 1);
  if ((v76 & 0xE0) != 0x60) {
    goto LABEL_190;
  }
  if (((0x105000u >> v76) & 1) == 0) {
    goto LABEL_190;
  }
  if (!find_among_b(a1, (uint64_t)&unk_4602C0, 5)) {
    goto LABEL_190;
  }
  uint64_t v77 = *(unsigned int *)(a1 + 12);
  uint64_t v78 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v77;
  *(_DWORD *)(a1 + 24) = v77;
  int v79 = skip_utf8(*(void *)a1, v77, v78, 0, -1);
  if (v79 < 0) {
    goto LABEL_190;
  }
  *(_DWORD *)(a1 + 8) = v79;
  *(_DWORD *)(a1 + 20) = v79;
  int v80 = slice_del(a1);
  int v81 = v80 & (v80 >> 31);
  if (v80 >= 0) {
    int v81 = 1;
  }
  unsigned int v82 = v81 >= 0 ? v28 : v81;
  uint64_t v28 = v81 ? v82 : v28;
  unsigned int v83 = v81 ? v81 >> 31 : 13;
  if (v83 != 13 && v83)
  {
    if (v81 < 0) {
      return v28;
    }
  }
  else
  {
LABEL_190:
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  }
  int v84 = 2;
  do
    --v84;
  while (!out_grouping_b_U(a1, (uint64_t)&unk_34DF91, 97, 251, 0));
  if (v84 > 0) {
    goto LABEL_194;
  }
  int v93 = *(_DWORD *)(a1 + 8);
  int v94 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v93;
  if (!eq_s_b(a1, 2, &unk_34E257))
  {
    *(_DWORD *)(a1 + 8) = v93 - v94 + *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 2, &unk_34E259)) {
      goto LABEL_194;
    }
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  int v95 = slice_from_s(a1, 1, &unk_34E25B);
  int v96 = v95 & (v95 >> 31);
  if (v95 >= 0) {
    int v96 = 1;
  }
  int v97 = v96 >> 31;
  if (!v96) {
    int v97 = 14;
  }
  if (!v97
    || v97 == 14
    || (v96 >= 0 ? (v98 = v28) : (v98 = v96), v96 ? (uint64_t v28 = v98) : (uint64_t v28 = v28), (v96 & 0x80000000) == 0))
  {
LABEL_194:
    uint64_t v85 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v85;
    for (uint64_t i = v85; ; uint64_t i = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = i;
      uint64_t v87 = *(unsigned int *)(a1 + 12);
      if ((int)i < (int)v87
        && (char v88 = *(unsigned char *)(*(void *)a1 + (int)i), (v88 & 0xE0) == 0x40)
        && ((0x2200200u >> v88) & 1) != 0)
      {
        int among = find_among(a1, (uint64_t)&unk_460360, 4);
        if (!among) {
          goto LABEL_210;
        }
        uint64_t i = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = i;
        switch(among)
        {
          case 1:
            uint64_t v91 = a1;
            id v92 = &unk_34E25C;
            break;
          case 2:
            uint64_t v91 = a1;
            id v92 = &unk_34E25D;
            break;
          case 3:
            uint64_t v91 = a1;
            id v92 = &unk_34E25E;
            break;
          case 4:
            uint64_t v87 = *(unsigned int *)(a1 + 12);
            goto LABEL_199;
          default:
            continue;
        }
        uint64_t v6 = slice_from_s(v91, 1, v92);
        if ((v6 & 0x80000000) != 0) {
          return v6;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 24) = i;
LABEL_199:
        int v89 = skip_utf8(*(void *)a1, i, 0, v87, 1);
        if (v89 < 0)
        {
LABEL_210:
          *(_DWORD *)(a1 + 8) = v85;
          return 1;
        }
        *(_DWORD *)(a1 + 8) = v89;
      }
    }
  }
  return v28;
}

void *french_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void french_UTF_8_close_env(uint64_t a1)
{
}

uint64_t german_UTF_8_stem(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  uint64_t v3 = v2;
  while (1)
  {
    while (1)
    {
      *(_DWORD *)(a1 + 20) = v3;
      if (!eq_s(a1, 2, &unk_34E262)) {
        break;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_from_s(a1, 2, &unk_34E264);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      uint64_t v3 = *(unsigned int *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 8) = v3;
    uint64_t v5 = skip_utf8(*(void *)a1, v3, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v5 & 0x80000000) != 0) {
      break;
    }
    uint64_t v3 = v5;
    *(_DWORD *)(a1 + 8) = v5;
  }
  uint64_t v6 = v2;
  do
  {
    while (1)
    {
      *(_DWORD *)(a1 + 8) = v6;
      if (in_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 0)) {
        break;
      }
      int v7 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v7;
      if (eq_s(a1, 1, &unk_34E27A))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!in_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 0))
        {
          uint64_t v8 = a1;
          uint64_t v9 = &unk_34E27B;
          goto LABEL_15;
        }
      }
      *(_DWORD *)(a1 + 8) = v7;
      if (!eq_s(a1, 1, &unk_34E27C)) {
        break;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (in_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 0)) {
        break;
      }
      uint64_t v8 = a1;
      uint64_t v9 = &unk_34E27D;
LABEL_15:
      uint64_t result = slice_from_s(v8, 1, v9);
      if ((result & 0x80000000) != 0) {
        return result;
      }
    }
    *(_DWORD *)(a1 + 8) = v6;
    uint64_t v6 = skip_utf8(*(void *)a1, v6, 0, *(unsigned int *)(a1 + 12), 1);
  }
  while ((v6 & 0x80000000) == 0);
  *(_DWORD *)(a1 + 8) = v2;
  uint64_t v10 = *(_DWORD **)(a1 + 40);
  _DWORD *v10 = *(_DWORD *)(a1 + 12);
  v10[1] = *(_DWORD *)(a1 + 12);
  unsigned int v11 = *(_DWORD *)(a1 + 8);
  int v12 = skip_utf8(*(void *)a1, v11, 0, *(unsigned int *)(a1 + 12), 3);
  if ((v12 & 0x80000000) == 0)
  {
    *(_DWORD *)(*(void *)(a1 + 40) + 8) = v12;
    *(_DWORD *)(a1 + 8) = v11;
    int v13 = out_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 1);
    if ((v13 & 0x80000000) == 0)
    {
      *(_DWORD *)(a1 + 8) += v13;
      int v14 = in_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 1);
      if ((v14 & 0x80000000) == 0)
      {
        int v15 = *(_DWORD *)(a1 + 8) + v14;
        *(_DWORD *)(a1 + 8) = v15;
        int v16 = *(_DWORD **)(a1 + 40);
        if (v15 <= v16[2]) {
          int v15 = v16[2];
        }
        _DWORD *v16 = v15;
        int v17 = out_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 1);
        if ((v17 & 0x80000000) == 0)
        {
          *(_DWORD *)(a1 + 8) += v17;
          int v18 = in_grouping_U(a1, (uint64_t)&unk_34E266, 97, 252, 1);
          if ((v18 & 0x80000000) == 0) {
            *(_DWORD *)(*(void *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v18;
          }
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  uint64_t v19 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v19;
  *(_DWORD *)(a1 + 24) = v19;
  if ((int)v19 <= (int)v2) {
    goto LABEL_41;
  }
  char v20 = *(unsigned char *)(v19 + *(void *)a1 - 1);
  if ((v20 & 0xE0) != 0x60) {
    goto LABEL_41;
  }
  if (((0xC6020u >> v20) & 1) == 0) {
    goto LABEL_41;
  }
  int among_b = find_among_b(a1, (uint64_t)&unk_4603E0, 7);
  if (!among_b) {
    goto LABEL_41;
  }
  int v22 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v22;
  if (**(_DWORD **)(a1 + 40) > v22) {
    goto LABEL_41;
  }
  switch(among_b)
  {
    case 3:
      if (!in_grouping_b_U(a1, (uint64_t)&unk_34E282, 98, 116, 0)) {
        goto LABEL_40;
      }
      goto LABEL_41;
    case 2:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (eq_s_b(a1, 1, &unk_34E27E))
        {
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          if (eq_s_b(a1, 3, &unk_34E27F)) {
            goto LABEL_40;
          }
        }
        goto LABEL_41;
      }
      break;
    case 1:
LABEL_40:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) == 0)
      {
LABEL_41:
        int v23 = *(_DWORD *)(a1 + 16);
        uint64_t v24 = *(int *)(a1 + 12);
        *(_DWORD *)(a1 + 8) = v24;
        *(_DWORD *)(a1 + 24) = v24;
        uint64_t v25 = v24 - 1;
        if ((int)v25 <= v23) {
          goto LABEL_51;
        }
        char v26 = *(unsigned char *)(*(void *)a1 + v25);
        if ((v26 & 0xE0) != 0x60) {
          goto LABEL_51;
        }
        if (((0x144000u >> v26) & 1) == 0) {
          goto LABEL_51;
        }
        int v27 = find_among_b(a1, (uint64_t)&unk_4604C0, 4);
        if (!v27) {
          goto LABEL_51;
        }
        int v28 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v28;
        if (**(_DWORD **)(a1 + 40) > v28) {
          goto LABEL_51;
        }
        if (v27 != 2)
        {
          if (v27 == 1) {
            goto LABEL_48;
          }
          goto LABEL_51;
        }
        if (in_grouping_b_U(a1, (uint64_t)&unk_34E285, 98, 116, 0)) {
          goto LABEL_51;
        }
        int v51 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), *(unsigned int *)(a1 + 16), *(unsigned int *)(a1 + 12), -3);
        if (v51 < 0) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 8) = v51;
LABEL_48:
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) == 0)
        {
LABEL_51:
          int v29 = *(_DWORD *)(a1 + 16);
          uint64_t v30 = *(int *)(a1 + 12);
          *(_DWORD *)(a1 + 8) = v30;
          *(_DWORD *)(a1 + 24) = v30;
          uint64_t v31 = v30 - 1;
          if ((int)v31 > v29)
          {
            char v32 = *(unsigned char *)(*(void *)a1 + v31);
            if (v32 & 0xE0) == 0x60 && ((0x100990u >> v32))
            {
              int v33 = find_among_b(a1, (uint64_t)&unk_460540, 8);
              if (v33)
              {
                int v34 = *(_DWORD *)(a1 + 8);
                *(_DWORD *)(a1 + 20) = v34;
                if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v34)
                {
                  switch(v33)
                  {
                    case 1:
                      uint64_t result = slice_del(a1);
                      if ((result & 0x80000000) != 0) {
                        return result;
                      }
                      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
                      if (!eq_s_b(a1, 2, &unk_34E288)) {
                        break;
                      }
                      int v41 = *(_DWORD *)(a1 + 8);
                      int v42 = *(_DWORD *)(a1 + 12);
                      *(_DWORD *)(a1 + 20) = v41;
                      if (eq_s_b(a1, 1, &unk_34E28A)) {
                        break;
                      }
                      int v43 = *(_DWORD *)(a1 + 12) + v41 - v42;
                      *(_DWORD *)(a1 + 8) = v43;
LABEL_87:
                      if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v43) {
                        break;
                      }
LABEL_88:
                      uint64_t result = slice_del(a1);
                      if ((result & 0x80000000) != 0) {
                        return result;
                      }
                      break;
                    case 2:
                      int v44 = *(_DWORD *)(a1 + 12);
                      if (eq_s_b(a1, 1, &unk_34E28B)) {
                        break;
                      }
                      *(_DWORD *)(a1 + 8) = v34 - v44 + *(_DWORD *)(a1 + 12);
                      goto LABEL_88;
                    case 3:
                      uint64_t result = slice_del(a1);
                      if ((result & 0x80000000) != 0) {
                        return result;
                      }
                      int v45 = *(_DWORD *)(a1 + 8);
                      int v46 = v45 - *(_DWORD *)(a1 + 12);
                      *(_DWORD *)(a1 + 24) = v45;
                      if (eq_s_b(a1, 2, &unk_34E28C)
                        || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v46, eq_s_b(a1, 2, &unk_34E28E)))
                      {
                        int v47 = *(_DWORD *)(a1 + 8);
                        *(_DWORD *)(a1 + 20) = v47;
                        if (**(_DWORD **)(a1 + 40) <= v47) {
                          goto LABEL_88;
                        }
                      }
                      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v46;
                      break;
                    case 4:
                      uint64_t result = slice_del(a1);
                      if ((result & 0x80000000) != 0) {
                        return result;
                      }
                      uint64_t v48 = *(int *)(a1 + 8);
                      *(_DWORD *)(a1 + 24) = v48;
                      uint64_t v49 = v48 - 1;
                      if ((int)v49 > *(_DWORD *)(a1 + 16)
                        && *(unsigned __int8 *)(*(void *)a1 + v49) - 103 <= 1)
                      {
                        int v50 = find_among_b(a1, (uint64_t)&unk_460640, 2);
                        if (v50)
                        {
                          int v43 = *(_DWORD *)(a1 + 8);
                          *(_DWORD *)(a1 + 20) = v43;
                          if (v50 == 1) {
                            goto LABEL_87;
                          }
                        }
                      }
                      break;
                    default:
                      break;
                  }
                }
              }
            }
          }
          int v35 = *(_DWORD *)(a1 + 16);
          *(_DWORD *)(a1 + 8) = v35;
          *(_DWORD *)(a1 + 20) = v35;
          int among = find_among(a1, (uint64_t)&unk_460680, 6);
          if (among)
          {
            while (2)
            {
              uint64_t v37 = *(unsigned int *)(a1 + 8);
              *(_DWORD *)(a1 + 24) = v37;
              switch(among)
              {
                case 1:
                  uint64_t v38 = a1;
                  uint64_t v39 = &unk_34E2C6;
                  goto LABEL_63;
                case 2:
                  uint64_t v38 = a1;
                  uint64_t v39 = &unk_34E2C7;
                  goto LABEL_63;
                case 3:
                  uint64_t v38 = a1;
                  uint64_t v39 = &unk_34E2C8;
                  goto LABEL_63;
                case 4:
                  uint64_t v38 = a1;
                  uint64_t v39 = &unk_34E2C9;
                  goto LABEL_63;
                case 5:
                  uint64_t v38 = a1;
                  uint64_t v39 = &unk_34E2CA;
LABEL_63:
                  uint64_t result = slice_from_s(v38, 1, v39);
                  if ((result & 0x80000000) == 0) {
                    goto LABEL_64;
                  }
                  return result;
                case 6:
                  int v40 = skip_utf8(*(void *)a1, v37, 0, *(unsigned int *)(a1 + 12), 1);
                  if (v40 < 0) {
                    break;
                  }
                  *(_DWORD *)(a1 + 8) = v40;
                  goto LABEL_64;
                default:
LABEL_64:
                  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
                  int among = find_among(a1, (uint64_t)&unk_460680, 6);
                  if (!among) {
                    break;
                  }
                  continue;
              }
              break;
            }
          }
          *(_DWORD *)(a1 + 8) = v35;
          return 1;
        }
      }
      break;
    default:
      goto LABEL_41;
  }
  return result;
}

void *german_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void german_UTF_8_close_env(uint64_t a1)
{
}

uint64_t hungarian_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  int v3 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_34E2D3, 97, 252, 0)
    && (in_grouping_U(a1, (uint64_t)&unk_34E2D3, 97, 252, 1) & 0x80000000) == 0)
  {
    uint64_t v7 = *(unsigned int *)(a1 + 12);
    uint64_t v8 = *(int *)(a1 + 8);
    uint64_t v9 = *(void *)a1;
    if ((int)v8 + 1 < (int)v7)
    {
      char v10 = *(unsigned char *)(v9 + v8 + 1);
      if (v10 & 0xE0) == 0x60 && ((0x6080000u >> v10))
      {
        if (find_among(a1, (uint64_t)&unk_460740, 8))
        {
          int v6 = *(_DWORD *)(a1 + 8);
          goto LABEL_14;
        }
        uint64_t v9 = *(void *)a1;
        uint64_t v7 = *(unsigned int *)(a1 + 12);
      }
    }
    *(_DWORD *)(a1 + 8) = v8;
    int v6 = skip_utf8(v9, v8, 0, v7, 1);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_14;
    }
  }
  *(_DWORD *)(a1 + 8) = v3;
  LODWORD(v4) = 0;
  if (out_grouping_U(a1, (uint64_t)&unk_34E2D3, 97, 252, 0)) {
    goto LABEL_15;
  }
  int v5 = out_grouping_U(a1, (uint64_t)&unk_34E2D3, 97, 252, 1);
  if (v5 < 0)
  {
    LODWORD(v4) = 0;
    goto LABEL_15;
  }
  int v6 = *(_DWORD *)(a1 + 8) + v5;
LABEL_14:
  **(_DWORD **)(a1 + 40) = v6;
  LODWORD(v4) = 1;
LABEL_15:
  *(_DWORD *)(a1 + 16) = v2;
  uint64_t v11 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 24) = v11;
  uint64_t v12 = v11 - 1;
  if ((int)v12 <= v2) {
    goto LABEL_37;
  }
  if (*(unsigned char *)(*(void *)a1 + v12) != 108) {
    goto LABEL_37;
  }
  int among_b = find_among_b(a1, (uint64_t)&unk_460840, 2);
  if (!among_b) {
    goto LABEL_37;
  }
  int v14 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v14;
  if (**(_DWORD **)(a1 + 40) > v14) {
    goto LABEL_37;
  }
  if ((among_b == 2 || among_b == 1) && !sub_2429F4(a1)) {
    goto LABEL_37;
  }
  int v15 = slice_del(a1);
  if ((v15 & 0x80000000) == 0)
  {
    int v16 = sub_242A8C(a1);
    if (v16 >= 1) {
      int v15 = 1;
    }
    else {
      int v15 = v16 & (v16 >> 31);
    }
  }
  unsigned int v17 = v15 >= 0 ? v4 : v15;
  uint64_t v4 = v15 ? v17 : v4;
  unsigned int v18 = v15 ? v15 >> 31 : 3;
  if (v18 != 3 && v18)
  {
    if (v15 < 0) {
      return v4;
    }
    int v19 = *(_DWORD *)(a1 + 8);
    int v20 = *(_DWORD *)(a1 + 12);
  }
  else
  {
LABEL_37:
    int v19 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v19;
    int v20 = v19;
  }
  *(_DWORD *)(a1 + 24) = v19;
  if (find_among_b(a1, (uint64_t)&unk_460B60, 44))
  {
    int v21 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v21;
    if (**(_DWORD **)(a1 + 40) <= v21)
    {
      uint64_t v22 = slice_del(a1);
      if ((v22 & 0x80000000) != 0) {
        return v22;
      }
      uint64_t v23 = *(int *)(a1 + 8);
      *(_DWORD *)(a1 + 24) = v23;
      uint64_t v24 = v23 - 1;
      if ((int)v24 > *(_DWORD *)(a1 + 16) && (*(unsigned __int8 *)(*(void *)a1 + v24) | 8) == 0xA9)
      {
        int v25 = find_among_b(a1, (uint64_t)&unk_4610E0, 2);
        if (v25)
        {
          int v26 = *(_DWORD *)(a1 + 8);
          *(_DWORD *)(a1 + 20) = v26;
          if (**(_DWORD **)(a1 + 40) <= v26)
          {
            if (v25 == 2)
            {
              int v27 = &unk_34E3C4;
            }
            else
            {
              if (v25 != 1) {
                goto LABEL_52;
              }
              int v27 = &unk_34E3C3;
            }
            uint64_t v22 = slice_from_s(a1, 1, v27);
            if ((v22 & 0x80000000) != 0) {
              return v22;
            }
          }
        }
      }
    }
  }
LABEL_52:
  int v28 = v19 - v20;
  int v29 = *(_DWORD *)(a1 + 16);
  int v30 = v28 + *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v30;
  *(_DWORD *)(a1 + 24) = v30;
  if (v30 - 2 <= v29) {
    goto LABEL_64;
  }
  int v31 = *(unsigned __int8 *)(*(void *)a1 + v30 - 1);
  if (v31 != 116 && v31 != 110) {
    goto LABEL_64;
  }
  int v32 = find_among_b(a1, (uint64_t)&unk_461120, 3);
  if (!v32) {
    goto LABEL_64;
  }
  int v33 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v33;
  if (**(_DWORD **)(a1 + 40) > v33) {
    goto LABEL_64;
  }
  switch(v32)
  {
    case 3:
      int v34 = &unk_34E3CB;
      goto LABEL_63;
    case 2:
      int v34 = &unk_34E3CA;
LABEL_63:
      uint64_t v22 = slice_from_s(a1, 1, v34);
      if ((v22 & 0x80000000) == 0) {
        break;
      }
      return v22;
    case 1:
      int v34 = &unk_34E3C9;
      goto LABEL_63;
  }
LABEL_64:
  int v35 = *(_DWORD *)(a1 + 16);
  int v36 = v28 + *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v36;
  *(_DWORD *)(a1 + 24) = v36;
  if (v36 - 3 > v35 && *(unsigned char *)(*(void *)a1 + v36 - 1) == 108)
  {
    int v37 = find_among_b(a1, (uint64_t)&unk_461180, 6);
    if (v37)
    {
      int v38 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v38;
      if (**(_DWORD **)(a1 + 40) <= v38)
      {
        switch(v37)
        {
          case 1:
          case 2:
            uint64_t v22 = slice_del(a1);
            if ((v22 & 0x80000000) == 0) {
              goto LABEL_70;
            }
            return v22;
          case 3:
            int v68 = &unk_34E3DA;
            break;
          case 4:
            int v68 = &unk_34E3DB;
            break;
          default:
            goto LABEL_70;
        }
        uint64_t v22 = slice_from_s(a1, 1, v68);
        if ((v22 & 0x80000000) != 0) {
          return v22;
        }
      }
    }
  }
LABEL_70:
  int v39 = *(_DWORD *)(a1 + 16);
  int v40 = v28 + *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v40;
  *(_DWORD *)(a1 + 24) = v40;
  uint64_t v41 = v40 - 1;
  if ((int)v41 <= v39) {
    goto LABEL_74;
  }
  if ((*(unsigned __int8 *)(*(void *)a1 + v41) | 8) != 0xA9) {
    goto LABEL_74;
  }
  int v42 = find_among_b(a1, (uint64_t)&unk_461240, 2);
  if (!v42) {
    goto LABEL_74;
  }
  int v43 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v43;
  if (**(_DWORD **)(a1 + 40) > v43) {
    goto LABEL_74;
  }
  if ((v42 == 2 || v42 == 1) && !sub_2429F4(a1)) {
    goto LABEL_74;
  }
  int v64 = slice_del(a1);
  if ((v64 & 0x80000000) == 0)
  {
    int v65 = sub_242A8C(a1);
    if (v65 >= 1) {
      int v64 = 1;
    }
    else {
      int v64 = v65 & (v65 >> 31);
    }
  }
  unsigned int v66 = v64 >= 0 ? v4 : v64;
  uint64_t v4 = v64 ? v66 : v4;
  unsigned int v67 = v64 ? v64 >> 31 : 7;
  if (v67 != 7 && v67)
  {
    if (v64 < 0) {
      return v4;
    }
    int v45 = *(_DWORD *)(a1 + 8);
    int v44 = *(_DWORD *)(a1 + 12);
  }
  else
  {
LABEL_74:
    int v44 = *(_DWORD *)(a1 + 12);
    int v45 = v28 + v44;
    *(_DWORD *)(a1 + 8) = v45;
  }
  int v46 = sub_242458(a1);
  if (v46 >= 0) {
    unsigned int v47 = v4;
  }
  else {
    unsigned int v47 = v46;
  }
  if (v46) {
    uint64_t v4 = v47;
  }
  else {
    uint64_t v4 = v4;
  }
  if (v46) {
    int v48 = v46 >> 31;
  }
  else {
    int v48 = 8;
  }
  if ((v48 | 8) == 8)
  {
    int v49 = v45 - v44;
    int v50 = *(_DWORD *)(a1 + 12);
    int v51 = v49 + v50;
    *(_DWORD *)(a1 + 8) = v49 + v50;
  }
  else
  {
    if (v46 < 0) {
      return v4;
    }
    int v51 = *(_DWORD *)(a1 + 8);
    int v50 = *(_DWORD *)(a1 + 12);
  }
  int v52 = sub_24258C(a1);
  if (v52 >= 0) {
    unsigned int v53 = v4;
  }
  else {
    unsigned int v53 = v52;
  }
  if (v52) {
    uint64_t v4 = v53;
  }
  else {
    uint64_t v4 = v4;
  }
  if (v52) {
    int v54 = v52 >> 31;
  }
  else {
    int v54 = 9;
  }
  if (v54 != 9 && v54)
  {
    if (v52 < 0) {
      return v4;
    }
    int v57 = *(_DWORD *)(a1 + 8);
    int v56 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v55 = v51 - v50;
    int v56 = *(_DWORD *)(a1 + 12);
    int v57 = v55 + v56;
    *(_DWORD *)(a1 + 8) = v55 + v56;
  }
  int v58 = sub_2426FC(a1);
  if (v58 >= 0) {
    unsigned int v59 = v4;
  }
  else {
    unsigned int v59 = v58;
  }
  if (v58) {
    uint64_t v4 = v59;
  }
  else {
    uint64_t v4 = v4;
  }
  if (v58) {
    int v60 = v58 >> 31;
  }
  else {
    int v60 = 10;
  }
  if (v60 != 10 && v60)
  {
    if (v58 < 0) {
      return v4;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v57 - v56 + *(_DWORD *)(a1 + 12);
  }
  int v61 = sub_2428DC(a1);
  int v62 = v61 >> 31;
  if (!v61) {
    int v62 = 11;
  }
  if (!v62
    || v62 == 11
    || (v61 >= 0 ? (v63 = v4) : (v63 = v61), v61 ? (uint64_t v4 = v63) : (uint64_t v4 = v4), (v61 & 0x80000000) == 0))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  return v4;
}

uint64_t sub_242458(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(*(void *)a1 + v2);
  if (v4 != 169 && v4 != 105) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_461280, 12);
  if (!result) {
    return result;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (**(_DWORD **)(a1 + 40) > v6) {
    return 0;
  }
  switch((int)result)
  {
    case 1:
    case 4:
    case 7:
    case 9:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) == 0) {
        goto LABEL_17;
      }
      return result;
    case 2:
      uint64_t v7 = &unk_34E401;
      goto LABEL_16;
    case 3:
      uint64_t v7 = &unk_34E402;
      goto LABEL_16;
    case 5:
      uint64_t v7 = &unk_34E403;
      goto LABEL_16;
    case 6:
      uint64_t v7 = &unk_34E404;
      goto LABEL_16;
    case 8:
      uint64_t v7 = &unk_34E405;
LABEL_16:
      uint64_t result = slice_from_s(a1, 1, v7);
      if ((result & 0x80000000) == 0) {
        goto LABEL_17;
      }
      return result;
    default:
LABEL_17:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_24258C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  uint64_t result = find_among_b(a1, (uint64_t)&unk_461400, 31);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    if (**(_DWORD **)(a1 + 40) <= v3)
    {
      switch((int)result)
      {
        case 1:
        case 4:
        case 7:
        case 8:
        case 9:
        case 12:
        case 13:
        case 16:
        case 17:
        case 18:
          uint64_t result = slice_del(a1);
          if ((result & 0x80000000) == 0) {
            goto LABEL_6;
          }
          return result;
        case 2:
          int v4 = &unk_34E437;
          goto LABEL_18;
        case 3:
          int v4 = &unk_34E438;
          goto LABEL_18;
        case 5:
          int v4 = &unk_34E439;
          goto LABEL_18;
        case 6:
          int v4 = &unk_34E43A;
          goto LABEL_18;
        case 10:
          int v4 = &unk_34E43B;
          goto LABEL_18;
        case 11:
          int v4 = &unk_34E43C;
          goto LABEL_18;
        case 14:
          int v4 = &unk_34E43D;
          goto LABEL_18;
        case 15:
          int v4 = &unk_34E43E;
          goto LABEL_18;
        case 19:
          int v4 = &unk_34E43F;
          goto LABEL_18;
        case 20:
          int v4 = &unk_34E440;
LABEL_18:
          uint64_t result = slice_from_s(a1, 1, v4);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          goto LABEL_6;
        default:
LABEL_6:
          uint64_t result = 1;
          break;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2426FC(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(v1 + *(void *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x2A10u >> v3) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_4617E0, 42);
  if (!result) {
    return result;
  }
  int v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  if (**(_DWORD **)(a1 + 40) > v5) {
    return 0;
  }
  switch((int)result)
  {
    case 1:
    case 4:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
    case 14:
    case 15:
    case 16:
    case 17:
    case 20:
    case 21:
    case 24:
    case 25:
    case 26:
    case 29:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) == 0) {
        goto LABEL_24;
      }
      return result;
    case 2:
      int v6 = &unk_34E491;
      goto LABEL_23;
    case 3:
      int v6 = &unk_34E492;
      goto LABEL_23;
    case 7:
      int v6 = &unk_34E493;
      goto LABEL_23;
    case 8:
      int v6 = &unk_34E494;
      goto LABEL_23;
    case 12:
      int v6 = &unk_34E495;
      goto LABEL_23;
    case 13:
      int v6 = &unk_34E496;
      goto LABEL_23;
    case 18:
      int v6 = &unk_34E497;
      goto LABEL_23;
    case 19:
      int v6 = &unk_34E498;
      goto LABEL_23;
    case 22:
      int v6 = &unk_34E499;
      goto LABEL_23;
    case 23:
      int v6 = &unk_34E49A;
      goto LABEL_23;
    case 27:
      int v6 = &unk_34E49B;
      goto LABEL_23;
    case 28:
      int v6 = &unk_34E49C;
LABEL_23:
      uint64_t result = slice_from_s(a1, 1, v6);
      if ((result & 0x80000000) == 0) {
        goto LABEL_24;
      }
      return result;
    default:
LABEL_24:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_2428DC(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16) || *(unsigned char *)(v1 + *(void *)a1 - 1) != 107) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_461D20, 7);
  if (!result) {
    return result;
  }
  int v4 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v4;
  if (**(_DWORD **)(a1 + 40) > v4) {
    return 0;
  }
  switch((int)result)
  {
    case 1:
      int v5 = &unk_34E53B;
      goto LABEL_12;
    case 2:
      int v5 = &unk_34E53C;
LABEL_12:
      uint64_t result = slice_from_s(a1, 1, v5);
      if ((result & 0x80000000) == 0) {
        goto LABEL_13;
      }
      return result;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      goto LABEL_13;
    default:
LABEL_13:
      uint64_t result = 1;
      break;
  }
  return result;
}

void *hungarian_UTF_8_create_env()
{
  return SN_create_env(0, 1, 0);
}

void hungarian_UTF_8_close_env(uint64_t a1)
{
}

uint64_t sub_2429F4(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  if ((int)v1 - 1 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(*(void *)a1 + v1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x65D7CDCu >> v3) & 1) == 0) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 12);
  uint64_t result = find_among_b(a1, (uint64_t)&unk_460880, 23);
  if (result)
  {
    *(_DWORD *)(a1 + 8) = v1 - v5 + *(_DWORD *)(a1 + 12);
    return 1;
  }
  return result;
}

uint64_t sub_242A8C(uint64_t a1)
{
  uint64_t v2 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), *(unsigned int *)(a1 + 16), 0, -1);
  if ((v2 & 0x80000000) != 0) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 24) = v2;
  int v3 = skip_utf8(*(void *)a1, v2, *(unsigned int *)(a1 + 16), *(unsigned int *)(a1 + 12), -1);
  if (v3 < 0) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 20) = v3;
  int v4 = slice_del(a1);
  if (v4 >= 0) {
    return 1;
  }
  else {
    return v4 & (v4 >> 31);
  }
}

uint64_t italian_UTF_8_stem(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v2;
  int among = find_among(a1, (uint64_t)&unk_461E00, 7);
  if (among)
  {
    while (2)
    {
      uint64_t v4 = *(unsigned int *)(a1 + 8);
      *(_DWORD *)(a1 + 24) = v4;
      switch(among)
      {
        case 1:
          uint64_t v5 = a1;
          int v6 = &unk_34E54D;
          goto LABEL_9;
        case 2:
          uint64_t v5 = a1;
          int v6 = &unk_34E54F;
          goto LABEL_9;
        case 3:
          uint64_t v5 = a1;
          int v6 = &unk_34E551;
          goto LABEL_9;
        case 4:
          uint64_t v5 = a1;
          int v6 = &unk_34E553;
          goto LABEL_9;
        case 5:
          uint64_t v5 = a1;
          int v6 = &unk_34E555;
          goto LABEL_9;
        case 6:
          uint64_t v5 = a1;
          int v6 = &unk_34E557;
LABEL_9:
          uint64_t result = slice_from_s(v5, 2, v6);
          if ((result & 0x80000000) == 0) {
            goto LABEL_10;
          }
          return result;
        case 7:
          int v8 = skip_utf8(*(void *)a1, v4, 0, *(unsigned int *)(a1 + 12), 1);
          if (v8 < 0) {
            break;
          }
          *(_DWORD *)(a1 + 8) = v8;
          goto LABEL_10;
        default:
LABEL_10:
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          int among = find_among(a1, (uint64_t)&unk_461E00, 7);
          if (!among) {
            break;
          }
          continue;
      }
      break;
    }
  }
  uint64_t v9 = v2;
  do
  {
    while (1)
    {
      *(_DWORD *)(a1 + 8) = v9;
      if (in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0)) {
        break;
      }
      int v10 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v10;
      if (eq_s(a1, 1, &unk_34E56D))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
        {
          uint64_t v11 = a1;
          uint64_t v12 = &unk_34E56E;
          goto LABEL_22;
        }
      }
      *(_DWORD *)(a1 + 8) = v10;
      if (!eq_s(a1, 1, &unk_34E56F)) {
        break;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0)) {
        break;
      }
      uint64_t v11 = a1;
      uint64_t v12 = &unk_34E570;
LABEL_22:
      uint64_t result = slice_from_s(v11, 1, v12);
      if ((result & 0x80000000) != 0) {
        return result;
      }
    }
    *(_DWORD *)(a1 + 8) = v9;
    uint64_t v9 = skip_utf8(*(void *)a1, v9, 0, *(unsigned int *)(a1 + 12), 1);
  }
  while ((v9 & 0x80000000) == 0);
  *(_DWORD *)(a1 + 8) = v2;
  int v13 = *(_DWORD **)(a1 + 40);
  *int v13 = *(_DWORD *)(a1 + 12);
  v13[1] = *(_DWORD *)(a1 + 12);
  v13[2] = *(_DWORD *)(a1 + 12);
  int v14 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
  {
    if ((int v15 = *(_DWORD *)(a1 + 8), !out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
      && (int v18 = out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1), (v18 & 0x80000000) == 0)
      || (*(_DWORD *)(a1 + 8) = v15, !in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
      && (int v18 = in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1), (v18 & 0x80000000) == 0))
    {
LABEL_38:
      int v17 = *(_DWORD *)(a1 + 8) + v18;
      goto LABEL_39;
    }
  }
  *(_DWORD *)(a1 + 8) = v14;
  if (!out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
  {
    int v16 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
    {
      int v18 = out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1);
      if ((v18 & 0x80000000) == 0) {
        goto LABEL_38;
      }
    }
    *(_DWORD *)(a1 + 8) = v16;
    if (!in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 0))
    {
      int v17 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v17 & 0x80000000) == 0) {
LABEL_39:
      }
        **(_DWORD **)(a1 + 40) = v17;
    }
  }
  *(_DWORD *)(a1 + 8) = v14;
  int v19 = out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1);
  if ((v19 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v19;
    int v20 = in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1);
    if ((v20 & 0x80000000) == 0)
    {
      int v21 = *(_DWORD *)(a1 + 8) + v20;
      *(_DWORD *)(a1 + 8) = v21;
      *(_DWORD *)(*(void *)(a1 + 40) + 4) = v21;
      int v22 = out_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1);
      if ((v22 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v22;
        int v23 = in_grouping_U(a1, (uint64_t)&unk_34E559, 97, 249, 1);
        if ((v23 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v23;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  uint64_t v24 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v24;
  *(_DWORD *)(a1 + 24) = v24;
  uint64_t v25 = v24 - 1;
  if ((int)v25 > (int)v2)
  {
    char v26 = *(unsigned char *)(*(void *)a1 + v25);
    if (v26 & 0xE0) == 0x60 && ((0x8222u >> v26))
    {
      if (find_among_b(a1, (uint64_t)&unk_461EE0, 37))
      {
        uint64_t v27 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v27;
        uint64_t v28 = v27 - 1;
        if ((int)v28 > *(_DWORD *)(a1 + 16))
        {
          int v29 = *(unsigned __int8 *)(*(void *)a1 + v28);
          if (v29 == 114 || v29 == 111)
          {
            int among_b = find_among_b(a1, (uint64_t)&unk_462380, 5);
            if (among_b)
            {
              if (**(_DWORD **)(a1 + 40) <= *(_DWORD *)(a1 + 8))
              {
                if (among_b == 2)
                {
                  uint64_t result = slice_from_s(a1, 1, &unk_34E57D);
                  if ((result & 0x80000000) != 0) {
                    return result;
                  }
                }
                else if (among_b == 1)
                {
                  uint64_t result = slice_del(a1);
                  if ((result & 0x80000000) != 0) {
                    return result;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  int v31 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v31;
  *(_DWORD *)(a1 + 24) = v31;
  int v32 = find_among_b(a1, (uint64_t)&unk_462420, 51);
  if (v32)
  {
    int v33 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v33;
    switch(v32)
    {
      case 1:
        int v34 = *(int **)(a1 + 40);
        int v35 = v34[2];
        goto LABEL_115;
      case 2:
        int v34 = *(int **)(a1 + 40);
        if (v34[2] > v33) {
          goto LABEL_63;
        }
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        int v52 = &unk_34E615;
        goto LABEL_102;
      case 3:
        int v34 = *(int **)(a1 + 40);
        if (v34[2] > v33) {
          goto LABEL_63;
        }
        int v54 = &unk_34E617;
        uint64_t v55 = a1;
        int v56 = 3;
        goto LABEL_112;
      case 4:
        int v34 = *(int **)(a1 + 40);
        if (v34[2] > v33) {
          goto LABEL_63;
        }
        int v54 = &unk_34E61A;
        uint64_t v55 = a1;
        int v56 = 1;
        goto LABEL_112;
      case 5:
        int v34 = *(int **)(a1 + 40);
        if (v34[2] > v33) {
          goto LABEL_63;
        }
        int v54 = &unk_34E61B;
        uint64_t v55 = a1;
        int v56 = 4;
LABEL_112:
        uint64_t result = slice_from_s(v55, v56, v54);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        goto LABEL_68;
      case 6:
        int v34 = *(int **)(a1 + 40);
        int v35 = *v34;
LABEL_115:
        if (v35 <= v33) {
          goto LABEL_116;
        }
        goto LABEL_63;
      case 7:
        int v34 = *(int **)(a1 + 40);
        if (v34[1] > v33) {
          goto LABEL_63;
        }
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        uint64_t v57 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v57;
        uint64_t v58 = v57 - 1;
        if ((int)v58 <= *(_DWORD *)(a1 + 16)) {
          goto LABEL_68;
        }
        char v59 = *(unsigned char *)(*(void *)a1 + v58);
        if ((v59 & 0xE0) != 0x60) {
          goto LABEL_68;
        }
        if (((0x481008u >> v59) & 1) == 0) {
          goto LABEL_68;
        }
        int v60 = find_among_b(a1, (uint64_t)&unk_462A80, 4);
        if (!v60) {
          goto LABEL_68;
        }
        int v61 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v61;
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v61) {
          goto LABEL_68;
        }
        int v62 = v60;
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        if (v62 != 1) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        int v52 = &unk_34E61F;
LABEL_102:
        if (!eq_s_b(a1, 2, v52)) {
          goto LABEL_68;
        }
        int v53 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v53;
LABEL_104:
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v53) {
          goto LABEL_68;
        }
LABEL_116:
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        goto LABEL_68;
      case 8:
        int v34 = *(int **)(a1 + 40);
        if (v34[2] > v33) {
          goto LABEL_63;
        }
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        uint64_t v63 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v63;
        uint64_t v64 = v63 - 1;
        if ((int)v64 > *(_DWORD *)(a1 + 16))
        {
          char v65 = *(unsigned char *)(*(void *)a1 + v64);
          if (v65 & 0xE0) == 0x60 && ((0x401008u >> v65))
          {
            int v66 = find_among_b(a1, (uint64_t)&unk_462B00, 3);
            if (v66)
            {
              int v53 = *(_DWORD *)(a1 + 8);
              *(_DWORD *)(a1 + 20) = v53;
              if (v66 == 1) {
                goto LABEL_104;
              }
            }
          }
        }
        goto LABEL_68;
      case 9:
        int v34 = *(int **)(a1 + 40);
        if (v34[2] > v33) {
          goto LABEL_63;
        }
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_34E621)) {
          goto LABEL_68;
        }
        int v67 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v67;
        if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v67) {
          goto LABEL_68;
        }
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        int v52 = &unk_34E623;
        goto LABEL_102;
      default:
        goto LABEL_68;
    }
  }
  int v34 = *(int **)(a1 + 40);
LABEL_63:
  int v36 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v36;
  int v37 = *v34;
  if (v36 >= v37)
  {
    int v38 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v37;
    *(_DWORD *)(a1 + 24) = v36;
    int v39 = find_among_b(a1, (uint64_t)&unk_462B60, 87);
    if (v39)
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      if (v39 == 1)
      {
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
      }
    }
    *(_DWORD *)(a1 + 16) = v38;
  }
LABEL_68:
  int v40 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v40;
  *(_DWORD *)(a1 + 24) = v40;
  if (in_grouping_b_U(a1, (uint64_t)&unk_34E892, 97, 242, 0)) {
    goto LABEL_70;
  }
  int v41 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v41;
  if (**(_DWORD **)(a1 + 40) > v41) {
    goto LABEL_70;
  }
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  if (!eq_s_b(a1, 1, &unk_34E8A5)
    || (int v51 = *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 20) = v51, **(_DWORD **)(a1 + 40) > v51))
  {
LABEL_70:
    int v42 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v42;
  }
  else
  {
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    int v42 = *(_DWORD *)(a1 + 8);
  }
  *(_DWORD *)(a1 + 24) = v42;
  if (!eq_s_b(a1, 1, &unk_34E8A6)
    || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8), in_grouping_b_U(a1, (uint64_t)&unk_34E8A7, 99, 103, 0))
    || **(_DWORD **)(a1 + 40) > *(_DWORD *)(a1 + 8)
    || (uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
  {
    uint64_t v43 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v43;
    uint64_t v44 = v43;
    while (2)
    {
      *(_DWORD *)(a1 + 20) = v44;
      uint64_t v45 = *(unsigned int *)(a1 + 12);
      if ((int)v44 < (int)v45)
      {
        int v46 = *(unsigned __int8 *)(*(void *)a1 + (int)v44);
        if (v46 == 73 || v46 == 85)
        {
          int v47 = find_among(a1, (uint64_t)&unk_463640, 3);
          if (!v47) {
            goto LABEL_92;
          }
          uint64_t v44 = *(unsigned int *)(a1 + 8);
          *(_DWORD *)(a1 + 24) = v44;
          switch(v47)
          {
            case 1:
              uint64_t v49 = a1;
              int v50 = &unk_34E8A8;
              break;
            case 2:
              uint64_t v49 = a1;
              int v50 = &unk_34E8A9;
              break;
            case 3:
              uint64_t v45 = *(unsigned int *)(a1 + 12);
              goto LABEL_85;
            default:
              goto LABEL_87;
          }
          uint64_t result = slice_from_s(v49, 1, v50);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          goto LABEL_87;
        }
      }
      *(_DWORD *)(a1 + 24) = v44;
LABEL_85:
      int v48 = skip_utf8(*(void *)a1, v44, 0, v45, 1);
      if (v48 < 0)
      {
LABEL_92:
        *(_DWORD *)(a1 + 8) = v43;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v48;
LABEL_87:
      uint64_t v44 = *(unsigned int *)(a1 + 8);
      continue;
    }
  }
  return result;
}

void *italian_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void italian_UTF_8_close_env(uint64_t a1)
{
}

uint64_t norwegian_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  int v3 = *(_DWORD *)(a1 + 8);
  int v4 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 3);
  if (v4 < 0
    || (*(_DWORD *)(*(void *)(a1 + 40) + 4) = v4,
        *(_DWORD *)(a1 + 8) = v3,
        (out_grouping_U(a1, (uint64_t)&unk_34E8AC, 97, 248, 1) & 0x80000000) != 0)
    || (int v5 = in_grouping_U(a1, (uint64_t)&unk_34E8AC, 97, 248, 1), v5 < 0))
  {
    unsigned int v8 = 0;
  }
  else
  {
    int v6 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v6;
    uint64_t v7 = *(_DWORD **)(a1 + 40);
    if (v6 <= v7[1]) {
      int v6 = v7[1];
    }
    *uint64_t v7 = v6;
    unsigned int v8 = 1;
  }
  *(_DWORD *)(a1 + 16) = v2;
  int v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  int v10 = **(_DWORD **)(a1 + 40);
  if (v9 >= v10)
  {
    *(_DWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v9;
    if (v9 <= v10
      || (char v11 = *(unsigned char *)(v9 + *(void *)a1 - 1), (v11 & 0xE0) != 0x60)
      || ((0x1C4022u >> v11) & 1) == 0
      || (int among_b = find_among_b(a1, (uint64_t)&unk_4636A0, 29)) == 0)
    {
      *(_DWORD *)(a1 + 16) = v2;
      goto LABEL_18;
    }
    int v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b == 3)
    {
      uint64_t result = slice_from_s(a1, 2, &unk_34E8C4);
      if ((result & 0x80000000) != 0) {
        return result;
      }
    }
    else
    {
      if (among_b == 2)
      {
        int v33 = *(_DWORD *)(a1 + 12);
        if (in_grouping_b_U(a1, (uint64_t)&unk_34E8BF, 98, 122, 0))
        {
          *(_DWORD *)(a1 + 8) = v13 - v33 + *(_DWORD *)(a1 + 12);
          if (!eq_s_b(a1, 1, &unk_34E8C3)
            || out_grouping_b_U(a1, (uint64_t)&unk_34E8AC, 97, 248, 0))
          {
            goto LABEL_18;
          }
        }
      }
      else if (among_b != 1)
      {
        goto LABEL_18;
      }
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
    }
  }
LABEL_18:
  int v14 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  int v15 = **(_DWORD **)(a1 + 40);
  if (v14 < v15)
  {
LABEL_37:
    int v26 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v26;
LABEL_38:
    int v27 = **(_DWORD **)(a1 + 40);
    if (v26 >= v27)
    {
      int v28 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 16) = v27;
      *(_DWORD *)(a1 + 24) = v26;
      uint64_t v29 = v26 - 1;
      if ((int)v29 > v27
        && (char v30 = *(unsigned char *)(*(void *)a1 + v29), (v30 & 0xE0) == 0x60)
        && ((0x480080u >> v30) & 1) != 0
        && (int v31 = find_among_b(a1, (uint64_t)&unk_463A80, 11)) != 0)
      {
        int v32 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 16) = v28;
        *(_DWORD *)(a1 + 20) = v32;
        if (v31 == 1)
        {
          uint64_t result = slice_del(a1);
          if ((result & 0x80000000) != 0) {
            return result;
          }
        }
      }
      else
      {
        *(_DWORD *)(a1 + 16) = v28;
      }
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  uint64_t v16 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v15;
  *(_DWORD *)(a1 + 24) = v14;
  uint64_t v17 = v14 - 1;
  if ((int)v17 <= v15
    || *(unsigned char *)(*(void *)a1 + v17) != 116
    || !find_among_b(a1, (uint64_t)&unk_463A40, 2))
  {
    *(_DWORD *)(a1 + 16) = v16;
    goto LABEL_37;
  }
  int v19 = *(_DWORD *)(a1 + 8);
  uint64_t v18 = *(unsigned int *)(a1 + 12);
  *(_DWORD *)(a1 + 16) = v16;
  *(_DWORD *)(a1 + 20) = v19;
  *(_DWORD *)(a1 + 8) = v18;
  int v20 = skip_utf8(*(void *)a1, v18, v16, 0, -1);
  if (v20 < 0) {
    goto LABEL_37;
  }
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 20) = v20;
  int v21 = slice_del(a1);
  int v22 = v21 & (v21 >> 31);
  if (v21 >= 0) {
    int v22 = 1;
  }
  int v23 = v22 >> 31;
  if (!v22) {
    int v23 = 4;
  }
  if ((v23 | 4) == 4) {
    goto LABEL_37;
  }
  if (v22 >= 0) {
    unsigned int v24 = v8;
  }
  else {
    unsigned int v24 = v22;
  }
  if (v22) {
    uint64_t result = v24;
  }
  else {
    uint64_t result = v8;
  }
  if ((v22 & 0x80000000) == 0)
  {
    int v26 = *(_DWORD *)(a1 + 8);
    goto LABEL_38;
  }
  return result;
}

void *norwegian_UTF_8_create_env()
{
  return SN_create_env(0, 2, 0);
}

void norwegian_UTF_8_close_env(uint64_t a1)
{
}

uint64_t porter_UTF_8_stem(uint64_t a1)
{
  **(unsigned char **)(a1 + 48) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v3;
  if (eq_s(a1, 1, &unk_34E952))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    uint64_t v1 = slice_from_s(a1, 1, &unk_34E953);
    if ((v1 & 0x80000000) != 0) {
      return v1;
    }
    **(unsigned char **)(a1 + 48) = 1;
  }
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t v4 = v3;
  while (1)
  {
    while (!in_grouping_U(a1, (uint64_t)&unk_34E954, 97, 121, 0))
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      if (!eq_s(a1, 1, &unk_34E958)) {
        break;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 8) = v4;
      insertedouble d = slice_from_s(a1, 1, &unk_34E959);
      if ((inserted & 0x80000000) != 0) {
        return inserted;
      }
      **(unsigned char **)(a1 + 48) = 1;
      uint64_t v4 = *(unsigned int *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 8) = v4;
    uint64_t v5 = skip_utf8(*(void *)a1, v4, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v5 & 0x80000000) != 0) {
      break;
    }
    uint64_t v4 = v5;
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t v7 = *(_DWORD **)(a1 + 40);
  *uint64_t v7 = *(_DWORD *)(a1 + 12);
  v7[1] = *(_DWORD *)(a1 + 12);
  int v8 = *(_DWORD *)(a1 + 8);
  int v9 = out_grouping_U(a1, (uint64_t)&unk_34E954, 97, 121, 1);
  if ((v9 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v9;
    int v10 = in_grouping_U(a1, (uint64_t)&unk_34E954, 97, 121, 1);
    if ((v10 & 0x80000000) == 0)
    {
      int v11 = *(_DWORD *)(a1 + 8) + v10;
      *(_DWORD *)(a1 + 8) = v11;
      **(_DWORD **)(a1 + 40) = v11;
      int v12 = out_grouping_U(a1, (uint64_t)&unk_34E954, 97, 121, 1);
      if ((v12 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v12;
        int v13 = in_grouping_U(a1, (uint64_t)&unk_34E954, 97, 121, 1);
        if ((v13 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v13;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v8;
  uint64_t v14 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  *(_DWORD *)(a1 + 24) = v14;
  if ((int)v14 <= v8) {
    goto LABEL_27;
  }
  if (*(unsigned char *)(v14 + *(void *)a1 - 1) != 115) {
    goto LABEL_27;
  }
  int among_b = find_among_b(a1, (uint64_t)&unk_463BE0, 4);
  if (!among_b) {
    goto LABEL_27;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  if (among_b == 3)
  {
    insertedouble d = slice_del(a1);
    if ((inserted & 0x80000000) != 0) {
      return inserted;
    }
  }
  else
  {
    if (among_b == 2)
    {
      uint64_t v16 = &unk_34E95E;
      uint64_t v17 = a1;
      int v18 = 1;
    }
    else
    {
      if (among_b != 1) {
        goto LABEL_27;
      }
      uint64_t v16 = &unk_34E95C;
      uint64_t v17 = a1;
      int v18 = 2;
    }
    insertedouble d = slice_from_s(v17, v18, v16);
    if ((inserted & 0x80000000) != 0) {
      return inserted;
    }
  }
LABEL_27:
  int v19 = *(_DWORD *)(a1 + 16);
  uint64_t v20 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 24) = v20;
  uint64_t v21 = v20 - 1;
  if ((int)v21 <= v19) {
    goto LABEL_53;
  }
  int v22 = *(unsigned __int8 *)(*(void *)a1 + v21);
  if (v22 != 103 && v22 != 100) {
    goto LABEL_53;
  }
  int v23 = find_among_b(a1, (uint64_t)&unk_463C60, 3);
  if (!v23) {
    goto LABEL_53;
  }
  int v24 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v24;
  if (v23 != 2)
  {
    if (v23 == 1 && **(_DWORD **)(a1 + 40) <= v24)
    {
      insertedouble d = slice_from_s(a1, 2, &unk_34E969);
      if ((inserted & 0x80000000) != 0) {
        return inserted;
      }
    }
    goto LABEL_53;
  }
  int v25 = *(_DWORD *)(a1 + 12);
  if ((out_grouping_b_U(a1, (uint64_t)&unk_34E954, 97, 121, 1) & 0x80000000) != 0) {
    goto LABEL_53;
  }
  *(_DWORD *)(a1 + 8) = v24 - v25 + *(_DWORD *)(a1 + 12);
  insertedouble d = slice_del(a1);
  if ((inserted & 0x80000000) != 0) {
    return inserted;
  }
  int v26 = *(_DWORD *)(a1 + 12);
  uint64_t v27 = *(int *)(a1 + 8);
  if ((int)v27 - 1 <= *(_DWORD *)(a1 + 16)
    || (char v28 = *(unsigned char *)(*(void *)a1 + v27 - 1), (v28 & 0xE0) != 0x60)
    || ((0x41570D4u >> v28) & 1) == 0)
  {
LABEL_41:
    if (v27 == **(_DWORD **)(a1 + 40) && sub_2445EC(a1))
    {
      int v29 = v27 - v26;
      int v30 = *(_DWORD *)(a1 + 12);
      int v31 = v30 + v27 - v26;
      *(_DWORD *)(a1 + 8) = v31;
      insertedouble d = insert_s(a1, v30 + v29, v30 + v29, 1, &unk_34E96C);
      *(_DWORD *)(a1 + 8) = v31;
      if ((inserted & 0x80000000) != 0) {
        return inserted;
      }
    }
    goto LABEL_53;
  }
  int v32 = find_among_b(a1, (uint64_t)&unk_463CC0, 13);
  if (v32)
  {
    int v33 = v27 - v26;
    int v26 = *(_DWORD *)(a1 + 12);
    LODWORD(v27) = v26 + v33;
    *(_DWORD *)(a1 + 8) = v26 + v33;
    switch(v32)
    {
      case 3:
        goto LABEL_41;
      case 2:
        *(_DWORD *)(a1 + 24) = v27;
        int v34 = skip_utf8(*(void *)a1, (v26 + v33), *(unsigned int *)(a1 + 16), 0, -1);
        if ((v34 & 0x80000000) == 0)
        {
          *(_DWORD *)(a1 + 8) = v34;
          *(_DWORD *)(a1 + 20) = v34;
          insertedouble d = slice_del(a1);
          if ((inserted & 0x80000000) != 0) {
            return inserted;
          }
        }
        break;
      case 1:
        insertedouble d = insert_s(a1, v26 + v33, v26 + v33, 1, &unk_34E96B);
        *(_DWORD *)(a1 + 8) = v27;
        if ((inserted & 0x80000000) != 0) {
          return inserted;
        }
        break;
    }
  }
LABEL_53:
  int v35 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v35;
  *(_DWORD *)(a1 + 24) = v35;
  if (!eq_s_b(a1, 1, &unk_34E992))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 1, &unk_34E993)) {
      goto LABEL_69;
    }
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  int v36 = out_grouping_b_U(a1, (uint64_t)&unk_34E954, 97, 121, 1);
  if (v36 < 0) {
    goto LABEL_69;
  }
  *(_DWORD *)(a1 + 8) -= v36;
  int v37 = slice_from_s(a1, 1, &unk_34E994);
  int v38 = v37 & (v37 >> 31);
  if (v37 >= 0) {
    int v38 = 1;
  }
  unsigned int v39 = v38 >= 0 ? v1 : v38;
  uint64_t v1 = v38 ? v39 : v1;
  unsigned int v40 = v38 ? v38 >> 31 : 12;
  if (v40 != 12 && v40)
  {
    if (v38 < 0) {
      return v1;
    }
    int v41 = *(_DWORD *)(a1 + 8);
    int v42 = *(_DWORD *)(a1 + 12);
  }
  else
  {
LABEL_69:
    int v41 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v41;
    int v42 = v41;
  }
  *(_DWORD *)(a1 + 24) = v41;
  if (v41 - 2 > *(_DWORD *)(a1 + 16))
  {
    char v43 = *(unsigned char *)(*(void *)a1 + v41 - 1);
    if (v43 & 0xE0) == 0x60 && ((0xC7200u >> v43))
    {
      int v44 = find_among_b(a1, (uint64_t)&unk_463E60, 20);
      if (v44)
      {
        int v45 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v45;
        if (**(_DWORD **)(a1 + 40) <= v45)
        {
          switch(v44)
          {
            case 1:
              int v46 = &unk_34E995;
              goto LABEL_82;
            case 2:
              int v46 = &unk_34E999;
              goto LABEL_82;
            case 3:
              int v46 = &unk_34E99D;
              goto LABEL_82;
            case 4:
              int v46 = &unk_34E9A1;
LABEL_82:
              uint64_t v47 = a1;
              int v48 = 4;
              goto LABEL_95;
            case 5:
              int v46 = &unk_34E9A5;
              goto LABEL_94;
            case 6:
              int v46 = &unk_34E9A8;
              uint64_t v47 = a1;
              int v48 = 1;
              goto LABEL_95;
            case 7:
              int v46 = &unk_34E9A9;
              goto LABEL_94;
            case 8:
              int v46 = &unk_34E9AC;
              goto LABEL_94;
            case 9:
              int v46 = &unk_34E9AF;
              goto LABEL_89;
            case 10:
              int v46 = &unk_34E9B1;
LABEL_89:
              uint64_t v47 = a1;
              int v48 = 2;
              goto LABEL_95;
            case 11:
              int v46 = &unk_34E9B3;
              goto LABEL_94;
            case 12:
              int v46 = &unk_34E9B6;
              goto LABEL_94;
            case 13:
              int v46 = &unk_34E9B9;
              goto LABEL_94;
            case 14:
              int v46 = &unk_34E9BC;
LABEL_94:
              uint64_t v47 = a1;
              int v48 = 3;
LABEL_95:
              insertedouble d = slice_from_s(v47, v48, v46);
              if ((inserted & 0x80000000) == 0) {
                break;
              }
              return inserted;
            default:
              break;
          }
        }
      }
    }
  }
  int v49 = v41 - v42;
  *(_DWORD *)(a1 + 8) = v49 + *(_DWORD *)(a1 + 12);
  int v50 = sub_2442C0(a1);
  if (v50 >= 0) {
    unsigned int v51 = v1;
  }
  else {
    unsigned int v51 = v50;
  }
  if (v50) {
    uint64_t v1 = v51;
  }
  else {
    uint64_t v1 = v1;
  }
  if (v50) {
    int v52 = v50 >> 31;
  }
  else {
    int v52 = 14;
  }
  if (v52 != 14 && v52)
  {
    if (v50 < 0) {
      return v1;
    }
    int v54 = *(_DWORD *)(a1 + 8);
    int v53 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v53 = *(_DWORD *)(a1 + 12);
    int v54 = v49 + v53;
    *(_DWORD *)(a1 + 8) = v54;
  }
  int v55 = sub_2443A8(a1);
  if (v55 >= 0) {
    unsigned int v56 = v1;
  }
  else {
    unsigned int v56 = v55;
  }
  if (v55) {
    uint64_t v1 = v56;
  }
  else {
    uint64_t v1 = v1;
  }
  if (v55) {
    int v57 = v55 >> 31;
  }
  else {
    int v57 = 15;
  }
  if (v57 != 15 && v57)
  {
    if (v55 < 0) {
      return v1;
    }
    int v60 = *(_DWORD *)(a1 + 8);
    int v59 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v58 = v54 - v53;
    int v59 = *(_DWORD *)(a1 + 12);
    int v60 = v58 + v59;
    *(_DWORD *)(a1 + 8) = v58 + v59;
  }
  int v61 = sub_2444AC(a1);
  if (v61 >= 0) {
    unsigned int v62 = v1;
  }
  else {
    unsigned int v62 = v61;
  }
  if (v61) {
    uint64_t v1 = v62;
  }
  else {
    uint64_t v1 = v1;
  }
  if (v61) {
    int v63 = v61 >> 31;
  }
  else {
    int v63 = 16;
  }
  if ((v63 | 0x10) == 0x10)
  {
    *(_DWORD *)(a1 + 8) = v60 - v59 + *(_DWORD *)(a1 + 12);
  }
  else if (v61 < 0)
  {
    return v1;
  }
  int v64 = sub_24454C(a1);
  int v65 = v64 >> 31;
  if (!v64) {
    int v65 = 17;
  }
  if (!v65
    || v65 == 17
    || (v64 >= 0 ? (v66 = v1) : (v66 = v64), v64 ? (uint64_t v1 = v66) : (uint64_t v1 = v1), (v64 & 0x80000000) == 0))
  {
    int v67 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v67;
    if (**(unsigned char **)(a1 + 48))
    {
      do
      {
        uint64_t v68 = *(unsigned int *)(a1 + 8);
        while (1)
        {
          *(_DWORD *)(a1 + 20) = v68;
          if (eq_s(a1, 1, &unk_34E95A)) {
            break;
          }
          *(_DWORD *)(a1 + 8) = v68;
          uint64_t v69 = skip_utf8(*(void *)a1, v68, 0, *(unsigned int *)(a1 + 12), 1);
          if ((v69 & 0x80000000) != 0) {
            goto LABEL_155;
          }
          uint64_t v68 = v69;
          *(_DWORD *)(a1 + 8) = v69;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 8) = v68;
        uint64_t v1 = slice_from_s(a1, 1, &unk_34E95B);
      }
      while ((v1 & 0x80000000) == 0);
    }
    else
    {
LABEL_155:
      *(_DWORD *)(a1 + 8) = v67;
      return 1;
    }
  }
  return v1;
}

uint64_t sub_2442C0(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 - 2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(v1 + *(void *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x81220u >> v3) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_4640E0, 7);
  if (!result) {
    return result;
  }
  int v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  if (**(_DWORD **)(a1 + 40) > v5) {
    return 0;
  }
  if (result == 3)
  {
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    return 1;
  }
  if (result != 2)
  {
    if (result == 1)
    {
      int v6 = &unk_34EA27;
      goto LABEL_15;
    }
    return 1;
  }
  int v6 = &unk_34EA29;
LABEL_15:
  uint64_t result = slice_from_s(a1, 2, v6);
  if ((result & 0x80000000) == 0) {
    return 1;
  }
  return result;
}

uint64_t sub_2443A8(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  uint64_t v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v4 = *(unsigned char *)(*(void *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0x3C7228u >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_4641C0, 19);
  if (!result) {
    return result;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v6) {
    return 0;
  }
  if (result == 2)
  {
    int v7 = *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 1, &unk_34EA4A))
    {
      *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
      uint64_t result = eq_s_b(a1, 1, &unk_34EA4B);
      if (!result) {
        return result;
      }
    }
  }
  else if (result != 1)
  {
    return 1;
  }
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) == 0) {
    return 1;
  }
  return result;
}

uint64_t sub_2444AC(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  uint64_t result = eq_s_b(a1, 1, &unk_34EA88);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    char v4 = *(_DWORD **)(a1 + 40);
    if (v4[1] > v3)
    {
      if (*v4 > v3) {
        return 0;
      }
      int v5 = *(_DWORD *)(a1 + 12);
      if (sub_2445EC(a1)) {
        return 0;
      }
      *(_DWORD *)(a1 + 8) = v3 - v5 + *(_DWORD *)(a1 + 12);
    }
    LODWORD(result) = slice_del(a1);
    if ((int)result >= 0) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t sub_24454C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  uint64_t result = eq_s_b(a1, 1, &unk_34EA89);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v3)
    {
      uint64_t result = eq_s_b(a1, 1, &unk_34EA8A);
      if (result)
      {
        int v4 = slice_del(a1);
        if (v4 >= 0) {
          return 1;
        }
        else {
          return v4 & (v4 >> 31);
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *porter_UTF_8_create_env()
{
  return SN_create_env(0, 2, 1);
}

void porter_UTF_8_close_env(uint64_t a1)
{
}

BOOL sub_2445EC(uint64_t a1)
{
  int v2 = out_grouping_b_U(a1, (uint64_t)&unk_34E98D, 89, 121, 0);
  BOOL result = 0;
  if (!v2)
  {
    int v4 = in_grouping_b_U(a1, (uint64_t)&unk_34E954, 97, 121, 0);
    BOOL result = 0;
    if (!v4) {
      return out_grouping_b_U(a1, (uint64_t)&unk_34E954, 97, 121, 0) == 0;
    }
  }
  return result;
}

uint64_t portuguese_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  for (uint64_t i = v2; ; uint64_t i = *(unsigned int *)(a1 + 8))
  {
    *(_DWORD *)(a1 + 20) = i;
    uint64_t v4 = (int)i + 1;
    uint64_t v5 = *(unsigned int *)(a1 + 12);
    if ((int)v4 >= (int)v5 || (int v6 = *(unsigned __int8 *)(*(void *)a1 + v4), v6 != 163) && v6 != 181)
    {
      *(_DWORD *)(a1 + 24) = i;
      goto LABEL_11;
    }
    int among = find_among(a1, (uint64_t)&unk_464420, 3);
    if (!among) {
      goto LABEL_18;
    }
    uint64_t i = *(unsigned int *)(a1 + 8);
    *(_DWORD *)(a1 + 24) = i;
    if (among == 1)
    {
      uint64_t v9 = a1;
      int v10 = &unk_34EA8D;
      goto LABEL_16;
    }
    if (among != 2) {
      break;
    }
    uint64_t v9 = a1;
    int v10 = &unk_34EA8F;
LABEL_16:
    uint64_t result = slice_from_s(v9, 2, v10);
    if ((result & 0x80000000) != 0) {
      return result;
    }
LABEL_13:
    ;
  }
  if (among != 3) {
    goto LABEL_13;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 12);
LABEL_11:
  int v8 = skip_utf8(*(void *)a1, i, 0, v5, 1);
  if ((v8 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) = v8;
    goto LABEL_13;
  }
LABEL_18:
  *(_DWORD *)(a1 + 8) = v2;
  int v12 = *(_DWORD **)(a1 + 40);
  *int v12 = *(_DWORD *)(a1 + 12);
  v12[1] = *(_DWORD *)(a1 + 12);
  v12[2] = *(_DWORD *)(a1 + 12);
  int v13 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 0))
  {
    if ((int v14 = *(_DWORD *)(a1 + 8), !out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 0))
      && (int v17 = out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1), (v17 & 0x80000000) == 0)
      || (*(_DWORD *)(a1 + 8) = v14, !in_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 0))
      && (int v17 = in_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1), (v17 & 0x80000000) == 0))
    {
LABEL_31:
      int v16 = *(_DWORD *)(a1 + 8) + v17;
      goto LABEL_32;
    }
  }
  *(_DWORD *)(a1 + 8) = v13;
  if (!out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 0))
  {
    int v15 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 0))
    {
      int v17 = out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1);
      if ((v17 & 0x80000000) == 0) {
        goto LABEL_31;
      }
    }
    *(_DWORD *)(a1 + 8) = v15;
    if (!in_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 0))
    {
      int v16 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v16 & 0x80000000) == 0) {
LABEL_32:
      }
        **(_DWORD **)(a1 + 40) = v16;
    }
  }
  *(_DWORD *)(a1 + 8) = v13;
  int v18 = out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v18;
    int v19 = in_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1);
    if ((v19 & 0x80000000) == 0)
    {
      int v20 = *(_DWORD *)(a1 + 8) + v19;
      *(_DWORD *)(a1 + 8) = v20;
      *(_DWORD *)(*(void *)(a1 + 40) + 4) = v20;
      int v21 = out_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1);
      if ((v21 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v21;
        int v22 = in_grouping_U(a1, (uint64_t)&unk_34EA95, 97, 250, 1);
        if ((v22 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v22;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  uint64_t v23 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v23;
  *(_DWORD *)(a1 + 24) = v23;
  if ((int)v23 - 2 > v2)
  {
    char v24 = *(unsigned char *)(v23 + *(void *)a1 - 1);
    if (v24 & 0xE0) == 0x60 && ((0xCD022u >> v24))
    {
      int among_b = find_among_b(a1, (uint64_t)&unk_464480, 45);
      if (among_b)
      {
        int v26 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v26;
        switch(among_b)
        {
          case 1:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            goto LABEL_44;
          case 2:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            uint64_t v27 = &unk_34EAA9;
            uint64_t v28 = a1;
            int v29 = 3;
            goto LABEL_87;
          case 3:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            uint64_t v27 = &unk_34EAAC;
            uint64_t v28 = a1;
            int v29 = 1;
            goto LABEL_87;
          case 4:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            uint64_t v27 = &unk_34EAAD;
            uint64_t v28 = a1;
            int v29 = 4;
            goto LABEL_87;
          case 5:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v26) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v30 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v30;
            uint64_t v31 = v30 - 1;
            if ((int)v31 <= *(_DWORD *)(a1 + 16)) {
              goto LABEL_94;
            }
            char v32 = *(unsigned char *)(*(void *)a1 + v31);
            if ((v32 & 0xE0) != 0x60) {
              goto LABEL_94;
            }
            if (((0x480018u >> v32) & 1) == 0) {
              goto LABEL_94;
            }
            int v33 = find_among_b(a1, (uint64_t)&unk_464A20, 4);
            if (!v33) {
              goto LABEL_94;
            }
            int v34 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v34;
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v34) {
              goto LABEL_94;
            }
            int v35 = v33;
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            if (v35 != 1) {
              goto LABEL_94;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            int v36 = &unk_34EAB1;
LABEL_80:
            if (!eq_s_b(a1, 2, v36)) {
              goto LABEL_94;
            }
            int v44 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v44;
LABEL_82:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v44) {
              goto LABEL_94;
            }
LABEL_44:
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            goto LABEL_94;
          case 6:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v37 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v37;
            if ((int)v37 - 3 <= *(_DWORD *)(a1 + 16)) {
              goto LABEL_94;
            }
            int v38 = *(unsigned __int8 *)(v37 + *(void *)a1 - 1);
            if (v38 != 108 && v38 != 101) {
              goto LABEL_94;
            }
            unsigned int v39 = &unk_464AA0;
            goto LABEL_74;
          case 7:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v40 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v40;
            uint64_t v41 = v40 - 1;
            if ((int)v41 <= *(_DWORD *)(a1 + 16)) {
              goto LABEL_94;
            }
            char v42 = *(unsigned char *)(*(void *)a1 + v41);
            if ((v42 & 0xE0) != 0x60 || ((0x401008u >> v42) & 1) == 0) {
              goto LABEL_94;
            }
            unsigned int v39 = &unk_464B00;
LABEL_74:
            int v43 = find_among_b(a1, (uint64_t)v39, 3);
            if (!v43) {
              goto LABEL_94;
            }
            int v44 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v44;
            if (v43 != 1) {
              goto LABEL_94;
            }
            goto LABEL_82;
          case 8:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v26) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            int v36 = &unk_34EAB3;
            goto LABEL_80;
          case 9:
            if (**(_DWORD **)(a1 + 40) > v26 || !eq_s_b(a1, 1, &unk_34EAB5)) {
              break;
            }
            uint64_t v27 = &unk_34EAB6;
            uint64_t v28 = a1;
            int v29 = 2;
LABEL_87:
            uint64_t result = slice_from_s(v28, v29, v27);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            goto LABEL_94;
          default:
            goto LABEL_94;
        }
      }
    }
  }
  int v45 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v45;
  int v46 = **(_DWORD **)(a1 + 40);
  if (v45 < v46)
  {
LABEL_98:
    *(_DWORD *)(a1 + 8) = v45;
    *(_DWORD *)(a1 + 24) = v45;
    int v53 = find_among_b(a1, (uint64_t)&unk_465A60, 7);
    if (!v53) {
      goto LABEL_102;
    }
    int v52 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v52;
    if (v53 != 1) {
      goto LABEL_102;
    }
LABEL_100:
    if (**(_DWORD **)(a1 + 40) > v52) {
      goto LABEL_102;
    }
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) == 0) {
      goto LABEL_102;
    }
    return result;
  }
  int v47 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v46;
  *(_DWORD *)(a1 + 24) = v45;
  int v48 = find_among_b(a1, (uint64_t)&unk_464B60, 120);
  if (!v48)
  {
    *(_DWORD *)(a1 + 16) = v47;
    int v45 = *(_DWORD *)(a1 + 12);
    goto LABEL_98;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  if (v48 == 1)
  {
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
  }
  *(_DWORD *)(a1 + 16) = v47;
LABEL_94:
  int v49 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v49;
  *(_DWORD *)(a1 + 24) = v49;
  if (eq_s_b(a1, 1, &unk_34EA8B))
  {
    int v51 = *(_DWORD *)(a1 + 8);
    int v50 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 20) = v51;
    if (eq_s_b(a1, 1, &unk_34EA8C))
    {
      int v52 = *(_DWORD *)(a1 + 12) + v51 - v50;
      *(_DWORD *)(a1 + 8) = v52;
      goto LABEL_100;
    }
  }
LABEL_102:
  int v54 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v54;
  *(_DWORD *)(a1 + 24) = v54;
  int v55 = find_among_b(a1, (uint64_t)&unk_465B40, 4);
  if (!v55) {
    goto LABEL_111;
  }
  int v56 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v56;
  if (v55 == 2)
  {
    uint64_t result = slice_from_s(a1, 1, &unk_34EDE0);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    goto LABEL_111;
  }
  if (v55 != 1 || **(_DWORD **)(a1 + 40) > v56) {
    goto LABEL_111;
  }
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
  int v57 = *(_DWORD *)(a1 + 8);
  int v58 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v57;
  if (!eq_s_b(a1, 1, &unk_34EDDC)
    || (int v59 = *(_DWORD *)(a1 + 8),
        int v60 = *(_DWORD *)(a1 + 12),
        *(_DWORD *)(a1 + 20) = v59,
        !eq_s_b(a1, 1, &unk_34EDDD)))
  {
    *(_DWORD *)(a1 + 8) = v57 - v58 + *(_DWORD *)(a1 + 12);
    if (eq_s_b(a1, 1, &unk_34EDDE))
    {
      int v70 = *(_DWORD *)(a1 + 8);
      int v71 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 20) = v70;
      if (eq_s_b(a1, 1, &unk_34EDDF))
      {
        int v61 = v70 - v71;
        goto LABEL_132;
      }
    }
    goto LABEL_111;
  }
  int v61 = v59 - v60;
LABEL_132:
  int v72 = *(_DWORD *)(a1 + 12) + v61;
  *(_DWORD *)(a1 + 8) = v72;
  if (**(_DWORD **)(a1 + 40) > v72 || (uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
  {
LABEL_111:
    uint64_t v62 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v62;
    for (uint64_t j = v62; ; uint64_t j = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = j;
      uint64_t v64 = (int)j + 1;
      uint64_t v65 = *(unsigned int *)(a1 + 12);
      if ((int)v64 < (int)v65 && *(unsigned char *)(*(void *)a1 + v64) == 126)
      {
        int v66 = find_among(a1, (uint64_t)&unk_465BC0, 3);
        if (!v66) {
          goto LABEL_127;
        }
        uint64_t j = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = j;
        if (v66 == 1)
        {
          uint64_t v68 = a1;
          uint64_t v69 = &unk_34EDE8;
          goto LABEL_125;
        }
        if (v66 == 2)
        {
          uint64_t v68 = a1;
          uint64_t v69 = &unk_34EDEA;
LABEL_125:
          uint64_t result = slice_from_s(v68, 2, v69);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          continue;
        }
        if (v66 != 3) {
          continue;
        }
        uint64_t v65 = *(unsigned int *)(a1 + 12);
      }
      else
      {
        *(_DWORD *)(a1 + 24) = j;
      }
      int v67 = skip_utf8(*(void *)a1, j, 0, v65, 1);
      if (v67 < 0)
      {
LABEL_127:
        *(_DWORD *)(a1 + 8) = v62;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v67;
    }
  }
  return result;
}

void *portuguese_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void portuguese_UTF_8_close_env(uint64_t a1)
{
}

uint64_t romanian_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = v2;
  while (!in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
  {
    int v4 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v4;
    if (eq_s(a1, 1, &unk_34EE05)
      && (*(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8), !in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0)))
    {
      uint64_t v5 = a1;
      int v6 = &unk_34EE06;
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v4;
      if (!eq_s(a1, 1, &unk_34EE07)) {
        break;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0)) {
        break;
      }
      uint64_t v5 = a1;
      int v6 = &unk_34EE08;
    }
    uint64_t result = slice_from_s(v5, 1, v6);
    if ((result & 0x80000000) != 0) {
      return result;
    }
LABEL_10:
    *(_DWORD *)(a1 + 8) = v3;
  }
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t v8 = skip_utf8(*(void *)a1, v3, 0, *(unsigned int *)(a1 + 12), 1);
  if ((v8 & 0x80000000) == 0)
  {
    uint64_t v3 = v8;
    goto LABEL_10;
  }
  *(_DWORD *)(a1 + 8) = v2;
  uint64_t v9 = *(_DWORD **)(a1 + 40);
  *uint64_t v9 = *(_DWORD *)(a1 + 12);
  v9[1] = *(_DWORD *)(a1 + 12);
  void v9[2] = *(_DWORD *)(a1 + 12);
  int v10 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
  {
    if ((int v11 = *(_DWORD *)(a1 + 8), !out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
      && (int v14 = out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1), (v14 & 0x80000000) == 0)
      || (*(_DWORD *)(a1 + 8) = v11, !in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
      && (int v14 = in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1), (v14 & 0x80000000) == 0))
    {
LABEL_26:
      int v13 = *(_DWORD *)(a1 + 8) + v14;
      goto LABEL_27;
    }
  }
  *(_DWORD *)(a1 + 8) = v10;
  if (!out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
  {
    int v12 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
    {
      int v14 = out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1);
      if ((v14 & 0x80000000) == 0) {
        goto LABEL_26;
      }
    }
    *(_DWORD *)(a1 + 8) = v12;
    if (!in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
    {
      int v13 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v13 & 0x80000000) == 0) {
LABEL_27:
      }
        **(_DWORD **)(a1 + 40) = v13;
    }
  }
  *(_DWORD *)(a1 + 8) = v10;
  int v15 = out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1);
  if ((v15 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v15;
    int v16 = in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1);
    if ((v16 & 0x80000000) == 0)
    {
      int v17 = *(_DWORD *)(a1 + 8) + v16;
      *(_DWORD *)(a1 + 8) = v17;
      *(_DWORD *)(*(void *)(a1 + 40) + 4) = v17;
      int v18 = out_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1);
      if ((v18 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v18;
        int v19 = in_grouping_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 1);
        if ((v19 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v19;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  uint64_t v20 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 24) = v20;
  uint64_t v21 = v20 - 1;
  if ((int)v21 > v2)
  {
    char v22 = *(unsigned char *)(*(void *)a1 + v21);
    if (v22 & 0xE0) == 0x60 && ((0x41222u >> v22))
    {
      int among_b = find_among_b(a1, (uint64_t)&unk_465C20, 16);
      if (among_b)
      {
        int v24 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v24;
        if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v24)
        {
          switch(among_b)
          {
            case 1:
              uint64_t result = slice_del(a1);
              if ((result & 0x80000000) == 0) {
                goto LABEL_50;
              }
              return result;
            case 2:
              int v25 = &unk_34EE09;
              goto LABEL_46;
            case 3:
              int v25 = &unk_34EE0A;
              goto LABEL_46;
            case 4:
              int v25 = &unk_34EE0B;
              goto LABEL_46;
            case 5:
              int v26 = *(_DWORD *)(a1 + 12);
              if (eq_s_b(a1, 2, &unk_34EE0C)) {
                goto LABEL_50;
              }
              *(_DWORD *)(a1 + 8) = v24 - v26 + *(_DWORD *)(a1 + 12);
              int v25 = &unk_34EE0E;
LABEL_46:
              uint64_t v27 = a1;
              int v28 = 1;
              break;
            case 6:
              int v25 = &unk_34EE0F;
              uint64_t v27 = a1;
              int v28 = 2;
              break;
            case 7:
              int v25 = &unk_34EE11;
              uint64_t v27 = a1;
              int v28 = 4;
              break;
            default:
              goto LABEL_50;
          }
          uint64_t result = slice_from_s(v27, v28, v25);
          if ((result & 0x80000000) != 0) {
            return result;
          }
        }
      }
    }
  }
LABEL_50:
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  **(unsigned char **)(a1 + 48) = 0;
  int v29 = *(_DWORD *)(a1 + 8);
  int v30 = v29 - *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v29;
  int v31 = find_among_b(a1, (uint64_t)&unk_4665E0, 46);
  if (v31)
  {
    while (2)
    {
      int v32 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v32;
      if (*(_DWORD *)(*(void *)(a1 + 40) + 4) <= v32)
      {
        switch(v31)
        {
          case 1:
            uint64_t v33 = a1;
            int v34 = 4;
            int v35 = &unk_34EE53;
            goto LABEL_59;
          case 2:
            uint64_t v33 = a1;
            int v34 = 4;
            int v35 = &unk_34EE57;
            goto LABEL_59;
          case 3:
            uint64_t v33 = a1;
            int v34 = 2;
            int v35 = &unk_34EE5B;
            goto LABEL_59;
          case 4:
            uint64_t v33 = a1;
            int v34 = 2;
            int v35 = &unk_34EE5D;
            goto LABEL_59;
          case 5:
            uint64_t v33 = a1;
            int v34 = 2;
            int v35 = &unk_34EE5F;
            goto LABEL_59;
          case 6:
            uint64_t v33 = a1;
            int v34 = 2;
            int v35 = &unk_34EE61;
LABEL_59:
            uint64_t result = slice_from_s(v33, v34, v35);
            if ((result & 0x80000000) == 0) {
              goto LABEL_60;
            }
            return result;
          default:
LABEL_60:
            **(unsigned char **)(a1 + 48) = 1;
            int v36 = *(_DWORD *)(a1 + 12) + v30;
            *(_DWORD *)(a1 + 8) = v36;
            *(_DWORD *)(a1 + 24) = v36;
            int v31 = find_among_b(a1, (uint64_t)&unk_4665E0, 46);
            if (!v31) {
              break;
            }
            continue;
        }
      }
      break;
    }
  }
  int v37 = *(_DWORD *)(a1 + 12) + v30;
  *(_DWORD *)(a1 + 8) = v37;
  *(_DWORD *)(a1 + 24) = v37;
  int v38 = find_among_b(a1, (uint64_t)&unk_465E20, 62);
  if (!v38) {
    goto LABEL_73;
  }
  int v39 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v39;
  if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v39) {
    goto LABEL_73;
  }
  switch(v38)
  {
    case 3:
      uint64_t v40 = &unk_34EE50;
      uint64_t v41 = a1;
      int v42 = 3;
      goto LABEL_71;
    case 2:
      if (!eq_s_b(a1, 2, &unk_34EE4D)) {
        goto LABEL_73;
      }
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t v40 = &unk_34EE4F;
      uint64_t v41 = a1;
      int v42 = 1;
LABEL_71:
      uint64_t result = slice_from_s(v41, v42, v40);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      break;
    case 1:
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      break;
  }
  **(unsigned char **)(a1 + 48) = 1;
LABEL_73:
  int v43 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v43;
  if (**(unsigned char **)(a1 + 48) || (int v44 = **(_DWORD **)(a1 + 40), v43 < v44))
  {
LABEL_82:
    int v49 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v49;
    *(_DWORD *)(a1 + 24) = v49;
    int v50 = find_among_b(a1, (uint64_t)&unk_467760, 5);
    if (v50)
    {
      int v51 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v51;
      if (**(_DWORD **)(a1 + 40) <= v51 && v50 == 1)
      {
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
      }
    }
    uint64_t v53 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v53;
    for (uint64_t i = v53; ; uint64_t i = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = i;
      uint64_t v55 = *(unsigned int *)(a1 + 12);
      if ((int)i < (int)v55 && ((int v56 = *(unsigned __int8 *)(*(void *)a1 + (int)i), v56 == 73) || v56 == 85))
      {
        int among = find_among(a1, (uint64_t)&unk_467800, 3);
        if (!among) {
          goto LABEL_106;
        }
        uint64_t i = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = i;
        if (among == 1)
        {
          uint64_t v59 = a1;
          int v60 = &unk_34F232;
          goto LABEL_104;
        }
        if (among == 2)
        {
          uint64_t v59 = a1;
          int v60 = &unk_34F233;
LABEL_104:
          uint64_t result = slice_from_s(v59, 1, v60);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          continue;
        }
        if (among != 3) {
          continue;
        }
        uint64_t v55 = *(unsigned int *)(a1 + 12);
      }
      else
      {
        *(_DWORD *)(a1 + 24) = i;
      }
      int v58 = skip_utf8(*(void *)a1, i, 0, v55, 1);
      if (v58 < 0)
      {
LABEL_106:
        *(_DWORD *)(a1 + 8) = v53;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v58;
    }
  }
  int v45 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v44;
  *(_DWORD *)(a1 + 24) = v43;
  int v46 = find_among_b(a1, (uint64_t)&unk_466BA0, 94);
  if (!v46
    || (int v47 = *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 20) = v47, v46 != 2)
    && (v46 != 1
     || (int v48 = *(_DWORD *)(a1 + 12), out_grouping_b_U(a1, (uint64_t)&unk_34EDF0, 97, 259, 0))
     && (*(_DWORD *)(a1 + 8) = v47 - v48 + *(_DWORD *)(a1 + 12), !eq_s_b(a1, 1, &unk_34F06B)))
    || (uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
  {
    *(_DWORD *)(a1 + 16) = v45;
    goto LABEL_82;
  }
  return result;
}

void *romanian_UTF_8_create_env()
{
  return SN_create_env(0, 3, 1);
}

void romanian_UTF_8_close_env(uint64_t a1)
{
}

uint64_t russian_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = *(_DWORD **)(a1 + 40);
  _DWORD *v3 = *(_DWORD *)(a1 + 12);
  v3[1] = *(_DWORD *)(a1 + 12);
  int v4 = out_grouping_U(a1, (uint64_t)&unk_34F238, 1072, 1103, 1);
  if ((v4 & 0x80000000) == 0)
  {
    int v5 = *(_DWORD *)(a1 + 8) + v4;
    *(_DWORD *)(a1 + 8) = v5;
    **(_DWORD **)(a1 + 40) = v5;
    int v6 = in_grouping_U(a1, (uint64_t)&unk_34F238, 1072, 1103, 1);
    if ((v6 & 0x80000000) == 0)
    {
      *(_DWORD *)(a1 + 8) += v6;
      int v7 = out_grouping_U(a1, (uint64_t)&unk_34F238, 1072, 1103, 1);
      if ((v7 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v7;
        int v8 = in_grouping_U(a1, (uint64_t)&unk_34F238, 1072, 1103, 1);
        if ((v8 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v8;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  int v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  int v10 = **(_DWORD **)(a1 + 40);
  if (v9 < v10) {
    return 0;
  }
  *(_DWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 8) = v9;
  *(_DWORD *)(a1 + 24) = v9;
  int among_b = find_among_b(a1, (uint64_t)&unk_467860, 9);
  if (among_b)
  {
    int v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b == 2) {
      goto LABEL_37;
    }
    if (among_b != 1) {
      goto LABEL_38;
    }
    int v14 = *(_DWORD *)(a1 + 12);
    if (eq_s_b(a1, 2, &unk_34F23C)) {
      goto LABEL_37;
    }
    *(_DWORD *)(a1 + 8) = v13 - v14 + *(_DWORD *)(a1 + 12);
    if (eq_s_b(a1, 2, &unk_34F23E)) {
      goto LABEL_37;
    }
  }
  int v16 = *(_DWORD *)(a1 + 12);
  int v15 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v16;
  *(_DWORD *)(a1 + 24) = v16;
  if (v16 - 3 <= v15) {
    goto LABEL_21;
  }
  int v17 = *(unsigned __int8 *)(v16 + *(void *)a1 - 1);
  if (v17 != 143 && v17 != 140) {
    goto LABEL_21;
  }
  int v18 = find_among_b(a1, (uint64_t)&unk_467980, 2);
  if (!v18)
  {
    int v16 = *(_DWORD *)(a1 + 12);
LABEL_21:
    *(_DWORD *)(a1 + 8) = v16;
    goto LABEL_22;
  }
  int v16 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v16;
  if (v18 == 1)
  {
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    int v16 = *(_DWORD *)(a1 + 8);
  }
LABEL_22:
  int v19 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v16;
  int v20 = find_among_b(a1, (uint64_t)&unk_467AC0, 26);
  if (v20)
  {
    int v21 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v21;
    if (v20 == 1)
    {
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v21 = *(_DWORD *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 24) = v21;
    int v22 = find_among_b(a1, (uint64_t)&unk_4679C0, 8);
    if (!v22) {
      goto LABEL_38;
    }
    int v23 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v23;
    if (v22 != 2)
    {
      if (v22 != 1) {
        goto LABEL_38;
      }
      int v24 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 2, &unk_34F28A))
      {
        *(_DWORD *)(a1 + 8) = v23 - v24 + *(_DWORD *)(a1 + 12);
        if (!eq_s_b(a1, 2, &unk_34F28C)) {
          goto LABEL_38;
        }
      }
    }
  }
  else
  {
    int v25 = v19 - v16;
    int v26 = *(_DWORD *)(a1 + 12) - v25;
    *(_DWORD *)(a1 + 8) = v26;
    *(_DWORD *)(a1 + 24) = v26;
    int v27 = find_among_b(a1, (uint64_t)&unk_467E00, 46);
    if (!v27) {
      goto LABEL_61;
    }
    int v28 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v28;
    if (v27 != 2)
    {
      if (v27 != 1) {
        goto LABEL_38;
      }
      int v29 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 2, &unk_34F326))
      {
        *(_DWORD *)(a1 + 8) = v28 - v29 + *(_DWORD *)(a1 + 12);
        if (!eq_s_b(a1, 2, &unk_34F328))
        {
LABEL_61:
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v25;
          LODWORD(result) = sub_245E94((_DWORD *)a1);
          int v39 = result;
          if ((int)result >= 0) {
            uint64_t result = 1;
          }
          else {
            uint64_t result = result;
          }
          if (v39 < 0) {
            return result;
          }
          goto LABEL_38;
        }
      }
    }
  }
LABEL_37:
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
LABEL_38:
  int v30 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v30;
  *(_DWORD *)(a1 + 24) = v30;
  if (eq_s_b(a1, 2, &unk_34F236))
  {
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    int v31 = *(_DWORD *)(a1 + 8);
    int v32 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v31 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v31;
    int v32 = v31;
  }
  *(_DWORD *)(a1 + 24) = v31;
  if (v31 - 5 <= *(_DWORD *)(a1 + 16)
    || (int v33 = *(unsigned __int8 *)(*(void *)a1 + v31 - 1), v33 != 140) && v33 != 130
    || (int v34 = find_among_b(a1, (uint64_t)&unk_468840, 2)) == 0
    || (int v35 = *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 20) = v35, *(_DWORD *)(*(void *)(a1 + 40) + 4) > v35)
    || v34 != 1
    || (uint64_t result = slice_del(a1), (result & 0x80000000) == 0))
  {
    int v36 = v31 - v32 + *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v36;
    *(_DWORD *)(a1 + 24) = v36;
    int v37 = find_among_b(a1, (uint64_t)&unk_468880, 4);
    if (v37)
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      switch(v37)
      {
        case 3:
          goto LABEL_58;
        case 2:
          int v38 = &unk_34F4A6;
          break;
        case 1:
          uint64_t result = slice_del(a1);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
          if (!eq_s_b(a1, 2, &unk_34F4A2)) {
            goto LABEL_59;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          int v38 = &unk_34F4A4;
          break;
        default:
          goto LABEL_59;
      }
      if (eq_s_b(a1, 2, v38))
      {
LABEL_58:
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
      }
    }
LABEL_59:
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 8) = v2;
    return 1;
  }
  return result;
}

uint64_t sub_245E94(_DWORD *a1)
{
  a1[6] = a1[2];
  uint64_t result = find_among_b((uint64_t)a1, (uint64_t)&unk_4683C0, 36);
  if (result)
  {
    a1[5] = a1[2];
    if (result != 1) {
      return 1;
    }
    uint64_t result = slice_del((uint64_t)a1);
    if ((result & 0x80000000) == 0) {
      return 1;
    }
  }
  return result;
}

void *russian_UTF_8_create_env()
{
  return SN_create_env(0, 2, 0);
}

void russian_UTF_8_close_env(uint64_t a1)
{
}

uint64_t spanish_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = *(_DWORD **)(a1 + 40);
  _DWORD *v3 = *(_DWORD *)(a1 + 12);
  v3[1] = *(_DWORD *)(a1 + 12);
  v3[2] = *(_DWORD *)(a1 + 12);
  int v4 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 0))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 0))
    {
      int v8 = out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
      if ((v8 & 0x80000000) == 0) {
        goto LABEL_14;
      }
    }
    *(_DWORD *)(a1 + 8) = v5;
    if (!in_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 0))
    {
      int v8 = in_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
      if ((v8 & 0x80000000) == 0) {
        goto LABEL_14;
      }
    }
  }
  *(_DWORD *)(a1 + 8) = v4;
  if (!out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 0))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 0))
    {
      int v8 = out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_14:
        int v7 = *(_DWORD *)(a1 + 8) + v8;
LABEL_15:
        **(_DWORD **)(a1 + 40) = v7;
        goto LABEL_16;
      }
    }
    *(_DWORD *)(a1 + 8) = v6;
    if (!in_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 0))
    {
      int v7 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_15;
      }
    }
  }
LABEL_16:
  *(_DWORD *)(a1 + 8) = v4;
  int v9 = out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
  if ((v9 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v9;
    int v10 = in_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
    if ((v10 & 0x80000000) == 0)
    {
      int v11 = *(_DWORD *)(a1 + 8) + v10;
      *(_DWORD *)(a1 + 8) = v11;
      *(_DWORD *)(*(void *)(a1 + 40) + 4) = v11;
      int v12 = out_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
      if ((v12 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v12;
        int v13 = in_grouping_U(a1, (uint64_t)&unk_34F4BA, 97, 252, 1);
        if ((v13 & 0x80000000) == 0) {
          *(_DWORD *)(*(void *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v13;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  uint64_t v14 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  *(_DWORD *)(a1 + 24) = v14;
  uint64_t v15 = v14 - 1;
  if ((int)v15 > v2)
  {
    char v16 = *(unsigned char *)(*(void *)a1 + v15);
    if (v16 & 0xE0) == 0x60 && ((0x88022u >> v16))
    {
      if (find_among_b(a1, (uint64_t)&unk_468900, 13))
      {
        uint64_t v17 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v17;
        uint64_t v18 = v17 - 1;
        if ((int)v18 > *(_DWORD *)(a1 + 16))
        {
          int v19 = *(unsigned __int8 *)(*(void *)a1 + v18);
          if (v19 == 114 || v19 == 111)
          {
            int among_b = find_among_b(a1, (uint64_t)&unk_468AA0, 11);
            if (among_b)
            {
              int v21 = *(_DWORD *)(a1 + 8);
              if (**(_DWORD **)(a1 + 40) <= v21)
              {
                switch(among_b)
                {
                  case 1:
                    *(_DWORD *)(a1 + 20) = v21;
                    int v22 = &unk_34F4CE;
                    uint64_t v23 = a1;
                    int v24 = 5;
                    goto LABEL_37;
                  case 2:
                    *(_DWORD *)(a1 + 20) = v21;
                    int v22 = &unk_34F4D3;
                    uint64_t v23 = a1;
                    int v24 = 4;
                    goto LABEL_37;
                  case 3:
                    *(_DWORD *)(a1 + 20) = v21;
                    int v22 = &unk_34F4D7;
                    goto LABEL_36;
                  case 4:
                    *(_DWORD *)(a1 + 20) = v21;
                    int v22 = &unk_34F4D9;
                    goto LABEL_36;
                  case 5:
                    *(_DWORD *)(a1 + 20) = v21;
                    int v22 = &unk_34F4DB;
LABEL_36:
                    uint64_t v23 = a1;
                    int v24 = 2;
LABEL_37:
                    uint64_t result = slice_from_s(v23, v24, v22);
                    if ((result & 0x80000000) != 0) {
                      return result;
                    }
                    break;
                  case 6:
                    goto LABEL_40;
                  case 7:
                    if (!eq_s_b(a1, 1, &unk_34F4DD)) {
                      break;
                    }
LABEL_40:
                    uint64_t result = slice_del(a1);
                    if ((result & 0x80000000) == 0) {
                      break;
                    }
                    return result;
                  default:
                    break;
                }
              }
            }
          }
        }
      }
    }
  }
  int v26 = *(_DWORD *)(a1 + 16);
  uint64_t v27 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v27;
  *(_DWORD *)(a1 + 24) = v27;
  if ((int)v27 - 2 > v26)
  {
    char v28 = *(unsigned char *)(v27 + *(void *)a1 - 1);
    if (v28 & 0xE0) == 0x60 && ((0xCC032u >> v28))
    {
      int v29 = find_among_b(a1, (uint64_t)&unk_468C00, 46);
      if (v29)
      {
        int v30 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v30;
        switch(v29)
        {
          case 1:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) <= v30) {
              goto LABEL_101;
            }
            break;
          case 2:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            int v31 = &unk_34F52E;
            goto LABEL_135;
          case 3:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            int v32 = &unk_34F530;
            uint64_t v33 = a1;
            int v34 = 3;
            goto LABEL_57;
          case 4:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            int v32 = &unk_34F533;
            uint64_t v33 = a1;
            int v34 = 1;
            goto LABEL_57;
          case 5:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            int v32 = &unk_34F534;
            uint64_t v33 = a1;
            int v34 = 4;
LABEL_57:
            uint64_t result = slice_from_s(v33, v34, v32);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            goto LABEL_102;
          case 6:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 4) > v30) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v35 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v35;
            uint64_t v36 = v35 - 1;
            if ((int)v36 <= *(_DWORD *)(a1 + 16)) {
              goto LABEL_102;
            }
            char v37 = *(unsigned char *)(*(void *)a1 + v36);
            if ((v37 & 0xE0) != 0x60) {
              goto LABEL_102;
            }
            if (((0x480018u >> v37) & 1) == 0) {
              goto LABEL_102;
            }
            int v38 = find_among_b(a1, (uint64_t)&unk_4691C0, 4);
            if (!v38) {
              goto LABEL_102;
            }
            int v39 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v39;
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v39) {
              goto LABEL_102;
            }
            int v40 = v38;
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            if (v40 != 1) {
              goto LABEL_102;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            int v31 = &unk_34F538;
LABEL_135:
            if (!eq_s_b(a1, 2, v31)) {
              goto LABEL_102;
            }
            int v47 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v47;
LABEL_137:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v47) {
              goto LABEL_102;
            }
            goto LABEL_101;
          case 7:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v41 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v41;
            if ((int)v41 - 3 <= *(_DWORD *)(a1 + 16) || *(unsigned char *)(v41 + *(void *)a1 - 1) != 101) {
              goto LABEL_102;
            }
            int v42 = &unk_469240;
            goto LABEL_80;
          case 8:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v43 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v43;
            uint64_t v44 = v43 - 1;
            if ((int)v44 <= *(_DWORD *)(a1 + 16)) {
              goto LABEL_102;
            }
            char v45 = *(unsigned char *)(*(void *)a1 + v44);
            if ((v45 & 0xE0) != 0x60 || ((0x401008u >> v45) & 1) == 0) {
              goto LABEL_102;
            }
            int v42 = &unk_4692A0;
LABEL_80:
            int v46 = find_among_b(a1, (uint64_t)v42, 3);
            if (v46)
            {
              int v47 = *(_DWORD *)(a1 + 8);
              *(_DWORD *)(a1 + 20) = v47;
              if (v46 == 1) {
                goto LABEL_137;
              }
            }
            goto LABEL_102;
          case 9:
            if (*(_DWORD *)(*(void *)(a1 + 40) + 8) > v30) {
              break;
            }
            uint64_t result = slice_del(a1);
            if ((result & 0x80000000) != 0) {
              return result;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            int v31 = &unk_34F53A;
            goto LABEL_135;
          default:
            goto LABEL_102;
        }
      }
    }
  }
  int v48 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v48;
  int v49 = **(_DWORD **)(a1 + 40);
  if (v48 >= v49)
  {
    int v50 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v49;
    *(_DWORD *)(a1 + 24) = v48;
    int v51 = find_among_b(a1, (uint64_t)&unk_469300, 12);
    if (v51)
    {
      int v52 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v50;
      *(_DWORD *)(a1 + 20) = v52;
      if (v51 != 1) {
        goto LABEL_102;
      }
      if (eq_s_b(a1, 1, &unk_34F63D)) {
        goto LABEL_101;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v50;
    }
  }
  int v53 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v53;
  int v54 = **(_DWORD **)(a1 + 40);
  if (v53 < v54) {
    goto LABEL_102;
  }
  int v55 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v54;
  *(_DWORD *)(a1 + 24) = v53;
  int v56 = find_among_b(a1, (uint64_t)&unk_469480, 96);
  if (!v56)
  {
    *(_DWORD *)(a1 + 16) = v55;
    goto LABEL_102;
  }
  int v57 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 16) = v55;
  *(_DWORD *)(a1 + 20) = v57;
  if (v56 != 2)
  {
    if (v56 != 1) {
      goto LABEL_102;
    }
    int v58 = *(_DWORD *)(a1 + 12) - v57;
    int v59 = eq_s_b(a1, 1, &unk_34F666);
    int v60 = *(_DWORD *)(a1 + 12);
    if (v59)
    {
      int v61 = *(_DWORD *)(a1 + 8);
      if (eq_s_b(a1, 1, &unk_34F667)) {
        int v62 = v61 - v60 + *(_DWORD *)(a1 + 12);
      }
      else {
        int v62 = *(_DWORD *)(a1 + 12) - v58;
      }
    }
    else
    {
      int v62 = v60 - v58;
    }
    *(_DWORD *)(a1 + 8) = v62;
    *(_DWORD *)(a1 + 20) = v62;
  }
LABEL_101:
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
LABEL_102:
  int v63 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v63;
  *(_DWORD *)(a1 + 24) = v63;
  int v64 = find_among_b(a1, (uint64_t)&unk_46A080, 8);
  if (!v64) {
    goto LABEL_109;
  }
  int v65 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v65;
  if (v64 == 2)
  {
    if (**(_DWORD **)(a1 + 40) <= v65)
    {
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (eq_s_b(a1, 1, &unk_34F825))
      {
        int v75 = *(_DWORD *)(a1 + 8);
        int v76 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 20) = v75;
        if (eq_s_b(a1, 1, &unk_34F826))
        {
          int v65 = *(_DWORD *)(a1 + 12) + v75 - v76;
          *(_DWORD *)(a1 + 8) = v65;
          goto LABEL_105;
        }
      }
    }
LABEL_109:
    uint64_t v66 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v66;
    for (uint64_t i = v66; ; uint64_t i = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = i;
      uint64_t v68 = (int)i + 1;
      uint64_t v69 = *(unsigned int *)(a1 + 12);
      if ((int)v68 < (int)v69
        && (char v70 = *(unsigned char *)(*(void *)a1 + v68), (v70 & 0xE0) == 0xA0)
        && ((0x4082202u >> v70) & 1) != 0)
      {
        int among = find_among(a1, (uint64_t)&unk_46A180, 6);
        if (!among) {
          goto LABEL_127;
        }
        uint64_t i = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = i;
        switch(among)
        {
          case 1:
            uint64_t v73 = a1;
            int v74 = &unk_34F834;
            break;
          case 2:
            uint64_t v73 = a1;
            int v74 = &unk_34F835;
            break;
          case 3:
            uint64_t v73 = a1;
            int v74 = &unk_34F836;
            break;
          case 4:
            uint64_t v73 = a1;
            int v74 = &unk_34F837;
            break;
          case 5:
            uint64_t v73 = a1;
            int v74 = &unk_34F838;
            break;
          case 6:
            uint64_t v69 = *(unsigned int *)(a1 + 12);
            goto LABEL_114;
          default:
            continue;
        }
        uint64_t result = slice_from_s(v73, 1, v74);
        if ((result & 0x80000000) != 0) {
          return result;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 24) = i;
LABEL_114:
        int v71 = skip_utf8(*(void *)a1, i, 0, v69, 1);
        if (v71 < 0)
        {
LABEL_127:
          *(_DWORD *)(a1 + 8) = v66;
          return 1;
        }
        *(_DWORD *)(a1 + 8) = v71;
      }
    }
  }
  if (v64 != 1) {
    goto LABEL_109;
  }
LABEL_105:
  if (**(_DWORD **)(a1 + 40) > v65) {
    goto LABEL_109;
  }
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) == 0) {
    goto LABEL_109;
  }
  return result;
}

void *spanish_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void spanish_UTF_8_close_env(uint64_t a1)
{
}

uint64_t swedish_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  int v3 = *(_DWORD *)(a1 + 8);
  int v4 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 3);
  if (v4 < 0
    || (*(_DWORD *)(*(void *)(a1 + 40) + 4) = v4,
        *(_DWORD *)(a1 + 8) = v3,
        (out_grouping_U(a1, (uint64_t)&unk_34F843, 97, 246, 1) & 0x80000000) != 0)
    || (int v5 = in_grouping_U(a1, (uint64_t)&unk_34F843, 97, 246, 1), v5 < 0))
  {
    LODWORD(v8) = 0;
  }
  else
  {
    int v6 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v6;
    int v7 = *(_DWORD **)(a1 + 40);
    if (v6 <= v7[1]) {
      int v6 = v7[1];
    }
    *int v7 = v6;
    LODWORD(v8) = 1;
  }
  *(_DWORD *)(a1 + 16) = v2;
  int v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  int v10 = **(_DWORD **)(a1 + 40);
  if (v9 < v10) {
    goto LABEL_17;
  }
  *(_DWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 24) = v9;
  if (v9 > v10
    && (char v11 = *(unsigned char *)(v9 + *(void *)a1 - 1), (v11 & 0xE0) == 0x60)
    && ((0x1C4032u >> v11) & 1) != 0
    && (int among_b = find_among_b(a1, (uint64_t)&unk_46A240, 37)) != 0)
  {
    int v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b != 2)
    {
      if (among_b != 1) {
        goto LABEL_17;
      }
LABEL_66:
      uint64_t v34 = slice_del(a1);
      if ((v34 & 0x80000000) != 0) {
        return v34;
      }
      goto LABEL_17;
    }
    if (!in_grouping_b_U(a1, (uint64_t)&unk_34F856, 98, 121, 0)) {
      goto LABEL_66;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 16) = v2;
  }
LABEL_17:
  uint64_t v14 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  int v15 = **(_DWORD **)(a1 + 40);
  if ((int)v14 < v15)
  {
LABEL_33:
    int v22 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v22;
    goto LABEL_34;
  }
  int v16 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v15;
  uint64_t v17 = v14 - 1;
  if ((int)v17 <= v15) {
    goto LABEL_21;
  }
  char v18 = *(unsigned char *)(*(void *)a1 + v17);
  if ((v18 & 0xE0) != 0x60 || ((0x104010u >> v18) & 1) == 0) {
    goto LABEL_21;
  }
  int v19 = find_among_b(a1, (uint64_t)&unk_46A6E0, 7);
  if (!v19) {
    goto LABEL_22;
  }
  uint64_t v31 = *(unsigned int *)(a1 + 12);
  uint64_t v32 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v31;
  *(_DWORD *)(a1 + 24) = v31;
  int v33 = skip_utf8(*(void *)a1, v31, v32, 0, -1);
  if (v33 < 0)
  {
LABEL_21:
    int v19 = 0;
LABEL_22:
    *(_DWORD *)(a1 + 16) = v16;
    goto LABEL_23;
  }
  *(_DWORD *)(a1 + 8) = v33;
  *(_DWORD *)(a1 + 20) = v33;
  int v19 = slice_del(a1);
  if ((v19 & 0x80000000) == 0)
  {
    int v19 = 1;
    goto LABEL_22;
  }
LABEL_23:
  if (v19 >= 0) {
    unsigned int v20 = v8;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v19) {
    uint64_t v8 = v20;
  }
  else {
    uint64_t v8 = v8;
  }
  if (v19) {
    int v21 = v19 >> 31;
  }
  else {
    int v21 = 4;
  }
  if ((v21 | 4) == 4) {
    goto LABEL_33;
  }
  if (v19 < 0) {
    return v8;
  }
  int v22 = *(_DWORD *)(a1 + 8);
LABEL_34:
  int v23 = **(_DWORD **)(a1 + 40);
  if (v22 < v23)
  {
LABEL_51:
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  int v24 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v23;
  *(_DWORD *)(a1 + 24) = v22;
  uint64_t v25 = v22 - 1;
  if ((int)v25 <= v23 || (char v26 = *(unsigned char *)(*(void *)a1 + v25), (v26 & 0xE0) != 0x60) || ((0x180080u >> v26) & 1) == 0)
  {
    int v27 = 0;
LABEL_39:
    *(_DWORD *)(a1 + 16) = v24;
    goto LABEL_40;
  }
  int v27 = find_among_b(a1, (uint64_t)&unk_46A7C0, 5);
  if (!v27) {
    goto LABEL_39;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  if (v27 == 3)
  {
    uint64_t v35 = &unk_34F8EE;
    goto LABEL_70;
  }
  if (v27 == 2)
  {
    uint64_t v35 = &unk_34F8EA;
LABEL_70:
    int v27 = slice_from_s(a1, 4, v35);
    if (v27 < 0) {
      goto LABEL_40;
    }
LABEL_71:
    int v27 = 1;
    goto LABEL_39;
  }
  if (v27 != 1) {
    goto LABEL_71;
  }
  int v27 = slice_del(a1);
  if ((v27 & 0x80000000) == 0) {
    goto LABEL_71;
  }
LABEL_40:
  int v28 = v27 >> 31;
  if (!v27) {
    int v28 = 5;
  }
  if (!v28 || v28 == 5) {
    goto LABEL_51;
  }
  unsigned int v29 = v27 >= 0 ? v8 : v27;
  uint64_t v8 = v27 ? v29 : v8;
  if ((v27 & 0x80000000) == 0) {
    goto LABEL_51;
  }
  return v8;
}

void *swedish_UTF_8_create_env()
{
  return SN_create_env(0, 2, 0);
}

void swedish_UTF_8_close_env(uint64_t a1)
{
}

uint64_t turkish_UTF_8_stem(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  int v3 = out_grouping_U(a1, (uint64_t)&unk_34F904, 97, 305, 1);
  if (v3 < 0)
  {
    uint64_t result = 0;
    *(_DWORD *)(a1 + 8) = v2;
    return result;
  }
  int v4 = 3;
  do
  {
    int v5 = *(_DWORD *)(a1 + 8) + v3;
    *(_DWORD *)(a1 + 8) = v5;
    int v3 = out_grouping_U(a1, (uint64_t)&unk_34F904, 97, 305, 1);
    --v4;
  }
  while ((v3 & 0x80000000) == 0);
  if (v4 <= 1) {
    int v6 = v2;
  }
  else {
    int v6 = v5;
  }
  *(_DWORD *)(a1 + 8) = v6;
  if (v4 > 1) {
    return 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  int v8 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v8;
  *(_DWORD *)(a1 + 24) = v8;
  **(unsigned char **)(a1 + 48) = 1;
  int v10 = *(_DWORD *)(a1 + 8);
  int v9 = *(_DWORD *)(a1 + 12);
  unsigned int v11 = sub_2480C4(a1);
  unsigned int v12 = v11 >> 31;
  if (v11) {
    int v13 = v11 >> 31;
  }
  else {
    int v13 = 2;
  }
  if (!v13) {
    goto LABEL_138;
  }
  int v14 = v11;
  if (v13 != 2) {
    goto LABEL_135;
  }
  int v15 = v9 - v10;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
  int v16 = sub_248150(a1);
  if (v16 >= 0) {
    int v17 = v14;
  }
  else {
    int v17 = v16;
  }
  unsigned int v12 = v16 >> 31;
  if (v16)
  {
    int v14 = v17;
    int v18 = v16 >> 31;
  }
  else
  {
    int v18 = 4;
  }
  if (!v18) {
    goto LABEL_138;
  }
  if (v18 != 4) {
    goto LABEL_135;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
  int v19 = sub_2481B4(a1);
  if (v19 >= 0) {
    int v20 = v14;
  }
  else {
    int v20 = v19;
  }
  unsigned int v12 = v19 >> 31;
  if (v19)
  {
    int v14 = v20;
    int v21 = v19 >> 31;
  }
  else
  {
    int v21 = 5;
  }
  if (!v21) {
    goto LABEL_138;
  }
  if (v21 != 5) {
    goto LABEL_135;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
  if (eq_s_b(a1, 3, &unk_34FA08) && sub_248794(a1)) {
    goto LABEL_138;
  }
  int v23 = *(_DWORD *)(a1 + 12);
  int v22 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v23 - v15;
  if (v23 - v15 - 5 <= v22) {
    goto LABEL_48;
  }
  if ((*(unsigned __int8 *)(*(void *)a1 + v23 - v15 - 1) | 4) != 0x65) {
    goto LABEL_48;
  }
  int among_b = find_among_b(a1, (uint64_t)&unk_46ADE0, 2);
  int v23 = *(_DWORD *)(a1 + 12);
  if (!among_b) {
    goto LABEL_48;
  }
  int v25 = *(_DWORD *)(a1 + 8);
  if (!sub_248244(a1))
  {
    int v26 = v23 - v25;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
    if (!sub_2482A0(a1))
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
      int v53 = sub_248314(a1);
      int v54 = v53 >= 0 ? v14 : v53;
      unsigned int v55 = v53 >> 31;
      if (v53)
      {
        int v14 = v54;
        int v56 = v53 >> 31;
      }
      else
      {
        int v56 = 12;
      }
      if (v56)
      {
        if (v56 != 12) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
        int v57 = sub_24839C(a1);
        if (v57 >= 0) {
          int v58 = v14;
        }
        else {
          int v58 = v57;
        }
        unsigned int v55 = v57 >> 31;
        if (v57)
        {
          int v14 = v58;
          int v59 = v57 >> 31;
        }
        else
        {
          int v59 = 13;
        }
        if (v59)
        {
          if (v59 == 13)
          {
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
            if (!sub_248410(a1)) {
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
            }
            goto LABEL_39;
          }
LABEL_132:
          if (v55) {
            goto LABEL_136;
          }
        }
      }
    }
  }
LABEL_39:
  int v27 = sub_2480C4(a1);
  if (v27 >= 0) {
    int v28 = v14;
  }
  else {
    int v28 = v27;
  }
  unsigned int v12 = v27 >> 31;
  if (v27)
  {
    int v14 = v28;
    int v29 = v27 >> 31;
  }
  else
  {
    int v29 = 8;
  }
  if (!v29) {
    goto LABEL_138;
  }
  if (v29 != 8) {
    goto LABEL_135;
  }
  int v23 = *(_DWORD *)(a1 + 12);
LABEL_48:
  *(_DWORD *)(a1 + 8) = v23 - v15;
  if (!sub_2482A0(a1))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
    if (sub_24850C(a1))
    {
      uint64_t v41 = *(int *)(a1 + 8);
      if ((int)v41 - 2 > *(_DWORD *)(a1 + 16)
        && *(unsigned char *)(v41 + *(void *)a1 - 1) == 122
        && find_among_b(a1, (uint64_t)&unk_46B160, 4))
      {
        int v43 = *(_DWORD *)(a1 + 8);
        int v42 = *(_DWORD *)(a1 + 12);
        int v44 = sub_248150(a1);
        if (v44 >= 0) {
          int v45 = v14;
        }
        else {
          int v45 = v44;
        }
        unsigned int v12 = v44 >> 31;
        if (v44)
        {
          int v14 = v45;
          int v46 = v44 >> 31;
        }
        else
        {
          int v46 = 22;
        }
        if (!v46) {
          goto LABEL_138;
        }
        if (v46 != 22)
        {
          if ((v44 & 0x80000000) == 0) {
            goto LABEL_138;
          }
          goto LABEL_135;
        }
        *(_DWORD *)(a1 + 8) = v43 - v42 + *(_DWORD *)(a1 + 12);
        if (sub_2481B4(a1)) {
          goto LABEL_138;
        }
      }
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
    if (sub_248244(a1)) {
      goto LABEL_86;
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
    int v49 = sub_248410(a1);
    unsigned int v12 = v49 >> 31;
    unsigned int v50 = v49 ? v49 >> 31 : 26;
    if (!v50) {
      goto LABEL_86;
    }
    if (v50 == 26)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
      if (!sub_24839C(a1))
      {
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
        if (!sub_248314(a1))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
          if (!sub_248498(a1))
          {
LABEL_139:
            LODWORD(v60) = 0;
            goto LABEL_140;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          uint64_t result = slice_del(a1);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          int v48 = *(_DWORD *)(a1 + 8);
          int v47 = *(_DWORD *)(a1 + 12);
          *(_DWORD *)(a1 + 24) = v48;
          if (!sub_248244(a1))
          {
            int v51 = v47 - v48;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v47 - v48);
            if (!sub_2482A0(a1))
            {
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
              if (!sub_248314(a1))
              {
                *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
                if (!sub_24839C(a1))
                {
                  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
                  if (!sub_248410(a1)) {
                    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
                  }
                }
              }
            }
          }
          goto LABEL_88;
        }
      }
LABEL_86:
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v48 = *(_DWORD *)(a1 + 8);
      int v47 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 24) = v48;
LABEL_88:
      uint64_t result = sub_2480C4(a1);
      if (result)
      {
        if ((result & 0x80000000) != 0) {
          return result;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 8) = v48 - v47 + *(_DWORD *)(a1 + 12);
      }
      goto LABEL_138;
    }
    if (v49 >= 0) {
      int v52 = v14;
    }
    else {
      int v52 = v49;
    }
    if (v49) {
      int v14 = v52;
    }
    if ((v49 & 0x80000000) == 0) {
      goto LABEL_86;
    }
LABEL_135:
    if (v12) {
      goto LABEL_136;
    }
LABEL_138:
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    uint64_t result = slice_del(a1);
    if ((result & 0x80000000) != 0) {
      return result;
    }
    goto LABEL_139;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
  int v31 = *(_DWORD *)(a1 + 8);
  int v30 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v31;
  int v32 = sub_248498(a1);
  if (v32 >= 0) {
    int v33 = v14;
  }
  else {
    int v33 = v32;
  }
  unsigned int v34 = v32 >> 31;
  if (v32)
  {
    int v14 = v33;
    int v35 = v32 >> 31;
  }
  else
  {
    int v35 = 16;
  }
  if (!v35) {
    goto LABEL_71;
  }
  if (v35 == 16)
  {
    int v36 = v30 - v31;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v30 - v31);
    int v37 = sub_248150(a1);
    if (v37 >= 0) {
      int v38 = v14;
    }
    else {
      int v38 = v37;
    }
    unsigned int v34 = v37 >> 31;
    if (v37)
    {
      int v14 = v38;
      int v39 = v37 >> 31;
    }
    else
    {
      int v39 = 18;
    }
    if (!v39) {
      goto LABEL_71;
    }
    if (v39 == 18)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v36;
      if (sub_2481B4(a1)) {
        goto LABEL_71;
      }
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v36;
      unsigned int v40 = sub_2480C4(a1);
      if (!v40)
      {
        *(_DWORD *)(a1 + 8) = v31 - v30 + *(_DWORD *)(a1 + 12);
        goto LABEL_71;
      }
      int v14 = v40;
      if ((v40 & 0x80000000) == 0)
      {
LABEL_71:
        **(unsigned char **)(a1 + 48) = 0;
        goto LABEL_138;
      }
      unsigned int v34 = v40 >> 31;
    }
  }
  if (!v34) {
    goto LABEL_71;
  }
LABEL_136:
  LODWORD(v60) = v14 & (v14 >> 31);
  uint64_t result = v60;
  if (v14 < 0) {
    return result;
  }
LABEL_140:
  int v61 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v61;
  if (!**(unsigned char **)(a1 + 48)) {
    return 0;
  }
  *(_DWORD *)(a1 + 24) = v61;
  int v62 = sub_2482A0(a1);
  int v63 = v62 >> 31;
  if (v62) {
    int v64 = v62 >> 31;
  }
  else {
    int v64 = 2;
  }
  if (v64 != 2)
  {
    if (!v64) {
      goto LABEL_146;
    }
    goto LABEL_323;
  }
  int v69 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v69;
  *(_DWORD *)(a1 + 24) = v69;
  if (sub_24850C(a1))
  {
    uint64_t v70 = *(int *)(a1 + 8) - 1;
    if ((int)v70 > *(_DWORD *)(a1 + 16)
      && (*(unsigned __int8 *)(*(void *)a1 + v70) | 4) == 0x65
      && find_among_b(a1, (uint64_t)&unk_46B1E0, 2)
      && sub_2492C0(a1))
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v72 = *(_DWORD *)(a1 + 8);
      int v71 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 24) = v72;
      if (!sub_248C00(a1))
      {
        int v73 = v71 - v72;
        int v74 = *(_DWORD *)(a1 + 12) - v73;
        *(_DWORD *)(a1 + 8) = v74;
        *(_DWORD *)(a1 + 24) = v74;
        int v75 = sub_248C64(a1);
        if (v75 >= 0) {
          int v76 = v62;
        }
        else {
          int v76 = v75;
        }
        int v63 = v75 >> 31;
        if (v75)
        {
          int v62 = v76;
          int v77 = v75 >> 31;
        }
        else
        {
          int v77 = 8;
        }
        if (v77)
        {
          if (v77 != 8) {
            goto LABEL_171;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v73;
          int v78 = sub_248DF4(a1);
          int v63 = v78 >> 31;
          if (v78 < 0) {
            int v62 = v78;
          }
          if (!v78) {
            int v63 = 10;
          }
          if (v78 <= 0)
          {
LABEL_171:
            if (v63)
            {
              if (v63 != 10)
              {
                if (v63 != 9)
                {
LABEL_174:
                  if (v63 == 7) {
                    goto LABEL_331;
                  }
                  goto LABEL_323;
                }
                goto LABEL_277;
              }
              int v123 = *(_DWORD *)(a1 + 12) - v73;
              *(_DWORD *)(a1 + 8) = v123;
              *(_DWORD *)(a1 + 24) = v123;
              if (sub_2482A0(a1))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
                uint64_t result = slice_del(a1);
                if ((result & 0x80000000) != 0) {
                  return result;
                }
                int v124 = sub_2488C0((_DWORD *)a1);
                if (v124)
                {
                  int v62 = v124;
                  if ((v124 & 0x80000000) == 0) {
                    goto LABEL_331;
                  }
                  int v63 = v124 >> 31;
                  if (v124 >= 0) {
                    goto LABEL_331;
                  }
                  goto LABEL_174;
                }
              }
LABEL_410:
              int v68 = *(_DWORD *)(a1 + 12) - v73;
              goto LABEL_150;
            }
          }
        }
LABEL_277:
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        int v119 = *(_DWORD *)(a1 + 8);
        int v120 = *(_DWORD *)(a1 + 12) - v119;
        *(_DWORD *)(a1 + 24) = v119;
        if (!sub_2482A0(a1)) {
          goto LABEL_281;
        }
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        uint64_t result = sub_2488C0((_DWORD *)a1);
        if (!result)
        {
LABEL_281:
          int v68 = *(_DWORD *)(a1 + 12) - v120;
          goto LABEL_150;
        }
        goto LABEL_192;
      }
      goto LABEL_191;
    }
  }
  int v79 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v79;
  *(_DWORD *)(a1 + 24) = v79;
  int v80 = sub_248F54(a1);
  if (v80 >= 0) {
    int v81 = v62;
  }
  else {
    int v81 = v80;
  }
  int v63 = v80 >> 31;
  if (v80)
  {
    int v62 = v81;
    int v82 = v80 >> 31;
  }
  else
  {
    int v82 = 13;
  }
  if (v82)
  {
    if (v82 == 13)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
      if (!sub_24850C(a1)) {
        goto LABEL_210;
      }
      uint64_t v83 = *(int *)(a1 + 8) - 1;
      if ((int)v83 <= *(_DWORD *)(a1 + 16)
        || (*(unsigned __int8 *)(*(void *)a1 + v83) | 4) != 0x65
        || !find_among_b(a1, (uint64_t)&unk_46B3E0, 2))
      {
        goto LABEL_210;
      }
    }
    else if (v80 < 0)
    {
      goto LABEL_323;
    }
  }
  int v85 = *(_DWORD *)(a1 + 8);
  int v84 = *(_DWORD *)(a1 + 12);
  if (sub_248C00(a1)) {
    goto LABEL_191;
  }
  int v86 = v84 - v85;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v86;
  int v87 = sub_248DF4(a1);
  if (v87 >= 0) {
    int v88 = v62;
  }
  else {
    int v88 = v87;
  }
  int v63 = v87 >> 31;
  if (v87)
  {
    int v62 = v88;
    int v89 = v87 >> 31;
  }
  else
  {
    int v89 = 18;
  }
  if (v89 == 18)
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v86;
    int v90 = sub_2488C0((_DWORD *)a1);
    int v63 = v90 >> 31;
    if (v90 < 0) {
      int v62 = v90;
    }
    if (!v90) {
      int v63 = 15;
    }
    if (v90 > 0) {
      goto LABEL_331;
    }
  }
  else if (!v89)
  {
    goto LABEL_277;
  }
  if (!v63) {
    goto LABEL_331;
  }
  if (v63 != 15)
  {
LABEL_323:
    if (v63 != 1) {
      goto LABEL_331;
    }
    goto LABEL_324;
  }
LABEL_210:
  int v91 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v91;
  *(_DWORD *)(a1 + 24) = v91;
  if (sub_24850C(a1)
    && (uint64_t v92 = *(int *)(a1 + 8), (int)v92 - 3 > *(_DWORD *)(a1 + 16))
    && *(unsigned char *)(v92 + *(void *)a1 - 1) == 110
    && find_among_b(a1, (uint64_t)&unk_46B420, 2)
    || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12), sub_24850C(a1))
    && find_among_b(a1, (uint64_t)&unk_46B460, 4))
  {
    int v94 = *(_DWORD *)(a1 + 8);
    int v93 = *(_DWORD *)(a1 + 12);
    int v95 = sub_248DF4(a1);
    if (v95 >= 0) {
      int v96 = v62;
    }
    else {
      int v96 = v95;
    }
    int v63 = v95 >> 31;
    if (v95)
    {
      int v62 = v96;
      int v97 = v95 >> 31;
    }
    else
    {
      int v97 = 23;
    }
    if (v97 != 23)
    {
      if (!v97) {
        goto LABEL_277;
      }
      if ((v95 & 0x80000000) == 0) {
        goto LABEL_331;
      }
      goto LABEL_323;
    }
    *(_DWORD *)(a1 + 8) = v94 - v93 + *(_DWORD *)(a1 + 12);
    if (sub_248C00(a1)) {
      goto LABEL_331;
    }
  }
  int v98 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v98;
  *(_DWORD *)(a1 + 24) = v98;
  int v99 = sub_248FCC(a1);
  if (v99 >= 0) {
    int v100 = v62;
  }
  else {
    int v100 = v99;
  }
  int v63 = v99 >> 31;
  if (v99)
  {
    int v62 = v100;
    int v101 = v99 >> 31;
  }
  else
  {
    int v101 = 26;
  }
  if (v101 == 26)
  {
    int v107 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v107;
    *(_DWORD *)(a1 + 24) = v107;
    if (sub_249040(a1)) {
      goto LABEL_250;
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
    int v108 = sub_2490C8(a1);
    if (v108 < 0) {
      int v62 = v108;
    }
    if (v108 > 0) {
      goto LABEL_250;
    }
    int v63 = v108 >> 31;
    unsigned int v122 = v108 ? v108 >> 31 : 35;
    if (!v122) {
      goto LABEL_250;
    }
    if (v122 != 35)
    {
      if (v122 != 34) {
        goto LABEL_323;
      }
LABEL_250:
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v110 = *(_DWORD *)(a1 + 8);
      int v109 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 24) = v110;
      if (!sub_2482A0(a1)) {
        goto LABEL_261;
      }
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v111 = sub_2488C0((_DWORD *)a1);
      if (v111 >= 0) {
        int v112 = v62;
      }
      else {
        int v112 = v111;
      }
      int v63 = v111 >> 31;
      if (v111)
      {
        int v62 = v112;
        int v113 = v111 >> 31;
      }
      else
      {
        int v113 = 36;
      }
      if (!v113) {
        goto LABEL_331;
      }
      if (v113 == 36)
      {
LABEL_261:
        int v73 = v109 - v110;
        int v114 = *(_DWORD *)(a1 + 12) - v73;
        *(_DWORD *)(a1 + 8) = v114;
        *(_DWORD *)(a1 + 24) = v114;
        int v115 = sub_248C64(a1);
        if (v115 >= 0) {
          int v116 = v62;
        }
        else {
          int v116 = v115;
        }
        int v63 = v115 >> 31;
        if (v115)
        {
          int v62 = v116;
          int v117 = v115 >> 31;
        }
        else
        {
          int v117 = 38;
        }
        if (!v117) {
          goto LABEL_277;
        }
        if (v117 == 38)
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v73;
          int v118 = sub_248DF4(a1);
          int v63 = v118 >> 31;
          if (v118 < 0) {
            int v62 = v118;
          }
          if (!v118) {
            int v63 = 40;
          }
          if (v118 > 0) {
            goto LABEL_277;
          }
        }
        switch(v63)
        {
          case 0:
            goto LABEL_277;
          case 40:
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v73;
            unsigned int v136 = sub_2488C0((_DWORD *)a1);
            if (!v136) {
              goto LABEL_410;
            }
            int v62 = v136;
            if ((v136 & 0x80000000) == 0) {
              goto LABEL_331;
            }
            int v63 = v136 >> 31;
            break;
          case 39:
            goto LABEL_277;
        }
      }
      if (!v63 || v63 == 37) {
        goto LABEL_331;
      }
      goto LABEL_323;
    }
    int v125 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v125;
    *(_DWORD *)(a1 + 24) = v125;
    if (!sub_248C00(a1))
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
      int v126 = sub_2488C0((_DWORD *)a1);
      if (v126 >= 0) {
        int v127 = v62;
      }
      else {
        int v127 = v126;
      }
      int v63 = v126 >> 31;
      if (v126)
      {
        int v62 = v127;
        int v128 = v126 >> 31;
      }
      else
      {
        int v128 = 44;
      }
      if (!v128) {
        goto LABEL_331;
      }
      if (v128 != 44) {
        goto LABEL_323;
      }
      int v129 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 8) = v129;
      *(_DWORD *)(a1 + 24) = v129;
      if (!sub_249154(a1))
      {
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        int v166 = sub_2491C8(a1);
        int v167 = v166 >= 0 ? v62 : v166;
        int v63 = v166 >> 31;
        if (v166)
        {
          int v62 = v167;
          int v168 = v166 >> 31;
        }
        else
        {
          int v168 = 47;
        }
        if (v168)
        {
          if (v168 != 47) {
            goto LABEL_396;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
          int v169 = sub_249234(a1);
          int v63 = v169 >> 31;
          if (v169 < 0) {
            int v62 = v169;
          }
          if (!v169) {
            int v63 = 48;
          }
          if (v169 <= 0)
          {
LABEL_396:
            if (v63)
            {
              if (v63 == 48)
              {
                int v171 = *(_DWORD *)(a1 + 12);
                *(_DWORD *)(a1 + 8) = v171;
                *(_DWORD *)(a1 + 24) = v171;
                int v172 = sub_248C64(a1);
                if (v172 >= 0) {
                  int v173 = v62;
                }
                else {
                  int v173 = v172;
                }
                int v63 = v172 >> 31;
                if (v172)
                {
                  int v62 = v173;
                  int v174 = v172 >> 31;
                }
                else
                {
                  int v174 = 53;
                }
                if (v174)
                {
                  if (v174 == 53)
                  {
                    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
                    int v175 = sub_248DF4(a1);
                    if (v175 >= 0) {
                      int v176 = v62;
                    }
                    else {
                      int v176 = v175;
                    }
                    if (v175) {
                      int v62 = v176;
                    }
                    else {
                      int v62 = 0;
                    }
                    if (v175 <= 0) {
                      goto LABEL_324;
                    }
                  }
                  else if (v172 < 0)
                  {
                    goto LABEL_323;
                  }
                }
                goto LABEL_277;
              }
              if (v63 != 46) {
                goto LABEL_323;
              }
            }
          }
        }
      }
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v131 = *(_DWORD *)(a1 + 8);
      int v130 = *(_DWORD *)(a1 + 12);
      int v73 = v130 - v131;
      *(_DWORD *)(a1 + 24) = v131;
      int v132 = sub_248C64(a1);
      int v133 = v132 >> 31;
      if (!v132) {
        int v133 = 49;
      }
      if (v133 == 49)
      {
        *(_DWORD *)(a1 + 8) = v131 - v130 + *(_DWORD *)(a1 + 12);
        if (!sub_2482A0(a1)) {
          goto LABEL_410;
        }
      }
      else if (v133)
      {
        if (v132 >= 0) {
          int v170 = v62;
        }
        else {
          int v170 = v132;
        }
        if (v132) {
          int v62 = v170;
        }
        if (v132 < 0) {
          goto LABEL_324;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        uint64_t result = slice_del(a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        int v135 = *(_DWORD *)(a1 + 8);
        int v134 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 24) = v135;
        if (!sub_2482A0(a1)) {
          *(_DWORD *)(a1 + 8) = v135 - v134 + *(_DWORD *)(a1 + 12);
        }
      }
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      uint64_t result = sub_2488C0((_DWORD *)a1);
      if (!result) {
        goto LABEL_410;
      }
LABEL_192:
      if ((result & 0x80000000) != 0) {
        return result;
      }
      goto LABEL_331;
    }
LABEL_191:
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    uint64_t result = slice_del(a1);
    goto LABEL_192;
  }
  if (v101) {
    goto LABEL_323;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  uint64_t result = slice_del(a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
  int v103 = *(_DWORD *)(a1 + 8);
  int v102 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v103;
  int v104 = sub_248C64(a1);
  if (v104 >= 0) {
    int v105 = v62;
  }
  else {
    int v105 = v104;
  }
  if (v104)
  {
    int v62 = v105;
    int v106 = v104 >> 31;
  }
  else
  {
    int v106 = 27;
  }
  if (v106 == 27)
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v102 - v103);
    if (sub_2482A0(a1))
    {
LABEL_146:
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      uint64_t result = slice_del(a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v66 = *(_DWORD *)(a1 + 8);
      int v65 = *(_DWORD *)(a1 + 12);
      uint64_t result = sub_2488C0((_DWORD *)a1);
      if (!result)
      {
        int v67 = v66 - v65;
LABEL_149:
        int v68 = v67 + *(_DWORD *)(a1 + 12);
LABEL_150:
        *(_DWORD *)(a1 + 8) = v68;
        goto LABEL_331;
      }
      goto LABEL_192;
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v102 - v103);
    int v121 = sub_2488C0((_DWORD *)a1);
    if (!v121)
    {
      int v67 = v103 - v102;
      goto LABEL_149;
    }
    int v62 = v121;
    if ((v121 & 0x80000000) == 0 || v121 >= 0)
    {
LABEL_331:
      int v138 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 8) = v138;
      if (eq_s(a1, 2, &unk_34FB0D))
      {
LABEL_334:
        **(_DWORD **)(a1 + 40) = 2;
        if (*(_DWORD *)(a1 + 12) == 2)
        {
LABEL_340:
          insertedouble d = 0;
LABEL_366:
          *(_DWORD *)(a1 + 8) = v138;
          goto LABEL_367;
        }
      }
      else
      {
        while (1)
        {
          int v139 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
          if (v139 < 0) {
            break;
          }
          *(_DWORD *)(a1 + 8) = v139;
          if (eq_s(a1, 2, &unk_34FB0D)) {
            goto LABEL_334;
          }
        }
      }
      int v140 = v138;
      while (1)
      {
        *(_DWORD *)(a1 + 8) = v140;
        if (eq_s(a1, 5, &unk_34FB0F)) {
          break;
        }
        int v140 = skip_utf8(*(void *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
        if (v140 < 0)
        {
          int v141 = *(_DWORD *)(a1 + 12);
          goto LABEL_341;
        }
      }
      **(_DWORD **)(a1 + 40) = 5;
      int v141 = *(_DWORD *)(a1 + 12);
      if (v141 == 5) {
        goto LABEL_340;
      }
LABEL_341:
      *(_DWORD *)(a1 + 16) = v138;
      *(_DWORD *)(a1 + 8) = v141;
      if (eq_s_b(a1, 1, &unk_34FB14)
        || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12), eq_s_b(a1, 1, &unk_34FB15)))
      {
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 1) & 0x80000000) == 0)
        {
          int v144 = *(_DWORD *)(a1 + 8);
          int v143 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_34FB16)
            || (*(_DWORD *)(a1 + 8) = v144 - v143 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 2, &unk_34FB17)))
          {
            int v145 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v145;
            v146 = &unk_34FB19;
            uint64_t v147 = a1;
            int v148 = v145;
            int v149 = v145;
            int v150 = 2;
            goto LABEL_356;
          }
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 1) & 0x80000000) == 0)
        {
          int v152 = *(_DWORD *)(a1 + 8);
          int v151 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_34FB1B)
            || (*(_DWORD *)(a1 + 8) = v152 - v151 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 1, &unk_34FB1C)))
          {
            int v145 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v145;
            v146 = &unk_34FB1D;
LABEL_355:
            uint64_t v147 = a1;
            int v148 = v145;
            int v149 = v145;
            int v150 = 1;
LABEL_356:
            insertedouble d = insert_s(v147, v148, v149, v150, v146);
            *(_DWORD *)(a1 + 8) = v145;
            if (inserted < 0)
            {
LABEL_367:
              if (inserted >= 0) {
                unsigned int v160 = v60;
              }
              else {
                unsigned int v160 = inserted;
              }
              if (!inserted) {
                unsigned int v160 = 0;
              }
              if (inserted >= 1) {
                return 1;
              }
              else {
                return v160;
              }
            }
            goto LABEL_357;
          }
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 1) & 0x80000000) == 0)
        {
          int v154 = *(_DWORD *)(a1 + 8);
          int v153 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_34FB1E)
            || (*(_DWORD *)(a1 + 8) = v154 - v153 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 1, &unk_34FB1F)))
          {
            int v145 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v145;
            v146 = &unk_34FB20;
            goto LABEL_355;
          }
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 1) & 0x80000000) == 0)
        {
          int v162 = *(_DWORD *)(a1 + 8);
          int v161 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 2, &unk_34FB21)
            || (*(_DWORD *)(a1 + 8) = v162 - v161 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 2, &unk_34FB23)))
          {
            int v163 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v163;
            int v164 = insert_s(a1, v163, v163, 2, &unk_34FB25);
            *(_DWORD *)(a1 + 8) = v163;
            insertedouble d = v164 & (v164 >> 31);
            if (inserted < 0 != v165) {
              goto LABEL_367;
            }
          }
        }
      }
LABEL_357:
      int v155 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 8) = v155;
      *(_DWORD *)(a1 + 24) = v155;
      int v156 = find_among_b(a1, (uint64_t)&unk_46B6E0, 4);
      if (v156)
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        switch(v156)
        {
          case 1:
            v157 = &unk_34FB27;
            goto LABEL_363;
          case 2:
            v157 = &unk_34FB28;
            uint64_t v158 = a1;
            int v159 = 2;
            goto LABEL_364;
          case 3:
            v157 = &unk_34FB2A;
            goto LABEL_363;
          case 4:
            v157 = &unk_34FB2B;
LABEL_363:
            uint64_t v158 = a1;
            int v159 = 1;
LABEL_364:
            insertedouble d = slice_from_s(v158, v159, v157);
            if ((inserted & 0x80000000) == 0) {
              break;
            }
            goto LABEL_367;
          default:
            break;
        }
      }
      int v138 = *(_DWORD *)(a1 + 16);
      insertedouble d = 1;
      goto LABEL_366;
    }
  }
  else
  {
    if (!v106) {
      goto LABEL_277;
    }
    if (v104 >= 0) {
      goto LABEL_331;
    }
  }
LABEL_324:
  if (v62 >= 0) {
    unsigned int v137 = v60;
  }
  else {
    unsigned int v137 = v62;
  }
  if (v62) {
    uint64_t v60 = v137;
  }
  else {
    uint64_t v60 = v60;
  }
  uint64_t result = v60;
  if ((v62 & 0x80000000) == 0) {
    goto LABEL_331;
  }
  return result;
}

void *turkish_UTF_8_create_env()
{
  return SN_create_env(0, 1, 1);
}

void turkish_UTF_8_close_env(uint64_t a1)
{
}

uint64_t sub_2480C4(uint64_t a1)
{
  if (!sub_24850C(a1)) {
    return 0;
  }
  uint64_t v2 = *(int *)(a1 + 8);
  if ((int)v2 - 3 <= *(_DWORD *)(a1 + 16)
    || *(unsigned __int8 *)(v2 + *(void *)a1 - 1) != 159
    || !find_among_b(a1, (uint64_t)&unk_46A860, 4))
  {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_248150(uint64_t a1)
{
  if (!sub_24850C(a1) || !find_among_b(a1, (uint64_t)&unk_46A8E0, 32)) {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_2481B4(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8) - 1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(*(void *)a1 + v1);
  if ((v3 & 0xE0) != 0x60 || ((0x6822u >> v3) & 1) == 0 || !find_among_b(a1, (uint64_t)&unk_46ACE0, 8)) {
    return 0;
  }

  return sub_248794(a1);
}

BOOL sub_248244(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  return (int)v1 - 4 > *(_DWORD *)(a1 + 16)
      && *(unsigned char *)(v1 + *(void *)a1 - 1) == 122
      && find_among_b(a1, (uint64_t)&unk_46AE20, 4) != 0;
}

uint64_t sub_2482A0(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    uint64_t v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(unsigned char *)(v3 + *(void *)a1 - 1) == 114
        && find_among_b(a1, (uint64_t)&unk_46AEA0, 2) != 0;
  }
  return result;
}

uint64_t sub_248314(uint64_t a1)
{
  if (!sub_24850C(a1)) {
    return 0;
  }
  uint64_t v2 = *(int *)(a1 + 8) - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)
    || *(unsigned char *)(*(void *)a1 + v2) != 109
    || !find_among_b(a1, (uint64_t)&unk_46AEE0, 4))
  {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_24839C(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    uint64_t v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(unsigned char *)(v3 + *(void *)a1 - 1) == 110
        && find_among_b(a1, (uint64_t)&unk_46AF60, 4) != 0;
  }
  return result;
}

uint64_t sub_248410(uint64_t a1)
{
  if (!sub_24850C(a1)) {
    return 0;
  }
  uint64_t v2 = *(int *)(a1 + 8) - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)
    || *(unsigned char *)(*(void *)a1 + v2) != 122
    || !find_among_b(a1, (uint64_t)&unk_46AFE0, 4))
  {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_248498(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    uint64_t v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(unsigned char *)(v3 + *(void *)a1 - 1) == 114
        && find_among_b(a1, (uint64_t)&unk_46B060, 8) != 0;
  }
  return result;
}

uint64_t sub_24850C(uint64_t a1)
{
  int v3 = *(_DWORD *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 12);
  if ((out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 1) & 0x80000000) != 0) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 12);
  if (eq_s_b(a1, 1, &unk_34F91F))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F920, 97, 305, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  int v6 = v4 - v5;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_34F93B))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F93C, 101, 252, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 2, &unk_34F94F))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F951, 97, 305, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_34F96C))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F96D, 101, 105, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_34F96E))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F96F, 111, 117, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 2, &unk_34F970))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F972, 246, 252, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_34F973))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_34F96F, 111, 117, 1) & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  uint64_t result = eq_s_b(a1, 2, &unk_34F974);
  if (!result) {
    return result;
  }
  if ((out_grouping_b_U(a1, (uint64_t)&unk_34F972, 246, 252, 1) & 0x80000000) != 0) {
    return 0;
  }
LABEL_18:
  *(_DWORD *)(a1 + 8) = v3 - v2 + *(_DWORD *)(a1 + 12);
  return 1;
}

uint64_t sub_248794(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
  if (eq_s_b(a1, 1, &unk_34F988))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 16);
    uint64_t v4 = (*(_DWORD *)(a1 + 12) - v2);
    *(_DWORD *)(a1 + 8) = v4;
    int v5 = skip_utf8(*(void *)a1, v4, v3, 0, -1);
    if ((v5 & 0x80000000) == 0)
    {
      int v6 = v5;
      *(_DWORD *)(a1 + 8) = v5;
      int v7 = *(_DWORD *)(a1 + 12);
      if (!in_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0))
      {
        int v13 = v6 - v7 + *(_DWORD *)(a1 + 12);
        goto LABEL_10;
      }
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v2;
  int v8 = eq_s_b(a1, 1, &unk_34F989);
  uint64_t v9 = (*(_DWORD *)(a1 + 12) - v2);
  *(_DWORD *)(a1 + 8) = v9;
  if (v8) {
    return 0;
  }
  int v11 = skip_utf8(*(void *)a1, v9, *(unsigned int *)(a1 + 16), 0, -1);
  if (v11 < 0) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v11;
  int v12 = in_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0);
  uint64_t result = 0;
  if (!v12)
  {
    int v13 = *(_DWORD *)(a1 + 12) - v2;
LABEL_10:
    *(_DWORD *)(a1 + 8) = v13;
    return 1;
  }
  return result;
}

uint64_t sub_2488C0(_DWORD *a1)
{
  a1[6] = a1[2];
  uint64_t result = eq_s_b((uint64_t)a1, 2, &unk_34FA82);
  if (!result) {
    return result;
  }
  int v4 = a1[2];
  int v3 = a1[3];
  int v5 = sub_249154((uint64_t)a1);
  uint64_t v6 = v5 & (v5 >> 31);
  int v7 = v5 >> 31;
  if (v5) {
    int v8 = v5 >> 31;
  }
  else {
    int v8 = 2;
  }
  if (v8 != 2)
  {
    if (!v8)
    {
      a1[5] = a1[2];
      uint64_t result = slice_del((uint64_t)a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v10 = a1[2];
      int v9 = a1[3];
      a1[6] = v10;
      if (sub_2482A0((uint64_t)a1))
      {
        a1[5] = a1[2];
        uint64_t result = slice_del((uint64_t)a1);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        int v12 = a1[2];
        int v11 = a1[3];
        uint64_t result = sub_2488C0(a1);
        if (!result)
        {
          int v13 = v12 - v11;
LABEL_12:
          int v14 = v13 + a1[3];
LABEL_72:
          a1[2] = v14;
          return 1;
        }
LABEL_50:
        if ((result & 0x80000000) != 0) {
          return result;
        }
        return 1;
      }
      int v28 = v10 - v9;
      a1[2] = a1[3] + v28;
      uint64_t result = sub_248C64((uint64_t)a1);
      if (!result)
      {
        int v14 = a1[3] + v28;
        goto LABEL_72;
      }
      if ((result & 0x80000000) != 0) {
        return result;
      }
LABEL_67:
      a1[5] = a1[2];
      uint64_t result = slice_del((uint64_t)a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      int v33 = a1[2];
      int v34 = a1[3] - v33;
      a1[6] = v33;
      if (!sub_2482A0((uint64_t)a1)) {
        goto LABEL_71;
      }
      a1[5] = a1[2];
      uint64_t result = slice_del((uint64_t)a1);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      uint64_t result = sub_2488C0(a1);
      if (!result)
      {
LABEL_71:
        int v14 = a1[3] - v34;
        goto LABEL_72;
      }
      goto LABEL_50;
    }
    goto LABEL_89;
  }
  a1[2] = a1[3] - (v3 - v4);
  int v15 = sub_249040((uint64_t)a1);
  if (v15 >= 0) {
    unsigned int v16 = v6;
  }
  else {
    unsigned int v16 = v15;
  }
  int v7 = v15 >> 31;
  if (v15) {
    uint64_t v6 = v16;
  }
  else {
    uint64_t v6 = v6;
  }
  if (v15) {
    int v17 = v15 >> 31;
  }
  else {
    int v17 = 9;
  }
  if (v17 == 9)
  {
    a1[2] = a1[3] - (v3 - v4);
    uint64_t result = sub_248F54((uint64_t)a1);
    if (!result) {
      return result;
    }
    int v27 = a1[2];
    int v26 = a1[3];
    if (!sub_248C00((uint64_t)a1))
    {
      int v29 = v26 - v27;
      a1[2] = a1[3] - v29;
      int v30 = sub_248DF4((uint64_t)a1);
      if (v30 >= 0) {
        unsigned int v31 = v6;
      }
      else {
        unsigned int v31 = v30;
      }
      int v7 = v30 >> 31;
      if (v30) {
        uint64_t v6 = v31;
      }
      else {
        uint64_t v6 = v6;
      }
      if (v30) {
        int v32 = v30 >> 31;
      }
      else {
        int v32 = 19;
      }
      if (v32 != 19)
      {
        if (!v32) {
          goto LABEL_67;
        }
        if ((v30 & 0x80000000) == 0) {
          return 1;
        }
        goto LABEL_89;
      }
      a1[2] = a1[3] - v29;
      int v35 = sub_2488C0(a1);
      BOOL v36 = v35 <= 0;
      if (v35 >= 0) {
        unsigned int v37 = v6;
      }
      else {
        unsigned int v37 = v35;
      }
      if (v35) {
        uint64_t result = v37;
      }
      else {
        uint64_t result = 0;
      }
      if (!v36) {
        return 1;
      }
      return result;
    }
LABEL_49:
    a1[5] = a1[2];
    uint64_t result = slice_del((uint64_t)a1);
    goto LABEL_50;
  }
  if (v17) {
    goto LABEL_89;
  }
  a1[5] = a1[2];
  uint64_t result = slice_del((uint64_t)a1);
  if ((result & 0x80000000) != 0) {
    return result;
  }
  int v19 = a1[2];
  int v18 = a1[3];
  a1[6] = v19;
  if (sub_248C00((uint64_t)a1)) {
    goto LABEL_49;
  }
  int v20 = v18 - v19;
  int v21 = a1[3] - (v18 - v19);
  a1[2] = v21;
  a1[6] = v21;
  int v22 = sub_248C64((uint64_t)a1);
  if (v22 >= 0) {
    unsigned int v23 = v6;
  }
  else {
    unsigned int v23 = v22;
  }
  int v7 = v22 >> 31;
  if (v22) {
    uint64_t v6 = v23;
  }
  else {
    uint64_t v6 = v6;
  }
  if (v22) {
    int v24 = v22 >> 31;
  }
  else {
    int v24 = 12;
  }
  if (!v24) {
    goto LABEL_67;
  }
  if (v24 == 12)
  {
    a1[2] = a1[3] - v20;
    int v25 = sub_248DF4((uint64_t)a1);
    int v7 = v25 >> 31;
    uint64_t v6 = v25 >= 0 ? v6 : v25;
    if (!v25) {
      int v7 = 14;
    }
    if (v25 > 0) {
      goto LABEL_67;
    }
  }
  switch(v7)
  {
    case 0:
      goto LABEL_67;
    case 14:
      a1[2] = a1[3] - v20;
      uint64_t v38 = sub_2488C0(a1);
      if (!v38)
      {
        int v13 = v19 - v18;
        goto LABEL_12;
      }
      uint64_t v6 = v38;
      if ((v38 & 0x80000000) == 0) {
        return 1;
      }
      int v7 = v38 >> 31;
      break;
    case 13:
      goto LABEL_67;
  }
  uint64_t result = 1;
  if (v7 && v7 != 11)
  {
LABEL_89:
    uint64_t result = v6;
    if (v7 == 1) {
      return result;
    }
    return 1;
  }
  return result;
}

BOOL sub_248C00(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  if ((int)v1 - 3 > *(_DWORD *)(a1 + 16)
    && ((int v2 = *(unsigned __int8 *)(v1 + *(void *)a1 - 1), v2 == 177) || v2 == 105))
  {
    return find_among_b(a1, (uint64_t)&unk_46B220, 2) != 0;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_248C64(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 8);
  if ((int)v1 <= *(_DWORD *)(a1 + 16)) {
    return 0;
  }
  char v3 = *(unsigned char *)(v1 + *(void *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x4006000u >> v3) & 1) == 0) {
    return 0;
  }
  uint64_t result = find_among_b(a1, (uint64_t)&unk_46B260, 10);
  if (result)
  {
    int v5 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
    if (!in_grouping_b_U(a1, (uint64_t)&unk_34FAB1, 105, 305, 0))
    {
      uint64_t v10 = *(unsigned int *)(a1 + 16);
      uint64_t v11 = (*(_DWORD *)(a1 + 12) - v5);
      *(_DWORD *)(a1 + 8) = v11;
      int v12 = skip_utf8(*(void *)a1, v11, v10, 0, -1);
      if ((v12 & 0x80000000) == 0)
      {
        int v13 = v12;
        *(_DWORD *)(a1 + 8) = v12;
        int v14 = *(_DWORD *)(a1 + 12);
        if (!out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0))
        {
          int v9 = v13 - v14 + *(_DWORD *)(a1 + 12);
          goto LABEL_15;
        }
      }
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v5;
    uint64_t result = in_grouping_b_U(a1, (uint64_t)&unk_34FAB1, 105, 305, 0);
    uint64_t v6 = (*(_DWORD *)(a1 + 12) - v5);
    *(_DWORD *)(a1 + 8) = v6;
    if (result)
    {
      int v7 = skip_utf8(*(void *)a1, v6, *(unsigned int *)(a1 + 16), 0, -1);
      if (v7 < 0) {
        return 0;
      }
      *(_DWORD *)(a1 + 8) = v7;
      int v8 = out_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0);
      uint64_t result = 0;
      if (!v8)
      {
        int v9 = *(_DWORD *)(a1 + 12) - v5;
LABEL_15:
        *(_DWORD *)(a1 + 8) = v9;
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_248DF4(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    int v3 = in_grouping_b_U(a1, (uint64_t)&unk_34FAB1, 105, 305, 0);
    uint64_t result = 0;
    if (!v3)
    {
      int v4 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
      if (eq_s_b(a1, 1, &unk_34FACB))
      {
        uint64_t v5 = *(unsigned int *)(a1 + 16);
        uint64_t v6 = (*(_DWORD *)(a1 + 12) - v4);
        *(_DWORD *)(a1 + 8) = v6;
        int v7 = skip_utf8(*(void *)a1, v6, v5, 0, -1);
        if ((v7 & 0x80000000) == 0)
        {
          int v8 = v7;
          *(_DWORD *)(a1 + 8) = v7;
          int v9 = *(_DWORD *)(a1 + 12);
          if (!in_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0))
          {
            int v14 = v8 - v9 + *(_DWORD *)(a1 + 12);
            goto LABEL_12;
          }
        }
      }
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v4;
      int v10 = eq_s_b(a1, 1, &unk_34FACC);
      uint64_t v11 = (*(_DWORD *)(a1 + 12) - v4);
      *(_DWORD *)(a1 + 8) = v11;
      if (v10) {
        return 0;
      }
      int v12 = skip_utf8(*(void *)a1, v11, *(unsigned int *)(a1 + 16), 0, -1);
      if (v12 < 0) {
        return 0;
      }
      *(_DWORD *)(a1 + 8) = v12;
      int v13 = in_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0);
      uint64_t result = 0;
      if (!v13)
      {
        int v14 = *(_DWORD *)(a1 + 12) - v4;
LABEL_12:
        *(_DWORD *)(a1 + 8) = v14;
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_248F54(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    uint64_t v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && (*(unsigned __int8 *)(v3 + *(void *)a1 - 1) | 4) == 0x65
        && find_among_b(a1, (uint64_t)&unk_46B3A0, 2) != 0;
  }
  return result;
}

uint64_t sub_248FCC(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    uint64_t v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(unsigned char *)(v3 + *(void *)a1 - 1) == 110
        && find_among_b(a1, (uint64_t)&unk_46B4E0, 4) != 0;
  }
  return result;
}

uint64_t sub_249040(uint64_t a1)
{
  if (!sub_24850C(a1)) {
    return 0;
  }
  uint64_t v2 = *(int *)(a1 + 8) - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)
    || *(unsigned char *)(*(void *)a1 + v2) != 110
    || !find_among_b(a1, (uint64_t)&unk_46B560, 4))
  {
    return 0;
  }

  return sub_2492C0(a1);
}

uint64_t sub_2490C8(uint64_t a1)
{
  if (!sub_24850C(a1)) {
    return 0;
  }
  uint64_t v2 = *(int *)(a1 + 8) - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16)
    || (*(unsigned __int8 *)(*(void *)a1 + v2) | 4) != 0x65
    || !find_among_b(a1, (uint64_t)&unk_46B5E0, 2))
  {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_249154(uint64_t a1)
{
  uint64_t result = sub_24850C(a1);
  if (result)
  {
    uint64_t v3 = *(int *)(a1 + 8) - 1;
    return (int)v3 > *(_DWORD *)(a1 + 16)
        && (*(unsigned __int8 *)(*(void *)a1 + v3) | 4) == 0x65
        && find_among_b(a1, (uint64_t)&unk_46B620, 4) != 0;
  }
  return result;
}

uint64_t sub_2491C8(uint64_t a1)
{
  if (!sub_24850C(a1) || in_grouping_b_U(a1, (uint64_t)&unk_34FAB1, 105, 305, 0)) {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_249234(uint64_t a1)
{
  if (!sub_24850C(a1)) {
    return 0;
  }
  uint64_t v2 = *(int *)(a1 + 8);
  if ((int)v2 <= *(_DWORD *)(a1 + 16)
    || (*(unsigned __int8 *)(v2 + *(void *)a1 - 1) | 4) != 0x65
    || !find_among_b(a1, (uint64_t)&unk_46B6A0, 2))
  {
    return 0;
  }

  return sub_248794(a1);
}

uint64_t sub_2492C0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
  if (eq_s_b(a1, 1, &unk_34FA88))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 16);
    uint64_t v4 = (*(_DWORD *)(a1 + 12) - v2);
    *(_DWORD *)(a1 + 8) = v4;
    int v5 = skip_utf8(*(void *)a1, v4, v3, 0, -1);
    if ((v5 & 0x80000000) == 0)
    {
      int v6 = v5;
      *(_DWORD *)(a1 + 8) = v5;
      int v7 = *(_DWORD *)(a1 + 12);
      if (!in_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0))
      {
        int v13 = v6 - v7 + *(_DWORD *)(a1 + 12);
        goto LABEL_10;
      }
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v2;
  int v8 = eq_s_b(a1, 1, &unk_34FA89);
  uint64_t v9 = (*(_DWORD *)(a1 + 12) - v2);
  *(_DWORD *)(a1 + 8) = v9;
  if (v8) {
    return 0;
  }
  int v11 = skip_utf8(*(void *)a1, v9, *(unsigned int *)(a1 + 16), 0, -1);
  if (v11 < 0) {
    return 0;
  }
  *(_DWORD *)(a1 + 8) = v11;
  int v12 = in_grouping_b_U(a1, (uint64_t)&unk_34F904, 97, 305, 0);
  uint64_t result = 0;
  if (!v12)
  {
    int v13 = *(_DWORD *)(a1 + 12) - v2;
LABEL_10:
    *(_DWORD *)(a1 + 8) = v13;
    return 1;
  }
  return result;
}

void sub_2495EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_249604(uint64_t a1, uint64_t a2)
{
}

void sub_249614(uint64_t a1)
{
}

TSLSearchTreeNode *sub_249620(uint64_t a1, TSLSearchTreeNode *a2, unsigned __int16 *a3, void *a4)
{
  int v6 = a2;
  if (!a2) {
    int v6 = [[TSLSearchTreeNode alloc] initWithSplit:*a3];
  }
  unsigned int v8 = *a3;
  unsigned int splitchar = v6->splitchar;
  if (v8 < splitchar)
  {
    uint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v11 = &OBJC_IVAR___TSLSearchTreeNode_low;
LABEL_7:
    int v12 = *(uint64_t (**)(void))(v10 + 16);
    goto LABEL_8;
  }
  if (v8 > splitchar)
  {
    uint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v11 = &OBJC_IVAR___TSLSearchTreeNode_high;
    goto LABEL_7;
  }
  if (!*a3)
  {
    int v13 = a4;
    int v11 = &OBJC_IVAR___TSLSearchTreeNode_value;
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  int v11 = &OBJC_IVAR___TSLSearchTreeNode_equal;
  int v12 = *(uint64_t (**)(void))(v15 + 16);
LABEL_8:
  int v13 = (objc_class *)v12();
LABEL_9:
  *(Class *)((char *)&v6->super.isa + *v11) = v13;
  return v6;
}

uint64_t sub_249BF8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if ([v1 conformsToProtocol:&OBJC_PROTOCOL___TSAccessibilitySpecializer]
    && (objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(objc_msgSend(v1, "specializedClass"), "isSubclassOfClass:", v1);
  }
  uint64_t result = objc_opt_new();
  qword_573828 = result;
  return result;
}

NSString *TSAccessibilityLocalizedString(uint64_t a1)
{
  int v2 = [+[NSBundle bundleForClass:objc_opt_class()] localizedStringForKey:a1 value:&stru_46D7E8 table:@"TSAccessibility"];
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (v2 == (NSString *)a1)
    {
      int ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, @"error: String could not be found for key: %@", v4, v5, v6, v7, v8, a1))abort(); {
    }
      }
  }
  return v2;
}

id TSAccessibilityLocalizedUnsignedInteger(uint64_t a1)
{
  return +[NSNumberFormatter tsaxLocalizedUnsignedInteger:a1];
}

id TSAccessibilityLocalizedNumber(uint64_t a1)
{
  return +[NSNumberFormatter tsaxLocalizedNumber:a1];
}

id TSAccessibilityLocalizedPercent()
{
  return +[NSNumberFormatter tsaxLocalizedPercentage:](NSNumberFormatter, "tsaxLocalizedPercentage:");
}

NSMutableString *__TSAccessibilityStringForVariables(int a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_opt_class();
  objc_opt_class();
  int v11 = +[NSMutableString stringWithString:&stru_46D7E8];
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (objc_opt_isKindOfClass()) {
      a2 = [a2 string];
    }
    else {
      a2 = 0;
    }
  }
  if ([a2 length]) {
    [(NSMutableString *)v11 appendString:a2];
  }
  unsigned int v16 = (id *)&a9;
  if (a1) {
    CFStringRef v12 = @", ";
  }
  else {
    CFStringRef v12 = @" ";
  }
  while (1)
  {
    do
    {
      int v13 = v16++;
      id v14 = *v13;
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (objc_opt_isKindOfClass()) {
          id v14 = [v14 string];
        }
        else {
          id v14 = 0;
        }
      }
    }
    while (![v14 length]);
    if ([v14 isEqualToString:@"__TSAccessibilityStringForVariablesSentinel"]) {
      break;
    }
    if ([(NSMutableString *)v11 length]) {
      [(NSMutableString *)v11 appendString:v12];
    }
    [(NSMutableString *)v11 appendString:v14];
  }
  return v11;
}

id __TSAccessibilityStringForArraysAndVariables(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  id v10 = +[NSMutableString string];
  if (objc_opt_isKindOfClass()) {
    goto LABEL_8;
  }
  if (objc_opt_isKindOfClass())
  {
    id v11 = [a1 string];
  }
  else
  {
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      a1 = 0;
      goto LABEL_8;
    }
    id v11 = [a1 componentsJoinedByString:@", "];
  }
  a1 = v11;
LABEL_8:
  if ([a1 length]) {
    [v10 appendString:a1];
  }
  unsigned int v16 = (void **)&a9;
  while (1)
  {
    do
    {
      CFStringRef v12 = v16++;
      int v13 = *v12;
      if (objc_opt_isKindOfClass()) {
        continue;
      }
      if (objc_opt_isKindOfClass())
      {
        id v14 = [v13 string];
LABEL_16:
        int v13 = v14;
        continue;
      }
      if (objc_opt_isKindOfClass())
      {
        id v14 = [v13 componentsJoinedByString:@", "];
        goto LABEL_16;
      }
      int v13 = 0;
    }
    while (![v13 length]);
    if ([v13 isEqualToString:@"__TSAccessibilityStringForArraysAndVariablesSentinel"])return v10; {
    if ([v10 length])
    }
      [v10 appendString:@", "];
    [v10 appendString:v13];
  }
}

id TSAccessibilityFriendlyFilename(void *a1)
{
  id v1 = [a1 mutableCopy];
  if ([v1 length])
  {
    -[NSRegularExpression replaceMatchesInString:options:range:withTemplate:](+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", @"\\.([a-zA-Z0-9]+)$", 16, 0), "replaceMatchesInString:options:range:withTemplate:", v1, 0, 0, [v1 length], &stru_46D7E8);
    -[NSRegularExpression replaceMatchesInString:options:range:withTemplate:](+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", @"[\\s|\\-|\\_|.]{0,1}2x", 16, 0), "replaceMatchesInString:options:range:withTemplate:", v1, 0, 0, [v1 length], &stru_46D7E8);
    -[NSRegularExpression replaceMatchesInString:options:range:withTemplate:](+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", @"[\\-\\_]+", 0, 0), "replaceMatchesInString:options:range:withTemplate:", v1, 0, 0, [v1 length], @" ");
  }
  return v1;
}

id TSAccessibilityPostAnnouncementNotification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = +[TSAccessibility sharedInstance];
  id result = [(TSAccessibility *)v4 tsaxRespondsToSelector:"handlePostingAnnouncement:sender:priority:" fromExtrasProtocol:&OBJC_PROTOCOL___TSAccessibilityExtras];
  if (result)
  {
    return [(TSAccessibility *)v4 handlePostingAnnouncement:a2 sender:a1 priority:5];
  }
  return result;
}

id TSAccessibilityPostAnnouncementNotificationWithPriority(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = +[TSAccessibility sharedInstance];
  id result = [(TSAccessibility *)v6 tsaxRespondsToSelector:"handlePostingAnnouncement:sender:priority:" fromExtrasProtocol:&OBJC_PROTOCOL___TSAccessibilityExtras];
  if (result)
  {
    return [(TSAccessibility *)v6 handlePostingAnnouncement:a2 sender:a1 priority:a3];
  }
  return result;
}

id TSAccessibilityPostHighPriorityAnnouncementNotification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = +[TSAccessibility sharedInstance];
  id result = [(TSAccessibility *)v4 tsaxRespondsToSelector:"handlePostingAnnouncement:sender:priority:" fromExtrasProtocol:&OBJC_PROTOCOL___TSAccessibilityExtras];
  if (result)
  {
    return [(TSAccessibility *)v4 handlePostingAnnouncement:a2 sender:a1 priority:1];
  }
  return result;
}

void TSAccessibilityPerformBlockOnMainThread(void *a1)
{
  if (+[NSThread isMainThread])
  {
    int v2 = (void (*)(void *))a1[2];
    v2(a1);
  }
  else
  {
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, a1);
  }
}

void TSAccessibilityPerformBlockAsynchronouslyOnMainThread(dispatch_block_t block)
{
}

void TSAccessibilityPerformBlockOnMainThreadAfterDelay(void *a1, double a2)
{
  dispatch_time_t v3 = dispatch_time(0, (uint64_t)(a2 * 1000000000.0));

  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, a1);
}

BOOL TSAccessibilityNearlyEqualSizes(double a1, double a2, double a3, double a4)
{
  BOOL v4 = vabdd_f64(a1, a3) < 0.01;
  return vabdd_f64(a2, a4) < 0.01 && v4;
}

uint64_t TSAccessibilityShouldPerformValidationChecks()
{
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  return byte_573838;
}

uint64_t __TSAccessibilityHandleValidationErrorWithDescription(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LODWORD(v10) = a1;
  id v11 = [objc_alloc((Class)NSString) initWithFormat:a3 arguments:&a9];
  NSLog(@"*** TSAccessibility validation error: %@", v11);
  if (v11) {
    uint64_t v10 = v10;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10 == 1 && a2 != 0)
  {
    if (qword_573868 != -1) {
      dispatch_once(&qword_573868, &stru_46B820);
    }
    uint64_t v10 = 0;
  }

  return v10;
}

uint64_t TSAccessibilityShouldCrashOnValidationErrorAfterLaunch()
{
  if (qword_573860 != -1) {
    dispatch_once(&qword_573860, &stru_46B800);
  }
  return byte_573858;
}

uint64_t __TSAccessibilityPerformSafeBlock(uint64_t a1)
{
  return 0;
}

Class __TSAccessibilityCastAsSafeCategory(void *a1, uint64_t a2, int a3, unsigned char *a4)
{
  if (!a2) {
    return 0;
  }
  uint64_t v8 = (NSString *)[a1 tsaxTargetClassName];
  uint64_t v9 = v8;
  if (a3)
  {
    if (qword_573840 != -1) {
      dispatch_once(&qword_573840, &stru_46B7C0);
    }
    LOBYTE(v10) = 0;
    if (byte_573838 && !v9)
    {
      if (qword_573860 != -1) {
        dispatch_once(&qword_573860, &stru_46B800);
      }
      int v11 = byte_573858;
      CFStringRef v12 = NSStringFromClass((Class)a1);
      int v10 = __TSAccessibilityHandleValidationErrorWithDescription(v11, 0, @"Couldn't find target class name for safe category class %@", v13, v14, v15, v16, v17, (uint64_t)v12);
      if (!a4)
      {
        if (v10) {
          goto LABEL_43;
        }
      }
    }
    if (a4) {
      *a4 = v10;
    }
    if (v9)
    {
      Class v18 = NSClassFromString(v9);
      if (qword_573840 != -1) {
        dispatch_once(&qword_573840, &stru_46B7C0);
      }
      LOBYTE(v19) = 0;
      if (byte_573838 && !v18)
      {
        if (qword_573860 != -1) {
          dispatch_once(&qword_573860, &stru_46B800);
        }
        int v20 = byte_573858;
        NSStringFromClass((Class)a1);
        int v19 = __TSAccessibilityHandleValidationErrorWithDescription(v20, 0, @"Couldn't find target class named %@ for safe category class %@", v21, v22, v23, v24, v25, (uint64_t)v9);
        if (!a4)
        {
          if (v19) {
            goto LABEL_43;
          }
        }
      }
      if (a4) {
        *a4 = v19;
      }
      if (v18)
      {
        char isKindOfClass = objc_opt_isKindOfClass();
        if (qword_573840 != -1) {
          dispatch_once(&qword_573840, &stru_46B7C0);
        }
        if ((byte_573838 == 0) | isKindOfClass & 1)
        {
          LOBYTE(v27) = 0;
LABEL_37:
          if (a4) {
            *a4 = v27;
          }
          goto LABEL_39;
        }
        if (qword_573860 != -1) {
          dispatch_once(&qword_573860, &stru_46B800);
        }
        int v29 = byte_573858;
        int v30 = (objc_class *)objc_opt_class();
        unsigned int v31 = NSStringFromClass(v30);
        NSStringFromClass((Class)a1);
        int v27 = __TSAccessibilityHandleValidationErrorWithDescription(v29, 0, @"Failed to cast object <%@: %p> as safe category %@", v32, v33, v34, v35, v36, (uint64_t)v31);
        if (a4 || !v27) {
          goto LABEL_37;
        }
LABEL_43:
        abort();
      }
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  Class result = NSClassFromString(v8);
  if (!result) {
    return result;
  }
  char isKindOfClass = objc_opt_isKindOfClass();
LABEL_39:
  if (isKindOfClass) {
    return (Class)a2;
  }
  else {
    return 0;
  }
}

uint64_t __TSAccessibilityCastAsClass(objc_class *a1, uint64_t a2, int a3, unsigned char *a4)
{
  if (!a2) {
    return 0;
  }
  char isKindOfClass = objc_opt_isKindOfClass();
  if (a3)
  {
    if (qword_573840 != -1) {
      dispatch_once(&qword_573840, &stru_46B7C0);
    }
    if ((byte_573838 == 0) | isKindOfClass & 1)
    {
      LOBYTE(v9) = 0;
    }
    else
    {
      if (qword_573860 != -1) {
        dispatch_once(&qword_573860, &stru_46B800);
      }
      int v11 = byte_573858;
      CFStringRef v12 = (objc_class *)objc_opt_class();
      uint64_t v13 = NSStringFromClass(v12);
      NSStringFromClass(a1);
      int v9 = __TSAccessibilityHandleValidationErrorWithDescription(v11, 0, @"Failed to cast object <%@: %p> as class %@", v14, v15, v16, v17, v18, (uint64_t)v13);
      if (!a4 && v9) {
        abort();
      }
    }
    if (a4) {
      *a4 = v9;
    }
  }
  if (isKindOfClass) {
    return a2;
  }
  else {
    return 0;
  }
}

void *__TSAccessibilityCastAsProtocol(Protocol *a1, void *a2, int a3, unsigned char *a4)
{
  if (!a2) {
    return 0;
  }
  unsigned int v8 = [a2 conformsToProtocol:a1];
  if (a3)
  {
    if (qword_573840 != -1) {
      dispatch_once(&qword_573840, &stru_46B7C0);
    }
    if (byte_573838) {
      char v9 = v8;
    }
    else {
      char v9 = 1;
    }
    if (v9)
    {
      LOBYTE(v10) = 0;
    }
    else
    {
      if (qword_573860 != -1) {
        dispatch_once(&qword_573860, &stru_46B800);
      }
      int v12 = byte_573858;
      uint64_t v13 = (objc_class *)objc_opt_class();
      uint64_t v14 = NSStringFromClass(v13);
      NSStringFromProtocol(a1);
      int v10 = __TSAccessibilityHandleValidationErrorWithDescription(v12, 0, @"Failed to cast object <%@: %p> as protocol %@", v15, v16, v17, v18, v19, (uint64_t)v14);
      if (!a4 && v10) {
        abort();
      }
    }
    if (a4) {
      *a4 = v10;
    }
  }
  if (v8) {
    return a2;
  }
  else {
    return 0;
  }
}

void TSAccessibilityInstallSafeCategory(NSString *a1)
{
  Class v7 = NSClassFromString(a1);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Failed installing safe category: %@ does not exist in runtime.", v2, v3, v4, v5, v6, (uint64_t)a1))abort(); {
  }
    }
  else if (v7)
  {
    [(objc_class *)v7 performSelector:"_tsaxInitializeSafeCategory"];
  }
}

uint64_t TSAccessibilityShouldCrashOnValidationError()
{
  if (qword_573850 != -1) {
    dispatch_once(&qword_573850, &stru_46B7E0);
  }
  return byte_573848;
}

void TSAccessibilityInstallSafeCategories(void *a1)
{
  id v1 = a1;
  id v2 = [a1 count];
  if (v2)
  {
    __base = (char *)malloc_type_malloc(40 * (void)v2, 0x800402FCC0CB6uLL);
    if (__base)
    {
      long long v40 = 0u;
      long long v41 = 0u;
      long long v38 = 0u;
      long long v39 = 0u;
      id v3 = [v1 countByEnumeratingWithState:&v38 objects:v42 count:16];
      if (v3)
      {
        id v4 = v3;
        size_t v5 = 0;
        uint64_t v6 = &unk_573000;
        Class v7 = &unk_573000;
        BOOL v8 = &unk_573000;
        uint64_t v9 = *(void *)v39;
        uint64_t v35 = *(void *)v39;
        do
        {
          int v10 = 0;
          id v36 = v4;
          do
          {
            if (*(void *)v39 != v9) {
              objc_enumerationMutation(v1);
            }
            int v11 = *(NSString **)(*((void *)&v38 + 1) + 8 * (void)v10);
            Class v17 = NSClassFromString(v11);
            if (v6[264] != -1) {
              dispatch_once(&qword_573840, &stru_46B7C0);
            }
            if (!v7[2104] || v17)
            {
              if (v17)
              {
                uint64_t v18 = v8;
                uint64_t v19 = v7;
                int v20 = (NSString *)[(objc_class *)v17 tsaxTargetClassName];
                Class v26 = NSClassFromString(v20);
                if (v6[264] != -1) {
                  dispatch_once(&qword_573840, &stru_46B7C0);
                }
                if (!v19[2104] || v26)
                {
                  if (v26)
                  {
                    int v27 = v1;
                    size_t v28 = v5;
                    int v29 = (Class *)&__base[40 * v5];
                    *int v29 = v17;
                    v29[1] = (Class)v11;
                    void v29[2] = (Class)sub_24F224(v17, (uint64_t)v11);
                    v29[3] = v26;
                    v29[4] = (Class)sub_24F224(v26, (uint64_t)v20);
                    size_t v5 = v28 + 1;
                    id v1 = v27;
                    uint64_t v6 = (void *)&unk_573000;
                  }
                  Class v7 = v19;
                  BOOL v8 = v18;
                  uint64_t v9 = v35;
                  id v4 = v36;
                }
                else
                {
                  BOOL v8 = v18;
                  if (v18[266] != -1) {
                    dispatch_once(&qword_573850, &stru_46B7E0);
                  }
                  id v4 = v36;
                  Class v7 = v19;
                  uint64_t v9 = v35;
                  if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Failed installing %@ on %@. %@ does not exist in runtime.", v21, v22, v23, v24, v25, (uint64_t)v11))LABEL_37:abort(); {
                }
                  }
              }
            }
            else
            {
              if (v8[266] != -1) {
                dispatch_once(&qword_573850, &stru_46B7E0);
              }
              if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Failed installing safe category: %@ does not exist in runtime.", v12, v13, v14, v15, v16, (uint64_t)v11))goto LABEL_37; {
            }
              }
            int v10 = (char *)v10 + 1;
          }
          while (v4 != v10);
          id v4 = [v1 countByEnumeratingWithState:&v38 objects:v42 count:16];
        }
        while (v4);
      }
      else
      {
        size_t v5 = 0;
      }
      int v30 = objc_opt_new();
      unsigned int v31 = objc_opt_new();
      uint64_t v32 = objc_opt_new();
      __compar[0] = _NSConcreteStackBlock;
      __compar[1] = 3221225472;
      __compar[2] = sub_24F2BC;
      __compar[3] = &unk_46B7A0;
      __compar[4] = v30;
      __compar[5] = v31;
      __compar[6] = v32;
      qsort_b(__base, v5, 0x28uLL, __compar);

      if (v5)
      {
        uint64_t v33 = (id *)(__base + 16);
        do
        {
          [*(v33 - 2) _tsaxInstallSafeCategoryOnClass:v33[1]];

          v33 += 5;
          --v5;
        }
        while (v5);
      }
      free(__base);
    }
  }
}

id sub_24F224(void *a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSMutableString) initWithString:a2];
  id v4 = (objc_class *)[a1 superclass];
  if (v4)
  {
    size_t v5 = v4;
    do
    {
      [v3 insertString:@"," atIndex:0];
      [v3 insertString:NSStringFromClass(v5) atIndex:0];
      size_t v5 = (objc_class *)[(objc_class *)v5 superclass];
    }
    while (v5);
  }
  return v3;
}

uint64_t sub_24F2BC(void **a1, void **a2, uint64_t a3)
{
  uint64_t result = (uint64_t)[a2[4] compare:*(void *)(a3 + 32)];
  if (!result)
  {
    if (sub_24F348(a2, a3, a1[4], a1[5], a1[6]))
    {
      return 1;
    }
    else if (sub_24F348((void **)a3, (uint64_t)a2, a1[4], a1[5], a1[6]))
    {
      return -1;
    }
    else
    {
      return (uint64_t)[a2[2] compare:*(void *)(a3 + 16)];
    }
  }
  return result;
}

uint64_t sub_24F348(void **a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  sub_251684(*a1, a3, a4, a5);
  char v9 = 0;
  while ([a3 count])
  {
    int v10 = (NSString *)[a3 objectAtIndex:0];
    [a3 removeObjectAtIndex:0];
    [a5 addObject:v10];
    if ([(NSString *)v10 isEqualToString:*(void *)(a2 + 8)])
    {
      [a3 removeAllObjects];
      char v9 = 1;
    }
    else
    {
      Class v11 = NSClassFromString(v10);
      sub_251684(v11, a3, a4, a5);
    }
  }
  [a5 removeAllObjects];
  return v9 & 1;
}

void sub_24F9A8(id a1)
{
  if (!byte_573838)
  {
    CFStringRef v1 = (const __CFString *)sub_24FA2C();
    int AppBooleanValue = CFPreferencesGetAppBooleanValue(@"ReportValidationErrors", v1, 0);
    byte_573838 = AppBooleanValue != 0;
    if (!AppBooleanValue)
    {
      if (qword_573850 != -1) {
        dispatch_once(&qword_573850, &stru_46B7E0);
      }
      byte_573838 = byte_573848;
    }
  }
}

id sub_24FA2C()
{
  double v0 = +[TSAccessibility sharedInstance];
  if (![(TSAccessibility *)v0 _tsaxRespondsToSelector:"preferencesDomain" fromExtrasProtocol:&OBJC_PROTOCOL___TSAccessibilityExtras skipAssertions:1])return 0; {

  }
  return [(TSAccessibility *)v0 preferencesDomain];
}

void sub_24FA98(id a1)
{
  if (!byte_573848)
  {
    CFStringRef v1 = (const __CFString *)sub_24FA2C();
    byte_573848 = CFPreferencesGetAppBooleanValue(@"CrashOnValidationErrors", v1, 0) != 0;
  }
}

void sub_24FAE4(id a1)
{
  if (qword_573850 != -1) {
    dispatch_once(&qword_573850, &stru_46B7E0);
  }
  byte_573858 = byte_573848;
}

void sub_24FB30(id a1)
{
}

void sub_24FB44(id a1)
{
}

void __TSAccessibilityValidateMethodSignature(uint64_t a1, int a2, int a3, Method m, const char *a5, const char **a6)
{
  if (m)
  {
    char v9 = method_copyReturnType(m);
    if (qword_573840 != -1) {
      dispatch_once(&qword_573840, &stru_46B7C0);
    }
    if (byte_573838 && !sub_24FDFC(a5, v9))
    {
      if (qword_573850 != -1) {
        dispatch_once(&qword_573850, &stru_46B7E0);
      }
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Return type is different for method: -[%@ %@]. Actual: %s, Stated: %s", v10, v11, v12, v13, v14, a1))goto LABEL_35; {
    }
      }
    if (v9) {
      free(v9);
    }
    unsigned int NumberOfArguments = method_getNumberOfArguments(m);
    unsigned int v21 = NumberOfArguments - 2;
    if (NumberOfArguments == 2)
    {
      unsigned int v27 = 0;
    }
    else
    {
      unsigned int v22 = NumberOfArguments;
      unsigned int v28 = NumberOfArguments - 2;
      unsigned int v23 = 2;
      while (1)
      {
        uint64_t v24 = a6++;
        uint64_t v25 = *v24;
        if (!*v24) {
          break;
        }
        Class v26 = method_copyArgumentType(m, v23);
        if (qword_573840 != -1) {
          dispatch_once(&qword_573840, &stru_46B7C0);
        }
        if (byte_573838 && !sub_24FDFC(v25, v26))
        {
          if (qword_573850 != -1) {
            dispatch_once(&qword_573850, &stru_46B7E0);
          }
          if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Argument type is different for method: -[%@ %@]. Actual: %s, Stated: %s", v16, v17, v18, v19, v20, a1))goto LABEL_35; {
        }
          }
        if (v26) {
          free(v26);
        }
        if (v22 == ++v23)
        {
          unsigned int v21 = v28;
          unsigned int v27 = v28;
          goto LABEL_27;
        }
      }
      unsigned int v27 = v23 - 2;
      unsigned int v21 = v28;
    }
LABEL_27:
    if (qword_573840 != -1) {
      dispatch_once(&qword_573840, &stru_46B7C0);
    }
    if (v21 != v27 && byte_573838)
    {
      if (qword_573850 != -1) {
        dispatch_once(&qword_573850, &stru_46B7E0);
      }
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Argument count is different for method: -[%@ %@]. Actual: %u, Stated: %u", v16, v17, v18, v19, v20, a1))LABEL_35:abort(); {
    }
      }
  }
}

BOOL sub_24FDFC(const char *a1, char *__s2)
{
  BOOL v2 = 0;
  if (a1 && __s2)
  {
    if (!strcmp(a1, __s2))
    {
      return 1;
    }
    else
    {
      id v5 = [objc_alloc((Class)NSString) initWithFormat:@"@\"%s\"" a1];
      uint64_t v6 = v5;
      if (v5) {
        BOOL v2 = strcmp((const char *)[v5 UTF8String], __s2) == 0;
      }
      else {
        BOOL v2 = 0;
      }
    }
  }
  return v2;
}

void __TSAccessibilityValidateSymbol(char *__symbol)
{
  if (!dlsym(&dword_8, __symbol))
  {
    Class v7 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, __symbol);
    if (qword_573840 != -1) {
      dispatch_once(&qword_573840, &stru_46B7C0);
    }
    if (byte_573838 && !v7)
    {
      if (qword_573850 != -1) {
        dispatch_once(&qword_573850, &stru_46B7E0);
      }
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Symbol not present: %s", v2, v3, v4, v5, v6, (uint64_t)__symbol))abort(); {
    }
      }
  }
}

void __TSAccessibilityValidateClassMethod(NSString *a1, NSString *a2)
{
  uint64_t v4 = NSClassFromString(a1);
  uint64_t v5 = NSSelectorFromString(a2);
  ClassMethodouble d = class_getClassMethod(v4, v5);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !ClassMethod)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ Class method not present: %@", v6, v7, v8, v9, v10, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateClassMethodComplete(NSString *a1, NSString *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  uint64_t v17 = NSClassFromString(a1);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    BOOL v18 = v17 == 0;
  }
  else {
    BOOL v18 = 0;
  }
  if (v18)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Class missing: %@", v12, v13, v14, v15, v16, (uint64_t)a1))goto LABEL_19; {
  }
    }
  uint64_t v19 = NSSelectorFromString(a2);
  ClassMethodouble d = class_getClassMethod(v17, v19);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !ClassMethod)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Class method missing: -[%@ %@]", v21, v22, v23, v24, v25, (uint64_t)a1))LABEL_19:abort(); {
  }
    }
  __TSAccessibilityValidateMethodSignature((uint64_t)a1, v20, (int)a2, ClassMethod, a3, &a9);
}

void __TSAccessibilityValidateIsKindOfClass(NSString *a1, NSString *a2)
{
  uint64_t v4 = NSClassFromString(a1);
  Class v5 = NSClassFromString(a2);
  BOOL v11 = 0;
  if (v4)
  {
    uint64_t v12 = v5;
    if (v5)
    {
      do
      {
        Class Superclass = class_getSuperclass(v4);
        BOOL v11 = Superclass == v12;
        if (!Superclass) {
          break;
        }
        uint64_t v4 = Superclass;
      }
      while (Superclass != v12);
    }
  }
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    char v14 = v11;
  }
  else {
    char v14 = 1;
  }
  if ((v14 & 1) == 0)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ is not a kind of %@", v6, v7, v8, v9, v10, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateIvarType(NSString *a1, const char *a2, const char *a3)
{
  uint64_t v6 = NSClassFromString(a1);
  InstanceVariable = class_getInstanceVariable(v6, a2);
  TypeEncoding = (char *)ivar_getTypeEncoding(InstanceVariable);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !sub_24FDFC(a3, TypeEncoding))
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ : Ivar is not the right type: %s [Should be: %s was: %s]", v9, v10, v11, v12, v13, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateInstanceMethod(NSString *a1, NSString *a2)
{
  uint64_t v4 = NSClassFromString(a1);
  Class v5 = NSSelectorFromString(a2);
  InstanceMethodouble d = class_getInstanceMethod(v4, v5);
  unsigned int outCount = 0;
  uint64_t v7 = class_copyMethodList(v4, &outCount);
  if (v7)
  {
    if (outCount)
    {
      unint64_t v13 = 0;
      do
      {
        char v14 = v7[v13];
        BOOL v15 = v14 == InstanceMethod;
        ++v13;
      }
      while (v13 < outCount && v14 != InstanceMethod);
    }
    else
    {
      BOOL v15 = 0;
    }
    free(v7);
  }
  else
  {
    BOOL v15 = 0;
  }
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    char v16 = v15;
  }
  else {
    char v16 = 1;
  }
  if ((v16 & 1) == 0)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ Instance method not present: %@", v8, v9, v10, v11, v12, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateInstanceMethodComplete(NSString *a1, NSString *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  uint64_t v17 = NSClassFromString(a1);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    BOOL v18 = v17 == 0;
  }
  else {
    BOOL v18 = 0;
  }
  if (v18)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Class missing: %@", v12, v13, v14, v15, v16, (uint64_t)a1))goto LABEL_19; {
  }
    }
  uint64_t v19 = NSSelectorFromString(a2);
  InstanceMethodouble d = class_getInstanceMethod(v17, v19);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !InstanceMethod)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Instance method missing: -[%@ %@]", v21, v22, v23, v24, v25, (uint64_t)a1))LABEL_19:abort(); {
  }
    }
  __TSAccessibilityValidateMethodSignature((uint64_t)a1, v20, (int)a2, InstanceMethod, a3, &a9);
}

void __TSAccessibilityValidateProperty(NSString *a1, const char *a2)
{
  uint64_t v9 = NSClassFromString(a1);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    BOOL v10 = v9 == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Class missing: %@", v4, v5, v6, v7, v8, (uint64_t)a1))goto LABEL_19; {
  }
    }
  PropertCGFloat y = class_getProperty(v9, a2);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !Property)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Property missing: %@.%s", v11, v12, v13, v14, v15, (uint64_t)a1))LABEL_19:abort(); {
  }
    }
}

void __TSAccessibilityValidateClass(NSString *a1)
{
  uint64_t v2 = NSClassFromString(a1);
  Name = class_getName(v2);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !strcmp(Name, "nil"))
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"Class not present: %@", v4, v5, v6, v7, v8, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateIvar(NSString *a1, const char *a2)
{
  uint64_t v4 = NSClassFromString(a1);
  Ivar InstanceVariable = class_getInstanceVariable(v4, a2);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    BOOL v11 = InstanceVariable == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ : Ivar not present: %s", v5, v6, v7, v8, v9, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateProtocolProperty(NSString *a1, const char *a2)
{
  uint64_t v4 = NSProtocolFromString(a1);
  PropertCGFloat y = protocol_getProperty(v4, a2, 0, 1);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838) {
    BOOL v11 = Property == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ Protocol property not present: %s", v5, v6, v7, v8, v9, (uint64_t)a1))abort(); {
  }
    }
}

void __TSAccessibilityValidateProtocolMethod(NSString *a1, NSString *a2, BOOL a3, BOOL a4)
{
  uint64_t v8 = NSProtocolFromString(a1);
  uint64_t v9 = NSSelectorFromString(a2);
  SEL name = protocol_getMethodDescription(v8, v9, a3, a4).name;
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && !name)
  {
    if (qword_573850 != -1) {
      dispatch_once(&qword_573850, &stru_46B7E0);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573848, 1, @"%@ Protocol %@ %@ method not present: %@", v10, v11, v12, v13, v14, (uint64_t)a1))abort(); {
  }
    }
}

uint64_t __TSAccessibilityValidateBlockSignature(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v52 = a2;
  uint64_t v12 = &unk_573000;
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  uint64_t v13 = &unk_573000;
  if (byte_573838 && !v52)
  {
    if (qword_573860 != -1) {
      dispatch_once(&qword_573860, &stru_46B800);
    }
    uint64_t v14 = __TSAccessibilityHandleValidationErrorWithDescription(byte_573858, 0, @"Reference block is NULL.", a4, a5, a6, a7, a8, v45);
    if (!a1) {
      return v14;
    }
  }
  else
  {
    uint64_t v14 = 0;
    if (!a1) {
      return v14;
    }
  }
  if (!v52) {
    return v14;
  }
  int v15 = *(_DWORD *)(a1 + 8);
  int v16 = *(_DWORD *)(v52 + 8);
  if (qword_573840 != -1) {
    dispatch_once(&qword_573840, &stru_46B7C0);
  }
  if (byte_573838 && (v15 & 0x40000000) == 0)
  {
    if (qword_573860 != -1) {
      dispatch_once(&qword_573860, &stru_46B800);
    }
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573858, 0, @"block has no signature.", a4, a5, a6, a7, a8, v45))return 1; {
    if (qword_573840 != -1)
    }
      dispatch_once(&qword_573840, &stru_46B7C0);
  }
  int v17 = v16 & 0x40000000;
  if (!byte_573838 || v17)
  {
    uint64_t v14 = 0;
    if ((v15 & 0x40000000) == 0 || !v17) {
      return v14;
    }
    int v21 = *(_DWORD *)(a1 + 8);
    int v22 = *(_DWORD *)(v52 + 8);
    uint64_t v23 = *(void *)(a1 + 24);
    uint64_t v24 = *(void *)(v52 + 24);
    if (byte_573838 && !v23)
    {
      if (qword_573860 != -1) {
        dispatch_once(&qword_573860, &stru_46B800);
      }
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_573858, 0, @"block literal has no descriptor.", a4, a5, a6, a7, a8, v45))return 1; {
      if (qword_573840 != -1)
      }
        dispatch_once(&qword_573840, &stru_46B7C0);
    }
    if (!byte_573838 || v24)
    {
      uint64_t v14 = 0;
      if (v23 && v24)
      {
        uint64_t v25 = 32;
        if ((v21 & 0x2000000) != 0) {
          uint64_t v26 = 32;
        }
        else {
          uint64_t v26 = 16;
        }
        unsigned int v27 = *(const char **)(v23 + v26);
        if ((v22 & 0x2000000) == 0) {
          uint64_t v25 = 16;
        }
        unsigned int v28 = *(const char **)(v24 + v25);
        if ([a3 isEqual:objc_opt_class()])
        {
          int v29 = 0;
        }
        else
        {
          int v29 = objc_opt_new();
          if ([a3 isSubclassOfClass:objc_opt_class()]) {
            [v29 addObject:a3];
          }
          int v51 = (void **)&a10;
          for (uint64_t i = (void *)a9; ([i isEqual:objc_opt_class()] & 1) == 0; uint64_t i = *v39)
          {
            if ([i isSubclassOfClass:objc_opt_class()]) {
              [v29 addObject:i];
            }
            long long v39 = v51++;
          }
        }
        if ([v29 count])
        {
          int v46 = v27;
          id v30 = [objc_alloc((Class)NSMutableString) initWithUTF8String:v28];
          long long v47 = 0u;
          long long v48 = 0u;
          long long v49 = 0u;
          long long v50 = 0u;
          id v31 = [v29 countByEnumeratingWithState:&v47 objects:v53 count:16];
          if (v31)
          {
            id v32 = v31;
            uint64_t v33 = *(void *)v48;
            do
            {
              for (uint64_t j = 0; j != v32; uint64_t j = (char *)j + 1)
              {
                if (*(void *)v48 != v33) {
                  objc_enumerationMutation(v29);
                }
                uint64_t v35 = *(objc_class **)(*((void *)&v47 + 1) + 8 * (void)j);
                id v36 = [objc_alloc((Class)NSString) initWithFormat:@"@\"%s\"", class_getName(v35)];
                id v37 = [objc_alloc((Class)NSString) initWithFormat:@"@\"%@\"", -[objc_class tsaxTargetClassName](v35, "tsaxTargetClassName")];
                [v30 replaceOccurrencesOfString:v36 withString:v37 options:0 range:[v30 length]];
              }
              id v32 = [v29 countByEnumeratingWithState:&v47 objects:v53 count:16];
            }
            while (v32);
          }
          unsigned int v28 = (const char *)[v30 UTF8String];
          uint64_t v12 = (void *)&unk_573000;
          uint64_t v13 = (unsigned char *)&unk_573000;
          unsigned int v27 = v46;
        }
        else
        {
          id v30 = 0;
        }

        if (v12[264] != -1) {
          dispatch_once(&qword_573840, &stru_46B7C0);
        }
        if (!v13[2104] || !strcmp(v27, v28))
        {
          uint64_t v14 = 0;
        }
        else
        {
          if (qword_573860 != -1) {
            dispatch_once(&qword_573860, &stru_46B800);
          }
          uint64_t v14 = __TSAccessibilityHandleValidationErrorWithDescription(byte_573858, 0, @"Signature mismatch for block: '%s'; reference signature: '%s'",
                  v40,
                  v41,
                  v42,
                  v43,
                  v44,
                  (uint64_t)v27);
        }
      }
      return v14;
    }
    if (qword_573860 != -1) {
      dispatch_once(&qword_573860, &stru_46B800);
    }
    int v18 = byte_573858;
    CFStringRef v19 = @"reference block literal has no descriptor.";
  }
  else
  {
    if (qword_573860 != -1) {
      dispatch_once(&qword_573860, &stru_46B800);
    }
    int v18 = byte_573858;
    CFStringRef v19 = @"reference block has no signature.";
  }

  return __TSAccessibilityHandleValidationErrorWithDescription(v18, 0, (uint64_t)v19, a4, a5, a6, a7, a8, a9);
}

objc_ivar *__tsax_verbose_encode_with_type_encoding_group_class(objc_class *a1, const char *a2)
{
  uint64_t result = class_getInstanceVariable(a1, a2);
  if (result)
  {
    return (objc_ivar *)ivar_getTypeEncoding(result);
  }
  return result;
}

void __TSAccessibilitySetAssociatedObject(void *a1, const void *a2, void *a3)
{
}

void __TSAccessibilitySetAssociatedNonRetainedObject(void *a1, const void *a2, void *a3)
{
}

void __TSAccessibilitySetAssociatedCopiedObject(void *a1, const void *a2, void *a3)
{
}

id __TSAccessibilityGetAssociatedBool(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);

  return [AssociatedObject BOOLValue];
}

void __TSAccessibilitySetAssociatedBool(void *a1, const void *a2, int a3)
{
  if (a3) {
    uint64_t v5 = +[NSNumber numberWithBool:1];
  }
  else {
    uint64_t v5 = 0;
  }

  objc_setAssociatedObject(a1, a2, v5, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedInteger(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);

  return [AssociatedObject integerValue];
}

void __TSAccessibilitySetAssociatedInteger(id object, void *key, NSNumber *a3)
{
  if (a3) {
    a3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:");
  }

  objc_setAssociatedObject(object, key, a3, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedUnsignedInteger(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);

  return [AssociatedObject unsignedIntegerValue];
}

void __TSAccessibilitySetAssociatedUnsignedInteger(id object, void *key, id a3)
{
  if (a3) {
    a3 = [objc_alloc((Class)NSNumber) initWithUnsignedInteger:a3];
  }
  id v5 = a3;
  objc_setAssociatedObject(object, key, a3, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedRange(void *a1, const void *a2)
{
  id result = objc_getAssociatedObject(a1, a2);
  if (result)
  {
    return [result rangeValue];
  }
  return result;
}

void __TSAccessibilitySetAssociatedRange(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a3 | a4) {
    uint64_t v6 = +[NSValue valueWithRange:](NSValue, "valueWithRange:");
  }
  else {
    uint64_t v6 = 0;
  }

  objc_setAssociatedObject(a1, a2, v6, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedTimeInterval(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);

  return [AssociatedObject doubleValue];
}

void __TSAccessibilitySetAssociatedTimeInterval(void *a1, const void *a2, double a3)
{
  if (a3 == 0.0) {
    id v5 = 0;
  }
  else {
    id v5 = [objc_alloc((Class)NSNumber) initWithDouble:a3];
  }
  id v6 = v5;
  objc_setAssociatedObject(a1, a2, v5, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedCGFloat(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);

  return [AssociatedObject doubleValue];
}

void __TSAccessibilitySetAssociatedCGFloat(void *a1, const void *a2, double a3)
{
  if (a3 == 0.0) {
    id v5 = 0;
  }
  else {
    id v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  }

  objc_setAssociatedObject(a1, a2, v5, (char *)&dword_0 + 1);
}

CGFloat __TSAccessibilityGetAssociatedCGPoint(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);
  if (!AssociatedObject) {
    return CGPointZero.x;
  }
  [AssociatedObject CGPointValue];
  return result;
}

void __TSAccessibilitySetAssociatedCGPoint(void *a1, const void *a2, double a3, double a4)
{
  if (a3 == CGPointZero.x && a4 == CGPointZero.y) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = +[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:");
  }

  objc_setAssociatedObject(a1, a2, v7, (char *)&dword_0 + 1);
}

CGFloat __TSAccessibilityGetAssociatedCGRect(void *a1, const void *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, a2);
  if (!AssociatedObject) {
    return CGRectZero.origin.x;
  }
  [AssociatedObject CGRectValue];
  return result;
}

void __TSAccessibilitySetAssociatedCGRect(void *a1, const void *a2, double a3, double a4, double a5, double a6)
{
  v14.origin.CGFloat x = CGRectZero.origin.x;
  v14.origin.CGFloat y = CGRectZero.origin.y;
  v14.size.CGFloat width = CGRectZero.size.width;
  v14.size.CGFloat height = CGRectZero.size.height;
  if (CGRectEqualToRect(*(CGRect *)&a3, v14)) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = +[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:", a3, a4, a5, a6);
  }

  objc_setAssociatedObject(a1, a2, v12, (char *)&dword_0 + 1);
}

id sub_251684(void *a1, void *a2, void *a3, void *a4)
{
  [a1 tsaxAddSafeCategoryDependenciesToCollection:];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = [a3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(a3);
        }
        uint64_t v11 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        if (([a4 containsObject:v11] & 1) == 0
          && ([a2 containsObject:v11] & 1) == 0)
        {
          [a2 addObject:v11];
        }
      }
      id v8 = [a3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }
  return [a3 removeAllObjects];
}

void sub_2525CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2525E4(uint64_t a1, uint64_t a2)
{
}

void sub_2525F4(uint64_t a1)
{
}

id sub_252600(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) isEqual:];
  if (result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = a2;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_253050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_2530BC(a2, *(void *)(a1 + 32));
  unint64_t v7 = v6;
  unint64_t v8 = sub_2530BC(a3, *(void *)(a1 + 32));
  uint64_t v10 = -1;
  if (v5 < v8) {
    uint64_t v11 = -1;
  }
  else {
    uint64_t v11 = 1;
  }
  if (v5 == v8) {
    uint64_t v11 = 0;
  }
  if (v7 >= v9) {
    uint64_t v10 = 1;
  }
  if (v7 == v9) {
    return v11;
  }
  else {
    return v10;
  }
}

uint64_t sub_2530BC(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 2;
  }
  LOBYTE(v8) = 0;
  uint64_t v3 = objc_opt_class();
  Class v4 = __TSAccessibilityCastAsSafeCategory(v3, a1, 1, &v8);
  if ((_BYTE)v8) {
    abort();
  }
  uint64_t v8 = 0;
  unint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  uint64_t v11 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_2532E4;
  v7[3] = &unk_4573D8;
  void v7[4] = v4;
  v7[5] = &v8;
  if (__TSAccessibilityPerformSafeBlock((uint64_t)v7)) {
    abort();
  }
  unint64_t v5 = v9[3];
  _Block_object_dispose(&v8, 8);
  if (v5 <= 9)
  {
    if (((1 << v5) & 0x92) != 0) {
      return 1;
    }
    if (((1 << v5) & 0x124) == 0)
    {
      if (((1 << v5) & 0x248) != 0) {
        return 3;
      }
      return 0;
    }
    return 2;
  }
  return 0;
}

void sub_253224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2532E4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) knobTag];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_253650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_253668(uint64_t a1, uint64_t a2)
{
}

void sub_253678(uint64_t a1)
{
}

id sub_253684(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_repsForStorage:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_253C38(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) _isCancelled];
  if ([*(id *)(a1 + 32) _dispatchTimer])
  {
    unsigned int v3 = [*(id *)(a1 + 32) automaticallyCancelPendingBlockUponSchedulingNewBlock];
    Class v4 = *(void **)(a1 + 32);
    if (!v3)
    {
      NSLog(@"[warning]: %@: Ignoring block scheduled for execution %.2f seconds from now.", v4, *(void *)(a1 + 48));
      return;
    }
    [v4 _reallyCancel];
  }
  if ((v2 & 1) == 0)
  {
    unint64_t v5 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, (dispatch_queue_t)[*(id *)(a1 + 32) _dispatchQueue]);
    dispatch_time_t v6 = dispatch_time(0, (uint64_t)(*(double *)(a1 + 48) * 1000000000.0));
    dispatch_source_set_timer(v5, v6, 0xFFFFFFFFFFFFFFFFLL, 0);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_253D78;
    handler[3] = &unk_4572A0;
    long long v8 = *(_OWORD *)(a1 + 32);
    dispatch_source_set_event_handler(v5, handler);
    dispatch_resume(v5);
    [*(id *)(a1 + 32) _setDispatchTimer:v5];
    dispatch_release(v5);
  }
}

id sub_253D78(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  unsigned __int8 v2 = *(void **)(a1 + 32);

  return [v2 _reallyCancel];
}

id sub_253E94(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reallyCancel];
}

void sub_254B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_254B78(uint64_t a1, uint64_t a2)
{
}

void sub_254B88(uint64_t a1)
{
}

id sub_254B94(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) knobForTag:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_254E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_254EA4(uint64_t a1)
{
  [*(id *)(a1 + 32) transformToConvertNaturalFromLayerRelative];
  unsigned __int8 v2 = *(_OWORD **)(*(void *)(a1 + 40) + 8);
  __n128 result = v6;
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  return result;
}

void sub_25501C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_255034(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertNaturalPointFromUnscaledCanvas:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  return result;
}

void sub_255154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25516C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertNaturalRectFromUnscaledCanvas:*(double *)(a1 + 48) *(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_255278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_255290(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertNaturalPointToUnscaledCanvas:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  return result;
}

void sub_2553B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2553C8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertNaturalRectToUnscaledCanvas:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_255D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_255DA4(uint64_t a1, uint64_t a2)
{
}

void sub_255DB4(uint64_t a1)
{
}

id sub_255DC0(uint64_t a1)
{
  id result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithRange:", *(void *)(a1 + 48), *(void *)(a1 + 56));
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_2560E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2560F8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) firstRectForRange:*(void *)(a1 + 48) *(void *)(a1 + 56)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_256490(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 40);
  uint64_t v2 = *(unsigned int *)(a1 + 44);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super arrowKeyReceivedInDirection:v1 withModifierKeys:v2];
}

id sub_256630(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_2566AC;
  v3[3] = &unk_457278;
  char v4 = *(unsigned char *)(a1 + 40);
  void v3[4] = v1;
  return [v1 tsaxPerformBlockAffectingKeyboardReferenceToken:v3];
}

id sub_2566AC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super endInsertingKeyboardReferenceLeavingActive:v1];
}

id sub_256758(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super insertTabIgnoringFieldEditor:v1];
}

id sub_256800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super p_insertTab:v1];
}

id sub_2568AC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 40);
  uint64_t v2 = *(unsigned int *)(a1 + 44);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super p_modifyKeyboardReferenceInDirection:v1 withModifierKeys:v2];
}

id sub_256958(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super p_startInsertingKeyboardReference];
}

id sub_256B20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return [super setAutocompletionText:v1 prefixRange:*(void *)(a1 + 48)];
}

id sub_256B60(uint64_t a1)
{
  [*(id *)(a1 + 32) tsaxDidUpdateAutocompletionTextForToken:[*(id *)(a1 + 32) tsaxCompletionToken]];
  objc_super v2 = *(void **)(a1 + 32);

  return [v2 _tsaxSetDidUpdateAutocompletionText:0];
}

int64_t sub_257364(id a1, id a2, id a3)
{
  [a2 tsaxFrameInScreenSpace];
  double v5 = v4;
  [a3 tsaxFrameInScreenSpace];
  int64_t v7 = -1;
  if (v5 >= v6) {
    int64_t v7 = 1;
  }
  if (v5 == v6) {
    return 0;
  }
  else {
    return v7;
  }
}

void sub_2574B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2574CC(uint64_t a1, uint64_t a2)
{
}

void sub_2574DC(uint64_t a1)
{
}

id sub_2574E8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 conformsToProtocol:*(void *)(a1 + 32)];
  if (result)
  {
    id result = [*(id *)(a1 + 40) _tsaxFirstSelectedRepInCanvasEditor:a2 preferExplicitlyFocusedReps:1];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
    *a4 = 1;
  }
  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    long long v8 = objc_opt_class();
    id result = [(objc_class *)__TSAccessibilityCastAsSafeCategory(v8, (uint64_t)a2, 0, 0) tsaxEditingRepWithCaret];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) {
      *a4 = 1;
    }
  }
  return result;
}

void sub_2576CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2576E4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertBoundsToUnscaledPoint:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  return result;
}

void sub_257804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25781C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertBoundsToUnscaledRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_257928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257940(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertUnscaledToBoundsPoint:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  return result;
}

void sub_257A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257A78(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertUnscaledToBoundsRect:*(double *)(a1 + 48) *(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_257BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257BE8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) repForInfo:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_257D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257D50(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) repsForInfo:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_257E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257EA0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) repForLayout:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_2580BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tsaxCanvasEditor];
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 setSelectionToRep:v3];
}

id sub_2582B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tsaxCanvasEditor];
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 setSelectionToInfos:v3];
}

id sub_2584B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) scrollToPrimarySelection];
}

void sub_258574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25858C(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass"), "smallRepOutsetForHitTesting");
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_25883C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_258854(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertPointsToRulerUnits:*(double *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_258B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_258B84(uint64_t a1, uint64_t a2)
{
}

void sub_258B94(uint64_t a1)
{
}

id sub_258BA0(uint64_t a1)
{
  id result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithRep:knob:", *(void *)(a1 + 40), *(void *)(a1 + 48));
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = result;
  return result;
}

void sub_2591D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2591E8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertPointsToRulerUnits:*(double *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_259670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_259688(uint64_t a1, uint64_t a2)
{
}

void sub_259698(uint64_t a1)
{
}

id sub_2596A4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_orderedChartTypeArrayForPage:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2596DC(uint64_t a1, uint64_t a2)
{
  char v13 = 0;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = (void *)__TSAccessibilityCastAsClass(v4, a2, 1, &v13);
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  id v7 = [v5 tag];
  if (v7 >= [*(id *)(a1 + 32) count])
  {
LABEL_5:
    uint64_t v10 = TSAccessibilityLocalizedString(@"chart");
    return [*(id *)(a1 + 40) _tsaxApplyLabel:v10 toButton:v6];
  }
  char v12 = 0;
  long long v8 = objc_opt_class();
  Class v9 = __TSAccessibilityCastAsSafeCategory(v8, (uint64_t)[*(id *)(a1 + 32) objectAtIndex:v7], 1, &v12);
  if (v12) {
LABEL_7:
  }
    abort();
  uint64_t v10 = (NSString *)[(objc_class *)v9 tsaxFullDescription];
  if (!v10) {
    goto LABEL_5;
  }
  return [*(id *)(a1 + 40) _tsaxApplyLabel:v10 toButton:v6];
}

id sub_259930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = 0;
  uint64_t v6 = (objc_class *)objc_opt_class();
  uint64_t v7 = __TSAccessibilityCastAsClass(v6, a2, 1, &v9);
  if (v9) {
    abort();
  }
  return [*(id *)(a1 + 40) _tsaxApplyLabel:[*(id *)(a1 + 32) objectAtIndexedSubscript:a3] toButton:v7];
}

void sub_259BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_259BD0(uint64_t a1, uint64_t a2)
{
}

void sub_259BE0(uint64_t a1)
{
}

id sub_259BEC(uint64_t a1)
{
  id result = [(id)objc_opt_class() properties];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_259D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_259D80(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) objectForProperty:*(unsigned int *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_259E6C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_259E84(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) intValueForProperty:*(unsigned int *)(a1 + 48)];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_259F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_259F90(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) floatValueForProperty:*(unsigned int *)(a1 + 48)];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_25A6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25A6C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) willBeginEditingContainedRep];
}

void sub_25A6D0(uint64_t a1, uint64_t a2)
{
}

void sub_25A6E0(uint64_t a1)
{
}

id sub_25A6EC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) beginEditingRep:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

uint64_t sub_25A858(uint64_t result, void *a2, unint64_t a3)
{
  unint64_t v3 = *(void *)(result + 56);
  BOOL v5 = a3 >= v3;
  unint64_t v4 = a3 - v3;
  BOOL v5 = !v5 || v4 >= *(void *)(result + 64);
  if (!v5)
  {
    uint64_t v7 = result;
    id result = objc_opt_isKindOfClass();
    if (result)
    {
      id result = (uint64_t)objc_msgSend(objc_msgSend(*(id *)(v7 + 40), "tsaxRepForInfo:", objc_msgSend(a2, "tsaxValueForKey:", @"drawable")), "tsaxShouldExposeAsAttachmentToken");
      if (result)
      {
        long long v8 = *(uint64_t (**)(void))(*(void *)(v7 + 48) + 16);
        return v8();
      }
    }
  }
  return result;
}

id sub_25AB40(uint64_t a1, void *a2)
{
  return [a2 tsaxSetParentInteractiveCanvasController:*(void *)(a1 + 32)];
}

id sub_25AB4C(uint64_t a1, void *a2)
{
  return [a2 tsaxSetParentInteractiveCanvasController:*(void *)(a1 + 32)];
}

id sub_25AB58(uint64_t a1, void *a2)
{
  return [a2 tsaxSetParentInteractiveCanvasController:*(void *)(a1 + 32)];
}

id sub_25B0B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_playForKnob];
}

id sub_25B134(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_togglePlaying];
}

void sub_25CA40(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_25CA58(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) elementAtIndex:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_25CB44(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_25CB5C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) elementAtIndex:*(void *)(a1 + 48) associatedPoints:*(void *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_25D3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_25D40C(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
  return result;
}

id sub_25D528(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_toggleCheckbox:*(void *)(a1 + 40)];
}

void sub_25DEE4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 104), 8);
  _Unwind_Resume(a1);
}

void sub_25DF18(uint64_t a1, uint64_t a2)
{
}

void sub_25DF28(uint64_t a1)
{
}

id sub_25DF34(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) columnNameForCellID:*(unsigned int *)(a1 + 56) cellRangeContainingName:*(void *)(*(void *)(a1 + 48) + 8) + 32 restrictToBodyRange:1];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_25DF7C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) rowNameForCellID:*(unsigned int *)(a1 + 56) cellRangeContainingName:*(void *)(*(void *)(a1 + 48) + 8) + 32 restrictToBodyRange:1];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_25E7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25E800(uint64_t a1, unsigned int a2)
{
  id result = [*(id *)(a1 + 32) tsaxChildCellForCellID:a2];
  if (result)
  {
    id v4 = result;
    BOOL v5 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    if (!v5)
    {
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = objc_opt_new();
      BOOL v5 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    }
    return [v5 addObject:v4];
  }
  return result;
}

void sub_25E938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_25E950(uint64_t result, int a2, uint64_t a3, unsigned char *a4)
{
  if (((*(_DWORD *)(result + 40) ^ a2) & 0xFFFFFF) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_25EDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25EDE4(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxValueForKey:", @"tableInfo"), "editingCellID");
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

void sub_25EED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25EEEC(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTableModel"), "numberOfHeaderColumns");
  *(_WORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_WORD)result;
  return result;
}

void sub_25EFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25EFEC(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTableModel"), "numberOfHeaderRows");
  *(_WORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_WORD)result;
  return result;
}

void sub_25F124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25F13C(uint64_t a1)
{
  id result = [NSClassFromString(@"TSTTableControlCellEditor") controlCellEditorForICC:*(void *)(a1 + 32)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_25F32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_25F344(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) deviceBoundsForCellRange:*(void *)(a1 + 48)];
  unint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

uint64_t sub_25F494(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  CGFloat MidX = CGRectGetMidX(*(CGRect *)(a1 + 40));
  v4.n128_u64[0] = CGRectGetMidY(*(CGRect *)(a1 + 40));
  uint64_t v5 = *(uint64_t (**)(uint64_t, __n128, __n128))(v2 + 16);
  v6.n128_f64[0] = MidX;

  return v5(v2, v6, v4);
}

id sub_25F624(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleSingleTapAtPoint:*(double *)(a1 + 40), *(double *)(a1 + 48)];
}

uint64_t sub_25F6C8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_25F748;
  v2[3] = &unk_46BC08;
  int v4 = *(_DWORD *)(a1 + 48);
  long long v3 = *(_OWORD *)(a1 + 32);
  uint64_t result = __TSAccessibilityPerformSafeBlock((uint64_t)v2);
  if (result) {
    abort();
  }
  return result;
}

void sub_25F748(uint64_t a1)
{
  id v2 = [objc_alloc(NSClassFromString(@"TSTTableSelection")) initWithTableModel:[*(id *)(a1 + 32) tsaxTableModel] andCellID:[*(unsigned int *)(a1 + 48)]];
  if (v2)
  {
    id v3 = v2;
    if ([*(id *)(a1 + 40) tsaxHasMultipleTableInfos]) {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxInteractiveCanvasController"), "tsaxSelectRep:", *(void *)(a1 + 32));
    }
    if ([*(id *)(a1 + 32) tsaxRespondsToSelector:"tsaxWillSelectCellForID:" fromExtrasProtocol:&OBJC_PROTOCOL___TSTTableRepAccessibilityExtras])[*(id *)(a1 + 32) tsaxWillSelectCellForID:*(unsigned int *)(a1 + 48)]; {
    [*(id *)(a1 + 32) p_setSelection:v3 mode:3 atPoint:INFINITY, INFINITY];
    }
  }
}

id sub_25F938(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleDoubleTapAtPoint:];
}

void sub_25F940(uint64_t a1)
{
  [*(id *)(a1 + 32) beginTextEditingAtCellID:*(unsigned int *)(a1 + 52)];
  id v2 = [*(id *)(a1 + 32) tsaxContainedTextEditor];
  if (*(_DWORD *)(a1 + 48) == 1) {
    id v3 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxContainedTextEditingRep"), "tsaxStorage"), "tsaxUnsignedIntegerValueForKey:", @"length");
  }
  else {
    id v3 = 0;
  }
  id v4 = [objc_alloc(NSClassFromString(@"TSWPSelection")) initWithRange:0, v3];
  [v2 setSelection:v4];

  id v5 = [objc_alloc(NSClassFromString(@"TSTTableSelection")) initWithTableModel:*(void *)(a1 + 40) andCellID:*(unsigned int *)(a1 + 52)];
  [*(id *)(a1 + 32) p_setSelection:6 mode:INFINITY atPoint:INFINITY];
}

id sub_25FAD4(uint64_t a1)
{
  return [*(id *)(a1 + 32) endEditing];
}

id sub_25FB70(uint64_t a1)
{
  return [*(id *)(a1 + 32) _tsaxCleanupChildren];
}

void sub_2600B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2600D0(uint64_t a1, uint64_t a2)
{
}

void sub_2600E0(uint64_t a1)
{
}

CFStringRef sub_2600EC(const __CFString *result, void *a2, int a3)
{
  CFStringRef v4 = result;
  switch(a3)
  {
    case 0:
      uint64_t result = (const __CFString *)[result[1].isa tsaxStringForCellID:LODWORD(result[1].data)];
      uint64_t info = v4[1].info;
      p_uint64_t info = &v4[1].info;
      *(void *)(*(void *)(info + 8) + 40) = result;
      if (!*(void *)(*(void *)(*p_info + 8) + 40))
      {
        uint64_t result = (const __CFString *)[a2 tsaxHasFormula];
        if (result)
        {
          uint64_t result = (const __CFString *)[a2 tsaxHasFormulaError];
          if (result)
          {
            uint64_t result = (const __CFString *)TSAccessibilityLocalizedString(@"cell.value.formula.error");
            goto LABEL_16;
          }
        }
      }
      return result;
    case 1:
      if ([a2 tsaxBoolValue]) {
        CFStringRef v7 = @"checked";
      }
      else {
        CFStringRef v7 = @"unchecked";
      }
      goto LABEL_12;
    case 2:
      [a2 tsaxDoubleValue];
      uint64_t v9 = (unint64_t)v8;
      if ((unint64_t)v8 == 1)
      {
        CFStringRef v7 = @"stars.rating.singular";
LABEL_12:
        uint64_t result = (const __CFString *)TSAccessibilityLocalizedString((uint64_t)v7);
      }
      else
      {
        uint64_t v10 = TSAccessibilityLocalizedString(@"stars.rating.plural %@");
        uint64_t result = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v10, TSAccessibilityLocalizedUnsignedInteger(v9));
      }
      goto LABEL_15;
    case 3:
    case 4:
      p_uint64_t info = &result[1].info;
      uint64_t result = &stru_46D7E8;
      goto LABEL_16;
    case 5:
      uint64_t result = (const __CFString *)[a2 tsaxSelectedMultipleChoiceValueDescription];
LABEL_15:
      p_uint64_t info = &v4[1].info;
LABEL_16:
      *(void *)(*(void *)(*p_info + 8) + 40) = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_260738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_260750(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _tsaxShouldPreventMakingVisible];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_260A1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) exitFind];
}

id sub_260E34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 48);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)TSAFindReplaceUIControllerAccessibility;
  return [super p_findNextResultInDirection:v1 alertingIfNotFound:v2];
}

id sub_261C34(uint64_t a1)
{
  return [*(id *)(a1 + 32) setDirection:*(void *)(a1 + 40)];
}

id sub_261F54(uint64_t a1)
{
  [*(id *)(a1 + 32) beginDraggingMarker];
  [*(id *)(a1 + 32) updateDraggingMarkerWithOffset:*(double *)(a1 + 40) rulerPoint:*(double *)(a1 + 48)];
  uint64_t v2 = *(void **)(a1 + 32);
  double v3 = *(double *)(a1 + 40);
  double v4 = *(double *)(a1 + 48);
  double v5 = *(double *)(a1 + 56);
  double v6 = *(double *)(a1 + 64);

  return [v2 endDraggingMarkerWithOffset:v3 rulerPoint:v4 v5, v6];
}

void sub_2620F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_262120(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_getColumnLeftPosition:*(void *)(*(void *)(a1 + 40) + 8) + 24 columnRightPosition:*(void *)(*(void *)(a1 + 48) + 8) + 24];
}

void sub_26220C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_262224(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) minMaxModelValuesForRulerMarker:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  return result;
}

id sub_262718(uint64_t a1)
{
  return [*(id *)(a1 + 32) setValue:*(void *)(a1 + 40) forKey:@"draggingRulerMarker"];
}

id sub_2629F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSDTextInputResponderAccessibility;
  return [super forwardInvocation:v1];
}

id sub_262CF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) enumeratePropertiesUsingBlock:*(void *)(a1 + 40)];
}

void sub_26326C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_263284(uint64_t a1, uint64_t a2)
{
}

void sub_263294(uint64_t a1)
{
}

id sub_2632A0(void *a1)
{
  id result = [objc_alloc(NSClassFromString(@"TSWPSelection")) initWithRange:a1[5] a1[6]];
  *(void *)(*(void *)(a1[4] + 8) + 40) = result;
  return result;
}

id sub_26374C(uint64_t a1)
{
  return [*(id *)(a1 + 32) insertText:*(void *)(a1 + 40)];
}

id sub_263868(uint64_t a1)
{
  return [*(id *)(a1 + 32) replaceRange:*(void *)(a1 + 48) withText:*(void *)(a1 + 56)];
}

void sub_26393C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_263954(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) tsax_rangeOfLineFragmentAtCharIndex:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v4;
  return result;
}

void sub_264064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_264088(uint64_t a1, uint64_t a2)
{
}

void sub_264098(uint64_t a1)
{
}

id sub_2640A4(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxStorage"), "smartFieldAtCharIndex:attributeKind:effectiveRange:", *(void *)(a1 + 56), 6, *(void *)(*(void *)(a1 + 48) + 8) + 32);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2640EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) tsaxSetSelectedTextRange:*(void *)(a1 + 40) *(void *)(a1 + 48)];
}

void sub_2642B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v10 - 88), 8);
  _Unwind_Resume(a1);
}

id sub_2642E0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) tsax_listItemLabelForCharIndex:*(void *)(a1 + 56) textIsLiteral:*(void *)(*(void *)(a1 + 48) + 8) + 24];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2644F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSWPEditingControllerAccessibility;
  return [super cut:v1];
}

id sub_2645AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSWPEditingControllerAccessibility;
  return [super copy:v1];
}

id sub_264664(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSWPEditingControllerAccessibility;
  return [super paste:v1];
}

id sub_264AEC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) tsaxListItemLabelForLineAtCurrentSelection];
  if (result)
  {
    uint64_t v3 = (uint64_t)result;
    uint64_t v4 = *(void *)(a1 + 32);
    return TSAccessibilityPostAnnouncementNotification(v4, v3);
  }
  return result;
}

void sub_264C30(uint64_t a1)
{
  id v2 = objc_alloc(NSClassFromString(@"TSWPSelection"));
  id v3 = [*(id *)(a1 + 32) tsaxRange];
  id v5 = [v2 initWithType:0 range:v3 styleInsertionBehavior:[*(id *)(a1 + 32) tsaxUnsignedIntValueForKey:@"styleInsertionBehavior"] caretAffinity:[*(id *)(a1 + 32) tsaxUnsignedIntValueForKey:@"caretAffinity"]];
  [*(id *)(a1 + 40) setValue:v5 forKey:@"selection"];
}

void sub_2651BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_2651EC(uint64_t a1, uint64_t a2)
{
}

void sub_2651FC(uint64_t a1)
{
}

id sub_265208(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (unsigned __int16)a2 + 1;
  uint64_t v5 = BYTE2(a2);
  uint64_t v6 = BYTE2(a2) + 1;
  if (HIWORD(a2) == 1)
  {
    id v7 = objc_alloc((Class)NSString);
    double v8 = TSAccessibilityLocalizedString(@"row.selected.description.singular %@");
    id v9 = [v7 initWithFormat:v8, TSAccessibilityLocalizedUnsignedInteger(v4), v30];
  }
  else
  {
    uint64_t v10 = (unsigned __int16)a2 + HIWORD(a2);
    id v11 = objc_alloc((Class)NSString);
    char v12 = TSAccessibilityLocalizedString(@"row.selected.description.plural %@ %@");
    id v13 = TSAccessibilityLocalizedUnsignedInteger(v4);
    id v9 = [v11 initWithFormat:v12, v13, TSAccessibilityLocalizedUnsignedInteger(v10)];
  }
  long long v14 = v9;
  id v15 = objc_alloc((Class)NSString);
  if ((a2 & 0xFFFF00000000) == 0x100000000)
  {
    long long v16 = TSAccessibilityLocalizedString(@"column.selected.description.singular %@");
    id v17 = [v15 initWithFormat:v16 TSAccessibilityLocalizedUnsignedInteger:v6 v31];
  }
  else
  {
    uint64_t v24 = TSAccessibilityLocalizedString(@"column.selected.description.plural %@ %@");
    id v25 = TSAccessibilityLocalizedUnsignedInteger(v6);
    id v17 = [v15 initWithFormat:v24, v25, TSAccessibilityLocalizedUnsignedInteger(v5 + WORD2(a2))];
  }
  uint64_t v26 = v17;
  unsigned int v27 = __TSAccessibilityStringForVariables(1, v14, v18, v19, v20, v21, v22, v23, (uint64_t)v17);

  id result = *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (result)
  {
    uint64_t v29 = *(void *)(*(void *)(a1 + 40) + 8);
    if (*(void *)(v29 + 40))
    {
      id result = [result appendFormat:@", , %@", *(void *)(v29 + 40), @"__TSAccessibilityStringForVariablesSentinel"];
      uint64_t v29 = *(void *)(*(void *)(a1 + 40) + 8);
    }
    *(void *)(v29 + 40) = v27;
  }
  else
  {
    id result = [objc_alloc((Class)NSMutableString) initWithFormat:TSAccessibilityLocalizedString(@"columns.and.rows.selected.beginning.format %@"), v27, @"__TSAccessibilityStringForVariablesSentinel"];
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
  }
  return result;
}

id sub_2656D0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) _tsaxStoredLabel];

  return [v1 _tsaxSetStoredLabel:v2];
}

void sub_265F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_265F20(uint64_t a1, uint64_t a2)
{
}

void sub_265F30(uint64_t a1)
{
}

id sub_265F3C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) editorForEditAction:*(void *)(a1 + 56) withSender:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_266C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_266C3C(uint64_t a1, uint64_t a2)
{
}

void sub_266C4C(uint64_t a1)
{
}

id sub_266C58(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass"), "selectionWithRange:", *(void *)(a1 + 48), *(void *)(a1 + 56));
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_267A98(uint64_t a1)
{
  return [*(id *)(a1 + 32) tsaxInvalidateChildrenImmediately];
}

id sub_267B18(uint64_t a1)
{
  return [*(id *)(a1 + 32) tsaxInvalidateChildrenEventually];
}

void sub_267EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_267EDC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) anchorCellID];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

id sub_268080(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v1 = a1[5];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_2680F8;
  _OWORD v5[3] = &unk_46BE48;
  uint64_t v3 = a1[7];
  void v5[4] = a1[6];
  return [v2 enumerateSelectedCellsInTable:v1 withFlags:v3 usingBlock:v5];
}

uint64_t sub_2680F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_268260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_268280(uint64_t a1, uint64_t a2)
{
}

void sub_268290(uint64_t a1)
{
}

id sub_26829C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) tsaxSubstringInStorageWithRange:*(void *)(a1 + 48) range:*(void *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_268508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_268520(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) glyphRectForRange:*(void *)(a1 + 48) includingLabel:*(void *)(a1 + 56)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_268DE8(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)TSTiOSTableRepDelegateAccessibility;
  return [super p_showContextMenuAtPoint:*(double *)(a1 + 40) *(double *)(a1 + 48)];
}

id sub_2690BC(uint64_t a1)
{
  id result = objc_alloc_init(*(Class *)(a1 + 32));
  qword_5738D8 = (uint64_t)result;
  return result;
}

id sub_269D50(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  return [*(id *)(a1 + 32) _setValue:*(unsigned __int8 *)(a1 + 44) andSendAction:a2];
}

uint64_t sub_26A414(void *a1, void *a2, int a3)
{
  while (1)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0)
    {
      CFStringRef v6 = @"Row";
      goto LABEL_31;
    }
    if (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"Row" forKey:@"AXMType"];
LABEL_42:
      return (uint64_t)sub_26B010(a1, a2, a3);
    }
    if (objc_opt_isKindOfClass()) {
      goto LABEL_42;
    }
    if ((objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0)
    {
      [a2 setObject:@"UnderOver" forKey:@"AXMType"];
      id v10 = +[NSMutableDictionary dictionary];
      uint64_t v11 = (a3 + 1);
      sub_26A414([a1 tsaxValueForKey:@"schemataBase"], v10, v11);
      [a2 setObject:v10 forKey:@"AXMBaseObject"];
      id v12 = +[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"schemataOver"], v12, v11);
      [a2 setObject:v12 forKey:@"AXMOverObject"];
      CFStringRef v13 = (const __CFString *)+[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"schemataUnder"], v13, v11);
      CFStringRef v14 = @"AXMUnderObject";
      goto LABEL_46;
    }
    if (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"Fraction" forKey:@"AXMType"];
      id v19 = +[NSMutableDictionary dictionary];
      uint64_t v20 = (a3 + 1);
      sub_26A414([a1 tsaxValueForKey:@"mFirst"], v19, v20);
      [a2 setObject:v19, +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@%@", @"Term", @"1" forKey];
      id v21 = +[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"mSecond"], v21, v20);
      [a2 setObject:v21, +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@%@", @"Term", @"2" forKey];
      CFStringRef v13 = (const __CFString *)+[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"operatorCore"], v13, v20);
      CFStringRef v14 = @"AXMOperator";
LABEL_46:
      uint64_t v22 = a2;
      CFStringRef v23 = v13;
      goto LABEL_57;
    }
    if (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"LongDivision" forKey:@"AXMType"];
      id v24 = +[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"mDivisor"], v24, (a3 + 1));
      [a2 setObject:v24, +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@%@", @"Term", @"1" forKey];
      id v7 = [a1 tsaxValueForKey:@"mStack"];
      double v8 = a2;
      int v9 = a3;
      goto LABEL_32;
    }
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"Identifier" forKey:@"AXMType"];
      return (uint64_t)sub_26B0BC(a1, a2);
    }
    if (objc_opt_isKindOfClass())
    {
      CFStringRef v23 = @"Space";
      CFStringRef v14 = @"AXMType";
      goto LABEL_56;
    }
    if (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"Operator" forKey:@"AXMType"];
      sub_26B0BC(a1, a2);
      CFStringRef v23 = (const __CFString *)[a1 tsaxValueForKey:@"operatorUnicharOrNul"];
      CFStringRef v14 = @"AXMUnichar";
      goto LABEL_56;
    }
    if ((objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0
      || (objc_opt_isKindOfClass() & 1) != 0)
    {
      [a2 setObject:@"SubSuperScript" forKey:@"AXMType"];
      id v15 = +[NSMutableDictionary dictionary];
      uint64_t v16 = (a3 + 1);
      sub_26A414([a1 tsaxValueForKey:@"schemataKernel"], v15, v16);
      [a2 setObject:v15 forKey:@"AXMBaseObject"];
      id v17 = +[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"schemataSubscript"], v17, v16);
      [a2 setObject:v17 forKey:@"AXMSubscriptObject"];
      CFStringRef v13 = (const __CFString *)+[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"schemataSuperscript"], v13, v16);
      CFStringRef v14 = @"AXMSuperscriptObject";
      goto LABEL_46;
    }
    if (objc_opt_isKindOfClass())
    {
      CFStringRef v6 = @"Table";
      goto LABEL_31;
    }
    if (objc_opt_isKindOfClass())
    {
      CFStringRef v6 = @"TableCell";
      goto LABEL_31;
    }
    if (objc_opt_isKindOfClass())
    {
      CFStringRef v6 = @"TableRow";
      goto LABEL_31;
    }
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"RootOperation" forKey:@"AXMType"];
      id v18 = +[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"schemataRadicand"], v18, (a3 + 1));
      [a2 setObject:v18 forKey:@"AXMRadicandObject"];
      CFStringRef v13 = (const __CFString *)+[NSMutableDictionary dictionary];
      sub_26A414([a1 tsaxValueForKey:@"schemataIndex"], v13, (a3 + 1));
      CFStringRef v14 = @"AXMRootIndexObject";
      goto LABEL_46;
    }
    if (objc_opt_isKindOfClass()) {
      break;
    }
    if (objc_opt_isKindOfClass())
    {
      [a2 setObject:@"Text" forKey:@"AXMType"];
      uint64_t result = [[[a1 tsaxValueForKey:@"mContent"] tsaxValueForKey:@"mChildren"] componentsJoinedByString:@" "];
      if (!result) {
        return result;
      }
      CFStringRef v23 = (const __CFString *)result;
      CFStringRef v14 = @"AXMContent";
LABEL_56:
      uint64_t v22 = a2;
LABEL_57:
      return (uint64_t)[v22 setObject:v23 forKey:v14];
    }
    uint64_t result = objc_opt_isKindOfClass();
    if (result)
    {
      uint64_t result = (uint64_t)[a1 tsaxValueForKey:@"mExpression"];
      a1 = (void *)result;
      if (result) {
        continue;
      }
    }
    return result;
  }
  CFStringRef v6 = @"Fenced";
LABEL_31:
  [a2 setObject:v6 forKey:@"AXMType"];
  id v7 = a1;
  double v8 = a2;
  int v9 = a3;
LABEL_32:

  return (uint64_t)sub_26AEB4(v7, v8, v9);
}

void sub_26AC84(id a1)
{
  qword_573900 = (uint64_t)NSClassFromString(@"EQKitMathMLMRow");
  qword_573908 = (uint64_t)NSClassFromString(@"EQKitMathMLMStyle");
  qword_573910 = (uint64_t)NSClassFromString(@"EQKitMathMLMUnderover");
  qword_573918 = (uint64_t)NSClassFromString(@"EQKitMathMLMFraction");
  qword_573920 = (uint64_t)NSClassFromString(@"EQKitMathMLMIdentifier");
  qword_573928 = (uint64_t)NSClassFromString(@"EQKitMathMLMSpace");
  qword_573930 = (uint64_t)NSClassFromString(@"EQKitMathMLMOperator");
  qword_573938 = (uint64_t)NSClassFromString(@"EQKitMathMLMOver");
  qword_573940 = (uint64_t)NSClassFromString(@"EQKitMathMLMUnder");
  qword_573948 = (uint64_t)NSClassFromString(@"EQKitMathMLMSuperscript");
  qword_573950 = (uint64_t)NSClassFromString(@"EQKitMathMLMSubscript");
  qword_573958 = (uint64_t)NSClassFromString(@"EQKitMathMLMNumber");
  qword_573960 = (uint64_t)NSClassFromString(@"EQKitMathMLMSubsuperscript");
  qword_573968 = (uint64_t)NSClassFromString(@"EQKitMathMLMTable");
  qword_573970 = (uint64_t)NSClassFromString(@"EQKitMathMLMTr");
  qword_573978 = (uint64_t)NSClassFromString(@"EQKitMathMLMTd");
  qword_573980 = (uint64_t)NSClassFromString(@"EQKitMathMLMSqrt");
  qword_573988 = (uint64_t)NSClassFromString(@"EQKitMathMLMRoot");
  qword_573990 = (uint64_t)NSClassFromString(@"EQKitMathMLMLongDivision");
  qword_573998 = (uint64_t)NSClassFromString(@"EQKitMathMLMFenced");
  qword_5739A0 = (uint64_t)NSClassFromString(@"EQKitMathMLMText");
  qword_5739A8 = (uint64_t)NSClassFromString(@"EQKitMathMLMStackRow");
  qword_5739B0 = (uint64_t)NSClassFromString(@"EQKitMathMLMStackGroup");
  qword_5739B8 = (uint64_t)NSClassFromString(@"EQKitMathMLMStackCarry");
  qword_5739C0 = (uint64_t)NSClassFromString(@"EQKitMathMLMStack");
  qword_5739C8 = (uint64_t)NSClassFromString(@"EQKitMathMLMPadded");
  qword_5739D0 = (uint64_t)NSClassFromString(@"EQKitMathMLMAction");
}

id sub_26AEB4(void *a1, void *a2, int a3)
{
  id v6 = +[NSMutableArray array];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v7 = [a1 tsaxValueForKey:@"mChildren" error:0];
  id v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v17;
    uint64_t v11 = (a3 + 1);
    do
    {
      id v12 = 0;
      do
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v13 = *(void *)(*((void *)&v16 + 1) + 8 * (void)v12);
        id v14 = +[NSMutableDictionary dictionary];
        sub_26A414(v13, v14, v11);
        [v6 addObject:v14];
        id v12 = (char *)v12 + 1;
      }
      while (v9 != v12);
      id v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }
  return [a2 setObject:v6 forKey:@"AXMChildren"];
}

id sub_26B010(void *a1, void *a2, int a3)
{
  id v6 = +[NSMutableArray array];
  id v7 = [a1 tsaxValueForKey:@"mChild"];
  if (v7)
  {
    id v8 = v7;
    id v9 = +[NSMutableDictionary dictionary];
    sub_26A414(v8, v9, (a3 + 1));
    [v6 addObject:v9];
  }

  return [a2 setObject:v6 forKey:@"AXMChildren"];
}

id sub_26B0BC(void *a1, void *a2)
{
  if ([a1 tsaxValueForKey:@"schemataTokenString"]) {
    [a2 setObject:[a1 tsaxValueForKey:@"schemataTokenString"] forKey:@"AXMContent"];
  }
  id result = [[[a1 tsaxValueForKey:@"schemataFontStyling"] tsaxValueForKey:@"scriptVariant"] intValue];
  if (result == 3)
  {
    CFStringRef v5 = @"StyleItalic";
  }
  else
  {
    if (result != 2) {
      return result;
    }
    CFStringRef v5 = @"StyleBold";
  }

  return [a2 setObject:v5 forKey:@"AXMFontStyle"];
}

void sub_26BA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26BA38(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) upperLeftCellID];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

void sub_26BB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26BB40(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) bottomRightCellID];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

void sub_26BC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26BC44(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) boundingCellRange];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

id sub_26BCEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) enumerateCellRangesUsingBlock:*(void *)(a1 + 40)];
}

void sub_26C18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26C1AC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) findCharIndex];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_26C6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26C714(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) cellID];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

void sub_26CC54(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_26CC6C(uint64_t a1, uint64_t a2)
{
}

void sub_26CC7C(uint64_t a1)
{
}

id sub_26CC88(uint64_t a1)
{
  id result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithStorage:subRange:", *(void *)(a1 + 40), *(void *)(a1 + 56), *(void *)(a1 + 64));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_26CD80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_26CD98(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) previousCharacterIndex:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_26CE84(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_26CE9C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) nextCharacterIndex:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_26CFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26D004(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) getRGBAComponents:v4];
  double v3 = fmax(v4[1] * 0.715200007 + v4[0] * 0.212599993 + v4[2] * 0.0722000003 * v4[3], 0.0);
  if (v3 > 1.0) {
    double v3 = 1.0;
  }
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

id sub_26DC08(uint64_t a1)
{
  return [*(id *)(a1 + 32) tsaxSetAssociatedPopoverController:0];
}

id sub_26E03C(uint64_t a1)
{
  return [*(id *)(a1 + 32) tsaxSetAssociatedPopoverController:*(void *)(a1 + 40)];
}

id sub_26E41C()
{
  id result = [(id)qword_5739E8 count];
  if (result)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v1 = (void *)qword_5739E8;
    id v2 = [(id)qword_5739E8 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = *(void *)v18;
      while (2)
      {
        for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v4) {
            objc_enumerationMutation(v1);
          }
          id v6 = *(void **)(*((void *)&v17 + 1) + 8 * i);
          char v16 = 0;
          id v7 = objc_opt_class();
          Class v8 = __TSAccessibilityCastAsSafeCategory(v7, (uint64_t)[v6 tsaxValueForKey:@"nonretainedObjectValue"], 1, &v16);
          if (v16
            || (Class v9 = v8,
                char v16 = 0,
                uint64_t v10 = objc_opt_class(),
                Class v11 = __TSAccessibilityCastAsSafeCategory(v10, (uint64_t)[+[UIApplication sharedApplication] keyWindow], 1, &v16), v16))
          {
            abort();
          }
          Class v12 = v11;
          [(objc_class *)v11 tsaxFirstResponder];
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v13 = [(objc_class *)v12 tsaxFirstResponder];
            id v14 = [v9 tsaxContentViewController].view;
            if (v13)
            {
              id v15 = v14;
              while (v13 != v15)
              {
                id v13 = [v13 superview];
                if (!v13) {
                  goto LABEL_14;
                }
              }
              return 0;
            }
          }
LABEL_14:
          ;
        }
        id v3 = [v1 countByEnumeratingWithState:&v17 objects:v21 count:16];
        id result = &dword_0 + 1;
        if (v3) {
          continue;
        }
        break;
      }
    }
    else
    {
      return &dword_0 + 1;
    }
  }
  return result;
}

void sub_26F258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Block_object_dispose((const void *)(v32 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_26F298(uint64_t a1, uint64_t a2)
{
}

void sub_26F2A8(uint64_t a1)
{
}

id sub_26F2B4(void *a1)
{
  char v5 = 1;
  uint64_t v4 = 0;
  char v3 = 0;
  *(void *)(*(void *)(a1[6] + 8) + 40) = [objc_alloc(NSClassFromString(@"TSWPEditingController")) initWithStorage:a1[4] interactiveCanvasController:a1[5]];
  *(void *)(*(void *)(a1[7] + 8) + 24) = [*(id *)(*(void *)(a1[6] + 8) + 40) p_charIndexByMovingCharIndex:a1[9] withEolAffinity:&v5 toBoundary:2 inDirection:3 preferPosition:&v4 isLeadingEdge:&v3];
  id result = [*(id *)(*(void *)(a1[6] + 8) + 40) p_charIndexByMovingCharIndex:a1[9] + a1[10] - 1 withEolAffinity:&v5 toBoundary:2 inDirection:2 preferPosition:&v4 isLeadingEdge:&v3];
  *(void *)(*(void *)(a1[8] + 8) + 24) = result;
  return result;
}

id sub_26F380(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = TSAccessibilityLocalizedString(@"find.success");

  return TSAccessibilityPostAnnouncementNotification(v1, (uint64_t)v2);
}

id sub_26F3C4(uint64_t a1)
{
  return TSAccessibilityPostAnnouncementNotification(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_26F4B8(id a1, TSWPAttachmentAccessibility *a2, unint64_t a3, BOOL *a4)
{
}

void sub_26F4C0(id a1, TSWPFootnoteReferenceAttachmentAccessibility *a2, unint64_t a3, BOOL *a4)
{
}

void sub_26FAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26FAC0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) convertUnscaledToBoundsRect:*(double *)(a1 + 48) *(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72)];
  char v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_27003C(uint64_t a1, void *a2)
{
  return [a2 tsaxSetParentInteractiveCanvasController:*(void *)(a1 + 32)];
}

id sub_270048(uint64_t a1, void *a2)
{
  return [a2 tsaxSetParentInteractiveCanvasController:*(void *)(a1 + 32)];
}

id sub_270054(uint64_t a1, void *a2)
{
  return [a2 tsaxSetParentInteractiveCanvasController:*(void *)(a1 + 32)];
}

void sub_27014C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_270164(uint64_t a1, uint64_t a2)
{
}

void sub_270174(uint64_t a1)
{
}

id sub_270180(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) fillsForDefaultSeriesType];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_27047C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_270494(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) selectionRangeMaxForCharIndex:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_2705A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2705BC(uint64_t a1, uint64_t a2)
{
}

void sub_2705CC(uint64_t a1)
{
}

id sub_2705D8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) substringWithRange:*(void *)(a1 + 48), *(void *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2706F8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 tsaxRange];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_27078C;
  _OWORD v6[3] = &unk_46C010;
  void v6[4] = *(void *)(a1 + 40);
  return [v2 enumerateAttachmentsInTextRange:v3 usingBlock:v4];
}

Class sub_27078C(uint64_t a1, uint64_t a2)
{
  char v6 = 0;
  uint64_t v4 = objc_opt_class();
  Class result = __TSAccessibilityCastAsSafeCategory(v4, a2, 1, &v6);
  if (v6) {
    abort();
  }
  if (result) {
    return (Class)(*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  return result;
}

Class sub_270888(uint64_t a1)
{
  char v8 = 0;
  Class result = (Class)[*(id *)(a1 + 32) tsaxUnsignedIntegerValueForKey:@"footnoteCount"];
  if (result)
  {
    Class v3 = result;
    unint64_t v4 = 1;
    do
    {
      uint64_t v7 = 0;
      char v6 = 0;
      uint64_t v5 = objc_opt_class();
      Class result = __TSAccessibilityCastAsSafeCategory(v5, (uint64_t)[*(id *)(a1 + 32) footnoteAtFootnoteIndex:v4 - 1 outCharIndex:&v7], 1, &v6);
      if (v6) {
        abort();
      }
      if (result) {
        Class result = (Class)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
      }
      if (v4 >= (unint64_t)v3) {
        break;
      }
      ++v4;
    }
    while (!v8);
  }
  return result;
}

void sub_270A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_270A78(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unsigned char *a5)
{
  unint64_t v5 = *(void *)(result + 40);
  if (a3 <= v5 && a3 + a4 >= v5)
  {
    *(void *)(*(void *)(*(void *)(result + 32) + 8) + 40) = a2;
    *a5 = 1;
  }
  return result;
}

id sub_270B6C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 64);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_270BE8;
  _OWORD v6[3] = &unk_46C060;
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  void v6[4] = *(void *)(a1 + 40);
  return [v2 enumerateSmartFieldsWithAttributeKind:v1 inRange:v3 usingBlock:v4];
}

Class sub_270BE8(uint64_t a1, uint64_t a2)
{
  char v6 = 0;
  uint64_t v4 = objc_opt_class();
  Class result = __TSAccessibilityCastAsSafeCategory(v4, a2, 1, &v6);
  if (v6) {
    abort();
  }
  if (result) {
    return (Class)(*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  return result;
}

void sub_270D60(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_270D78(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) editableAnnotationForInsertionPointSelection:*(void *)(a1 + 40) includeComments:*(unsigned __int8 *)(a1 + 72) withOutRange:*(void *)(a1 + 56) selectionIsOnEdge:*(void *)(a1 + 64)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_270E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_270E98(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) rangeOfAnnotationWithOptions:0 range:*(void *)(a1 + 48) *(void *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v4;
  return result;
}

void sub_270F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_270FB0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) rangeForAnnotation:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v4;
  return result;
}

void sub_271408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_271420(uint64_t a1, uint64_t a2)
{
}

void sub_271430(uint64_t a1)
{
}

id sub_27143C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) mostSpecificCurrentEditorOfClass:[TSTTableEditorAccessibility tsaxTargetClass]];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_27163C(id a1)
{
}

void sub_271F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_271F1C(uint64_t a1, uint64_t a2)
{
}

void sub_271F2C(uint64_t a1)
{
}

id sub_271F38(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) swatchGridViewForPage:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_272538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_27255C(uint64_t a1)
{
  id v2 = objc_alloc(NSClassFromString(@"TSWPSelection"));
  id v3 = [*(id *)(a1 + 32) tsaxRangeValueForKey:@"range"];
  id v20 = [v2 initWithRange:v3, v4];
  [*(id *)(a1 + 40) rectForSelection:v20];
  unint64_t v5 = *(void **)(*(void *)(a1 + 56) + 8);
  void v5[4] = v6;
  void v5[5] = v7;
  void v5[6] = v8;
  v5[7] = v9;
  [*(id *)(a1 + 40) convertNaturalRectToUnscaledCanvas:*(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 56)];
  uint64_t v10 = *(void **)(*(void *)(a1 + 56) + 8);
  void v10[4] = v11;
  void v10[5] = v12;
  v10[6] = v13;
  void v10[7] = v14;
  [*(id *)(a1 + 48) convertUnscaledToBoundsRect:*(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 56)];
  id v15 = *(void **)(*(void *)(a1 + 56) + 8);
  v15[4] = v16;
  v15[5] = v17;
  v15[6] = v18;
  v15[7] = v19;
}

id sub_272E40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v5.receiver = *(id *)(a1 + 40);
  v5.super_class = (Class)TSADocumentManagerViewAccessibility;
  [super scrollViewDidScroll:v2];
  id result = (id)UIAccessibilityIsVoiceOverRunning();
  if (result)
  {
    id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxValueForKey:", @"_assignedCells"), "count");
    id result = [*(id *)(a1 + 40) tsaxUnsignedIntegerValueForKey:@"_itemCount"];
    if (v4 < result) {
      return [*(id *)(a1 + 40) _loadCells];
    }
  }
  return result;
}

id sub_272F34(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)TSADocumentManagerViewAccessibility;
  return [super _loadCells];
}

void sub_2734F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_27350C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) editingCellID];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = result;
  return result;
}

uint64_t TSUIReferenceLibraryViewControllerAccessibilityShouldPreventActualLookup()
{
  return byte_5739F6;
}

uint64_t TSUIReferenceLibraryViewControllerAccessibilitySetShouldPreventActualLookup(uint64_t result)
{
  byte_5739F6 = result;
  return result;
}

id sub_273F00(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_buildMenuItems:*(void *)(a1 + 40) forSelection:*(void *)(a1 + 48)];
}

id sub_273F98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSDiOSCanvasViewControllerAccessibility;
  return [super showEditMenuForSelection:v1];
}

id sub_275638(uint64_t a1)
{
  if ([*(id *)(a1 + 32) firstElementForUpcomingScreenChangeResetCount]) {
    [*(id *)(a1 + 32) setFirstElementForUpcomingScreenChangeResetCount:[*(id *)(a1 + 32) firstElementForUpcomingScreenChangeResetCount] - 1];
  }
  id result = [*(id *)(a1 + 32) firstElementForUpcomingScreenChangeResetCount];
  if (!result)
  {
    objc_super v3 = *(void **)(a1 + 32);
    return [v3 setCachedFirstElementForUpcomingScreenChange:0];
  }
  return result;
}

id sub_275758(uint64_t a1)
{
  if ([*(id *)(a1 + 32) firstElementForUpcomingPageTurnResetCount]) {
    [*(id *)(a1 + 32) setFirstElementForUpcomingPageTurnResetCount:((char *)[*(id *)(a1 + 32) firstElementForUpcomingPageTurnResetCount]) - 1];
  }
  id result = [*(id *)(a1 + 32) firstElementForUpcomingPageTurnResetCount];
  if (!result)
  {
    objc_super v3 = *(void **)(a1 + 32);
    return [v3 setCachedFirstElementForUpcomingPageTurn:0];
  }
  return result;
}

NSString *TSAccessibilityGetUIKitLocalizedString(uint64_t a1)
{
  objc_super v2 = (NSBundle *)qword_573A08;
  if (!qword_573A08)
  {
    objc_super v2 = +[NSBundle bundleWithIdentifier:@"com.apple.UIKit.axbundle"];
    qword_573A08 = (uint64_t)v2;
    if (!v2) {
      return (NSString *)a1;
    }
  }

  return [(NSBundle *)v2 localizedStringForKey:a1 value:&stru_46D7E8 table:@"Accessibility"];
}

id TSAccessibilityPostLayoutChangedNotification(void *a1)
{
  if (qword_573A10)
  {
    if (!a1) {
      goto LABEL_11;
    }
  }
  else
  {
    qword_573A10 = [[TSAccessibilityTimer alloc] initWithTargetSerialQueue:&_dispatch_main_q];
    [(id)qword_573A10 setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:1];
    if (!a1) {
      goto LABEL_11;
    }
  }
  if (qword_573A18)
  {
    if ((void *)qword_573A18 != a1)
    {
      if (TSAccessibilityShouldPerformValidationChecks())
      {
        int ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
        if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, @"Multiple targets for multiple layout changed notifications. This is likely a bug.", v3, v4, v5, v6, v7, v10))abort(); {
      }
        }
    }
  }
  else
  {
    qword_573A18 = a1;
  }
LABEL_11:
  uint64_t v8 = (void *)qword_573A10;

  return [v8 afterDelay:&stru_46C270 processBlock:0.25];
}

void sub_27590C(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, (id)qword_573A18);
  id v1 = (id)qword_573A18;
  qword_573A18 = 0;
}

id sub_275BFC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _accessibilityUnregister];
}

id sub_275F34(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_2761C0(uint64_t a1)
{
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (!+[NSThread isMainThread])
    {
      int ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, @"This must only be called on the main thread.", v3, v4, v5, v6, v7, v14))abort(); {
    }
      }
  }
  [*(id *)(a1 + 32) tsaxInvalidateChildrenImmediately];
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxChildInvalidationCompletionBlocks"), "count"))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v8 = [*(id *)(a1 + 32) _tsaxChildInvalidationCompletionBlocks];
    id v9 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v15;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v15 != v11) {
            objc_enumerationMutation(v8);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v14 + 1) + 8 * (void)v12) + 16))();
          uint64_t v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v10);
    }
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxChildInvalidationCompletionBlocks"), "removeAllObjects");
  }
  return *(id *)(a1 + 32);
}

void sub_276980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_276998(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) columnRectForRange:*(void *)(a1 + 48) *(void *)(a1 + 56)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_276ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_276AD4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) glyphRectForRange:*(void *)(a1 + 48) includingLabel:*(void *)(a1 + 56)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_276BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_276BF0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) rangeOfLineFragmentAtIndex:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = v4;
  return result;
}

void sub_276D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_276D24(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) boundsOfLineFragmentAtIndex:*(void *)(a1 + 48)];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_276E18(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_276E30(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) lineIndexForCharIndex:*(void *)(a1 + 48) eol:*(unsigned __int8 *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t sub_2782B8(uint64_t a1)
{
  return 1;
}

uint64_t sub_2782D8(uint64_t a1)
{
  return 1;
}

void sub_278708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_278720(uint64_t a1, uint64_t a2)
{
}

void sub_278730(uint64_t a1)
{
}

id sub_27873C(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tableRep"), "tsaxTableName");
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_27A028(uint64_t a1)
{
  return [*(id *)(a1 + 32) addAdditionalChildLayersToArray:*(void *)(a1 + 40)];
}

id sub_27A034(uint64_t a1)
{
  return [*(id *)(a1 + 32) addChildViewsToArray:*(void *)(a1 + 40)];
}

id sub_27A114(uint64_t a1)
{
  return [*(id *)(a1 + 32) endEditing];
}

id sub_27A38C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxRepContainerElementCache"), "tsaxInvalidateChildrenImmediately");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxRepContainerElementCache"), "setRep:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxRepContainerElementCache"), "tsaxAccessibilityUnregister");
  objc_super v2 = *(void **)(a1 + 32);

  return [v2 tsaxAccessibilityUnregister];
}

char *sub_27ABE4(uint64_t a1)
{
  char v12 = 0;
  id result = [*(id *)(a1 + 32) paragraphIndexRangeForCharRange:*(void *)(a1 + 48) *(void *)(a1 + 56)];
  if (result < &result[v3])
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    long long v10 = xmmword_3447B0;
    do
    {
      id v6 = [*(id *)(a1 + 32) textRangeForParagraphAtIndex:v4 v10];
      uint64_t v8 = v7;
      long long v11 = v10;
      id result = [(char *)[*(id *)(a1 + 32) valueForProperty:47 effectiveRange:&v6] isEqualToString:@"heading"];
      if (result)
      {
        if (v6 == (id)v11 && v8 == *((void *)&v11 + 1))
        {
          id result = (char *)(*(uint64_t (**)(void, id, uint64_t, NSNumber *, NSNumber *, char *))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v6, v8, +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", TSAccessibilityTraitHeader), +[NSNumber numberWithBool:1], &v12);
          if (v12) {
            break;
          }
        }
      }
      ++v4;
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_27AFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_27B00C(uint64_t a1, uint64_t a2)
{
}

void sub_27B01C(uint64_t a1)
{
}

id sub_27B028(uint64_t a1, unint64_t a2, NSUInteger a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v10 = *(id *)(a1 + 32);
    }
    else {
      id v10 = [objc_alloc((Class)AXAttributedString) initWithString:*(void *)(a1 + 32)];
    }
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = v10;
  }
  unint64_t v11 = *(void *)(a1 + 48);
  BOOL v12 = a2 >= v11;
  NSUInteger v13 = a2 - v11;
  if (v12) {
    NSUInteger v14 = v13;
  }
  else {
    NSUInteger v14 = 0;
  }
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (v14 >= (unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) length])
    {
      int ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, @"The attribute being applied is out of bounds!", v16, v17, v18, v19, v20, v24))abort(); {
    }
      }
  }
  v27.NSUInteger length = (NSUInteger)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) length];
  v26.NSUInteger location = v14;
  v26.NSUInteger length = a3;
  v27.NSUInteger location = 0;
  NSRange v21 = NSIntersectionRange(v26, v27);
  uint64_t v22 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);

  return [v22 setAttribute:a5 forKey:a4 withRange:v21.location, v21.length];
}

id sub_27B988(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) _tsaxLastCharacterIndexForActivation];

  return [v1 setInsertionPoint:v2];
}

void sub_27C3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_27C3E8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 isEqual:*(void *)(a1 + 32)];
  if (result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_27CAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_27CB10(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) rectsForSelection:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_27D04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_27D064(uint64_t a1, uint64_t a2)
{
}

void sub_27D074(uint64_t a1)
{
}

id sub_27D080(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) valueForProperty:*(unsigned int *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

NSString *THAccessibilityLocalizedString(uint64_t a1)
{
  id v2 = [+[NSBundle bundleForClass:objc_opt_class()] localizedStringForKey:a1 value:&stru_46D7E8 table:@"THAccessibility"];
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (v2 == (NSString *)a1)
    {
      int ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, @"error: String could not be found for key: %@", v4, v5, v6, v7, v8, a1))abort(); {
    }
      }
  }
  return v2;
}

NSString *THAccessibilityLocalizedTimeDescription(float a1)
{
  uint64_t v1 = (int)a1;
  if ((int)v1 < 60)
  {
    unint64_t v2 = 0;
  }
  else
  {
    unint64_t v2 = v1 / 0x3CuLL;
    uint64_t v1 = v1 % 0x3C;
  }
  id v3 = TSAccessibilityLocalizedNumber((uint64_t)+[NSNumber numberWithInt:v1]);
  if (v1 == 1) {
    CFStringRef v4 = @"time.unit.second.singular";
  }
  else {
    CFStringRef v4 = @"time.unit.second.plural";
  }
  uint64_t v5 = THAccessibilityLocalizedString((uint64_t)v4);
  if (!v2) {
    return +[NSString stringWithFormat:THAccessibilityLocalizedString(@"time.format.seconds %@ %@"), v3, v5, v10, v11];
  }
  id v6 = TSAccessibilityLocalizedNumber((uint64_t)+[NSNumber numberWithInt:v2]);
  if (v2 == 1) {
    CFStringRef v7 = @"time.unit.minute.singular";
  }
  else {
    CFStringRef v7 = @"time.unit.minute.plural";
  }
  uint64_t v8 = THAccessibilityLocalizedString((uint64_t)v7);
  return +[NSString stringWithFormat:THAccessibilityLocalizedString(@"time.format.minutesandseconds %@ %@ %@ %@"), v6, v8, v3, v5];
}

uint64_t THAccessibilityIsFKAEnabledWithKeyboardAttached()
{
  uint64_t result = _AXSFullKeyboardAccessEnabled();
  if (result) {
    return GSEventIsHardwareKeyboardAttached() != 0;
  }
  return result;
}

void sub_27F83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_27F854(uint64_t a1, uint64_t a2)
{
}

void sub_27F864(uint64_t a1)
{
}

id sub_27F870(uint64_t a1)
{
  id result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithTarget:context:", objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxLinkURL"), "absoluteString"), 0);
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_27FA14(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_invokeAction];
}

void sub_27FDD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_27FDF4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) thaxPerformActionAllowingToolbarHideRequestsWithBlock:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  return result;
}

id sub_27FEB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) showToolbarAnimated:0];
}

void sub_27FFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_27FFDC(uint64_t a1, uint64_t a2)
{
}

void sub_27FFEC(uint64_t a1)
{
}

id sub_27FFF8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) chapterBrowserController:*(void *)(a1 + 40) tocTileModelAtIndex:*(void *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_2800E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2800FC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isTOCVisible];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_280350(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)THBookViewControllerAccessibility;
  return [super removeTOC];
}

id sub_280400(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)THBookViewControllerAccessibility;
  return [super donePressedFromToolbar:v1];
}

void sub_281050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_281068(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_selectedTocViewController];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_281478(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidateLayers];
}

id sub_2817E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentRepExpanded:*(void *)(a1 + 40)];
}

id sub_281D50(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_pageRight];
}

id sub_281DD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_pageLeft];
}

id sub_281E94(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_horizontalOverscrollPreviousChapter];
}

id sub_281F10(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_horizontalOverscrollNextChapter];
}

id sub_281F8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_verticalOverscrollPreviousChapter];
}

id sub_282008(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_verticalOverscrollNextChapter];
}

id sub_2820C0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) thaxCanvasScrollView];

  return [v1 _accessibilitySendScrollStatus];
}

id sub_2821B4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) thaxCanvasScrollView];

  return [v1 _accessibilitySendScrollStatus];
}

id sub_282254(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tsaxValueForKey:@"canvasScrollView"];

  return [v1 thaxSetScrollingDelegate:0];
}

id sub_282308(uint64_t a1)
{
  return [*(id *)(a1 + 32) showToolbarAnimated:0];
}

void sub_2824B4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tsaxChildren];
  if ([v1 count])
  {
    id v2 = objc_alloc_init((Class)NSMutableArray);
    id v6 = v2;
    id v3 = v1;
    while (1)
    {
      [v2 tsaxAddObjectsInReverseOrder:v3];
      if (![v6 count]) {
        break;
      }
      id v4 = [v6 tsaxPopObject];
      if ([v4 isAccessibilityElement])
      {

        if (v4)
        {
          uint64_t v5 = +[TSAccessibility sharedInstance];
          [(TSAccessibility *)v5 setFirstElementForUpcomingScreenChange:v4];
        }
        return;
      }
      id v3 = [v4 accessibilityElements];
      id v2 = v6;
    }
  }
}

id sub_282930(uint64_t a1)
{
  [*(id *)(a1 + 32) thaxSetScrollingDelegate:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);

  return [v2 tsaxSetUseContentInset:1];
}

void sub_282AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_282ABC(uint64_t a1, uint64_t a2)
{
}

void sub_282ACC(uint64_t a1)
{
}

id sub_282AD8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) bodyStorageForPresentationType:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_282C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_282C40(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) nodeUniqueIDForInfo:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_282D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_282D68(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) infoForNodeUniqueID:*(void *)(a1 + 40) forPresentationType:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_2838D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleHyperlink:*(void *)(a1 + 40) hitRep:*(void *)(a1 + 48)];
}

void sub_283EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_283EC0(uint64_t a1, uint64_t a2)
{
}

void sub_283ED0(uint64_t a1)
{
}

id sub_283EDC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) repForLayout:[*(id *)(a1 + 40) tsaxValueForKey:@"resultsLayout"]];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_283F24(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) repForLayout:[*(id *)(a1 + 40) tsaxValueForKey:@"checkingLayout"]];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_28422C(uint64_t a1)
{
  return [*(id *)(a1 + 32) animateTopCardToBottomInDirection:-1.0, 0.0];
}

id sub_2842B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) animateBottomCardToTopInDirection:1.0, 0.0];
}

void sub_284370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_284388(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isShowingEmptyStudyCard];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_284904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_28491C(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxDelegate"), "overlayableZoomableCanvasController:expandBoundsForHitTesting:", *(void *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  id v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_285344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28535C(uint64_t a1, uint64_t a2)
{
}

void sub_28536C(uint64_t a1)
{
}

id sub_285378(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_repForQuestion:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_285448(uint64_t a1)
{
  [*(id *)(a1 + 32) thaxSetScrollingDelegate:0];
  id v2 = *(void **)(a1 + 32);

  return [v2 tsaxSetScrollStatusFormatString:0];
}

id sub_285580(uint64_t a1)
{
  [*(id *)(a1 + 32) thaxSetScrollingDelegate:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);
  id v3 = TSAccessibilityLocalizedString(@"glossary.scroll.view.status.string.format");

  return [v2 tsaxSetScrollStatusFormatString:v3];
}

void sub_2858F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_285910(uint64_t a1, uint64_t a2)
{
}

void sub_285920(uint64_t a1)
{
}

id sub_28592C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) contentNodeForRelativePageIndex:*(void *)(a1 + 56) forPresentationType:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_285A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_285A44(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) absolutePageRangeForPresentationType:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = v4;
  return result;
}

void sub_285E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_285E58(uint64_t a1, uint64_t a2)
{
}

void sub_285E68(uint64_t a1)
{
}

id sub_285E74(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass"), "paginatedPresentationTypeInContext:", *(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_28600C(uint64_t a1)
{
  id v1 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "window"), "tsaxFindDescendantPassingTest:", &stru_46C3E0);
  if (v1)
  {
    id v2 = v1;
    UIAccessibilityNotifications v3 = TSAccessibilityMoveToElementNotification;
    UIAccessibilityPostNotification(v3, v2);
  }
}

BOOL sub_286064(id a1, id a2)
{
  NSClassFromString(@"TSWPRep");
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  unint64_t v3 = (unint64_t)[a2 accessibilityTraits];
  return (TSAccessibilityTraitHeader & v3) != 0;
}

id sub_2865A0(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v1 = *(void **)(a1 + 32);
  id result = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v9;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        id v6 = objc_msgSend(objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)v5), "tsaxValueForKey:", @"mICC"), "tsaxValueForKey:", @"canvasView");
        v7[0] = _NSConcreteStackBlock;
        v7[1] = 3221225472;
        v7[2] = sub_286710;
        v7[3] = &unk_456DE0;
        void v7[4] = v6;
        if (__TSAccessibilityPerformSafeBlock((uint64_t)v7)) {
          abort();
        }
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_286710(uint64_t a1)
{
  return [*(id *)(a1 + 32) tsaxInvalidateChildrenEventually];
}

void sub_286838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_286860(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tsaxRepForInfo:*(void *)(a1 + 40)];
  if (v2)
  {
    UIAccessibilityPostNotification(TSAccessibilityMoveToElementNotification, v2);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
}

void sub_286A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_286AA8(uint64_t a1, uint64_t a2)
{
}

void sub_286AB8(uint64_t a1)
{
}

id sub_286AC4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) objectForKey:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_286EA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_showOverlay:*(void *)(a1 + 40) withAutoHide:0];
}

id sub_28702C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_hideOverlay:*(void *)(a1 + 40)];
}

id sub_2872EC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _thaxView];
  objc_opt_class();
  id v2 = [v1 subviews];
  objc_msgSend(objc_msgSend(v1, "window"), "bounds");
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id result = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (result)
  {
    id v12 = result;
    uint64_t v13 = *(void *)v17;
    do
    {
      NSUInteger v14 = 0;
      do
      {
        if (*(void *)v17 != v13) {
          objc_enumerationMutation(v2);
        }
        long long v15 = *(void **)(*((void *)&v16 + 1) + 8 * (void)v14);
        if (objc_opt_isKindOfClass())
        {
          [v15 frame];
          v22.origin.CGFloat x = v4;
          v22.origin.CGFloat y = v6;
          v22.size.CGFloat width = v8;
          v22.size.CGFloat height = v10;
          if (CGRectEqualToRect(v21, v22))
          {
            [v15 setIsAccessibilityElement:1];
            [v15 setAccessibilityLabel:THAccessibilityLocalizedString(@"introduction.image")];
            [v15 setAccessibilityHint:THAccessibilityLocalizedString(@"introduction.image.hint.iOS")];
          }
        }
        NSUInteger v14 = (char *)v14 + 1;
      }
      while (v12 != v14);
      id result = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
      id v12 = result;
    }
    while (result);
  }
  return result;
}

id sub_287578(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_nextPage];
}

id sub_287784(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)THWAdornmentControllerAccessibility;
  return [super setAdornmentsVisible:1];
}

id sub_287838(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)THWAdornmentControllerAccessibility;
  return [super setAdornmentsVisible:0];
}

void sub_287F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_287F4C(uint64_t a1, uint64_t a2)
{
}

void sub_287F5C(uint64_t a1)
{
}

id sub_287F68(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  char v11 = 0;
  double v7 = (objc_class *)objc_opt_class();
  CGFloat v8 = (void *)__TSAccessibilityCastAsClass(v7, a3, 1, &v11);
  if (v11) {
    abort();
  }
  double v9 = v8;
  id result = [v8 length];
  if (result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = v9;
    *a4 = 1;
  }
  return result;
}

void sub_288208(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_288220(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) indexOfNode:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result;
  return result;
}

uint64_t sub_2888AC(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    double v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    return (uint64_t)[v3 performSelector:v4];
  }
  return result;
}

void sub_289F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_289FAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = 0;
  return result;
}

void sub_289FBC(uint64_t a1)
{
}

uint64_t sub_289FC4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accessibilityRegionsForCurrentEvent];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = v2;

  return _objc_release_x1(v2, v4);
}

id sub_28A14C(uint64_t a1)
{
  return [*(id *)(a1 + 32) gotoNextEvent];
}

id sub_28A1F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) gotoPreviousEvent];
}

id sub_28A7AC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tsaxBoolValueForKey:@"_isTracking"];
  id v3 = [*(id *)(a1 + 32) tsaxBoolValueForKey:@"_needsCommit"];
  id v4 = [*(id *)(a1 + 32) tsaxBoolValueForKey:@"_canCommit"];
  [*(id *)(a1 + 32) setValue:&__kCFBooleanTrue forKey:@"_isTracking"];
  [*(id *)(a1 + 32) setValue:&__kCFBooleanTrue forKey:@"_needsCommit"];
  [*(id *)(a1 + 32) setValue:&__kCFBooleanTrue forKey:@"_canCommit"];
  [*(id *)(a1 + 32) thaxDuration];
  *(float *)&double v6 = v5 * *(float *)(a1 + 40);
  [*(id *)(a1 + 32) _setValueWhileTracking:v6];
  [*(id *)(a1 + 32) sendActionsForControlEvents:4096];
  [*(id *)(a1 + 32) setValue:[NSNumber numberWithBool:v4] forKey:@"_canCommit"];
  [*(id *)(a1 + 32) setValue:[NSNumber numberWithBool:v3] forKey:@"_needsCommit"];
  double v7 = *(void **)(a1 + 32);
  CGFloat v8 = +[NSNumber numberWithBool:v2];

  return [v7 setValue:v8 forKey:@"_isTracking"];
}

id sub_28B0C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) done:0];
}

void sub_28B1C4(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_28B250;
  v1[3] = &unk_457868;
  void v1[4] = *(void *)(a1 + 32);
  if (__TSAccessibilityPerformSafeBlock((uint64_t)v1)) {
    abort();
  }
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

uint64_t sub_28B250(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_28B50C(uint64_t a1)
{
  return [*(id *)(a1 + 32) thaxAnnounceCurrentGalleryItem];
}

id sub_28B968(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) thaxPopoverParentView];

  return [v1 thaxSetPresentedWidgetPopoverController:0];
}

id sub_28BAA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) thaxSetPresentedWidgetPopoverController:*(void *)(a1 + 40)];
}

id sub_28BDB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) followLink:*(void *)(a1 + 40)];
}

id sub_28BE68(uint64_t a1)
{
  [*(id *)(a1 + 32) tsaxSetUseContentInset:0];
  [*(id *)(a1 + 32) thaxSetScrollingDelegate:0];
  [*(id *)(a1 + 40) tsaxSetUseContentInset:1];
  id v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);

  return [v2 thaxSetScrollingDelegate:v3];
}

id sub_28C004(uint64_t a1)
{
  [*(id *)(a1 + 32) tsaxSetShouldIgnoreSiblingPageControl:0];
  [*(id *)(a1 + 32) thaxSetScrollingDelegate:0];
  id v2 = *(void **)(a1 + 32);

  return [v2 tsaxSetScrollAnnouncementDelay:0.0];
}

id sub_28C054(uint64_t a1)
{
  [*(id *)(a1 + 32) tsaxSetShouldIgnoreSiblingPageControl:1];
  [*(id *)(a1 + 32) thaxSetScrollingDelegate:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);

  return [v2 tsaxSetScrollAnnouncementDelay:0.2];
}

id sub_28C1C4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)THChapterBrowserControllerAccessibility;
  [super viewDidAppear:v1];
}

id sub_28CB58(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_resetPagesScrollViewAndCapThumbCount:0 firstVisibleRelativePage:0 resetContentOffset:1];
}

void sub_28CCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28CD08(uint64_t a1, uint64_t a2)
{
}

void sub_28CD18(uint64_t a1)
{
}

id sub_28CD24(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_axTileModelOfChapterAtIndex:", *(unsigned int *)(a1 + 48)), "tsaxValueForKey:", @"portraitEntries");
  id result = [v2 count];
  if (result)
  {
    id result = [v2 objectAtIndex:0][@"sectionIdentifier"];
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  }
  return result;
}

void sub_28D5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 144), 8);
  _Unwind_Resume(a1);
}

NSArray *sub_28D644(uint64_t a1)
{
  [*(id *)(a1 + 32) contentOffset];
  uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = v4;
  CGFloat v5 = *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 32);
  CGFloat v6 = *(double *)(a1 + 48);
  CGFloat v7 = *(double *)(a1 + 56);
  CGFloat v8 = objc_opt_new();
  id v9 = [*(id *)(a1 + 32) subviews];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        [v14 frame];
        v27.origin.CGFloat x = v15;
        v27.origin.CGFloat y = v16;
        v27.size.CGFloat width = v17;
        v27.size.CGFloat height = v18;
        v26.origin.CGFloat y = 0.0;
        v26.origin.CGFloat x = v5;
        v26.size.CGFloat width = v6;
        v26.size.CGFloat height = v7;
        if (CGRectIntersectsRect(v26, v27))
        {
          NSClassFromString(@"THPageThumbnailView");
          if (objc_opt_isKindOfClass()) {
            [v8 addObject:v14];
          }
        }
      }
      id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v11);
  }
  [v8 sortUsingComparator:&stru_46C4C0];
  long long v19 = +[NSArray arrayWithArray:v8];

  return v19;
}

int64_t sub_28D800(id a1, id a2, id a3)
{
  unsigned int v5 = [a2 tsaxUnsignedIntValueForKey:@"chapterIndex"];
  unsigned int v6 = [a3 tsaxUnsignedIntValueForKey:@"chapterIndex"];
  if (v5 < v6) {
    return -1;
  }
  if (v6 < v5) {
    return 1;
  }
  unsigned int v8 = [a2 tsaxUnsignedIntValueForKey:@"pageIndex"];
  unsigned int v9 = [a3 tsaxUnsignedIntValueForKey:@"pageIndex"];
  if (v8 >= v9) {
    return v9 < v8;
  }
  else {
    return -1;
  }
}

id sub_28D8A8(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 tsaxUnsignedIntValueForKey:@"chapterIndex"];
  if (a1[6] == result)
  {
    *(void *)(*(void *)(a1[4] + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = a2;
    *a4 = 1;
  }
  else
  {
    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
  }
  return result;
}

void sub_28DD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28DD4C(uint64_t a1, uint64_t a2)
{
}

void sub_28DD5C(uint64_t a1)
{
}

id sub_28DD68(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxPageController"), "thaxCurrentPageNumberUsingPhysicalBookFormatString:", 0);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_28DE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSUInteger sub_28DE80(NSRange *a1, uint64_t a2, void *a3)
{
  char v9 = 0;
  unsigned int v5 = objc_opt_class();
  Class v6 = __TSAccessibilityCastAsSafeCategory(v5, (uint64_t)[a3 tsaxValueForKey:@"annotation"], 1, &v9);
  if (v9) {
    abort();
  }
  v10.NSUInteger location = (NSUInteger)[(objc_class *)v6 thaxAnnotationStorageRange];
  NSRange v8 = NSIntersectionRange(v10, a1[3]);
  NSUInteger result = v8.location;
  if (v8.length) {
    NSUInteger result = (*(uint64_t (**)(void))(a1[2].location + 16))();
  }
  ++*(void *)(*(void *)(a1[2].length + 8) + 24);
  return result;
}

void sub_28E048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_28E060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSRange v8 = objc_opt_class();
  Class result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  if (result)
  {
    Class result = (Class)[*(id *)(a1 + 32) thaxHyperlinkFieldRepresentsAGlossaryTerm:result];
    if (result)
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxStorage"), "tsaxSubstringWithRange:", a3, a4);
      Class result = (Class)(*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  return result;
}

void sub_28E224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_28E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSRange v8 = objc_opt_class();
  Class result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  if (result)
  {
    Class result = (Class)[*(id *)(a1 + 32) thaxHyperlinkFieldRepresentsAGlossaryTerm:result];
    if ((result & 1) == 0)
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxStorage"), "tsaxSubstringWithRange:", a3, a4);
      Class result = (Class)(*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  return result;
}

void sub_28E510(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_28E52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a6 = 1;
  }
  return result;
}

uint64_t sub_28E584(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  [a3 thaxAnnotationStorageRange];
  [a3 thaxHighlightStyleDescription];
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a4 = 1;
  }
  return result;
}

uint64_t sub_28E61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
    *a6 = 1;
  }
  return result;
}

uint64_t sub_28E68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  (*(void (**)(void, uint64_t, uint64_t, NSNumber *, void *, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a4, a5, +[NSNumber numberWithUnsignedLongLong:TSAccessibilityTraitLink], &__kCFBooleanTrue, *(void *)(*(void *)(a1 + 40) + 8) + 24);
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a6 = 1;
  }
  return result;
}

void sub_28EA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_28EA84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v4 = [v3 _thaxHighlightsRotorItems];

  return [v3 _thaxRotorItemForPredicate:a2 fromItems:v4];
}

void sub_28EBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_28EC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v4 = [v3 _thaxLinksRotorItems];

  return [v3 _thaxRotorItemForPredicate:a2 fromItems:v4];
}

void sub_28ED7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_28ED94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v4 = [v3 _thaxGlossaryTermsRotorItems];

  return [v3 _thaxRotorItemForPredicate:a2 fromItems:v4];
}

BOOL sub_28F074(uint64_t a1, void *a2)
{
  id v3 = [a2 tsaxRange];
  uint64_t v5 = v4;
  return v3 == [*(id *)(a1 + 32) tsaxRange] && v5 == v6;
}

void sub_28F168(id a1, THWPRepCustomRotorItemAccessibilityElement *a2, unint64_t a3, BOOL *a4)
{
}

void sub_28F174(id a1, THWPRepCustomRotorItemAccessibilityElement *a2, unint64_t a3, BOOL *a4)
{
}

void sub_28F180(id a1, THWPRepCustomRotorItemAccessibilityElement *a2, unint64_t a3, BOOL *a4)
{
}

void sub_28F2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = [*(id *)(a1 + 32) tsaxRepRangeWithStorageRange:a4, a5];
  id v8 = +[TSDTextRangeAccessibility tsaxNewTextRangeWithRange:](TSDTextRangeAccessibility, "tsaxNewTextRangeWithRange:", v6, v7);
  [*(id *)(a1 + 40) addObject:v8];
}

void sub_28F400(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 thaxAnnotationStorageRange];
  id v6 = [*(id *)(a1 + 32) tsaxRepRangeWithStorageRange:v4, v5];
  id v8 = +[TSDTextRangeAccessibility tsaxNewTextRangeWithRange:](TSDTextRangeAccessibility, "tsaxNewTextRangeWithRange:", v6, v7);
  [*(id *)(a1 + 40) addObject:v8];
}

void sub_28F544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = [*(id *)(a1 + 32) tsaxRepRangeWithStorageRange:a4, a5];
  id v8 = +[TSDTextRangeAccessibility tsaxNewTextRangeWithRange:](TSDTextRangeAccessibility, "tsaxNewTextRangeWithRange:", v6, v7);
  [*(id *)(a1 + 40) addObject:v8];
}

id sub_28F894(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_selectAnswer];
}

void sub_29226C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_292284(uint64_t a1, uint64_t a2)
{
}

void sub_292294(uint64_t a1)
{
}

uint64_t sub_2922A0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = a2;
    *a3 = 1;
  }
  return result;
}

id sub_2927A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)THFlowTOCViewControllerAccessibility;
  return [super viewDidAppear:v1];
}

void sub_292880(uint64_t a1)
{
  [*(id *)(a1 + 32) _axShowToolbar];
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxDelegate"), "tsaxValueForKey:", @"closeButton");
  UIAccessibilityNotifications v3 = TSAccessibilityMoveToElementNotification;

  UIAccessibilityPostNotification(v3, v2);
}

id sub_292C2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateWithNewPageIndex:*(void *)(a1 + 40) animated:0];
}

id sub_292CDC(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_updateWithNewPageIndex:*(void *)(a1 + 40) animated:0];
}

id sub_293140(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_returnToOriginalViewController];
}

id sub_2939AC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_293A1C;
  v3[3] = &unk_456DE0;
  void v3[4] = v1;
  return [v1 thaxPerformActionAllowingToolbarHideRequestsWithBlock:v3];
}

id sub_293A1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) hideToolbarAnimated:0];
}

id sub_293B78(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)THTOCViewControllerAccessibility;
  return [super viewDidAppear:v1];
}

char *sub_293C8C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxValueForKey:", @"accessibilityContainer"), "tsaxValueForKey:", @"accessibilityElements");
  objc_super v3 = (char *)[v2 count];
  uint64_t result = (char *)[v2 indexOfObject:*(void *)(a1 + 32)];
  if (result != (char *)0x7FFFFFFFFFFFFFFFLL)
  {
    id v5 = 0;
    UIAccessibilityTraits v6 = UIAccessibilityTraitCausesPageTurn;
    uint64_t v7 = result + 1;
    while (v7 < v3)
    {
      id v8 = [v2 objectAtIndex:v7];
      char v9 = v8;
      if (!v5) {
        id v5 = v8;
      }
      unint64_t v10 = (unint64_t)[v8 accessibilityTraits];
      if ((v6 & v10) == 0)
      {
        unint64_t v11 = v10;
        if (([v9 conformsToProtocol:&OBJC_PROTOCOL___UIAccessibilityReadingContent] & 1) == 0)
        {
          ++v7;
          if ((TSAccessibilityTraitBookContent & v11) == 0) {
            continue;
          }
        }
      }
      goto LABEL_11;
    }
    char v9 = v5;
LABEL_11:
    uint64_t v12 = +[TSAccessibility sharedInstance];
    return (char *)[(TSAccessibility *)v12 setFirstElementForUpcomingPageTurn:v9];
  }
  return result;
}

id sub_29415C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tsaxValueForKey:@"mScrollView"];

  return [v1 thaxSetVerticalScrollingDisabled:1];
}

id sub_29428C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_showEditorForHighlight:*(void *)(a1 + 40)];
}

void sub_294370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_294388(uint64_t a1, uint64_t a2)
{
}

void sub_294398(uint64_t a1)
{
}

id sub_2943A4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) highlightAtCanvasPoint:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_2944B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2944CC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) annotationForRange:*(void *)(a1 + 48), *(void *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_2945DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2945F4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) annotationsForRange:*(void *)(a1 + 48) *(void *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_295018(uint64_t a1)
{
  return [*(id *)(a1 + 32) interactiveImageCalloutPressed:*(void *)(a1 + 40)];
}

id sub_295A20(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxDelegate"), "buttonControlWasPressed:", *(void *)(a1 + 32));
  id v2 = objc_opt_class();
  Class v3 = __TSAccessibilityCastAsSafeCategory(v2, (uint64_t)[*(id *)(a1 + 32) tsaxCanvas], 0, 0);

  return [(objc_class *)v3 thaxInvalidateLayers];
}

id sub_2964EC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) thaxCanvasView];

  return [v1 tsaxInvalidateChildrenImmediately];
}

void sub_296BC8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_296BE4(uint64_t a1)
{
  uint64_t result = (uint64_t)[*(id *)(a1 + 32) linkForHyperlinkField:*(void *)(a1 + 40)];
  if (result)
  {
    [*(id *)(a1 + 48) anchorFromLink:result];
    NSClassFromString(@"THModelGlossaryEntryAnchor");
    uint64_t result = objc_opt_isKindOfClass();
    if (result) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    }
  }
  return result;
}

id sub_296D10(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  [v2 accessibilityActivationPoint];

  return [v1 pressableRepWasPressed:v2];
}

uint64_t sub_296FA8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tsaxRepForInfo:*(void *)(a1 + 40)];
  NSClassFromString(@"TSWPRep");
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    return (uint64_t)[v1 tsaxSetShouldIgnoreParentShape:1];
  }
  return result;
}

NSString *__cdecl sub_2970A8(id a1, THUISliderAccessibility *a2)
{
  char v15 = 0;
  Class v3 = objc_opt_class();
  Class v4 = __TSAccessibilityCastAsSafeCategory(v3, (uint64_t)a2, 1, &v15);
  if (v15) {
    abort();
  }
  Class v5 = v4;
  [(objc_class *)v4 thaxValue];
  float v7 = v6;
  [(objc_class *)v5 thaxDuration];
  float v9 = ceilf(v7 * v8);
  [(objc_class *)v5 thaxDuration];
  float v11 = v10;
  uint64_t v12 = THAccessibilityLocalizedString(@"av.duration.format %@ %@");
  uint64_t v13 = THAccessibilityLocalizedTimeDescription(v9);
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", v12, v13, THAccessibilityLocalizedTimeDescription(v11));
}

void sub_297A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_297A70(uint64_t a1, uint64_t a2)
{
}

void sub_297A80(uint64_t a1)
{
}

id sub_297A8C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) hyperlinkAtLocation:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

id sub_297AC4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) eventIndexForSlideIndex:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

id sub_297C04(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissPopoverAnimated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_297E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_297E78(uint64_t a1, uint64_t a2)
{
}

void sub_297E88(uint64_t a1)
{
}

id sub_297E94(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) pageNumberStringForAbsolutePageIndex:*(void *)(a1 + 56) forPresentationType:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_297FD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_297FEC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) majorSnippetForAbsolutePageIndex:*(void *)(a1 + 64) withDocumentRoot:*(void *)(a1 + 40) forPresentationType:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_29812C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_298144(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) minorSnippetForAbsolutePageIndex:*(void *)(a1 + 64) withDocumentRoot:*(void *)(a1 + 40) forPresentationType:*(void *)(a1 + 48)];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_2982FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_298318(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_lessonNodeForContentNode:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

uint64_t sub_298350(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = *(void *)(result + 32);
  return result;
}

void sub_2984DC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_2984F8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_chapterNodeForContentNode:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

uint64_t sub_298530(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = *(void *)(result + 32);
  return result;
}

void sub_298618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_298630(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) navigationUnitContainingContentNode:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_298780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_298798(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) chapterAndNumberStringForNavigationUnit:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  return result;
}

void sub_299348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_299360(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

void sub_299464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_29947C(uint64_t a1, uint64_t a2)
{
}

void sub_29948C(uint64_t a1)
{
}

Class sub_299498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  float v8 = objc_opt_class();
  Class result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) {
    *a5 = 1;
  }
  return result;
}

id sub_29971C(uint64_t a1)
{
  return [*(id *)(a1 + 32) play];
}

id sub_29A05C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) tsaxValueForKey:@"thaxParentRep"];

  return [v1 thaxSetOriginatingButton:v2];
}

id sub_29A2E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

void sub_29A6FC(uint64_t a1)
{
  if (objc_msgSend(*(id *)(a1 + 32), "isEqual:", objc_msgSend(*(id *)(a1 + 40), "storageUID"))) {
    id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "thaxInteractiveCanvasController"), "thaxBodyRepForStorage:", *(void *)(a1 + 56));
  }
  else {
    id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "thaxInteractiveCanvasController"), "tsaxRepForInfo:", objc_msgSend(*(id *)(a1 + 64), "thaxInfoForNodeUniqueID:forPresentationType:", objc_msgSend(*(id *)(a1 + 40), "storageUID"), *(void *)(a1 + 72)));
  }
  Class v3 = v2;
  if (v2)
  {
    UIAccessibilityNotifications v4 = UIAccessibilityLayoutChangedNotification;
    UIAccessibilityPostNotification(v4, v3);
  }
}

id sub_29AF6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) p_changeToPageAtIndex:*(void *)(a1 + 40)];
}

id sub_29B2B4(uint64_t a1)
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxPlayButtonRep"), "tsaxValueForKey:", @"layout");

  return [v1 invalidateFrame];
}

void sub_29B594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_29B5C0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) thaxAnnotationStorageRange];
  [v2 p_repRectForHighlight:v3, v4];
  Class v5 = *(void **)(*(void *)(a1 + 56) + 8);
  void v5[4] = v6;
  void v5[5] = v7;
  void v5[6] = v8;
  v5[7] = v9;
  id result = [*(id *)(a1 + 48) convertNaturalRectToUnscaledCanvas:*(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 56)];
  float v11 = *(void **)(*(void *)(a1 + 56) + 8);
  v11[4] = v12;
  v11[5] = v13;
  void v11[6] = v14;
  v11[7] = v15;
  return result;
}

void sub_29B854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_29B86C(uint64_t a1, uint64_t a2)
{
}

void sub_29B87C(uint64_t a1)
{
}

Class sub_29B888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v8 = objc_opt_class();
  Class result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 4UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) {
    *a5 = 1;
  }
  return result;
}

void sub_29C118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_29C138(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) thaxAnnotationStorageRange];
  [v2 p_repRectForHighlight:v3, v4];
  Class v5 = *(void **)(*(void *)(a1 + 64) + 8);
  void v5[4] = v6;
  void v5[5] = v7;
  void v5[6] = v8;
  v5[7] = v9;
  [*(id *)(a1 + 48) convertNaturalRectToUnscaledCanvas:*(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 32) *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 48) *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 56)];
  float v10 = *(void **)(*(void *)(a1 + 64) + 8);
  void v10[4] = v11;
  void v10[5] = v12;
  v10[6] = v13;
  void v10[7] = v14;
  id result = [*(id *)(a1 + 56) convertUnscaledToBoundsRect:*(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 56)];
  CGFloat v16 = *(void **)(*(void *)(a1 + 64) + 8);
  v16[4] = v17;
  v16[5] = v18;
  void v16[6] = v19;
  v16[7] = v20;
  return result;
}

uint64_t sub_29CB60(uint64_t a1)
{
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(a1 + 32));
  +[UIFocusRingManager moveRingToFocusItem:*(void *)(a1 + 32) forClient:@"AXFKATextFieldClient"];
  uint64_t v2 = *(void *)(a1 + 32);

  return __UIAXAssignFocusToItem(v2);
}

void sub_29D25C(id a1)
{
}

id sub_29F2D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) play];
}

id sub_29F2DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) pause];
}

BOOL sub_29F8AC(id a1, double a2, double a3)
{
  return vabdd_f64(a3, a2) < 25.0;
}

uint64_t sub_29F8C0(uint64_t a1, void *a2, void *a3)
{
  [a2 accessibilityFrame];
  double v6 = v5;
  double v8 = v7;
  [a3 accessibilityFrame];
  double v10 = v9;
  double v12 = v11;
  if ((*(unsigned int (**)(double, double))(*(void *)(a1 + 32) + 16))(v6, v9))
  {
    char v13 = (*(uint64_t (**)(double, double))(*(void *)(a1 + 32) + 16))(v8, v12);
    uint64_t v14 = -1;
    if (v8 >= v12) {
      uint64_t v14 = 1;
    }
    if (v13) {
      return 0;
    }
    else {
      return v14;
    }
  }
  else if (v6 >= v10)
  {
    return 1;
  }
  else
  {
    return -1;
  }
}

void sub_2A053C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2A0554(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _accessibilityBoundsForRange:*(void *)(a1 + 48) *(void *)(a1 + 56)];
  id v3 = *(void **)(*(void *)(a1 + 40) + 8);
  void v3[4] = v4;
  void v3[5] = v5;
  void v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_2A07B8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "THiOSFlowToCTableViewController: Beginning request for ToC book cover: %@", (uint8_t *)&v2, 0xCu);
}

void sub_2A0830(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "THiOSFlowToCTableViewController: Failed request for ToC book cover: %@", (uint8_t *)&v3, 0xCu);
}

void sub_2A08AC(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Layer host is not a <THiOSTraitsCacheHosting>", v1, 2u);
}

void sub_2A08F0(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
}

void sub_2A0968(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Failed to create Content Blocking rules for bliss web widget %@", (uint8_t *)&v2, 0xCu);
}

void sub_2A09E0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&void v3[4] = *(void *)(a1 + 32);
  *(_WORD *)&v3[12] = 2114;
  *(void *)&v3[14] = a2;
  sub_807D8(&dword_0, a2, a3, "AEPDFPlugin coordinateReadingItemAtURL Error taking coordinate read for %@;  Error: %{public}@",
    *(void *)v3,
    *(void *)&v3[8],
    *(void *)&v3[16]);
}

void sub_2A0A5C()
{
  sub_807F8();
  uint64_t v3 = v0;
  _os_log_error_impl(&dword_0, v1, OS_LOG_TYPE_ERROR, "Error authenticating account: %@ -- %@", v2, 0x16u);
}

void sub_2A0AE4()
{
  sub_807F8();
  sub_807D8(&dword_0, v0, v1, "Error refetching bag for dsid: %@ -- %@");
}

void sub_2A0B54(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Unable to create interaction for highlight edit menu", v1, 2u);
}

void sub_2A0B98(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Unable to set annotation style", v1, 2u);
}

void sub_2A0BDC()
{
  sub_122090();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "Could not read pagination data at %{public}@: %{public}@", v1, 0x16u);
}

void sub_2A0C58()
{
  sub_122090();
  sub_807D8(&dword_0, v0, v1, "Error unarchiving pagination data at %{public}@: %{public}@");
}

void sub_2A0CC4(uint64_t a1, uint8_t *buf)
{
  *(_DWORD *)buf = 138543362;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Exception loading reflowable pagination cache: %{public}@", buf, 0xCu);
}

void sub_2A0D10()
{
  sub_122090();
  sub_807D8(&dword_0, v0, v1, "Error writing pagination data at %{public}@: %{public}@");
}

void sub_2A0D7C(void *a1)
{
  [a1 description];
  sub_191F90(&dword_0, v1, v2, "appearing CFIs %@", v3, v4, v5, v6, 2u);
}

void sub_2A0DF8(void *a1)
{
  [a1 description];
  sub_191F90(&dword_0, v1, v2, "disappearing CFIs %@", v3, v4, v5, v6, 2u);
}

void sub_2A0E74()
{
  sub_1CD428();
  sub_807D8(&dword_0, v0, v1, "Error reading curves from file %{public}@: %{public}@");
}

void sub_2A0EE4()
{
  sub_1CD428();
  sub_807D8(&dword_0, v0, v1, "Error unarchiving animation curves at %{public}@: %{public}@");
}

void sub_2A0F54(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Error trying to unarchive user data dictionary: %{public}@", (uint8_t *)&v3, 0xCu);
}

uint64_t BABackgroundColorDataFromBCAppearanceStyle()
{
  return _BABackgroundColorDataFromBCAppearanceStyle();
}

uint64_t BCIMLog()
{
  return _BCIMLog();
}

uint64_t BCImageCacheLog()
{
  return _BCImageCacheLog();
}

uint64_t BCReadingStatisticsLog()
{
  return _BCReadingStatisticsLog();
}

uint64_t BCReportAssertionFailureWithMessage()
{
  return _BCReportAssertionFailureWithMessage();
}

uint64_t BUClassAndProtocolCast()
{
  return _BUClassAndProtocolCast();
}

uint64_t BUDynamicCast()
{
  return _BUDynamicCast();
}

uint64_t BUProtocolCast()
{
  return _BUProtocolCast();
}

uint64_t C3DSetFileDecryptionCallbacks()
{
  return _C3DSetFileDecryptionCallbacks();
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

CATransform3D *__cdecl CATransform3DConcat(CATransform3D *__return_ptr retstr, CATransform3D *a, CATransform3D *b)
{
  return _CATransform3DConcat(retstr, a, b);
}

BOOL CATransform3DEqualToTransform(CATransform3D *a, CATransform3D *b)
{
  return _CATransform3DEqualToTransform(a, b);
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return _CATransform3DGetAffineTransform(retstr, t);
}

CATransform3D *__cdecl CATransform3DMakeAffineTransform(CATransform3D *__return_ptr retstr, CGAffineTransform *m)
{
  return _CATransform3DMakeAffineTransform(retstr, m);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return _CATransform3DMakeRotation(retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DMakeScale(retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DMakeTranslation(retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return _CATransform3DRotate(retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DScale(retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DTranslate(retstr, t, tx, ty, tz);
}

int CC_MD5_Final(unsigned __int8 *md, CC_MD5_CTX *c)
{
  return _CC_MD5_Final(md, c);
}

int CC_MD5_Init(CC_MD5_CTX *c)
{
  return _CC_MD5_Init(c);
}

int CC_MD5_Update(CC_MD5_CTX *c, const void *data, CC_LONG len)
{
  return _CC_MD5_Update(c, data, len);
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return _CC_SHA1_Final(md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return _CC_SHA1_Init(c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA1_Update(c, data, len);
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

void CFAttributedStringBeginEditing(CFMutableAttributedStringRef aStr)
{
}

CFMutableAttributedStringRef CFAttributedStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return _CFAttributedStringCreateMutable(alloc, maxLength);
}

void CFAttributedStringEndEditing(CFMutableAttributedStringRef aStr)
{
}

void CFAttributedStringReplaceString(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement)
{
}

void CFAttributedStringSetAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value)
{
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return _CFDataCreateMutable(allocator, capacity);
}

UInt8 *__cdecl CFDataGetMutableBytePtr(CFMutableDataRef theData)
{
  return _CFDataGetMutableBytePtr(theData);
}

void CFDataSetLength(CFMutableDataRef theData, CFIndex length)
{
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return _CFDictionaryCreateMutableCopy(allocator, capacity, theDict);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return _CFDictionaryGetCount(theDict);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return _CFDictionaryGetTypeID();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return _CFDictionaryGetValueIfPresent(theDict, key, value);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return _CFPropertyListCreateWithData(allocator, data, options, format, error);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return _CFStringCompare(theString1, theString2, compareOptions);
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return _CFStringCreateWithBytes(alloc, bytes, numBytes, encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithCString(alloc, cStr, encoding);
}

CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator)
{
  return _CFStringCreateWithCharactersNoCopy(alloc, chars, numChars, contentsDeallocator);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return _CFStringCreateWithFormat(alloc, formatOptions, format);
}

CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range)
{
  return _CFStringCreateWithSubstring(alloc, str, range);
}

CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer)
{
  return _CFStringTokenizerAdvanceToNextToken(tokenizer);
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return _CFStringTokenizerCreate(alloc, string, range, options, locale);
}

CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer)
{
  CFRange CurrentTokenRange = _CFStringTokenizerGetCurrentTokenRange(tokenizer);
  CFIndex length = CurrentTokenRange.length;
  CFIndex location = CurrentTokenRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return _CFUUIDCreate(alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return _CFUUIDCreateString(alloc, uuid);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return _CGAffineTransformConcat(retstr, t1, t2);
}

BOOL CGAffineTransformEqualToTransform(CGAffineTransform *t1, CGAffineTransform *t2)
{
  return _CGAffineTransformEqualToTransform(t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return _CGAffineTransformInvert(retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return _CGAffineTransformIsIdentity(t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return _CGAffineTransformRotate(retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformScale(retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformTranslate(retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return _CGBitmapContextCreateImage(context);
}

size_t CGBitmapContextGetBytesPerRow(CGContextRef context)
{
  return _CGBitmapContextGetBytesPerRow(context);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return _CGBitmapContextGetData(context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return _CGBitmapContextGetHeight(context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return _CGBitmapContextGetWidth(context);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return _CGColorCreate(space, components);
}

CGColorRef CGColorCreateCopy(CGColorRef color)
{
  return _CGColorCreateCopy(color);
}

CGColorRef CGColorCreateCopyWithAlpha(CGColorRef color, CGFloat alpha)
{
  return _CGColorCreateCopyWithAlpha(color, alpha);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  return _CGColorGetAlpha(color);
}

void CGColorRelease(CGColorRef color)
{
}

CGColorRef CGColorRetain(CGColorRef color)
{
  return _CGColorRetain(color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextBeginTransparencyLayer(CGContextRef c, CFDictionaryRef auxiliaryInfo)
{
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextClipToRect(CGContextRef c, CGRect rect)
{
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextDrawPDFPage(CGContextRef c, CGPDFPageRef page)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextEndTransparencyLayer(CGContextRef c)
{
}

void CGContextFillPath(CGContextRef c)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
}

void CGContextSetLineDash(CGContextRef c, CGFloat phase, const CGFloat *lengths, size_t count)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

void CGContextSetShouldAntialias(CGContextRef c, BOOL shouldAntialias)
{
}

void CGContextSetShouldSmoothFonts(CGContextRef c, BOOL shouldSmoothFonts)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetTextMatrix(CGContextRef c, CGAffineTransform *t)
{
}

void CGContextSetTextPosition(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextStrokeEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextStrokeLineSegments(CGContextRef c, const CGPoint *points, size_t count)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextStrokeRect(CGContextRef c, CGRect rect)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return _CGDataProviderCreateWithCFData(data);
}

void CGDataProviderRelease(CGDataProviderRef provider)
{
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return _CGGradientCreateWithColors(space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

CGImageRef CGImageCreateWithPNGDataProvider(CGDataProviderRef source, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return _CGImageCreateWithPNGDataProvider(source, decode, shouldInterpolate, intent);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return _CGImageDestinationCreateWithData(data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return _CGImageDestinationFinalize(idst);
}

CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef image)
{
  return _CGImageGetAlphaInfo(image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

void CGImageRelease(CGImageRef image)
{
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return _CGImageRetain(image);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCopyPropertiesAtIndex(isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateImageAtIndex(isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateThumbnailAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithData(data, options);
}

CGImageSourceRef CGImageSourceCreateWithDataProvider(CGDataProviderRef provider, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithDataProvider(provider, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

CGPDFDocumentRef CGPDFDocumentCreateWithProvider(CGDataProviderRef provider)
{
  return _CGPDFDocumentCreateWithProvider(provider);
}

CGPDFDocumentRef CGPDFDocumentCreateWithURL(CFURLRef url)
{
  return _CGPDFDocumentCreateWithURL(url);
}

CGPDFPageRef CGPDFDocumentGetPage(CGPDFDocumentRef document, size_t pageNumber)
{
  return _CGPDFDocumentGetPage(document, pageNumber);
}

void CGPDFDocumentRelease(CGPDFDocumentRef document)
{
}

CGRect CGPDFPageGetBoxRect(CGPDFPageRef page, CGPDFBox box)
{
  return _CGPDFPageGetBoxRect(page, box);
}

CGAffineTransform *__cdecl CGPDFPageGetDrawingTransform(CGAffineTransform *__return_ptr retstr, CGPDFPageRef page, CGPDFBox box, CGRect rect, int rotate, BOOL preserveAspectRatio)
{
  return _CGPDFPageGetDrawingTransform(retstr, page, box, rect, rotate, preserveAspectRatio);
}

void CGPathAddArc(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, BOOL clockwise)
{
}

void CGPathAddArcToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
{
}

void CGPathAddCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
{
}

void CGPathAddEllipseInRect(CGMutablePathRef path, const CGAffineTransform *m, CGRect rect)
{
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathAddRect(CGMutablePathRef path, const CGAffineTransform *m, CGRect rect)
{
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
}

CGPathRef CGPathCreateCopyByTransformingPath(CGPathRef path, const CGAffineTransform *transform)
{
  return _CGPathCreateCopyByTransformingPath(path, transform);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

BOOL CGPathEqualToPath(CGPathRef path1, CGPathRef path2)
{
  return _CGPathEqualToPath(path1, path2);
}

CGRect CGPathGetBoundingBox(CGPathRef path)
{
  return _CGPathGetBoundingBox(path);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathRelease(CGPathRef path)
{
}

CGPathRef CGPathRetain(CGPathRef path)
{
  return _CGPathRetain(path);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  return _CGRectApplyAffineTransform(rect, t);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

BOOL CGRectIsNull(CGRect rect)
{
  return _CGRectIsNull(rect);
}

uint64_t CGRectMakeWithSize()
{
  return _CGRectMakeWithSize();
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

CGSize CGSizeFromString(NSString *string)
{
  CGSize v3 = _CGSizeFromString(string);
  double height = v3.height;
  double width = v3.width;
  result.double height = height;
  result.double width = width;
  return result;
}

CMTime *__cdecl CMTimeClampToRange(CMTime *__return_ptr retstr, CMTime *time, CMTimeRange *range)
{
  return _CMTimeClampToRange(retstr, time, range);
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return _CMTimeCompare(time1, time2);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return _CMTimeMakeWithSeconds(retstr, seconds, preferredTimescale);
}

CMTimeRange *__cdecl CMTimeRangeMake(CMTimeRange *__return_ptr retstr, CMTime *start, CMTime *duration)
{
  return _CMTimeRangeMake(retstr, start, duration);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return _CMTimeSubtract(retstr, lhs, rhs);
}

CFStringRef CTFontCopyName(CTFontRef font, CFStringRef nameKey)
{
  return _CTFontCopyName(font, nameKey);
}

CFStringRef CTFontCopyPostScriptName(CTFontRef font)
{
  return _CTFontCopyPostScriptName(font);
}

CTFontRef CTFontCreateUIFontForLanguage(CTFontUIFontType uiType, CGFloat size, CFStringRef language)
{
  return _CTFontCreateUIFontForLanguage(uiType, size, language);
}

CTFontRef CTFontCreateWithName(CFStringRef name, CGFloat size, const CGAffineTransform *matrix)
{
  return _CTFontCreateWithName(name, size, matrix);
}

CGFloat CTFontGetSize(CTFontRef font)
{
  return _CTFontGetSize(font);
}

CTLineRef CTLineCreateJustifiedLine(CTLineRef line, CGFloat justificationFactor, double justificationWidth)
{
  return _CTLineCreateJustifiedLine(line, justificationFactor, justificationWidth);
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return _CTLineCreateWithAttributedString(attrString);
}

void CTLineDraw(CTLineRef line, CGContextRef context)
{
}

CGRect CTLineGetImageBounds(CTLineRef line, CGContextRef context)
{
  return _CTLineGetImageBounds(line, context);
}

double CTLineGetPenOffsetForFlush(CTLineRef line, CGFloat flushFactor, double flushWidth)
{
  return _CTLineGetPenOffsetForFlush(line, flushFactor, flushWidth);
}

double CTLineGetTypographicBounds(CTLineRef line, CGFloat *ascent, CGFloat *descent, CGFloat *leading)
{
  return _CTLineGetTypographicBounds(line, ascent, descent, leading);
}

CTLineRef CTTypesetterCreateLine(CTTypesetterRef typesetter, CFRange stringRange)
{
  return _CTTypesetterCreateLine(typesetter, stringRange);
}

CTTypesetterRef CTTypesetterCreateWithAttributedString(CFAttributedStringRef string)
{
  return _CTTypesetterCreateWithAttributedString(string);
}

CFIndex CTTypesetterSuggestLineBreak(CTTypesetterRef typesetter, CFIndex startIndex, double width)
{
  return _CTTypesetterSuggestLineBreak(typesetter, startIndex, width);
}

uint64_t GSEventIsHardwareKeyboardAttached()
{
  return _GSEventIsHardwareKeyboardAttached();
}

uint64_t IsParagraphBreakingCharacter()
{
  return _IsParagraphBreakingCharacter();
}

uint64_t IsWhitespaceCharacter()
{
  return _IsWhitespaceCharacter();
}

uint64_t KNAnimationTypeAsNumber()
{
  return _KNAnimationTypeAsNumber();
}

uint64_t KNAnimationTypeAsString()
{
  return _KNAnimationTypeAsString();
}

CFArrayRef MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics(MACaptionAppearanceDomain domain)
{
  return _MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics(domain);
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

id MTLCreateSystemDefaultDevice(void)
{
  return _MTLCreateSystemDefaultDevice();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

const char *__cdecl NSGetSizeAndAlignment(const char *typePtr, NSUInteger *sizep, NSUInteger *alignp)
{
  return _NSGetSizeAndAlignment(typePtr, sizep, alignp);
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSRange v4 = _NSIntersectionRange(range1, range2);
  NSUInteger length = v4.length;
  NSUInteger location = v4.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

void NSLog(NSString *format, ...)
{
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return _NSProtocolFromString(namestr);
}

NSRange NSRangeFromString(NSString *aString)
{
  NSRange v3 = _NSRangeFromString(aString);
  NSUInteger length = v3.length;
  NSUInteger location = v3.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return _NSStringFromCGPoint(point);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return _NSStringFromCGRect(rect);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return _NSStringFromProtocol(proto);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return _NSStringFromRange(range);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSRange v4 = _NSUnionRange(range1, range2);
  NSUInteger length = v4.length;
  NSUInteger location = v4.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

uint64_t SFUGetMicroseconds()
{
  return _SFUGetMicroseconds();
}

uint64_t THLog()
{
  return _THLog();
}

uint64_t TSDAddPoints()
{
  return _TSDAddPoints();
}

uint64_t TSDAddSizes()
{
  return _TSDAddSizes();
}

uint64_t TSDAngleFromDelta()
{
  return _TSDAngleFromDelta();
}

uint64_t TSDAveragePoints()
{
  return _TSDAveragePoints();
}

uint64_t TSDBitmapContextCreate()
{
  return _TSDBitmapContextCreate();
}

uint64_t TSDCeilSize()
{
  return _TSDCeilSize();
}

uint64_t TSDCenterOfRect()
{
  return _TSDCenterOfRect();
}

uint64_t TSDCenterRectOverRect()
{
  return _TSDCenterRectOverRect();
}

uint64_t TSDCreateRoundRectPathForRectWithRadius()
{
  return _TSDCreateRoundRectPathForRectWithRadius();
}

uint64_t TSDDeltaFromAngle()
{
  return _TSDDeltaFromAngle();
}

uint64_t TSDDistance()
{
  return _TSDDistance();
}

uint64_t TSDDistanceBetweenAnglesInRadians()
{
  return _TSDDistanceBetweenAnglesInRadians();
}

uint64_t TSDDistanceSquared()
{
  return _TSDDistanceSquared();
}

uint64_t TSDDistanceToRectFromRect()
{
  return _TSDDistanceToRectFromRect();
}

uint64_t TSDFitOrFillSizeInRect()
{
  return _TSDFitOrFillSizeInRect();
}

uint64_t TSDFitOrFillSizeInSize()
{
  return _TSDFitOrFillSizeInSize();
}

uint64_t TSDFloorForMainScreen()
{
  return _TSDFloorForMainScreen();
}

uint64_t TSDFloorForScale()
{
  return _TSDFloorForScale();
}

uint64_t TSDFlooredPoint()
{
  return _TSDFlooredPoint();
}

uint64_t TSDGPUUpdateDataMetalPoint2DAtIndex()
{
  return _TSDGPUUpdateDataMetalPoint2DAtIndex();
}

uint64_t TSDGPUUpdateDataMetalPoint3DAtIndex()
{
  return _TSDGPUUpdateDataMetalPoint3DAtIndex();
}

uint64_t TSDGPUUpdateDataSetMetalFloatAtIndex()
{
  return _TSDGPUUpdateDataSetMetalFloatAtIndex();
}

uint64_t TSDGPUUpdateDataSetMetalPoint2DAtIndex()
{
  return _TSDGPUUpdateDataSetMetalPoint2DAtIndex();
}

uint64_t TSDGPUUpdateDataSetMetalPoint3DAtIndex()
{
  return _TSDGPUUpdateDataSetMetalPoint3DAtIndex();
}

uint64_t TSDInterpolateFloats()
{
  return _TSDInterpolateFloats();
}

uint64_t TSDInterpolatePoints()
{
  return _TSDInterpolatePoints();
}

uint64_t TSDMixAnglesInRadians()
{
  return _TSDMixAnglesInRadians();
}

uint64_t TSDMixFloats()
{
  return _TSDMixFloats();
}

uint64_t TSDMixSizes()
{
  return _TSDMixSizes();
}

uint64_t TSDMultiplyPointScalar()
{
  return _TSDMultiplyPointScalar();
}

uint64_t TSDMultiplyRectBySize()
{
  return _TSDMultiplyRectBySize();
}

uint64_t TSDMultiplyRectScalar()
{
  return _TSDMultiplyRectScalar();
}

uint64_t TSDMultiplySizeScalar()
{
  return _TSDMultiplySizeScalar();
}

uint64_t TSDNearlyEqualPoints()
{
  return _TSDNearlyEqualPoints();
}

uint64_t TSDNearlyEqualRects()
{
  return _TSDNearlyEqualRects();
}

uint64_t TSDNearlyEqualSizes()
{
  return _TSDNearlyEqualSizes();
}

uint64_t TSDNormalizeAngleInDegrees()
{
  return _TSDNormalizeAngleInDegrees();
}

uint64_t TSDNormalizePoint()
{
  return _TSDNormalizePoint();
}

uint64_t TSDNormalizedPointInRect()
{
  return _TSDNormalizedPointInRect();
}

uint64_t TSDOriginRotate()
{
  return _TSDOriginRotate();
}

uint64_t TSDPathGetStartAndEndPoints()
{
  return _TSDPathGetStartAndEndPoints();
}

uint64_t TSDPointFromNormalizedRect()
{
  return _TSDPointFromNormalizedRect();
}

uint64_t TSDPointLength()
{
  return _TSDPointLength();
}

uint64_t TSDRectGetMaxPoint()
{
  return _TSDRectGetMaxPoint();
}

uint64_t TSDRectWithCenterAndSize()
{
  return _TSDRectWithCenterAndSize();
}

uint64_t TSDRectWithOriginAndSize()
{
  return _TSDRectWithOriginAndSize();
}

uint64_t TSDRectWithPoints()
{
  return _TSDRectWithPoints();
}

uint64_t TSDRectWithSize()
{
  return _TSDRectWithSize();
}

uint64_t TSDRectWithSizeAlignedToRect()
{
  return _TSDRectWithSizeAlignedToRect();
}

uint64_t TSDRoundForScale()
{
  return _TSDRoundForScale();
}

uint64_t TSDRoundedPoint()
{
  return _TSDRoundedPoint();
}

uint64_t TSDRoundedPointForScale()
{
  return _TSDRoundedPointForScale();
}

uint64_t TSDRoundedPointForView()
{
  return _TSDRoundedPointForView();
}

uint64_t TSDRoundedRect()
{
  return _TSDRoundedRect();
}

uint64_t TSDRoundedRectForMainScreen()
{
  return _TSDRoundedRectForMainScreen();
}

uint64_t TSDRoundedRectForScale()
{
  return _TSDRoundedRectForScale();
}

uint64_t TSDRoundedRectForView()
{
  return _TSDRoundedRectForView();
}

uint64_t TSDRoundedSize()
{
  return _TSDRoundedSize();
}

uint64_t TSDRoundedSizeForScale()
{
  return _TSDRoundedSizeForScale();
}

uint64_t TSDScaleRectAroundPoint()
{
  return _TSDScaleRectAroundPoint();
}

uint64_t TSDScaleSizeWithinSize()
{
  return _TSDScaleSizeWithinSize();
}

uint64_t TSDSetCGContextInfo()
{
  return _TSDSetCGContextInfo();
}

uint64_t TSDShrinkSizeToFitInSize()
{
  return _TSDShrinkSizeToFitInSize();
}

uint64_t TSDSizeExpandedToMatchAspectRatio()
{
  return _TSDSizeExpandedToMatchAspectRatio();
}

uint64_t TSDSubtractPoints()
{
  return _TSDSubtractPoints();
}

uint64_t TSDTopmostInfoFromInfo()
{
  return _TSDTopmostInfoFromInfo();
}

uint64_t TSDTopmostOwningAttachmentFromInfo()
{
  return _TSDTopmostOwningAttachmentFromInfo();
}

uint64_t TSDTransform3DMakeOrtho()
{
  return _TSDTransform3DMakeOrtho();
}

uint64_t TSDTransform3DMakeProjection()
{
  return _TSDTransform3DMakeProjection();
}

uint64_t TSDTransformAngle()
{
  return _TSDTransformAngle();
}

uint64_t TSKPlayerRepeatModeForMovieLoopOption()
{
  return _TSKPlayerRepeatModeForMovieLoopOption();
}

uint64_t TSTCellAtCellID()
{
  return _TSTCellAtCellID();
}

uint64_t TSTCellAtCellIDHoldingReadLock()
{
  return _TSTCellAtCellIDHoldingReadLock();
}

uint64_t TSTCellClearValue()
{
  return _TSTCellClearValue();
}

uint64_t TSTLayoutGetCanvasFrameForRange()
{
  return _TSTLayoutGetCanvasFrameForRange();
}

uint64_t TSTLayoutGetViewScale()
{
  return _TSTLayoutGetViewScale();
}

uint64_t TSTTableDefaultCellStyleForCellID()
{
  return _TSTTableDefaultCellStyleForCellID();
}

uint64_t TSTTableGetStrokesForCellID()
{
  return _TSTTableGetStrokesForCellID();
}

uint64_t TSTTableHeightOfRow()
{
  return _TSTTableHeightOfRow();
}

uint64_t TSTTableInsertColumns()
{
  return _TSTTableInsertColumns();
}

uint64_t TSTTableInsertRows()
{
  return _TSTTableInsertRows();
}

uint64_t TSTTableMerge()
{
  return _TSTTableMerge();
}

uint64_t TSTTableMergeRangeAtCellID()
{
  return _TSTTableMergeRangeAtCellID();
}

uint64_t TSTTableSetCellAtCellID()
{
  return _TSTTableSetCellAtCellID();
}

uint64_t TSTTableSetCellStyleAtCellID()
{
  return _TSTTableSetCellStyleAtCellID();
}

uint64_t TSTTableSetHeightOfRow()
{
  return _TSTTableSetHeightOfRow();
}

uint64_t TSTTableSetWidthOfColumn()
{
  return _TSTTableSetWidthOfColumn();
}

uint64_t TSTTableStringForCellAtCellID()
{
  return _TSTTableStringForCellAtCellID();
}

uint64_t TSTTableStrokeDefaultsCreate()
{
  return _TSTTableStrokeDefaultsCreate();
}

uint64_t TSTTableStrokeDefaultsRelease()
{
  return _TSTTableStrokeDefaultsRelease();
}

uint64_t TSUCGColorCreateDeviceRGB()
{
  return _TSUCGColorCreateDeviceRGB();
}

uint64_t TSUCenterOfRect()
{
  return _TSUCenterOfRect();
}

uint64_t TSUCheckedDynamicCast()
{
  return _TSUCheckedDynamicCast();
}

uint64_t TSUCheckedProtocolCast()
{
  return _TSUCheckedProtocolCast();
}

uint64_t TSUClamp()
{
  return _TSUClamp();
}

uint64_t TSUClassAndProtocolCast()
{
  return _TSUClassAndProtocolCast();
}

uint64_t TSUCreateRGBABitmapContext()
{
  return _TSUCreateRGBABitmapContext();
}

uint64_t TSUDynamicCast()
{
  return _TSUDynamicCast();
}

uint64_t TSUGetGMTTimeZone()
{
  return _TSUGetGMTTimeZone();
}

uint64_t TSUMix()
{
  return _TSUMix();
}

uint64_t TSUPadIsFirstGen()
{
  return _TSUPadIsFirstGen();
}

uint64_t TSUPadUI()
{
  return _TSUPadUI();
}

uint64_t TSUPhoneUI()
{
  return _TSUPhoneUI();
}

uint64_t TSUProtocolCast()
{
  return _TSUProtocolCast();
}

uint64_t TSURandom()
{
  return _TSURandom();
}

uint64_t TSURandomBetween()
{
  return _TSURandomBetween();
}

uint64_t TSUReverseSquare()
{
  return _TSUReverseSquare();
}

uint64_t TSURound()
{
  return _TSURound();
}

uint64_t TSUScreenScale()
{
  return _TSUScreenScale();
}

uint64_t TSUSineMap()
{
  return _TSUSineMap();
}

uint64_t TSUSupportsTextInteraction()
{
  return _TSUSupportsTextInteraction();
}

uint64_t TSWPCreateFontWithName()
{
  return _TSWPCreateFontWithName();
}

uint64_t TSWPFastCreateFontForStyle()
{
  return _TSWPFastCreateFontForStyle();
}

uint64_t TSWPFontPostScriptNameForFamilyName()
{
  return _TSWPFontPostScriptNameForFamilyName();
}

uint64_t TSWPForegroundInit()
{
  return _TSWPForegroundInit();
}

uint64_t TSWPResolveColorForStyles()
{
  return _TSWPResolveColorForStyles();
}

uint64_t TSWPUIFontForCTFont()
{
  return _TSWPUIFontForCTFont();
}

BOOL UIAccessibilityIsInvertColorsEnabled(void)
{
  return _UIAccessibilityIsInvertColorsEnabled();
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return _UIAccessibilityIsSwitchControlRunning();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return _UIAccessibilityIsVoiceOverRunning();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

uint64_t UIEdgeInsetsAdd()
{
  return _UIEdgeInsetsAdd();
}

uint64_t UIEdgeInsetsSubtract()
{
  return _UIEdgeInsetsSubtract();
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

uint64_t UIRectCenteredIntegralRect()
{
  return _UIRectCenteredIntegralRect();
}

void UIRectFill(CGRect rect)
{
}

uint64_t _AEBookPluginsAnnotationsLog()
{
  return __AEBookPluginsAnnotationsLog();
}

uint64_t _AXSCommandAndControlEnabled()
{
  return __AXSCommandAndControlEnabled();
}

uint64_t _AXSFullKeyboardAccessEnabled()
{
  return __AXSFullKeyboardAccessEnabled();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t TSTCellSetRichTextPayloadClearingIDConvertToPlaintext()
{
  return TSTCellSetRichTextPayloadClearingIDConvertToPlaintext();
}

uint64_t tpZFqotcPt::E7CI7xMRxnQE2nWg(tpZFqotcPt *this, bb74bdd798ceadff5c1f0c2b *a2, unsigned __int8 *a3, unsigned int a4, unsigned __int8 *a5, unsigned int *a6, int *a7)
{
  return tpZFqotcPt::E7CI7xMRxnQE2nWg(this, a2, a3, a4, a5, a6, a7);
}

uint64_t tpZFqotcPt::RTvM5X_G7QMNC67UE(tpZFqotcPt *this, bb74bdd798ceadff5c1f0c2b *a2)
{
  return tpZFqotcPt::RTvM5X_G7QMNC67UE(this, a2);
}

uint64_t tpZFqotcPt::A31bo2we343KEA87KF2()
{
  return tpZFqotcPt::A31bo2we343KEA87KF2();
}

void tpZFqotcPt::tpZFqotcPt(tpZFqotcPt *this)
{
}

uint64_t TSWPTopicNumberHints::advanceToCharIndex(TSWPTopicNumberHints *this, unint64_t a2, TSWPStorage *a3)
{
  return TSWPTopicNumberHints::advanceToCharIndex(this, a2, a3);
}

uint64_t TSWPTopicNumberHints::reset(TSWPTopicNumberHints *this)
{
  return TSWPTopicNumberHints::reset(this);
}

uint64_t TSWPTopicNumberHints::TSWPTopicNumberHints()
{
  return TSWPTopicNumberHints::TSWPTopicNumberHints();
}

void TSWPTopicNumberHints::~TSWPTopicNumberHints(TSWPTopicNumberHints *this)
{
}

uint64_t TSWPTopicNumberHints::operator=()
{
  return TSWPTopicNumberHints::operator=();
}

uint64_t TSWPAttributeEnumerator::nextAttributeIndex(TSWPAttributeEnumerator *this, _NSRange *a2)
{
  return TSWPAttributeEnumerator::nextAttributeIndex(this, a2);
}

uint64_t TSWPAttributeEnumerator::TSWPAttributeEnumerator()
{
  return TSWPAttributeEnumerator::TSWPAttributeEnumerator();
}

void TSWPAttributeEnumerator::~TSWPAttributeEnumerator(TSWPAttributeEnumerator *this)
{
}

std::string::size_type std::string::find(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return std::string::find(this, __c, __pos);
}

int std::string::compare(const std::string *this, std::string::size_type __pos1, std::string::size_type __n1, const std::string::value_type *__s)
{
  return std::string::compare(this, __pos1, __n1, __s);
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return std::locale::use_facet(this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return std::ios_base::getloc(this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return std::logic_error::logic_error(this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return std::bad_array_new_length::bad_array_new_length(this);
}

size_t std::__next_prime(size_t __n)
{
  return std::__next_prime(__n);
}

std::string *__cdecl std::string::erase(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  return std::string::erase(this, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return std::string::append(this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return std::string::assign(this, __s);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return std::string::operator=(this, __str);
}

uint64_t std::istream::read()
{
  return std::istream::read();
}

uint64_t std::istream::~istream()
{
  return std::istream::~istream();
}

uint64_t std::ostream::put()
{
  return std::ostream::put();
}

uint64_t std::ostream::flush()
{
  return std::ostream::flush();
}

uint64_t std::ostream::sentry::sentry()
{
  return std::ostream::sentry::sentry();
}

uint64_t std::ostream::sentry::~sentry()
{
  return std::ostream::sentry::~sentry();
}

uint64_t std::ostream::~ostream()
{
  return std::ostream::~ostream();
}

uint64_t std::streambuf::basic_streambuf()
{
  return std::streambuf::basic_streambuf();
}

uint64_t std::streambuf::~streambuf()
{
  return std::streambuf::~streambuf();
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return std::ios::~ios();
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

uint64_t __IMAccessibilityPerformSafeBlock()
{
  return ___IMAccessibilityPerformSafeBlock();
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return ___cxa_guard_acquire((uint64_t *)a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

int *__error(void)
{
  return ___error();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return ___maskrune(a1, a2);
}

__double2 __sincos_stret(double a1)
{
  __double2 v3 = ___sincos_stret(a1);
  double cosval = v3.__cosval;
  double sinval = v3.__sinval;
  result.__double cosval = cosval;
  result.__double sinval = sinval;
  return result;
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return __os_activity_create(dso, description, activity, flags);
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void abort(void)
{
}

uint64_t afa946271209074f393f()
{
  return _afa946271209074f393f();
}

uint32_t arc4random(void)
{
  return _arc4random();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

long double asin(long double __x)
{
  return _asin(__x);
}

long double atan(long double __x)
{
  return _atan(__x);
}

long double atan2(long double __y, long double __x)
{
  return _atan2(__y, __x);
}

float atan2f(float a1, float a2)
{
  return _atan2f(a1, a2);
}

float atanf(float a1)
{
  return _atanf(a1);
}

double atof(const char *a1)
{
  return _atof(a1);
}

void bzero(void *a1, size_t a2)
{
}

uint64_t c12668d1789a8d63d19a()
{
  return _c12668d1789a8d63d19a();
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return _class_addMethod(cls, name, imp, types);
}

BOOL class_addProtocol(Class cls, Protocol *protocol)
{
  return _class_addProtocol(cls, protocol);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return _class_copyMethodList(cls, outCount);
}

Protocol **__cdecl class_copyProtocolList(Class cls, unsigned int *outCount)
{
  return _class_copyProtocolList(cls, outCount);
}

Method class_getClassMethod(Class cls, SEL name)
{
  return _class_getClassMethod(cls, name);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return _class_getInstanceVariable(cls, name);
}

const char *__cdecl class_getName(Class cls)
{
  return _class_getName(cls);
}

objc_property_t class_getProperty(Class cls, const char *name)
{
  return _class_getProperty(cls, name);
}

Class class_getSuperclass(Class cls)
{
  return _class_getSuperclass(cls);
}

int close(int a1)
{
  return _close(a1);
}

long double cos(long double __x)
{
  return _cos(__x);
}

float cosf(float a1)
{
  return _cosf(a1);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

BOOL dispatch_data_apply(dispatch_data_t data, dispatch_data_applier_t applier)
{
  return _dispatch_data_apply(data, applier);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_io_close(dispatch_io_t channel, dispatch_io_close_flags_t flags)
{
}

dispatch_io_t dispatch_io_create_with_path(dispatch_io_type_t type, const char *path, int oflag, mode_t mode, dispatch_queue_t queue, void *cleanup_handler)
{
  return _dispatch_io_create_with_path(type, path, oflag, mode, queue, cleanup_handler);
}

void dispatch_io_read(dispatch_io_t channel, off_t offset, size_t length, dispatch_queue_t queue, dispatch_io_handler_t io_handler)
{
}

void dispatch_io_set_high_water(dispatch_io_t channel, size_t high_water)
{
}

void dispatch_io_set_low_water(dispatch_io_t channel, size_t low_water)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

double drand48(void)
{
  return _drand48();
}

void exit(int a1)
{
}

long double exp(long double __x)
{
  return _exp(__x);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

int fputc(int a1, FILE *a2)
{
  return _fputc(a1, a2);
}

void free(void *a1)
{
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

int gzclose(gzFile file)
{
  return _gzclose(file);
}

gzFile gzopen(const char *a1, const char *a2)
{
  return _gzopen(a1, a2);
}

int gzread(gzFile file, voidp buf, unsigned int len)
{
  return _gzread(file, buf, len);
}

long double hypot(long double __x, long double __y)
{
  return _hypot(__x, __y);
}

uint64_t isPad()
{
  return _isPad();
}

uint64_t isPhone()
{
  return _isPhone();
}

const char *__cdecl ivar_getTypeEncoding(Ivar v)
{
  return _ivar_getTypeEncoding(v);
}

ldiv_t ldiv(uint64_t a1, uint64_t a2)
{
  ldiv_t v4 = _ldiv(a1, a2);
  uint64_t rem = v4.rem;
  uint64_t quot = v4.quot;
  result.uint64_t rem = rem;
  result.uint64_t quot = quot;
  return result;
}

long double log10(long double __x)
{
  return _log10(__x);
}

float logf(float a1)
{
  return _logf(a1);
}

int lstat(const char *a1, stat *a2)
{
  return _lstat(a1, a2);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_realloc(ptr, size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return _memchr(__s, __c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

char *__cdecl method_copyArgumentType(Method m, unsigned int index)
{
  return _method_copyArgumentType(m, index);
}

char *__cdecl method_copyReturnType(Method m)
{
  return _method_copyReturnType(m);
}

IMP method_getImplementation(Method m)
{
  return _method_getImplementation(m);
}

SEL method_getName(Method m)
{
  return _method_getName(m);
}

unsigned int method_getNumberOfArguments(Method m)
{
  return _method_getNumberOfArguments(m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return _method_getTypeEncoding(m);
}

IMP method_setImplementation(Method m, IMP imp)
{
  return _method_setImplementation(m, imp);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeak(id *location)
{
  return _objc_loadWeak(location);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

Class object_getClass(id a1)
{
  return _object_getClass(a1);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t p69a8ed193df95a4f68()
{
  return _p69a8ed193df95a4f68();
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

float powf(float a1, float a2)
{
  return _powf(a1, a2);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  objc_method_description MethodDescription = _protocol_getMethodDescription(p, aSel, isRequiredMethod, isInstanceMethod);
  types = MethodDescription.types;
  SEL name = MethodDescription.name;
  result.types = types;
  result.SEL name = name;
  return result;
}

objc_property_t protocol_getProperty(Protocol *proto, const char *name, BOOL isRequiredProperty, BOOL isInstanceProperty)
{
  return _protocol_getProperty(proto, name, isRequiredProperty, isInstanceProperty);
}

BOOL protocol_isEqual(Protocol *proto, Protocol *other)
{
  return _protocol_isEqual(proto, other);
}

void qsort_b(void *__base, size_t __nel, size_t __width, void *__compar)
{
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

const char *__cdecl sel_getName(SEL sel)
{
  return _sel_getName(sel);
}

BOOL sel_isEqual(SEL lhs, SEL rhs)
{
  return _sel_isEqual(lhs, rhs);
}

long double sin(long double __x)
{
  return _sin(__x);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int sprintf(char *a1, const char *a2, ...)
{
  return _sprintf(a1, a2);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

char *__cdecl strcat(char *__s1, const char *__s2)
{
  return _strcat(__s1, __s2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return _strchr(__s, __c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strcpy(char *__dst, const char *__src)
{
  return _strcpy(__dst, __src);
}

char *__cdecl strdup(const char *__s1)
{
  return _strdup(__s1);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncasecmp(const char *a1, const char *a2, size_t a3)
{
  return _strncasecmp(a1, a2, a3);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return _strncmp(__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return _strncpy(__dst, __src, __n);
}

double strtod(const char *a1, char **a2)
{
  return _strtod(a1, a2);
}

float strtof(const char *a1, char **a2)
{
  return _strtof(a1, a2);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return _strtol(__str, __endptr, __base);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return _strtoll(__str, __endptr, __base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return _strtoul(__str, __endptr, __base);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return _strtoull(__str, __endptr, __base);
}

long double tan(long double __x)
{
  return _tan(__x);
}

int uname(utsname *a1)
{
  return _uname(a1);
}

xmlNodePtr xmlAddChild(xmlNodePtr parent, xmlNodePtr cur)
{
  return _xmlAddChild(parent, cur);
}

int xmlCheckFilename(const char *path)
{
  return _xmlCheckFilename(path);
}

xmlNodePtr xmlDocGetRootElement(const xmlDoc *doc)
{
  return _xmlDocGetRootElement(doc);
}

void xmlFreeDoc(xmlDocPtr cur)
{
}

void xmlFreeTextReader(xmlTextReaderPtr reader)
{
}

void xmlFreeTextWriter(xmlTextWriterPtr writer)
{
}

xmlNsPtr *__cdecl xmlGetNsList(const xmlDoc *doc, const xmlNode *node)
{
  return _xmlGetNsList(doc, node);
}

xmlChar *__cdecl xmlGetNsProp(const xmlNode *node, const xmlChar *name, const xmlChar *nameSpace)
{
  return _xmlGetNsProp(node, name, nameSpace);
}

int xmlKeepBlanksDefault(int val)
{
  return _xmlKeepBlanksDefault(val);
}

xmlNodePtr xmlNewNode(xmlNsPtr ns, const xmlChar *name)
{
  return _xmlNewNode(ns, name);
}

xmlAttrPtr xmlNewProp(xmlNodePtr node, const xmlChar *name, const xmlChar *value)
{
  return _xmlNewProp(node, name, value);
}

xmlNodePtr xmlNewText(const xmlChar *content)
{
  return _xmlNewText(content);
}

xmlTextWriterPtr xmlNewTextWriter(xmlOutputBufferPtr out)
{
  return _xmlNewTextWriter(out);
}

void xmlNodeDumpOutput(xmlOutputBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur, int level, int format, const char *encoding)
{
}

xmlChar *__cdecl xmlNodeGetContent(const xmlNode *cur)
{
  return _xmlNodeGetContent(cur);
}

int xmlNodeIsText(const xmlNode *node)
{
  return _xmlNodeIsText(node);
}

xmlChar *__cdecl xmlNodeListGetString(xmlDocPtr doc, const xmlNode *list, int inLine)
{
  return _xmlNodeListGetString(doc, list, inLine);
}

int xmlOutputBufferClose(xmlOutputBufferPtr out)
{
  return _xmlOutputBufferClose(out);
}

xmlOutputBufferPtr xmlOutputBufferCreateIO(xmlOutputWriteCallback iowrite, xmlOutputCloseCallback ioclose, void *ioctx, xmlCharEncodingHandlerPtr encoder)
{
  return _xmlOutputBufferCreateIO(iowrite, ioclose, ioctx, encoder);
}

int xmlPopInputCallbacks(void)
{
  return _xmlPopInputCallbacks();
}

xmlTextReaderPtr xmlReaderForFile(const char *filename, const char *encoding, int options)
{
  return _xmlReaderForFile(filename, encoding, options);
}

int xmlRegisterInputCallbacks(xmlInputMatchCallback matchFunc, xmlInputOpenCallback openFunc, xmlInputReadCallback readFunc, xmlInputCloseCallback closeFunc)
{
  return _xmlRegisterInputCallbacks(matchFunc, openFunc, readFunc, closeFunc);
}

xmlDocPtr xmlSAXParseFile(xmlSAXHandlerPtr sax, const char *filename, int recovery)
{
  return _xmlSAXParseFile(sax, filename, recovery);
}

xmlNsPtr xmlSearchNsByHref(xmlDocPtr doc, xmlNodePtr node, const xmlChar *href)
{
  return _xmlSearchNsByHref(doc, node, href);
}

int xmlStrEqual(const xmlChar *str1, const xmlChar *str2)
{
  return _xmlStrEqual(str1, str2);
}

int xmlStrcasecmp(const xmlChar *str1, const xmlChar *str2)
{
  return _xmlStrcasecmp(str1, str2);
}

int xmlStrcmp(const xmlChar *str1, const xmlChar *str2)
{
  return _xmlStrcmp(str1, str2);
}

xmlChar *__cdecl xmlStrdup(const xmlChar *cur)
{
  return _xmlStrdup(cur);
}

int xmlStrlen(const xmlChar *str)
{
  return _xmlStrlen(str);
}

xmlChar *__cdecl xmlStrsub(const xmlChar *str, int start, int len)
{
  return _xmlStrsub(str, start, len);
}

int xmlSubstituteEntitiesDefault(int val)
{
  return _xmlSubstituteEntitiesDefault(val);
}

uint64_t xmlTextReaderByteConsumed(xmlTextReaderPtr reader)
{
  return _xmlTextReaderByteConsumed(reader);
}

const xmlChar *__cdecl xmlTextReaderConstLocalName(xmlTextReaderPtr reader)
{
  return _xmlTextReaderConstLocalName(reader);
}

const xmlChar *__cdecl xmlTextReaderConstNamespaceUri(xmlTextReaderPtr reader)
{
  return _xmlTextReaderConstNamespaceUri(reader);
}

const xmlChar *__cdecl xmlTextReaderConstString(xmlTextReaderPtr reader, const xmlChar *str)
{
  return _xmlTextReaderConstString(reader, str);
}

const xmlChar *__cdecl xmlTextReaderConstValue(xmlTextReaderPtr reader)
{
  return _xmlTextReaderConstValue(reader);
}

xmlDocPtr xmlTextReaderCurrentDoc(xmlTextReaderPtr reader)
{
  return _xmlTextReaderCurrentDoc(reader);
}

int xmlTextReaderDepth(xmlTextReaderPtr reader)
{
  return _xmlTextReaderDepth(reader);
}

xmlNodePtr xmlTextReaderExpand(xmlTextReaderPtr reader)
{
  return _xmlTextReaderExpand(reader);
}

xmlChar *__cdecl xmlTextReaderGetAttribute(xmlTextReaderPtr reader, const xmlChar *name)
{
  return _xmlTextReaderGetAttribute(reader, name);
}

xmlChar *__cdecl xmlTextReaderGetAttributeNs(xmlTextReaderPtr reader, const xmlChar *localName, const xmlChar *namespaceURI)
{
  return _xmlTextReaderGetAttributeNs(reader, localName, namespaceURI);
}

int xmlTextReaderHasAttributes(xmlTextReaderPtr reader)
{
  return _xmlTextReaderHasAttributes(reader);
}

int xmlTextReaderIsEmptyElement(xmlTextReaderPtr reader)
{
  return _xmlTextReaderIsEmptyElement(reader);
}

xmlChar *__cdecl xmlTextReaderLookupNamespace(xmlTextReaderPtr reader, const xmlChar *prefix)
{
  return _xmlTextReaderLookupNamespace(reader, prefix);
}

int xmlTextReaderMoveToElement(xmlTextReaderPtr reader)
{
  return _xmlTextReaderMoveToElement(reader);
}

int xmlTextReaderMoveToFirstAttribute(xmlTextReaderPtr reader)
{
  return _xmlTextReaderMoveToFirstAttribute(reader);
}

int xmlTextReaderMoveToNextAttribute(xmlTextReaderPtr reader)
{
  return _xmlTextReaderMoveToNextAttribute(reader);
}

xmlChar *__cdecl xmlTextReaderName(xmlTextReaderPtr reader)
{
  return _xmlTextReaderName(reader);
}

int xmlTextReaderNext(xmlTextReaderPtr reader)
{
  return _xmlTextReaderNext(reader);
}

int xmlTextReaderNodeType(xmlTextReaderPtr reader)
{
  return _xmlTextReaderNodeType(reader);
}

int xmlTextReaderRead(xmlTextReaderPtr reader)
{
  return _xmlTextReaderRead(reader);
}

xmlChar *__cdecl xmlTextReaderReadInnerXml(xmlTextReaderPtr reader)
{
  return _xmlTextReaderReadInnerXml(reader);
}

xmlChar *__cdecl xmlTextReaderReadString(xmlTextReaderPtr reader)
{
  return _xmlTextReaderReadString(reader);
}

void xmlTextReaderSetErrorHandler(xmlTextReaderPtr reader, xmlTextReaderErrorFunc f, void *arg)
{
}

int xmlTextReaderSetParserProp(xmlTextReaderPtr reader, int prop, int value)
{
  return _xmlTextReaderSetParserProp(reader, prop, value);
}

int xmlTextWriterEndDocument(xmlTextWriterPtr writer)
{
  return _xmlTextWriterEndDocument(writer);
}

int xmlTextWriterEndElement(xmlTextWriterPtr writer)
{
  return _xmlTextWriterEndElement(writer);
}

int xmlTextWriterFlush(xmlTextWriterPtr writer)
{
  return _xmlTextWriterFlush(writer);
}

int xmlTextWriterSetIndent(xmlTextWriterPtr writer, int indent)
{
  return _xmlTextWriterSetIndent(writer, indent);
}

int xmlTextWriterStartDocument(xmlTextWriterPtr writer, const char *version, const char *encoding, const char *standalone)
{
  return _xmlTextWriterStartDocument(writer, version, encoding, standalone);
}

int xmlTextWriterStartElementNS(xmlTextWriterPtr writer, const xmlChar *prefix, const xmlChar *name, const xmlChar *namespaceURI)
{
  return _xmlTextWriterStartElementNS(writer, prefix, name, namespaceURI);
}

int xmlTextWriterWriteAttribute(xmlTextWriterPtr writer, const xmlChar *name, const xmlChar *content)
{
  return _xmlTextWriterWriteAttribute(writer, name, content);
}

int xmlTextWriterWriteAttributeNS(xmlTextWriterPtr writer, const xmlChar *prefix, const xmlChar *name, const xmlChar *namespaceURI, const xmlChar *content)
{
  return _xmlTextWriterWriteAttributeNS(writer, prefix, name, namespaceURI, content);
}

int xmlTextWriterWriteDTD(xmlTextWriterPtr writer, const xmlChar *name, const xmlChar *pubid, const xmlChar *sysid, const xmlChar *subset)
{
  return _xmlTextWriterWriteDTD(writer, name, pubid, sysid, subset);
}

int xmlTextWriterWriteString(xmlTextWriterPtr writer, const xmlChar *content)
{
  return _xmlTextWriterWriteString(writer, content);
}

char *__cdecl xmlURIUnescapeString(const char *str, int len, char *target)
{
  return _xmlURIUnescapeString(str, len, target);
}

xmlXPathObjectPtr xmlXPathEvalExpression(const xmlChar *str, xmlXPathContextPtr ctxt)
{
  return _xmlXPathEvalExpression(str, ctxt);
}

void xmlXPathFreeContext(xmlXPathContextPtr ctxt)
{
}

void xmlXPathFreeObject(xmlXPathObjectPtr obj)
{
}

xmlXPathContextPtr xmlXPathNewContext(xmlDocPtr doc)
{
  return _xmlXPathNewContext(doc);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return [a1 CGColor];
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return [a1 CGContext];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return [a1 CGImage];
}

id objc_msgSend_CGImageForNaturalSize(void *a1, const char *a2, ...)
{
  return [a1 CGImageForNaturalSize];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return [a1 CGPath];
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return [a1 CGPointValue];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return [a1 CGRectValue];
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return [a1 CGSizeValue];
}

id objc_msgSend_CTFont(void *a1, const char *a2, ...)
{
  return [a1 CTFont];
}

id objc_msgSend_EXC6L9VofSI7ZuGjFga5qXiB(void *a1, const char *a2, ...)
{
  return [a1 EXC6L9VofSI7ZuGjFga5qXiB];
}

id objc_msgSend_HUDBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 HUDBackgroundColor];
}

id objc_msgSend_HUDOverlayView(void *a1, const char *a2, ...)
{
  return [a1 HUDOverlayView];
}

id objc_msgSend_HUDVendor(void *a1, const char *a2, ...)
{
  return [a1 HUDVendor];
}

id objc_msgSend_IDsForInfos(void *a1, const char *a2, ...)
{
  return [a1 IDsForInfos];
}

id objc_msgSend_KPFDocument(void *a1, const char *a2, ...)
{
  return [a1 KPFDocument];
}

id objc_msgSend_KPFSlideList(void *a1, const char *a2, ...)
{
  return [a1 KPFSlideList];
}

id objc_msgSend_NSData(void *a1, const char *a2, ...)
{
  return [a1 NSData];
}

id objc_msgSend_RlXOkXCKRgyluEUOMXWx43md(void *a1, const char *a2, ...)
{
  return [a1 RlXOkXCKRgyluEUOMXWx43md];
}

id objc_msgSend_TOCButton(void *a1, const char *a2, ...)
{
  return [a1 TOCButton];
}

id objc_msgSend_TOCGlossaryViewController(void *a1, const char *a2, ...)
{
  return [a1 TOCGlossaryViewController];
}

id objc_msgSend_TSDEdgeInsetsValue(void *a1, const char *a2, ...)
{
  return [a1 TSDEdgeInsetsValue];
}

id objc_msgSend_UIColor(void *a1, const char *a2, ...)
{
  return [a1 UIColor];
}

id objc_msgSend_UIImage(void *a1, const char *a2, ...)
{
  return [a1 UIImage];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return [a1 URL];
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLByStandardizingPath(void *a1, const char *a2, ...)
{
  return [a1 URLByStandardizingPath];
}

id objc_msgSend_URLPathAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 URLPathAllowedCharacterSet];
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return [a1 UUID];
}

id objc_msgSend__accessibilityIncludeDuringContentReading(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityIncludeDuringContentReading];
}

id objc_msgSend__accessibilityIsInTHBookView(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityIsInTHBookView];
}

id objc_msgSend__accessibilityScrollParent(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityScrollParent];
}

id objc_msgSend__accessibilityScrollStatus(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityScrollStatus];
}

id objc_msgSend__accessibilitySelectedTextRange(void *a1, const char *a2, ...)
{
  return [a1 _accessibilitySelectedTextRange];
}

id objc_msgSend__accessibilitySubviews(void *a1, const char *a2, ...)
{
  return [a1 _accessibilitySubviews];
}

id objc_msgSend__accessibilityUnregister(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityUnregister];
}

id objc_msgSend__accessibleSubviews(void *a1, const char *a2, ...)
{
  return [a1 _accessibleSubviews];
}

id objc_msgSend__adjustMinScale(void *a1, const char *a2, ...)
{
  return [a1 _adjustMinScale];
}

id objc_msgSend__adjustZPositionIfNecessary(void *a1, const char *a2, ...)
{
  return [a1 _adjustZPositionIfNecessary];
}

id objc_msgSend__adjustedContentPadding(void *a1, const char *a2, ...)
{
  return [a1 _adjustedContentPadding];
}

id objc_msgSend__analyticsContentSettingsData(void *a1, const char *a2, ...)
{
  return [a1 _analyticsContentSettingsData];
}

id objc_msgSend__analyticsReadingProgress(void *a1, const char *a2, ...)
{
  return [a1 _analyticsReadingProgress];
}

id objc_msgSend__analyticsReadingSettingsData(void *a1, const char *a2, ...)
{
  return [a1 _analyticsReadingSettingsData];
}

id objc_msgSend__analyticsSessionHost(void *a1, const char *a2, ...)
{
  return [a1 _analyticsSessionHost];
}

id objc_msgSend__applicationKeyWindow(void *a1, const char *a2, ...)
{
  return [a1 _applicationKeyWindow];
}

id objc_msgSend__applyColors(void *a1, const char *a2, ...)
{
  return [a1 _applyColors];
}

id objc_msgSend__attemptURLLoad(void *a1, const char *a2, ...)
{
  return [a1 _attemptURLLoad];
}

id objc_msgSend__axCanDismissParentBooksPopoverController(void *a1, const char *a2, ...)
{
  return [a1 _axCanDismissParentBooksPopoverController];
}

id objc_msgSend__axClearWeakReferencesToSelf(void *a1, const char *a2, ...)
{
  return [a1 _axClearWeakReferencesToSelf];
}

id objc_msgSend__axDefinitionsScrollViewPositionDidChange(void *a1, const char *a2, ...)
{
  return [a1 _axDefinitionsScrollViewPositionDidChange];
}

id objc_msgSend__axDidInitiatePullThrough(void *a1, const char *a2, ...)
{
  return [a1 _axDidInitiatePullThrough];
}

id objc_msgSend__axDismissParentBooksPopoverControllerIfAppropriate(void *a1, const char *a2, ...)
{
  return [a1 _axDismissParentBooksPopoverControllerIfAppropriate];
}

id objc_msgSend__axEquation(void *a1, const char *a2, ...)
{
  return [a1 _axEquation];
}

id objc_msgSend__axHandleCustomItemDidBecomeFocused(void *a1, const char *a2, ...)
{
  return [a1 _axHandleCustomItemDidBecomeFocused];
}

id objc_msgSend__axHideToolbar(void *a1, const char *a2, ...)
{
  return [a1 _axHideToolbar];
}

id objc_msgSend__axInitializeScrollingEnabledFlag(void *a1, const char *a2, ...)
{
  return [a1 _axInitializeScrollingEnabledFlag];
}

id objc_msgSend__axIsFlowModeRep(void *a1, const char *a2, ...)
{
  return [a1 _axIsFlowModeRep];
}

id objc_msgSend__axMarginNoteBoundsInCanvasView(void *a1, const char *a2, ...)
{
  return [a1 _axMarginNoteBoundsInCanvasView];
}

id objc_msgSend__axNumberOfRegularChapters(void *a1, const char *a2, ...)
{
  return [a1 _axNumberOfRegularChapters];
}

id objc_msgSend__axParentBooksPopoverController(void *a1, const char *a2, ...)
{
  return [a1 _axParentBooksPopoverController];
}

id objc_msgSend__axParentRep(void *a1, const char *a2, ...)
{
  return [a1 _axParentRep];
}

id objc_msgSend__axQuickSpeakContent(void *a1, const char *a2, ...)
{
  return [a1 _axQuickSpeakContent];
}

id objc_msgSend__axRefreshShowingContentFlag(void *a1, const char *a2, ...)
{
  return [a1 _axRefreshShowingContentFlag];
}

id objc_msgSend__axRegisterForDismissPopupNotification(void *a1, const char *a2, ...)
{
  return [a1 _axRegisterForDismissPopupNotification];
}

id objc_msgSend__axSelectedTextRange(void *a1, const char *a2, ...)
{
  return [a1 _axSelectedTextRange];
}

id objc_msgSend__axShouldOutputTransferProgress(void *a1, const char *a2, ...)
{
  return [a1 _axShouldOutputTransferProgress];
}

id objc_msgSend__axShouldTreatAsCustomItemForTextElement(void *a1, const char *a2, ...)
{
  return [a1 _axShouldTreatAsCustomItemForTextElement];
}

id objc_msgSend__axShowToolbar(void *a1, const char *a2, ...)
{
  return [a1 _axShowToolbar];
}

id objc_msgSend__axShowToolbarIfAppropriate(void *a1, const char *a2, ...)
{
  return [a1 _axShowToolbarIfAppropriate];
}

id objc_msgSend__axWillDismissPopover(void *a1, const char *a2, ...)
{
  return [a1 _axWillDismissPopover];
}

id objc_msgSend__axWillPresentPopover(void *a1, const char *a2, ...)
{
  return [a1 _axWillPresentPopover];
}

id objc_msgSend__boundingFrame(void *a1, const char *a2, ...)
{
  return [a1 _boundingFrame];
}

id objc_msgSend__canSearch(void *a1, const char *a2, ...)
{
  return [a1 _canSearch];
}

id objc_msgSend__canShowGlossaryOrStudyCards(void *a1, const char *a2, ...)
{
  return [a1 _canShowGlossaryOrStudyCards];
}

id objc_msgSend__checkIfScanningReadingStatisticsCanBegin(void *a1, const char *a2, ...)
{
  return [a1 _checkIfScanningReadingStatisticsCanBegin];
}

id objc_msgSend__cleanupDispatchIO(void *a1, const char *a2, ...)
{
  return [a1 _cleanupDispatchIO];
}

id objc_msgSend__commitValue(void *a1, const char *a2, ...)
{
  return [a1 _commitValue];
}

id objc_msgSend__configurePagesScrollView(void *a1, const char *a2, ...)
{
  return [a1 _configurePagesScrollView];
}

id objc_msgSend__containerSize(void *a1, const char *a2, ...)
{
  return [a1 _containerSize];
}

id objc_msgSend__contentInsetScrubberVerticalPadding(void *a1, const char *a2, ...)
{
  return [a1 _contentInsetScrubberVerticalPadding];
}

id objc_msgSend__currentLocation(void *a1, const char *a2, ...)
{
  return [a1 _currentLocation];
}

id objc_msgSend__currentTraitCollection(void *a1, const char *a2, ...)
{
  return [a1 _currentTraitCollection];
}

id objc_msgSend__disableAutoNightMode(void *a1, const char *a2, ...)
{
  return [a1 _disableAutoNightMode];
}

id objc_msgSend__dismissReplaceContent(void *a1, const char *a2, ...)
{
  return [a1 _dismissReplaceContent];
}

id objc_msgSend__dispatchQueue(void *a1, const char *a2, ...)
{
  return [a1 _dispatchQueue];
}

id objc_msgSend__dispatchTimer(void *a1, const char *a2, ...)
{
  return [a1 _dispatchTimer];
}

id objc_msgSend__documentRoot(void *a1, const char *a2, ...)
{
  return [a1 _documentRoot];
}

id objc_msgSend__enableAutoNightMode(void *a1, const char *a2, ...)
{
  return [a1 _enableAutoNightMode];
}

id objc_msgSend__firstElementForUpcomingPageTurn(void *a1, const char *a2, ...)
{
  return [a1 _firstElementForUpcomingPageTurn];
}

id objc_msgSend__firstElementForUpcomingScreenChange(void *a1, const char *a2, ...)
{
  return [a1 _firstElementForUpcomingScreenChange];
}

id objc_msgSend__ignoredElements(void *a1, const char *a2, ...)
{
  return [a1 _ignoredElements];
}

id objc_msgSend__inAnalyticsReadSession(void *a1, const char *a2, ...)
{
  return [a1 _inAnalyticsReadSession];
}

id objc_msgSend__isCancelled(void *a1, const char *a2, ...)
{
  return [a1 _isCancelled];
}

id objc_msgSend__isCompactHeight(void *a1, const char *a2, ...)
{
  return [a1 _isCompactHeight];
}

id objc_msgSend__isCompactWidth(void *a1, const char *a2, ...)
{
  return [a1 _isCompactWidth];
}

id objc_msgSend__isInPopoverPresentation(void *a1, const char *a2, ...)
{
  return [a1 _isInPopoverPresentation];
}

id objc_msgSend__isShowingContent(void *a1, const char *a2, ...)
{
  return [a1 _isShowingContent];
}

id objc_msgSend__loadCells(void *a1, const char *a2, ...)
{
  return [a1 _loadCells];
}

id objc_msgSend__placeholderLabel(void *a1, const char *a2, ...)
{
  return [a1 _placeholderLabel];
}

id objc_msgSend__reallyCancel(void *a1, const char *a2, ...)
{
  return [a1 _reallyCancel];
}

id objc_msgSend__resetForNewLoad(void *a1, const char *a2, ...)
{
  return [a1 _resetForNewLoad];
}

id objc_msgSend__resetScrubInfo(void *a1, const char *a2, ...)
{
  return [a1 _resetScrubInfo];
}

id objc_msgSend__restoreAutoNightModeSwitch(void *a1, const char *a2, ...)
{
  return [a1 _restoreAutoNightModeSwitch];
}

id objc_msgSend__resultsEstimatedRowHeight(void *a1, const char *a2, ...)
{
  return [a1 _resultsEstimatedRowHeight];
}

id objc_msgSend__resultsHeaderHeight(void *a1, const char *a2, ...)
{
  return [a1 _resultsHeaderHeight];
}

id objc_msgSend__safeAreaInsets(void *a1, const char *a2, ...)
{
  return [a1 _safeAreaInsets];
}

id objc_msgSend__scheduleInteractionReset(void *a1, const char *a2, ...)
{
  return [a1 _scheduleInteractionReset];
}

id objc_msgSend__selectableRep(void *a1, const char *a2, ...)
{
  return [a1 _selectableRep];
}

id objc_msgSend__selectionDisplayInteraction(void *a1, const char *a2, ...)
{
  return [a1 _selectionDisplayInteraction];
}

id objc_msgSend__sendDidFinish(void *a1, const char *a2, ...)
{
  return [a1 _sendDidFinish];
}

id objc_msgSend__setupAnimation(void *a1, const char *a2, ...)
{
  return [a1 _setupAnimation];
}

id objc_msgSend__setupAnswerLayouts(void *a1, const char *a2, ...)
{
  return [a1 _setupAnswerLayouts];
}

id objc_msgSend__setupCompact(void *a1, const char *a2, ...)
{
  return [a1 _setupCompact];
}

id objc_msgSend__setupControlsForStyle(void *a1, const char *a2, ...)
{
  return [a1 _setupControlsForStyle];
}

id objc_msgSend__setupLayers(void *a1, const char *a2, ...)
{
  return [a1 _setupLayers];
}

id objc_msgSend__setupMegaPad(void *a1, const char *a2, ...)
{
  return [a1 _setupMegaPad];
}

id objc_msgSend__setupRegular(void *a1, const char *a2, ...)
{
  return [a1 _setupRegular];
}

id objc_msgSend__setupScaleAnimationLayers(void *a1, const char *a2, ...)
{
  return [a1 _setupScaleAnimationLayers];
}

id objc_msgSend__setupSplitAnimationLayers(void *a1, const char *a2, ...)
{
  return [a1 _setupSplitAnimationLayers];
}

id objc_msgSend__shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return [a1 _shouldReverseLayoutDirection];
}

id objc_msgSend__shouldShowAutoNightMode(void *a1, const char *a2, ...)
{
  return [a1 _shouldShowAutoNightMode];
}

id objc_msgSend__singletonAlloc(void *a1, const char *a2, ...)
{
  return [a1 _singletonAlloc];
}

id objc_msgSend__stackLayout(void *a1, const char *a2, ...)
{
  return [a1 _stackLayout];
}

id objc_msgSend__storageAnchorForPageBookmark(void *a1, const char *a2, ...)
{
  return [a1 _storageAnchorForPageBookmark];
}

id objc_msgSend__styleForTheme(void *a1, const char *a2, ...)
{
  return [a1 _styleForTheme];
}

id objc_msgSend__stylizeForTheme(void *a1, const char *a2, ...)
{
  return [a1 _stylizeForTheme];
}

id objc_msgSend__teardown(void *a1, const char *a2, ...)
{
  return [a1 _teardown];
}

id objc_msgSend__thaxActiveEntryViewControllerBeingLoaded(void *a1, const char *a2, ...)
{
  return [a1 _thaxActiveEntryViewControllerBeingLoaded];
}

id objc_msgSend__thaxAllowsToolbarHideRequests(void *a1, const char *a2, ...)
{
  return [a1 _thaxAllowsToolbarHideRequests];
}

id objc_msgSend__thaxAnnotation(void *a1, const char *a2, ...)
{
  return [a1 _thaxAnnotation];
}

id objc_msgSend__thaxAnnotationsDidChange(void *a1, const char *a2, ...)
{
  return [a1 _thaxAnnotationsDidChange];
}

id objc_msgSend__thaxAnnounceNumberOfSelectedNotes(void *a1, const char *a2, ...)
{
  return [a1 _thaxAnnounceNumberOfSelectedNotes];
}

id objc_msgSend__thaxApplyAccessibilityInfo(void *a1, const char *a2, ...)
{
  return [a1 _thaxApplyAccessibilityInfo];
}

id objc_msgSend__thaxApplyAccessibilityScrollingInfo(void *a1, const char *a2, ...)
{
  return [a1 _thaxApplyAccessibilityScrollingInfo];
}

id objc_msgSend__thaxAuthorProvidedAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 _thaxAuthorProvidedAccessibilityDescription];
}

id objc_msgSend__thaxBackgroundScrollView(void *a1, const char *a2, ...)
{
  return [a1 _thaxBackgroundScrollView];
}

id objc_msgSend__thaxBookViewController(void *a1, const char *a2, ...)
{
  return [a1 _thaxBookViewController];
}

id objc_msgSend__thaxBookmarkToolbarButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxBookmarkToolbarButton];
}

id objc_msgSend__thaxBuyButtonItem(void *a1, const char *a2, ...)
{
  return [a1 _thaxBuyButtonItem];
}

id objc_msgSend__thaxCachedGlossaryTermsRotorItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxCachedGlossaryTermsRotorItems];
}

id objc_msgSend__thaxCachedHighlightsRotorItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxCachedHighlightsRotorItems];
}

id objc_msgSend__thaxCachedLinksRotorItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxCachedLinksRotorItems];
}

id objc_msgSend__thaxCalloutInfo(void *a1, const char *a2, ...)
{
  return [a1 _thaxCalloutInfo];
}

id objc_msgSend__thaxCanDismissPresentedWidgetPopoverController(void *a1, const char *a2, ...)
{
  return [a1 _thaxCanDismissPresentedWidgetPopoverController];
}

id objc_msgSend__thaxCanvasView(void *a1, const char *a2, ...)
{
  return [a1 _thaxCanvasView];
}

id objc_msgSend__thaxCaptionStorage(void *a1, const char *a2, ...)
{
  return [a1 _thaxCaptionStorage];
}

id objc_msgSend__thaxCardNumberLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxCardNumberLabel];
}

id objc_msgSend__thaxCellContentView(void *a1, const char *a2, ...)
{
  return [a1 _thaxCellContentView];
}

id objc_msgSend__thaxChapterLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxChapterLabel];
}

id objc_msgSend__thaxChapterName(void *a1, const char *a2, ...)
{
  return [a1 _thaxChapterName];
}

id objc_msgSend__thaxChapterPageControl(void *a1, const char *a2, ...)
{
  return [a1 _thaxChapterPageControl];
}

id objc_msgSend__thaxChildReps(void *a1, const char *a2, ...)
{
  return [a1 _thaxChildReps];
}

id objc_msgSend__thaxChoiceState(void *a1, const char *a2, ...)
{
  return [a1 _thaxChoiceState];
}

id objc_msgSend__thaxCloseButtonItem(void *a1, const char *a2, ...)
{
  return [a1 _thaxCloseButtonItem];
}

id objc_msgSend__thaxConfigurePlayButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxConfigurePlayButton];
}

id objc_msgSend__thaxConfigureRepIgnorance(void *a1, const char *a2, ...)
{
  return [a1 _thaxConfigureRepIgnorance];
}

id objc_msgSend__thaxContainsSmartFields(void *a1, const char *a2, ...)
{
  return [a1 _thaxContainsSmartFields];
}

id objc_msgSend__thaxCurrentItem(void *a1, const char *a2, ...)
{
  return [a1 _thaxCurrentItem];
}

id objc_msgSend__thaxCurrentItemIndex(void *a1, const char *a2, ...)
{
  return [a1 _thaxCurrentItemIndex];
}

id objc_msgSend__thaxCurrentPage(void *a1, const char *a2, ...)
{
  return [a1 _thaxCurrentPage];
}

id objc_msgSend__thaxDateLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxDateLabel];
}

id objc_msgSend__thaxDelegate(void *a1, const char *a2, ...)
{
  return [a1 _thaxDelegate];
}

id objc_msgSend__thaxDidRenderNewEvent(void *a1, const char *a2, ...)
{
  return [a1 _thaxDidRenderNewEvent];
}

id objc_msgSend__thaxDismissPresentedWidgetPopoverControllerIfAppropriate(void *a1, const char *a2, ...)
{
  return [a1 _thaxDismissPresentedWidgetPopoverControllerIfAppropriate];
}

id objc_msgSend__thaxDisplaySettingsToolbarButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxDisplaySettingsToolbarButton];
}

id objc_msgSend__thaxEditing(void *a1, const char *a2, ...)
{
  return [a1 _thaxEditing];
}

id objc_msgSend__thaxEmptyCardAccessibilityLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxEmptyCardAccessibilityLabel];
}

id objc_msgSend__thaxFullscreenNotesViewOriginatingButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxFullscreenNotesViewOriginatingButton];
}

id objc_msgSend__thaxGlossaryEntry(void *a1, const char *a2, ...)
{
  return [a1 _thaxGlossaryEntry];
}

id objc_msgSend__thaxGlossaryTermsRotor(void *a1, const char *a2, ...)
{
  return [a1 _thaxGlossaryTermsRotor];
}

id objc_msgSend__thaxGlossaryTermsRotorItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxGlossaryTermsRotorItems];
}

id objc_msgSend__thaxHeaderImageViews(void *a1, const char *a2, ...)
{
  return [a1 _thaxHeaderImageViews];
}

id objc_msgSend__thaxHiddenPlayButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxHiddenPlayButton];
}

id objc_msgSend__thaxHideDVCElements(void *a1, const char *a2, ...)
{
  return [a1 _thaxHideDVCElements];
}

id objc_msgSend__thaxHighlightController(void *a1, const char *a2, ...)
{
  return [a1 _thaxHighlightController];
}

id objc_msgSend__thaxHighlightsRotor(void *a1, const char *a2, ...)
{
  return [a1 _thaxHighlightsRotor];
}

id objc_msgSend__thaxHighlightsRotorItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxHighlightsRotorItems];
}

id objc_msgSend__thaxHorizontalOverscrollNextChapter(void *a1, const char *a2, ...)
{
  return [a1 _thaxHorizontalOverscrollNextChapter];
}

id objc_msgSend__thaxHorizontalOverscrollPreviousChapter(void *a1, const char *a2, ...)
{
  return [a1 _thaxHorizontalOverscrollPreviousChapter];
}

id objc_msgSend__thaxHost(void *a1, const char *a2, ...)
{
  return [a1 _thaxHost];
}

id objc_msgSend__thaxIsCurrentPage(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsCurrentPage];
}

id objc_msgSend__thaxIsDescendentOfExpandedViewController(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsDescendentOfExpandedViewController];
}

id objc_msgSend__thaxIsEditing(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsEditing];
}

id objc_msgSend__thaxIsFirstThumbnail(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsFirstThumbnail];
}

id objc_msgSend__thaxIsGlossaryOpenedFromPopover(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsGlossaryOpenedFromPopover];
}

id objc_msgSend__thaxIsPerformingHitTest(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsPerformingHitTest];
}

id objc_msgSend__thaxIsPlaying(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsPlaying];
}

id objc_msgSend__thaxIsRepExpandable(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsRepExpandable];
}

id objc_msgSend__thaxIsSelected(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsSelected];
}

id objc_msgSend__thaxIsShowingContent(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsShowingContent];
}

id objc_msgSend__thaxIsViewLoaded(void *a1, const char *a2, ...)
{
  return [a1 _thaxIsViewLoaded];
}

id objc_msgSend__thaxItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxItems];
}

id objc_msgSend__thaxLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxLabel];
}

id objc_msgSend__thaxLastSeenAbsolutePaginatedPageIndex(void *a1, const char *a2, ...)
{
  return [a1 _thaxLastSeenAbsolutePaginatedPageIndex];
}

id objc_msgSend__thaxLastTimestampForPerformingBlockAffectingMediaControllerState(void *a1, const char *a2, ...)
{
  return [a1 _thaxLastTimestampForPerformingBlockAffectingMediaControllerState];
}

id objc_msgSend__thaxLinksRotor(void *a1, const char *a2, ...)
{
  return [a1 _thaxLinksRotor];
}

id objc_msgSend__thaxLinksRotorItems(void *a1, const char *a2, ...)
{
  return [a1 _thaxLinksRotorItems];
}

id objc_msgSend__thaxMode(void *a1, const char *a2, ...)
{
  return [a1 _thaxMode];
}

id objc_msgSend__thaxMovieInfo(void *a1, const char *a2, ...)
{
  return [a1 _thaxMovieInfo];
}

id objc_msgSend__thaxNameToViewMapping(void *a1, const char *a2, ...)
{
  return [a1 _thaxNameToViewMapping];
}

id objc_msgSend__thaxNeedsRepSetup(void *a1, const char *a2, ...)
{
  return [a1 _thaxNeedsRepSetup];
}

id objc_msgSend__thaxNextButtonRep(void *a1, const char *a2, ...)
{
  return [a1 _thaxNextButtonRep];
}

id objc_msgSend__thaxNoResultsLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxNoResultsLabel];
}

id objc_msgSend__thaxNoteCardsController(void *a1, const char *a2, ...)
{
  return [a1 _thaxNoteCardsController];
}

id objc_msgSend__thaxNoteCountLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxNoteCountLabel];
}

id objc_msgSend__thaxNotesToolbarButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxNotesToolbarButton];
}

id objc_msgSend__thaxNumberOfSelectedNotes(void *a1, const char *a2, ...)
{
  return [a1 _thaxNumberOfSelectedNotes];
}

id objc_msgSend__thaxOriginatingButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxOriginatingButton];
}

id objc_msgSend__thaxPageNumberLabel(void *a1, const char *a2, ...)
{
  return [a1 _thaxPageNumberLabel];
}

id objc_msgSend__thaxPageNumberView(void *a1, const char *a2, ...)
{
  return [a1 _thaxPageNumberView];
}

id objc_msgSend__thaxPagesScrollView(void *a1, const char *a2, ...)
{
  return [a1 _thaxPagesScrollView];
}

id objc_msgSend__thaxPresentedWidgetPopoverController(void *a1, const char *a2, ...)
{
  return [a1 _thaxPresentedWidgetPopoverController];
}

id objc_msgSend__thaxPressableHandler(void *a1, const char *a2, ...)
{
  return [a1 _thaxPressableHandler];
}

id objc_msgSend__thaxPreviousButtonRep(void *a1, const char *a2, ...)
{
  return [a1 _thaxPreviousButtonRep];
}

id objc_msgSend__thaxPreviouslyFocusedElement(void *a1, const char *a2, ...)
{
  return [a1 _thaxPreviouslyFocusedElement];
}

id objc_msgSend__thaxRadioState(void *a1, const char *a2, ...)
{
  return [a1 _thaxRadioState];
}

id objc_msgSend__thaxRepWantsPressAction(void *a1, const char *a2, ...)
{
  return [a1 _thaxRepWantsPressAction];
}

id objc_msgSend__thaxScrollView(void *a1, const char *a2, ...)
{
  return [a1 _thaxScrollView];
}

id objc_msgSend__thaxScrollableCanvasController(void *a1, const char *a2, ...)
{
  return [a1 _thaxScrollableCanvasController];
}

id objc_msgSend__thaxSearchToolbarButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxSearchToolbarButton];
}

id objc_msgSend__thaxSectionController(void *a1, const char *a2, ...)
{
  return [a1 _thaxSectionController];
}

id objc_msgSend__thaxSelectButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxSelectButton];
}

id objc_msgSend__thaxSelected(void *a1, const char *a2, ...)
{
  return [a1 _thaxSelected];
}

id objc_msgSend__thaxSelectedNotes(void *a1, const char *a2, ...)
{
  return [a1 _thaxSelectedNotes];
}

id objc_msgSend__thaxSelectedRepRange(void *a1, const char *a2, ...)
{
  return [a1 _thaxSelectedRepRange];
}

id objc_msgSend__thaxSelectedTOCViewController(void *a1, const char *a2, ...)
{
  return [a1 _thaxSelectedTOCViewController];
}

id objc_msgSend__thaxShouldIgnoreScrollingEnabledChanges(void *a1, const char *a2, ...)
{
  return [a1 _thaxShouldIgnoreScrollingEnabledChanges];
}

id objc_msgSend__thaxShouldOutputCurrentChapterForPageChange(void *a1, const char *a2, ...)
{
  return [a1 _thaxShouldOutputCurrentChapterForPageChange];
}

id objc_msgSend__thaxShouldOutputCurrentChapterForPageThumbnailsScrollStatus(void *a1, const char *a2, ...)
{
  return [a1 _thaxShouldOutputCurrentChapterForPageThumbnailsScrollStatus];
}

id objc_msgSend__thaxShouldPreventToolbarNavbarHiding(void *a1, const char *a2, ...)
{
  return [a1 _thaxShouldPreventToolbarNavbarHiding];
}

id objc_msgSend__thaxShowDVCElements(void *a1, const char *a2, ...)
{
  return [a1 _thaxShowDVCElements];
}

id objc_msgSend__thaxShowToolbar(void *a1, const char *a2, ...)
{
  return [a1 _thaxShowToolbar];
}

id objc_msgSend__thaxStageCanvasController(void *a1, const char *a2, ...)
{
  return [a1 _thaxStageCanvasController];
}

id objc_msgSend__thaxState(void *a1, const char *a2, ...)
{
  return [a1 _thaxState];
}

id objc_msgSend__thaxStepValue(void *a1, const char *a2, ...)
{
  return [a1 _thaxStepValue];
}

id objc_msgSend__thaxStoredGlossaryTermsRotor(void *a1, const char *a2, ...)
{
  return [a1 _thaxStoredGlossaryTermsRotor];
}

id objc_msgSend__thaxStoredHighlightsRotor(void *a1, const char *a2, ...)
{
  return [a1 _thaxStoredHighlightsRotor];
}

id objc_msgSend__thaxStoredLinksRotor(void *a1, const char *a2, ...)
{
  return [a1 _thaxStoredLinksRotor];
}

id objc_msgSend__thaxTableView(void *a1, const char *a2, ...)
{
  return [a1 _thaxTableView];
}

id objc_msgSend__thaxTableViewCellController(void *a1, const char *a2, ...)
{
  return [a1 _thaxTableViewCellController];
}

id objc_msgSend__thaxTangierEndSlider(void *a1, const char *a2, ...)
{
  return [a1 _thaxTangierEndSlider];
}

id objc_msgSend__thaxTangierStartSlider(void *a1, const char *a2, ...)
{
  return [a1 _thaxTangierStartSlider];
}

id objc_msgSend__thaxTheme(void *a1, const char *a2, ...)
{
  return [a1 _thaxTheme];
}

id objc_msgSend__thaxThumbnailTrackCanvasController(void *a1, const char *a2, ...)
{
  return [a1 _thaxThumbnailTrackCanvasController];
}

id objc_msgSend__thaxTocGlossaryButton(void *a1, const char *a2, ...)
{
  return [a1 _thaxTocGlossaryButton];
}

id objc_msgSend__thaxUpdateSpeakScreenColorsForCurrentTheme(void *a1, const char *a2, ...)
{
  return [a1 _thaxUpdateSpeakScreenColorsForCurrentTheme];
}

id objc_msgSend__thaxVerticalOverscrollNextChapter(void *a1, const char *a2, ...)
{
  return [a1 _thaxVerticalOverscrollNextChapter];
}

id objc_msgSend__thaxVerticalOverscrollPreviousChapter(void *a1, const char *a2, ...)
{
  return [a1 _thaxVerticalOverscrollPreviousChapter];
}

id objc_msgSend__thaxView(void *a1, const char *a2, ...)
{
  return [a1 _thaxView];
}

id objc_msgSend__thaxWasSelectedPriorToAccessibilityActivate(void *a1, const char *a2, ...)
{
  return [a1 _thaxWasSelectedPriorToAccessibilityActivate];
}

id objc_msgSend__thumbHitFrame(void *a1, const char *a2, ...)
{
  return [a1 _thumbHitFrame];
}

id objc_msgSend__thumbView(void *a1, const char *a2, ...)
{
  return [a1 _thumbView];
}

id objc_msgSend__thumbViewNeue(void *a1, const char *a2, ...)
{
  return [a1 _thumbViewNeue];
}

id objc_msgSend__titleView(void *a1, const char *a2, ...)
{
  return [a1 _titleView];
}

id objc_msgSend__tsaxActiveTextFindResultSelection(void *a1, const char *a2, ...)
{
  return [a1 _tsaxActiveTextFindResultSelection];
}

id objc_msgSend__tsaxAddButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxAddButton];
}

id objc_msgSend__tsaxAddToVisiblePopoverControllers(void *a1, const char *a2, ...)
{
  return [a1 _tsaxAddToVisiblePopoverControllers];
}

id objc_msgSend__tsaxAllButtons(void *a1, const char *a2, ...)
{
  return [a1 _tsaxAllButtons];
}

id objc_msgSend__tsaxAllowNextMenuToBecomeVisible(void *a1, const char *a2, ...)
{
  return [a1 _tsaxAllowNextMenuToBecomeVisible];
}

id objc_msgSend__tsaxAllowsDidUpdateSelectedChoiceForCompletionToken(void *a1, const char *a2, ...)
{
  return [a1 _tsaxAllowsDidUpdateSelectedChoiceForCompletionToken];
}

id objc_msgSend__tsaxApplyAccessibilityInfo(void *a1, const char *a2, ...)
{
  return [a1 _tsaxApplyAccessibilityInfo];
}

id objc_msgSend__tsaxArrowButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxArrowButton];
}

id objc_msgSend__tsaxAssociatedPopoverController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxAssociatedPopoverController];
}

id objc_msgSend__tsaxBackgroundButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxBackgroundButton];
}

id objc_msgSend__tsaxBezierPath(void *a1, const char *a2, ...)
{
  return [a1 _tsaxBezierPath];
}

id objc_msgSend__tsaxBottomLeftButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxBottomLeftButton];
}

id objc_msgSend__tsaxBottomRightButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxBottomRightButton];
}

id objc_msgSend__tsaxCachedApproximateColorDescription(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCachedApproximateColorDescription];
}

id objc_msgSend__tsaxCachedCharIndexNumber(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCachedCharIndexNumber];
}

id objc_msgSend__tsaxCachedOriginatingButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCachedOriginatingButton];
}

id objc_msgSend__tsaxCanBeSelected(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCanBeSelected];
}

id objc_msgSend__tsaxCanDismissAssociatedPopoverController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCanDismissAssociatedPopoverController];
}

id objc_msgSend__tsaxCellsRowsAndColumnsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCellsRowsAndColumnsCache];
}

id objc_msgSend__tsaxChartInfo(void *a1, const char *a2, ...)
{
  return [a1 _tsaxChartInfo];
}

id objc_msgSend__tsaxChartType(void *a1, const char *a2, ...)
{
  return [a1 _tsaxChartType];
}

id objc_msgSend__tsaxChildInvalidationCompletionBlocks(void *a1, const char *a2, ...)
{
  return [a1 _tsaxChildInvalidationCompletionBlocks];
}

id objc_msgSend__tsaxChildInvalidationTimer(void *a1, const char *a2, ...)
{
  return [a1 _tsaxChildInvalidationTimer];
}

id objc_msgSend__tsaxChildrenCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxChildrenCache];
}

id objc_msgSend__tsaxChildrenCellsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxChildrenCellsCache];
}

id objc_msgSend__tsaxClearWeakReferences(void *a1, const char *a2, ...)
{
  return [a1 _tsaxClearWeakReferences];
}

id objc_msgSend__tsaxColor(void *a1, const char *a2, ...)
{
  return [a1 _tsaxColor];
}

id objc_msgSend__tsaxColumnElementsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxColumnElementsCache];
}

id objc_msgSend__tsaxColumnIndexElementsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxColumnIndexElementsCache];
}

id objc_msgSend__tsaxCurrentlyFocusedButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxCurrentlyFocusedButton];
}

id objc_msgSend__tsaxDidUpdateAutocompletionText(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDidUpdateAutocompletionText];
}

id objc_msgSend__tsaxDidUpdateCurrentPage(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDidUpdateCurrentPage];
}

id objc_msgSend__tsaxDirection(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDirection];
}

id objc_msgSend__tsaxDirectionElement(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDirectionElement];
}

id objc_msgSend__tsaxDirectionType(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDirectionType];
}

id objc_msgSend__tsaxDismissAssociatedPopoverControllerIfAppropriate(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDismissAssociatedPopoverControllerIfAppropriate];
}

id objc_msgSend__tsaxDownButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDownButton];
}

id objc_msgSend__tsaxDraggingRulerMarker(void *a1, const char *a2, ...)
{
  return [a1 _tsaxDraggingRulerMarker];
}

id objc_msgSend__tsaxEditingCellIDAsRange(void *a1, const char *a2, ...)
{
  return [a1 _tsaxEditingCellIDAsRange];
}

id objc_msgSend__tsaxEditingTextRep(void *a1, const char *a2, ...)
{
  return [a1 _tsaxEditingTextRep];
}

id objc_msgSend__tsaxElementCount(void *a1, const char *a2, ...)
{
  return [a1 _tsaxElementCount];
}

id objc_msgSend__tsaxElementForMovingToSelection(void *a1, const char *a2, ...)
{
  return [a1 _tsaxElementForMovingToSelection];
}

id objc_msgSend__tsaxEnsureChildrenCellsAreLoaded(void *a1, const char *a2, ...)
{
  return [a1 _tsaxEnsureChildrenCellsAreLoaded];
}

id objc_msgSend__tsaxExpressionNode(void *a1, const char *a2, ...)
{
  return [a1 _tsaxExpressionNode];
}

id objc_msgSend__tsaxFindReplaceController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxFindReplaceController];
}

id objc_msgSend__tsaxFormulaPlainTextOfAbsorbedToken(void *a1, const char *a2, ...)
{
  return [a1 _tsaxFormulaPlainTextOfAbsorbedToken];
}

id objc_msgSend__tsaxFrame(void *a1, const char *a2, ...)
{
  return [a1 _tsaxFrame];
}

id objc_msgSend__tsaxFriendlyFilename(void *a1, const char *a2, ...)
{
  return [a1 _tsaxFriendlyFilename];
}

id objc_msgSend__tsaxGradientStops(void *a1, const char *a2, ...)
{
  return [a1 _tsaxGradientStops];
}

id objc_msgSend__tsaxGradientType(void *a1, const char *a2, ...)
{
  return [a1 _tsaxGradientType];
}

id objc_msgSend__tsaxHasZeroArcs(void *a1, const char *a2, ...)
{
  return [a1 _tsaxHasZeroArcs];
}

id objc_msgSend__tsaxIgnoreBeginEditingOnSingleTap(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIgnoreBeginEditingOnSingleTap];
}

id objc_msgSend__tsaxImageData(void *a1, const char *a2, ...)
{
  return [a1 _tsaxImageData];
}

id objc_msgSend__tsaxImageInfo(void *a1, const char *a2, ...)
{
  return [a1 _tsaxImageInfo];
}

id objc_msgSend__tsaxInferredLabel(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInferredLabel];
}

id objc_msgSend__tsaxInteractionDidStart(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInteractionDidStart];
}

id objc_msgSend__tsaxInteractionDidStop(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInteractionDidStop];
}

id objc_msgSend__tsaxInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInteractiveCanvasController];
}

id objc_msgSend__tsaxInvalidateChildrenOnParentCanvasViewEventually(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInvalidateChildrenOnParentCanvasViewEventually];
}

id objc_msgSend__tsaxInvalidateChildrenOnParentCanvasViewImmediately(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInvalidateChildrenOnParentCanvasViewImmediately];
}

id objc_msgSend__tsaxInvalidateViewChildrenEventually(void *a1, const char *a2, ...)
{
  return [a1 _tsaxInvalidateViewChildrenEventually];
}

id objc_msgSend__tsaxIsAcceptingTypedText(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsAcceptingTypedText];
}

id objc_msgSend__tsaxIsBeingDeallocated(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsBeingDeallocated];
}

id objc_msgSend__tsaxIsBuildingChildrenCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsBuildingChildrenCache];
}

id objc_msgSend__tsaxIsCircular(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsCircular];
}

id objc_msgSend__tsaxIsDiamond(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsDiamond];
}

id objc_msgSend__tsaxIsEditMenuAllowedToAppear(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsEditMenuAllowedToAppear];
}

id objc_msgSend__tsaxIsInsertingText(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsInsertingText];
}

id objc_msgSend__tsaxIsInvalidatingChildrenCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsInvalidatingChildrenCache];
}

id objc_msgSend__tsaxIsLineSegment(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsLineSegment];
}

id objc_msgSend__tsaxIsPerformingBlockAffectingTableSelection(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsPerformingBlockAffectingTableSelection];
}

id objc_msgSend__tsaxIsPerformingBlockEndingEditing(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsPerformingBlockEndingEditing];
}

id objc_msgSend__tsaxIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD];
}

id objc_msgSend__tsaxIsRectangular(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsRectangular];
}

id objc_msgSend__tsaxIsTriangular(void *a1, const char *a2, ...)
{
  return [a1 _tsaxIsTriangular];
}

id objc_msgSend__tsaxKnobAccessibilityElementsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxKnobAccessibilityElementsCache];
}

id objc_msgSend__tsaxKnobElementCacheIsInvalid(void *a1, const char *a2, ...)
{
  return [a1 _tsaxKnobElementCacheIsInvalid];
}

id objc_msgSend__tsaxLastAnnouncedValue(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLastAnnouncedValue];
}

id objc_msgSend__tsaxLastCharacterIndexForActivation(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLastCharacterIndexForActivation];
}

id objc_msgSend__tsaxLastElementIsClose(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLastElementIsClose];
}

id objc_msgSend__tsaxLastElementIsMove(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLastElementIsMove];
}

id objc_msgSend__tsaxLastSelectedButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLastSelectedButton];
}

id objc_msgSend__tsaxLastUpdatedMenuItemsWhilePreventingActualItemsMutation(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLastUpdatedMenuItemsWhilePreventingActualItemsMutation];
}

id objc_msgSend__tsaxLeftButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxLeftButton];
}

id objc_msgSend__tsaxModelValue(void *a1, const char *a2, ...)
{
  return [a1 _tsaxModelValue];
}

id objc_msgSend__tsaxMovieData(void *a1, const char *a2, ...)
{
  return [a1 _tsaxMovieData];
}

id objc_msgSend__tsaxMovieInfo(void *a1, const char *a2, ...)
{
  return [a1 _tsaxMovieInfo];
}

id objc_msgSend__tsaxNeedsColumnAndRowIndexElements(void *a1, const char *a2, ...)
{
  return [a1 _tsaxNeedsColumnAndRowIndexElements];
}

id objc_msgSend__tsaxNumberOfArcs(void *a1, const char *a2, ...)
{
  return [a1 _tsaxNumberOfArcs];
}

id objc_msgSend__tsaxNumberOfConsecutiveLineSegments(void *a1, const char *a2, ...)
{
  return [a1 _tsaxNumberOfConsecutiveLineSegments];
}

id objc_msgSend__tsaxNumberOfLineSegments(void *a1, const char *a2, ...)
{
  return [a1 _tsaxNumberOfLineSegments];
}

id objc_msgSend__tsaxNumberOfSides(void *a1, const char *a2, ...)
{
  return [a1 _tsaxNumberOfSides];
}

id objc_msgSend__tsaxOpacity(void *a1, const char *a2, ...)
{
  return [a1 _tsaxOpacity];
}

id objc_msgSend__tsaxOriginDescription(void *a1, const char *a2, ...)
{
  return [a1 _tsaxOriginDescription];
}

id objc_msgSend__tsaxParentCanvasView(void *a1, const char *a2, ...)
{
  return [a1 _tsaxParentCanvasView];
}

id objc_msgSend__tsaxParentInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxParentInteractiveCanvasController];
}

id objc_msgSend__tsaxParentLayer(void *a1, const char *a2, ...)
{
  return [a1 _tsaxParentLayer];
}

id objc_msgSend__tsaxParentPlaceholderDescription(void *a1, const char *a2, ...)
{
  return [a1 _tsaxParentPlaceholderDescription];
}

id objc_msgSend__tsaxParentShapeHint(void *a1, const char *a2, ...)
{
  return [a1 _tsaxParentShapeHint];
}

id objc_msgSend__tsaxParentShapeLabel(void *a1, const char *a2, ...)
{
  return [a1 _tsaxParentShapeLabel];
}

id objc_msgSend__tsaxPath(void *a1, const char *a2, ...)
{
  return [a1 _tsaxPath];
}

id objc_msgSend__tsaxPendingSyncState(void *a1, const char *a2, ...)
{
  return [a1 _tsaxPendingSyncState];
}

id objc_msgSend__tsaxPresetIndex(void *a1, const char *a2, ...)
{
  return [a1 _tsaxPresetIndex];
}

id objc_msgSend__tsaxRegisteredLinkedTextContainerElements(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRegisteredLinkedTextContainerElements];
}

id objc_msgSend__tsaxRepContainerElementCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRepContainerElementCache];
}

id objc_msgSend__tsaxRepRangeIsHeading(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRepRangeIsHeading];
}

id objc_msgSend__tsaxResetSwatchGridViews(void *a1, const char *a2, ...)
{
  return [a1 _tsaxResetSwatchGridViews];
}

id objc_msgSend__tsaxRightButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRightButton];
}

id objc_msgSend__tsaxRotationDescription(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRotationDescription];
}

id objc_msgSend__tsaxRowElementsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRowElementsCache];
}

id objc_msgSend__tsaxRowIndexElementsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRowIndexElementsCache];
}

id objc_msgSend__tsaxRulerMarkerController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRulerMarkerController];
}

id objc_msgSend__tsaxRulerUnitsInstance(void *a1, const char *a2, ...)
{
  return [a1 _tsaxRulerUnitsInstance];
}

id objc_msgSend__tsaxSegments(void *a1, const char *a2, ...)
{
  return [a1 _tsaxSegments];
}

id objc_msgSend__tsaxSelectedButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxSelectedButton];
}

id objc_msgSend__tsaxSeriesAllStyles(void *a1, const char *a2, ...)
{
  return [a1 _tsaxSeriesAllStyles];
}

id objc_msgSend__tsaxSetupRulerController(void *a1, const char *a2, ...)
{
  return [a1 _tsaxSetupRulerController];
}

id objc_msgSend__tsaxShadowAngle(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShadowAngle];
}

id objc_msgSend__tsaxShadowColor(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShadowColor];
}

id objc_msgSend__tsaxShapeContainedTextRep(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShapeContainedTextRep];
}

id objc_msgSend__tsaxShapeStyle(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShapeStyle];
}

id objc_msgSend__tsaxShareButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShareButton];
}

id objc_msgSend__tsaxShouldActuallyPreventMakingVisible(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldActuallyPreventMakingVisible];
}

id objc_msgSend__tsaxShouldEnterIntermediateStateUponScrolling(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldEnterIntermediateStateUponScrolling];
}

id objc_msgSend__tsaxShouldForceIsTracking(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldForceIsTracking];
}

id objc_msgSend__tsaxShouldPreventAccessToCanvas(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldPreventAccessToCanvas];
}

id objc_msgSend__tsaxShouldPreventMakingVisible(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldPreventMakingVisible];
}

id objc_msgSend__tsaxShouldPreventMutatingItems(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldPreventMutatingItems];
}

id objc_msgSend__tsaxShouldSkipSelectionChangedNotification(void *a1, const char *a2, ...)
{
  return [a1 _tsaxShouldSkipSelectionChangedNotification];
}

id objc_msgSend__tsaxSizeDescription(void *a1, const char *a2, ...)
{
  return [a1 _tsaxSizeDescription];
}

id objc_msgSend__tsaxStoredLabel(void *a1, const char *a2, ...)
{
  return [a1 _tsaxStoredLabel];
}

id objc_msgSend__tsaxStrokeColor(void *a1, const char *a2, ...)
{
  return [a1 _tsaxStrokeColor];
}

id objc_msgSend__tsaxStrokeWidth(void *a1, const char *a2, ...)
{
  return [a1 _tsaxStrokeWidth];
}

id objc_msgSend__tsaxTheme(void *a1, const char *a2, ...)
{
  return [a1 _tsaxTheme];
}

id objc_msgSend__tsaxTickFrameSpacing(void *a1, const char *a2, ...)
{
  return [a1 _tsaxTickFrameSpacing];
}

id objc_msgSend__tsaxTopLeftButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxTopLeftButton];
}

id objc_msgSend__tsaxTopRightButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxTopRightButton];
}

id objc_msgSend__tsaxTwoDimensionalChildrenCellsCache(void *a1, const char *a2, ...)
{
  return [a1 _tsaxTwoDimensionalChildrenCellsCache];
}

id objc_msgSend__tsaxType(void *a1, const char *a2, ...)
{
  return [a1 _tsaxType];
}

id objc_msgSend__tsaxUpButton(void *a1, const char *a2, ...)
{
  return [a1 _tsaxUpButton];
}

id objc_msgSend__tsaxUpdateEditingCellIDOnMasterLayout(void *a1, const char *a2, ...)
{
  return [a1 _tsaxUpdateEditingCellIDOnMasterLayout];
}

id objc_msgSend__turnAutoNightModeSwitchOff(void *a1, const char *a2, ...)
{
  return [a1 _turnAutoNightModeSwitchOff];
}

id objc_msgSend__updateCloseButtonItem(void *a1, const char *a2, ...)
{
  return [a1 _updateCloseButtonItem];
}

id objc_msgSend__updateConstraints(void *a1, const char *a2, ...)
{
  return [a1 _updateConstraints];
}

id objc_msgSend__updateContentOffsets(void *a1, const char *a2, ...)
{
  return [a1 _updateContentOffsets];
}

id objc_msgSend__updateForAvailableDuration(void *a1, const char *a2, ...)
{
  return [a1 _updateForAvailableDuration];
}

id objc_msgSend__updateTheme(void *a1, const char *a2, ...)
{
  return [a1 _updateTheme];
}

id objc_msgSend__updateTrackInset(void *a1, const char *a2, ...)
{
  return [a1 _updateTrackInset];
}

id objc_msgSend_absolutePageIndex(void *a1, const char *a2, ...)
{
  return [a1 absolutePageIndex];
}

id objc_msgSend_absolutePageIndexArrayForDisplayPageNumberMap(void *a1, const char *a2, ...)
{
  return [a1 absolutePageIndexArrayForDisplayPageNumberMap];
}

id objc_msgSend_absolutePageIndexForBeginningOfSection(void *a1, const char *a2, ...)
{
  return [a1 absolutePageIndexForBeginningOfSection];
}

id objc_msgSend_absolutePageIndexForEndOfSection(void *a1, const char *a2, ...)
{
  return [a1 absolutePageIndexForEndOfSection];
}

id objc_msgSend_absolutePageIndexForNextSection(void *a1, const char *a2, ...)
{
  return [a1 absolutePageIndexForNextSection];
}

id objc_msgSend_absolutePageIndexForPreviousSection(void *a1, const char *a2, ...)
{
  return [a1 absolutePageIndexForPreviousSection];
}

id objc_msgSend_absolutePhysicalPageIndex(void *a1, const char *a2, ...)
{
  return [a1 absolutePhysicalPageIndex];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return [a1 absoluteString];
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return [a1 absoluteURL];
}

id objc_msgSend_accessController(void *a1, const char *a2, ...)
{
  return [a1 accessController];
}

id objc_msgSend_accessibilityActivationPoint(void *a1, const char *a2, ...)
{
  return [a1 accessibilityActivationPoint];
}

id objc_msgSend_accessibilityContainer(void *a1, const char *a2, ...)
{
  return [a1 accessibilityContainer];
}

id objc_msgSend_accessibilityContainerType(void *a1, const char *a2, ...)
{
  return [a1 accessibilityContainerType];
}

id objc_msgSend_accessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 accessibilityDescription];
}

id objc_msgSend_accessibilityDescriptions(void *a1, const char *a2, ...)
{
  return [a1 accessibilityDescriptions];
}

id objc_msgSend_accessibilityElementCount(void *a1, const char *a2, ...)
{
  return [a1 accessibilityElementCount];
}

id objc_msgSend_accessibilityElementIsFocused(void *a1, const char *a2, ...)
{
  return [a1 accessibilityElementIsFocused];
}

id objc_msgSend_accessibilityElements(void *a1, const char *a2, ...)
{
  return [a1 accessibilityElements];
}

id objc_msgSend_accessibilityElementsHidden(void *a1, const char *a2, ...)
{
  return [a1 accessibilityElementsHidden];
}

id objc_msgSend_accessibilityFrame(void *a1, const char *a2, ...)
{
  return [a1 accessibilityFrame];
}

id objc_msgSend_accessibilityIdentifier(void *a1, const char *a2, ...)
{
  return [a1 accessibilityIdentifier];
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return [a1 accessibilityLabel];
}

id objc_msgSend_accessibilityRegionsForCurrentEvent(void *a1, const char *a2, ...)
{
  return [a1 accessibilityRegionsForCurrentEvent];
}

id objc_msgSend_accessibilityScrollDownPage(void *a1, const char *a2, ...)
{
  return [a1 accessibilityScrollDownPage];
}

id objc_msgSend_accessibilityScrollLeftPage(void *a1, const char *a2, ...)
{
  return [a1 accessibilityScrollLeftPage];
}

id objc_msgSend_accessibilityScrollRightPage(void *a1, const char *a2, ...)
{
  return [a1 accessibilityScrollRightPage];
}

id objc_msgSend_accessibilityScrollUpPage(void *a1, const char *a2, ...)
{
  return [a1 accessibilityScrollUpPage];
}

id objc_msgSend_accessibilitySupportLoaded(void *a1, const char *a2, ...)
{
  return [a1 accessibilitySupportLoaded];
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return [a1 accessibilityTraits];
}

id objc_msgSend_accessibilityUserDefinedLabel(void *a1, const char *a2, ...)
{
  return [a1 accessibilityUserDefinedLabel];
}

id objc_msgSend_accessibilityValue(void *a1, const char *a2, ...)
{
  return [a1 accessibilityValue];
}

id objc_msgSend_accessoryType(void *a1, const char *a2, ...)
{
  return [a1 accessoryType];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return [a1 action];
}

id objc_msgSend_actionlessBookmarkButton(void *a1, const char *a2, ...)
{
  return [a1 actionlessBookmarkButton];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return [a1 activate];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return [a1 activationState];
}

id objc_msgSend_activeHighlightLayers(void *a1, const char *a2, ...)
{
  return [a1 activeHighlightLayers];
}

id objc_msgSend_activeInterfaceOrientation(void *a1, const char *a2, ...)
{
  return [a1 activeInterfaceOrientation];
}

id objc_msgSend_activePopoverEditor(void *a1, const char *a2, ...)
{
  return [a1 activePopoverEditor];
}

id objc_msgSend_activeSectionController(void *a1, const char *a2, ...)
{
  return [a1 activeSectionController];
}

id objc_msgSend_activeTransportControllers(void *a1, const char *a2, ...)
{
  return [a1 activeTransportControllers];
}

id objc_msgSend_activityController(void *a1, const char *a2, ...)
{
  return [a1 activityController];
}

id objc_msgSend_activityIndicatorCellHeight(void *a1, const char *a2, ...)
{
  return [a1 activityIndicatorCellHeight];
}

id objc_msgSend_activityIndicatorView(void *a1, const char *a2, ...)
{
  return [a1 activityIndicatorView];
}

id objc_msgSend_activityItemProvider(void *a1, const char *a2, ...)
{
  return [a1 activityItemProvider];
}

id objc_msgSend_activityItemProviderForCurrentSelection(void *a1, const char *a2, ...)
{
  return [a1 activityItemProviderForCurrentSelection];
}

id objc_msgSend_activityViewController(void *a1, const char *a2, ...)
{
  return [a1 activityViewController];
}

id objc_msgSend_actualStageDrawable(void *a1, const char *a2, ...)
{
  return [a1 actualStageDrawable];
}

id objc_msgSend_addBackgroundFadeOutAnimation(void *a1, const char *a2, ...)
{
  return [a1 addBackgroundFadeOutAnimation];
}

id objc_msgSend_addButtonShadow(void *a1, const char *a2, ...)
{
  return [a1 addButtonShadow];
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return [a1 addClip];
}

id objc_msgSend_addContentAnimation(void *a1, const char *a2, ...)
{
  return [a1 addContentAnimation];
}

id objc_msgSend_addContinuousRotationWithEaseIn(void *a1, const char *a2, ...)
{
  return [a1 addContinuousRotationWithEaseIn];
}

id objc_msgSend_addForegroundFadeAnimation(void *a1, const char *a2, ...)
{
  return [a1 addForegroundFadeAnimation];
}

id objc_msgSend_addPage(void *a1, const char *a2, ...)
{
  return [a1 addPage];
}

id objc_msgSend_addPageStartIndex(void *a1, const char *a2, ...)
{
  return [a1 addPageStartIndex];
}

id objc_msgSend_addPerspectiveProjection(void *a1, const char *a2, ...)
{
  return [a1 addPerspectiveProjection];
}

id objc_msgSend_addSimpleSelector(void *a1, const char *a2, ...)
{
  return [a1 addSimpleSelector];
}

id objc_msgSend_additionalBackgroundInset(void *a1, const char *a2, ...)
{
  return [a1 additionalBackgroundInset];
}

id objc_msgSend_additionalLayouts(void *a1, const char *a2, ...)
{
  return [a1 additionalLayouts];
}

id objc_msgSend_adjustContentInsets(void *a1, const char *a2, ...)
{
  return [a1 adjustContentInsets];
}

id objc_msgSend_adjustContentViewFrame(void *a1, const char *a2, ...)
{
  return [a1 adjustContentViewFrame];
}

id objc_msgSend_adornmentController(void *a1, const char *a2, ...)
{
  return [a1 adornmentController];
}

id objc_msgSend_adornmentInfo(void *a1, const char *a2, ...)
{
  return [a1 adornmentInfo];
}

id objc_msgSend_adornmentsVisible(void *a1, const char *a2, ...)
{
  return [a1 adornmentsVisible];
}

id objc_msgSend_affectedObjects(void *a1, const char *a2, ...)
{
  return [a1 affectedObjects];
}

id objc_msgSend_affineTransform(void *a1, const char *a2, ...)
{
  return [a1 affineTransform];
}

id objc_msgSend_allAnnotations(void *a1, const char *a2, ...)
{
  return [a1 allAnnotations];
}

id objc_msgSend_allElementsSelector(void *a1, const char *a2, ...)
{
  return [a1 allElementsSelector];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_allLines(void *a1, const char *a2, ...)
{
  return [a1 allLines];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return [a1 allObjects];
}

id objc_msgSend_allReps(void *a1, const char *a2, ...)
{
  return [a1 allReps];
}

id objc_msgSend_allTargets(void *a1, const char *a2, ...)
{
  return [a1 allTargets];
}

id objc_msgSend_allTouches(void *a1, const char *a2, ...)
{
  return [a1 allTouches];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return [a1 allValues];
}

id objc_msgSend_allWPStorages(void *a1, const char *a2, ...)
{
  return [a1 allWPStorages];
}

id objc_msgSend_allowCopy(void *a1, const char *a2, ...)
{
  return [a1 allowCopy];
}

id objc_msgSend_allowGlossary(void *a1, const char *a2, ...)
{
  return [a1 allowGlossary];
}

id objc_msgSend_allowLayoutAndRenderOnThread(void *a1, const char *a2, ...)
{
  return [a1 allowLayoutAndRenderOnThread];
}

id objc_msgSend_allowNetworkAccess(void *a1, const char *a2, ...)
{
  return [a1 allowNetworkAccess];
}

id objc_msgSend_allowSelectAll(void *a1, const char *a2, ...)
{
  return [a1 allowSelectAll];
}

id objc_msgSend_allowableMovement(void *a1, const char *a2, ...)
{
  return [a1 allowableMovement];
}

id objc_msgSend_allowsPinchZoom(void *a1, const char *a2, ...)
{
  return [a1 allowsPinchZoom];
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return [a1 alpha];
}

id objc_msgSend_alphaAnimationDidEnd(void *a1, const char *a2, ...)
{
  return [a1 alphaAnimationDidEnd];
}

id objc_msgSend_alphaAnimationWillBegin(void *a1, const char *a2, ...)
{
  return [a1 alphaAnimationWillBegin];
}

id objc_msgSend_alphaComponent(void *a1, const char *a2, ...)
{
  return [a1 alphaComponent];
}

id objc_msgSend_alphabeticalTermIndex(void *a1, const char *a2, ...)
{
  return [a1 alphabeticalTermIndex];
}

id objc_msgSend_altDesc(void *a1, const char *a2, ...)
{
  return [a1 altDesc];
}

id objc_msgSend_alternateLayerForView(void *a1, const char *a2, ...)
{
  return [a1 alternateLayerForView];
}

id objc_msgSend_alternativeNextCaption(void *a1, const char *a2, ...)
{
  return [a1 alternativeNextCaption];
}

id objc_msgSend_alternativePrevCaption(void *a1, const char *a2, ...)
{
  return [a1 alternativePrevCaption];
}

id objc_msgSend_analyticsReadStartDate(void *a1, const char *a2, ...)
{
  return [a1 analyticsReadStartDate];
}

id objc_msgSend_analyticsReadStartProgress(void *a1, const char *a2, ...)
{
  return [a1 analyticsReadStartProgress];
}

id objc_msgSend_ancestorParagraphStyle(void *a1, const char *a2, ...)
{
  return [a1 ancestorParagraphStyle];
}

id objc_msgSend_anchorAtOrigin(void *a1, const char *a2, ...)
{
  return [a1 anchorAtOrigin];
}

id objc_msgSend_anchorCellID(void *a1, const char *a2, ...)
{
  return [a1 anchorCellID];
}

id objc_msgSend_anchorForCfiFrag(void *a1, const char *a2, ...)
{
  return [a1 anchorForCfiFrag];
}

id objc_msgSend_anchorPoint(void *a1, const char *a2, ...)
{
  return [a1 anchorPoint];
}

id objc_msgSend_anchoredAttachmentPositions(void *a1, const char *a2, ...)
{
  return [a1 anchoredAttachmentPositions];
}

id objc_msgSend_angle(void *a1, const char *a2, ...)
{
  return [a1 angle];
}

id objc_msgSend_animatedBuild(void *a1, const char *a2, ...)
{
  return [a1 animatedBuild];
}

id objc_msgSend_animatedFromFullscreen(void *a1, const char *a2, ...)
{
  return [a1 animatedFromFullscreen];
}

id objc_msgSend_animating(void *a1, const char *a2, ...)
{
  return [a1 animating];
}

id objc_msgSend_animatingScroll(void *a1, const char *a2, ...)
{
  return [a1 animatingScroll];
}

id objc_msgSend_animatingViewScale(void *a1, const char *a2, ...)
{
  return [a1 animatingViewScale];
}

id objc_msgSend_animatingVisibilityCount(void *a1, const char *a2, ...)
{
  return [a1 animatingVisibilityCount];
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return [a1 animation];
}

id objc_msgSend_animationBeginTime(void *a1, const char *a2, ...)
{
  return [a1 animationBeginTime];
}

id objc_msgSend_animationContainerProvidesShadowForAnimation(void *a1, const char *a2, ...)
{
  return [a1 animationContainerProvidesShadowForAnimation];
}

id objc_msgSend_animationController(void *a1, const char *a2, ...)
{
  return [a1 animationController];
}

id objc_msgSend_animationDidEnd(void *a1, const char *a2, ...)
{
  return [a1 animationDidEnd];
}

id objc_msgSend_animationDuration(void *a1, const char *a2, ...)
{
  return [a1 animationDuration];
}

id objc_msgSend_animationKeys(void *a1, const char *a2, ...)
{
  return [a1 animationKeys];
}

id objc_msgSend_animationLayer(void *a1, const char *a2, ...)
{
  return [a1 animationLayer];
}

id objc_msgSend_animationName(void *a1, const char *a2, ...)
{
  return [a1 animationName];
}

id objc_msgSend_animationRegistry(void *a1, const char *a2, ...)
{
  return [a1 animationRegistry];
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return [a1 annotation];
}

id objc_msgSend_annotationAbsolutePhysicalPageIndex(void *a1, const char *a2, ...)
{
  return [a1 annotationAbsolutePhysicalPageIndex];
}

id objc_msgSend_annotationAssetID(void *a1, const char *a2, ...)
{
  return [a1 annotationAssetID];
}

id objc_msgSend_annotationBlendMode(void *a1, const char *a2, ...)
{
  return [a1 annotationBlendMode];
}

id objc_msgSend_annotationBookVersion(void *a1, const char *a2, ...)
{
  return [a1 annotationBookVersion];
}

id objc_msgSend_annotationCache(void *a1, const char *a2, ...)
{
  return [a1 annotationCache];
}

id objc_msgSend_annotationContentNodeID(void *a1, const char *a2, ...)
{
  return [a1 annotationContentNodeID];
}

id objc_msgSend_annotationController(void *a1, const char *a2, ...)
{
  return [a1 annotationController];
}

id objc_msgSend_annotationCount(void *a1, const char *a2, ...)
{
  return [a1 annotationCount];
}

id objc_msgSend_annotationCountForStudyCards(void *a1, const char *a2, ...)
{
  return [a1 annotationCountForStudyCards];
}

id objc_msgSend_annotationCreationDate(void *a1, const char *a2, ...)
{
  return [a1 annotationCreationDate];
}

id objc_msgSend_annotationForCurrentSelection(void *a1, const char *a2, ...)
{
  return [a1 annotationForCurrentSelection];
}

id objc_msgSend_annotationFromCurrentSelection(void *a1, const char *a2, ...)
{
  return [a1 annotationFromCurrentSelection];
}

id objc_msgSend_annotationHasNote(void *a1, const char *a2, ...)
{
  return [a1 annotationHasNote];
}

id objc_msgSend_annotationID(void *a1, const char *a2, ...)
{
  return [a1 annotationID];
}

id objc_msgSend_annotationIsBookmark(void *a1, const char *a2, ...)
{
  return [a1 annotationIsBookmark];
}

id objc_msgSend_annotationIsOrphan(void *a1, const char *a2, ...)
{
  return [a1 annotationIsOrphan];
}

id objc_msgSend_annotationIsPlaceholder(void *a1, const char *a2, ...)
{
  return [a1 annotationIsPlaceholder];
}

id objc_msgSend_annotationIsUnderline(void *a1, const char *a2, ...)
{
  return [a1 annotationIsUnderline];
}

id objc_msgSend_annotationLocation(void *a1, const char *a2, ...)
{
  return [a1 annotationLocation];
}

id objc_msgSend_annotationModificationDate(void *a1, const char *a2, ...)
{
  return [a1 annotationModificationDate];
}

id objc_msgSend_annotationNote(void *a1, const char *a2, ...)
{
  return [a1 annotationNote];
}

id objc_msgSend_annotationPageTheme(void *a1, const char *a2, ...)
{
  return [a1 annotationPageTheme];
}

id objc_msgSend_annotationRepresentativeText(void *a1, const char *a2, ...)
{
  return [a1 annotationRepresentativeText];
}

id objc_msgSend_annotationRequestForAllNotes(void *a1, const char *a2, ...)
{
  return [a1 annotationRequestForAllNotes];
}

id objc_msgSend_annotationRequestForNonOrphanedNotes(void *a1, const char *a2, ...)
{
  return [a1 annotationRequestForNonOrphanedNotes];
}

id objc_msgSend_annotationRequestForNonSponsoredNonOrphaned(void *a1, const char *a2, ...)
{
  return [a1 annotationRequestForNonSponsoredNonOrphaned];
}

id objc_msgSend_annotationRequestForOrphanedNotes(void *a1, const char *a2, ...)
{
  return [a1 annotationRequestForOrphanedNotes];
}

id objc_msgSend_annotationSearchIndex(void *a1, const char *a2, ...)
{
  return [a1 annotationSearchIndex];
}

id objc_msgSend_annotationSelectedText(void *a1, const char *a2, ...)
{
  return [a1 annotationSelectedText];
}

id objc_msgSend_annotationSource(void *a1, const char *a2, ...)
{
  return [a1 annotationSource];
}

id objc_msgSend_annotationStorageController(void *a1, const char *a2, ...)
{
  return [a1 annotationStorageController];
}

id objc_msgSend_annotationStorageIDWithoutContentNodeID(void *a1, const char *a2, ...)
{
  return [a1 annotationStorageIDWithoutContentNodeID];
}

id objc_msgSend_annotationStorageRange(void *a1, const char *a2, ...)
{
  return [a1 annotationStorageRange];
}

id objc_msgSend_annotationStorageUID(void *a1, const char *a2, ...)
{
  return [a1 annotationStorageUID];
}

id objc_msgSend_annotationStyle(void *a1, const char *a2, ...)
{
  return [a1 annotationStyle];
}

id objc_msgSend_annotationType(void *a1, const char *a2, ...)
{
  return [a1 annotationType];
}

id objc_msgSend_annotationUUID(void *a1, const char *a2, ...)
{
  return [a1 annotationUUID];
}

id objc_msgSend_annotationUuid(void *a1, const char *a2, ...)
{
  return [a1 annotationUuid];
}

id objc_msgSend_annotationVersion(void *a1, const char *a2, ...)
{
  return [a1 annotationVersion];
}

id objc_msgSend_annotations(void *a1, const char *a2, ...)
{
  return [a1 annotations];
}

id objc_msgSend_annotationsReadEnabled(void *a1, const char *a2, ...)
{
  return [a1 annotationsReadEnabled];
}

id objc_msgSend_annotationsWriteEnabled(void *a1, const char *a2, ...)
{
  return [a1 annotationsWriteEnabled];
}

id objc_msgSend_answerLayoutWidth(void *a1, const char *a2, ...)
{
  return [a1 answerLayoutWidth];
}

id objc_msgSend_answerStackSize(void *a1, const char *a2, ...)
{
  return [a1 answerStackSize];
}

id objc_msgSend_answerState(void *a1, const char *a2, ...)
{
  return [a1 answerState];
}

id objc_msgSend_answerWeight(void *a1, const char *a2, ...)
{
  return [a1 answerWeight];
}

id objc_msgSend_answers(void *a1, const char *a2, ...)
{
  return [a1 answers];
}

id objc_msgSend_answersAreText(void *a1, const char *a2, ...)
{
  return [a1 answersAreText];
}

id objc_msgSend_answersFrame(void *a1, const char *a2, ...)
{
  return [a1 answersFrame];
}

id objc_msgSend_answersSize(void *a1, const char *a2, ...)
{
  return [a1 answersSize];
}

id objc_msgSend_answersUpdated(void *a1, const char *a2, ...)
{
  return [a1 answersUpdated];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return [a1 anyObject];
}

id objc_msgSend_appInfoMgr(void *a1, const char *a2, ...)
{
  return [a1 appInfoMgr];
}

id objc_msgSend_appearance(void *a1, const char *a2, ...)
{
  return [a1 appearance];
}

id objc_msgSend_appearanceButtonItem(void *a1, const char *a2, ...)
{
  return [a1 appearanceButtonItem];
}

id objc_msgSend_appearanceRowHeight(void *a1, const char *a2, ...)
{
  return [a1 appearanceRowHeight];
}

id objc_msgSend_appearanceStyle(void *a1, const char *a2, ...)
{
  return [a1 appearanceStyle];
}

id objc_msgSend_applePubDocId(void *a1, const char *a2, ...)
{
  return [a1 applePubDocId];
}

id objc_msgSend_applePubEntry(void *a1, const char *a2, ...)
{
  return [a1 applePubEntry];
}

id objc_msgSend_applePubReaderState(void *a1, const char *a2, ...)
{
  return [a1 applePubReaderState];
}

id objc_msgSend_applePubRelativePath(void *a1, const char *a2, ...)
{
  return [a1 applePubRelativePath];
}

id objc_msgSend_applePubURL(void *a1, const char *a2, ...)
{
  return [a1 applePubURL];
}

id objc_msgSend_applePubVersion(void *a1, const char *a2, ...)
{
  return [a1 applePubVersion];
}

id objc_msgSend_applePubZipURL(void *a1, const char *a2, ...)
{
  return [a1 applePubZipURL];
}

id objc_msgSend_applicationCacheDirectory(void *a1, const char *a2, ...)
{
  return [a1 applicationCacheDirectory];
}

id objc_msgSend_applicationName(void *a1, const char *a2, ...)
{
  return [a1 applicationName];
}

id objc_msgSend_applyLabelFonts(void *a1, const char *a2, ...)
{
  return [a1 applyLabelFonts];
}

id objc_msgSend_applyScrollingPolicy(void *a1, const char *a2, ...)
{
  return [a1 applyScrollingPolicy];
}

id objc_msgSend_applyTheme(void *a1, const char *a2, ...)
{
  return [a1 applyTheme];
}

id objc_msgSend_archive(void *a1, const char *a2, ...)
{
  return [a1 archive];
}

id objc_msgSend_areAllNotesSelected(void *a1, const char *a2, ...)
{
  return [a1 areAllNotesSelected];
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return [a1 areAnimationsEnabled];
}

id objc_msgSend_areControlsHidden(void *a1, const char *a2, ...)
{
  return [a1 areControlsHidden];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return [a1 array];
}

id objc_msgSend_arrowDirection(void *a1, const char *a2, ...)
{
  return [a1 arrowDirection];
}

id objc_msgSend_asiOSCVC(void *a1, const char *a2, ...)
{
  return [a1 asiOSCVC];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return [a1 asset];
}

id objc_msgSend_assetID(void *a1, const char *a2, ...)
{
  return [a1 assetID];
}

id objc_msgSend_assetIsInsideBookRootPath(void *a1, const char *a2, ...)
{
  return [a1 assetIsInsideBookRootPath];
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return [a1 assetType];
}

id objc_msgSend_assetViewControllerDelegate(void *a1, const char *a2, ...)
{
  return [a1 assetViewControllerDelegate];
}

id objc_msgSend_assetViewControllerUpdateToolbars(void *a1, const char *a2, ...)
{
  return [a1 assetViewControllerUpdateToolbars];
}

id objc_msgSend_assetViewControllerWillUnload(void *a1, const char *a2, ...)
{
  return [a1 assetViewControllerWillUnload];
}

id objc_msgSend_assignContentNodes(void *a1, const char *a2, ...)
{
  return [a1 assignContentNodes];
}

id objc_msgSend_assignedGutterLayouts(void *a1, const char *a2, ...)
{
  return [a1 assignedGutterLayouts];
}

id objc_msgSend_assignedPageNumbers(void *a1, const char *a2, ...)
{
  return [a1 assignedPageNumbers];
}

id objc_msgSend_associatedInfo(void *a1, const char *a2, ...)
{
  return [a1 associatedInfo];
}

id objc_msgSend_attachmentCount(void *a1, const char *a2, ...)
{
  return [a1 attachmentCount];
}

id objc_msgSend_attachmentId(void *a1, const char *a2, ...)
{
  return [a1 attachmentId];
}

id objc_msgSend_attemptRotationToDeviceOrientation(void *a1, const char *a2, ...)
{
  return [a1 attemptRotationToDeviceOrientation];
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return [a1 attributes];
}

id objc_msgSend_audioRep(void *a1, const char *a2, ...)
{
  return [a1 audioRep];
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return [a1 author];
}

id objc_msgSend_authoredVersion(void *a1, const char *a2, ...)
{
  return [a1 authoredVersion];
}

id objc_msgSend_autoNightModeSwitch(void *a1, const char *a2, ...)
{
  return [a1 autoNightModeSwitch];
}

id objc_msgSend_autoRotationMode(void *a1, const char *a2, ...)
{
  return [a1 autoRotationMode];
}

id objc_msgSend_autohide(void *a1, const char *a2, ...)
{
  return [a1 autohide];
}

id objc_msgSend_autohideTimeout(void *a1, const char *a2, ...)
{
  return [a1 autohideTimeout];
}

id objc_msgSend_autohideTimer(void *a1, const char *a2, ...)
{
  return [a1 autohideTimer];
}

id objc_msgSend_automaticallyCancelPendingBlockUponSchedulingNewBlock(void *a1, const char *a2, ...)
{
  return [a1 automaticallyCancelPendingBlockUponSchedulingNewBlock];
}

id objc_msgSend_autoplayAllowed(void *a1, const char *a2, ...)
{
  return [a1 autoplayAllowed];
}

id objc_msgSend_autoplayConfig(void *a1, const char *a2, ...)
{
  return [a1 autoplayConfig];
}

id objc_msgSend_autoplayController(void *a1, const char *a2, ...)
{
  return [a1 autoplayController];
}

id objc_msgSend_autoplayRequested(void *a1, const char *a2, ...)
{
  return [a1 autoplayRequested];
}

id objc_msgSend_autoplayStart(void *a1, const char *a2, ...)
{
  return [a1 autoplayStart];
}

id objc_msgSend_autoplayStop(void *a1, const char *a2, ...)
{
  return [a1 autoplayStop];
}

id objc_msgSend_autoplayingTransportControllers(void *a1, const char *a2, ...)
{
  return [a1 autoplayingTransportControllers];
}

id objc_msgSend_autosizeFlags(void *a1, const char *a2, ...)
{
  return [a1 autosizeFlags];
}

id objc_msgSend_autosizeMargin(void *a1, const char *a2, ...)
{
  return [a1 autosizeMargin];
}

id objc_msgSend_autosizedCanvasController(void *a1, const char *a2, ...)
{
  return [a1 autosizedCanvasController];
}

id objc_msgSend_autosizes(void *a1, const char *a2, ...)
{
  return [a1 autosizes];
}

id objc_msgSend_backLayer(void *a1, const char *a2, ...)
{
  return [a1 backLayer];
}

id objc_msgSend_backOrdinalText(void *a1, const char *a2, ...)
{
  return [a1 backOrdinalText];
}

id objc_msgSend_backTitleText(void *a1, const char *a2, ...)
{
  return [a1 backTitleText];
}

id objc_msgSend_backdrop(void *a1, const char *a2, ...)
{
  return [a1 backdrop];
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return [a1 background];
}

id objc_msgSend_backgroundButton(void *a1, const char *a2, ...)
{
  return [a1 backgroundButton];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return [a1 backgroundColor];
}

id objc_msgSend_backgroundFill(void *a1, const char *a2, ...)
{
  return [a1 backgroundFill];
}

id objc_msgSend_backgroundHighlightLayer(void *a1, const char *a2, ...)
{
  return [a1 backgroundHighlightLayer];
}

id objc_msgSend_backgroundImageInfo(void *a1, const char *a2, ...)
{
  return [a1 backgroundImageInfo];
}

id objc_msgSend_backgroundLayer(void *a1, const char *a2, ...)
{
  return [a1 backgroundLayer];
}

id objc_msgSend_backgroundRect(void *a1, const char *a2, ...)
{
  return [a1 backgroundRect];
}

id objc_msgSend_backgroundRectTitleOnly(void *a1, const char *a2, ...)
{
  return [a1 backgroundRectTitleOnly];
}

id objc_msgSend_backgroundScrollView(void *a1, const char *a2, ...)
{
  return [a1 backgroundScrollView];
}

id objc_msgSend_backgroundShape(void *a1, const char *a2, ...)
{
  return [a1 backgroundShape];
}

id objc_msgSend_backgroundSize(void *a1, const char *a2, ...)
{
  return [a1 backgroundSize];
}

id objc_msgSend_backgroundSourceFrame(void *a1, const char *a2, ...)
{
  return [a1 backgroundSourceFrame];
}

id objc_msgSend_backgroundTargetFrame(void *a1, const char *a2, ...)
{
  return [a1 backgroundTargetFrame];
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return [a1 backgroundView];
}

id objc_msgSend_bakedScale(void *a1, const char *a2, ...)
{
  return [a1 bakedScale];
}

id objc_msgSend_bakedShadowLayer(void *a1, const char *a2, ...)
{
  return [a1 bakedShadowLayer];
}

id objc_msgSend_baseLayer(void *a1, const char *a2, ...)
{
  return [a1 baseLayer];
}

id objc_msgSend_baseLayerDict(void *a1, const char *a2, ...)
{
  return [a1 baseLayerDict];
}

id objc_msgSend_basePredicate(void *a1, const char *a2, ...)
{
  return [a1 basePredicate];
}

id objc_msgSend_baseViewScale(void *a1, const char *a2, ...)
{
  return [a1 baseViewScale];
}

id objc_msgSend_baseline(void *a1, const char *a2, ...)
{
  return [a1 baseline];
}

id objc_msgSend_basicMediaTypes(void *a1, const char *a2, ...)
{
  return [a1 basicMediaTypes];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return [a1 becomeFirstResponder];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return [a1 begin];
}

id objc_msgSend_beginDisablingInterfaceAutorotation(void *a1, const char *a2, ...)
{
  return [a1 beginDisablingInterfaceAutorotation];
}

id objc_msgSend_beginDraggingContentOffset(void *a1, const char *a2, ...)
{
  return [a1 beginDraggingContentOffset];
}

id objc_msgSend_beginDraggingMarker(void *a1, const char *a2, ...)
{
  return [a1 beginDraggingMarker];
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return [a1 beginEditing];
}

id objc_msgSend_beginIgnoringInteractionEvents(void *a1, const char *a2, ...)
{
  return [a1 beginIgnoringInteractionEvents];
}

id objc_msgSend_beginOperation(void *a1, const char *a2, ...)
{
  return [a1 beginOperation];
}

id objc_msgSend_beginStaticLayoutAndRender(void *a1, const char *a2, ...)
{
  return [a1 beginStaticLayoutAndRender];
}

id objc_msgSend_beginTime(void *a1, const char *a2, ...)
{
  return [a1 beginTime];
}

id objc_msgSend_beginTransition(void *a1, const char *a2, ...)
{
  return [a1 beginTransition];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return [a1 beginUpdates];
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return [a1 bezierPath];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return [a1 blackColor];
}

id objc_msgSend_blissClassicStyle(void *a1, const char *a2, ...)
{
  return [a1 blissClassicStyle];
}

id objc_msgSend_blockClass(void *a1, const char *a2, ...)
{
  return [a1 blockClass];
}

id objc_msgSend_blockWidth(void *a1, const char *a2, ...)
{
  return [a1 blockWidth];
}

id objc_msgSend_blue(void *a1, const char *a2, ...)
{
  return [a1 blue];
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return [a1 blueColor];
}

id objc_msgSend_blueComponent(void *a1, const char *a2, ...)
{
  return [a1 blueComponent];
}

id objc_msgSend_blurAmount(void *a1, const char *a2, ...)
{
  return [a1 blurAmount];
}

id objc_msgSend_blurFraction(void *a1, const char *a2, ...)
{
  return [a1 blurFraction];
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return [a1 body];
}

id objc_msgSend_bodyBoxInfos(void *a1, const char *a2, ...)
{
  return [a1 bodyBoxInfos];
}

id objc_msgSend_bodyCharIndex(void *a1, const char *a2, ...)
{
  return [a1 bodyCharIndex];
}

id objc_msgSend_bodyCount(void *a1, const char *a2, ...)
{
  return [a1 bodyCount];
}

id objc_msgSend_bodyFloatingInfos(void *a1, const char *a2, ...)
{
  return [a1 bodyFloatingInfos];
}

id objc_msgSend_bodyIndex(void *a1, const char *a2, ...)
{
  return [a1 bodyIndex];
}

id objc_msgSend_bodyIndexInPageLayout(void *a1, const char *a2, ...)
{
  return [a1 bodyIndexInPageLayout];
}

id objc_msgSend_bodyInfo(void *a1, const char *a2, ...)
{
  return [a1 bodyInfo];
}

id objc_msgSend_bodyLayout(void *a1, const char *a2, ...)
{
  return [a1 bodyLayout];
}

id objc_msgSend_bodyLayouts(void *a1, const char *a2, ...)
{
  return [a1 bodyLayouts];
}

id objc_msgSend_bodyMapper(void *a1, const char *a2, ...)
{
  return [a1 bodyMapper];
}

id objc_msgSend_bodyOffset(void *a1, const char *a2, ...)
{
  return [a1 bodyOffset];
}

id objc_msgSend_bodyPosition(void *a1, const char *a2, ...)
{
  return [a1 bodyPosition];
}

id objc_msgSend_bodyStorage(void *a1, const char *a2, ...)
{
  return [a1 bodyStorage];
}

id objc_msgSend_bodyStorageRange(void *a1, const char *a2, ...)
{
  return [a1 bodyStorageRange];
}

id objc_msgSend_bodyStorageUID(void *a1, const char *a2, ...)
{
  return [a1 bodyStorageUID];
}

id objc_msgSend_bookAnnotationController(void *a1, const char *a2, ...)
{
  return [a1 bookAnnotationController];
}

id objc_msgSend_bookAuthor(void *a1, const char *a2, ...)
{
  return [a1 bookAuthor];
}

id objc_msgSend_bookBundleURL(void *a1, const char *a2, ...)
{
  return [a1 bookBundleURL];
}

id objc_msgSend_bookBundleUrl(void *a1, const char *a2, ...)
{
  return [a1 bookBundleUrl];
}

id objc_msgSend_bookContentDidLoad(void *a1, const char *a2, ...)
{
  return [a1 bookContentDidLoad];
}

id objc_msgSend_bookCoverDescription(void *a1, const char *a2, ...)
{
  return [a1 bookCoverDescription];
}

id objc_msgSend_bookDelegate(void *a1, const char *a2, ...)
{
  return [a1 bookDelegate];
}

id objc_msgSend_bookDescription(void *a1, const char *a2, ...)
{
  return [a1 bookDescription];
}

id objc_msgSend_bookDescriptionCache(void *a1, const char *a2, ...)
{
  return [a1 bookDescriptionCache];
}

id objc_msgSend_bookID(void *a1, const char *a2, ...)
{
  return [a1 bookID];
}

id objc_msgSend_bookIsPaginatedForLandscape(void *a1, const char *a2, ...)
{
  return [a1 bookIsPaginatedForLandscape];
}

id objc_msgSend_bookIsPaginatedForPortrait(void *a1, const char *a2, ...)
{
  return [a1 bookIsPaginatedForPortrait];
}

id objc_msgSend_bookLinkResolver(void *a1, const char *a2, ...)
{
  return [a1 bookLinkResolver];
}

id objc_msgSend_bookLoadedSuccessfully(void *a1, const char *a2, ...)
{
  return [a1 bookLoadedSuccessfully];
}

id objc_msgSend_bookMetadata(void *a1, const char *a2, ...)
{
  return [a1 bookMetadata];
}

id objc_msgSend_bookModificationDate(void *a1, const char *a2, ...)
{
  return [a1 bookModificationDate];
}

id objc_msgSend_bookNavigationDelegate(void *a1, const char *a2, ...)
{
  return [a1 bookNavigationDelegate];
}

id objc_msgSend_bookNavigator(void *a1, const char *a2, ...)
{
  return [a1 bookNavigator];
}

id objc_msgSend_bookOpenDestinationIsTOC(void *a1, const char *a2, ...)
{
  return [a1 bookOpenDestinationIsTOC];
}

id objc_msgSend_bookOpenFailed(void *a1, const char *a2, ...)
{
  return [a1 bookOpenFailed];
}

id objc_msgSend_bookOpenTransitionDidEnd(void *a1, const char *a2, ...)
{
  return [a1 bookOpenTransitionDidEnd];
}

id objc_msgSend_bookOpened(void *a1, const char *a2, ...)
{
  return [a1 bookOpened];
}

id objc_msgSend_bookPropertiesDelegate(void *a1, const char *a2, ...)
{
  return [a1 bookPropertiesDelegate];
}

id objc_msgSend_bookRootURL(void *a1, const char *a2, ...)
{
  return [a1 bookRootURL];
}

id objc_msgSend_bookSubtitle(void *a1, const char *a2, ...)
{
  return [a1 bookSubtitle];
}

id objc_msgSend_bookTitle(void *a1, const char *a2, ...)
{
  return [a1 bookTitle];
}

id objc_msgSend_bookUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 bookUserDefaults];
}

id objc_msgSend_bookVersion(void *a1, const char *a2, ...)
{
  return [a1 bookVersion];
}

id objc_msgSend_bookVersionString(void *a1, const char *a2, ...)
{
  return [a1 bookVersionString];
}

id objc_msgSend_bookViewController(void *a1, const char *a2, ...)
{
  return [a1 bookViewController];
}

id objc_msgSend_bookmarkAbsolutePhysicalPageIndexSet(void *a1, const char *a2, ...)
{
  return [a1 bookmarkAbsolutePhysicalPageIndexSet];
}

id objc_msgSend_bookmarkAnnotations(void *a1, const char *a2, ...)
{
  return [a1 bookmarkAnnotations];
}

id objc_msgSend_bookmarkButton(void *a1, const char *a2, ...)
{
  return [a1 bookmarkButton];
}

id objc_msgSend_bookmarkButtonItem(void *a1, const char *a2, ...)
{
  return [a1 bookmarkButtonItem];
}

id objc_msgSend_bookmarkFetchedResultsController(void *a1, const char *a2, ...)
{
  return [a1 bookmarkFetchedResultsController];
}

id objc_msgSend_bookmarkHotspotDimension(void *a1, const char *a2, ...)
{
  return [a1 bookmarkHotspotDimension];
}

id objc_msgSend_bookmarkLabelColor(void *a1, const char *a2, ...)
{
  return [a1 bookmarkLabelColor];
}

id objc_msgSend_bookmarkPageNumberColor(void *a1, const char *a2, ...)
{
  return [a1 bookmarkPageNumberColor];
}

id objc_msgSend_bookmarkTitleLabel(void *a1, const char *a2, ...)
{
  return [a1 bookmarkTitleLabel];
}

id objc_msgSend_bookmarkViewController(void *a1, const char *a2, ...)
{
  return [a1 bookmarkViewController];
}

id objc_msgSend_bookmarksShouldBeVisible(void *a1, const char *a2, ...)
{
  return [a1 bookmarksShouldBeVisible];
}

id objc_msgSend_bookspotHistoryStack(void *a1, const char *a2, ...)
{
  return [a1 bookspotHistoryStack];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_borderColor(void *a1, const char *a2, ...)
{
  return [a1 borderColor];
}

id objc_msgSend_borderView(void *a1, const char *a2, ...)
{
  return [a1 borderView];
}

id objc_msgSend_borderWidth(void *a1, const char *a2, ...)
{
  return [a1 borderWidth];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return [a1 bottomAnchor];
}

id objc_msgSend_bottomBorder(void *a1, const char *a2, ...)
{
  return [a1 bottomBorder];
}

id objc_msgSend_bottomBorderWidthConstraint(void *a1, const char *a2, ...)
{
  return [a1 bottomBorderWidthConstraint];
}

id objc_msgSend_bottomCardAngle(void *a1, const char *a2, ...)
{
  return [a1 bottomCardAngle];
}

id objc_msgSend_bottomCardOffset(void *a1, const char *a2, ...)
{
  return [a1 bottomCardOffset];
}

id objc_msgSend_bottomConstraint(void *a1, const char *a2, ...)
{
  return [a1 bottomConstraint];
}

id objc_msgSend_bottomFullWidthToolbarFrame(void *a1, const char *a2, ...)
{
  return [a1 bottomFullWidthToolbarFrame];
}

id objc_msgSend_bottomOverscrollView(void *a1, const char *a2, ...)
{
  return [a1 bottomOverscrollView];
}

id objc_msgSend_bottomPanel(void *a1, const char *a2, ...)
{
  return [a1 bottomPanel];
}

id objc_msgSend_bottomPanelInfos(void *a1, const char *a2, ...)
{
  return [a1 bottomPanelInfos];
}

id objc_msgSend_bottomRightCellID(void *a1, const char *a2, ...)
{
  return [a1 bottomRightCellID];
}

id objc_msgSend_bottomRightToolbarFrame(void *a1, const char *a2, ...)
{
  return [a1 bottomRightToolbarFrame];
}

id objc_msgSend_bottomWrapperView(void *a1, const char *a2, ...)
{
  return [a1 bottomWrapperView];
}

id objc_msgSend_boundingBoxForChildren(void *a1, const char *a2, ...)
{
  return [a1 boundingBoxForChildren];
}

id objc_msgSend_boundingCellRange(void *a1, const char *a2, ...)
{
  return [a1 boundingCellRange];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return [a1 bounds];
}

id objc_msgSend_boundsBeforeRotation(void *a1, const char *a2, ...)
{
  return [a1 boundsBeforeRotation];
}

id objc_msgSend_boundsIncludingStroke(void *a1, const char *a2, ...)
{
  return [a1 boundsIncludingStroke];
}

id objc_msgSend_boundsInfluencingExteriorWrap(void *a1, const char *a2, ...)
{
  return [a1 boundsInfluencingExteriorWrap];
}

id objc_msgSend_bridgeController(void *a1, const char *a2, ...)
{
  return [a1 bridgeController];
}

id objc_msgSend_brightness(void *a1, const char *a2, ...)
{
  return [a1 brightness];
}

id objc_msgSend_brightnessButtonItem(void *a1, const char *a2, ...)
{
  return [a1 brightnessButtonItem];
}

id objc_msgSend_brightnessSlider(void *a1, const char *a2, ...)
{
  return [a1 brightnessSlider];
}

id objc_msgSend_browserPageNode(void *a1, const char *a2, ...)
{
  return [a1 browserPageNode];
}

id objc_msgSend_bufferIndex(void *a1, const char *a2, ...)
{
  return [a1 bufferIndex];
}

id objc_msgSend_buildHoverRegions(void *a1, const char *a2, ...)
{
  return [a1 buildHoverRegions];
}

id objc_msgSend_buildType(void *a1, const char *a2, ...)
{
  return [a1 buildType];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return [a1 bundleIdentifier];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return [a1 bundlePath];
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return [a1 bundleURL];
}

id objc_msgSend_buttonControlRep(void *a1, const char *a2, ...)
{
  return [a1 buttonControlRep];
}

id objc_msgSend_buttonCornerRadius(void *a1, const char *a2, ...)
{
  return [a1 buttonCornerRadius];
}

id objc_msgSend_buttonFontName(void *a1, const char *a2, ...)
{
  return [a1 buttonFontName];
}

id objc_msgSend_buttonFontSize(void *a1, const char *a2, ...)
{
  return [a1 buttonFontSize];
}

id objc_msgSend_buttonSize(void *a1, const char *a2, ...)
{
  return [a1 buttonSize];
}

id objc_msgSend_buttonStrokeWidth(void *a1, const char *a2, ...)
{
  return [a1 buttonStrokeWidth];
}

id objc_msgSend_buttonTitleColorDisabled(void *a1, const char *a2, ...)
{
  return [a1 buttonTitleColorDisabled];
}

id objc_msgSend_buyButtonItem(void *a1, const char *a2, ...)
{
  return [a1 buyButtonItem];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_cString(void *a1, const char *a2, ...)
{
  return [a1 cString];
}

id objc_msgSend_cachedAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return [a1 cachedAbsolutePageIndex];
}

id objc_msgSend_cachedAnchorForRect(void *a1, const char *a2, ...)
{
  return [a1 cachedAnchorForRect];
}

id objc_msgSend_cachedFirstElementForUpcomingPageTurn(void *a1, const char *a2, ...)
{
  return [a1 cachedFirstElementForUpcomingPageTurn];
}

id objc_msgSend_cachedFirstElementForUpcomingScreenChange(void *a1, const char *a2, ...)
{
  return [a1 cachedFirstElementForUpcomingScreenChange];
}

id objc_msgSend_cachedFlowAnchorForRect(void *a1, const char *a2, ...)
{
  return [a1 cachedFlowAnchorForRect];
}

id objc_msgSend_cachedFrameSize(void *a1, const char *a2, ...)
{
  return [a1 cachedFrameSize];
}

id objc_msgSend_cachedLargerTextConstraints(void *a1, const char *a2, ...)
{
  return [a1 cachedLargerTextConstraints];
}

id objc_msgSend_cachedPageLayoutValidated(void *a1, const char *a2, ...)
{
  return [a1 cachedPageLayoutValidated];
}

id objc_msgSend_cachedPillModeNextImage(void *a1, const char *a2, ...)
{
  return [a1 cachedPillModeNextImage];
}

id objc_msgSend_cachedPillModePrevImage(void *a1, const char *a2, ...)
{
  return [a1 cachedPillModePrevImage];
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return [a1 callStackSymbols];
}

id objc_msgSend_calloutCount(void *a1, const char *a2, ...)
{
  return [a1 calloutCount];
}

id objc_msgSend_calloutEnumerator(void *a1, const char *a2, ...)
{
  return [a1 calloutEnumerator];
}

id objc_msgSend_calloutIndex(void *a1, const char *a2, ...)
{
  return [a1 calloutIndex];
}

id objc_msgSend_calloutInfo(void *a1, const char *a2, ...)
{
  return [a1 calloutInfo];
}

id objc_msgSend_calloutInfoForDisplay(void *a1, const char *a2, ...)
{
  return [a1 calloutInfoForDisplay];
}

id objc_msgSend_calloutLayer(void *a1, const char *a2, ...)
{
  return [a1 calloutLayer];
}

id objc_msgSend_calloutLayouts(void *a1, const char *a2, ...)
{
  return [a1 calloutLayouts];
}

id objc_msgSend_calloutReps(void *a1, const char *a2, ...)
{
  return [a1 calloutReps];
}

id objc_msgSend_camera(void *a1, const char *a2, ...)
{
  return [a1 camera];
}

id objc_msgSend_cameraControlEventHandler(void *a1, const char *a2, ...)
{
  return [a1 cameraControlEventHandler];
}

id objc_msgSend_canAddColumnBreak(void *a1, const char *a2, ...)
{
  return [a1 canAddColumnBreak];
}

id objc_msgSend_canAddHighlight(void *a1, const char *a2, ...)
{
  return [a1 canAddHighlight];
}

id objc_msgSend_canAddNote(void *a1, const char *a2, ...)
{
  return [a1 canAddNote];
}

id objc_msgSend_canApplyToShapeRenderable(void *a1, const char *a2, ...)
{
  return [a1 canApplyToShapeRenderable];
}

id objc_msgSend_canChangeBrightness(void *a1, const char *a2, ...)
{
  return [a1 canChangeBrightness];
}

id objc_msgSend_canCopy(void *a1, const char *a2, ...)
{
  return [a1 canCopy];
}

id objc_msgSend_canDecreaseFontSize(void *a1, const char *a2, ...)
{
  return [a1 canDecreaseFontSize];
}

id objc_msgSend_canFlipTopCard(void *a1, const char *a2, ...)
{
  return [a1 canFlipTopCard];
}

id objc_msgSend_canIncreaseFontSize(void *a1, const char *a2, ...)
{
  return [a1 canIncreaseFontSize];
}

id objc_msgSend_canModifyAnnotations(void *a1, const char *a2, ...)
{
  return [a1 canModifyAnnotations];
}

id objc_msgSend_canReadAnnotations(void *a1, const char *a2, ...)
{
  return [a1 canReadAnnotations];
}

id objc_msgSend_canReadHighlights(void *a1, const char *a2, ...)
{
  return [a1 canReadHighlights];
}

id objc_msgSend_canRevealTOC(void *a1, const char *a2, ...)
{
  return [a1 canRevealTOC];
}

id objc_msgSend_canScroll(void *a1, const char *a2, ...)
{
  return [a1 canScroll];
}

id objc_msgSend_canSeek(void *a1, const char *a2, ...)
{
  return [a1 canSeek];
}

id objc_msgSend_canSendMail(void *a1, const char *a2, ...)
{
  return [a1 canSendMail];
}

id objc_msgSend_canTrustCalculatedPageNumbers(void *a1, const char *a2, ...)
{
  return [a1 canTrustCalculatedPageNumbers];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return [a1 cancel];
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return [a1 cancelAllOperations];
}

id objc_msgSend_cancelApplePubRead(void *a1, const char *a2, ...)
{
  return [a1 cancelApplePubRead];
}

id objc_msgSend_cancelLoadIndex(void *a1, const char *a2, ...)
{
  return [a1 cancelLoadIndex];
}

id objc_msgSend_cancelLoading(void *a1, const char *a2, ...)
{
  return [a1 cancelLoading];
}

id objc_msgSend_cancelSearch(void *a1, const char *a2, ...)
{
  return [a1 cancelSearch];
}

id objc_msgSend_cancelTimer(void *a1, const char *a2, ...)
{
  return [a1 cancelTimer];
}

id objc_msgSend_cancelTransform(void *a1, const char *a2, ...)
{
  return [a1 cancelTransform];
}

id objc_msgSend_cancelled(void *a1, const char *a2, ...)
{
  return [a1 cancelled];
}

id objc_msgSend_canvas(void *a1, const char *a2, ...)
{
  return [a1 canvas];
}

id objc_msgSend_canvasBoundsFrame(void *a1, const char *a2, ...)
{
  return [a1 canvasBoundsFrame];
}

id objc_msgSend_canvasController(void *a1, const char *a2, ...)
{
  return [a1 canvasController];
}

id objc_msgSend_canvasDidLayout(void *a1, const char *a2, ...)
{
  return [a1 canvasDidLayout];
}

id objc_msgSend_canvasDidStopScrolling(void *a1, const char *a2, ...)
{
  return [a1 canvasDidStopScrolling];
}

id objc_msgSend_canvasDidZoomCompletion(void *a1, const char *a2, ...)
{
  return [a1 canvasDidZoomCompletion];
}

id objc_msgSend_canvasExitFreeTransformController(void *a1, const char *a2, ...)
{
  return [a1 canvasExitFreeTransformController];
}

id objc_msgSend_canvasGeometry(void *a1, const char *a2, ...)
{
  return [a1 canvasGeometry];
}

id objc_msgSend_canvasLayer(void *a1, const char *a2, ...)
{
  return [a1 canvasLayer];
}

id objc_msgSend_canvasLayoutSize(void *a1, const char *a2, ...)
{
  return [a1 canvasLayoutSize];
}

id objc_msgSend_canvasPosterLayer(void *a1, const char *a2, ...)
{
  return [a1 canvasPosterLayer];
}

id objc_msgSend_canvasScrollView(void *a1, const char *a2, ...)
{
  return [a1 canvasScrollView];
}

id objc_msgSend_canvasSize(void *a1, const char *a2, ...)
{
  return [a1 canvasSize];
}

id objc_msgSend_canvasView(void *a1, const char *a2, ...)
{
  return [a1 canvasView];
}

id objc_msgSend_canvasViewController(void *a1, const char *a2, ...)
{
  return [a1 canvasViewController];
}

id objc_msgSend_capHeight(void *a1, const char *a2, ...)
{
  return [a1 capHeight];
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return [a1 capabilities];
}

id objc_msgSend_caption(void *a1, const char *a2, ...)
{
  return [a1 caption];
}

id objc_msgSend_captionShape(void *a1, const char *a2, ...)
{
  return [a1 captionShape];
}

id objc_msgSend_captionStorage(void *a1, const char *a2, ...)
{
  return [a1 captionStorage];
}

id objc_msgSend_captionStorageUpdated(void *a1, const char *a2, ...)
{
  return [a1 captionStorageUpdated];
}

id objc_msgSend_cardIndex(void *a1, const char *a2, ...)
{
  return [a1 cardIndex];
}

id objc_msgSend_cardinality(void *a1, const char *a2, ...)
{
  return [a1 cardinality];
}

id objc_msgSend_catalystNotesGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 catalystNotesGestureRecognizer];
}

id objc_msgSend_cellConfiguration(void *a1, const char *a2, ...)
{
  return [a1 cellConfiguration];
}

id objc_msgSend_cellCount(void *a1, const char *a2, ...)
{
  return [a1 cellCount];
}

id objc_msgSend_cellHeight(void *a1, const char *a2, ...)
{
  return [a1 cellHeight];
}

id objc_msgSend_cellHeightValid(void *a1, const char *a2, ...)
{
  return [a1 cellHeightValid];
}

id objc_msgSend_cellID(void *a1, const char *a2, ...)
{
  return [a1 cellID];
}

id objc_msgSend_cellMargin(void *a1, const char *a2, ...)
{
  return [a1 cellMargin];
}

id objc_msgSend_cellView(void *a1, const char *a2, ...)
{
  return [a1 cellView];
}

id objc_msgSend_cells(void *a1, const char *a2, ...)
{
  return [a1 cells];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return [a1 center];
}

id objc_msgSend_centerAttribute(void *a1, const char *a2, ...)
{
  return [a1 centerAttribute];
}

id objc_msgSend_centerItemTextColor(void *a1, const char *a2, ...)
{
  return [a1 centerItemTextColor];
}

id objc_msgSend_centerPlusMovementContentPlacement(void *a1, const char *a2, ...)
{
  return [a1 centerPlusMovementContentPlacement];
}

id objc_msgSend_centerPoint(void *a1, const char *a2, ...)
{
  return [a1 centerPoint];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return [a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return [a1 centerYAnchor];
}

id objc_msgSend_cfAttributedString(void *a1, const char *a2, ...)
{
  return [a1 cfAttributedString];
}

id objc_msgSend_cfi(void *a1, const char *a2, ...)
{
  return [a1 cfi];
}

id objc_msgSend_cfiCount(void *a1, const char *a2, ...)
{
  return [a1 cfiCount];
}

id objc_msgSend_cfiPath(void *a1, const char *a2, ...)
{
  return [a1 cfiPath];
}

id objc_msgSend_cfiSet(void *a1, const char *a2, ...)
{
  return [a1 cfiSet];
}

id objc_msgSend_cfiString(void *a1, const char *a2, ...)
{
  return [a1 cfiString];
}

id objc_msgSend_cgDataProvider(void *a1, const char *a2, ...)
{
  return [a1 cgDataProvider];
}

id objc_msgSend_changeNotifier(void *a1, const char *a2, ...)
{
  return [a1 changeNotifier];
}

id objc_msgSend_changedContentNodeIDs(void *a1, const char *a2, ...)
{
  return [a1 changedContentNodeIDs];
}

id objc_msgSend_chapterBrowserController(void *a1, const char *a2, ...)
{
  return [a1 chapterBrowserController];
}

id objc_msgSend_chapterBrowserPagePresentationType(void *a1, const char *a2, ...)
{
  return [a1 chapterBrowserPagePresentationType];
}

id objc_msgSend_chapterDataQueue(void *a1, const char *a2, ...)
{
  return [a1 chapterDataQueue];
}

id objc_msgSend_chapterGuidString(void *a1, const char *a2, ...)
{
  return [a1 chapterGuidString];
}

id objc_msgSend_chapterIndex(void *a1, const char *a2, ...)
{
  return [a1 chapterIndex];
}

id objc_msgSend_chapterLabel(void *a1, const char *a2, ...)
{
  return [a1 chapterLabel];
}

id objc_msgSend_chapterLabelFontSize(void *a1, const char *a2, ...)
{
  return [a1 chapterLabelFontSize];
}

id objc_msgSend_chapterName(void *a1, const char *a2, ...)
{
  return [a1 chapterName];
}

id objc_msgSend_chapterString(void *a1, const char *a2, ...)
{
  return [a1 chapterString];
}

id objc_msgSend_chapterThumb(void *a1, const char *a2, ...)
{
  return [a1 chapterThumb];
}

id objc_msgSend_chapterTitle(void *a1, const char *a2, ...)
{
  return [a1 chapterTitle];
}

id objc_msgSend_chapterTitleColor(void *a1, const char *a2, ...)
{
  return [a1 chapterTitleColor];
}

id objc_msgSend_chapterTitleHeightForAllChapters(void *a1, const char *a2, ...)
{
  return [a1 chapterTitleHeightForAllChapters];
}

id objc_msgSend_chapterUIState(void *a1, const char *a2, ...)
{
  return [a1 chapterUIState];
}

id objc_msgSend_chapterViewController(void *a1, const char *a2, ...)
{
  return [a1 chapterViewController];
}

id objc_msgSend_chapterViewTableController(void *a1, const char *a2, ...)
{
  return [a1 chapterViewTableController];
}

id objc_msgSend_chapterWidth(void *a1, const char *a2, ...)
{
  return [a1 chapterWidth];
}

id objc_msgSend_characterCount(void *a1, const char *a2, ...)
{
  return [a1 characterCount];
}

id objc_msgSend_characterStyle(void *a1, const char *a2, ...)
{
  return [a1 characterStyle];
}

id objc_msgSend_checkAnswerButtonFrame(void *a1, const char *a2, ...)
{
  return [a1 checkAnswerButtonFrame];
}

id objc_msgSend_checkEncryption(void *a1, const char *a2, ...)
{
  return [a1 checkEncryption];
}

id objc_msgSend_checkImage(void *a1, const char *a2, ...)
{
  return [a1 checkImage];
}

id objc_msgSend_checkingLayout(void *a1, const char *a2, ...)
{
  return [a1 checkingLayout];
}

id objc_msgSend_checkingWPLayout(void *a1, const char *a2, ...)
{
  return [a1 checkingWPLayout];
}

id objc_msgSend_childEnumerator(void *a1, const char *a2, ...)
{
  return [a1 childEnumerator];
}

id objc_msgSend_childInfos(void *a1, const char *a2, ...)
{
  return [a1 childInfos];
}

id objc_msgSend_childInfosForLayout(void *a1, const char *a2, ...)
{
  return [a1 childInfosForLayout];
}

id objc_msgSend_childNodes(void *a1, const char *a2, ...)
{
  return [a1 childNodes];
}

id objc_msgSend_childNodesWithCamera(void *a1, const char *a2, ...)
{
  return [a1 childNodesWithCamera];
}

id objc_msgSend_childReps(void *a1, const char *a2, ...)
{
  return [a1 childReps];
}

id objc_msgSend_childRepsForHitTesting(void *a1, const char *a2, ...)
{
  return [a1 childRepsForHitTesting];
}

id objc_msgSend_childResultCount(void *a1, const char *a2, ...)
{
  return [a1 childResultCount];
}

id objc_msgSend_childResults(void *a1, const char *a2, ...)
{
  return [a1 childResults];
}

id objc_msgSend_childViewControllerForStatusBarHidden(void *a1, const char *a2, ...)
{
  return [a1 childViewControllerForStatusBarHidden];
}

id objc_msgSend_childViewSuperview(void *a1, const char *a2, ...)
{
  return [a1 childViewSuperview];
}

id objc_msgSend_children(void *a1, const char *a2, ...)
{
  return [a1 children];
}

id objc_msgSend_childrenForLayout(void *a1, const char *a2, ...)
{
  return [a1 childrenForLayout];
}

id objc_msgSend_childrenForWrappingDependents(void *a1, const char *a2, ...)
{
  return [a1 childrenForWrappingDependents];
}

id objc_msgSend_choice(void *a1, const char *a2, ...)
{
  return [a1 choice];
}

id objc_msgSend_choiceCount(void *a1, const char *a2, ...)
{
  return [a1 choiceCount];
}

id objc_msgSend_choiceDescriptions(void *a1, const char *a2, ...)
{
  return [a1 choiceDescriptions];
}

id objc_msgSend_choiceState(void *a1, const char *a2, ...)
{
  return [a1 choiceState];
}

id objc_msgSend_choices(void *a1, const char *a2, ...)
{
  return [a1 choices];
}

id objc_msgSend_chrome(void *a1, const char *a2, ...)
{
  return [a1 chrome];
}

id objc_msgSend_chromeAnimationInterval(void *a1, const char *a2, ...)
{
  return [a1 chromeAnimationInterval];
}

id objc_msgSend_classAttribute(void *a1, const char *a2, ...)
{
  return [a1 classAttribute];
}

id objc_msgSend_cleanup(void *a1, const char *a2, ...)
{
  return [a1 cleanup];
}

id objc_msgSend_cleanupEntry(void *a1, const char *a2, ...)
{
  return [a1 cleanupEntry];
}

id objc_msgSend_clearAndReloadAnnotations(void *a1, const char *a2, ...)
{
  return [a1 clearAndReloadAnnotations];
}

id objc_msgSend_clearAutohideTimer(void *a1, const char *a2, ...)
{
  return [a1 clearAutohideTimer];
}

id objc_msgSend_clearBookDescriptionCache(void *a1, const char *a2, ...)
{
  return [a1 clearBookDescriptionCache];
}

id objc_msgSend_clearCTCaches(void *a1, const char *a2, ...)
{
  return [a1 clearCTCaches];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return [a1 clearColor];
}

id objc_msgSend_clearContents(void *a1, const char *a2, ...)
{
  return [a1 clearContents];
}

id objc_msgSend_clearFlowAnchorCache(void *a1, const char *a2, ...)
{
  return [a1 clearFlowAnchorCache];
}

id objc_msgSend_clearGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 clearGestureRecognizer];
}

id objc_msgSend_clearHighlightRect(void *a1, const char *a2, ...)
{
  return [a1 clearHighlightRect];
}

id objc_msgSend_clearIDsForTemporaryTableCellStorage(void *a1, const char *a2, ...)
{
  return [a1 clearIDsForTemporaryTableCellStorage];
}

id objc_msgSend_clearLayout(void *a1, const char *a2, ...)
{
  return [a1 clearLayout];
}

id objc_msgSend_clearNodesByEntry(void *a1, const char *a2, ...)
{
  return [a1 clearNodesByEntry];
}

id objc_msgSend_clearPreviousCallout(void *a1, const char *a2, ...)
{
  return [a1 clearPreviousCallout];
}

id objc_msgSend_clearSearch(void *a1, const char *a2, ...)
{
  return [a1 clearSearch];
}

id objc_msgSend_clearSearchResults(void *a1, const char *a2, ...)
{
  return [a1 clearSearchResults];
}

id objc_msgSend_clearTarget(void *a1, const char *a2, ...)
{
  return [a1 clearTarget];
}

id objc_msgSend_clearTypesetterCache(void *a1, const char *a2, ...)
{
  return [a1 clearTypesetterCache];
}

id objc_msgSend_clearUpperStackOnMinorPaging(void *a1, const char *a2, ...)
{
  return [a1 clearUpperStackOnMinorPaging];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return [a1 client];
}

id objc_msgSend_clientApplicationController(void *a1, const char *a2, ...)
{
  return [a1 clientApplicationController];
}

id objc_msgSend_clippingLayer(void *a1, const char *a2, ...)
{
  return [a1 clippingLayer];
}

id objc_msgSend_clippingLayerHost(void *a1, const char *a2, ...)
{
  return [a1 clippingLayerHost];
}

id objc_msgSend_clipsToBounds(void *a1, const char *a2, ...)
{
  return [a1 clipsToBounds];
}

id objc_msgSend_clone(void *a1, const char *a2, ...)
{
  return [a1 clone];
}

id objc_msgSend_closeButton(void *a1, const char *a2, ...)
{
  return [a1 closeButton];
}

id objc_msgSend_closeButtonAlternateImage(void *a1, const char *a2, ...)
{
  return [a1 closeButtonAlternateImage];
}

id objc_msgSend_closeButtonFrame(void *a1, const char *a2, ...)
{
  return [a1 closeButtonFrame];
}

id objc_msgSend_closeButtonImage(void *a1, const char *a2, ...)
{
  return [a1 closeButtonImage];
}

id objc_msgSend_closeButtonIsNeeded(void *a1, const char *a2, ...)
{
  return [a1 closeButtonIsNeeded];
}

id objc_msgSend_closeButtonItem(void *a1, const char *a2, ...)
{
  return [a1 closeButtonItem];
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return [a1 closePath];
}

id objc_msgSend_closeSectionImage(void *a1, const char *a2, ...)
{
  return [a1 closeSectionImage];
}

id objc_msgSend_closeTOCButtonItem(void *a1, const char *a2, ...)
{
  return [a1 closeTOCButtonItem];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return [a1 code];
}

id objc_msgSend_collect(void *a1, const char *a2, ...)
{
  return [a1 collect];
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return [a1 color];
}

id objc_msgSend_colorAttachments(void *a1, const char *a2, ...)
{
  return [a1 colorAttachments];
}

id objc_msgSend_colorAttribute(void *a1, const char *a2, ...)
{
  return [a1 colorAttribute];
}

id objc_msgSend_colorBarHorizontalInset(void *a1, const char *a2, ...)
{
  return [a1 colorBarHorizontalInset];
}

id objc_msgSend_colorCache(void *a1, const char *a2, ...)
{
  return [a1 colorCache];
}

id objc_msgSend_colorFromCaption(void *a1, const char *a2, ...)
{
  return [a1 colorFromCaption];
}

id objc_msgSend_colorPaletteMap(void *a1, const char *a2, ...)
{
  return [a1 colorPaletteMap];
}

id objc_msgSend_colorRandomness(void *a1, const char *a2, ...)
{
  return [a1 colorRandomness];
}

id objc_msgSend_colorTexCoordAttribute(void *a1, const char *a2, ...)
{
  return [a1 colorTexCoordAttribute];
}

id objc_msgSend_column(void *a1, const char *a2, ...)
{
  return [a1 column];
}

id objc_msgSend_columnCount(void *a1, const char *a2, ...)
{
  return [a1 columnCount];
}

id objc_msgSend_columnFrame(void *a1, const char *a2, ...)
{
  return [a1 columnFrame];
}

id objc_msgSend_columnIndex(void *a1, const char *a2, ...)
{
  return [a1 columnIndex];
}

id objc_msgSend_columnRange(void *a1, const char *a2, ...)
{
  return [a1 columnRange];
}

id objc_msgSend_columnStyle(void *a1, const char *a2, ...)
{
  return [a1 columnStyle];
}

id objc_msgSend_columns(void *a1, const char *a2, ...)
{
  return [a1 columns];
}

id objc_msgSend_commandBuffer(void *a1, const char *a2, ...)
{
  return [a1 commandBuffer];
}

id objc_msgSend_commandQueue(void *a1, const char *a2, ...)
{
  return [a1 commandQueue];
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return [a1 commit];
}

id objc_msgSend_commitAnimations(void *a1, const char *a2, ...)
{
  return [a1 commitAnimations];
}

id objc_msgSend_commitUserDataChanges(void *a1, const char *a2, ...)
{
  return [a1 commitUserDataChanges];
}

id objc_msgSend_compactFlowPresentationState(void *a1, const char *a2, ...)
{
  return [a1 compactFlowPresentationState];
}

id objc_msgSend_compactHeightPredicate(void *a1, const char *a2, ...)
{
  return [a1 compactHeightPredicate];
}

id objc_msgSend_compactPresentation(void *a1, const char *a2, ...)
{
  return [a1 compactPresentation];
}

id objc_msgSend_compactUIView(void *a1, const char *a2, ...)
{
  return [a1 compactUIView];
}

id objc_msgSend_compactWidthPredicate(void *a1, const char *a2, ...)
{
  return [a1 compactWidthPredicate];
}

id objc_msgSend_compensateForStrokeThickness(void *a1, const char *a2, ...)
{
  return [a1 compensateForStrokeThickness];
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return [a1 completionBlock];
}

id objc_msgSend_completionTargetRect(void *a1, const char *a2, ...)
{
  return [a1 completionTargetRect];
}

id objc_msgSend_componentCount(void *a1, const char *a2, ...)
{
  return [a1 componentCount];
}

id objc_msgSend_components(void *a1, const char *a2, ...)
{
  return [a1 components];
}

id objc_msgSend_computeCommandEncoder(void *a1, const char *a2, ...)
{
  return [a1 computeCommandEncoder];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return [a1 configuration];
}

id objc_msgSend_configureViewsForConfigurationChange(void *a1, const char *a2, ...)
{
  return [a1 configureViewsForConfigurationChange];
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return [a1 constant];
}

id objc_msgSend_constrainTableWidthToLegacyiPadWidth(void *a1, const char *a2, ...)
{
  return [a1 constrainTableWidthToLegacyiPadWidth];
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return [a1 constraints];
}

id objc_msgSend_containedLayout(void *a1, const char *a2, ...)
{
  return [a1 containedLayout];
}

id objc_msgSend_containedRep(void *a1, const char *a2, ...)
{
  return [a1 containedRep];
}

id objc_msgSend_containedStorage(void *a1, const char *a2, ...)
{
  return [a1 containedStorage];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return [a1 container];
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return [a1 containerView];
}

id objc_msgSend_containerWrap(void *a1, const char *a2, ...)
{
  return [a1 containerWrap];
}

id objc_msgSend_containsMovie(void *a1, const char *a2, ...)
{
  return [a1 containsMovie];
}

id objc_msgSend_containsUnknownContentVersions(void *a1, const char *a2, ...)
{
  return [a1 containsUnknownContentVersions];
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return [a1 content];
}

id objc_msgSend_contentClippingLayerHost(void *a1, const char *a2, ...)
{
  return [a1 contentClippingLayerHost];
}

id objc_msgSend_contentConfiguration(void *a1, const char *a2, ...)
{
  return [a1 contentConfiguration];
}

id objc_msgSend_contentContainerView(void *a1, const char *a2, ...)
{
  return [a1 contentContainerView];
}

id objc_msgSend_contentData(void *a1, const char *a2, ...)
{
  return [a1 contentData];
}

id objc_msgSend_contentFrame(void *a1, const char *a2, ...)
{
  return [a1 contentFrame];
}

id objc_msgSend_contentImage(void *a1, const char *a2, ...)
{
  return [a1 contentImage];
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return [a1 contentInset];
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return [a1 contentInsets];
}

id objc_msgSend_contentLayer(void *a1, const char *a2, ...)
{
  return [a1 contentLayer];
}

id objc_msgSend_contentLayout(void *a1, const char *a2, ...)
{
  return [a1 contentLayout];
}

id objc_msgSend_contentLoadOperationQueue(void *a1, const char *a2, ...)
{
  return [a1 contentLoadOperationQueue];
}

id objc_msgSend_contentLocation(void *a1, const char *a2, ...)
{
  return [a1 contentLocation];
}

id objc_msgSend_contentNode(void *a1, const char *a2, ...)
{
  return [a1 contentNode];
}

id objc_msgSend_contentNodeBody(void *a1, const char *a2, ...)
{
  return [a1 contentNodeBody];
}

id objc_msgSend_contentNodeGUID(void *a1, const char *a2, ...)
{
  return [a1 contentNodeGUID];
}

id objc_msgSend_contentNodeGUIDToContentNodeDictionary(void *a1, const char *a2, ...)
{
  return [a1 contentNodeGUIDToContentNodeDictionary];
}

id objc_msgSend_contentNodeRelativePageIndex(void *a1, const char *a2, ...)
{
  return [a1 contentNodeRelativePageIndex];
}

id objc_msgSend_contentNodes(void *a1, const char *a2, ...)
{
  return [a1 contentNodes];
}

id objc_msgSend_contentNodesAskedToLoad(void *a1, const char *a2, ...)
{
  return [a1 contentNodesAskedToLoad];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return [a1 contentOffset];
}

id objc_msgSend_contentOpenAnimator(void *a1, const char *a2, ...)
{
  return [a1 contentOpenAnimator];
}

id objc_msgSend_contentPadding(void *a1, const char *a2, ...)
{
  return [a1 contentPadding];
}

id objc_msgSend_contentPageNumberView(void *a1, const char *a2, ...)
{
  return [a1 contentPageNumberView];
}

id objc_msgSend_contentProvider(void *a1, const char *a2, ...)
{
  return [a1 contentProvider];
}

id objc_msgSend_contentRect(void *a1, const char *a2, ...)
{
  return [a1 contentRect];
}

id objc_msgSend_contentRefPlacement(void *a1, const char *a2, ...)
{
  return [a1 contentRefPlacement];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return [a1 contentSize];
}

id objc_msgSend_contentSizeCategoryDidChange(void *a1, const char *a2, ...)
{
  return [a1 contentSizeCategoryDidChange];
}

id objc_msgSend_contentStatusBarStyle(void *a1, const char *a2, ...)
{
  return [a1 contentStatusBarStyle];
}

id objc_msgSend_contentStorage(void *a1, const char *a2, ...)
{
  return [a1 contentStorage];
}

id objc_msgSend_contentSubType(void *a1, const char *a2, ...)
{
  return [a1 contentSubType];
}

id objc_msgSend_contentTextColor(void *a1, const char *a2, ...)
{
  return [a1 contentTextColor];
}

id objc_msgSend_contentTextLayout(void *a1, const char *a2, ...)
{
  return [a1 contentTextLayout];
}

id objc_msgSend_contentTextRep(void *a1, const char *a2, ...)
{
  return [a1 contentTextRep];
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return [a1 contentType];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return [a1 contentView];
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return [a1 contentViewController];
}

id objc_msgSend_contentViewTransform(void *a1, const char *a2, ...)
{
  return [a1 contentViewTransform];
}

id objc_msgSend_contents(void *a1, const char *a2, ...)
{
  return [a1 contents];
}

id objc_msgSend_contentsScale(void *a1, const char *a2, ...)
{
  return [a1 contentsScale];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return [a1 context];
}

id objc_msgSend_contextDirectoryPath(void *a1, const char *a2, ...)
{
  return [a1 contextDirectoryPath];
}

id objc_msgSend_contextForCurrentThread(void *a1, const char *a2, ...)
{
  return [a1 contextForCurrentThread];
}

id objc_msgSend_contextRangeForResult(void *a1, const char *a2, ...)
{
  return [a1 contextRangeForResult];
}

id objc_msgSend_controlButtonSize(void *a1, const char *a2, ...)
{
  return [a1 controlButtonSize];
}

id objc_msgSend_controlHostRep(void *a1, const char *a2, ...)
{
  return [a1 controlHostRep];
}

id objc_msgSend_controlLayouts(void *a1, const char *a2, ...)
{
  return [a1 controlLayouts];
}

id objc_msgSend_controlPanel(void *a1, const char *a2, ...)
{
  return [a1 controlPanel];
}

id objc_msgSend_controlStyle(void *a1, const char *a2, ...)
{
  return [a1 controlStyle];
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return [a1 controller];
}

id objc_msgSend_controlsFrame(void *a1, const char *a2, ...)
{
  return [a1 controlsFrame];
}

id objc_msgSend_controlsHidden(void *a1, const char *a2, ...)
{
  return [a1 controlsHidden];
}

id objc_msgSend_controlsLayout(void *a1, const char *a2, ...)
{
  return [a1 controlsLayout];
}

id objc_msgSend_controlsView(void *a1, const char *a2, ...)
{
  return [a1 controlsView];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return [a1 copy];
}

id objc_msgSend_copyFixingSize(void *a1, const char *a2, ...)
{
  return [a1 copyFixingSize];
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return [a1 cornerRadius];
}

id objc_msgSend_correctCount(void *a1, const char *a2, ...)
{
  return [a1 correctCount];
}

id objc_msgSend_corruptBookAlert(void *a1, const char *a2, ...)
{
  return [a1 corruptBookAlert];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_countLabel(void *a1, const char *a2, ...)
{
  return [a1 countLabel];
}

id objc_msgSend_countLines(void *a1, const char *a2, ...)
{
  return [a1 countLines];
}

id objc_msgSend_countOfItemsToDelete(void *a1, const char *a2, ...)
{
  return [a1 countOfItemsToDelete];
}

id objc_msgSend_countOfUserNotesToDelete(void *a1, const char *a2, ...)
{
  return [a1 countOfUserNotesToDelete];
}

id objc_msgSend_counts(void *a1, const char *a2, ...)
{
  return [a1 counts];
}

id objc_msgSend_cp1(void *a1, const char *a2, ...)
{
  return [a1 cp1];
}

id objc_msgSend_cp2(void *a1, const char *a2, ...)
{
  return [a1 cp2];
}

id objc_msgSend_createColumns(void *a1, const char *a2, ...)
{
  return [a1 createColumns];
}

id objc_msgSend_createContextForCurrentThread(void *a1, const char *a2, ...)
{
  return [a1 createContextForCurrentThread];
}

id objc_msgSend_createFontFromCaption(void *a1, const char *a2, ...)
{
  return [a1 createFontFromCaption];
}

id objc_msgSend_createMovieUIView(void *a1, const char *a2, ...)
{
  return [a1 createMovieUIView];
}

id objc_msgSend_createQueryString(void *a1, const char *a2, ...)
{
  return [a1 createQueryString];
}

id objc_msgSend_createTransportUI(void *a1, const char *a2, ...)
{
  return [a1 createTransportUI];
}

id objc_msgSend_createViewsForConfigurationChange(void *a1, const char *a2, ...)
{
  return [a1 createViewsForConfigurationChange];
}

id objc_msgSend_createdFromAnnotationHUD(void *a1, const char *a2, ...)
{
  return [a1 createdFromAnnotationHUD];
}

id objc_msgSend_createdPressableHandler(void *a1, const char *a2, ...)
{
  return [a1 createdPressableHandler];
}

id objc_msgSend_createdWebView(void *a1, const char *a2, ...)
{
  return [a1 createdWebView];
}

id objc_msgSend_credential(void *a1, const char *a2, ...)
{
  return [a1 credential];
}

id objc_msgSend_cropRect(void *a1, const char *a2, ...)
{
  return [a1 cropRect];
}

id objc_msgSend_curBookspot(void *a1, const char *a2, ...)
{
  return [a1 curBookspot];
}

id objc_msgSend_curSimpleSelector(void *a1, const char *a2, ...)
{
  return [a1 curSimpleSelector];
}

id objc_msgSend_curentEventIndex(void *a1, const char *a2, ...)
{
  return [a1 curentEventIndex];
}

id objc_msgSend_currentAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return [a1 currentAbsolutePageIndex];
}

id objc_msgSend_currentAbsolutePageIndexForBeginningOfVisibleCanvas(void *a1, const char *a2, ...)
{
  return [a1 currentAbsolutePageIndexForBeginningOfVisibleCanvas];
}

id objc_msgSend_currentAbsolutePageIndexForBookmarks(void *a1, const char *a2, ...)
{
  return [a1 currentAbsolutePageIndexForBookmarks];
}

id objc_msgSend_currentAnchoredDrawableLayouts(void *a1, const char *a2, ...)
{
  return [a1 currentAnchoredDrawableLayouts];
}

id objc_msgSend_currentAnnotationStyle(void *a1, const char *a2, ...)
{
  return [a1 currentAnnotationStyle];
}

id objc_msgSend_currentAttributePrefix(void *a1, const char *a2, ...)
{
  return [a1 currentAttributePrefix];
}

id objc_msgSend_currentBlendedWeight(void *a1, const char *a2, ...)
{
  return [a1 currentBlendedWeight];
}

id objc_msgSend_currentBookspotLocation(void *a1, const char *a2, ...)
{
  return [a1 currentBookspotLocation];
}

id objc_msgSend_currentBreakState(void *a1, const char *a2, ...)
{
  return [a1 currentBreakState];
}

id objc_msgSend_currentBuffer(void *a1, const char *a2, ...)
{
  return [a1 currentBuffer];
}

id objc_msgSend_currentCallout(void *a1, const char *a2, ...)
{
  return [a1 currentCallout];
}

id objc_msgSend_currentCaptionStorage(void *a1, const char *a2, ...)
{
  return [a1 currentCaptionStorage];
}

id objc_msgSend_currentChapter(void *a1, const char *a2, ...)
{
  return [a1 currentChapter];
}

id objc_msgSend_currentCollation(void *a1, const char *a2, ...)
{
  return [a1 currentCollation];
}

id objc_msgSend_currentContainerNode(void *a1, const char *a2, ...)
{
  return [a1 currentContainerNode];
}

id objc_msgSend_currentContentNode(void *a1, const char *a2, ...)
{
  return [a1 currentContentNode];
}

id objc_msgSend_currentContentNodes(void *a1, const char *a2, ...)
{
  return [a1 currentContentNodes];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return [a1 currentDevice];
}

id objc_msgSend_currentDocOrientationState(void *a1, const char *a2, ...)
{
  return [a1 currentDocOrientationState];
}

id objc_msgSend_currentDragAnnotation(void *a1, const char *a2, ...)
{
  return [a1 currentDragAnnotation];
}

id objc_msgSend_currentElementPrefix(void *a1, const char *a2, ...)
{
  return [a1 currentElementPrefix];
}

id objc_msgSend_currentEntryMediaState(void *a1, const char *a2, ...)
{
  return [a1 currentEntryMediaState];
}

id objc_msgSend_currentEntryOrientationState(void *a1, const char *a2, ...)
{
  return [a1 currentEntryOrientationState];
}

id objc_msgSend_currentEvent(void *a1, const char *a2, ...)
{
  return [a1 currentEvent];
}

id objc_msgSend_currentEventIndex(void *a1, const char *a2, ...)
{
  return [a1 currentEventIndex];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return [a1 currentHandler];
}

id objc_msgSend_currentHtmlDocMediaState(void *a1, const char *a2, ...)
{
  return [a1 currentHtmlDocMediaState];
}

id objc_msgSend_currentHtmlStackEntry(void *a1, const char *a2, ...)
{
  return [a1 currentHtmlStackEntry];
}

id objc_msgSend_currentHudHost(void *a1, const char *a2, ...)
{
  return [a1 currentHudHost];
}

id objc_msgSend_currentInlineDrawableLayouts(void *a1, const char *a2, ...)
{
  return [a1 currentInlineDrawableLayouts];
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return [a1 currentItem];
}

id objc_msgSend_currentLightLevel(void *a1, const char *a2, ...)
{
  return [a1 currentLightLevel];
}

id objc_msgSend_currentLineRect(void *a1, const char *a2, ...)
{
  return [a1 currentLineRect];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return [a1 currentLocale];
}

id objc_msgSend_currentMediaSelection(void *a1, const char *a2, ...)
{
  return [a1 currentMediaSelection];
}

id objc_msgSend_currentNavigationUnit(void *a1, const char *a2, ...)
{
  return [a1 currentNavigationUnit];
}

id objc_msgSend_currentNavigationUnitRelativePageIndex(void *a1, const char *a2, ...)
{
  return [a1 currentNavigationUnitRelativePageIndex];
}

id objc_msgSend_currentObjectOrPlaceholder(void *a1, const char *a2, ...)
{
  return [a1 currentObjectOrPlaceholder];
}

id objc_msgSend_currentPage(void *a1, const char *a2, ...)
{
  return [a1 currentPage];
}

id objc_msgSend_currentPageDrawableMap(void *a1, const char *a2, ...)
{
  return [a1 currentPageDrawableMap];
}

id objc_msgSend_currentPageIndex(void *a1, const char *a2, ...)
{
  return [a1 currentPageIndex];
}

id objc_msgSend_currentPageInfoForBookmarks(void *a1, const char *a2, ...)
{
  return [a1 currentPageInfoForBookmarks];
}

id objc_msgSend_currentPageLocation(void *a1, const char *a2, ...)
{
  return [a1 currentPageLocation];
}

id objc_msgSend_currentPageNumber(void *a1, const char *a2, ...)
{
  return [a1 currentPageNumber];
}

id objc_msgSend_currentPresentationType(void *a1, const char *a2, ...)
{
  return [a1 currentPresentationType];
}

id objc_msgSend_currentQuery(void *a1, const char *a2, ...)
{
  return [a1 currentQuery];
}

id objc_msgSend_currentRID(void *a1, const char *a2, ...)
{
  return [a1 currentRID];
}

id objc_msgSend_currentRelativePageIndex(void *a1, const char *a2, ...)
{
  return [a1 currentRelativePageIndex];
}

id objc_msgSend_currentRelativePageIndexRange(void *a1, const char *a2, ...)
{
  return [a1 currentRelativePageIndexRange];
}

id objc_msgSend_currentSlide(void *a1, const char *a2, ...)
{
  return [a1 currentSlide];
}

id objc_msgSend_currentSlideIndex(void *a1, const char *a2, ...)
{
  return [a1 currentSlideIndex];
}

id objc_msgSend_currentStackEntry(void *a1, const char *a2, ...)
{
  return [a1 currentStackEntry];
}

id objc_msgSend_currentStage(void *a1, const char *a2, ...)
{
  return [a1 currentStage];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return [a1 currentState];
}

id objc_msgSend_currentTOCLessonIndex(void *a1, const char *a2, ...)
{
  return [a1 currentTOCLessonIndex];
}

id objc_msgSend_currentTableReader(void *a1, const char *a2, ...)
{
  return [a1 currentTableReader];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return [a1 currentThread];
}

id objc_msgSend_currentThumbImage(void *a1, const char *a2, ...)
{
  return [a1 currentThumbImage];
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return [a1 currentTime];
}

id objc_msgSend_currentTocTile(void *a1, const char *a2, ...)
{
  return [a1 currentTocTile];
}

id objc_msgSend_currentTransform(void *a1, const char *a2, ...)
{
  return [a1 currentTransform];
}

id objc_msgSend_currentViewScale(void *a1, const char *a2, ...)
{
  return [a1 currentViewScale];
}

id objc_msgSend_currentWeight(void *a1, const char *a2, ...)
{
  return [a1 currentWeight];
}

id objc_msgSend_currentXmlStackEntry(void *a1, const char *a2, ...)
{
  return [a1 currentXmlStackEntry];
}

id objc_msgSend_currentlyFocusedElement(void *a1, const char *a2, ...)
{
  return [a1 currentlyFocusedElement];
}

id objc_msgSend_currentlyScrolling(void *a1, const char *a2, ...)
{
  return [a1 currentlyScrolling];
}

id objc_msgSend_currentlyWaitingOnThreadedLayoutAndRender(void *a1, const char *a2, ...)
{
  return [a1 currentlyWaitingOnThreadedLayoutAndRender];
}

id objc_msgSend_cursorIndex(void *a1, const char *a2, ...)
{
  return [a1 cursorIndex];
}

id objc_msgSend_curtainLayer(void *a1, const char *a2, ...)
{
  return [a1 curtainLayer];
}

id objc_msgSend_curveAndOvershootAnimation(void *a1, const char *a2, ...)
{
  return [a1 curveAndOvershootAnimation];
}

id objc_msgSend_customPageIndex(void *a1, const char *a2, ...)
{
  return [a1 customPageIndex];
}

id objc_msgSend_cvc(void *a1, const char *a2, ...)
{
  return [a1 cvc];
}

id objc_msgSend_darkMode(void *a1, const char *a2, ...)
{
  return [a1 darkMode];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return [a1 data];
}

id objc_msgSend_dataBuffer(void *a1, const char *a2, ...)
{
  return [a1 dataBuffer];
}

id objc_msgSend_dataChunkSize(void *a1, const char *a2, ...)
{
  return [a1 dataChunkSize];
}

id objc_msgSend_dataLength(void *a1, const char *a2, ...)
{
  return [a1 dataLength];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return [a1 dataSource];
}

id objc_msgSend_databaseKey(void *a1, const char *a2, ...)
{
  return [a1 databaseKey];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return [a1 dateLabel];
}

id objc_msgSend_dateLabelHorizontalInset(void *a1, const char *a2, ...)
{
  return [a1 dateLabelHorizontalInset];
}

id objc_msgSend_deadTouchRectsForPan(void *a1, const char *a2, ...)
{
  return [a1 deadTouchRectsForPan];
}

id objc_msgSend_dealloc(void *a1, const char *a2, ...)
{
  return [a1 dealloc];
}

id objc_msgSend_debugOnly(void *a1, const char *a2, ...)
{
  return [a1 debugOnly];
}

id objc_msgSend_decodeObject(void *a1, const char *a2, ...)
{
  return [a1 decodeObject];
}

id objc_msgSend_decrementCurrentEventIndex(void *a1, const char *a2, ...)
{
  return [a1 decrementCurrentEventIndex];
}

id objc_msgSend_decrementCurrentSlideIndex(void *a1, const char *a2, ...)
{
  return [a1 decrementCurrentSlideIndex];
}

id objc_msgSend_defaultBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 defaultBackgroundColor];
}

id objc_msgSend_defaultBookLibrary(void *a1, const char *a2, ...)
{
  return [a1 defaultBookLibrary];
}

id objc_msgSend_defaultCacheManager(void *a1, const char *a2, ...)
{
  return [a1 defaultCacheManager];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return [a1 defaultCenter];
}

id objc_msgSend_defaultDisabledShadow(void *a1, const char *a2, ...)
{
  return [a1 defaultDisabledShadow];
}

id objc_msgSend_defaultEnvironment(void *a1, const char *a2, ...)
{
  return [a1 defaultEnvironment];
}

id objc_msgSend_defaultImage(void *a1, const char *a2, ...)
{
  return [a1 defaultImage];
}

id objc_msgSend_defaultLabelIndents(void *a1, const char *a2, ...)
{
  return [a1 defaultLabelIndents];
}

id objc_msgSend_defaultLabelString(void *a1, const char *a2, ...)
{
  return [a1 defaultLabelString];
}

id objc_msgSend_defaultListStyle(void *a1, const char *a2, ...)
{
  return [a1 defaultListStyle];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultNoneListStyle(void *a1, const char *a2, ...)
{
  return [a1 defaultNoneListStyle];
}

id objc_msgSend_defaultParagraphStyle(void *a1, const char *a2, ...)
{
  return [a1 defaultParagraphStyle];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return [a1 defaultStore];
}

id objc_msgSend_defaultVoiceOverOptions(void *a1, const char *a2, ...)
{
  return [a1 defaultVoiceOverOptions];
}

id objc_msgSend_deferCanvasLayoutToAfterRotationHasCompleted(void *a1, const char *a2, ...)
{
  return [a1 deferCanvasLayoutToAfterRotationHasCompleted];
}

id objc_msgSend_deferExposeWebView(void *a1, const char *a2, ...)
{
  return [a1 deferExposeWebView];
}

id objc_msgSend_deferredStageViewFrame(void *a1, const char *a2, ...)
{
  return [a1 deferredStageViewFrame];
}

id objc_msgSend_definition(void *a1, const char *a2, ...)
{
  return [a1 definition];
}

id objc_msgSend_definitionMap(void *a1, const char *a2, ...)
{
  return [a1 definitionMap];
}

id objc_msgSend_definitionsViewController(void *a1, const char *a2, ...)
{
  return [a1 definitionsViewController];
}

id objc_msgSend_delayedTFTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 delayedTFTapGestureRecognizer];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return [a1 delegate];
}

id objc_msgSend_delegateMap(void *a1, const char *a2, ...)
{
  return [a1 delegateMap];
}

id objc_msgSend_deleteSelectedNotes(void *a1, const char *a2, ...)
{
  return [a1 deleteSelectedNotes];
}

id objc_msgSend_deltaFromOriginalOffset(void *a1, const char *a2, ...)
{
  return [a1 deltaFromOriginalOffset];
}

id objc_msgSend_denyBookmarkEdit(void *a1, const char *a2, ...)
{
  return [a1 denyBookmarkEdit];
}

id objc_msgSend_dependentLayouts(void *a1, const char *a2, ...)
{
  return [a1 dependentLayouts];
}

id objc_msgSend_descendentWrappables(void *a1, const char *a2, ...)
{
  return [a1 descendentWrappables];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return [a1 description];
}

id objc_msgSend_descriptionGeometry(void *a1, const char *a2, ...)
{
  return [a1 descriptionGeometry];
}

id objc_msgSend_descriptionStorage(void *a1, const char *a2, ...)
{
  return [a1 descriptionStorage];
}

id objc_msgSend_deselectAllNotes(void *a1, const char *a2, ...)
{
  return [a1 deselectAllNotes];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return [a1 destination];
}

id objc_msgSend_detailNavigationController(void *a1, const char *a2, ...)
{
  return [a1 detailNavigationController];
}

id objc_msgSend_detailScrubbingAvailableForCurrentDuration(void *a1, const char *a2, ...)
{
  return [a1 detailScrubbingAvailableForCurrentDuration];
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return [a1 detailTextLabel];
}

id objc_msgSend_detailsDataSource(void *a1, const char *a2, ...)
{
  return [a1 detailsDataSource];
}

id objc_msgSend_detailsViewController(void *a1, const char *a2, ...)
{
  return [a1 detailsViewController];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return [a1 device];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return [a1 dictionaryRepresentation];
}

id objc_msgSend_didAnimate(void *a1, const char *a2, ...)
{
  return [a1 didAnimate];
}

id objc_msgSend_didAnimatePostCommit(void *a1, const char *a2, ...)
{
  return [a1 didAnimatePostCommit];
}

id objc_msgSend_didBeginFreeTransform(void *a1, const char *a2, ...)
{
  return [a1 didBeginFreeTransform];
}

id objc_msgSend_didCloseDocument(void *a1, const char *a2, ...)
{
  return [a1 didCloseDocument];
}

id objc_msgSend_didDrawCenterBurst(void *a1, const char *a2, ...)
{
  return [a1 didDrawCenterBurst];
}

id objc_msgSend_didEndFreeTransform(void *a1, const char *a2, ...)
{
  return [a1 didEndFreeTransform];
}

id objc_msgSend_didEnterBackground(void *a1, const char *a2, ...)
{
  return [a1 didEnterBackground];
}

id objc_msgSend_didExitExpanded(void *a1, const char *a2, ...)
{
  return [a1 didExitExpanded];
}

id objc_msgSend_didFinish(void *a1, const char *a2, ...)
{
  return [a1 didFinish];
}

id objc_msgSend_didLayoutBlock(void *a1, const char *a2, ...)
{
  return [a1 didLayoutBlock];
}

id objc_msgSend_didPresentExpanded(void *a1, const char *a2, ...)
{
  return [a1 didPresentExpanded];
}

id objc_msgSend_didPresentExpandedPostCommit(void *a1, const char *a2, ...)
{
  return [a1 didPresentExpandedPostCommit];
}

id objc_msgSend_didTransitionFromCanvas(void *a1, const char *a2, ...)
{
  return [a1 didTransitionFromCanvas];
}

id objc_msgSend_direction(void *a1, const char *a2, ...)
{
  return [a1 direction];
}

id objc_msgSend_directionView(void *a1, const char *a2, ...)
{
  return [a1 directionView];
}

id objc_msgSend_directionViewController(void *a1, const char *a2, ...)
{
  return [a1 directionViewController];
}

id objc_msgSend_dirtyRange(void *a1, const char *a2, ...)
{
  return [a1 dirtyRange];
}

id objc_msgSend_disableAllGestures(void *a1, const char *a2, ...)
{
  return [a1 disableAllGestures];
}

id objc_msgSend_disableCanvasInteraction(void *a1, const char *a2, ...)
{
  return [a1 disableCanvasInteraction];
}

id objc_msgSend_disableNormalGestures(void *a1, const char *a2, ...)
{
  return [a1 disableNormalGestures];
}

id objc_msgSend_disableParentScrollOnFirstOrLastPage(void *a1, const char *a2, ...)
{
  return [a1 disableParentScrollOnFirstOrLastPage];
}

id objc_msgSend_disableScrolling(void *a1, const char *a2, ...)
{
  return [a1 disableScrolling];
}

id objc_msgSend_disabledPrimaryColor(void *a1, const char *a2, ...)
{
  return [a1 disabledPrimaryColor];
}

id objc_msgSend_disallowRotate(void *a1, const char *a2, ...)
{
  return [a1 disallowRotate];
}

id objc_msgSend_discloseButtonLeftMargin(void *a1, const char *a2, ...)
{
  return [a1 discloseButtonLeftMargin];
}

id objc_msgSend_discloseButtonRadius(void *a1, const char *a2, ...)
{
  return [a1 discloseButtonRadius];
}

id objc_msgSend_discloseButtonRightMargin(void *a1, const char *a2, ...)
{
  return [a1 discloseButtonRightMargin];
}

id objc_msgSend_discloseButtonWidth(void *a1, const char *a2, ...)
{
  return [a1 discloseButtonWidth];
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return [a1 disconnect];
}

id objc_msgSend_dismissActivePopover(void *a1, const char *a2, ...)
{
  return [a1 dismissActivePopover];
}

id objc_msgSend_dismissActivePopovers(void *a1, const char *a2, ...)
{
  return [a1 dismissActivePopovers];
}

id objc_msgSend_dismissCompletionHandler(void *a1, const char *a2, ...)
{
  return [a1 dismissCompletionHandler];
}

id objc_msgSend_dismissExpandedImmediate(void *a1, const char *a2, ...)
{
  return [a1 dismissExpandedImmediate];
}

id objc_msgSend_dismissGR(void *a1, const char *a2, ...)
{
  return [a1 dismissGR];
}

id objc_msgSend_dismissSharePopover(void *a1, const char *a2, ...)
{
  return [a1 dismissSharePopover];
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return [a1 dispatchQueue];
}

id objc_msgSend_displayAtCurrentLayerTime(void *a1, const char *a2, ...)
{
  return [a1 displayAtCurrentLayerTime];
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return [a1 displayMode];
}

id objc_msgSend_displayModeButtonItem(void *a1, const char *a2, ...)
{
  return [a1 displayModeButtonItem];
}

id objc_msgSend_displayPageNumber(void *a1, const char *a2, ...)
{
  return [a1 displayPageNumber];
}

id objc_msgSend_displayPageNumberArray(void *a1, const char *a2, ...)
{
  return [a1 displayPageNumberArray];
}

id objc_msgSend_displayPageNumberFormat(void *a1, const char *a2, ...)
{
  return [a1 displayPageNumberFormat];
}

id objc_msgSend_displayPageNumberMap(void *a1, const char *a2, ...)
{
  return [a1 displayPageNumberMap];
}

id objc_msgSend_displayPageNumberValue(void *a1, const char *a2, ...)
{
  return [a1 displayPageNumberValue];
}

id objc_msgSend_displaySettingsViewController(void *a1, const char *a2, ...)
{
  return [a1 displaySettingsViewController];
}

id objc_msgSend_displaySleepController(void *a1, const char *a2, ...)
{
  return [a1 displaySleepController];
}

id objc_msgSend_displayStartingPageFormats(void *a1, const char *a2, ...)
{
  return [a1 displayStartingPageFormats];
}

id objc_msgSend_displayStartingPageNumbers(void *a1, const char *a2, ...)
{
  return [a1 displayStartingPageNumbers];
}

id objc_msgSend_displayedEntry(void *a1, const char *a2, ...)
{
  return [a1 displayedEntry];
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return [a1 distantFuture];
}

id objc_msgSend_divider(void *a1, const char *a2, ...)
{
  return [a1 divider];
}

id objc_msgSend_dividerColor(void *a1, const char *a2, ...)
{
  return [a1 dividerColor];
}

id objc_msgSend_dividerHeightConstraint(void *a1, const char *a2, ...)
{
  return [a1 dividerHeightConstraint];
}

id objc_msgSend_dividerView(void *a1, const char *a2, ...)
{
  return [a1 dividerView];
}

id objc_msgSend_doNotDisturbStatusAtStart(void *a1, const char *a2, ...)
{
  return [a1 doNotDisturbStatusAtStart];
}

id objc_msgSend_docRelativePath(void *a1, const char *a2, ...)
{
  return [a1 docRelativePath];
}

id objc_msgSend_docVersion(void *a1, const char *a2, ...)
{
  return [a1 docVersion];
}

id objc_msgSend_documentDidLoad(void *a1, const char *a2, ...)
{
  return [a1 documentDidLoad];
}

id objc_msgSend_documentEntryURI(void *a1, const char *a2, ...)
{
  return [a1 documentEntryURI];
}

id objc_msgSend_documentLinkResolver(void *a1, const char *a2, ...)
{
  return [a1 documentLinkResolver];
}

id objc_msgSend_documentNavModel(void *a1, const char *a2, ...)
{
  return [a1 documentNavModel];
}

id objc_msgSend_documentNavigator(void *a1, const char *a2, ...)
{
  return [a1 documentNavigator];
}

id objc_msgSend_documentObject(void *a1, const char *a2, ...)
{
  return [a1 documentObject];
}

id objc_msgSend_documentPath(void *a1, const char *a2, ...)
{
  return [a1 documentPath];
}

id objc_msgSend_documentRoot(void *a1, const char *a2, ...)
{
  return [a1 documentRoot];
}

id objc_msgSend_documentViewController(void *a1, const char *a2, ...)
{
  return [a1 documentViewController];
}

id objc_msgSend_documentWillDealloc(void *a1, const char *a2, ...)
{
  return [a1 documentWillDealloc];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return [a1 domain];
}

id objc_msgSend_doneButton(void *a1, const char *a2, ...)
{
  return [a1 doneButton];
}

id objc_msgSend_doneRendering(void *a1, const char *a2, ...)
{
  return [a1 doneRendering];
}

id objc_msgSend_doubleTapGR(void *a1, const char *a2, ...)
{
  return [a1 doubleTapGR];
}

id objc_msgSend_doubleTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 doubleTapGestureRecognizer];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_dragOffset(void *a1, const char *a2, ...)
{
  return [a1 dragOffset];
}

id objc_msgSend_dragStartPoint(void *a1, const char *a2, ...)
{
  return [a1 dragStartPoint];
}

id objc_msgSend_draggedPastThreshold(void *a1, const char *a2, ...)
{
  return [a1 draggedPastThreshold];
}

id objc_msgSend_draggingPlacardIndex(void *a1, const char *a2, ...)
{
  return [a1 draggingPlacardIndex];
}

id objc_msgSend_draggingRep(void *a1, const char *a2, ...)
{
  return [a1 draggingRep];
}

id objc_msgSend_drain(void *a1, const char *a2, ...)
{
  return [a1 drain];
}

id objc_msgSend_drawable(void *a1, const char *a2, ...)
{
  return [a1 drawable];
}

id objc_msgSend_drawableAttachmentCache(void *a1, const char *a2, ...)
{
  return [a1 drawableAttachmentCache];
}

id objc_msgSend_drawableFrame(void *a1, const char *a2, ...)
{
  return [a1 drawableFrame];
}

id objc_msgSend_drawablePlacementClass(void *a1, const char *a2, ...)
{
  return [a1 drawablePlacementClass];
}

id objc_msgSend_drawablePositionings(void *a1, const char *a2, ...)
{
  return [a1 drawablePositionings];
}

id objc_msgSend_drawableStorage(void *a1, const char *a2, ...)
{
  return [a1 drawableStorage];
}

id objc_msgSend_drawableToPresent(void *a1, const char *a2, ...)
{
  return [a1 drawableToPresent];
}

id objc_msgSend_drawables(void *a1, const char *a2, ...)
{
  return [a1 drawables];
}

id objc_msgSend_drawablesZOrder(void *a1, const char *a2, ...)
{
  return [a1 drawablesZOrder];
}

id objc_msgSend_drawerFrame(void *a1, const char *a2, ...)
{
  return [a1 drawerFrame];
}

id objc_msgSend_drawsPageBackground(void *a1, const char *a2, ...)
{
  return [a1 drawsPageBackground];
}

id objc_msgSend_drmContext(void *a1, const char *a2, ...)
{
  return [a1 drmContext];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return [a1 duration];
}

id objc_msgSend_dynamicOperationController(void *a1, const char *a2, ...)
{
  return [a1 dynamicOperationController];
}

id objc_msgSend_dynamicallyZooming(void *a1, const char *a2, ...)
{
  return [a1 dynamicallyZooming];
}

id objc_msgSend_editControlCenteringRect(void *a1, const char *a2, ...)
{
  return [a1 editControlCenteringRect];
}

id objc_msgSend_editMenuInteraction(void *a1, const char *a2, ...)
{
  return [a1 editMenuInteraction];
}

id objc_msgSend_editingCellID(void *a1, const char *a2, ...)
{
  return [a1 editingCellID];
}

id objc_msgSend_editingCellIDInTable(void *a1, const char *a2, ...)
{
  return [a1 editingCellIDInTable];
}

id objc_msgSend_editingHighlightLayer(void *a1, const char *a2, ...)
{
  return [a1 editingHighlightLayer];
}

id objc_msgSend_editorController(void *a1, const char *a2, ...)
{
  return [a1 editorController];
}

id objc_msgSend_editorGeometry(void *a1, const char *a2, ...)
{
  return [a1 editorGeometry];
}

id objc_msgSend_effectView(void *a1, const char *a2, ...)
{
  return [a1 effectView];
}

id objc_msgSend_elementCount(void *a1, const char *a2, ...)
{
  return [a1 elementCount];
}

id objc_msgSend_elementId(void *a1, const char *a2, ...)
{
  return [a1 elementId];
}

id objc_msgSend_elementInfos(void *a1, const char *a2, ...)
{
  return [a1 elementInfos];
}

id objc_msgSend_elementKind(void *a1, const char *a2, ...)
{
  return [a1 elementKind];
}

id objc_msgSend_elementName(void *a1, const char *a2, ...)
{
  return [a1 elementName];
}

id objc_msgSend_elementNamespace(void *a1, const char *a2, ...)
{
  return [a1 elementNamespace];
}

id objc_msgSend_elementReaders(void *a1, const char *a2, ...)
{
  return [a1 elementReaders];
}

id objc_msgSend_elementType(void *a1, const char *a2, ...)
{
  return [a1 elementType];
}

id objc_msgSend_embeddedArtHref(void *a1, const char *a2, ...)
{
  return [a1 embeddedArtHref];
}

id objc_msgSend_embeddedArtURL(void *a1, const char *a2, ...)
{
  return [a1 embeddedArtURL];
}

id objc_msgSend_embeddedCanvasDidEndScrolling(void *a1, const char *a2, ...)
{
  return [a1 embeddedCanvasDidEndScrolling];
}

id objc_msgSend_embeddedCanvasWillBeginScrolling(void *a1, const char *a2, ...)
{
  return [a1 embeddedCanvasWillBeginScrolling];
}

id objc_msgSend_emptyPattern(void *a1, const char *a2, ...)
{
  return [a1 emptyPattern];
}

id objc_msgSend_emptyStroke(void *a1, const char *a2, ...)
{
  return [a1 emptyStroke];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return [a1 enabled];
}

id objc_msgSend_enabledOnlyIfWidgetInteractionDisabledOnPage(void *a1, const char *a2, ...)
{
  return [a1 enabledOnlyIfWidgetInteractionDisabledOnPage];
}

id objc_msgSend_enclosingScrollView(void *a1, const char *a2, ...)
{
  return [a1 enclosingScrollView];
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return [a1 encodedData];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return [a1 end];
}

id objc_msgSend_endAppearanceTransition(void *a1, const char *a2, ...)
{
  return [a1 endAppearanceTransition];
}

id objc_msgSend_endDisablingInterfaceAutorotation(void *a1, const char *a2, ...)
{
  return [a1 endDisablingInterfaceAutorotation];
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return [a1 endEditing];
}

id objc_msgSend_endElement(void *a1, const char *a2, ...)
{
  return [a1 endElement];
}

id objc_msgSend_endEncoding(void *a1, const char *a2, ...)
{
  return [a1 endEncoding];
}

id objc_msgSend_endIgnoringInteractionEvents(void *a1, const char *a2, ...)
{
  return [a1 endIgnoringInteractionEvents];
}

id objc_msgSend_endRevealTOC(void *a1, const char *a2, ...)
{
  return [a1 endRevealTOC];
}

id objc_msgSend_endTime(void *a1, const char *a2, ...)
{
  return [a1 endTime];
}

id objc_msgSend_endUISession(void *a1, const char *a2, ...)
{
  return [a1 endUISession];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return [a1 endUpdates];
}

id objc_msgSend_endshow(void *a1, const char *a2, ...)
{
  return [a1 endshow];
}

id objc_msgSend_enforceAnimationLayer(void *a1, const char *a2, ...)
{
  return [a1 enforceAnimationLayer];
}

id objc_msgSend_ensureDocumentIsLoaded(void *a1, const char *a2, ...)
{
  return [a1 ensureDocumentIsLoaded];
}

id objc_msgSend_ensureGeometryFitsChildren(void *a1, const char *a2, ...)
{
  return [a1 ensureGeometryFitsChildren];
}

id objc_msgSend_ensureNonSponsoredAnnotationsAreMigrated(void *a1, const char *a2, ...)
{
  return [a1 ensureNonSponsoredAnnotationsAreMigrated];
}

id objc_msgSend_ensureReadyToPlay(void *a1, const char *a2, ...)
{
  return [a1 ensureReadyToPlay];
}

id objc_msgSend_ensureWidgetObjectInjected(void *a1, const char *a2, ...)
{
  return [a1 ensureWidgetObjectInjected];
}

id objc_msgSend_entries(void *a1, const char *a2, ...)
{
  return [a1 entries];
}

id objc_msgSend_entry(void *a1, const char *a2, ...)
{
  return [a1 entry];
}

id objc_msgSend_entryBody(void *a1, const char *a2, ...)
{
  return [a1 entryBody];
}

id objc_msgSend_entryCount(void *a1, const char *a2, ...)
{
  return [a1 entryCount];
}

id objc_msgSend_entryNSURL(void *a1, const char *a2, ...)
{
  return [a1 entryNSURL];
}

id objc_msgSend_entryPath(void *a1, const char *a2, ...)
{
  return [a1 entryPath];
}

id objc_msgSend_entryURI(void *a1, const char *a2, ...)
{
  return [a1 entryURI];
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return [a1 environment];
}

id objc_msgSend_equationEnvironment(void *a1, const char *a2, ...)
{
  return [a1 equationEnvironment];
}

id objc_msgSend_equationEnvironmentEntry(void *a1, const char *a2, ...)
{
  return [a1 equationEnvironmentEntry];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return [a1 error];
}

id objc_msgSend_evaluatorClass(void *a1, const char *a2, ...)
{
  return [a1 evaluatorClass];
}

id objc_msgSend_eventCount(void *a1, const char *a2, ...)
{
  return [a1 eventCount];
}

id objc_msgSend_eventHandler(void *a1, const char *a2, ...)
{
  return [a1 eventHandler];
}

id objc_msgSend_exception(void *a1, const char *a2, ...)
{
  return [a1 exception];
}

id objc_msgSend_exitExpandedTimer(void *a1, const char *a2, ...)
{
  return [a1 exitExpandedTimer];
}

id objc_msgSend_exitingExpanded(void *a1, const char *a2, ...)
{
  return [a1 exitingExpanded];
}

id objc_msgSend_expandableExpandedPresentationDidEnd(void *a1, const char *a2, ...)
{
  return [a1 expandableExpandedPresentationDidEnd];
}

id objc_msgSend_expandableRep(void *a1, const char *a2, ...)
{
  return [a1 expandableRep];
}

id objc_msgSend_expandableShouldPreloadExpanded(void *a1, const char *a2, ...)
{
  return [a1 expandableShouldPreloadExpanded];
}

id objc_msgSend_expandableWillPresentExpanded(void *a1, const char *a2, ...)
{
  return [a1 expandableWillPresentExpanded];
}

id objc_msgSend_expandedAppearance(void *a1, const char *a2, ...)
{
  return [a1 expandedAppearance];
}

id objc_msgSend_expandedBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 expandedBackgroundColor];
}

id objc_msgSend_expandedContentAllowDoubleTapZoom(void *a1, const char *a2, ...)
{
  return [a1 expandedContentAllowDoubleTapZoom];
}

id objc_msgSend_expandedContentAllowPinchZoom(void *a1, const char *a2, ...)
{
  return [a1 expandedContentAllowPinchZoom];
}

id objc_msgSend_expandedContentDrawableToPresent(void *a1, const char *a2, ...)
{
  return [a1 expandedContentDrawableToPresent];
}

id objc_msgSend_expandedContentHandlesDoubleTapZoomDirectly(void *a1, const char *a2, ...)
{
  return [a1 expandedContentHandlesDoubleTapZoomDirectly];
}

id objc_msgSend_expandedContentMaximumZoomScale(void *a1, const char *a2, ...)
{
  return [a1 expandedContentMaximumZoomScale];
}

id objc_msgSend_expandedContentMinimumZoomScale(void *a1, const char *a2, ...)
{
  return [a1 expandedContentMinimumZoomScale];
}

id objc_msgSend_expandedContentNonContiguousZoomScale(void *a1, const char *a2, ...)
{
  return [a1 expandedContentNonContiguousZoomScale];
}

id objc_msgSend_expandedContentScrollEnabled(void *a1, const char *a2, ...)
{
  return [a1 expandedContentScrollEnabled];
}

id objc_msgSend_expandedDidAppearPreAnimation(void *a1, const char *a2, ...)
{
  return [a1 expandedDidAppearPreAnimation];
}

id objc_msgSend_expandedDrawableToPresent(void *a1, const char *a2, ...)
{
  return [a1 expandedDrawableToPresent];
}

id objc_msgSend_expandedFrameInUnscaledCanvasSize(void *a1, const char *a2, ...)
{
  return [a1 expandedFrameInUnscaledCanvasSize];
}

id objc_msgSend_expandedInfo(void *a1, const char *a2, ...)
{
  return [a1 expandedInfo];
}

id objc_msgSend_expandedOnly(void *a1, const char *a2, ...)
{
  return [a1 expandedOnly];
}

id objc_msgSend_expandedRep(void *a1, const char *a2, ...)
{
  return [a1 expandedRep];
}

id objc_msgSend_expandedRepController(void *a1, const char *a2, ...)
{
  return [a1 expandedRepController];
}

id objc_msgSend_expandedRepControllerHasRoomForPanels(void *a1, const char *a2, ...)
{
  return [a1 expandedRepControllerHasRoomForPanels];
}

id objc_msgSend_expandedRepControllerState(void *a1, const char *a2, ...)
{
  return [a1 expandedRepControllerState];
}

id objc_msgSend_expandedRepControllerUpdatePanelVisibility(void *a1, const char *a2, ...)
{
  return [a1 expandedRepControllerUpdatePanelVisibility];
}

id objc_msgSend_expandedRepSourceRep(void *a1, const char *a2, ...)
{
  return [a1 expandedRepSourceRep];
}

id objc_msgSend_expandedRotationAnimationController(void *a1, const char *a2, ...)
{
  return [a1 expandedRotationAnimationController];
}

id objc_msgSend_expandedStageDrawable(void *a1, const char *a2, ...)
{
  return [a1 expandedStageDrawable];
}

id objc_msgSend_expandedSupportedGestureKinds(void *a1, const char *a2, ...)
{
  return [a1 expandedSupportedGestureKinds];
}

id objc_msgSend_expandedViewController(void *a1, const char *a2, ...)
{
  return [a1 expandedViewController];
}

id objc_msgSend_expandedZoomableInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 expandedZoomableInteractiveCanvasController];
}

id objc_msgSend_exposurePolicy(void *a1, const char *a2, ...)
{
  return [a1 exposurePolicy];
}

id objc_msgSend_exteriorTextWrap(void *a1, const char *a2, ...)
{
  return [a1 exteriorTextWrap];
}

id objc_msgSend_externalURLLoadPrompter(void *a1, const char *a2, ...)
{
  return [a1 externalURLLoadPrompter];
}

id objc_msgSend_externalURLOpenPrompter(void *a1, const char *a2, ...)
{
  return [a1 externalURLOpenPrompter];
}

id objc_msgSend_fadeInAnimationLayer(void *a1, const char *a2, ...)
{
  return [a1 fadeInAnimationLayer];
}

id objc_msgSend_fadeOutAnimationLayer(void *a1, const char *a2, ...)
{
  return [a1 fadeOutAnimationLayer];
}

id objc_msgSend_fadeoutTimer(void *a1, const char *a2, ...)
{
  return [a1 fadeoutTimer];
}

id objc_msgSend_fallThroughClass(void *a1, const char *a2, ...)
{
  return [a1 fallThroughClass];
}

id objc_msgSend_fallbackImage(void *a1, const char *a2, ...)
{
  return [a1 fallbackImage];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return [a1 familyName];
}

id objc_msgSend_fidgetResolver(void *a1, const char *a2, ...)
{
  return [a1 fidgetResolver];
}

id objc_msgSend_fieldOfViewInRadians(void *a1, const char *a2, ...)
{
  return [a1 fieldOfViewInRadians];
}

id objc_msgSend_figureReference(void *a1, const char *a2, ...)
{
  return [a1 figureReference];
}

id objc_msgSend_fileAttributes(void *a1, const char *a2, ...)
{
  return [a1 fileAttributes];
}

id objc_msgSend_fileCache(void *a1, const char *a2, ...)
{
  return [a1 fileCache];
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return [a1 fileSize];
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return [a1 fill];
}

id objc_msgSend_fillType(void *a1, const char *a2, ...)
{
  return [a1 fillType];
}

id objc_msgSend_fillsForDefaultSeriesType(void *a1, const char *a2, ...)
{
  return [a1 fillsForDefaultSeriesType];
}

id objc_msgSend_filters(void *a1, const char *a2, ...)
{
  return [a1 filters];
}

id objc_msgSend_findCharIndex(void *a1, const char *a2, ...)
{
  return [a1 findCharIndex];
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return [a1 finishDecoding];
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return [a1 finishEncoding];
}

id objc_msgSend_finishLoading(void *a1, const char *a2, ...)
{
  return [a1 finishLoading];
}

id objc_msgSend_fireworkStartingPositionX(void *a1, const char *a2, ...)
{
  return [a1 fireworkStartingPositionX];
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return [a1 first];
}

id objc_msgSend_firstChildTarget(void *a1, const char *a2, ...)
{
  return [a1 firstChildTarget];
}

id objc_msgSend_firstDotSpecialRendering(void *a1, const char *a2, ...)
{
  return [a1 firstDotSpecialRendering];
}

id objc_msgSend_firstElementForUpcomingPageTurnResetCount(void *a1, const char *a2, ...)
{
  return [a1 firstElementForUpcomingPageTurnResetCount];
}

id objc_msgSend_firstElementForUpcomingScreenChangeResetCount(void *a1, const char *a2, ...)
{
  return [a1 firstElementForUpcomingScreenChangeResetCount];
}

id objc_msgSend_firstHint(void *a1, const char *a2, ...)
{
  return [a1 firstHint];
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return [a1 firstIndex];
}

id objc_msgSend_firstLaunchView(void *a1, const char *a2, ...)
{
  return [a1 firstLaunchView];
}

id objc_msgSend_firstLineAscent(void *a1, const char *a2, ...)
{
  return [a1 firstLineAscent];
}

id objc_msgSend_firstLineCacheRange(void *a1, const char *a2, ...)
{
  return [a1 firstLineCacheRange];
}

id objc_msgSend_firstLineCacheRect(void *a1, const char *a2, ...)
{
  return [a1 firstLineCacheRect];
}

id objc_msgSend_firstLoad(void *a1, const char *a2, ...)
{
  return [a1 firstLoad];
}

id objc_msgSend_firstModelLink(void *a1, const char *a2, ...)
{
  return [a1 firstModelLink];
}

id objc_msgSend_firstNavigationUnit(void *a1, const char *a2, ...)
{
  return [a1 firstNavigationUnit];
}

id objc_msgSend_firstNoteBelowSectionAdjustment(void *a1, const char *a2, ...)
{
  return [a1 firstNoteBelowSectionAdjustment];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return [a1 firstObject];
}

id objc_msgSend_firstPageIndex(void *a1, const char *a2, ...)
{
  return [a1 firstPageIndex];
}

id objc_msgSend_firstTarget(void *a1, const char *a2, ...)
{
  return [a1 firstTarget];
}

id objc_msgSend_firstThumbOverlap(void *a1, const char *a2, ...)
{
  return [a1 firstThumbOverlap];
}

id objc_msgSend_firstThumbSize(void *a1, const char *a2, ...)
{
  return [a1 firstThumbSize];
}

id objc_msgSend_firstTimeScore(void *a1, const char *a2, ...)
{
  return [a1 firstTimeScore];
}

id objc_msgSend_fitHeightViewScale(void *a1, const char *a2, ...)
{
  return [a1 fitHeightViewScale];
}

id objc_msgSend_fitWidthViewScale(void *a1, const char *a2, ...)
{
  return [a1 fitWidthViewScale];
}

id objc_msgSend_fixFrameAndScrollView(void *a1, const char *a2, ...)
{
  return [a1 fixFrameAndScrollView];
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return [a1 flashScrollIndicators];
}

id objc_msgSend_flipAffordancePressed(void *a1, const char *a2, ...)
{
  return [a1 flipAffordancePressed];
}

id objc_msgSend_flipGlyphFrame(void *a1, const char *a2, ...)
{
  return [a1 flipGlyphFrame];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return [a1 floatValue];
}

id objc_msgSend_floatingDrawableInfos(void *a1, const char *a2, ...)
{
  return [a1 floatingDrawableInfos];
}

id objc_msgSend_floatingDrawableLayouts(void *a1, const char *a2, ...)
{
  return [a1 floatingDrawableLayouts];
}

id objc_msgSend_floatingDrawableStorage(void *a1, const char *a2, ...)
{
  return [a1 floatingDrawableStorage];
}

id objc_msgSend_floatingHeaderController(void *a1, const char *a2, ...)
{
  return [a1 floatingHeaderController];
}

id objc_msgSend_floatingInfo(void *a1, const char *a2, ...)
{
  return [a1 floatingInfo];
}

id objc_msgSend_floatingLayout(void *a1, const char *a2, ...)
{
  return [a1 floatingLayout];
}

id objc_msgSend_floatingLayouts(void *a1, const char *a2, ...)
{
  return [a1 floatingLayouts];
}

id objc_msgSend_floatingWrappables(void *a1, const char *a2, ...)
{
  return [a1 floatingWrappables];
}

id objc_msgSend_flowIsCurrent(void *a1, const char *a2, ...)
{
  return [a1 flowIsCurrent];
}

id objc_msgSend_flowMediaTypes(void *a1, const char *a2, ...)
{
  return [a1 flowMediaTypes];
}

id objc_msgSend_flowModelContentNodeBody(void *a1, const char *a2, ...)
{
  return [a1 flowModelContentNodeBody];
}

id objc_msgSend_flowPresentationType(void *a1, const char *a2, ...)
{
  return [a1 flowPresentationType];
}

id objc_msgSend_flowSectionController(void *a1, const char *a2, ...)
{
  return [a1 flowSectionController];
}

id objc_msgSend_flowSizeScale(void *a1, const char *a2, ...)
{
  return [a1 flowSizeScale];
}

id objc_msgSend_flowState(void *a1, const char *a2, ...)
{
  return [a1 flowState];
}

id objc_msgSend_flowTocViewController(void *a1, const char *a2, ...)
{
  return [a1 flowTocViewController];
}

id objc_msgSend_flows(void *a1, const char *a2, ...)
{
  return [a1 flows];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return [a1 flush];
}

id objc_msgSend_flushThumbnails(void *a1, const char *a2, ...)
{
  return [a1 flushThumbnails];
}

id objc_msgSend_focusShapeView(void *a1, const char *a2, ...)
{
  return [a1 focusShapeView];
}

id objc_msgSend_followingAnchor(void *a1, const char *a2, ...)
{
  return [a1 followingAnchor];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return [a1 font];
}

id objc_msgSend_fontDownloadAlertController(void *a1, const char *a2, ...)
{
  return [a1 fontDownloadAlertController];
}

id objc_msgSend_fontName(void *a1, const char *a2, ...)
{
  return [a1 fontName];
}

id objc_msgSend_fontObfuscationInfo(void *a1, const char *a2, ...)
{
  return [a1 fontObfuscationInfo];
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return [a1 fontSize];
}

id objc_msgSend_fontSizeButtons(void *a1, const char *a2, ...)
{
  return [a1 fontSizeButtons];
}

id objc_msgSend_fontSizeNameMap(void *a1, const char *a2, ...)
{
  return [a1 fontSizeNameMap];
}

id objc_msgSend_footerIndexDividerFrame(void *a1, const char *a2, ...)
{
  return [a1 footerIndexDividerFrame];
}

id objc_msgSend_footerIndexTitleFrame(void *a1, const char *a2, ...)
{
  return [a1 footerIndexTitleFrame];
}

id objc_msgSend_footerTermsDividerFrame(void *a1, const char *a2, ...)
{
  return [a1 footerTermsDividerFrame];
}

id objc_msgSend_footerTermsTitleFrame(void *a1, const char *a2, ...)
{
  return [a1 footerTermsTitleFrame];
}

id objc_msgSend_footerView(void *a1, const char *a2, ...)
{
  return [a1 footerView];
}

id objc_msgSend_footerViewHeightConstraint(void *a1, const char *a2, ...)
{
  return [a1 footerViewHeightConstraint];
}

id objc_msgSend_forceBackgroundLayout(void *a1, const char *a2, ...)
{
  return [a1 forceBackgroundLayout];
}

id objc_msgSend_forceStatusBarVisible(void *a1, const char *a2, ...)
{
  return [a1 forceStatusBarVisible];
}

id objc_msgSend_forceStopScrollingAtCurrentPageIndex(void *a1, const char *a2, ...)
{
  return [a1 forceStopScrollingAtCurrentPageIndex];
}

id objc_msgSend_forceTextOnly(void *a1, const char *a2, ...)
{
  return [a1 forceTextOnly];
}

id objc_msgSend_forceThemeColors(void *a1, const char *a2, ...)
{
  return [a1 forceThemeColors];
}

id objc_msgSend_foregroundLayer(void *a1, const char *a2, ...)
{
  return [a1 foregroundLayer];
}

id objc_msgSend_forwardPlaybackEndTime(void *a1, const char *a2, ...)
{
  return [a1 forwardPlaybackEndTime];
}

id objc_msgSend_fraction(void *a1, const char *a2, ...)
{
  return [a1 fraction];
}

id objc_msgSend_fragment(void *a1, const char *a2, ...)
{
  return [a1 fragment];
}

id objc_msgSend_fragmentPhysicalPageIndexes(void *a1, const char *a2, ...)
{
  return [a1 fragmentPhysicalPageIndexes];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return [a1 frame];
}

id objc_msgSend_frameBounds(void *a1, const char *a2, ...)
{
  return [a1 frameBounds];
}

id objc_msgSend_frameCanvasContentInsets(void *a1, const char *a2, ...)
{
  return [a1 frameCanvasContentInsets];
}

id objc_msgSend_frameForCulling(void *a1, const char *a2, ...)
{
  return [a1 frameForCulling];
}

id objc_msgSend_frameForOnCanvasUI(void *a1, const char *a2, ...)
{
  return [a1 frameForOnCanvasUI];
}

id objc_msgSend_frameForPopupInUnscaledCanvas(void *a1, const char *a2, ...)
{
  return [a1 frameForPopupInUnscaledCanvas];
}

id objc_msgSend_frameHeight(void *a1, const char *a2, ...)
{
  return [a1 frameHeight];
}

id objc_msgSend_frameInParent(void *a1, const char *a2, ...)
{
  return [a1 frameInParent];
}

id objc_msgSend_frameInRoot(void *a1, const char *a2, ...)
{
  return [a1 frameInRoot];
}

id objc_msgSend_frameInShowLayer(void *a1, const char *a2, ...)
{
  return [a1 frameInShowLayer];
}

id objc_msgSend_frameInUnscaledCanvas(void *a1, const char *a2, ...)
{
  return [a1 frameInUnscaledCanvas];
}

id objc_msgSend_frameName(void *a1, const char *a2, ...)
{
  return [a1 frameName];
}

id objc_msgSend_frameOnCanvas(void *a1, const char *a2, ...)
{
  return [a1 frameOnCanvas];
}

id objc_msgSend_frameViewSettings(void *a1, const char *a2, ...)
{
  return [a1 frameViewSettings];
}

id objc_msgSend_frameViewSize(void *a1, const char *a2, ...)
{
  return [a1 frameViewSize];
}

id objc_msgSend_frameY(void *a1, const char *a2, ...)
{
  return [a1 frameY];
}

id objc_msgSend_freeTransform(void *a1, const char *a2, ...)
{
  return [a1 freeTransform];
}

id objc_msgSend_freeTransformController(void *a1, const char *a2, ...)
{
  return [a1 freeTransformController];
}

id objc_msgSend_freeTransformDelegate(void *a1, const char *a2, ...)
{
  return [a1 freeTransformDelegate];
}

id objc_msgSend_freeTransformDidEnd(void *a1, const char *a2, ...)
{
  return [a1 freeTransformDidEnd];
}

id objc_msgSend_freeTransformGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 freeTransformGestureRecognizer];
}

id objc_msgSend_freeTransformInFlight(void *a1, const char *a2, ...)
{
  return [a1 freeTransformInFlight];
}

id objc_msgSend_freeTransformInteractionEnabledOverride(void *a1, const char *a2, ...)
{
  return [a1 freeTransformInteractionEnabledOverride];
}

id objc_msgSend_freeTransformLayer(void *a1, const char *a2, ...)
{
  return [a1 freeTransformLayer];
}

id objc_msgSend_freeTransformRepHandler(void *a1, const char *a2, ...)
{
  return [a1 freeTransformRepHandler];
}

id objc_msgSend_freeTransformWillBegin(void *a1, const char *a2, ...)
{
  return [a1 freeTransformWillBegin];
}

id objc_msgSend_freeTransformableHandler(void *a1, const char *a2, ...)
{
  return [a1 freeTransformableHandler];
}

id objc_msgSend_freeze(void *a1, const char *a2, ...)
{
  return [a1 freeze];
}

id objc_msgSend_frontLayer(void *a1, const char *a2, ...)
{
  return [a1 frontLayer];
}

id objc_msgSend_frontOrdinalText(void *a1, const char *a2, ...)
{
  return [a1 frontOrdinalText];
}

id objc_msgSend_frontTitleText(void *a1, const char *a2, ...)
{
  return [a1 frontTitleText];
}

id objc_msgSend_ftc(void *a1, const char *a2, ...)
{
  return [a1 ftc];
}

id objc_msgSend_ftcTargetFrame(void *a1, const char *a2, ...)
{
  return [a1 ftcTargetFrame];
}

id objc_msgSend_fullLineRect(void *a1, const char *a2, ...)
{
  return [a1 fullLineRect];
}

id objc_msgSend_fullTransform(void *a1, const char *a2, ...)
{
  return [a1 fullTransform];
}

id objc_msgSend_fullres(void *a1, const char *a2, ...)
{
  return [a1 fullres];
}

id objc_msgSend_fullresCropRect(void *a1, const char *a2, ...)
{
  return [a1 fullresCropRect];
}

id objc_msgSend_galleryCaptionMargin(void *a1, const char *a2, ...)
{
  return [a1 galleryCaptionMargin];
}

id objc_msgSend_galleryCaptionPosition(void *a1, const char *a2, ...)
{
  return [a1 galleryCaptionPosition];
}

id objc_msgSend_galleryCaptionStorage(void *a1, const char *a2, ...)
{
  return [a1 galleryCaptionStorage];
}

id objc_msgSend_galleryCaptionWidth(void *a1, const char *a2, ...)
{
  return [a1 galleryCaptionWidth];
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return [a1 generalPasteboard];
}

id objc_msgSend_generateSizedImageOnBackgroundThread(void *a1, const char *a2, ...)
{
  return [a1 generateSizedImageOnBackgroundThread];
}

id objc_msgSend_genre(void *a1, const char *a2, ...)
{
  return [a1 genre];
}

id objc_msgSend_geometry(void *a1, const char *a2, ...)
{
  return [a1 geometry];
}

id objc_msgSend_geometryInRoot(void *a1, const char *a2, ...)
{
  return [a1 geometryInRoot];
}

id objc_msgSend_gestureDispatcher(void *a1, const char *a2, ...)
{
  return [a1 gestureDispatcher];
}

id objc_msgSend_gestureKind(void *a1, const char *a2, ...)
{
  return [a1 gestureKind];
}

id objc_msgSend_gestureRecognizers(void *a1, const char *a2, ...)
{
  return [a1 gestureRecognizers];
}

id objc_msgSend_gestureState(void *a1, const char *a2, ...)
{
  return [a1 gestureState];
}

id objc_msgSend_getCount(void *a1, const char *a2, ...)
{
  return [a1 getCount];
}

id objc_msgSend_getEntry(void *a1, const char *a2, ...)
{
  return [a1 getEntry];
}

id objc_msgSend_getMessageTag(void *a1, const char *a2, ...)
{
  return [a1 getMessageTag];
}

id objc_msgSend_getMessageText(void *a1, const char *a2, ...)
{
  return [a1 getMessageText];
}

id objc_msgSend_globalPredicate(void *a1, const char *a2, ...)
{
  return [a1 globalPredicate];
}

id objc_msgSend_glossary(void *a1, const char *a2, ...)
{
  return [a1 glossary];
}

id objc_msgSend_glossaryController(void *a1, const char *a2, ...)
{
  return [a1 glossaryController];
}

id objc_msgSend_glossaryEntry(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntry];
}

id objc_msgSend_glossaryEntryLayout(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayout];
}

id objc_msgSend_glossaryEntryLayoutBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutBackgroundColor];
}

id objc_msgSend_glossaryEntryLayoutContentSize(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutContentSize];
}

id objc_msgSend_glossaryEntryLayoutFloatingStyle(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutFloatingStyle];
}

id objc_msgSend_glossaryEntryLayoutForegroundColor(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutForegroundColor];
}

id objc_msgSend_glossaryEntryLayoutHasFooter(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutHasFooter];
}

id objc_msgSend_glossaryEntryLayoutStyleProvider(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutStyleProvider];
}

id objc_msgSend_glossaryEntryLayoutViewFrame(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryLayoutViewFrame];
}

id objc_msgSend_glossaryEntryUri(void *a1, const char *a2, ...)
{
  return [a1 glossaryEntryUri];
}

id objc_msgSend_glossaryHitInfo(void *a1, const char *a2, ...)
{
  return [a1 glossaryHitInfo];
}

id objc_msgSend_glossaryIndex(void *a1, const char *a2, ...)
{
  return [a1 glossaryIndex];
}

id objc_msgSend_glossaryLinkResolver(void *a1, const char *a2, ...)
{
  return [a1 glossaryLinkResolver];
}

id objc_msgSend_glossaryPopoverNavController(void *a1, const char *a2, ...)
{
  return [a1 glossaryPopoverNavController];
}

id objc_msgSend_glossaryPopoverViewController(void *a1, const char *a2, ...)
{
  return [a1 glossaryPopoverViewController];
}

id objc_msgSend_glossaryPresenting(void *a1, const char *a2, ...)
{
  return [a1 glossaryPresenting];
}

id objc_msgSend_glossaryRangeInRep(void *a1, const char *a2, ...)
{
  return [a1 glossaryRangeInRep];
}

id objc_msgSend_glossaryRootView(void *a1, const char *a2, ...)
{
  return [a1 glossaryRootView];
}

id objc_msgSend_glossarySplitViewController(void *a1, const char *a2, ...)
{
  return [a1 glossarySplitViewController];
}

id objc_msgSend_glossaryTermExists(void *a1, const char *a2, ...)
{
  return [a1 glossaryTermExists];
}

id objc_msgSend_glossaryViewController(void *a1, const char *a2, ...)
{
  return [a1 glossaryViewController];
}

id objc_msgSend_gotoFirstSlide(void *a1, const char *a2, ...)
{
  return [a1 gotoFirstSlide];
}

id objc_msgSend_gotoLastEvent(void *a1, const char *a2, ...)
{
  return [a1 gotoLastEvent];
}

id objc_msgSend_gotoLastSlide(void *a1, const char *a2, ...)
{
  return [a1 gotoLastSlide];
}

id objc_msgSend_gotoNextEvent(void *a1, const char *a2, ...)
{
  return [a1 gotoNextEvent];
}

id objc_msgSend_gotoNextSlide(void *a1, const char *a2, ...)
{
  return [a1 gotoNextSlide];
}

id objc_msgSend_gotoPreviousSlide(void *a1, const char *a2, ...)
{
  return [a1 gotoPreviousSlide];
}

id objc_msgSend_gradientLayer(void *a1, const char *a2, ...)
{
  return [a1 gradientLayer];
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return [a1 grayColor];
}

id objc_msgSend_green(void *a1, const char *a2, ...)
{
  return [a1 green];
}

id objc_msgSend_greenColor(void *a1, const char *a2, ...)
{
  return [a1 greenColor];
}

id objc_msgSend_greenComponent(void *a1, const char *a2, ...)
{
  return [a1 greenComponent];
}

id objc_msgSend_groupShape(void *a1, const char *a2, ...)
{
  return [a1 groupShape];
}

id objc_msgSend_groupedBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 groupedBackgroundColor];
}

id objc_msgSend_guidedPanController(void *a1, const char *a2, ...)
{
  return [a1 guidedPanController];
}

id objc_msgSend_guidedPanFillScreenViewScale(void *a1, const char *a2, ...)
{
  return [a1 guidedPanFillScreenViewScale];
}

id objc_msgSend_guidedPanGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 guidedPanGestureRecognizer];
}

id objc_msgSend_guidedPanTargetIsTargeted(void *a1, const char *a2, ...)
{
  return [a1 guidedPanTargetIsTargeted];
}

id objc_msgSend_guidedPanTargetKind(void *a1, const char *a2, ...)
{
  return [a1 guidedPanTargetKind];
}

id objc_msgSend_guidedPanTargetUnscaledPageRect(void *a1, const char *a2, ...)
{
  return [a1 guidedPanTargetUnscaledPageRect];
}

id objc_msgSend_guidedPanTargetUnscaledRect(void *a1, const char *a2, ...)
{
  return [a1 guidedPanTargetUnscaledRect];
}

id objc_msgSend_guidedPanUnscaledPageSize(void *a1, const char *a2, ...)
{
  return [a1 guidedPanUnscaledPageSize];
}

id objc_msgSend_guidedPanWillBegin(void *a1, const char *a2, ...)
{
  return [a1 guidedPanWillBegin];
}

id objc_msgSend_guidedPanZoomedOutViewScale(void *a1, const char *a2, ...)
{
  return [a1 guidedPanZoomedOutViewScale];
}

id objc_msgSend_gutterDrawableStorage(void *a1, const char *a2, ...)
{
  return [a1 gutterDrawableStorage];
}

id objc_msgSend_gutterOrder(void *a1, const char *a2, ...)
{
  return [a1 gutterOrder];
}

id objc_msgSend_gutterWidth(void *a1, const char *a2, ...)
{
  return [a1 gutterWidth];
}

id objc_msgSend_handleNaturally(void *a1, const char *a2, ...)
{
  return [a1 handleNaturally];
}

id objc_msgSend_handleNavigateNextCommand(void *a1, const char *a2, ...)
{
  return [a1 handleNavigateNextCommand];
}

id objc_msgSend_handleNavigatePreviousCommand(void *a1, const char *a2, ...)
{
  return [a1 handleNavigatePreviousCommand];
}

id objc_msgSend_handlePressOnDoubleTap(void *a1, const char *a2, ...)
{
  return [a1 handlePressOnDoubleTap];
}

id objc_msgSend_handleViews(void *a1, const char *a2, ...)
{
  return [a1 handleViews];
}

id objc_msgSend_handler(void *a1, const char *a2, ...)
{
  return [a1 handler];
}

id objc_msgSend_hasActions(void *a1, const char *a2, ...)
{
  return [a1 hasActions];
}

id objc_msgSend_hasAlpha(void *a1, const char *a2, ...)
{
  return [a1 hasAlpha];
}

id objc_msgSend_hasBackContent(void *a1, const char *a2, ...)
{
  return [a1 hasBackContent];
}

id objc_msgSend_hasBeenRemoved(void *a1, const char *a2, ...)
{
  return [a1 hasBeenRemoved];
}

id objc_msgSend_hasBeenSized(void *a1, const char *a2, ...)
{
  return [a1 hasBeenSized];
}

id objc_msgSend_hasBody(void *a1, const char *a2, ...)
{
  return [a1 hasBody];
}

id objc_msgSend_hasBodyFlow(void *a1, const char *a2, ...)
{
  return [a1 hasBodyFlow];
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return [a1 hasChanges];
}

id objc_msgSend_hasChildrenForAdornmentInfo(void *a1, const char *a2, ...)
{
  return [a1 hasChildrenForAdornmentInfo];
}

id objc_msgSend_hasContinuousRotationAnimation(void *a1, const char *a2, ...)
{
  return [a1 hasContinuousRotationAnimation];
}

id objc_msgSend_hasDescription(void *a1, const char *a2, ...)
{
  return [a1 hasDescription];
}

id objc_msgSend_hasDoneLayout(void *a1, const char *a2, ...)
{
  return [a1 hasDoneLayout];
}

id objc_msgSend_hasEmbeddedAnimation(void *a1, const char *a2, ...)
{
  return [a1 hasEmbeddedAnimation];
}

id objc_msgSend_hasGlossaryTerms(void *a1, const char *a2, ...)
{
  return [a1 hasGlossaryTerms];
}

id objc_msgSend_hasHints(void *a1, const char *a2, ...)
{
  return [a1 hasHints];
}

id objc_msgSend_hasIntroPage(void *a1, const char *a2, ...)
{
  return [a1 hasIntroPage];
}

id objc_msgSend_hasLeftBorder(void *a1, const char *a2, ...)
{
  return [a1 hasLeftBorder];
}

id objc_msgSend_hasMaxValue(void *a1, const char *a2, ...)
{
  return [a1 hasMaxValue];
}

id objc_msgSend_hasMinValue(void *a1, const char *a2, ...)
{
  return [a1 hasMinValue];
}

id objc_msgSend_hasNextBookspot(void *a1, const char *a2, ...)
{
  return [a1 hasNextBookspot];
}

id objc_msgSend_hasPaginatedData(void *a1, const char *a2, ...)
{
  return [a1 hasPaginatedData];
}

id objc_msgSend_hasPrevBookspot(void *a1, const char *a2, ...)
{
  return [a1 hasPrevBookspot];
}

id objc_msgSend_hasRaisedViews(void *a1, const char *a2, ...)
{
  return [a1 hasRaisedViews];
}

id objc_msgSend_hasRendered(void *a1, const char *a2, ...)
{
  return [a1 hasRendered];
}

id objc_msgSend_hasRightBorder(void *a1, const char *a2, ...)
{
  return [a1 hasRightBorder];
}

id objc_msgSend_hasRoomForPanels(void *a1, const char *a2, ...)
{
  return [a1 hasRoomForPanels];
}

id objc_msgSend_hasSmartFields(void *a1, const char *a2, ...)
{
  return [a1 hasSmartFields];
}

id objc_msgSend_hasSpreadPages(void *a1, const char *a2, ...)
{
  return [a1 hasSpreadPages];
}

id objc_msgSend_hasTitle(void *a1, const char *a2, ...)
{
  return [a1 hasTitle];
}

id objc_msgSend_hasUserSelected(void *a1, const char *a2, ...)
{
  return [a1 hasUserSelected];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return [a1 hash];
}

id objc_msgSend_hashIncludingSize(void *a1, const char *a2, ...)
{
  return [a1 hashIncludingSize];
}

id objc_msgSend_headerImageViews(void *a1, const char *a2, ...)
{
  return [a1 headerImageViews];
}

id objc_msgSend_headerInfo(void *a1, const char *a2, ...)
{
  return [a1 headerInfo];
}

id objc_msgSend_headerLayout(void *a1, const char *a2, ...)
{
  return [a1 headerLayout];
}

id objc_msgSend_headerMaxSize(void *a1, const char *a2, ...)
{
  return [a1 headerMaxSize];
}

id objc_msgSend_headerTextColor(void *a1, const char *a2, ...)
{
  return [a1 headerTextColor];
}

id objc_msgSend_headerTextColorDimmed(void *a1, const char *a2, ...)
{
  return [a1 headerTextColorDimmed];
}

id objc_msgSend_headersData(void *a1, const char *a2, ...)
{
  return [a1 headersData];
}

id objc_msgSend_headersView(void *a1, const char *a2, ...)
{
  return [a1 headersView];
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return [a1 height];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return [a1 heightAnchor];
}

id objc_msgSend_heightOfTopZoneForDockingSwipe(void *a1, const char *a2, ...)
{
  return [a1 heightOfTopZoneForDockingSwipe];
}

id objc_msgSend_heightValid(void *a1, const char *a2, ...)
{
  return [a1 heightValid];
}

id objc_msgSend_helperCoverImage(void *a1, const char *a2, ...)
{
  return [a1 helperCoverImage];
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return [a1 hidden];
}

id objc_msgSend_hiddenColor(void *a1, const char *a2, ...)
{
  return [a1 hiddenColor];
}

id objc_msgSend_hiddenPlayButton(void *a1, const char *a2, ...)
{
  return [a1 hiddenPlayButton];
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return [a1 hide];
}

id objc_msgSend_hideAllAnnotationStyles(void *a1, const char *a2, ...)
{
  return [a1 hideAllAnnotationStyles];
}

id objc_msgSend_hideControls(void *a1, const char *a2, ...)
{
  return [a1 hideControls];
}

id objc_msgSend_hideEditMenu(void *a1, const char *a2, ...)
{
  return [a1 hideEditMenu];
}

id objc_msgSend_hideLeftNumericDisplay(void *a1, const char *a2, ...)
{
  return [a1 hideLeftNumericDisplay];
}

id objc_msgSend_hideLoadSpinner(void *a1, const char *a2, ...)
{
  return [a1 hideLoadSpinner];
}

id objc_msgSend_hideNavigationHistory(void *a1, const char *a2, ...)
{
  return [a1 hideNavigationHistory];
}

id objc_msgSend_hidePlayButton(void *a1, const char *a2, ...)
{
  return [a1 hidePlayButton];
}

id objc_msgSend_hideRightNumericDisplay(void *a1, const char *a2, ...)
{
  return [a1 hideRightNumericDisplay];
}

id objc_msgSend_hideScrollIndicators(void *a1, const char *a2, ...)
{
  return [a1 hideScrollIndicators];
}

id objc_msgSend_hideTOC(void *a1, const char *a2, ...)
{
  return [a1 hideTOC];
}

id objc_msgSend_highlight(void *a1, const char *a2, ...)
{
  return [a1 highlight];
}

id objc_msgSend_highlightAnnotations(void *a1, const char *a2, ...)
{
  return [a1 highlightAnnotations];
}

id objc_msgSend_highlightAnnotationsSortedByRange(void *a1, const char *a2, ...)
{
  return [a1 highlightAnnotationsSortedByRange];
}

id objc_msgSend_highlightColor(void *a1, const char *a2, ...)
{
  return [a1 highlightColor];
}

id objc_msgSend_highlightColorBar(void *a1, const char *a2, ...)
{
  return [a1 highlightColorBar];
}

id objc_msgSend_highlightColorBarDescent(void *a1, const char *a2, ...)
{
  return [a1 highlightColorBarDescent];
}

id objc_msgSend_highlightColorEditorController(void *a1, const char *a2, ...)
{
  return [a1 highlightColorEditorController];
}

id objc_msgSend_highlightController(void *a1, const char *a2, ...)
{
  return [a1 highlightController];
}

id objc_msgSend_highlightEditingWidthAdjustment(void *a1, const char *a2, ...)
{
  return [a1 highlightEditingWidthAdjustment];
}

id objc_msgSend_highlightGestureController(void *a1, const char *a2, ...)
{
  return [a1 highlightGestureController];
}

id objc_msgSend_highlightGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 highlightGestureRecognizer];
}

id objc_msgSend_highlightLayer(void *a1, const char *a2, ...)
{
  return [a1 highlightLayer];
}

id objc_msgSend_highlightLayers(void *a1, const char *a2, ...)
{
  return [a1 highlightLayers];
}

id objc_msgSend_highlightLeftInset(void *a1, const char *a2, ...)
{
  return [a1 highlightLeftInset];
}

id objc_msgSend_highlightRightInset(void *a1, const char *a2, ...)
{
  return [a1 highlightRightInset];
}

id objc_msgSend_highlightTextFrame(void *a1, const char *a2, ...)
{
  return [a1 highlightTextFrame];
}

id objc_msgSend_highlightView(void *a1, const char *a2, ...)
{
  return [a1 highlightView];
}

id objc_msgSend_highlighted(void *a1, const char *a2, ...)
{
  return [a1 highlighted];
}

id objc_msgSend_highlightedIndexPath(void *a1, const char *a2, ...)
{
  return [a1 highlightedIndexPath];
}

id objc_msgSend_highlightedRelativeRect(void *a1, const char *a2, ...)
{
  return [a1 highlightedRelativeRect];
}

id objc_msgSend_highlightedText(void *a1, const char *a2, ...)
{
  return [a1 highlightedText];
}

id objc_msgSend_hints(void *a1, const char *a2, ...)
{
  return [a1 hints];
}

id objc_msgSend_hintsCount(void *a1, const char *a2, ...)
{
  return [a1 hintsCount];
}

id objc_msgSend_hintsData(void *a1, const char *a2, ...)
{
  return [a1 hintsData];
}

id objc_msgSend_hitField(void *a1, const char *a2, ...)
{
  return [a1 hitField];
}

id objc_msgSend_hitRegionEdgeInsets(void *a1, const char *a2, ...)
{
  return [a1 hitRegionEdgeInsets];
}

id objc_msgSend_hitRep(void *a1, const char *a2, ...)
{
  return [a1 hitRep];
}

id objc_msgSend_hitTestOptions(void *a1, const char *a2, ...)
{
  return [a1 hitTestOptions];
}

id objc_msgSend_horizontalFlip(void *a1, const char *a2, ...)
{
  return [a1 horizontalFlip];
}

id objc_msgSend_horizontalOffset(void *a1, const char *a2, ...)
{
  return [a1 horizontalOffset];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return [a1 horizontalSizeClass];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return [a1 host];
}

id objc_msgSend_hostCanvasLayer(void *a1, const char *a2, ...)
{
  return [a1 hostCanvasLayer];
}

id objc_msgSend_hostICC(void *a1, const char *a2, ...)
{
  return [a1 hostICC];
}

id objc_msgSend_hostLayer(void *a1, const char *a2, ...)
{
  return [a1 hostLayer];
}

id objc_msgSend_hostView(void *a1, const char *a2, ...)
{
  return [a1 hostView];
}

id objc_msgSend_hosts(void *a1, const char *a2, ...)
{
  return [a1 hosts];
}

id objc_msgSend_hoverInteraction(void *a1, const char *a2, ...)
{
  return [a1 hoverInteraction];
}

id objc_msgSend_hovering(void *a1, const char *a2, ...)
{
  return [a1 hovering];
}

id objc_msgSend_href(void *a1, const char *a2, ...)
{
  return [a1 href];
}

id objc_msgSend_htmlReaderState(void *a1, const char *a2, ...)
{
  return [a1 htmlReaderState];
}

id objc_msgSend_hudExternalPadding(void *a1, const char *a2, ...)
{
  return [a1 hudExternalPadding];
}

id objc_msgSend_hudInternalPadding(void *a1, const char *a2, ...)
{
  return [a1 hudInternalPadding];
}

id objc_msgSend_hyperLinkedEvent(void *a1, const char *a2, ...)
{
  return [a1 hyperLinkedEvent];
}

id objc_msgSend_hyperlinkGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 hyperlinkGestureRecognizer];
}

id objc_msgSend_hyperlinkURL(void *a1, const char *a2, ...)
{
  return [a1 hyperlinkURL];
}

id objc_msgSend_iPad10SizeClassPredicate(void *a1, const char *a2, ...)
{
  return [a1 iPad10SizeClassPredicate];
}

id objc_msgSend_iPadOtherSizeClassPredicate(void *a1, const char *a2, ...)
{
  return [a1 iPadOtherSizeClassPredicate];
}

id objc_msgSend_iPadSizeClassPredicate(void *a1, const char *a2, ...)
{
  return [a1 iPadSizeClassPredicate];
}

id objc_msgSend_iTunesMobileContext(void *a1, const char *a2, ...)
{
  return [a1 iTunesMobileContext];
}

id objc_msgSend_icc(void *a1, const char *a2, ...)
{
  return [a1 icc];
}

id objc_msgSend_iconTextPopupHighlightUnderline(void *a1, const char *a2, ...)
{
  return [a1 iconTextPopupHighlightUnderline];
}

id objc_msgSend_idealWebFrame(void *a1, const char *a2, ...)
{
  return [a1 idealWebFrame];
}

id objc_msgSend_idealWebSize(void *a1, const char *a2, ...)
{
  return [a1 idealWebSize];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return [a1 identifier];
}

id objc_msgSend_idleAnimationBehavior(void *a1, const char *a2, ...)
{
  return [a1 idleAnimationBehavior];
}

id objc_msgSend_ignoreEquationAlignment(void *a1, const char *a2, ...)
{
  return [a1 ignoreEquationAlignment];
}

id objc_msgSend_ignoreTimeChangeUpdate(void *a1, const char *a2, ...)
{
  return [a1 ignoreTimeChangeUpdate];
}

id objc_msgSend_ignoresEventsOutsideCells(void *a1, const char *a2, ...)
{
  return [a1 ignoresEventsOutsideCells];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return [a1 image];
}

id objc_msgSend_imageAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 imageAccessibilityDescription];
}

id objc_msgSend_imageBorder(void *a1, const char *a2, ...)
{
  return [a1 imageBorder];
}

id objc_msgSend_imageBorderWidthConstraint(void *a1, const char *a2, ...)
{
  return [a1 imageBorderWidthConstraint];
}

id objc_msgSend_imageCropAnimationController(void *a1, const char *a2, ...)
{
  return [a1 imageCropAnimationController];
}

id objc_msgSend_imageDPI(void *a1, const char *a2, ...)
{
  return [a1 imageDPI];
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return [a1 imageData];
}

id objc_msgSend_imageFrame(void *a1, const char *a2, ...)
{
  return [a1 imageFrame];
}

id objc_msgSend_imageInfo(void *a1, const char *a2, ...)
{
  return [a1 imageInfo];
}

id objc_msgSend_imageIsAtSide(void *a1, const char *a2, ...)
{
  return [a1 imageIsAtSide];
}

id objc_msgSend_imageNameForPauseButton(void *a1, const char *a2, ...)
{
  return [a1 imageNameForPauseButton];
}

id objc_msgSend_imageNameForPauseButtonPressed(void *a1, const char *a2, ...)
{
  return [a1 imageNameForPauseButtonPressed];
}

id objc_msgSend_imageNameForPlayButton(void *a1, const char *a2, ...)
{
  return [a1 imageNameForPlayButton];
}

id objc_msgSend_imageNameForPlayButtonPressed(void *a1, const char *a2, ...)
{
  return [a1 imageNameForPlayButtonPressed];
}

id objc_msgSend_imagePlacement(void *a1, const char *a2, ...)
{
  return [a1 imagePlacement];
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return [a1 imageProperties];
}

id objc_msgSend_imageRef(void *a1, const char *a2, ...)
{
  return [a1 imageRef];
}

id objc_msgSend_imageSize(void *a1, const char *a2, ...)
{
  return [a1 imageSize];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return [a1 imageView];
}

id objc_msgSend_immediatePressGesture(void *a1, const char *a2, ...)
{
  return [a1 immediatePressGesture];
}

id objc_msgSend_inBody(void *a1, const char *a2, ...)
{
  return [a1 inBody];
}

id objc_msgSend_inFlowHeader(void *a1, const char *a2, ...)
{
  return [a1 inFlowHeader];
}

id objc_msgSend_inFlowMode(void *a1, const char *a2, ...)
{
  return [a1 inFlowMode];
}

id objc_msgSend_inFreeTransform(void *a1, const char *a2, ...)
{
  return [a1 inFreeTransform];
}

id objc_msgSend_inGuidedPan(void *a1, const char *a2, ...)
{
  return [a1 inGuidedPan];
}

id objc_msgSend_inHUDView(void *a1, const char *a2, ...)
{
  return [a1 inHUDView];
}

id objc_msgSend_inList(void *a1, const char *a2, ...)
{
  return [a1 inList];
}

id objc_msgSend_inLiveResize(void *a1, const char *a2, ...)
{
  return [a1 inLiveResize];
}

id objc_msgSend_inPaginatedMode(void *a1, const char *a2, ...)
{
  return [a1 inPaginatedMode];
}

id objc_msgSend_inResize(void *a1, const char *a2, ...)
{
  return [a1 inResize];
}

id objc_msgSend_inSizeTransition(void *a1, const char *a2, ...)
{
  return [a1 inSizeTransition];
}

id objc_msgSend_inTable(void *a1, const char *a2, ...)
{
  return [a1 inTable];
}

id objc_msgSend_includeInTOC(void *a1, const char *a2, ...)
{
  return [a1 includeInTOC];
}

id objc_msgSend_incorrectCount(void *a1, const char *a2, ...)
{
  return [a1 incorrectCount];
}

id objc_msgSend_incrementCurrentEventIndex(void *a1, const char *a2, ...)
{
  return [a1 incrementCurrentEventIndex];
}

id objc_msgSend_incrementCurrentSlideIndex(void *a1, const char *a2, ...)
{
  return [a1 incrementCurrentSlideIndex];
}

id objc_msgSend_indentLevel(void *a1, const char *a2, ...)
{
  return [a1 indentLevel];
}

id objc_msgSend_indentationWidth(void *a1, const char *a2, ...)
{
  return [a1 indentationWidth];
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return [a1 index];
}

id objc_msgSend_indexDividerLayout(void *a1, const char *a2, ...)
{
  return [a1 indexDividerLayout];
}

id objc_msgSend_indexLabelLayout(void *a1, const char *a2, ...)
{
  return [a1 indexLabelLayout];
}

id objc_msgSend_indexLayout(void *a1, const char *a2, ...)
{
  return [a1 indexLayout];
}

id objc_msgSend_indexLoaded(void *a1, const char *a2, ...)
{
  return [a1 indexLoaded];
}

id objc_msgSend_indexPath(void *a1, const char *a2, ...)
{
  return [a1 indexPath];
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return [a1 indexPathForSelectedRow];
}

id objc_msgSend_indexPathsForSelectedRows(void *a1, const char *a2, ...)
{
  return [a1 indexPathsForSelectedRows];
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return [a1 indexPathsForVisibleRows];
}

id objc_msgSend_indexProperties(void *a1, const char *a2, ...)
{
  return [a1 indexProperties];
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return [a1 indexSet];
}

id objc_msgSend_indirection(void *a1, const char *a2, ...)
{
  return [a1 indirection];
}

id objc_msgSend_individualCaptions(void *a1, const char *a2, ...)
{
  return [a1 individualCaptions];
}

id objc_msgSend_inflection(void *a1, const char *a2, ...)
{
  return [a1 inflection];
}

id objc_msgSend_inflections(void *a1, const char *a2, ...)
{
  return [a1 inflections];
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return [a1 info];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return [a1 infoDictionary];
}

id objc_msgSend_infoForPressable(void *a1, const char *a2, ...)
{
  return [a1 infoForPressable];
}

id objc_msgSend_infoGeometry(void *a1, const char *a2, ...)
{
  return [a1 infoGeometry];
}

id objc_msgSend_infos(void *a1, const char *a2, ...)
{
  return [a1 infos];
}

id objc_msgSend_infosForIDs(void *a1, const char *a2, ...)
{
  return [a1 infosForIDs];
}

id objc_msgSend_infosToDisplay(void *a1, const char *a2, ...)
{
  return [a1 infosToDisplay];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return [a1 init];
}

id objc_msgSend_initTOCSectionUIState(void *a1, const char *a2, ...)
{
  return [a1 initTOCSectionUIState];
}

id objc_msgSend_initWithDefaultView(void *a1, const char *a2, ...)
{
  return [a1 initWithDefaultView];
}

id objc_msgSend_initialConfiguration(void *a1, const char *a2, ...)
{
  return [a1 initialConfiguration];
}

id objc_msgSend_initialLayerPosition(void *a1, const char *a2, ...)
{
  return [a1 initialLayerPosition];
}

id objc_msgSend_initialLayerSize(void *a1, const char *a2, ...)
{
  return [a1 initialLayerSize];
}

id objc_msgSend_initialLocation1(void *a1, const char *a2, ...)
{
  return [a1 initialLocation1];
}

id objc_msgSend_initialLocation2(void *a1, const char *a2, ...)
{
  return [a1 initialLocation2];
}

id objc_msgSend_injectedWidgetObject(void *a1, const char *a2, ...)
{
  return [a1 injectedWidgetObject];
}

id objc_msgSend_innerClipView(void *a1, const char *a2, ...)
{
  return [a1 innerClipView];
}

id objc_msgSend_innerPathMaxRangeReader(void *a1, const char *a2, ...)
{
  return [a1 innerPathMaxRangeReader];
}

id objc_msgSend_innerPathReader(void *a1, const char *a2, ...)
{
  return [a1 innerPathReader];
}

id objc_msgSend_innermostElement(void *a1, const char *a2, ...)
{
  return [a1 innermostElement];
}

id objc_msgSend_input(void *a1, const char *a2, ...)
{
  return [a1 input];
}

id objc_msgSend_insertionOrder(void *a1, const char *a2, ...)
{
  return [a1 insertionOrder];
}

id objc_msgSend_instanceData(void *a1, const char *a2, ...)
{
  return [a1 instanceData];
}

id objc_msgSend_instructionalWPLayout(void *a1, const char *a2, ...)
{
  return [a1 instructionalWPLayout];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_interactionEnabled(void *a1, const char *a2, ...)
{
  return [a1 interactionEnabled];
}

id objc_msgSend_interactions(void *a1, const char *a2, ...)
{
  return [a1 interactions];
}

id objc_msgSend_interactiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 interactiveCanvasController];
}

id objc_msgSend_interactiveLayers(void *a1, const char *a2, ...)
{
  return [a1 interactiveLayers];
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return [a1 interfaceOrientation];
}

id objc_msgSend_interfaceStyle(void *a1, const char *a2, ...)
{
  return [a1 interfaceStyle];
}

id objc_msgSend_interiorWrapperLayer(void *a1, const char *a2, ...)
{
  return [a1 interiorWrapperLayer];
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return [a1 intrinsicContentSize];
}

id objc_msgSend_introMediaControllerIsActive(void *a1, const char *a2, ...)
{
  return [a1 introMediaControllerIsActive];
}

id objc_msgSend_introMediaControllerIsOffscreen(void *a1, const char *a2, ...)
{
  return [a1 introMediaControllerIsOffscreen];
}

id objc_msgSend_introMediaControllerMoviePlayerWillHideControls(void *a1, const char *a2, ...)
{
  return [a1 introMediaControllerMoviePlayerWillHideControls];
}

id objc_msgSend_introMediaControllerMoviePlayerWillShowControls(void *a1, const char *a2, ...)
{
  return [a1 introMediaControllerMoviePlayerWillShowControls];
}

id objc_msgSend_introMediaIsVideo(void *a1, const char *a2, ...)
{
  return [a1 introMediaIsVideo];
}

id objc_msgSend_introMediaUrl(void *a1, const char *a2, ...)
{
  return [a1 introMediaUrl];
}

id objc_msgSend_introMediaViewController(void *a1, const char *a2, ...)
{
  return [a1 introMediaViewController];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return [a1 invalidate];
}

id objc_msgSend_invalidateChildren(void *a1, const char *a2, ...)
{
  return [a1 invalidateChildren];
}

id objc_msgSend_invalidateExteriorWrap(void *a1, const char *a2, ...)
{
  return [a1 invalidateExteriorWrap];
}

id objc_msgSend_invalidateForSizeChange(void *a1, const char *a2, ...)
{
  return [a1 invalidateForSizeChange];
}

id objc_msgSend_invalidateFrame(void *a1, const char *a2, ...)
{
  return [a1 invalidateFrame];
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return [a1 invalidateIntrinsicContentSize];
}

id objc_msgSend_invalidateKnobs(void *a1, const char *a2, ...)
{
  return [a1 invalidateKnobs];
}

id objc_msgSend_invalidateLayers(void *a1, const char *a2, ...)
{
  return [a1 invalidateLayers];
}

id objc_msgSend_invalidateLayouts(void *a1, const char *a2, ...)
{
  return [a1 invalidateLayouts];
}

id objc_msgSend_invalidateLayoutsAndFrames(void *a1, const char *a2, ...)
{
  return [a1 invalidateLayoutsAndFrames];
}

id objc_msgSend_invalidateLineHints(void *a1, const char *a2, ...)
{
  return [a1 invalidateLineHints];
}

id objc_msgSend_invalidateMaxAutoGrowWidth(void *a1, const char *a2, ...)
{
  return [a1 invalidateMaxAutoGrowWidth];
}

id objc_msgSend_invalidatePaginationData(void *a1, const char *a2, ...)
{
  return [a1 invalidatePaginationData];
}

id objc_msgSend_invalidatePaginationResults(void *a1, const char *a2, ...)
{
  return [a1 invalidatePaginationResults];
}

id objc_msgSend_invalidateParentForWrap(void *a1, const char *a2, ...)
{
  return [a1 invalidateParentForWrap];
}

id objc_msgSend_invalidatePosition(void *a1, const char *a2, ...)
{
  return [a1 invalidatePosition];
}

id objc_msgSend_invalidateQuestionLayouts(void *a1, const char *a2, ...)
{
  return [a1 invalidateQuestionLayouts];
}

id objc_msgSend_invalidateReps(void *a1, const char *a2, ...)
{
  return [a1 invalidateReps];
}

id objc_msgSend_invalidateRepsInBackground(void *a1, const char *a2, ...)
{
  return [a1 invalidateRepsInBackground];
}

id objc_msgSend_invalidateSize(void *a1, const char *a2, ...)
{
  return [a1 invalidateSize];
}

id objc_msgSend_invalidateTextLayout(void *a1, const char *a2, ...)
{
  return [a1 invalidateTextLayout];
}

id objc_msgSend_invalidateTitleStyle(void *a1, const char *a2, ...)
{
  return [a1 invalidateTitleStyle];
}

id objc_msgSend_invalidateVisibleBounds(void *a1, const char *a2, ...)
{
  return [a1 invalidateVisibleBounds];
}

id objc_msgSend_inverseTransform(void *a1, const char *a2, ...)
{
  return [a1 inverseTransform];
}

id objc_msgSend_isAcceptableLeaf(void *a1, const char *a2, ...)
{
  return [a1 isAcceptableLeaf];
}

id objc_msgSend_isAccessibilityElement(void *a1, const char *a2, ...)
{
  return [a1 isAccessibilityElement];
}

id objc_msgSend_isAllNotes(void *a1, const char *a2, ...)
{
  return [a1 isAllNotes];
}

id objc_msgSend_isAncestorScrollViewDragging(void *a1, const char *a2, ...)
{
  return [a1 isAncestorScrollViewDragging];
}

id objc_msgSend_isAnchored(void *a1, const char *a2, ...)
{
  return [a1 isAnchored];
}

id objc_msgSend_isAnchoredToText(void *a1, const char *a2, ...)
{
  return [a1 isAnchoredToText];
}

id objc_msgSend_isAnimated(void *a1, const char *a2, ...)
{
  return [a1 isAnimated];
}

id objc_msgSend_isAnimating(void *a1, const char *a2, ...)
{
  return [a1 isAnimating];
}

id objc_msgSend_isAnnotationWriteEnabled(void *a1, const char *a2, ...)
{
  return [a1 isAnnotationWriteEnabled];
}

id objc_msgSend_isAtEnd(void *a1, const char *a2, ...)
{
  return [a1 isAtEnd];
}

id objc_msgSend_isAudioOnly(void *a1, const char *a2, ...)
{
  return [a1 isAudioOnly];
}

id objc_msgSend_isAutoNightModeEnabled(void *a1, const char *a2, ...)
{
  return [a1 isAutoNightModeEnabled];
}

id objc_msgSend_isAutomatic(void *a1, const char *a2, ...)
{
  return [a1 isAutomatic];
}

id objc_msgSend_isBackgroundSoundPlaying(void *a1, const char *a2, ...)
{
  return [a1 isBackgroundSoundPlaying];
}

id objc_msgSend_isBeingManipulated(void *a1, const char *a2, ...)
{
  return [a1 isBeingManipulated];
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return [a1 isBeingPresented];
}

id objc_msgSend_isBookEpub(void *a1, const char *a2, ...)
{
  return [a1 isBookEpub];
}

id objc_msgSend_isBookPortraitOnly(void *a1, const char *a2, ...)
{
  return [a1 isBookPortraitOnly];
}

id objc_msgSend_isBookmark(void *a1, const char *a2, ...)
{
  return [a1 isBookmark];
}

id objc_msgSend_isBookmarkApplicable(void *a1, const char *a2, ...)
{
  return [a1 isBookmarkApplicable];
}

id objc_msgSend_isBottomCard(void *a1, const char *a2, ...)
{
  return [a1 isBottomCard];
}

id objc_msgSend_isBuild(void *a1, const char *a2, ...)
{
  return [a1 isBuild];
}

id objc_msgSend_isBuildIn(void *a1, const char *a2, ...)
{
  return [a1 isBuildIn];
}

id objc_msgSend_isBuildOut(void *a1, const char *a2, ...)
{
  return [a1 isBuildOut];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return [a1 isCancelled];
}

id objc_msgSend_isCanvasInteractive(void *a1, const char *a2, ...)
{
  return [a1 isCanvasInteractive];
}

id objc_msgSend_isChapterGuidLink(void *a1, const char *a2, ...)
{
  return [a1 isChapterGuidLink];
}

id objc_msgSend_isChapterLink(void *a1, const char *a2, ...)
{
  return [a1 isChapterLink];
}

id objc_msgSend_isClosing(void *a1, const char *a2, ...)
{
  return [a1 isClosing];
}

id objc_msgSend_isCompact(void *a1, const char *a2, ...)
{
  return [a1 isCompact];
}

id objc_msgSend_isCompactFlowPresentation(void *a1, const char *a2, ...)
{
  return [a1 isCompactFlowPresentation];
}

id objc_msgSend_isCompactHeight(void *a1, const char *a2, ...)
{
  return [a1 isCompactHeight];
}

id objc_msgSend_isCompactWidth(void *a1, const char *a2, ...)
{
  return [a1 isCompactWidth];
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return [a1 isComplete];
}

id objc_msgSend_isCompleteBook(void *a1, const char *a2, ...)
{
  return [a1 isCompleteBook];
}

id objc_msgSend_isConnectedToInternet(void *a1, const char *a2, ...)
{
  return [a1 isConnectedToInternet];
}

id objc_msgSend_isContinuous(void *a1, const char *a2, ...)
{
  return [a1 isContinuous];
}

id objc_msgSend_isCorrupt(void *a1, const char *a2, ...)
{
  return [a1 isCorrupt];
}

id objc_msgSend_isCurrentPage(void *a1, const char *a2, ...)
{
  return [a1 isCurrentPage];
}

id objc_msgSend_isCurrentPageBookmarked(void *a1, const char *a2, ...)
{
  return [a1 isCurrentPageBookmarked];
}

id objc_msgSend_isCurrentlyCompact(void *a1, const char *a2, ...)
{
  return [a1 isCurrentlyCompact];
}

id objc_msgSend_isCurrentlyScrolling(void *a1, const char *a2, ...)
{
  return [a1 isCurrentlyScrolling];
}

id objc_msgSend_isCustom(void *a1, const char *a2, ...)
{
  return [a1 isCustom];
}

id objc_msgSend_isCustomPage(void *a1, const char *a2, ...)
{
  return [a1 isCustomPage];
}

id objc_msgSend_isDebuggingEnabled(void *a1, const char *a2, ...)
{
  return [a1 isDebuggingEnabled];
}

id objc_msgSend_isDecelerating(void *a1, const char *a2, ...)
{
  return [a1 isDecelerating];
}

id objc_msgSend_isDeviceSupported(void *a1, const char *a2, ...)
{
  return [a1 isDeviceSupported];
}

id objc_msgSend_isDirectory(void *a1, const char *a2, ...)
{
  return [a1 isDirectory];
}

id objc_msgSend_isDismissing(void *a1, const char *a2, ...)
{
  return [a1 isDismissing];
}

id objc_msgSend_isDocumentLoaded(void *a1, const char *a2, ...)
{
  return [a1 isDocumentLoaded];
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return [a1 isDragging];
}

id objc_msgSend_isDraggingTopCard(void *a1, const char *a2, ...)
{
  return [a1 isDraggingTopCard];
}

id objc_msgSend_isDraggingViaGuidedPan(void *a1, const char *a2, ...)
{
  return [a1 isDraggingViaGuidedPan];
}

id objc_msgSend_isDrawable(void *a1, const char *a2, ...)
{
  return [a1 isDrawable];
}

id objc_msgSend_isDynamic(void *a1, const char *a2, ...)
{
  return [a1 isDynamic];
}

id objc_msgSend_isEPUB(void *a1, const char *a2, ...)
{
  return [a1 isEPUB];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return [a1 isEditing];
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return [a1 isEmpty];
}

id objc_msgSend_isEmptyCard(void *a1, const char *a2, ...)
{
  return [a1 isEmptyCard];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return [a1 isEnabled];
}

id objc_msgSend_isEpub(void *a1, const char *a2, ...)
{
  return [a1 isEpub];
}

id objc_msgSend_isExpanded(void *a1, const char *a2, ...)
{
  return [a1 isExpanded];
}

id objc_msgSend_isExpandedOnly(void *a1, const char *a2, ...)
{
  return [a1 isExpandedOnly];
}

id objc_msgSend_isExpanding(void *a1, const char *a2, ...)
{
  return [a1 isExpanding];
}

id objc_msgSend_isFSOMovie(void *a1, const char *a2, ...)
{
  return [a1 isFSOMovie];
}

id objc_msgSend_isFault(void *a1, const char *a2, ...)
{
  return [a1 isFault];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return [a1 isFileURL];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return [a1 isFinished];
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return [a1 isFirstResponder];
}

id objc_msgSend_isFlipped(void *a1, const char *a2, ...)
{
  return [a1 isFlipped];
}

id objc_msgSend_isFloatingAboveText(void *a1, const char *a2, ...)
{
  return [a1 isFloatingAboveText];
}

id objc_msgSend_isFlow(void *a1, const char *a2, ...)
{
  return [a1 isFlow];
}

id objc_msgSend_isFocusedOnColumn(void *a1, const char *a2, ...)
{
  return [a1 isFocusedOnColumn];
}

id objc_msgSend_isFocusedOnTarget(void *a1, const char *a2, ...)
{
  return [a1 isFocusedOnTarget];
}

id objc_msgSend_isFollowingCellHighlighted(void *a1, const char *a2, ...)
{
  return [a1 isFollowingCellHighlighted];
}

id objc_msgSend_isFollowingCellSelected(void *a1, const char *a2, ...)
{
  return [a1 isFollowingCellSelected];
}

id objc_msgSend_isFrame(void *a1, const char *a2, ...)
{
  return [a1 isFrame];
}

id objc_msgSend_isFrameRenderer(void *a1, const char *a2, ...)
{
  return [a1 isFrameRenderer];
}

id objc_msgSend_isFreeTransformInProgress(void *a1, const char *a2, ...)
{
  return [a1 isFreeTransformInProgress];
}

id objc_msgSend_isGlossaryPresenting(void *a1, const char *a2, ...)
{
  return [a1 isGlossaryPresenting];
}

id objc_msgSend_isGlossaryVisible(void *a1, const char *a2, ...)
{
  return [a1 isGlossaryVisible];
}

id objc_msgSend_isHTMLWrap(void *a1, const char *a2, ...)
{
  return [a1 isHTMLWrap];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return [a1 isHidden];
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return [a1 isHighlighted];
}

id objc_msgSend_isHovering(void *a1, const char *a2, ...)
{
  return [a1 isHovering];
}

id objc_msgSend_isInFullscreen(void *a1, const char *a2, ...)
{
  return [a1 isInFullscreen];
}

id objc_msgSend_isInRoot(void *a1, const char *a2, ...)
{
  return [a1 isInRoot];
}

id objc_msgSend_isInUse(void *a1, const char *a2, ...)
{
  return [a1 isInUse];
}

id objc_msgSend_isInlineWithText(void *a1, const char *a2, ...)
{
  return [a1 isInlineWithText];
}

id objc_msgSend_isInsideWidget(void *a1, const char *a2, ...)
{
  return [a1 isInsideWidget];
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return [a1 isInternalInstall];
}

id objc_msgSend_isIntroMedia(void *a1, const char *a2, ...)
{
  return [a1 isIntroMedia];
}

id objc_msgSend_isKeyboardVisible(void *a1, const char *a2, ...)
{
  return [a1 isKeyboardVisible];
}

id objc_msgSend_isLaidOut(void *a1, const char *a2, ...)
{
  return [a1 isLaidOut];
}

id objc_msgSend_isLandscape(void *a1, const char *a2, ...)
{
  return [a1 isLandscape];
}

id objc_msgSend_isLayoutDisabled(void *a1, const char *a2, ...)
{
  return [a1 isLayoutDisabled];
}

id objc_msgSend_isLayoutOffscreen(void *a1, const char *a2, ...)
{
  return [a1 isLayoutOffscreen];
}

id objc_msgSend_isLegacy(void *a1, const char *a2, ...)
{
  return [a1 isLegacy];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return [a1 isLoaded];
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return [a1 isLoading];
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return [a1 isLocked];
}

id objc_msgSend_isLooping(void *a1, const char *a2, ...)
{
  return [a1 isLooping];
}

id objc_msgSend_isMagicMove(void *a1, const char *a2, ...)
{
  return [a1 isMagicMove];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return [a1 isMainThread];
}

id objc_msgSend_isManagedBook(void *a1, const char *a2, ...)
{
  return [a1 isManagedBook];
}

id objc_msgSend_isMaxXEdgeObscured(void *a1, const char *a2, ...)
{
  return [a1 isMaxXEdgeObscured];
}

id objc_msgSend_isMenuVisible(void *a1, const char *a2, ...)
{
  return [a1 isMenuVisible];
}

id objc_msgSend_isMetalEnabled(void *a1, const char *a2, ...)
{
  return [a1 isMetalEnabled];
}

id objc_msgSend_isMetalRenderer(void *a1, const char *a2, ...)
{
  return [a1 isMetalRenderer];
}

id objc_msgSend_isMetalTexture(void *a1, const char *a2, ...)
{
  return [a1 isMetalTexture];
}

id objc_msgSend_isMinibar(void *a1, const char *a2, ...)
{
  return [a1 isMinibar];
}

id objc_msgSend_isMotionBlurred(void *a1, const char *a2, ...)
{
  return [a1 isMotionBlurred];
}

id objc_msgSend_isMovie(void *a1, const char *a2, ...)
{
  return [a1 isMovie];
}

id objc_msgSend_isMoviePlaying(void *a1, const char *a2, ...)
{
  return [a1 isMoviePlaying];
}

id objc_msgSend_isMovingToParentViewController(void *a1, const char *a2, ...)
{
  return [a1 isMovingToParentViewController];
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return [a1 isMuted];
}

id objc_msgSend_isNavigationBarHidden(void *a1, const char *a2, ...)
{
  return [a1 isNavigationBarHidden];
}

id objc_msgSend_isNotesFullscreenVisible(void *a1, const char *a2, ...)
{
  return [a1 isNotesFullscreenVisible];
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return [a1 isOn];
}

id objc_msgSend_isOpaque(void *a1, const char *a2, ...)
{
  return [a1 isOpaque];
}

id objc_msgSend_isOrdinary(void *a1, const char *a2, ...)
{
  return [a1 isOrdinary];
}

id objc_msgSend_isOrphan(void *a1, const char *a2, ...)
{
  return [a1 isOrphan];
}

id objc_msgSend_isOrphanedNotes(void *a1, const char *a2, ...)
{
  return [a1 isOrphanedNotes];
}

id objc_msgSend_isOverscrolling(void *a1, const char *a2, ...)
{
  return [a1 isOverscrolling];
}

id objc_msgSend_isPageBookmarked(void *a1, const char *a2, ...)
{
  return [a1 isPageBookmarked];
}

id objc_msgSend_isPageLink(void *a1, const char *a2, ...)
{
  return [a1 isPageLink];
}

id objc_msgSend_isPaginated(void *a1, const char *a2, ...)
{
  return [a1 isPaginated];
}

id objc_msgSend_isPagingEnabled(void *a1, const char *a2, ...)
{
  return [a1 isPagingEnabled];
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return [a1 isPaused];
}

id objc_msgSend_isPlaceholder(void *a1, const char *a2, ...)
{
  return [a1 isPlaceholder];
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return [a1 isPlaying];
}

id objc_msgSend_isPopoverVisible(void *a1, const char *a2, ...)
{
  return [a1 isPopoverVisible];
}

id objc_msgSend_isPreorderBook(void *a1, const char *a2, ...)
{
  return [a1 isPreorderBook];
}

id objc_msgSend_isPressableAtPoint(void *a1, const char *a2, ...)
{
  return [a1 isPressableAtPoint];
}

id objc_msgSend_isPressed(void *a1, const char *a2, ...)
{
  return [a1 isPressed];
}

id objc_msgSend_isPreview(void *a1, const char *a2, ...)
{
  return [a1 isPreview];
}

id objc_msgSend_isQuickSpeakEnabled(void *a1, const char *a2, ...)
{
  return [a1 isQuickSpeakEnabled];
}

id objc_msgSend_isRange(void *a1, const char *a2, ...)
{
  return [a1 isRange];
}

id objc_msgSend_isReflowablePresentation(void *a1, const char *a2, ...)
{
  return [a1 isReflowablePresentation];
}

id objc_msgSend_isRelative(void *a1, const char *a2, ...)
{
  return [a1 isRelative];
}

id objc_msgSend_isRevealingTOC(void *a1, const char *a2, ...)
{
  return [a1 isRevealingTOC];
}

id objc_msgSend_isRotating(void *a1, const char *a2, ...)
{
  return [a1 isRotating];
}

id objc_msgSend_isSample(void *a1, const char *a2, ...)
{
  return [a1 isSample];
}

id objc_msgSend_isScroll(void *a1, const char *a2, ...)
{
  return [a1 isScroll];
}

id objc_msgSend_isScrollEnabled(void *a1, const char *a2, ...)
{
  return [a1 isScrollEnabled];
}

id objc_msgSend_isSearching(void *a1, const char *a2, ...)
{
  return [a1 isSearching];
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return [a1 isSelected];
}

id objc_msgSend_isSettledOnFirstOrLastPage(void *a1, const char *a2, ...)
{
  return [a1 isSettledOnFirstOrLastPage];
}

id objc_msgSend_isShowingEmptyStudyCard(void *a1, const char *a2, ...)
{
  return [a1 isShowingEmptyStudyCard];
}

id objc_msgSend_isStopped(void *a1, const char *a2, ...)
{
  return [a1 isStopped];
}

id objc_msgSend_isStoreBook(void *a1, const char *a2, ...)
{
  return [a1 isStoreBook];
}

id objc_msgSend_isStudyViewControllerVisible(void *a1, const char *a2, ...)
{
  return [a1 isStudyViewControllerVisible];
}

id objc_msgSend_isStylus(void *a1, const char *a2, ...)
{
  return [a1 isStylus];
}

id objc_msgSend_isSuccessful(void *a1, const char *a2, ...)
{
  return [a1 isSuccessful];
}

id objc_msgSend_isTOC(void *a1, const char *a2, ...)
{
  return [a1 isTOC];
}

id objc_msgSend_isTOCButtonApplicable(void *a1, const char *a2, ...)
{
  return [a1 isTOCButtonApplicable];
}

id objc_msgSend_isTOCVisible(void *a1, const char *a2, ...)
{
  return [a1 isTOCVisible];
}

id objc_msgSend_isTextResult(void *a1, const char *a2, ...)
{
  return [a1 isTextResult];
}

id objc_msgSend_isTitle(void *a1, const char *a2, ...)
{
  return [a1 isTitle];
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return [a1 isToolbarHidden];
}

id objc_msgSend_isTopCard(void *a1, const char *a2, ...)
{
  return [a1 isTopCard];
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return [a1 isTracking];
}

id objc_msgSend_isTransition(void *a1, const char *a2, ...)
{
  return [a1 isTransition];
}

id objc_msgSend_isTransitioning(void *a1, const char *a2, ...)
{
  return [a1 isTransitioning];
}

id objc_msgSend_isTransitioningToStop(void *a1, const char *a2, ...)
{
  return [a1 isTransitioningToStop];
}

id objc_msgSend_isTwoUp(void *a1, const char *a2, ...)
{
  return [a1 isTwoUp];
}

id objc_msgSend_isUnderline(void *a1, const char *a2, ...)
{
  return [a1 isUnderline];
}

id objc_msgSend_isUnfilteredContentAvailable(void *a1, const char *a2, ...)
{
  return [a1 isUnfilteredContentAvailable];
}

id objc_msgSend_isUnversioned(void *a1, const char *a2, ...)
{
  return [a1 isUnversioned];
}

id objc_msgSend_isUserInteractionEnabled(void *a1, const char *a2, ...)
{
  return [a1 isUserInteractionEnabled];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return [a1 isValid];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return [a1 isViewLoaded];
}

id objc_msgSend_isVisibleOnCanvas(void *a1, const char *a2, ...)
{
  return [a1 isVisibleOnCanvas];
}

id objc_msgSend_isWarmingUp(void *a1, const char *a2, ...)
{
  return [a1 isWarmingUp];
}

id objc_msgSend_isWebContentLoaded(void *a1, const char *a2, ...)
{
  return [a1 isWebContentLoaded];
}

id objc_msgSend_isZoomedOut(void *a1, const char *a2, ...)
{
  return [a1 isZoomedOut];
}

id objc_msgSend_isbn(void *a1, const char *a2, ...)
{
  return [a1 isbn];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return [a1 items];
}

id objc_msgSend_javascriptHandler(void *a1, const char *a2, ...)
{
  return [a1 javascriptHandler];
}

id objc_msgSend_justUpdatedPresentationType(void *a1, const char *a2, ...)
{
  return [a1 justUpdatedPresentationType];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return [a1 key];
}

id objc_msgSend_keyColor(void *a1, const char *a2, ...)
{
  return [a1 keyColor];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return [a1 keyEnumerator];
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return [a1 keyPath];
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return [a1 keyWindow];
}

id objc_msgSend_keyXmlAttributeName(void *a1, const char *a2, ...)
{
  return [a1 keyXmlAttributeName];
}

id objc_msgSend_keyboardFrame(void *a1, const char *a2, ...)
{
  return [a1 keyboardFrame];
}

id objc_msgSend_kiUanAfQBD5qIUraolUj(void *a1, const char *a2, ...)
{
  return [a1 kiUanAfQBD5qIUraolUj];
}

id objc_msgSend_killColumns(void *a1, const char *a2, ...)
{
  return [a1 killColumns];
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return [a1 kind];
}

id objc_msgSend_knob(void *a1, const char *a2, ...)
{
  return [a1 knob];
}

id objc_msgSend_knobDragGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 knobDragGestureRecognizer];
}

id objc_msgSend_knobTag(void *a1, const char *a2, ...)
{
  return [a1 knobTag];
}

id objc_msgSend_kpfDocument(void *a1, const char *a2, ...)
{
  return [a1 kpfDocument];
}

id objc_msgSend_kpfPlayer(void *a1, const char *a2, ...)
{
  return [a1 kpfPlayer];
}

id objc_msgSend_kpfPlayerControllerDelegate(void *a1, const char *a2, ...)
{
  return [a1 kpfPlayerControllerDelegate];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return [a1 label];
}

id objc_msgSend_labelClass(void *a1, const char *a2, ...)
{
  return [a1 labelClass];
}

id objc_msgSend_labelFrame(void *a1, const char *a2, ...)
{
  return [a1 labelFrame];
}

id objc_msgSend_labelWithHighlights(void *a1, const char *a2, ...)
{
  return [a1 labelWithHighlights];
}

id objc_msgSend_landscapeEntries(void *a1, const char *a2, ...)
{
  return [a1 landscapeEntries];
}

id objc_msgSend_landscapePredicate(void *a1, const char *a2, ...)
{
  return [a1 landscapePredicate];
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return [a1 language];
}

id objc_msgSend_largerTextConstraints(void *a1, const char *a2, ...)
{
  return [a1 largerTextConstraints];
}

id objc_msgSend_largerThumbs(void *a1, const char *a2, ...)
{
  return [a1 largerThumbs];
}

id objc_msgSend_lastAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return [a1 lastAbsolutePageIndex];
}

id objc_msgSend_lastAnalyticsDeviceOrientationReported(void *a1, const char *a2, ...)
{
  return [a1 lastAnalyticsDeviceOrientationReported];
}

id objc_msgSend_lastChildHint(void *a1, const char *a2, ...)
{
  return [a1 lastChildHint];
}

id objc_msgSend_lastColumn(void *a1, const char *a2, ...)
{
  return [a1 lastColumn];
}

id objc_msgSend_lastDragCenter(void *a1, const char *a2, ...)
{
  return [a1 lastDragCenter];
}

id objc_msgSend_lastHint(void *a1, const char *a2, ...)
{
  return [a1 lastHint];
}

id objc_msgSend_lastIndex(void *a1, const char *a2, ...)
{
  return [a1 lastIndex];
}

id objc_msgSend_lastLayoutBoundsSize(void *a1, const char *a2, ...)
{
  return [a1 lastLayoutBoundsSize];
}

id objc_msgSend_lastLayoutSize(void *a1, const char *a2, ...)
{
  return [a1 lastLayoutSize];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return [a1 lastObject];
}

id objc_msgSend_lastPage(void *a1, const char *a2, ...)
{
  return [a1 lastPage];
}

id objc_msgSend_lastPageInChapterString(void *a1, const char *a2, ...)
{
  return [a1 lastPageInChapterString];
}

id objc_msgSend_lastPageNumberUpdate(void *a1, const char *a2, ...)
{
  return [a1 lastPageNumberUpdate];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 lastPathComponent];
}

id objc_msgSend_lastPositionInRoot(void *a1, const char *a2, ...)
{
  return [a1 lastPositionInRoot];
}

id objc_msgSend_lastScrollOffset(void *a1, const char *a2, ...)
{
  return [a1 lastScrollOffset];
}

id objc_msgSend_lastStorageAnchor(void *a1, const char *a2, ...)
{
  return [a1 lastStorageAnchor];
}

id objc_msgSend_lastTarget(void *a1, const char *a2, ...)
{
  return [a1 lastTarget];
}

id objc_msgSend_lastVelocity(void *a1, const char *a2, ...)
{
  return [a1 lastVelocity];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return [a1 layer];
}

id objc_msgSend_layerFrameInScaledCanvas(void *a1, const char *a2, ...)
{
  return [a1 layerFrameInScaledCanvas];
}

id objc_msgSend_layerFrameInScaledCanvasRelativeToParent(void *a1, const char *a2, ...)
{
  return [a1 layerFrameInScaledCanvasRelativeToParent];
}

id objc_msgSend_layerHost(void *a1, const char *a2, ...)
{
  return [a1 layerHost];
}

id objc_msgSend_layerHostingView(void *a1, const char *a2, ...)
{
  return [a1 layerHostingView];
}

id objc_msgSend_layerSaveRestore(void *a1, const char *a2, ...)
{
  return [a1 layerSaveRestore];
}

id objc_msgSend_layerSize(void *a1, const char *a2, ...)
{
  return [a1 layerSize];
}

id objc_msgSend_layers(void *a1, const char *a2, ...)
{
  return [a1 layers];
}

id objc_msgSend_layout(void *a1, const char *a2, ...)
{
  return [a1 layout];
}

id objc_msgSend_layoutClass(void *a1, const char *a2, ...)
{
  return [a1 layoutClass];
}

id objc_msgSend_layoutContext(void *a1, const char *a2, ...)
{
  return [a1 layoutContext];
}

id objc_msgSend_layoutController(void *a1, const char *a2, ...)
{
  return [a1 layoutController];
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return [a1 layoutFrame];
}

id objc_msgSend_layoutGeometryFromInfo(void *a1, const char *a2, ...)
{
  return [a1 layoutGeometryFromInfo];
}

id objc_msgSend_layoutHeaders(void *a1, const char *a2, ...)
{
  return [a1 layoutHeaders];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 layoutIfNeeded];
}

id objc_msgSend_layoutInvalidated(void *a1, const char *a2, ...)
{
  return [a1 layoutInvalidated];
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return [a1 layoutMarginsGuide];
}

id objc_msgSend_layoutMode(void *a1, const char *a2, ...)
{
  return [a1 layoutMode];
}

id objc_msgSend_layoutOrientation(void *a1, const char *a2, ...)
{
  return [a1 layoutOrientation];
}

id objc_msgSend_layoutPanel(void *a1, const char *a2, ...)
{
  return [a1 layoutPanel];
}

id objc_msgSend_layoutRect(void *a1, const char *a2, ...)
{
  return [a1 layoutRect];
}

id objc_msgSend_layoutRequirementsProvider(void *a1, const char *a2, ...)
{
  return [a1 layoutRequirementsProvider];
}

id objc_msgSend_layoutScrollView(void *a1, const char *a2, ...)
{
  return [a1 layoutScrollView];
}

id objc_msgSend_layoutScrubberCallout(void *a1, const char *a2, ...)
{
  return [a1 layoutScrubberCallout];
}

id objc_msgSend_layoutStyleProvider(void *a1, const char *a2, ...)
{
  return [a1 layoutStyleProvider];
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return [a1 layoutSubviews];
}

id objc_msgSend_layoutSubviewsWithPill(void *a1, const char *a2, ...)
{
  return [a1 layoutSubviewsWithPill];
}

id objc_msgSend_layoutSubviewsWithoutPill(void *a1, const char *a2, ...)
{
  return [a1 layoutSubviewsWithoutPill];
}

id objc_msgSend_layoutTransportUI(void *a1, const char *a2, ...)
{
  return [a1 layoutTransportUI];
}

id objc_msgSend_layouts(void *a1, const char *a2, ...)
{
  return [a1 layouts];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return [a1 leadingAnchor];
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return [a1 leftAnchor];
}

id objc_msgSend_leftMargin(void *a1, const char *a2, ...)
{
  return [a1 leftMargin];
}

id objc_msgSend_leftOverscrollView(void *a1, const char *a2, ...)
{
  return [a1 leftOverscrollView];
}

id objc_msgSend_leftPadding(void *a1, const char *a2, ...)
{
  return [a1 leftPadding];
}

id objc_msgSend_leftView(void *a1, const char *a2, ...)
{
  return [a1 leftView];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_letterCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 letterCharacterSet];
}

id objc_msgSend_libraryMgr(void *a1, const char *a2, ...)
{
  return [a1 libraryMgr];
}

id objc_msgSend_lifeSpan(void *a1, const char *a2, ...)
{
  return [a1 lifeSpan];
}

id objc_msgSend_lifeSpanAttribute(void *a1, const char *a2, ...)
{
  return [a1 lifeSpanAttribute];
}

id objc_msgSend_lifeSpanDelay(void *a1, const char *a2, ...)
{
  return [a1 lifeSpanDelay];
}

id objc_msgSend_lifeSpanMinDuration(void *a1, const char *a2, ...)
{
  return [a1 lifeSpanMinDuration];
}

id objc_msgSend_lifeSpanRandomness(void *a1, const char *a2, ...)
{
  return [a1 lifeSpanRandomness];
}

id objc_msgSend_light(void *a1, const char *a2, ...)
{
  return [a1 light];
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return [a1 lightGrayColor];
}

id objc_msgSend_likelyHighlightGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 likelyHighlightGestureRecognizer];
}

id objc_msgSend_line(void *a1, const char *a2, ...)
{
  return [a1 line];
}

id objc_msgSend_lineBreakMode(void *a1, const char *a2, ...)
{
  return [a1 lineBreakMode];
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return [a1 lineHeight];
}

id objc_msgSend_lineHints(void *a1, const char *a2, ...)
{
  return [a1 lineHints];
}

id objc_msgSend_lineMetrics(void *a1, const char *a2, ...)
{
  return [a1 lineMetrics];
}

id objc_msgSend_lineShadow(void *a1, const char *a2, ...)
{
  return [a1 lineShadow];
}

id objc_msgSend_lineSpacing(void *a1, const char *a2, ...)
{
  return [a1 lineSpacing];
}

id objc_msgSend_lines(void *a1, const char *a2, ...)
{
  return [a1 lines];
}

id objc_msgSend_link(void *a1, const char *a2, ...)
{
  return [a1 link];
}

id objc_msgSend_linkField(void *a1, const char *a2, ...)
{
  return [a1 linkField];
}

id objc_msgSend_linkPulseActivationTime(void *a1, const char *a2, ...)
{
  return [a1 linkPulseActivationTime];
}

id objc_msgSend_linkPulseSearchReferences(void *a1, const char *a2, ...)
{
  return [a1 linkPulseSearchReferences];
}

id objc_msgSend_linksInfo(void *a1, const char *a2, ...)
{
  return [a1 linksInfo];
}

id objc_msgSend_listLevel(void *a1, const char *a2, ...)
{
  return [a1 listLevel];
}

id objc_msgSend_listStart(void *a1, const char *a2, ...)
{
  return [a1 listStart];
}

id objc_msgSend_listStyle(void *a1, const char *a2, ...)
{
  return [a1 listStyle];
}

id objc_msgSend_loadCompletions(void *a1, const char *a2, ...)
{
  return [a1 loadCompletions];
}

id objc_msgSend_loadContentNode(void *a1, const char *a2, ...)
{
  return [a1 loadContentNode];
}

id objc_msgSend_loadCoreData(void *a1, const char *a2, ...)
{
  return [a1 loadCoreData];
}

id objc_msgSend_loadDelegate(void *a1, const char *a2, ...)
{
  return [a1 loadDelegate];
}

id objc_msgSend_loadEpubContentNode(void *a1, const char *a2, ...)
{
  return [a1 loadEpubContentNode];
}

id objc_msgSend_loadEquationFontsIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 loadEquationFontsIfNeeded];
}

id objc_msgSend_loadExtraAccessibilitySupport(void *a1, const char *a2, ...)
{
  return [a1 loadExtraAccessibilitySupport];
}

id objc_msgSend_loadIndex(void *a1, const char *a2, ...)
{
  return [a1 loadIndex];
}

id objc_msgSend_loadMetadata(void *a1, const char *a2, ...)
{
  return [a1 loadMetadata];
}

id objc_msgSend_loadNavigationPageContentNode(void *a1, const char *a2, ...)
{
  return [a1 loadNavigationPageContentNode];
}

id objc_msgSend_loadPaginationCache(void *a1, const char *a2, ...)
{
  return [a1 loadPaginationCache];
}

id objc_msgSend_loadPluginIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 loadPluginIfNeeded];
}

id objc_msgSend_loadPropertiesIfNecessary(void *a1, const char *a2, ...)
{
  return [a1 loadPropertiesIfNecessary];
}

id objc_msgSend_loadQueue(void *a1, const char *a2, ...)
{
  return [a1 loadQueue];
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 loadViewIfNeeded];
}

id objc_msgSend_loaded(void *a1, const char *a2, ...)
{
  return [a1 loaded];
}

id objc_msgSend_loading(void *a1, const char *a2, ...)
{
  return [a1 loading];
}

id objc_msgSend_loadingQueue(void *a1, const char *a2, ...)
{
  return [a1 loadingQueue];
}

id objc_msgSend_loanedSceneController(void *a1, const char *a2, ...)
{
  return [a1 loanedSceneController];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return [a1 localizedDescription];
}

id objc_msgSend_location1(void *a1, const char *a2, ...)
{
  return [a1 location1];
}

id objc_msgSend_location2(void *a1, const char *a2, ...)
{
  return [a1 location2];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return [a1 lock];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return [a1 longLongValue];
}

id objc_msgSend_longPressGR(void *a1, const char *a2, ...)
{
  return [a1 longPressGR];
}

id objc_msgSend_lookupController(void *a1, const char *a2, ...)
{
  return [a1 lookupController];
}

id objc_msgSend_loopOption(void *a1, const char *a2, ...)
{
  return [a1 loopOption];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return [a1 lowercaseString];
}

id objc_msgSend_luminance(void *a1, const char *a2, ...)
{
  return [a1 luminance];
}

id objc_msgSend_magicMoveMatches(void *a1, const char *a2, ...)
{
  return [a1 magicMoveMatches];
}

id objc_msgSend_magnifierBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 magnifierBackgroundColor];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return [a1 mainBundle];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return [a1 mainQueue];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return [a1 mainRunLoop];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return [a1 mainScreen];
}

id objc_msgSend_mainThread(void *a1, const char *a2, ...)
{
  return [a1 mainThread];
}

id objc_msgSend_mainView(void *a1, const char *a2, ...)
{
  return [a1 mainView];
}

id objc_msgSend_majorSnippet(void *a1, const char *a2, ...)
{
  return [a1 majorSnippet];
}

id objc_msgSend_majorVersion(void *a1, const char *a2, ...)
{
  return [a1 majorVersion];
}

id objc_msgSend_makeAVAsset(void *a1, const char *a2, ...)
{
  return [a1 makeAVAsset];
}

id objc_msgSend_makeKeyWindow(void *a1, const char *a2, ...)
{
  return [a1 makeKeyWindow];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return [a1 managedObjectContext];
}

id objc_msgSend_managedObjectContextDidSaveObserver(void *a1, const char *a2, ...)
{
  return [a1 managedObjectContextDidSaveObserver];
}

id objc_msgSend_managedObjectContextSaveObserver(void *a1, const char *a2, ...)
{
  return [a1 managedObjectContextSaveObserver];
}

id objc_msgSend_managedObjectModel(void *a1, const char *a2, ...)
{
  return [a1 managedObjectModel];
}

id objc_msgSend_mappingClass(void *a1, const char *a2, ...)
{
  return [a1 mappingClass];
}

id objc_msgSend_margin(void *a1, const char *a2, ...)
{
  return [a1 margin];
}

id objc_msgSend_marginAboveNote(void *a1, const char *a2, ...)
{
  return [a1 marginAboveNote];
}

id objc_msgSend_marginAboveSeparator(void *a1, const char *a2, ...)
{
  return [a1 marginAboveSeparator];
}

id objc_msgSend_marginAfter(void *a1, const char *a2, ...)
{
  return [a1 marginAfter];
}

id objc_msgSend_marginBefore(void *a1, const char *a2, ...)
{
  return [a1 marginBefore];
}

id objc_msgSend_marginNote(void *a1, const char *a2, ...)
{
  return [a1 marginNote];
}

id objc_msgSend_marginNotesController(void *a1, const char *a2, ...)
{
  return [a1 marginNotesController];
}

id objc_msgSend_marginNotesGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 marginNotesGestureRecognizer];
}

id objc_msgSend_marginNotesOwner(void *a1, const char *a2, ...)
{
  return [a1 marginNotesOwner];
}

id objc_msgSend_mask(void *a1, const char *a2, ...)
{
  return [a1 mask];
}

id objc_msgSend_maskGroupVerticalInset(void *a1, const char *a2, ...)
{
  return [a1 maskGroupVerticalInset];
}

id objc_msgSend_maskInfo(void *a1, const char *a2, ...)
{
  return [a1 maskInfo];
}

id objc_msgSend_maskLayer(void *a1, const char *a2, ...)
{
  return [a1 maskLayer];
}

id objc_msgSend_maskLayerOrigin(void *a1, const char *a2, ...)
{
  return [a1 maskLayerOrigin];
}

id objc_msgSend_masksToBounds(void *a1, const char *a2, ...)
{
  return [a1 masksToBounds];
}

id objc_msgSend_masterNavigationController(void *a1, const char *a2, ...)
{
  return [a1 masterNavigationController];
}

id objc_msgSend_maxAnnotationAssetVersion(void *a1, const char *a2, ...)
{
  return [a1 maxAnnotationAssetVersion];
}

id objc_msgSend_maxCalloutFrameWidth(void *a1, const char *a2, ...)
{
  return [a1 maxCalloutFrameWidth];
}

id objc_msgSend_maxContentHeight(void *a1, const char *a2, ...)
{
  return [a1 maxContentHeight];
}

id objc_msgSend_maxLines(void *a1, const char *a2, ...)
{
  return [a1 maxLines];
}

id objc_msgSend_maxNoteLabelLines(void *a1, const char *a2, ...)
{
  return [a1 maxNoteLabelLines];
}

id objc_msgSend_maxScale(void *a1, const char *a2, ...)
{
  return [a1 maxScale];
}

id objc_msgSend_maxSize(void *a1, const char *a2, ...)
{
  return [a1 maxSize];
}

id objc_msgSend_maxSpeed(void *a1, const char *a2, ...)
{
  return [a1 maxSpeed];
}

id objc_msgSend_maxValue(void *a1, const char *a2, ...)
{
  return [a1 maxValue];
}

id objc_msgSend_maxWidth(void *a1, const char *a2, ...)
{
  return [a1 maxWidth];
}

id objc_msgSend_maximumContentSize(void *a1, const char *a2, ...)
{
  return [a1 maximumContentSize];
}

id objc_msgSend_maximumHeight(void *a1, const char *a2, ...)
{
  return [a1 maximumHeight];
}

id objc_msgSend_maximumNumberOfThumbsToLeftOfLeftmostDuringBackgroundDrag(void *a1, const char *a2, ...)
{
  return [a1 maximumNumberOfThumbsToLeftOfLeftmostDuringBackgroundDrag];
}

id objc_msgSend_maximumNumberOfThumbsToRightOfLeftmostDuringBackgroundDrag(void *a1, const char *a2, ...)
{
  return [a1 maximumNumberOfThumbsToRightOfLeftmostDuringBackgroundDrag];
}

id objc_msgSend_maximumNumberOfTouches(void *a1, const char *a2, ...)
{
  return [a1 maximumNumberOfTouches];
}

id objc_msgSend_maximumPinchViewScale(void *a1, const char *a2, ...)
{
  return [a1 maximumPinchViewScale];
}

id objc_msgSend_maximumPressDuration(void *a1, const char *a2, ...)
{
  return [a1 maximumPressDuration];
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return [a1 maximumValue];
}

id objc_msgSend_mediaDidStop(void *a1, const char *a2, ...)
{
  return [a1 mediaDidStop];
}

id objc_msgSend_mediaListener(void *a1, const char *a2, ...)
{
  return [a1 mediaListener];
}

id objc_msgSend_mediaPlaybackIsPaused(void *a1, const char *a2, ...)
{
  return [a1 mediaPlaybackIsPaused];
}

id objc_msgSend_mediaSearchResults(void *a1, const char *a2, ...)
{
  return [a1 mediaSearchResults];
}

id objc_msgSend_mediumDashPattern(void *a1, const char *a2, ...)
{
  return [a1 mediumDashPattern];
}

id objc_msgSend_meetsStageDimensionRequirementForExpanded(void *a1, const char *a2, ...)
{
  return [a1 meetsStageDimensionRequirementForExpanded];
}

id objc_msgSend_megaPadSizeClassPredicate(void *a1, const char *a2, ...)
{
  return [a1 megaPadSizeClassPredicate];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return [a1 metadata];
}

id objc_msgSend_metalContext(void *a1, const char *a2, ...)
{
  return [a1 metalContext];
}

id objc_msgSend_metalDevice(void *a1, const char *a2, ...)
{
  return [a1 metalDevice];
}

id objc_msgSend_metalPoint3DRandomDirection(void *a1, const char *a2, ...)
{
  return [a1 metalPoint3DRandomDirection];
}

id objc_msgSend_metalTexture(void *a1, const char *a2, ...)
{
  return [a1 metalTexture];
}

id objc_msgSend_microseconds(void *a1, const char *a2, ...)
{
  return [a1 microseconds];
}

id objc_msgSend_mimeType(void *a1, const char *a2, ...)
{
  return [a1 mimeType];
}

id objc_msgSend_minContentSize(void *a1, const char *a2, ...)
{
  return [a1 minContentSize];
}

id objc_msgSend_minScale(void *a1, const char *a2, ...)
{
  return [a1 minScale];
}

id objc_msgSend_minValue(void *a1, const char *a2, ...)
{
  return [a1 minValue];
}

id objc_msgSend_minWidthToShowScrubberEndTime(void *a1, const char *a2, ...)
{
  return [a1 minWidthToShowScrubberEndTime];
}

id objc_msgSend_minWidthToShowScrubberStartTime(void *a1, const char *a2, ...)
{
  return [a1 minWidthToShowScrubberStartTime];
}

id objc_msgSend_minifiedControllerLoadedAssetViewController(void *a1, const char *a2, ...)
{
  return [a1 minifiedControllerLoadedAssetViewController];
}

id objc_msgSend_minimizeLayoutPadding(void *a1, const char *a2, ...)
{
  return [a1 minimizeLayoutPadding];
}

id objc_msgSend_minimumContentSize(void *a1, const char *a2, ...)
{
  return [a1 minimumContentSize];
}

id objc_msgSend_minimumHeight(void *a1, const char *a2, ...)
{
  return [a1 minimumHeight];
}

id objc_msgSend_minimumNumberOfTouches(void *a1, const char *a2, ...)
{
  return [a1 minimumNumberOfTouches];
}

id objc_msgSend_minimumPinchViewScale(void *a1, const char *a2, ...)
{
  return [a1 minimumPinchViewScale];
}

id objc_msgSend_minimumPressDuration(void *a1, const char *a2, ...)
{
  return [a1 minimumPressDuration];
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return [a1 minimumValue];
}

id objc_msgSend_minorSnippet(void *a1, const char *a2, ...)
{
  return [a1 minorSnippet];
}

id objc_msgSend_minorVersion(void *a1, const char *a2, ...)
{
  return [a1 minorVersion];
}

id objc_msgSend_missingCount(void *a1, const char *a2, ...)
{
  return [a1 missingCount];
}

id objc_msgSend_miterLimit(void *a1, const char *a2, ...)
{
  return [a1 miterLimit];
}

id objc_msgSend_moc(void *a1, const char *a2, ...)
{
  return [a1 moc];
}

id objc_msgSend_modalPresentationStyle(void *a1, const char *a2, ...)
{
  return [a1 modalPresentationStyle];
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return [a1 mode];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return [a1 model];
}

id objc_msgSend_modelBodyInfos(void *a1, const char *a2, ...)
{
  return [a1 modelBodyInfos];
}

id objc_msgSend_modelLink(void *a1, const char *a2, ...)
{
  return [a1 modelLink];
}

id objc_msgSend_modificationDate(void *a1, const char *a2, ...)
{
  return [a1 modificationDate];
}

id objc_msgSend_modifierFlags(void *a1, const char *a2, ...)
{
  return [a1 modifierFlags];
}

id objc_msgSend_moveFirstObjectToLast(void *a1, const char *a2, ...)
{
  return [a1 moveFirstObjectToLast];
}

id objc_msgSend_moveLastObjectToFirst(void *a1, const char *a2, ...)
{
  return [a1 moveLastObjectToFirst];
}

id objc_msgSend_movements(void *a1, const char *a2, ...)
{
  return [a1 movements];
}

id objc_msgSend_movieData(void *a1, const char *a2, ...)
{
  return [a1 movieData];
}

id objc_msgSend_movieInfo(void *a1, const char *a2, ...)
{
  return [a1 movieInfo];
}

id objc_msgSend_movieIsAtEnd(void *a1, const char *a2, ...)
{
  return [a1 movieIsAtEnd];
}

id objc_msgSend_movieIsPlaying(void *a1, const char *a2, ...)
{
  return [a1 movieIsPlaying];
}

id objc_msgSend_movieLayout(void *a1, const char *a2, ...)
{
  return [a1 movieLayout];
}

id objc_msgSend_moviePlayerControllerIsLoaded(void *a1, const char *a2, ...)
{
  return [a1 moviePlayerControllerIsLoaded];
}

id objc_msgSend_moviePlayerControllerIsShowing(void *a1, const char *a2, ...)
{
  return [a1 moviePlayerControllerIsShowing];
}

id objc_msgSend_moviePlayerViewController(void *a1, const char *a2, ...)
{
  return [a1 moviePlayerViewController];
}

id objc_msgSend_movieRemoteURL(void *a1, const char *a2, ...)
{
  return [a1 movieRemoteURL];
}

id objc_msgSend_movieRep(void *a1, const char *a2, ...)
{
  return [a1 movieRep];
}

id objc_msgSend_movieUIView(void *a1, const char *a2, ...)
{
  return [a1 movieUIView];
}

id objc_msgSend_movieViewController(void *a1, const char *a2, ...)
{
  return [a1 movieViewController];
}

id objc_msgSend_multiLevelIndent(void *a1, const char *a2, ...)
{
  return [a1 multiLevelIndent];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return [a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_myTableViewController(void *a1, const char *a2, ...)
{
  return [a1 myTableViewController];
}

id objc_msgSend_myView(void *a1, const char *a2, ...)
{
  return [a1 myView];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return [a1 name];
}

id objc_msgSend_namespaceCheck(void *a1, const char *a2, ...)
{
  return [a1 namespaceCheck];
}

id objc_msgSend_naturalBounds(void *a1, const char *a2, ...)
{
  return [a1 naturalBounds];
}

id objc_msgSend_naturalBoundsForHitTesting(void *a1, const char *a2, ...)
{
  return [a1 naturalBoundsForHitTesting];
}

id objc_msgSend_naturalSize(void *a1, const char *a2, ...)
{
  return [a1 naturalSize];
}

id objc_msgSend_navOverlayPageNumberView(void *a1, const char *a2, ...)
{
  return [a1 navOverlayPageNumberView];
}

id objc_msgSend_navigableLayouts(void *a1, const char *a2, ...)
{
  return [a1 navigableLayouts];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return [a1 navigationBar];
}

id objc_msgSend_navigationBarController(void *a1, const char *a2, ...)
{
  return [a1 navigationBarController];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return [a1 navigationController];
}

id objc_msgSend_navigationDelegate(void *a1, const char *a2, ...)
{
  return [a1 navigationDelegate];
}

id objc_msgSend_navigationHistoryStepperController(void *a1, const char *a2, ...)
{
  return [a1 navigationHistoryStepperController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return [a1 navigationItem];
}

id objc_msgSend_navigationModel(void *a1, const char *a2, ...)
{
  return [a1 navigationModel];
}

id objc_msgSend_navigationOverlayContainer(void *a1, const char *a2, ...)
{
  return [a1 navigationOverlayContainer];
}

id objc_msgSend_navigationOverlayView(void *a1, const char *a2, ...)
{
  return [a1 navigationOverlayView];
}

id objc_msgSend_navigationPageNode(void *a1, const char *a2, ...)
{
  return [a1 navigationPageNode];
}

id objc_msgSend_navigationType(void *a1, const char *a2, ...)
{
  return [a1 navigationType];
}

id objc_msgSend_navigationUnits(void *a1, const char *a2, ...)
{
  return [a1 navigationUnits];
}

id objc_msgSend_navigator(void *a1, const char *a2, ...)
{
  return [a1 navigator];
}

id objc_msgSend_ncxAdditions(void *a1, const char *a2, ...)
{
  return [a1 ncxAdditions];
}

id objc_msgSend_ncxEntryUri(void *a1, const char *a2, ...)
{
  return [a1 ncxEntryUri];
}

id objc_msgSend_needInnerMask(void *a1, const char *a2, ...)
{
  return [a1 needInnerMask];
}

id objc_msgSend_needOuterMask(void *a1, const char *a2, ...)
{
  return [a1 needOuterMask];
}

id objc_msgSend_needsAccessibilityAnnouncements(void *a1, const char *a2, ...)
{
  return [a1 needsAccessibilityAnnouncements];
}

id objc_msgSend_needsAccessibilityElements(void *a1, const char *a2, ...)
{
  return [a1 needsAccessibilityElements];
}

id objc_msgSend_needsInflation(void *a1, const char *a2, ...)
{
  return [a1 needsInflation];
}

id objc_msgSend_needsLayout(void *a1, const char *a2, ...)
{
  return [a1 needsLayout];
}

id objc_msgSend_needsMarginNoteUpdate(void *a1, const char *a2, ...)
{
  return [a1 needsMarginNoteUpdate];
}

id objc_msgSend_needsMigration(void *a1, const char *a2, ...)
{
  return [a1 needsMigration];
}

id objc_msgSend_newCachedSizedImage(void *a1, const char *a2, ...)
{
  return [a1 newCachedSizedImage];
}

id objc_msgSend_newCachedSizedImageWithNaturalSize(void *a1, const char *a2, ...)
{
  return [a1 newCachedSizedImageWithNaturalSize];
}

id objc_msgSend_newCommandQueue(void *a1, const char *a2, ...)
{
  return [a1 newCommandQueue];
}

id objc_msgSend_newImage(void *a1, const char *a2, ...)
{
  return [a1 newImage];
}

id objc_msgSend_newManagedObjectContext(void *a1, const char *a2, ...)
{
  return [a1 newManagedObjectContext];
}

id objc_msgSend_newNotesViewController(void *a1, const char *a2, ...)
{
  return [a1 newNotesViewController];
}

id objc_msgSend_newSessionAssertion(void *a1, const char *a2, ...)
{
  return [a1 newSessionAssertion];
}

id objc_msgSend_newSoundtrack(void *a1, const char *a2, ...)
{
  return [a1 newSoundtrack];
}

id objc_msgSend_newTemporaryReviewDataMOC(void *a1, const char *a2, ...)
{
  return [a1 newTemporaryReviewDataMOC];
}

id objc_msgSend_newTemporateReviewResponseMOC(void *a1, const char *a2, ...)
{
  return [a1 newTemporateReviewResponseMOC];
}

id objc_msgSend_newTransportController(void *a1, const char *a2, ...)
{
  return [a1 newTransportController];
}

id objc_msgSend_newUnversionedBookVersion(void *a1, const char *a2, ...)
{
  return [a1 newUnversionedBookVersion];
}

id objc_msgSend_newViewController(void *a1, const char *a2, ...)
{
  return [a1 newViewController];
}

id objc_msgSend_nextBookspot(void *a1, const char *a2, ...)
{
  return [a1 nextBookspot];
}

id objc_msgSend_nextButton(void *a1, const char *a2, ...)
{
  return [a1 nextButton];
}

id objc_msgSend_nextButtonFrame(void *a1, const char *a2, ...)
{
  return [a1 nextButtonFrame];
}

id objc_msgSend_nextCaption(void *a1, const char *a2, ...)
{
  return [a1 nextCaption];
}

id objc_msgSend_nextDrawable(void *a1, const char *a2, ...)
{
  return [a1 nextDrawable];
}

id objc_msgSend_nextEvent(void *a1, const char *a2, ...)
{
  return [a1 nextEvent];
}

id objc_msgSend_nextEventIndexAfterCurrent(void *a1, const char *a2, ...)
{
  return [a1 nextEventIndexAfterCurrent];
}

id objc_msgSend_nextHintLocation(void *a1, const char *a2, ...)
{
  return [a1 nextHintLocation];
}

id objc_msgSend_nextHintShapeRef(void *a1, const char *a2, ...)
{
  return [a1 nextHintShapeRef];
}

id objc_msgSend_nextKey(void *a1, const char *a2, ...)
{
  return [a1 nextKey];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return [a1 nextObject];
}

id objc_msgSend_nextSibling(void *a1, const char *a2, ...)
{
  return [a1 nextSibling];
}

id objc_msgSend_nextSlide(void *a1, const char *a2, ...)
{
  return [a1 nextSlide];
}

id objc_msgSend_nextVisibleAbsolutePageNumber(void *a1, const char *a2, ...)
{
  return [a1 nextVisibleAbsolutePageNumber];
}

id objc_msgSend_noResultsView(void *a1, const char *a2, ...)
{
  return [a1 noResultsView];
}

id objc_msgSend_noSearchResultsViewController(void *a1, const char *a2, ...)
{
  return [a1 noSearchResultsViewController];
}

id objc_msgSend_node(void *a1, const char *a2, ...)
{
  return [a1 node];
}

id objc_msgSend_nodeBodyExists(void *a1, const char *a2, ...)
{
  return [a1 nodeBodyExists];
}

id objc_msgSend_nodeGUID(void *a1, const char *a2, ...)
{
  return [a1 nodeGUID];
}

id objc_msgSend_nodeRelativePageIndex(void *a1, const char *a2, ...)
{
  return [a1 nodeRelativePageIndex];
}

id objc_msgSend_nodeType(void *a1, const char *a2, ...)
{
  return [a1 nodeType];
}

id objc_msgSend_nonCurrentVersionPredicate(void *a1, const char *a2, ...)
{
  return [a1 nonCurrentVersionPredicate];
}

id objc_msgSend_nonDelegatedReader(void *a1, const char *a2, ...)
{
  return [a1 nonDelegatedReader];
}

id objc_msgSend_nonEmptyBodyCount(void *a1, const char *a2, ...)
{
  return [a1 nonEmptyBodyCount];
}

id objc_msgSend_nonEmptyColumns(void *a1, const char *a2, ...)
{
  return [a1 nonEmptyColumns];
}

id objc_msgSend_nonFidgetValue(void *a1, const char *a2, ...)
{
  return [a1 nonFidgetValue];
}

id objc_msgSend_nonOrphanedPredicate(void *a1, const char *a2, ...)
{
  return [a1 nonOrphanedPredicate];
}

id objc_msgSend_nonOrphanedRangePredicate(void *a1, const char *a2, ...)
{
  return [a1 nonOrphanedRangePredicate];
}

id objc_msgSend_nonSponsoredNonOrphanedPredicate(void *a1, const char *a2, ...)
{
  return [a1 nonSponsoredNonOrphanedPredicate];
}

id objc_msgSend_nonSponsoredPredicate(void *a1, const char *a2, ...)
{
  return [a1 nonSponsoredPredicate];
}

id objc_msgSend_nonretainedObjectValue(void *a1, const char *a2, ...)
{
  return [a1 nonretainedObjectValue];
}

id objc_msgSend_normalizedPrefixSearchStrings(void *a1, const char *a2, ...)
{
  return [a1 normalizedPrefixSearchStrings];
}

id objc_msgSend_normalizedStringForSearch(void *a1, const char *a2, ...)
{
  return [a1 normalizedStringForSearch];
}

id objc_msgSend_normalizedStringsForPrefixSearch(void *a1, const char *a2, ...)
{
  return [a1 normalizedStringsForPrefixSearch];
}

id objc_msgSend_normalizedTerm(void *a1, const char *a2, ...)
{
  return [a1 normalizedTerm];
}

id objc_msgSend_notFoundLabel(void *a1, const char *a2, ...)
{
  return [a1 notFoundLabel];
}

id objc_msgSend_noteCardBodyHeight(void *a1, const char *a2, ...)
{
  return [a1 noteCardBodyHeight];
}

id objc_msgSend_noteCardBodyLeftMargin(void *a1, const char *a2, ...)
{
  return [a1 noteCardBodyLeftMargin];
}

id objc_msgSend_noteCardBodyTopMargin(void *a1, const char *a2, ...)
{
  return [a1 noteCardBodyTopMargin];
}

id objc_msgSend_noteCardBodyWidth(void *a1, const char *a2, ...)
{
  return [a1 noteCardBodyWidth];
}

id objc_msgSend_noteCardColorBarPaddingFromScrollBottom(void *a1, const char *a2, ...)
{
  return [a1 noteCardColorBarPaddingFromScrollBottom];
}

id objc_msgSend_noteCardColorBarWidth(void *a1, const char *a2, ...)
{
  return [a1 noteCardColorBarWidth];
}

id objc_msgSend_noteCardCount(void *a1, const char *a2, ...)
{
  return [a1 noteCardCount];
}

id objc_msgSend_noteCardFooterBaselineOffset(void *a1, const char *a2, ...)
{
  return [a1 noteCardFooterBaselineOffset];
}

id objc_msgSend_noteCardHeaderBaselineOffset(void *a1, const char *a2, ...)
{
  return [a1 noteCardHeaderBaselineOffset];
}

id objc_msgSend_noteCardInfo(void *a1, const char *a2, ...)
{
  return [a1 noteCardInfo];
}

id objc_msgSend_noteCardLayerCount(void *a1, const char *a2, ...)
{
  return [a1 noteCardLayerCount];
}

id objc_msgSend_noteCardLeftMargin(void *a1, const char *a2, ...)
{
  return [a1 noteCardLeftMargin];
}

id objc_msgSend_noteCardOffset(void *a1, const char *a2, ...)
{
  return [a1 noteCardOffset];
}

id objc_msgSend_noteCardRightMargin(void *a1, const char *a2, ...)
{
  return [a1 noteCardRightMargin];
}

id objc_msgSend_noteCardSectionTitlePaddingToPageNumber(void *a1, const char *a2, ...)
{
  return [a1 noteCardSectionTitlePaddingToPageNumber];
}

id objc_msgSend_noteCardShadowOpacity(void *a1, const char *a2, ...)
{
  return [a1 noteCardShadowOpacity];
}

id objc_msgSend_noteCardSize(void *a1, const char *a2, ...)
{
  return [a1 noteCardSize];
}

id objc_msgSend_noteCardTypeSortOrder(void *a1, const char *a2, ...)
{
  return [a1 noteCardTypeSortOrder];
}

id objc_msgSend_noteCards(void *a1, const char *a2, ...)
{
  return [a1 noteCards];
}

id objc_msgSend_noteEditorController(void *a1, const char *a2, ...)
{
  return [a1 noteEditorController];
}

id objc_msgSend_noteEditorViewController(void *a1, const char *a2, ...)
{
  return [a1 noteEditorViewController];
}

id objc_msgSend_noteLabel(void *a1, const char *a2, ...)
{
  return [a1 noteLabel];
}

id objc_msgSend_noteLabelHorizontalInset(void *a1, const char *a2, ...)
{
  return [a1 noteLabelHorizontalInset];
}

id objc_msgSend_noteRange(void *a1, const char *a2, ...)
{
  return [a1 noteRange];
}

id objc_msgSend_noteText(void *a1, const char *a2, ...)
{
  return [a1 noteText];
}

id objc_msgSend_noteWasDeleted(void *a1, const char *a2, ...)
{
  return [a1 noteWasDeleted];
}

id objc_msgSend_notes(void *a1, const char *a2, ...)
{
  return [a1 notes];
}

id objc_msgSend_notesButtonItem(void *a1, const char *a2, ...)
{
  return [a1 notesButtonItem];
}

id objc_msgSend_notesDetailViewController(void *a1, const char *a2, ...)
{
  return [a1 notesDetailViewController];
}

id objc_msgSend_notesExist(void *a1, const char *a2, ...)
{
  return [a1 notesExist];
}

id objc_msgSend_notesFullscreenViewController(void *a1, const char *a2, ...)
{
  return [a1 notesFullscreenViewController];
}

id objc_msgSend_notesSearchResults(void *a1, const char *a2, ...)
{
  return [a1 notesSearchResults];
}

id objc_msgSend_notesSidebarBarColor(void *a1, const char *a2, ...)
{
  return [a1 notesSidebarBarColor];
}

id objc_msgSend_notesSidebarViewController(void *a1, const char *a2, ...)
{
  return [a1 notesSidebarViewController];
}

id objc_msgSend_notesSplitViewController(void *a1, const char *a2, ...)
{
  return [a1 notesSplitViewController];
}

id objc_msgSend_notesTableViewController(void *a1, const char *a2, ...)
{
  return [a1 notesTableViewController];
}

id objc_msgSend_notesThumb(void *a1, const char *a2, ...)
{
  return [a1 notesThumb];
}

id objc_msgSend_notificationOperationQueue(void *a1, const char *a2, ...)
{
  return [a1 notificationOperationQueue];
}

id objc_msgSend_nsString(void *a1, const char *a2, ...)
{
  return [a1 nsString];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return [a1 null];
}

id objc_msgSend_numSelectedTargets(void *a1, const char *a2, ...)
{
  return [a1 numSelectedTargets];
}

id objc_msgSend_numberOfArguments(void *a1, const char *a2, ...)
{
  return [a1 numberOfArguments];
}

id objc_msgSend_numberOfBookmarks(void *a1, const char *a2, ...)
{
  return [a1 numberOfBookmarks];
}

id objc_msgSend_numberOfColumns(void *a1, const char *a2, ...)
{
  return [a1 numberOfColumns];
}

id objc_msgSend_numberOfContentNodes(void *a1, const char *a2, ...)
{
  return [a1 numberOfContentNodes];
}

id objc_msgSend_numberOfEntries(void *a1, const char *a2, ...)
{
  return [a1 numberOfEntries];
}

id objc_msgSend_numberOfFooterRows(void *a1, const char *a2, ...)
{
  return [a1 numberOfFooterRows];
}

id objc_msgSend_numberOfHeaderColumns(void *a1, const char *a2, ...)
{
  return [a1 numberOfHeaderColumns];
}

id objc_msgSend_numberOfHeaderRows(void *a1, const char *a2, ...)
{
  return [a1 numberOfHeaderRows];
}

id objc_msgSend_numberOfHighlightAnnotations(void *a1, const char *a2, ...)
{
  return [a1 numberOfHighlightAnnotations];
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return [a1 numberOfLines];
}

id objc_msgSend_numberOfNotes(void *a1, const char *a2, ...)
{
  return [a1 numberOfNotes];
}

id objc_msgSend_numberOfObjects(void *a1, const char *a2, ...)
{
  return [a1 numberOfObjects];
}

id objc_msgSend_numberOfOrphanedAnnotations(void *a1, const char *a2, ...)
{
  return [a1 numberOfOrphanedAnnotations];
}

id objc_msgSend_numberOfPages(void *a1, const char *a2, ...)
{
  return [a1 numberOfPages];
}

id objc_msgSend_numberOfRanges(void *a1, const char *a2, ...)
{
  return [a1 numberOfRanges];
}

id objc_msgSend_numberOfRows(void *a1, const char *a2, ...)
{
  return [a1 numberOfRows];
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return [a1 numberOfSections];
}

id objc_msgSend_numberOfStagePages(void *a1, const char *a2, ...)
{
  return [a1 numberOfStagePages];
}

id objc_msgSend_numberOfTapsRequired(void *a1, const char *a2, ...)
{
  return [a1 numberOfTapsRequired];
}

id objc_msgSend_numberOfThumbnailTrackPages(void *a1, const char *a2, ...)
{
  return [a1 numberOfThumbnailTrackPages];
}

id objc_msgSend_numberOfVerticesPerParticle(void *a1, const char *a2, ...)
{
  return [a1 numberOfVerticesPerParticle];
}

id objc_msgSend_numberParagraphStyle(void *a1, const char *a2, ...)
{
  return [a1 numberParagraphStyle];
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return [a1 objCType];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return [a1 object];
}

id objc_msgSend_objectDataBufferAttributeColorTexCoord(void *a1, const char *a2, ...)
{
  return [a1 objectDataBufferAttributeColorTexCoord];
}

id objc_msgSend_objectDataBufferAttributePosition(void *a1, const char *a2, ...)
{
  return [a1 objectDataBufferAttributePosition];
}

id objc_msgSend_objectDataBufferAttributeSpeed(void *a1, const char *a2, ...)
{
  return [a1 objectDataBufferAttributeSpeed];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 objectEnumerator];
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return [a1 objectID];
}

id objc_msgSend_objectSize(void *a1, const char *a2, ...)
{
  return [a1 objectSize];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return [a1 observers];
}

id objc_msgSend_observingRate(void *a1, const char *a2, ...)
{
  return [a1 observingRate];
}

id objc_msgSend_occurenceCount(void *a1, const char *a2, ...)
{
  return [a1 occurenceCount];
}

id objc_msgSend_occurrenceCount(void *a1, const char *a2, ...)
{
  return [a1 occurrenceCount];
}

id objc_msgSend_occurrenceIndex(void *a1, const char *a2, ...)
{
  return [a1 occurrenceIndex];
}

id objc_msgSend_occurrences(void *a1, const char *a2, ...)
{
  return [a1 occurrences];
}

id objc_msgSend_offscreenNoteDistance(void *a1, const char *a2, ...)
{
  return [a1 offscreenNoteDistance];
}

id objc_msgSend_offset(void *a1, const char *a2, ...)
{
  return [a1 offset];
}

id objc_msgSend_offsetFromBodyTop(void *a1, const char *a2, ...)
{
  return [a1 offsetFromBodyTop];
}

id objc_msgSend_onCanvasScale(void *a1, const char *a2, ...)
{
  return [a1 onCanvasScale];
}

id objc_msgSend_onCanvasView(void *a1, const char *a2, ...)
{
  return [a1 onCanvasView];
}

id objc_msgSend_onCanvasViews(void *a1, const char *a2, ...)
{
  return [a1 onCanvasViews];
}

id objc_msgSend_one(void *a1, const char *a2, ...)
{
  return [a1 one];
}

id objc_msgSend_opacity(void *a1, const char *a2, ...)
{
  return [a1 opacity];
}

id objc_msgSend_openAnimationDidFinish(void *a1, const char *a2, ...)
{
  return [a1 openAnimationDidFinish];
}

id objc_msgSend_openCloseButton(void *a1, const char *a2, ...)
{
  return [a1 openCloseButton];
}

id objc_msgSend_openSectionImage(void *a1, const char *a2, ...)
{
  return [a1 openSectionImage];
}

id objc_msgSend_opened(void *a1, const char *a2, ...)
{
  return [a1 opened];
}

id objc_msgSend_openingAbsolutePageIndexOverride(void *a1, const char *a2, ...)
{
  return [a1 openingAbsolutePageIndexOverride];
}

id objc_msgSend_openingCFIOverride(void *a1, const char *a2, ...)
{
  return [a1 openingCFIOverride];
}

id objc_msgSend_openingFragmentOverride(void *a1, const char *a2, ...)
{
  return [a1 openingFragmentOverride];
}

id objc_msgSend_openingLocationOverride(void *a1, const char *a2, ...)
{
  return [a1 openingLocationOverride];
}

id objc_msgSend_operationShouldCancelLoad(void *a1, const char *a2, ...)
{
  return [a1 operationShouldCancelLoad];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return [a1 operations];
}

id objc_msgSend_opfEntryUri(void *a1, const char *a2, ...)
{
  return [a1 opfEntryUri];
}

id objc_msgSend_optedIn(void *a1, const char *a2, ...)
{
  return [a1 optedIn];
}

id objc_msgSend_optionalDispatcher(void *a1, const char *a2, ...)
{
  return [a1 optionalDispatcher];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return [a1 options];
}

id objc_msgSend_optionsButton(void *a1, const char *a2, ...)
{
  return [a1 optionsButton];
}

id objc_msgSend_optionsPopoverController(void *a1, const char *a2, ...)
{
  return [a1 optionsPopoverController];
}

id objc_msgSend_orangeColor(void *a1, const char *a2, ...)
{
  return [a1 orangeColor];
}

id objc_msgSend_orderedChildDrawables(void *a1, const char *a2, ...)
{
  return [a1 orderedChildDrawables];
}

id objc_msgSend_orderedDrawables(void *a1, const char *a2, ...)
{
  return [a1 orderedDrawables];
}

id objc_msgSend_orderedList(void *a1, const char *a2, ...)
{
  return [a1 orderedList];
}

id objc_msgSend_ordinal(void *a1, const char *a2, ...)
{
  return [a1 ordinal];
}

id objc_msgSend_ordinalLabel(void *a1, const char *a2, ...)
{
  return [a1 ordinalLabel];
}

id objc_msgSend_ordinalNumberLeftMargin(void *a1, const char *a2, ...)
{
  return [a1 ordinalNumberLeftMargin];
}

id objc_msgSend_ordinalNumberRightMarginChapter(void *a1, const char *a2, ...)
{
  return [a1 ordinalNumberRightMarginChapter];
}

id objc_msgSend_ordinalNumberRightMarginSection(void *a1, const char *a2, ...)
{
  return [a1 ordinalNumberRightMarginSection];
}

id objc_msgSend_ordinalTextColor(void *a1, const char *a2, ...)
{
  return [a1 ordinalTextColor];
}

id objc_msgSend_ordinalWidthLevel1(void *a1, const char *a2, ...)
{
  return [a1 ordinalWidthLevel1];
}

id objc_msgSend_ordinalWidthLevel2(void *a1, const char *a2, ...)
{
  return [a1 ordinalWidthLevel2];
}

id objc_msgSend_ordinalWidthLevel3(void *a1, const char *a2, ...)
{
  return [a1 ordinalWidthLevel3];
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return [a1 orientation];
}

id objc_msgSend_orientationAnchor(void *a1, const char *a2, ...)
{
  return [a1 orientationAnchor];
}

id objc_msgSend_orientationCount(void *a1, const char *a2, ...)
{
  return [a1 orientationCount];
}

id objc_msgSend_orientationLock(void *a1, const char *a2, ...)
{
  return [a1 orientationLock];
}

id objc_msgSend_orientationState(void *a1, const char *a2, ...)
{
  return [a1 orientationState];
}

id objc_msgSend_originalAssetSizes(void *a1, const char *a2, ...)
{
  return [a1 originalAssetSizes];
}

id objc_msgSend_originalCanvasScrollViewFrame(void *a1, const char *a2, ...)
{
  return [a1 originalCanvasScrollViewFrame];
}

id objc_msgSend_originalCanvasScrollViewSuperview(void *a1, const char *a2, ...)
{
  return [a1 originalCanvasScrollViewSuperview];
}

id objc_msgSend_originalShadowTransform(void *a1, const char *a2, ...)
{
  return [a1 originalShadowTransform];
}

id objc_msgSend_originalStorage(void *a1, const char *a2, ...)
{
  return [a1 originalStorage];
}

id objc_msgSend_originalTargetLayerFrame(void *a1, const char *a2, ...)
{
  return [a1 originalTargetLayerFrame];
}

id objc_msgSend_originalThumbnailFrame(void *a1, const char *a2, ...)
{
  return [a1 originalThumbnailFrame];
}

id objc_msgSend_originalViewController(void *a1, const char *a2, ...)
{
  return [a1 originalViewController];
}

id objc_msgSend_originalViewScale(void *a1, const char *a2, ...)
{
  return [a1 originalViewScale];
}

id objc_msgSend_originalViewSize(void *a1, const char *a2, ...)
{
  return [a1 originalViewSize];
}

id objc_msgSend_orphanedAnnotations(void *a1, const char *a2, ...)
{
  return [a1 orphanedAnnotations];
}

id objc_msgSend_orphanedPredicate(void *a1, const char *a2, ...)
{
  return [a1 orphanedPredicate];
}

id objc_msgSend_orphanedRangePredicate(void *a1, const char *a2, ...)
{
  return [a1 orphanedRangePredicate];
}

id objc_msgSend_outerClipView(void *a1, const char *a2, ...)
{
  return [a1 outerClipView];
}

id objc_msgSend_overlayContentBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 overlayContentBackgroundColor];
}

id objc_msgSend_overridePropertyMap(void *a1, const char *a2, ...)
{
  return [a1 overridePropertyMap];
}

id objc_msgSend_overrideUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return [a1 overrideUserInterfaceStyle];
}

id objc_msgSend_overscrollTransitionView(void *a1, const char *a2, ...)
{
  return [a1 overscrollTransitionView];
}

id objc_msgSend_overshoot(void *a1, const char *a2, ...)
{
  return [a1 overshoot];
}

id objc_msgSend_ownerAutoreleasedAccess(void *a1, const char *a2, ...)
{
  return [a1 ownerAutoreleasedAccess];
}

id objc_msgSend_ownerRelease(void *a1, const char *a2, ...)
{
  return [a1 ownerRelease];
}

id objc_msgSend_ownerRetain(void *a1, const char *a2, ...)
{
  return [a1 ownerRetain];
}

id objc_msgSend_owningAttachment(void *a1, const char *a2, ...)
{
  return [a1 owningAttachment];
}

id objc_msgSend_ownsShow(void *a1, const char *a2, ...)
{
  return [a1 ownsShow];
}

id objc_msgSend_ownsWebView(void *a1, const char *a2, ...)
{
  return [a1 ownsWebView];
}

id objc_msgSend_pAnimationView(void *a1, const char *a2, ...)
{
  return [a1 pAnimationView];
}

id objc_msgSend_pConfigureHUDVisibility(void *a1, const char *a2, ...)
{
  return [a1 pConfigureHUDVisibility];
}

id objc_msgSend_pConfigureScrubberVisibility(void *a1, const char *a2, ...)
{
  return [a1 pConfigureScrubberVisibility];
}

id objc_msgSend_pSetControlColors(void *a1, const char *a2, ...)
{
  return [a1 pSetControlColors];
}

id objc_msgSend_packageState(void *a1, const char *a2, ...)
{
  return [a1 packageState];
}

id objc_msgSend_padding(void *a1, const char *a2, ...)
{
  return [a1 padding];
}

id objc_msgSend_paddingAfter(void *a1, const char *a2, ...)
{
  return [a1 paddingAfter];
}

id objc_msgSend_paddingBefore(void *a1, const char *a2, ...)
{
  return [a1 paddingBefore];
}

id objc_msgSend_paddingPropertyNames(void *a1, const char *a2, ...)
{
  return [a1 paddingPropertyNames];
}

id objc_msgSend_pageAreaBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 pageAreaBackgroundColor];
}

id objc_msgSend_pageCache(void *a1, const char *a2, ...)
{
  return [a1 pageCache];
}

id objc_msgSend_pageContentWidth(void *a1, const char *a2, ...)
{
  return [a1 pageContentWidth];
}

id objc_msgSend_pageControl(void *a1, const char *a2, ...)
{
  return [a1 pageControl];
}

id objc_msgSend_pageController(void *a1, const char *a2, ...)
{
  return [a1 pageController];
}

id objc_msgSend_pageControllers(void *a1, const char *a2, ...)
{
  return [a1 pageControllers];
}

id objc_msgSend_pageCount(void *a1, const char *a2, ...)
{
  return [a1 pageCount];
}

id objc_msgSend_pageDirectlyToIndex(void *a1, const char *a2, ...)
{
  return [a1 pageDirectlyToIndex];
}

id objc_msgSend_pageDrawableList(void *a1, const char *a2, ...)
{
  return [a1 pageDrawableList];
}

id objc_msgSend_pageDrawableMaps(void *a1, const char *a2, ...)
{
  return [a1 pageDrawableMaps];
}

id objc_msgSend_pageEndCharIndex(void *a1, const char *a2, ...)
{
  return [a1 pageEndCharIndex];
}

id objc_msgSend_pageHints(void *a1, const char *a2, ...)
{
  return [a1 pageHints];
}

id objc_msgSend_pageHorizontally(void *a1, const char *a2, ...)
{
  return [a1 pageHorizontally];
}

id objc_msgSend_pageIndex(void *a1, const char *a2, ...)
{
  return [a1 pageIndex];
}

id objc_msgSend_pageIndexFormatter(void *a1, const char *a2, ...)
{
  return [a1 pageIndexFormatter];
}

id objc_msgSend_pageInfo(void *a1, const char *a2, ...)
{
  return [a1 pageInfo];
}

id objc_msgSend_pageLabel(void *a1, const char *a2, ...)
{
  return [a1 pageLabel];
}

id objc_msgSend_pageLabelBaselineToTitleLabelConstraint(void *a1, const char *a2, ...)
{
  return [a1 pageLabelBaselineToTitleLabelConstraint];
}

id objc_msgSend_pageLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return [a1 pageLabelTrailingConstraint];
}

id objc_msgSend_pageLayout(void *a1, const char *a2, ...)
{
  return [a1 pageLayout];
}

id objc_msgSend_pageLeft(void *a1, const char *a2, ...)
{
  return [a1 pageLeft];
}

id objc_msgSend_pageNumber(void *a1, const char *a2, ...)
{
  return [a1 pageNumber];
}

id objc_msgSend_pageNumberColor(void *a1, const char *a2, ...)
{
  return [a1 pageNumberColor];
}

id objc_msgSend_pageNumberDynamicWidth(void *a1, const char *a2, ...)
{
  return [a1 pageNumberDynamicWidth];
}

id objc_msgSend_pageNumberFont(void *a1, const char *a2, ...)
{
  return [a1 pageNumberFont];
}

id objc_msgSend_pageNumberFontSize(void *a1, const char *a2, ...)
{
  return [a1 pageNumberFontSize];
}

id objc_msgSend_pageNumberHovered(void *a1, const char *a2, ...)
{
  return [a1 pageNumberHovered];
}

id objc_msgSend_pageNumberLabel(void *a1, const char *a2, ...)
{
  return [a1 pageNumberLabel];
}

id objc_msgSend_pageNumberLabelFrame(void *a1, const char *a2, ...)
{
  return [a1 pageNumberLabelFrame];
}

id objc_msgSend_pageNumberLeftMargin(void *a1, const char *a2, ...)
{
  return [a1 pageNumberLeftMargin];
}

id objc_msgSend_pageNumberPosition(void *a1, const char *a2, ...)
{
  return [a1 pageNumberPosition];
}

id objc_msgSend_pageNumberPressed(void *a1, const char *a2, ...)
{
  return [a1 pageNumberPressed];
}

id objc_msgSend_pageNumberString(void *a1, const char *a2, ...)
{
  return [a1 pageNumberString];
}

id objc_msgSend_pageNumberWidth(void *a1, const char *a2, ...)
{
  return [a1 pageNumberWidth];
}

id objc_msgSend_pagePositionController(void *a1, const char *a2, ...)
{
  return [a1 pagePositionController];
}

id objc_msgSend_pageRight(void *a1, const char *a2, ...)
{
  return [a1 pageRight];
}

id objc_msgSend_pageSize(void *a1, const char *a2, ...)
{
  return [a1 pageSize];
}

id objc_msgSend_pageSizeDelegate(void *a1, const char *a2, ...)
{
  return [a1 pageSizeDelegate];
}

id objc_msgSend_pageSizeWithZeroInPagingDirection(void *a1, const char *a2, ...)
{
  return [a1 pageSizeWithZeroInPagingDirection];
}

id objc_msgSend_pageStartCharIndex(void *a1, const char *a2, ...)
{
  return [a1 pageStartCharIndex];
}

id objc_msgSend_pageStartIndices(void *a1, const char *a2, ...)
{
  return [a1 pageStartIndices];
}

id objc_msgSend_pageTargetRectForRevealingTOC(void *a1, const char *a2, ...)
{
  return [a1 pageTargetRectForRevealingTOC];
}

id objc_msgSend_pageTheme(void *a1, const char *a2, ...)
{
  return [a1 pageTheme];
}

id objc_msgSend_pageViewDisplacement(void *a1, const char *a2, ...)
{
  return [a1 pageViewDisplacement];
}

id objc_msgSend_pageViewProvider(void *a1, const char *a2, ...)
{
  return [a1 pageViewProvider];
}

id objc_msgSend_pagedCanvasController(void *a1, const char *a2, ...)
{
  return [a1 pagedCanvasController];
}

id objc_msgSend_pages(void *a1, const char *a2, ...)
{
  return [a1 pages];
}

id objc_msgSend_pagesScrollView(void *a1, const char *a2, ...)
{
  return [a1 pagesScrollView];
}

id objc_msgSend_paginate(void *a1, const char *a2, ...)
{
  return [a1 paginate];
}

id objc_msgSend_paginatedBodyStale(void *a1, const char *a2, ...)
{
  return [a1 paginatedBodyStale];
}

id objc_msgSend_paginatedIsCurrent(void *a1, const char *a2, ...)
{
  return [a1 paginatedIsCurrent];
}

id objc_msgSend_paginatedMediaTypes(void *a1, const char *a2, ...)
{
  return [a1 paginatedMediaTypes];
}

id objc_msgSend_paginatedModelContentNodeBody(void *a1, const char *a2, ...)
{
  return [a1 paginatedModelContentNodeBody];
}

id objc_msgSend_paginatedPageSize(void *a1, const char *a2, ...)
{
  return [a1 paginatedPageSize];
}

id objc_msgSend_paginatedPresentationType(void *a1, const char *a2, ...)
{
  return [a1 paginatedPresentationType];
}

id objc_msgSend_paginatedSectionController(void *a1, const char *a2, ...)
{
  return [a1 paginatedSectionController];
}

id objc_msgSend_paginatedSpreadSize(void *a1, const char *a2, ...)
{
  return [a1 paginatedSpreadSize];
}

id objc_msgSend_paginatedState(void *a1, const char *a2, ...)
{
  return [a1 paginatedState];
}

id objc_msgSend_paginatedTOCShowsStatusBar(void *a1, const char *a2, ...)
{
  return [a1 paginatedTOCShowsStatusBar];
}

id objc_msgSend_paginationComplete(void *a1, const char *a2, ...)
{
  return [a1 paginationComplete];
}

id objc_msgSend_paginationCompletions(void *a1, const char *a2, ...)
{
  return [a1 paginationCompletions];
}

id objc_msgSend_paginationController(void *a1, const char *a2, ...)
{
  return [a1 paginationController];
}

id objc_msgSend_paginationCount(void *a1, const char *a2, ...)
{
  return [a1 paginationCount];
}

id objc_msgSend_paginationDelegate(void *a1, const char *a2, ...)
{
  return [a1 paginationDelegate];
}

id objc_msgSend_paginationProgress(void *a1, const char *a2, ...)
{
  return [a1 paginationProgress];
}

id objc_msgSend_paginationQueue(void *a1, const char *a2, ...)
{
  return [a1 paginationQueue];
}

id objc_msgSend_paginationResults(void *a1, const char *a2, ...)
{
  return [a1 paginationResults];
}

id objc_msgSend_paginationResultsValid(void *a1, const char *a2, ...)
{
  return [a1 paginationResultsValid];
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 panGestureRecognizer];
}

id objc_msgSend_panGestureRecognizers(void *a1, const char *a2, ...)
{
  return [a1 panGestureRecognizers];
}

id objc_msgSend_panelContentProvider(void *a1, const char *a2, ...)
{
  return [a1 panelContentProvider];
}

id objc_msgSend_panelDescriptionExpanded(void *a1, const char *a2, ...)
{
  return [a1 panelDescriptionExpanded];
}

id objc_msgSend_paragraphCount(void *a1, const char *a2, ...)
{
  return [a1 paragraphCount];
}

id objc_msgSend_paragraphProperties(void *a1, const char *a2, ...)
{
  return [a1 paragraphProperties];
}

id objc_msgSend_paragraphStyle(void *a1, const char *a2, ...)
{
  return [a1 paragraphStyle];
}

id objc_msgSend_parameterDescription(void *a1, const char *a2, ...)
{
  return [a1 parameterDescription];
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return [a1 parameters];
}

id objc_msgSend_parent(void *a1, const char *a2, ...)
{
  return [a1 parent];
}

id objc_msgSend_parentCanvas(void *a1, const char *a2, ...)
{
  return [a1 parentCanvas];
}

id objc_msgSend_parentContentNodeBody(void *a1, const char *a2, ...)
{
  return [a1 parentContentNodeBody];
}

id objc_msgSend_parentEntry(void *a1, const char *a2, ...)
{
  return [a1 parentEntry];
}

id objc_msgSend_parentEntryMediaState(void *a1, const char *a2, ...)
{
  return [a1 parentEntryMediaState];
}

id objc_msgSend_parentFontSize(void *a1, const char *a2, ...)
{
  return [a1 parentFontSize];
}

id objc_msgSend_parentHtmlStackEntry(void *a1, const char *a2, ...)
{
  return [a1 parentHtmlStackEntry];
}

id objc_msgSend_parentInfo(void *a1, const char *a2, ...)
{
  return [a1 parentInfo];
}

id objc_msgSend_parentRep(void *a1, const char *a2, ...)
{
  return [a1 parentRep];
}

id objc_msgSend_parentScrollView(void *a1, const char *a2, ...)
{
  return [a1 parentScrollView];
}

id objc_msgSend_parentStage(void *a1, const char *a2, ...)
{
  return [a1 parentStage];
}

id objc_msgSend_parentStorage(void *a1, const char *a2, ...)
{
  return [a1 parentStorage];
}

id objc_msgSend_parentTOCRep(void *a1, const char *a2, ...)
{
  return [a1 parentTOCRep];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return [a1 parentViewController];
}

id objc_msgSend_parseTerminatingStep(void *a1, const char *a2, ...)
{
  return [a1 parseTerminatingStep];
}

id objc_msgSend_particleCount(void *a1, const char *a2, ...)
{
  return [a1 particleCount];
}

id objc_msgSend_particleSize(void *a1, const char *a2, ...)
{
  return [a1 particleSize];
}

id objc_msgSend_particleTexCoordAttribute(void *a1, const char *a2, ...)
{
  return [a1 particleTexCoordAttribute];
}

id objc_msgSend_particlesHigh(void *a1, const char *a2, ...)
{
  return [a1 particlesHigh];
}

id objc_msgSend_particlesWide(void *a1, const char *a2, ...)
{
  return [a1 particlesWide];
}

id objc_msgSend_passDescriptor(void *a1, const char *a2, ...)
{
  return [a1 passDescriptor];
}

id objc_msgSend_passedThreshold(void *a1, const char *a2, ...)
{
  return [a1 passedThreshold];
}

id objc_msgSend_passthroughViews(void *a1, const char *a2, ...)
{
  return [a1 passthroughViews];
}

id objc_msgSend_pasteboardString(void *a1, const char *a2, ...)
{
  return [a1 pasteboardString];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return [a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return [a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return [a1 pathExtension];
}

id objc_msgSend_pathSource(void *a1, const char *a2, ...)
{
  return [a1 pathSource];
}

id objc_msgSend_pathStringNoIds(void *a1, const char *a2, ...)
{
  return [a1 pathStringNoIds];
}

id objc_msgSend_pathToNodeIndex(void *a1, const char *a2, ...)
{
  return [a1 pathToNodeIndex];
}

id objc_msgSend_pathValue(void *a1, const char *a2, ...)
{
  return [a1 pathValue];
}

id objc_msgSend_pattern(void *a1, const char *a2, ...)
{
  return [a1 pattern];
}

id objc_msgSend_patternType(void *a1, const char *a2, ...)
{
  return [a1 patternType];
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return [a1 pause];
}

id objc_msgSend_pauseBackgroundLoading(void *a1, const char *a2, ...)
{
  return [a1 pauseBackgroundLoading];
}

id objc_msgSend_pauseBackgroundSoundtrack(void *a1, const char *a2, ...)
{
  return [a1 pauseBackgroundSoundtrack];
}

id objc_msgSend_pauseIdleAnimation(void *a1, const char *a2, ...)
{
  return [a1 pauseIdleAnimation];
}

id objc_msgSend_pauseLayerUpdates(void *a1, const char *a2, ...)
{
  return [a1 pauseLayerUpdates];
}

id objc_msgSend_pauseMediaPlayback(void *a1, const char *a2, ...)
{
  return [a1 pauseMediaPlayback];
}

id objc_msgSend_pauseMoviePlayback(void *a1, const char *a2, ...)
{
  return [a1 pauseMoviePlayback];
}

id objc_msgSend_peekAtProperties(void *a1, const char *a2, ...)
{
  return [a1 peekAtProperties];
}

id objc_msgSend_pendingDeferredViewWillAppear(void *a1, const char *a2, ...)
{
  return [a1 pendingDeferredViewWillAppear];
}

id objc_msgSend_pendingSearchText(void *a1, const char *a2, ...)
{
  return [a1 pendingSearchText];
}

id objc_msgSend_pendingShowFirstEntry(void *a1, const char *a2, ...)
{
  return [a1 pendingShowFirstEntry];
}

id objc_msgSend_perUserRootFolder(void *a1, const char *a2, ...)
{
  return [a1 perUserRootFolder];
}

id objc_msgSend_percent(void *a1, const char *a2, ...)
{
  return [a1 percent];
}

id objc_msgSend_performAnimation(void *a1, const char *a2, ...)
{
  return [a1 performAnimation];
}

id objc_msgSend_performAuthentication(void *a1, const char *a2, ...)
{
  return [a1 performAuthentication];
}

id objc_msgSend_performExtraValidation(void *a1, const char *a2, ...)
{
  return [a1 performExtraValidation];
}

id objc_msgSend_performValidation(void *a1, const char *a2, ...)
{
  return [a1 performValidation];
}

id objc_msgSend_performanceMode(void *a1, const char *a2, ...)
{
  return [a1 performanceMode];
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return [a1 persistentStoreCoordinator];
}

id objc_msgSend_persistentStoreCoordinatorOptions(void *a1, const char *a2, ...)
{
  return [a1 persistentStoreCoordinatorOptions];
}

id objc_msgSend_physicalPageNumber(void *a1, const char *a2, ...)
{
  return [a1 physicalPageNumber];
}

id objc_msgSend_pixelFormat(void *a1, const char *a2, ...)
{
  return [a1 pixelFormat];
}

id objc_msgSend_plAbsolutePhysicalLocation(void *a1, const char *a2, ...)
{
  return [a1 plAbsolutePhysicalLocation];
}

id objc_msgSend_plLocationRangeEnd(void *a1, const char *a2, ...)
{
  return [a1 plLocationRangeEnd];
}

id objc_msgSend_plLocationRangeStart(void *a1, const char *a2, ...)
{
  return [a1 plLocationRangeStart];
}

id objc_msgSend_plStorageUUID(void *a1, const char *a2, ...)
{
  return [a1 plStorageUUID];
}

id objc_msgSend_plUserData(void *a1, const char *a2, ...)
{
  return [a1 plUserData];
}

id objc_msgSend_placardFixedPoint(void *a1, const char *a2, ...)
{
  return [a1 placardFixedPoint];
}

id objc_msgSend_placardLayouts(void *a1, const char *a2, ...)
{
  return [a1 placardLayouts];
}

id objc_msgSend_placardPlacement(void *a1, const char *a2, ...)
{
  return [a1 placardPlacement];
}

id objc_msgSend_placardTextSize(void *a1, const char *a2, ...)
{
  return [a1 placardTextSize];
}

id objc_msgSend_placardToTargetMap(void *a1, const char *a2, ...)
{
  return [a1 placardToTargetMap];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return [a1 placeholder];
}

id objc_msgSend_placeholderFetchRequest(void *a1, const char *a2, ...)
{
  return [a1 placeholderFetchRequest];
}

id objc_msgSend_placeholderHistory(void *a1, const char *a2, ...)
{
  return [a1 placeholderHistory];
}

id objc_msgSend_placeholderImage(void *a1, const char *a2, ...)
{
  return [a1 placeholderImage];
}

id objc_msgSend_placement(void *a1, const char *a2, ...)
{
  return [a1 placement];
}

id objc_msgSend_placementHint(void *a1, const char *a2, ...)
{
  return [a1 placementHint];
}

id objc_msgSend_platformColor(void *a1, const char *a2, ...)
{
  return [a1 platformColor];
}

id objc_msgSend_platformFont(void *a1, const char *a2, ...)
{
  return [a1 platformFont];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return [a1 play];
}

id objc_msgSend_playButton(void *a1, const char *a2, ...)
{
  return [a1 playButton];
}

id objc_msgSend_playButtonLayout(void *a1, const char *a2, ...)
{
  return [a1 playButtonLayout];
}

id objc_msgSend_playForBookOpen(void *a1, const char *a2, ...)
{
  return [a1 playForBookOpen];
}

id objc_msgSend_playForIntroMediaBecomesVisible(void *a1, const char *a2, ...)
{
  return [a1 playForIntroMediaBecomesVisible];
}

id objc_msgSend_playPreparedShow(void *a1, const char *a2, ...)
{
  return [a1 playPreparedShow];
}

id objc_msgSend_playSceneWhenLoaded(void *a1, const char *a2, ...)
{
  return [a1 playSceneWhenLoaded];
}

id objc_msgSend_playbackRate(void *a1, const char *a2, ...)
{
  return [a1 playbackRate];
}

id objc_msgSend_playbackState(void *a1, const char *a2, ...)
{
  return [a1 playbackState];
}

id objc_msgSend_playbackStatus(void *a1, const char *a2, ...)
{
  return [a1 playbackStatus];
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return [a1 player];
}

id objc_msgSend_playerController(void *a1, const char *a2, ...)
{
  return [a1 playerController];
}

id objc_msgSend_playerItem(void *a1, const char *a2, ...)
{
  return [a1 playerItem];
}

id objc_msgSend_playerLayer(void *a1, const char *a2, ...)
{
  return [a1 playerLayer];
}

id objc_msgSend_playingOnAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return [a1 playingOnAbsolutePageIndex];
}

id objc_msgSend_playingTransportController(void *a1, const char *a2, ...)
{
  return [a1 playingTransportController];
}

id objc_msgSend_plugin(void *a1, const char *a2, ...)
{
  return [a1 plugin];
}

id objc_msgSend_pluginContext(void *a1, const char *a2, ...)
{
  return [a1 pluginContext];
}

id objc_msgSend_pointOfView(void *a1, const char *a2, ...)
{
  return [a1 pointOfView];
}

id objc_msgSend_pointPredicate(void *a1, const char *a2, ...)
{
  return [a1 pointPredicate];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return [a1 pointSize];
}

id objc_msgSend_popCurrentObject(void *a1, const char *a2, ...)
{
  return [a1 popCurrentObject];
}

id objc_msgSend_popDebugGroup(void *a1, const char *a2, ...)
{
  return [a1 popDebugGroup];
}

id objc_msgSend_popDisableInfoUpdates(void *a1, const char *a2, ...)
{
  return [a1 popDisableInfoUpdates];
}

id objc_msgSend_popDisableUpdates(void *a1, const char *a2, ...)
{
  return [a1 popDisableUpdates];
}

id objc_msgSend_popElement(void *a1, const char *a2, ...)
{
  return [a1 popElement];
}

id objc_msgSend_popHint(void *a1, const char *a2, ...)
{
  return [a1 popHint];
}

id objc_msgSend_popLayoutDisabled(void *a1, const char *a2, ...)
{
  return [a1 popLayoutDisabled];
}

id objc_msgSend_popMinimizeLayoutPadding(void *a1, const char *a2, ...)
{
  return [a1 popMinimizeLayoutPadding];
}

id objc_msgSend_popReader(void *a1, const char *a2, ...)
{
  return [a1 popReader];
}

id objc_msgSend_popState(void *a1, const char *a2, ...)
{
  return [a1 popState];
}

id objc_msgSend_popThreadedLayoutAndRenderDisabled(void *a1, const char *a2, ...)
{
  return [a1 popThreadedLayoutAndRenderDisabled];
}

id objc_msgSend_popUpInfo(void *a1, const char *a2, ...)
{
  return [a1 popUpInfo];
}

id objc_msgSend_popoverBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 popoverBackgroundColor];
}

id objc_msgSend_popoverContentController(void *a1, const char *a2, ...)
{
  return [a1 popoverContentController];
}

id objc_msgSend_popoverContentInsets(void *a1, const char *a2, ...)
{
  return [a1 popoverContentInsets];
}

id objc_msgSend_popoverContentView(void *a1, const char *a2, ...)
{
  return [a1 popoverContentView];
}

id objc_msgSend_popoverCornerRadius(void *a1, const char *a2, ...)
{
  return [a1 popoverCornerRadius];
}

id objc_msgSend_popoverFadeInsets(void *a1, const char *a2, ...)
{
  return [a1 popoverFadeInsets];
}

id objc_msgSend_popoverFadeSizes(void *a1, const char *a2, ...)
{
  return [a1 popoverFadeSizes];
}

id objc_msgSend_popoverHasGradientBackground(void *a1, const char *a2, ...)
{
  return [a1 popoverHasGradientBackground];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return [a1 popoverPresentationController];
}

id objc_msgSend_popoverShadowColor(void *a1, const char *a2, ...)
{
  return [a1 popoverShadowColor];
}

id objc_msgSend_popoverShadowOffset(void *a1, const char *a2, ...)
{
  return [a1 popoverShadowOffset];
}

id objc_msgSend_popoverShadowOpacity(void *a1, const char *a2, ...)
{
  return [a1 popoverShadowOpacity];
}

id objc_msgSend_popoverShadowRadius(void *a1, const char *a2, ...)
{
  return [a1 popoverShadowRadius];
}

id objc_msgSend_popoverStroke(void *a1, const char *a2, ...)
{
  return [a1 popoverStroke];
}

id objc_msgSend_popoverTheme(void *a1, const char *a2, ...)
{
  return [a1 popoverTheme];
}

id objc_msgSend_popoverTitleColor(void *a1, const char *a2, ...)
{
  return [a1 popoverTitleColor];
}

id objc_msgSend_popoversByIdentifier(void *a1, const char *a2, ...)
{
  return [a1 popoversByIdentifier];
}

id objc_msgSend_poppedState(void *a1, const char *a2, ...)
{
  return [a1 poppedState];
}

id objc_msgSend_popupInfo(void *a1, const char *a2, ...)
{
  return [a1 popupInfo];
}

id objc_msgSend_portraitEntries(void *a1, const char *a2, ...)
{
  return [a1 portraitEntries];
}

id objc_msgSend_portraitPredicate(void *a1, const char *a2, ...)
{
  return [a1 portraitPredicate];
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return [a1 position];
}

id objc_msgSend_positionAttribute(void *a1, const char *a2, ...)
{
  return [a1 positionAttribute];
}

id objc_msgSend_posterImageData(void *a1, const char *a2, ...)
{
  return [a1 posterImageData];
}

id objc_msgSend_posterImageInfo(void *a1, const char *a2, ...)
{
  return [a1 posterImageInfo];
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return [a1 predicate];
}

id objc_msgSend_preferredCanvasSize(void *a1, const char *a2, ...)
{
  return [a1 preferredCanvasSize];
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return [a1 preferredContentSize];
}

id objc_msgSend_preferredFormat(void *a1, const char *a2, ...)
{
  return [a1 preferredFormat];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return [a1 preferredLanguages];
}

id objc_msgSend_preferredMIMEType(void *a1, const char *a2, ...)
{
  return [a1 preferredMIMEType];
}

id objc_msgSend_preferredMaxLayoutHeight(void *a1, const char *a2, ...)
{
  return [a1 preferredMaxLayoutHeight];
}

id objc_msgSend_prefersStatusBarHidden(void *a1, const char *a2, ...)
{
  return [a1 prefersStatusBarHidden];
}

id objc_msgSend_prepareAnimations(void *a1, const char *a2, ...)
{
  return [a1 prepareAnimations];
}

id objc_msgSend_prepareControlsForTOC(void *a1, const char *a2, ...)
{
  return [a1 prepareControlsForTOC];
}

id objc_msgSend_prepareForLayout(void *a1, const char *a2, ...)
{
  return [a1 prepareForLayout];
}

id objc_msgSend_prepareMovieForTOC(void *a1, const char *a2, ...)
{
  return [a1 prepareMovieForTOC];
}

id objc_msgSend_presentCompletionBlock(void *a1, const char *a2, ...)
{
  return [a1 presentCompletionBlock];
}

id objc_msgSend_presentationContentBodies(void *a1, const char *a2, ...)
{
  return [a1 presentationContentBodies];
}

id objc_msgSend_presentationLayer(void *a1, const char *a2, ...)
{
  return [a1 presentationLayer];
}

id objc_msgSend_presentationMode(void *a1, const char *a2, ...)
{
  return [a1 presentationMode];
}

id objc_msgSend_presentationNode(void *a1, const char *a2, ...)
{
  return [a1 presentationNode];
}

id objc_msgSend_presentationType(void *a1, const char *a2, ...)
{
  return [a1 presentationType];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return [a1 presentedViewController];
}

id objc_msgSend_presentingGlossary(void *a1, const char *a2, ...)
{
  return [a1 presentingGlossary];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return [a1 presentingViewController];
}

id objc_msgSend_pressHandler(void *a1, const char *a2, ...)
{
  return [a1 pressHandler];
}

id objc_msgSend_pressHandlerForPressableReps(void *a1, const char *a2, ...)
{
  return [a1 pressHandlerForPressableReps];
}

id objc_msgSend_pressPoint(void *a1, const char *a2, ...)
{
  return [a1 pressPoint];
}

id objc_msgSend_pressableAction(void *a1, const char *a2, ...)
{
  return [a1 pressableAction];
}

id objc_msgSend_pressableAnimationLayer(void *a1, const char *a2, ...)
{
  return [a1 pressableAnimationLayer];
}

id objc_msgSend_pressableAnimationShadowLayer(void *a1, const char *a2, ...)
{
  return [a1 pressableAnimationShadowLayer];
}

id objc_msgSend_pressableHandler(void *a1, const char *a2, ...)
{
  return [a1 pressableHandler];
}

id objc_msgSend_pressableMoveToHitTestFront(void *a1, const char *a2, ...)
{
  return [a1 pressableMoveToHitTestFront];
}

id objc_msgSend_pressableNaturalBounds(void *a1, const char *a2, ...)
{
  return [a1 pressableNaturalBounds];
}

id objc_msgSend_pressableRep(void *a1, const char *a2, ...)
{
  return [a1 pressableRep];
}

id objc_msgSend_pressed(void *a1, const char *a2, ...)
{
  return [a1 pressed];
}

id objc_msgSend_pressedTargetIndex(void *a1, const char *a2, ...)
{
  return [a1 pressedTargetIndex];
}

id objc_msgSend_prevBookspot(void *a1, const char *a2, ...)
{
  return [a1 prevBookspot];
}

id objc_msgSend_prevButton(void *a1, const char *a2, ...)
{
  return [a1 prevButton];
}

id objc_msgSend_prevButtonFrame(void *a1, const char *a2, ...)
{
  return [a1 prevButtonFrame];
}

id objc_msgSend_prevCaption(void *a1, const char *a2, ...)
{
  return [a1 prevCaption];
}

id objc_msgSend_preventBounceAnimation(void *a1, const char *a2, ...)
{
  return [a1 preventBounceAnimation];
}

id objc_msgSend_preventChildInducedBounce(void *a1, const char *a2, ...)
{
  return [a1 preventChildInducedBounce];
}

id objc_msgSend_preventHighlighting(void *a1, const char *a2, ...)
{
  return [a1 preventHighlighting];
}

id objc_msgSend_preventUseOfEncryptionCache(void *a1, const char *a2, ...)
{
  return [a1 preventUseOfEncryptionCache];
}

id objc_msgSend_preventVisibleInfoUpdates(void *a1, const char *a2, ...)
{
  return [a1 preventVisibleInfoUpdates];
}

id objc_msgSend_previousBlendedWeight(void *a1, const char *a2, ...)
{
  return [a1 previousBlendedWeight];
}

id objc_msgSend_previousCallout(void *a1, const char *a2, ...)
{
  return [a1 previousCallout];
}

id objc_msgSend_previousLocation1(void *a1, const char *a2, ...)
{
  return [a1 previousLocation1];
}

id objc_msgSend_previousLocation2(void *a1, const char *a2, ...)
{
  return [a1 previousLocation2];
}

id objc_msgSend_previousSibling(void *a1, const char *a2, ...)
{
  return [a1 previousSibling];
}

id objc_msgSend_previousSlideIndex(void *a1, const char *a2, ...)
{
  return [a1 previousSlideIndex];
}

id objc_msgSend_previousVisibleAbsolutePageNumber(void *a1, const char *a2, ...)
{
  return [a1 previousVisibleAbsolutePageNumber];
}

id objc_msgSend_primaryColor(void *a1, const char *a2, ...)
{
  return [a1 primaryColor];
}

id objc_msgSend_primaryTextColor(void *a1, const char *a2, ...)
{
  return [a1 primaryTextColor];
}

id objc_msgSend_processHintCollections(void *a1, const char *a2, ...)
{
  return [a1 processHintCollections];
}

id objc_msgSend_processHints(void *a1, const char *a2, ...)
{
  return [a1 processHints];
}

id objc_msgSend_processOrientation(void *a1, const char *a2, ...)
{
  return [a1 processOrientation];
}

id objc_msgSend_processWidowAndInflation(void *a1, const char *a2, ...)
{
  return [a1 processWidowAndInflation];
}

id objc_msgSend_processingInstructionReaderClass(void *a1, const char *a2, ...)
{
  return [a1 processingInstructionReaderClass];
}

id objc_msgSend_progressKitID(void *a1, const char *a2, ...)
{
  return [a1 progressKitID];
}

id objc_msgSend_progressKitSectionID(void *a1, const char *a2, ...)
{
  return [a1 progressKitSectionID];
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return [a1 progressView];
}

id objc_msgSend_prompt(void *a1, const char *a2, ...)
{
  return [a1 prompt];
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return [a1 properties];
}

id objc_msgSend_propertyInfos(void *a1, const char *a2, ...)
{
  return [a1 propertyInfos];
}

id objc_msgSend_propertyList(void *a1, const char *a2, ...)
{
  return [a1 propertyList];
}

id objc_msgSend_propertyMap(void *a1, const char *a2, ...)
{
  return [a1 propertyMap];
}

id objc_msgSend_propertySet(void *a1, const char *a2, ...)
{
  return [a1 propertySet];
}

id objc_msgSend_propertySource(void *a1, const char *a2, ...)
{
  return [a1 propertySource];
}

id objc_msgSend_providerIndex(void *a1, const char *a2, ...)
{
  return [a1 providerIndex];
}

id objc_msgSend_pulsating(void *a1, const char *a2, ...)
{
  return [a1 pulsating];
}

id objc_msgSend_pushDisableImageSizing(void *a1, const char *a2, ...)
{
  return [a1 pushDisableImageSizing];
}

id objc_msgSend_pushDisableInfoUpdates(void *a1, const char *a2, ...)
{
  return [a1 pushDisableInfoUpdates];
}

id objc_msgSend_pushDisableUpdates(void *a1, const char *a2, ...)
{
  return [a1 pushDisableUpdates];
}

id objc_msgSend_pushLayoutDisabled(void *a1, const char *a2, ...)
{
  return [a1 pushLayoutDisabled];
}

id objc_msgSend_pushMinimizeLayoutPadding(void *a1, const char *a2, ...)
{
  return [a1 pushMinimizeLayoutPadding];
}

id objc_msgSend_pushState(void *a1, const char *a2, ...)
{
  return [a1 pushState];
}

id objc_msgSend_pushThreadedLayoutAndRenderDisabled(void *a1, const char *a2, ...)
{
  return [a1 pushThreadedLayoutAndRenderDisabled];
}

id objc_msgSend_putTOCInBack(void *a1, const char *a2, ...)
{
  return [a1 putTOCInBack];
}

id objc_msgSend_quality(void *a1, const char *a2, ...)
{
  return [a1 quality];
}

id objc_msgSend_quarternaryTextColor(void *a1, const char *a2, ...)
{
  return [a1 quarternaryTextColor];
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return [a1 query];
}

id objc_msgSend_question(void *a1, const char *a2, ...)
{
  return [a1 question];
}

id objc_msgSend_questionCount(void *a1, const char *a2, ...)
{
  return [a1 questionCount];
}

id objc_msgSend_questionDescriptions(void *a1, const char *a2, ...)
{
  return [a1 questionDescriptions];
}

id objc_msgSend_questionID(void *a1, const char *a2, ...)
{
  return [a1 questionID];
}

id objc_msgSend_questionIndex(void *a1, const char *a2, ...)
{
  return [a1 questionIndex];
}

id objc_msgSend_questionLayout(void *a1, const char *a2, ...)
{
  return [a1 questionLayout];
}

id objc_msgSend_questionNumberStyle(void *a1, const char *a2, ...)
{
  return [a1 questionNumberStyle];
}

id objc_msgSend_questionState(void *a1, const char *a2, ...)
{
  return [a1 questionState];
}

id objc_msgSend_questionType(void *a1, const char *a2, ...)
{
  return [a1 questionType];
}

id objc_msgSend_questions(void *a1, const char *a2, ...)
{
  return [a1 questions];
}

id objc_msgSend_queuedOperations(void *a1, const char *a2, ...)
{
  return [a1 queuedOperations];
}

id objc_msgSend_quickSpeakSupportLoaded(void *a1, const char *a2, ...)
{
  return [a1 quickSpeakSupportLoaded];
}

id objc_msgSend_radioState(void *a1, const char *a2, ...)
{
  return [a1 radioState];
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return [a1 raise];
}

id objc_msgSend_randomDouble(void *a1, const char *a2, ...)
{
  return [a1 randomDouble];
}

id objc_msgSend_randomGenerator(void *a1, const char *a2, ...)
{
  return [a1 randomGenerator];
}

id objc_msgSend_randomParticleSizeMinMax(void *a1, const char *a2, ...)
{
  return [a1 randomParticleSizeMinMax];
}

id objc_msgSend_randomParticleSpeedMax(void *a1, const char *a2, ...)
{
  return [a1 randomParticleSpeedMax];
}

id objc_msgSend_randomParticleSpeedMinMax(void *a1, const char *a2, ...)
{
  return [a1 randomParticleSpeedMinMax];
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return [a1 range];
}

id objc_msgSend_rangeInRep(void *a1, const char *a2, ...)
{
  return [a1 rangeInRep];
}

id objc_msgSend_rangeOfInterest(void *a1, const char *a2, ...)
{
  return [a1 rangeOfInterest];
}

id objc_msgSend_rangePredicate(void *a1, const char *a2, ...)
{
  return [a1 rangePredicate];
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return [a1 rangeValue];
}

id objc_msgSend_rank(void *a1, const char *a2, ...)
{
  return [a1 rank];
}

id objc_msgSend_rate(void *a1, const char *a2, ...)
{
  return [a1 rate];
}

id objc_msgSend_readAnimationCurvesFromFile(void *a1, const char *a2, ...)
{
  return [a1 readAnimationCurvesFromFile];
}

id objc_msgSend_reader(void *a1, const char *a2, ...)
{
  return [a1 reader];
}

id objc_msgSend_readerState(void *a1, const char *a2, ...)
{
  return [a1 readerState];
}

id objc_msgSend_readingProgress(void *a1, const char *a2, ...)
{
  return [a1 readingProgress];
}

id objc_msgSend_readingProgressHighWaterMark(void *a1, const char *a2, ...)
{
  return [a1 readingProgressHighWaterMark];
}

id objc_msgSend_readingProgressHighwaterMark(void *a1, const char *a2, ...)
{
  return [a1 readingProgressHighwaterMark];
}

id objc_msgSend_readingSessionData(void *a1, const char *a2, ...)
{
  return [a1 readingSessionData];
}

id objc_msgSend_readingStatisticsCollector(void *a1, const char *a2, ...)
{
  return [a1 readingStatisticsCollector];
}

id objc_msgSend_readingStatisticsControllerLoaded(void *a1, const char *a2, ...)
{
  return [a1 readingStatisticsControllerLoaded];
}

id objc_msgSend_readingStatisticsDelegate(void *a1, const char *a2, ...)
{
  return [a1 readingStatisticsDelegate];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return [a1 reason];
}

id objc_msgSend_recentSearchCount(void *a1, const char *a2, ...)
{
  return [a1 recentSearchCount];
}

id objc_msgSend_recentSearches(void *a1, const char *a2, ...)
{
  return [a1 recentSearches];
}

id objc_msgSend_recognizeTimer(void *a1, const char *a2, ...)
{
  return [a1 recognizeTimer];
}

id objc_msgSend_recordCurrentLocationInHistory(void *a1, const char *a2, ...)
{
  return [a1 recordCurrentLocationInHistory];
}

id objc_msgSend_recordOutgoingMajorNavigationJump(void *a1, const char *a2, ...)
{
  return [a1 recordOutgoingMajorNavigationJump];
}

id objc_msgSend_recreateAllLayoutsAndReps(void *a1, const char *a2, ...)
{
  return [a1 recreateAllLayoutsAndReps];
}

id objc_msgSend_rectForAnchor(void *a1, const char *a2, ...)
{
  return [a1 rectForAnchor];
}

id objc_msgSend_rectForCompletion(void *a1, const char *a2, ...)
{
  return [a1 rectForCompletion];
}

id objc_msgSend_rectForFlowAnchor(void *a1, const char *a2, ...)
{
  return [a1 rectForFlowAnchor];
}

id objc_msgSend_rectOfTopLevelLayouts(void *a1, const char *a2, ...)
{
  return [a1 rectOfTopLevelLayouts];
}

id objc_msgSend_recycle(void *a1, const char *a2, ...)
{
  return [a1 recycle];
}

id objc_msgSend_red(void *a1, const char *a2, ...)
{
  return [a1 red];
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return [a1 redColor];
}

id objc_msgSend_redComponent(void *a1, const char *a2, ...)
{
  return [a1 redComponent];
}

id objc_msgSend_refTextForRIDs(void *a1, const char *a2, ...)
{
  return [a1 refTextForRIDs];
}

id objc_msgSend_referenceAnchorID(void *a1, const char *a2, ...)
{
  return [a1 referenceAnchorID];
}

id objc_msgSend_referenceAnchorStartIndex(void *a1, const char *a2, ...)
{
  return [a1 referenceAnchorStartIndex];
}

id objc_msgSend_referenceColor(void *a1, const char *a2, ...)
{
  return [a1 referenceColor];
}

id objc_msgSend_referenceContent(void *a1, const char *a2, ...)
{
  return [a1 referenceContent];
}

id objc_msgSend_referenceContentSize(void *a1, const char *a2, ...)
{
  return [a1 referenceContentSize];
}

id objc_msgSend_referenceContentType(void *a1, const char *a2, ...)
{
  return [a1 referenceContentType];
}

id objc_msgSend_reflection(void *a1, const char *a2, ...)
{
  return [a1 reflection];
}

id objc_msgSend_reflectionLayer(void *a1, const char *a2, ...)
{
  return [a1 reflectionLayer];
}

id objc_msgSend_reflowablePaginationController(void *a1, const char *a2, ...)
{
  return [a1 reflowablePaginationController];
}

id objc_msgSend_refreshStatusBarAppearance(void *a1, const char *a2, ...)
{
  return [a1 refreshStatusBarAppearance];
}

id objc_msgSend_registeredForNotification(void *a1, const char *a2, ...)
{
  return [a1 registeredForNotification];
}

id objc_msgSend_regularHeightPredicate(void *a1, const char *a2, ...)
{
  return [a1 regularHeightPredicate];
}

id objc_msgSend_regularTextConstraints(void *a1, const char *a2, ...)
{
  return [a1 regularTextConstraints];
}

id objc_msgSend_regularWidthPredicate(void *a1, const char *a2, ...)
{
  return [a1 regularWidthPredicate];
}

id objc_msgSend_rejectDuplicates(void *a1, const char *a2, ...)
{
  return [a1 rejectDuplicates];
}

id objc_msgSend_relatedTermsDividerLayout(void *a1, const char *a2, ...)
{
  return [a1 relatedTermsDividerLayout];
}

id objc_msgSend_relatedTermsInfo(void *a1, const char *a2, ...)
{
  return [a1 relatedTermsInfo];
}

id objc_msgSend_relatedTermsLabelLayout(void *a1, const char *a2, ...)
{
  return [a1 relatedTermsLabelLayout];
}

id objc_msgSend_relatedTermsLayout(void *a1, const char *a2, ...)
{
  return [a1 relatedTermsLayout];
}

id objc_msgSend_relativeLuminance(void *a1, const char *a2, ...)
{
  return [a1 relativeLuminance];
}

id objc_msgSend_relativePageIndex(void *a1, const char *a2, ...)
{
  return [a1 relativePageIndex];
}

id objc_msgSend_relativePageIndexInParent(void *a1, const char *a2, ...)
{
  return [a1 relativePageIndexInParent];
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return [a1 relativePath];
}

id objc_msgSend_relativeString(void *a1, const char *a2, ...)
{
  return [a1 relativeString];
}

id objc_msgSend_releaseAuxiliaryCachedViews(void *a1, const char *a2, ...)
{
  return [a1 releaseAuxiliaryCachedViews];
}

id objc_msgSend_releaseBodies(void *a1, const char *a2, ...)
{
  return [a1 releaseBodies];
}

id objc_msgSend_releaseChildViewControllers(void *a1, const char *a2, ...)
{
  return [a1 releaseChildViewControllers];
}

id objc_msgSend_releaseSingleTexture(void *a1, const char *a2, ...)
{
  return [a1 releaseSingleTexture];
}

id objc_msgSend_releaseViews(void *a1, const char *a2, ...)
{
  return [a1 releaseViews];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return [a1 reloadData];
}

id objc_msgSend_removeAllAnimations(void *a1, const char *a2, ...)
{
  return [a1 removeAllAnimations];
}

id objc_msgSend_removeAllHints(void *a1, const char *a2, ...)
{
  return [a1 removeAllHints];
}

id objc_msgSend_removeAllIndexes(void *a1, const char *a2, ...)
{
  return [a1 removeAllIndexes];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return [a1 removeAllObjects];
}

id objc_msgSend_removeAnimations(void *a1, const char *a2, ...)
{
  return [a1 removeAnimations];
}

id objc_msgSend_removeButtonShadow(void *a1, const char *a2, ...)
{
  return [a1 removeButtonShadow];
}

id objc_msgSend_removeCameraAnimation(void *a1, const char *a2, ...)
{
  return [a1 removeCameraAnimation];
}

id objc_msgSend_removeFromParent(void *a1, const char *a2, ...)
{
  return [a1 removeFromParent];
}

id objc_msgSend_removeFromParentNode(void *a1, const char *a2, ...)
{
  return [a1 removeFromParentNode];
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return [a1 removeFromParentViewController];
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return [a1 removeFromSuperlayer];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return [a1 removeFromSuperview];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return [a1 removeLastObject];
}

id objc_msgSend_removeMomentumTiltAnimation(void *a1, const char *a2, ...)
{
  return [a1 removeMomentumTiltAnimation];
}

id objc_msgSend_removePosterLayer(void *a1, const char *a2, ...)
{
  return [a1 removePosterLayer];
}

id objc_msgSend_removePressAnimation(void *a1, const char *a2, ...)
{
  return [a1 removePressAnimation];
}

id objc_msgSend_removeRecoilAnimation(void *a1, const char *a2, ...)
{
  return [a1 removeRecoilAnimation];
}

id objc_msgSend_removeRelaxAnimation(void *a1, const char *a2, ...)
{
  return [a1 removeRelaxAnimation];
}

id objc_msgSend_removeTOC(void *a1, const char *a2, ...)
{
  return [a1 removeTOC];
}

id objc_msgSend_removeUninheritedProperties(void *a1, const char *a2, ...)
{
  return [a1 removeUninheritedProperties];
}

id objc_msgSend_removed(void *a1, const char *a2, ...)
{
  return [a1 removed];
}

id objc_msgSend_renderEncoder(void *a1, const char *a2, ...)
{
  return [a1 renderEncoder];
}

id objc_msgSend_renderPassDescriptor(void *a1, const char *a2, ...)
{
  return [a1 renderPassDescriptor];
}

id objc_msgSend_renderTextures(void *a1, const char *a2, ...)
{
  return [a1 renderTextures];
}

id objc_msgSend_renderedAnnotation(void *a1, const char *a2, ...)
{
  return [a1 renderedAnnotation];
}

id objc_msgSend_renderer(void *a1, const char *a2, ...)
{
  return [a1 renderer];
}

id objc_msgSend_rendererType(void *a1, const char *a2, ...)
{
  return [a1 rendererType];
}

id objc_msgSend_rep(void *a1, const char *a2, ...)
{
  return [a1 rep];
}

id objc_msgSend_repChildViews(void *a1, const char *a2, ...)
{
  return [a1 repChildViews];
}

id objc_msgSend_repClass(void *a1, const char *a2, ...)
{
  return [a1 repClass];
}

id objc_msgSend_repClassOverride(void *a1, const char *a2, ...)
{
  return [a1 repClassOverride];
}

id objc_msgSend_reparentingView(void *a1, const char *a2, ...)
{
  return [a1 reparentingView];
}

id objc_msgSend_replaceListLabelTypeNumberWithBullet(void *a1, const char *a2, ...)
{
  return [a1 replaceListLabelTypeNumberWithBullet];
}

id objc_msgSend_replaceMetalLayerWithProxy(void *a1, const char *a2, ...)
{
  return [a1 replaceMetalLayerWithProxy];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return [a1 request];
}

id objc_msgSend_requestScope(void *a1, const char *a2, ...)
{
  return [a1 requestScope];
}

id objc_msgSend_requestedURL(void *a1, const char *a2, ...)
{
  return [a1 requestedURL];
}

id objc_msgSend_requiredVersion(void *a1, const char *a2, ...)
{
  return [a1 requiredVersion];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return [a1 reset];
}

id objc_msgSend_resetBreadCrumbs(void *a1, const char *a2, ...)
{
  return [a1 resetBreadCrumbs];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return [a1 resignFirstResponder];
}

id objc_msgSend_resizeOriginalLayoutFrame(void *a1, const char *a2, ...)
{
  return [a1 resizeOriginalLayoutFrame];
}

id objc_msgSend_resizeOriginalViewScale(void *a1, const char *a2, ...)
{
  return [a1 resizeOriginalViewScale];
}

id objc_msgSend_resizeToFitCurrentWidth(void *a1, const char *a2, ...)
{
  return [a1 resizeToFitCurrentWidth];
}

id objc_msgSend_resizeToFitTightly(void *a1, const char *a2, ...)
{
  return [a1 resizeToFitTightly];
}

id objc_msgSend_resourcePath(void *a1, const char *a2, ...)
{
  return [a1 resourcePath];
}

id objc_msgSend_resourceSpecifier(void *a1, const char *a2, ...)
{
  return [a1 resourceSpecifier];
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return [a1 response];
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return [a1 result];
}

id objc_msgSend_resultLabel(void *a1, const char *a2, ...)
{
  return [a1 resultLabel];
}

id objc_msgSend_resultsDataSource(void *a1, const char *a2, ...)
{
  return [a1 resultsDataSource];
}

id objc_msgSend_resultsLayout(void *a1, const char *a2, ...)
{
  return [a1 resultsLayout];
}

id objc_msgSend_resultsViewController(void *a1, const char *a2, ...)
{
  return [a1 resultsViewController];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return [a1 resume];
}

id objc_msgSend_resumeBackgroundLoading(void *a1, const char *a2, ...)
{
  return [a1 resumeBackgroundLoading];
}

id objc_msgSend_resumeBackgroundSoundtrack(void *a1, const char *a2, ...)
{
  return [a1 resumeBackgroundSoundtrack];
}

id objc_msgSend_resumeEditing(void *a1, const char *a2, ...)
{
  return [a1 resumeEditing];
}

id objc_msgSend_resumeIdleAnimationIfNecessary(void *a1, const char *a2, ...)
{
  return [a1 resumeIdleAnimationIfNecessary];
}

id objc_msgSend_resumeLayerUpdatesAndLayoutImmediately(void *a1, const char *a2, ...)
{
  return [a1 resumeLayerUpdatesAndLayoutImmediately];
}

id objc_msgSend_resumeMediaPlayback(void *a1, const char *a2, ...)
{
  return [a1 resumeMediaPlayback];
}

id objc_msgSend_resumeMoviePlayback(void *a1, const char *a2, ...)
{
  return [a1 resumeMoviePlayback];
}

id objc_msgSend_retainBodies(void *a1, const char *a2, ...)
{
  return [a1 retainBodies];
}

id objc_msgSend_retreatToPreviousSlide(void *a1, const char *a2, ...)
{
  return [a1 retreatToPreviousSlide];
}

id objc_msgSend_returnToBook(void *a1, const char *a2, ...)
{
  return [a1 returnToBook];
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return [a1 reuseIdentifier];
}

id objc_msgSend_revealTOCDelegate(void *a1, const char *a2, ...)
{
  return [a1 revealTOCDelegate];
}

id objc_msgSend_revealTOCPanController(void *a1, const char *a2, ...)
{
  return [a1 revealTOCPanController];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 reverseObjectEnumerator];
}

id objc_msgSend_reviewID(void *a1, const char *a2, ...)
{
  return [a1 reviewID];
}

id objc_msgSend_reviewQuestionAnswerUpdated(void *a1, const char *a2, ...)
{
  return [a1 reviewQuestionAnswerUpdated];
}

id objc_msgSend_reviewQuestionIsAnswerCheckable(void *a1, const char *a2, ...)
{
  return [a1 reviewQuestionIsAnswerCheckable];
}

id objc_msgSend_reviewSummaryContext(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryContext];
}

id objc_msgSend_reviewSummaryCorrectCount(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryCorrectCount];
}

id objc_msgSend_reviewSummaryInstructionalParagraphStyle(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryInstructionalParagraphStyle];
}

id objc_msgSend_reviewSummaryQuestionCount(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryQuestionCount];
}

id objc_msgSend_reviewSummaryResultsParagraphStyle(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryResultsParagraphStyle];
}

id objc_msgSend_reviewSummaryShouldShowResults(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryShouldShowResults];
}

id objc_msgSend_reviewSummaryTitleParagraphStyle(void *a1, const char *a2, ...)
{
  return [a1 reviewSummaryTitleParagraphStyle];
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return [a1 rightAnchor];
}

id objc_msgSend_rightMargin(void *a1, const char *a2, ...)
{
  return [a1 rightMargin];
}

id objc_msgSend_rightOverscrollView(void *a1, const char *a2, ...)
{
  return [a1 rightOverscrollView];
}

id objc_msgSend_rightPadding(void *a1, const char *a2, ...)
{
  return [a1 rightPadding];
}

id objc_msgSend_roleDescription(void *a1, const char *a2, ...)
{
  return [a1 roleDescription];
}

id objc_msgSend_rootBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 rootBackgroundColor];
}

id objc_msgSend_rootCanvasView(void *a1, const char *a2, ...)
{
  return [a1 rootCanvasView];
}

id objc_msgSend_rootFolder(void *a1, const char *a2, ...)
{
  return [a1 rootFolder];
}

id objc_msgSend_rootLayout(void *a1, const char *a2, ...)
{
  return [a1 rootLayout];
}

id objc_msgSend_rootNode(void *a1, const char *a2, ...)
{
  return [a1 rootNode];
}

id objc_msgSend_rootPath(void *a1, const char *a2, ...)
{
  return [a1 rootPath];
}

id objc_msgSend_rootStage(void *a1, const char *a2, ...)
{
  return [a1 rootStage];
}

id objc_msgSend_rootSuperview(void *a1, const char *a2, ...)
{
  return [a1 rootSuperview];
}

id objc_msgSend_rootSuperviewController(void *a1, const char *a2, ...)
{
  return [a1 rootSuperviewController];
}

id objc_msgSend_rootView(void *a1, const char *a2, ...)
{
  return [a1 rootView];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return [a1 rootViewController];
}

id objc_msgSend_rootWindow(void *a1, const char *a2, ...)
{
  return [a1 rootWindow];
}

id objc_msgSend_rotation(void *a1, const char *a2, ...)
{
  return [a1 rotation];
}

id objc_msgSend_rotationAttribute(void *a1, const char *a2, ...)
{
  return [a1 rotationAttribute];
}

id objc_msgSend_rotationConstraints(void *a1, const char *a2, ...)
{
  return [a1 rotationConstraints];
}

id objc_msgSend_rotationDuration(void *a1, const char *a2, ...)
{
  return [a1 rotationDuration];
}

id objc_msgSend_rotationMax(void *a1, const char *a2, ...)
{
  return [a1 rotationMax];
}

id objc_msgSend_rotationScrim(void *a1, const char *a2, ...)
{
  return [a1 rotationScrim];
}

id objc_msgSend_rotationSnapshot(void *a1, const char *a2, ...)
{
  return [a1 rotationSnapshot];
}

id objc_msgSend_roundDashPattern(void *a1, const char *a2, ...)
{
  return [a1 roundDashPattern];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return [a1 row];
}

id objc_msgSend_rowCount(void *a1, const char *a2, ...)
{
  return [a1 rowCount];
}

id objc_msgSend_rowHeight(void *a1, const char *a2, ...)
{
  return [a1 rowHeight];
}

id objc_msgSend_rowIndex(void *a1, const char *a2, ...)
{
  return [a1 rowIndex];
}

id objc_msgSend_rowLabel(void *a1, const char *a2, ...)
{
  return [a1 rowLabel];
}

id objc_msgSend_runPreloadOptimizations(void *a1, const char *a2, ...)
{
  return [a1 runPreloadOptimizations];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return [a1 safeAreaInsets];
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 safeAreaLayoutGuide];
}

id objc_msgSend_savePaginationCache(void *a1, const char *a2, ...)
{
  return [a1 savePaginationCache];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return [a1 scale];
}

id objc_msgSend_scaleAttribute(void *a1, const char *a2, ...)
{
  return [a1 scaleAttribute];
}

id objc_msgSend_scaleMax(void *a1, const char *a2, ...)
{
  return [a1 scaleMax];
}

id objc_msgSend_scaleThreshold(void *a1, const char *a2, ...)
{
  return [a1 scaleThreshold];
}

id objc_msgSend_sccLayout(void *a1, const char *a2, ...)
{
  return [a1 sccLayout];
}

id objc_msgSend_scene(void *a1, const char *a2, ...)
{
  return [a1 scene];
}

id objc_msgSend_sceneController(void *a1, const char *a2, ...)
{
  return [a1 sceneController];
}

id objc_msgSend_sceneDidReceiveRotationLayoutDuringFreeTransform(void *a1, const char *a2, ...)
{
  return [a1 sceneDidReceiveRotationLayoutDuringFreeTransform];
}

id objc_msgSend_sceneFrame(void *a1, const char *a2, ...)
{
  return [a1 sceneFrame];
}

id objc_msgSend_sceneInfo(void *a1, const char *a2, ...)
{
  return [a1 sceneInfo];
}

id objc_msgSend_sceneLayer(void *a1, const char *a2, ...)
{
  return [a1 sceneLayer];
}

id objc_msgSend_sceneTransferHappened(void *a1, const char *a2, ...)
{
  return [a1 sceneTransferHappened];
}

id objc_msgSend_sceneView(void *a1, const char *a2, ...)
{
  return [a1 sceneView];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return [a1 scheme];
}

id objc_msgSend_score(void *a1, const char *a2, ...)
{
  return [a1 score];
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return [a1 screen];
}

id objc_msgSend_screenBottomContentPlacement(void *a1, const char *a2, ...)
{
  return [a1 screenBottomContentPlacement];
}

id objc_msgSend_screenScaleDidChange(void *a1, const char *a2, ...)
{
  return [a1 screenScaleDidChange];
}

id objc_msgSend_screenTopContentPlacement(void *a1, const char *a2, ...)
{
  return [a1 screenTopContentPlacement];
}

id objc_msgSend_scrimView(void *a1, const char *a2, ...)
{
  return [a1 scrimView];
}

id objc_msgSend_scrollContainerICC(void *a1, const char *a2, ...)
{
  return [a1 scrollContainerICC];
}

id objc_msgSend_scrollContainerRootLayout(void *a1, const char *a2, ...)
{
  return [a1 scrollContainerRootLayout];
}

id objc_msgSend_scrollContentICC(void *a1, const char *a2, ...)
{
  return [a1 scrollContentICC];
}

id objc_msgSend_scrollSwitch(void *a1, const char *a2, ...)
{
  return [a1 scrollSwitch];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return [a1 scrollView];
}

id objc_msgSend_scrollableCanvasControlLayout(void *a1, const char *a2, ...)
{
  return [a1 scrollableCanvasControlLayout];
}

id objc_msgSend_scrollableCanvasController(void *a1, const char *a2, ...)
{
  return [a1 scrollableCanvasController];
}

id objc_msgSend_scrollableCanvasControllers(void *a1, const char *a2, ...)
{
  return [a1 scrollableCanvasControllers];
}

id objc_msgSend_scrollableCanvasHost(void *a1, const char *a2, ...)
{
  return [a1 scrollableCanvasHost];
}

id objc_msgSend_scrollingRowHeight(void *a1, const char *a2, ...)
{
  return [a1 scrollingRowHeight];
}

id objc_msgSend_scrubber(void *a1, const char *a2, ...)
{
  return [a1 scrubber];
}

id objc_msgSend_scrubberCallout(void *a1, const char *a2, ...)
{
  return [a1 scrubberCallout];
}

id objc_msgSend_scrubberCalloutFollowsScrollerThumb(void *a1, const char *a2, ...)
{
  return [a1 scrubberCalloutFollowsScrollerThumb];
}

id objc_msgSend_scrubberCalloutWidth(void *a1, const char *a2, ...)
{
  return [a1 scrubberCalloutWidth];
}

id objc_msgSend_scrubberFrame(void *a1, const char *a2, ...)
{
  return [a1 scrubberFrame];
}

id objc_msgSend_scrubberStyle(void *a1, const char *a2, ...)
{
  return [a1 scrubberStyle];
}

id objc_msgSend_searchBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 searchBackgroundColor];
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return [a1 searchBar];
}

id objc_msgSend_searchBarSeparator(void *a1, const char *a2, ...)
{
  return [a1 searchBarSeparator];
}

id objc_msgSend_searchButtonItem(void *a1, const char *a2, ...)
{
  return [a1 searchButtonItem];
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return [a1 searchController];
}

id objc_msgSend_searchDirection(void *a1, const char *a2, ...)
{
  return [a1 searchDirection];
}

id objc_msgSend_searchDisplayController(void *a1, const char *a2, ...)
{
  return [a1 searchDisplayController];
}

id objc_msgSend_searchEncyclopedia(void *a1, const char *a2, ...)
{
  return [a1 searchEncyclopedia];
}

id objc_msgSend_searchField(void *a1, const char *a2, ...)
{
  return [a1 searchField];
}

id objc_msgSend_searchIndex(void *a1, const char *a2, ...)
{
  return [a1 searchIndex];
}

id objc_msgSend_searchIndexEntry(void *a1, const char *a2, ...)
{
  return [a1 searchIndexEntry];
}

id objc_msgSend_searchNotes(void *a1, const char *a2, ...)
{
  return [a1 searchNotes];
}

id objc_msgSend_searchRefTextEntry(void *a1, const char *a2, ...)
{
  return [a1 searchRefTextEntry];
}

id objc_msgSend_searchResultCount(void *a1, const char *a2, ...)
{
  return [a1 searchResultCount];
}

id objc_msgSend_searchTargetProvider(void *a1, const char *a2, ...)
{
  return [a1 searchTargetProvider];
}

id objc_msgSend_searchText(void *a1, const char *a2, ...)
{
  return [a1 searchText];
}

id objc_msgSend_searchView(void *a1, const char *a2, ...)
{
  return [a1 searchView];
}

id objc_msgSend_searchViewController(void *a1, const char *a2, ...)
{
  return [a1 searchViewController];
}

id objc_msgSend_searchViewMode(void *a1, const char *a2, ...)
{
  return [a1 searchViewMode];
}

id objc_msgSend_searchWeb(void *a1, const char *a2, ...)
{
  return [a1 searchWeb];
}

id objc_msgSend_searchingForPredeterminedString(void *a1, const char *a2, ...)
{
  return [a1 searchingForPredeterminedString];
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return [a1 second];
}

id objc_msgSend_secondaryBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 secondaryBackgroundColor];
}

id objc_msgSend_secondaryGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 secondaryGroupedBackgroundColor];
}

id objc_msgSend_secondaryTextColor(void *a1, const char *a2, ...)
{
  return [a1 secondaryTextColor];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return [a1 section];
}

id objc_msgSend_sectionArray(void *a1, const char *a2, ...)
{
  return [a1 sectionArray];
}

id objc_msgSend_sectionController(void *a1, const char *a2, ...)
{
  return [a1 sectionController];
}

id objc_msgSend_sectionIdentifier(void *a1, const char *a2, ...)
{
  return [a1 sectionIdentifier];
}

id objc_msgSend_sectionIndex(void *a1, const char *a2, ...)
{
  return [a1 sectionIndex];
}

id objc_msgSend_sectionIndexTitles(void *a1, const char *a2, ...)
{
  return [a1 sectionIndexTitles];
}

id objc_msgSend_sectionInfos(void *a1, const char *a2, ...)
{
  return [a1 sectionInfos];
}

id objc_msgSend_sectionLabel(void *a1, const char *a2, ...)
{
  return [a1 sectionLabel];
}

id objc_msgSend_sectionLabelBaselineConstraint(void *a1, const char *a2, ...)
{
  return [a1 sectionLabelBaselineConstraint];
}

id objc_msgSend_sectionLabelFontSize(void *a1, const char *a2, ...)
{
  return [a1 sectionLabelFontSize];
}

id objc_msgSend_sectionLabelRightMargin(void *a1, const char *a2, ...)
{
  return [a1 sectionLabelRightMargin];
}

id objc_msgSend_sectionLayout(void *a1, const char *a2, ...)
{
  return [a1 sectionLayout];
}

id objc_msgSend_sectionProviders(void *a1, const char *a2, ...)
{
  return [a1 sectionProviders];
}

id objc_msgSend_sectionProvidersDidChange(void *a1, const char *a2, ...)
{
  return [a1 sectionProvidersDidChange];
}

id objc_msgSend_sectionTitle(void *a1, const char *a2, ...)
{
  return [a1 sectionTitle];
}

id objc_msgSend_sectionTitleHeight(void *a1, const char *a2, ...)
{
  return [a1 sectionTitleHeight];
}

id objc_msgSend_sectionTitleHeightForAllChapters(void *a1, const char *a2, ...)
{
  return [a1 sectionTitleHeightForAllChapters];
}

id objc_msgSend_sectionTitles(void *a1, const char *a2, ...)
{
  return [a1 sectionTitles];
}

id objc_msgSend_sections(void *a1, const char *a2, ...)
{
  return [a1 sections];
}

id objc_msgSend_seekDistinctSpots(void *a1, const char *a2, ...)
{
  return [a1 seekDistinctSpots];
}

id objc_msgSend_seeking(void *a1, const char *a2, ...)
{
  return [a1 seeking];
}

id objc_msgSend_selectAllNotes(void *a1, const char *a2, ...)
{
  return [a1 selectAllNotes];
}

id objc_msgSend_selectOnLongPress(void *a1, const char *a2, ...)
{
  return [a1 selectOnLongPress];
}

id objc_msgSend_selected(void *a1, const char *a2, ...)
{
  return [a1 selected];
}

id objc_msgSend_selectedBackgroundView(void *a1, const char *a2, ...)
{
  return [a1 selectedBackgroundView];
}

id objc_msgSend_selectedCalloutIndex(void *a1, const char *a2, ...)
{
  return [a1 selectedCalloutIndex];
}

id objc_msgSend_selectedChoices(void *a1, const char *a2, ...)
{
  return [a1 selectedChoices];
}

id objc_msgSend_selectedIndexPath(void *a1, const char *a2, ...)
{
  return [a1 selectedIndexPath];
}

id objc_msgSend_selectedNotes(void *a1, const char *a2, ...)
{
  return [a1 selectedNotes];
}

id objc_msgSend_selectedSectionController(void *a1, const char *a2, ...)
{
  return [a1 selectedSectionController];
}

id objc_msgSend_selection(void *a1, const char *a2, ...)
{
  return [a1 selection];
}

id objc_msgSend_selectionPostContextText(void *a1, const char *a2, ...)
{
  return [a1 selectionPostContextText];
}

id objc_msgSend_selectionPreContextText(void *a1, const char *a2, ...)
{
  return [a1 selectionPreContextText];
}

id objc_msgSend_selector(void *a1, const char *a2, ...)
{
  return [a1 selector];
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return [a1 semanticContentAttribute];
}

id objc_msgSend_separator(void *a1, const char *a2, ...)
{
  return [a1 separator];
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return [a1 separatorColor];
}

id objc_msgSend_separatorColorWhite(void *a1, const char *a2, ...)
{
  return [a1 separatorColorWhite];
}

id objc_msgSend_separatorStyle(void *a1, const char *a2, ...)
{
  return [a1 separatorStyle];
}

id objc_msgSend_separatorView(void *a1, const char *a2, ...)
{
  return [a1 separatorView];
}

id objc_msgSend_separatorsVisible(void *a1, const char *a2, ...)
{
  return [a1 separatorsVisible];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return [a1 session];
}

id objc_msgSend_sessionContextType(void *a1, const char *a2, ...)
{
  return [a1 sessionContextType];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return [a1 set];
}

id objc_msgSend_setCenterTitleForCurrentNavigationUnit(void *a1, const char *a2, ...)
{
  return [a1 setCenterTitleForCurrentNavigationUnit];
}

id objc_msgSend_setCfiPathForCurrentStorage(void *a1, const char *a2, ...)
{
  return [a1 setCfiPathForCurrentStorage];
}

id objc_msgSend_setCurrentBreakStateSameAsParent(void *a1, const char *a2, ...)
{
  return [a1 setCurrentBreakStateSameAsParent];
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return [a1 setFill];
}

id objc_msgSend_setFlowAsCurrent(void *a1, const char *a2, ...)
{
  return [a1 setFlowAsCurrent];
}

id objc_msgSend_setFrame(void *a1, const char *a2, ...)
{
  return [a1 setFrame];
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return [a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return [a1 setNeedsLayout];
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return [a1 setNeedsStatusBarAppearanceUpdate];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return [a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNeedsUpdateOfHomeIndicatorAutoHidden(void *a1, const char *a2, ...)
{
  return [a1 setNeedsUpdateOfHomeIndicatorAutoHidden];
}

id objc_msgSend_setNeedsWhitePointAdaptivityStyleUpdate(void *a1, const char *a2, ...)
{
  return [a1 setNeedsWhitePointAdaptivityStyleUpdate];
}

id objc_msgSend_setPaginatedAsCurrent(void *a1, const char *a2, ...)
{
  return [a1 setPaginatedAsCurrent];
}

id objc_msgSend_setParentBreakStateSameAsCurrent(void *a1, const char *a2, ...)
{
  return [a1 setParentBreakStateSameAsCurrent];
}

id objc_msgSend_setStroke(void *a1, const char *a2, ...)
{
  return [a1 setStroke];
}

id objc_msgSend_setUpGestureRecognizers(void *a1, const char *a2, ...)
{
  return [a1 setUpGestureRecognizers];
}

id objc_msgSend_settingSearchForString(void *a1, const char *a2, ...)
{
  return [a1 settingSearchForString];
}

id objc_msgSend_settingToolbarHidden(void *a1, const char *a2, ...)
{
  return [a1 settingToolbarHidden];
}

id objc_msgSend_setupAnimationLayer(void *a1, const char *a2, ...)
{
  return [a1 setupAnimationLayer];
}

id objc_msgSend_setupAnimationLayerForCrossFade(void *a1, const char *a2, ...)
{
  return [a1 setupAnimationLayerForCrossFade];
}

id objc_msgSend_setupEffectIfNecessary(void *a1, const char *a2, ...)
{
  return [a1 setupEffectIfNecessary];
}

id objc_msgSend_setupImmediatePressGesture(void *a1, const char *a2, ...)
{
  return [a1 setupImmediatePressGesture];
}

id objc_msgSend_setupLoadSpinner(void *a1, const char *a2, ...)
{
  return [a1 setupLoadSpinner];
}

id objc_msgSend_setupMetalEffectIfNecessary(void *a1, const char *a2, ...)
{
  return [a1 setupMetalEffectIfNecessary];
}

id objc_msgSend_setupPluginContext(void *a1, const char *a2, ...)
{
  return [a1 setupPluginContext];
}

id objc_msgSend_setupSceneView(void *a1, const char *a2, ...)
{
  return [a1 setupSceneView];
}

id objc_msgSend_setupTarget(void *a1, const char *a2, ...)
{
  return [a1 setupTarget];
}

id objc_msgSend_setupWrapperLayer(void *a1, const char *a2, ...)
{
  return [a1 setupWrapperLayer];
}

id objc_msgSend_shadow(void *a1, const char *a2, ...)
{
  return [a1 shadow];
}

id objc_msgSend_shadowAnimationLayer(void *a1, const char *a2, ...)
{
  return [a1 shadowAnimationLayer];
}

id objc_msgSend_shadowColor(void *a1, const char *a2, ...)
{
  return [a1 shadowColor];
}

id objc_msgSend_shadowFadeOutAnimation(void *a1, const char *a2, ...)
{
  return [a1 shadowFadeOutAnimation];
}

id objc_msgSend_shadowLayer(void *a1, const char *a2, ...)
{
  return [a1 shadowLayer];
}

id objc_msgSend_shadowOffset(void *a1, const char *a2, ...)
{
  return [a1 shadowOffset];
}

id objc_msgSend_shadowOpacity(void *a1, const char *a2, ...)
{
  return [a1 shadowOpacity];
}

id objc_msgSend_shadowPath(void *a1, const char *a2, ...)
{
  return [a1 shadowPath];
}

id objc_msgSend_shadowPressPoint(void *a1, const char *a2, ...)
{
  return [a1 shadowPressPoint];
}

id objc_msgSend_shadowRadius(void *a1, const char *a2, ...)
{
  return [a1 shadowRadius];
}

id objc_msgSend_shadowTransformAnimation(void *a1, const char *a2, ...)
{
  return [a1 shadowTransformAnimation];
}

id objc_msgSend_shapeStyle(void *a1, const char *a2, ...)
{
  return [a1 shapeStyle];
}

id objc_msgSend_shareButtonItem(void *a1, const char *a2, ...)
{
  return [a1 shareButtonItem];
}

id objc_msgSend_shareCaption(void *a1, const char *a2, ...)
{
  return [a1 shareCaption];
}

id objc_msgSend_sharePopoverController(void *a1, const char *a2, ...)
{
  return [a1 sharePopoverController];
}

id objc_msgSend_shareType(void *a1, const char *a2, ...)
{
  return [a1 shareType];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return [a1 shared];
}

id objc_msgSend_sharedAnnotationProvider(void *a1, const char *a2, ...)
{
  return [a1 sharedAnnotationProvider];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return [a1 sharedApplication];
}

id objc_msgSend_sharedCaptionStorage(void *a1, const char *a2, ...)
{
  return [a1 sharedCaptionStorage];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return [a1 sharedController];
}

id objc_msgSend_sharedDelegate(void *a1, const char *a2, ...)
{
  return [a1 sharedDelegate];
}

id objc_msgSend_sharedFrameImageCache(void *a1, const char *a2, ...)
{
  return [a1 sharedFrameImageCache];
}

id objc_msgSend_sharedHTTPCookieStorage(void *a1, const char *a2, ...)
{
  return [a1 sharedHTTPCookieStorage];
}

id objc_msgSend_sharedHyperlinkUIController(void *a1, const char *a2, ...)
{
  return [a1 sharedHyperlinkUIController];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return [a1 sharedInstance];
}

id objc_msgSend_sharedKeyboardMonitor(void *a1, const char *a2, ...)
{
  return [a1 sharedKeyboardMonitor];
}

id objc_msgSend_sharedLogger(void *a1, const char *a2, ...)
{
  return [a1 sharedLogger];
}

id objc_msgSend_sharedLowPriorityDispatcher(void *a1, const char *a2, ...)
{
  return [a1 sharedLowPriorityDispatcher];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return [a1 sharedManager];
}

id objc_msgSend_sharedMenuController(void *a1, const char *a2, ...)
{
  return [a1 sharedMenuController];
}

id objc_msgSend_sharedMetalLayer(void *a1, const char *a2, ...)
{
  return [a1 sharedMetalLayer];
}

id objc_msgSend_sharedMoviePlaybackRegistry(void *a1, const char *a2, ...)
{
  return [a1 sharedMoviePlaybackRegistry];
}

id objc_msgSend_sharedPlugin(void *a1, const char *a2, ...)
{
  return [a1 sharedPlugin];
}

id objc_msgSend_sharedPool(void *a1, const char *a2, ...)
{
  return [a1 sharedPool];
}

id objc_msgSend_sharedRangedMagnifier(void *a1, const char *a2, ...)
{
  return [a1 sharedRangedMagnifier];
}

id objc_msgSend_sharedReporter(void *a1, const char *a2, ...)
{
  return [a1 sharedReporter];
}

id objc_msgSend_sharedSettings(void *a1, const char *a2, ...)
{
  return [a1 sharedSettings];
}

id objc_msgSend_shortDashPattern(void *a1, const char *a2, ...)
{
  return [a1 shortDashPattern];
}

id objc_msgSend_shouldAllowHighlights(void *a1, const char *a2, ...)
{
  return [a1 shouldAllowHighlights];
}

id objc_msgSend_shouldAllowToolbarHover(void *a1, const char *a2, ...)
{
  return [a1 shouldAllowToolbarHover];
}

id objc_msgSend_shouldAnimateShowEntry(void *a1, const char *a2, ...)
{
  return [a1 shouldAnimateShowEntry];
}

id objc_msgSend_shouldAnimateTargetLayer(void *a1, const char *a2, ...)
{
  return [a1 shouldAnimateTargetLayer];
}

id objc_msgSend_shouldAnimateToFit(void *a1, const char *a2, ...)
{
  return [a1 shouldAnimateToFit];
}

id objc_msgSend_shouldAutohideNavigationBar(void *a1, const char *a2, ...)
{
  return [a1 shouldAutohideNavigationBar];
}

id objc_msgSend_shouldAutoscrollToSelectionOnContentViewSizeChange(void *a1, const char *a2, ...)
{
  return [a1 shouldAutoscrollToSelectionOnContentViewSizeChange];
}

id objc_msgSend_shouldCountText(void *a1, const char *a2, ...)
{
  return [a1 shouldCountText];
}

id objc_msgSend_shouldDismissAfterRotate(void *a1, const char *a2, ...)
{
  return [a1 shouldDismissAfterRotate];
}

id objc_msgSend_shouldDraw(void *a1, const char *a2, ...)
{
  return [a1 shouldDraw];
}

id objc_msgSend_shouldEnablePaging(void *a1, const char *a2, ...)
{
  return [a1 shouldEnablePaging];
}

id objc_msgSend_shouldEnableStudyButton(void *a1, const char *a2, ...)
{
  return [a1 shouldEnableStudyButton];
}

id objc_msgSend_shouldFakeQuickSpeakAlwaysSpeaking(void *a1, const char *a2, ...)
{
  return [a1 shouldFakeQuickSpeakAlwaysSpeaking];
}

id objc_msgSend_shouldForceCentered(void *a1, const char *a2, ...)
{
  return [a1 shouldForceCentered];
}

id objc_msgSend_shouldInvertContent(void *a1, const char *a2, ...)
{
  return [a1 shouldInvertContent];
}

id objc_msgSend_shouldMonitorLightLevel(void *a1, const char *a2, ...)
{
  return [a1 shouldMonitorLightLevel];
}

id objc_msgSend_shouldPagingBeEnabled(void *a1, const char *a2, ...)
{
  return [a1 shouldPagingBeEnabled];
}

id objc_msgSend_shouldRasterize(void *a1, const char *a2, ...)
{
  return [a1 shouldRasterize];
}

id objc_msgSend_shouldRender(void *a1, const char *a2, ...)
{
  return [a1 shouldRender];
}

id objc_msgSend_shouldShowAllAnnotationStyles(void *a1, const char *a2, ...)
{
  return [a1 shouldShowAllAnnotationStyles];
}

id objc_msgSend_shouldShowChapterTitle(void *a1, const char *a2, ...)
{
  return [a1 shouldShowChapterTitle];
}

id objc_msgSend_shouldShowCloseButton(void *a1, const char *a2, ...)
{
  return [a1 shouldShowCloseButton];
}

id objc_msgSend_shouldShowControlsOnCanvas(void *a1, const char *a2, ...)
{
  return [a1 shouldShowControlsOnCanvas];
}

id objc_msgSend_shouldShowPlayButton(void *a1, const char *a2, ...)
{
  return [a1 shouldShowPlayButton];
}

id objc_msgSend_shouldStopLoading(void *a1, const char *a2, ...)
{
  return [a1 shouldStopLoading];
}

id objc_msgSend_shouldTruncateText(void *a1, const char *a2, ...)
{
  return [a1 shouldTruncateText];
}

id objc_msgSend_shouldUseContainerForAnimation(void *a1, const char *a2, ...)
{
  return [a1 shouldUseContainerForAnimation];
}

id objc_msgSend_shouldUseGutterOrder(void *a1, const char *a2, ...)
{
  return [a1 shouldUseGutterOrder];
}

id objc_msgSend_shouldWrapAgainstFloatingDrawables(void *a1, const char *a2, ...)
{
  return [a1 shouldWrapAgainstFloatingDrawables];
}

id objc_msgSend_shouldZoomShroudedView(void *a1, const char *a2, ...)
{
  return [a1 shouldZoomShroudedView];
}

id objc_msgSend_showAllAnnotationStyles(void *a1, const char *a2, ...)
{
  return [a1 showAllAnnotationStyles];
}

id objc_msgSend_showAnnotations(void *a1, const char *a2, ...)
{
  return [a1 showAnnotations];
}

id objc_msgSend_showBackground(void *a1, const char *a2, ...)
{
  return [a1 showBackground];
}

id objc_msgSend_showFirstEntry(void *a1, const char *a2, ...)
{
  return [a1 showFirstEntry];
}

id objc_msgSend_showFlowModeIfAvailable(void *a1, const char *a2, ...)
{
  return [a1 showFlowModeIfAvailable];
}

id objc_msgSend_showHideAnimationDuration(void *a1, const char *a2, ...)
{
  return [a1 showHideAnimationDuration];
}

id objc_msgSend_showHideDuration(void *a1, const char *a2, ...)
{
  return [a1 showHideDuration];
}

id objc_msgSend_showInfo(void *a1, const char *a2, ...)
{
  return [a1 showInfo];
}

id objc_msgSend_showLayer(void *a1, const char *a2, ...)
{
  return [a1 showLayer];
}

id objc_msgSend_showLayout(void *a1, const char *a2, ...)
{
  return [a1 showLayout];
}

id objc_msgSend_showMode(void *a1, const char *a2, ...)
{
  return [a1 showMode];
}

id objc_msgSend_showPageNumbers(void *a1, const char *a2, ...)
{
  return [a1 showPageNumbers];
}

id objc_msgSend_showPlayButton(void *a1, const char *a2, ...)
{
  return [a1 showPlayButton];
}

id objc_msgSend_showRep(void *a1, const char *a2, ...)
{
  return [a1 showRep];
}

id objc_msgSend_showSize(void *a1, const char *a2, ...)
{
  return [a1 showSize];
}

id objc_msgSend_showTOC(void *a1, const char *a2, ...)
{
  return [a1 showTOC];
}

id objc_msgSend_showThumbs(void *a1, const char *a2, ...)
{
  return [a1 showThumbs];
}

id objc_msgSend_showToolbarRecognizer(void *a1, const char *a2, ...)
{
  return [a1 showToolbarRecognizer];
}

id objc_msgSend_showTransportControls(void *a1, const char *a2, ...)
{
  return [a1 showTransportControls];
}

id objc_msgSend_showVocabulary(void *a1, const char *a2, ...)
{
  return [a1 showVocabulary];
}

id objc_msgSend_showingExpandedWidgetView(void *a1, const char *a2, ...)
{
  return [a1 showingExpandedWidgetView];
}

id objc_msgSend_showingMultipleCards(void *a1, const char *a2, ...)
{
  return [a1 showingMultipleCards];
}

id objc_msgSend_showsClosedCaptions(void *a1, const char *a2, ...)
{
  return [a1 showsClosedCaptions];
}

id objc_msgSend_shroudOverlayView(void *a1, const char *a2, ...)
{
  return [a1 shroudOverlayView];
}

id objc_msgSend_shuffle(void *a1, const char *a2, ...)
{
  return [a1 shuffle];
}

id objc_msgSend_siblings(void *a1, const char *a2, ...)
{
  return [a1 siblings];
}

id objc_msgSend_sidebarDelegate(void *a1, const char *a2, ...)
{
  return [a1 sidebarDelegate];
}

id objc_msgSend_sidebarLayout(void *a1, const char *a2, ...)
{
  return [a1 sidebarLayout];
}

id objc_msgSend_sidebarWidth(void *a1, const char *a2, ...)
{
  return [a1 sidebarWidth];
}

id objc_msgSend_signal(void *a1, const char *a2, ...)
{
  return [a1 signal];
}

id objc_msgSend_simpleSelectors(void *a1, const char *a2, ...)
{
  return [a1 simpleSelectors];
}

id objc_msgSend_singleTFTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 singleTFTapGestureRecognizer];
}

id objc_msgSend_singleTapGR(void *a1, const char *a2, ...)
{
  return [a1 singleTapGR];
}

id objc_msgSend_singleTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 singleTapGestureRecognizer];
}

id objc_msgSend_singleTextureOpacity(void *a1, const char *a2, ...)
{
  return [a1 singleTextureOpacity];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return [a1 size];
}

id objc_msgSend_sizeLargerButton(void *a1, const char *a2, ...)
{
  return [a1 sizeLargerButton];
}

id objc_msgSend_sizeProvider(void *a1, const char *a2, ...)
{
  return [a1 sizeProvider];
}

id objc_msgSend_sizeSeparatorLine(void *a1, const char *a2, ...)
{
  return [a1 sizeSeparatorLine];
}

id objc_msgSend_sizeSmallerButton(void *a1, const char *a2, ...)
{
  return [a1 sizeSmallerButton];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return [a1 sizeToFit];
}

id objc_msgSend_sizingDelegate(void *a1, const char *a2, ...)
{
  return [a1 sizingDelegate];
}

id objc_msgSend_skipDescendents(void *a1, const char *a2, ...)
{
  return [a1 skipDescendents];
}

id objc_msgSend_slideAnimationDuration(void *a1, const char *a2, ...)
{
  return [a1 slideAnimationDuration];
}

id objc_msgSend_slideAnimationScalar(void *a1, const char *a2, ...)
{
  return [a1 slideAnimationScalar];
}

id objc_msgSend_slideCount(void *a1, const char *a2, ...)
{
  return [a1 slideCount];
}

id objc_msgSend_slideList(void *a1, const char *a2, ...)
{
  return [a1 slideList];
}

id objc_msgSend_slideProjectionMatrix(void *a1, const char *a2, ...)
{
  return [a1 slideProjectionMatrix];
}

id objc_msgSend_slideRect(void *a1, const char *a2, ...)
{
  return [a1 slideRect];
}

id objc_msgSend_slideSize(void *a1, const char *a2, ...)
{
  return [a1 slideSize];
}

id objc_msgSend_slideTag(void *a1, const char *a2, ...)
{
  return [a1 slideTag];
}

id objc_msgSend_slidesDictionary(void *a1, const char *a2, ...)
{
  return [a1 slidesDictionary];
}

id objc_msgSend_slots(void *a1, const char *a2, ...)
{
  return [a1 slots];
}

id objc_msgSend_smallRepOutsetForHitTesting(void *a1, const char *a2, ...)
{
  return [a1 smallRepOutsetForHitTesting];
}

id objc_msgSend_smoothEdges(void *a1, const char *a2, ...)
{
  return [a1 smoothEdges];
}

id objc_msgSend_smoothWeight(void *a1, const char *a2, ...)
{
  return [a1 smoothWeight];
}

id objc_msgSend_snapshotBlock(void *a1, const char *a2, ...)
{
  return [a1 snapshotBlock];
}

id objc_msgSend_solidPattern(void *a1, const char *a2, ...)
{
  return [a1 solidPattern];
}

id objc_msgSend_sortedGutterDrawables(void *a1, const char *a2, ...)
{
  return [a1 sortedGutterDrawables];
}

id objc_msgSend_sortedPageControllers(void *a1, const char *a2, ...)
{
  return [a1 sortedPageControllers];
}

id objc_msgSend_soundtrackMode(void *a1, const char *a2, ...)
{
  return [a1 soundtrackMode];
}

id objc_msgSend_soundtrackName(void *a1, const char *a2, ...)
{
  return [a1 soundtrackName];
}

id objc_msgSend_soundtrackPath(void *a1, const char *a2, ...)
{
  return [a1 soundtrackPath];
}

id objc_msgSend_soundtrackVolume(void *a1, const char *a2, ...)
{
  return [a1 soundtrackVolume];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return [a1 source];
}

id objc_msgSend_sourceContentsRect(void *a1, const char *a2, ...)
{
  return [a1 sourceContentsRect];
}

id objc_msgSend_sourceCornerRadius(void *a1, const char *a2, ...)
{
  return [a1 sourceCornerRadius];
}

id objc_msgSend_sourceOverlayLayer(void *a1, const char *a2, ...)
{
  return [a1 sourceOverlayLayer];
}

id objc_msgSend_sourcePoint(void *a1, const char *a2, ...)
{
  return [a1 sourcePoint];
}

id objc_msgSend_sourcePresentationType(void *a1, const char *a2, ...)
{
  return [a1 sourcePresentationType];
}

id objc_msgSend_sourceReflectionLayer(void *a1, const char *a2, ...)
{
  return [a1 sourceReflectionLayer];
}

id objc_msgSend_sourceShadowFadeOutAnimation(void *a1, const char *a2, ...)
{
  return [a1 sourceShadowFadeOutAnimation];
}

id objc_msgSend_sourceShadowLayer(void *a1, const char *a2, ...)
{
  return [a1 sourceShadowLayer];
}

id objc_msgSend_sourceURL(void *a1, const char *a2, ...)
{
  return [a1 sourceURL];
}

id objc_msgSend_spacing(void *a1, const char *a2, ...)
{
  return [a1 spacing];
}

id objc_msgSend_speakScreenHighlightColor(void *a1, const char *a2, ...)
{
  return [a1 speakScreenHighlightColor];
}

id objc_msgSend_speakScreenUnderlineColor(void *a1, const char *a2, ...)
{
  return [a1 speakScreenUnderlineColor];
}

id objc_msgSend_specializedClass(void *a1, const char *a2, ...)
{
  return [a1 specializedClass];
}

id objc_msgSend_specificity(void *a1, const char *a2, ...)
{
  return [a1 specificity];
}

id objc_msgSend_speedAttribute(void *a1, const char *a2, ...)
{
  return [a1 speedAttribute];
}

id objc_msgSend_speedMax(void *a1, const char *a2, ...)
{
  return [a1 speedMax];
}

id objc_msgSend_speedMaxLimiter(void *a1, const char *a2, ...)
{
  return [a1 speedMaxLimiter];
}

id objc_msgSend_spineURLToCfi(void *a1, const char *a2, ...)
{
  return [a1 spineURLToCfi];
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return [a1 spinner];
}

id objc_msgSend_spinnerProvider(void *a1, const char *a2, ...)
{
  return [a1 spinnerProvider];
}

id objc_msgSend_spoofGesture(void *a1, const char *a2, ...)
{
  return [a1 spoofGesture];
}

id objc_msgSend_stack(void *a1, const char *a2, ...)
{
  return [a1 stack];
}

id objc_msgSend_stackEntryClass(void *a1, const char *a2, ...)
{
  return [a1 stackEntryClass];
}

id objc_msgSend_stackLimit(void *a1, const char *a2, ...)
{
  return [a1 stackLimit];
}

id objc_msgSend_stageAlmostCoversPage(void *a1, const char *a2, ...)
{
  return [a1 stageAlmostCoversPage];
}

id objc_msgSend_stageBackgroundImage(void *a1, const char *a2, ...)
{
  return [a1 stageBackgroundImage];
}

id objc_msgSend_stageCanvasController(void *a1, const char *a2, ...)
{
  return [a1 stageCanvasController];
}

id objc_msgSend_stageColor(void *a1, const char *a2, ...)
{
  return [a1 stageColor];
}

id objc_msgSend_stageCornerRadius(void *a1, const char *a2, ...)
{
  return [a1 stageCornerRadius];
}

id objc_msgSend_stageDrawable(void *a1, const char *a2, ...)
{
  return [a1 stageDrawable];
}

id objc_msgSend_stageForCurrentThread(void *a1, const char *a2, ...)
{
  return [a1 stageForCurrentThread];
}

id objc_msgSend_stageFrame(void *a1, const char *a2, ...)
{
  return [a1 stageFrame];
}

id objc_msgSend_stageGeometry(void *a1, const char *a2, ...)
{
  return [a1 stageGeometry];
}

id objc_msgSend_stageInfo(void *a1, const char *a2, ...)
{
  return [a1 stageInfo];
}

id objc_msgSend_stageInputDescriptor(void *a1, const char *a2, ...)
{
  return [a1 stageInputDescriptor];
}

id objc_msgSend_stageThumb(void *a1, const char *a2, ...)
{
  return [a1 stageThumb];
}

id objc_msgSend_stageView(void *a1, const char *a2, ...)
{
  return [a1 stageView];
}

id objc_msgSend_stageVisible(void *a1, const char *a2, ...)
{
  return [a1 stageVisible];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 standardUserDefaults];
}

id objc_msgSend_standardizedURL(void *a1, const char *a2, ...)
{
  return [a1 standardizedURL];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return [a1 start];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return [a1 startAnimating];
}

id objc_msgSend_startAnimation(void *a1, const char *a2, ...)
{
  return [a1 startAnimation];
}

id objc_msgSend_startCharIndex(void *a1, const char *a2, ...)
{
  return [a1 startCharIndex];
}

id objc_msgSend_startEditing(void *a1, const char *a2, ...)
{
  return [a1 startEditing];
}

id objc_msgSend_startLoading(void *a1, const char *a2, ...)
{
  return [a1 startLoading];
}

id objc_msgSend_startProgressIndicator(void *a1, const char *a2, ...)
{
  return [a1 startProgressIndicator];
}

id objc_msgSend_startRevealTOC(void *a1, const char *a2, ...)
{
  return [a1 startRevealTOC];
}

id objc_msgSend_startRow(void *a1, const char *a2, ...)
{
  return [a1 startRow];
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return [a1 startTime];
}

id objc_msgSend_startedScanningReadingStatistics(void *a1, const char *a2, ...)
{
  return [a1 startedScanningReadingStatistics];
}

id objc_msgSend_startingInitialSelectionDrag(void *a1, const char *a2, ...)
{
  return [a1 startingInitialSelectionDrag];
}

id objc_msgSend_startingPoint(void *a1, const char *a2, ...)
{
  return [a1 startingPoint];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return [a1 state];
}

id objc_msgSend_stateRestoreBlock(void *a1, const char *a2, ...)
{
  return [a1 stateRestoreBlock];
}

id objc_msgSend_staticLayoutAndRenderOnThread(void *a1, const char *a2, ...)
{
  return [a1 staticLayoutAndRenderOnThread];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return [a1 status];
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return [a1 statusBarFrame];
}

id objc_msgSend_statusBarHeight(void *a1, const char *a2, ...)
{
  return [a1 statusBarHeight];
}

id objc_msgSend_statusBarHeightForOrientation(void *a1, const char *a2, ...)
{
  return [a1 statusBarHeightForOrientation];
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return [a1 statusBarManager];
}

id objc_msgSend_statusBarMinDimension(void *a1, const char *a2, ...)
{
  return [a1 statusBarMinDimension];
}

id objc_msgSend_stem(void *a1, const char *a2, ...)
{
  return [a1 stem];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return [a1 stop];
}

id objc_msgSend_stopAllAnimations(void *a1, const char *a2, ...)
{
  return [a1 stopAllAnimations];
}

id objc_msgSend_stopAllMovies(void *a1, const char *a2, ...)
{
  return [a1 stopAllMovies];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return [a1 stopAnimating];
}

id objc_msgSend_stopAnimation(void *a1, const char *a2, ...)
{
  return [a1 stopAnimation];
}

id objc_msgSend_stopAnimations(void *a1, const char *a2, ...)
{
  return [a1 stopAnimations];
}

id objc_msgSend_stopList(void *a1, const char *a2, ...)
{
  return [a1 stopList];
}

id objc_msgSend_stopLoading(void *a1, const char *a2, ...)
{
  return [a1 stopLoading];
}

id objc_msgSend_stopMoviePlayback(void *a1, const char *a2, ...)
{
  return [a1 stopMoviePlayback];
}

id objc_msgSend_stopPagination(void *a1, const char *a2, ...)
{
  return [a1 stopPagination];
}

id objc_msgSend_stopPlayer(void *a1, const char *a2, ...)
{
  return [a1 stopPlayer];
}

id objc_msgSend_stopProgressIndicator(void *a1, const char *a2, ...)
{
  return [a1 stopProgressIndicator];
}

id objc_msgSend_stopScrolling(void *a1, const char *a2, ...)
{
  return [a1 stopScrolling];
}

id objc_msgSend_stopScrollingDelay(void *a1, const char *a2, ...)
{
  return [a1 stopScrollingDelay];
}

id objc_msgSend_stopShow(void *a1, const char *a2, ...)
{
  return [a1 stopShow];
}

id objc_msgSend_storage(void *a1, const char *a2, ...)
{
  return [a1 storage];
}

id objc_msgSend_storageAnchorForCurrentPage(void *a1, const char *a2, ...)
{
  return [a1 storageAnchorForCurrentPage];
}

id objc_msgSend_storageAnchorsForAnchorID(void *a1, const char *a2, ...)
{
  return [a1 storageAnchorsForAnchorID];
}

id objc_msgSend_storageAnchorsForCfiFrag(void *a1, const char *a2, ...)
{
  return [a1 storageAnchorsForCfiFrag];
}

id objc_msgSend_storageContentNode(void *a1, const char *a2, ...)
{
  return [a1 storageContentNode];
}

id objc_msgSend_storageUID(void *a1, const char *a2, ...)
{
  return [a1 storageUID];
}

id objc_msgSend_storageUIDToPageIndex(void *a1, const char *a2, ...)
{
  return [a1 storageUIDToPageIndex];
}

id objc_msgSend_storagesForAllPresentationTypes(void *a1, const char *a2, ...)
{
  return [a1 storagesForAllPresentationTypes];
}

id objc_msgSend_storeID(void *a1, const char *a2, ...)
{
  return [a1 storeID];
}

id objc_msgSend_storeItemID(void *a1, const char *a2, ...)
{
  return [a1 storeItemID];
}

id objc_msgSend_storeMgr(void *a1, const char *a2, ...)
{
  return [a1 storeMgr];
}

id objc_msgSend_storedViewportIndex(void *a1, const char *a2, ...)
{
  return [a1 storedViewportIndex];
}

id objc_msgSend_streamAPI(void *a1, const char *a2, ...)
{
  return [a1 streamAPI];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return [a1 string];
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 stringByDeletingLastPathComponent];
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return [a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return [a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringByStandardizingPath(void *a1, const char *a2, ...)
{
  return [a1 stringByStandardizingPath];
}

id objc_msgSend_stringByTransformingForTHNotesSectionHeader(void *a1, const char *a2, ...)
{
  return [a1 stringByTransformingForTHNotesSectionHeader];
}

id objc_msgSend_stringCompareOptions(void *a1, const char *a2, ...)
{
  return [a1 stringCompareOptions];
}

id objc_msgSend_stringFromSelection(void *a1, const char *a2, ...)
{
  return [a1 stringFromSelection];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return [a1 stringValue];
}

id objc_msgSend_stringWithURLFromCssUriValue(void *a1, const char *a2, ...)
{
  return [a1 stringWithURLFromCssUriValue];
}

id objc_msgSend_stringWithUUID(void *a1, const char *a2, ...)
{
  return [a1 stringWithUUID];
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return [a1 stroke];
}

id objc_msgSend_strokeLayer(void *a1, const char *a2, ...)
{
  return [a1 strokeLayer];
}

id objc_msgSend_strokeView(void *a1, const char *a2, ...)
{
  return [a1 strokeView];
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return [a1 strongToWeakObjectsMapTable];
}

id objc_msgSend_studyOptions(void *a1, const char *a2, ...)
{
  return [a1 studyOptions];
}

id objc_msgSend_studyViewController(void *a1, const char *a2, ...)
{
  return [a1 studyViewController];
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return [a1 style];
}

id objc_msgSend_styleAttribute(void *a1, const char *a2, ...)
{
  return [a1 styleAttribute];
}

id objc_msgSend_styleBeforeAutoNight(void *a1, const char *a2, ...)
{
  return [a1 styleBeforeAutoNight];
}

id objc_msgSend_styleCache(void *a1, const char *a2, ...)
{
  return [a1 styleCache];
}

id objc_msgSend_styleSelector(void *a1, const char *a2, ...)
{
  return [a1 styleSelector];
}

id objc_msgSend_styledRep(void *a1, const char *a2, ...)
{
  return [a1 styledRep];
}

id objc_msgSend_stylesheet(void *a1, const char *a2, ...)
{
  return [a1 stylesheet];
}

id objc_msgSend_stylizeForTheme(void *a1, const char *a2, ...)
{
  return [a1 stylizeForTheme];
}

id objc_msgSend_stylusHighlightGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 stylusHighlightGestureRecognizer];
}

id objc_msgSend_subItems(void *a1, const char *a2, ...)
{
  return [a1 subItems];
}

id objc_msgSend_subMinorVersion(void *a1, const char *a2, ...)
{
  return [a1 subMinorVersion];
}

id objc_msgSend_sublayerTransform(void *a1, const char *a2, ...)
{
  return [a1 sublayerTransform];
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return [a1 sublayers];
}

id objc_msgSend_subreaderClass(void *a1, const char *a2, ...)
{
  return [a1 subreaderClass];
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return [a1 subtitle];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return [a1 subviews];
}

id objc_msgSend_subviewsController(void *a1, const char *a2, ...)
{
  return [a1 subviewsController];
}

id objc_msgSend_suggestionResults(void *a1, const char *a2, ...)
{
  return [a1 suggestionResults];
}

id objc_msgSend_suggestions(void *a1, const char *a2, ...)
{
  return [a1 suggestions];
}

id objc_msgSend_suggestionsDataSource(void *a1, const char *a2, ...)
{
  return [a1 suggestionsDataSource];
}

id objc_msgSend_summaryLayout(void *a1, const char *a2, ...)
{
  return [a1 summaryLayout];
}

id objc_msgSend_summaryTitleStorage(void *a1, const char *a2, ...)
{
  return [a1 summaryTitleStorage];
}

id objc_msgSend_summaryWPLayout(void *a1, const char *a2, ...)
{
  return [a1 summaryWPLayout];
}

id objc_msgSend_superLayerForWrapper(void *a1, const char *a2, ...)
{
  return [a1 superLayerForWrapper];
}

id objc_msgSend_superMegaPhoneLandscapeExactSizePredicate(void *a1, const char *a2, ...)
{
  return [a1 superMegaPhoneLandscapeExactSizePredicate];
}

id objc_msgSend_superMegaPhonePortraitExactSizePredicate(void *a1, const char *a2, ...)
{
  return [a1 superMegaPhonePortraitExactSizePredicate];
}

id objc_msgSend_superPhoneLandscapeExactSizePredicate(void *a1, const char *a2, ...)
{
  return [a1 superPhoneLandscapeExactSizePredicate];
}

id objc_msgSend_superPhonePortraitExactSizePredicate(void *a1, const char *a2, ...)
{
  return [a1 superPhonePortraitExactSizePredicate];
}

id objc_msgSend_superclass(void *a1, const char *a2, ...)
{
  return [a1 superclass];
}

id objc_msgSend_superlayer(void *a1, const char *a2, ...)
{
  return [a1 superlayer];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return [a1 superview];
}

id objc_msgSend_suppliedAnnotationProvider(void *a1, const char *a2, ...)
{
  return [a1 suppliedAnnotationProvider];
}

id objc_msgSend_supportedAnimations(void *a1, const char *a2, ...)
{
  return [a1 supportedAnimations];
}

id objc_msgSend_supportedCssMediaTypes(void *a1, const char *a2, ...)
{
  return [a1 supportedCssMediaTypes];
}

id objc_msgSend_supportedMediaTypes(void *a1, const char *a2, ...)
{
  return [a1 supportedMediaTypes];
}

id objc_msgSend_supportedSchemes(void *a1, const char *a2, ...)
{
  return [a1 supportedSchemes];
}

id objc_msgSend_supportedSections(void *a1, const char *a2, ...)
{
  return [a1 supportedSections];
}

id objc_msgSend_supportedTypes(void *a1, const char *a2, ...)
{
  return [a1 supportedTypes];
}

id objc_msgSend_supportediBooksURLSchemes(void *a1, const char *a2, ...)
{
  return [a1 supportediBooksURLSchemes];
}

id objc_msgSend_supportsAdvancedTextSearchExperience(void *a1, const char *a2, ...)
{
  return [a1 supportsAdvancedTextSearchExperience];
}

id objc_msgSend_supportsBookmarking(void *a1, const char *a2, ...)
{
  return [a1 supportsBookmarking];
}

id objc_msgSend_supportsCharts(void *a1, const char *a2, ...)
{
  return [a1 supportsCharts];
}

id objc_msgSend_supportsCompactUI(void *a1, const char *a2, ...)
{
  return [a1 supportsCompactUI];
}

id objc_msgSend_supportsReadingHighlights(void *a1, const char *a2, ...)
{
  return [a1 supportsReadingHighlights];
}

id objc_msgSend_supportsTableEditing(void *a1, const char *a2, ...)
{
  return [a1 supportsTableEditing];
}

id objc_msgSend_supportsWritingHighlights(void *a1, const char *a2, ...)
{
  return [a1 supportsWritingHighlights];
}

id objc_msgSend_suppressRevealScrollViewOnLayoutAndRender(void *a1, const char *a2, ...)
{
  return [a1 suppressRevealScrollViewOnLayoutAndRender];
}

id objc_msgSend_suspend(void *a1, const char *a2, ...)
{
  return [a1 suspend];
}

id objc_msgSend_suspendScrolling(void *a1, const char *a2, ...)
{
  return [a1 suspendScrolling];
}

id objc_msgSend_svgDefinitionCache(void *a1, const char *a2, ...)
{
  return [a1 svgDefinitionCache];
}

id objc_msgSend_swatchElement(void *a1, const char *a2, ...)
{
  return [a1 swatchElement];
}

id objc_msgSend_swipeLeftGR(void *a1, const char *a2, ...)
{
  return [a1 swipeLeftGR];
}

id objc_msgSend_swipeRightGR(void *a1, const char *a2, ...)
{
  return [a1 swipeRightGR];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return [a1 synchronize];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 systemBackgroundColor];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return [a1 systemBlueColor];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return [a1 systemRedColor];
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return [a1 systemVersion];
}

id objc_msgSend_tableFooterView(void *a1, const char *a2, ...)
{
  return [a1 tableFooterView];
}

id objc_msgSend_tableHeaderView(void *a1, const char *a2, ...)
{
  return [a1 tableHeaderView];
}

id objc_msgSend_tableInfo(void *a1, const char *a2, ...)
{
  return [a1 tableInfo];
}

id objc_msgSend_tableModel(void *a1, const char *a2, ...)
{
  return [a1 tableModel];
}

id objc_msgSend_tableRep(void *a1, const char *a2, ...)
{
  return [a1 tableRep];
}

id objc_msgSend_tableStyle(void *a1, const char *a2, ...)
{
  return [a1 tableStyle];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return [a1 tableView];
}

id objc_msgSend_tableViewCellBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 tableViewCellBackgroundColor];
}

id objc_msgSend_tableViewCellController(void *a1, const char *a2, ...)
{
  return [a1 tableViewCellController];
}

id objc_msgSend_tableViewCellSelectedColor(void *a1, const char *a2, ...)
{
  return [a1 tableViewCellSelectedColor];
}

id objc_msgSend_tableViewHeaderView(void *a1, const char *a2, ...)
{
  return [a1 tableViewHeaderView];
}

id objc_msgSend_tableViewSeparatorColor(void *a1, const char *a2, ...)
{
  return [a1 tableViewSeparatorColor];
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return [a1 tag];
}

id objc_msgSend_takeFirstResponderOnTap(void *a1, const char *a2, ...)
{
  return [a1 takeFirstResponderOnTap];
}

id objc_msgSend_target(void *a1, const char *a2, ...)
{
  return [a1 target];
}

id objc_msgSend_targetAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 targetAccessibilityDescription];
}

id objc_msgSend_targetContentsRect(void *a1, const char *a2, ...)
{
  return [a1 targetContentsRect];
}

id objc_msgSend_targetFrame(void *a1, const char *a2, ...)
{
  return [a1 targetFrame];
}

id objc_msgSend_targetIsApplePub(void *a1, const char *a2, ...)
{
  return [a1 targetIsApplePub];
}

id objc_msgSend_targetIsiBooks(void *a1, const char *a2, ...)
{
  return [a1 targetIsiBooks];
}

id objc_msgSend_targetLayer(void *a1, const char *a2, ...)
{
  return [a1 targetLayer];
}

id objc_msgSend_targetLayouts(void *a1, const char *a2, ...)
{
  return [a1 targetLayouts];
}

id objc_msgSend_targetPoint(void *a1, const char *a2, ...)
{
  return [a1 targetPoint];
}

id objc_msgSend_targetRange(void *a1, const char *a2, ...)
{
  return [a1 targetRange];
}

id objc_msgSend_targetReflectionLayer(void *a1, const char *a2, ...)
{
  return [a1 targetReflectionLayer];
}

id objc_msgSend_targetRegion(void *a1, const char *a2, ...)
{
  return [a1 targetRegion];
}

id objc_msgSend_targetShadow(void *a1, const char *a2, ...)
{
  return [a1 targetShadow];
}

id objc_msgSend_targetShadowLayer(void *a1, const char *a2, ...)
{
  return [a1 targetShadowLayer];
}

id objc_msgSend_targetTransform(void *a1, const char *a2, ...)
{
  return [a1 targetTransform];
}

id objc_msgSend_targetVisibleRect(void *a1, const char *a2, ...)
{
  return [a1 targetVisibleRect];
}

id objc_msgSend_taskToURLHandlerMap(void *a1, const char *a2, ...)
{
  return [a1 taskToURLHandlerMap];
}

id objc_msgSend_tearDown(void *a1, const char *a2, ...)
{
  return [a1 tearDown];
}

id objc_msgSend_tearDownShow(void *a1, const char *a2, ...)
{
  return [a1 tearDownShow];
}

id objc_msgSend_teardown(void *a1, const char *a2, ...)
{
  return [a1 teardown];
}

id objc_msgSend_teardownController(void *a1, const char *a2, ...)
{
  return [a1 teardownController];
}

id objc_msgSend_teardownTarget(void *a1, const char *a2, ...)
{
  return [a1 teardownTarget];
}

id objc_msgSend_teardownView(void *a1, const char *a2, ...)
{
  return [a1 teardownView];
}

id objc_msgSend_teardownWrapperLayer(void *a1, const char *a2, ...)
{
  return [a1 teardownWrapperLayer];
}

id objc_msgSend_tellAFriendEmailBodyURLBase(void *a1, const char *a2, ...)
{
  return [a1 tellAFriendEmailBodyURLBase];
}

id objc_msgSend_tellBrowserToPauseAudioVisual(void *a1, const char *a2, ...)
{
  return [a1 tellBrowserToPauseAudioVisual];
}

id objc_msgSend_temporaryAnnotation(void *a1, const char *a2, ...)
{
  return [a1 temporaryAnnotation];
}

id objc_msgSend_temporaryTableCellStorage(void *a1, const char *a2, ...)
{
  return [a1 temporaryTableCellStorage];
}

id objc_msgSend_term(void *a1, const char *a2, ...)
{
  return [a1 term];
}

id objc_msgSend_termsViewController(void *a1, const char *a2, ...)
{
  return [a1 termsViewController];
}

id objc_msgSend_testName(void *a1, const char *a2, ...)
{
  return [a1 testName];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return [a1 text];
}

id objc_msgSend_textBlockPropertyMap(void *a1, const char *a2, ...)
{
  return [a1 textBlockPropertyMap];
}

id objc_msgSend_textBodyClass(void *a1, const char *a2, ...)
{
  return [a1 textBodyClass];
}

id objc_msgSend_textBubble(void *a1, const char *a2, ...)
{
  return [a1 textBubble];
}

id objc_msgSend_textChildOffsetStorageAnchorsForCfiFrag(void *a1, const char *a2, ...)
{
  return [a1 textChildOffsetStorageAnchorsForCfiFrag];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return [a1 textColor];
}

id objc_msgSend_textEditor(void *a1, const char *a2, ...)
{
  return [a1 textEditor];
}

id objc_msgSend_textFrame(void *a1, const char *a2, ...)
{
  return [a1 textFrame];
}

id objc_msgSend_textHeight(void *a1, const char *a2, ...)
{
  return [a1 textHeight];
}

id objc_msgSend_textInputEditor(void *a1, const char *a2, ...)
{
  return [a1 textInputEditor];
}

id objc_msgSend_textInputResponder(void *a1, const char *a2, ...)
{
  return [a1 textInputResponder];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return [a1 textLabel];
}

id objc_msgSend_textLayer(void *a1, const char *a2, ...)
{
  return [a1 textLayer];
}

id objc_msgSend_textLayout(void *a1, const char *a2, ...)
{
  return [a1 textLayout];
}

id objc_msgSend_textRange(void *a1, const char *a2, ...)
{
  return [a1 textRange];
}

id objc_msgSend_textReaderClass(void *a1, const char *a2, ...)
{
  return [a1 textReaderClass];
}

id objc_msgSend_textScale(void *a1, const char *a2, ...)
{
  return [a1 textScale];
}

id objc_msgSend_textSearchResults(void *a1, const char *a2, ...)
{
  return [a1 textSearchResults];
}

id objc_msgSend_textStorage(void *a1, const char *a2, ...)
{
  return [a1 textStorage];
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return [a1 textView];
}

id objc_msgSend_textWidth(void *a1, const char *a2, ...)
{
  return [a1 textWidth];
}

id objc_msgSend_texture(void *a1, const char *a2, ...)
{
  return [a1 texture];
}

id objc_msgSend_textureName(void *a1, const char *a2, ...)
{
  return [a1 textureName];
}

id objc_msgSend_textureToBeAnimated(void *a1, const char *a2, ...)
{
  return [a1 textureToBeAnimated];
}

id objc_msgSend_textures(void *a1, const char *a2, ...)
{
  return [a1 textures];
}

id objc_msgSend_thDocumentRoot(void *a1, const char *a2, ...)
{
  return [a1 thDocumentRoot];
}

id objc_msgSend_thNodeBody(void *a1, const char *a2, ...)
{
  return [a1 thNodeBody];
}

id objc_msgSend_thaxAccessibilityDelegate(void *a1, const char *a2, ...)
{
  return [a1 thaxAccessibilityDelegate];
}

id objc_msgSend_thaxAccessibilityFrameBottomInset(void *a1, const char *a2, ...)
{
  return [a1 thaxAccessibilityFrameBottomInset];
}

id objc_msgSend_thaxAccessibilityFrameLeftInset(void *a1, const char *a2, ...)
{
  return [a1 thaxAccessibilityFrameLeftInset];
}

id objc_msgSend_thaxAccessibilityFrameRightInset(void *a1, const char *a2, ...)
{
  return [a1 thaxAccessibilityFrameRightInset];
}

id objc_msgSend_thaxAccessibilityFrameTopInset(void *a1, const char *a2, ...)
{
  return [a1 thaxAccessibilityFrameTopInset];
}

id objc_msgSend_thaxAccessibilityRegions(void *a1, const char *a2, ...)
{
  return [a1 thaxAccessibilityRegions];
}

id objc_msgSend_thaxAdornmentController(void *a1, const char *a2, ...)
{
  return [a1 thaxAdornmentController];
}

id objc_msgSend_thaxAlwaysShowPanels(void *a1, const char *a2, ...)
{
  return [a1 thaxAlwaysShowPanels];
}

id objc_msgSend_thaxAnnotation(void *a1, const char *a2, ...)
{
  return [a1 thaxAnnotation];
}

id objc_msgSend_thaxAnnotationCache(void *a1, const char *a2, ...)
{
  return [a1 thaxAnnotationCache];
}

id objc_msgSend_thaxAnnotationStorageRange(void *a1, const char *a2, ...)
{
  return [a1 thaxAnnotationStorageRange];
}

id objc_msgSend_thaxAnswerAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxAnswerAccessibilityDescription];
}

id objc_msgSend_thaxAnswerLetter(void *a1, const char *a2, ...)
{
  return [a1 thaxAnswerLetter];
}

id objc_msgSend_thaxAnswerStateDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxAnswerStateDescription];
}

id objc_msgSend_thaxAnswerText(void *a1, const char *a2, ...)
{
  return [a1 thaxAnswerText];
}

id objc_msgSend_thaxAnswerTextWithAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxAnswerTextWithAccessibilityDescription];
}

id objc_msgSend_thaxAnyCalloutIsSelected(void *a1, const char *a2, ...)
{
  return [a1 thaxAnyCalloutIsSelected];
}

id objc_msgSend_thaxAssociatedAnnotation(void *a1, const char *a2, ...)
{
  return [a1 thaxAssociatedAnnotation];
}

id objc_msgSend_thaxBackDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxBackDescription];
}

id objc_msgSend_thaxBottomPanel(void *a1, const char *a2, ...)
{
  return [a1 thaxBottomPanel];
}

id objc_msgSend_thaxCachedElements(void *a1, const char *a2, ...)
{
  return [a1 thaxCachedElements];
}

id objc_msgSend_thaxCalloutInfoForDisplay(void *a1, const char *a2, ...)
{
  return [a1 thaxCalloutInfoForDisplay];
}

id objc_msgSend_thaxCanFlipTopCard(void *a1, const char *a2, ...)
{
  return [a1 thaxCanFlipTopCard];
}

id objc_msgSend_thaxCanvasScrollView(void *a1, const char *a2, ...)
{
  return [a1 thaxCanvasScrollView];
}

id objc_msgSend_thaxCanvasView(void *a1, const char *a2, ...)
{
  return [a1 thaxCanvasView];
}

id objc_msgSend_thaxCaptionForCurrentItem(void *a1, const char *a2, ...)
{
  return [a1 thaxCaptionForCurrentItem];
}

id objc_msgSend_thaxCardNumberString(void *a1, const char *a2, ...)
{
  return [a1 thaxCardNumberString];
}

id objc_msgSend_thaxChapterBrowserController(void *a1, const char *a2, ...)
{
  return [a1 thaxChapterBrowserController];
}

id objc_msgSend_thaxChapterCount(void *a1, const char *a2, ...)
{
  return [a1 thaxChapterCount];
}

id objc_msgSend_thaxChapterIndex(void *a1, const char *a2, ...)
{
  return [a1 thaxChapterIndex];
}

id objc_msgSend_thaxChapterViewController(void *a1, const char *a2, ...)
{
  return [a1 thaxChapterViewController];
}

id objc_msgSend_thaxCheckAnswerButtonState(void *a1, const char *a2, ...)
{
  return [a1 thaxCheckAnswerButtonState];
}

id objc_msgSend_thaxConfigureAudioPlayButton(void *a1, const char *a2, ...)
{
  return [a1 thaxConfigureAudioPlayButton];
}

id objc_msgSend_thaxConfigureHiddenAudioPlayButton(void *a1, const char *a2, ...)
{
  return [a1 thaxConfigureHiddenAudioPlayButton];
}

id objc_msgSend_thaxConfigureViewsForConfigurationChange(void *a1, const char *a2, ...)
{
  return [a1 thaxConfigureViewsForConfigurationChange];
}

id objc_msgSend_thaxContainerElementsDataSource(void *a1, const char *a2, ...)
{
  return [a1 thaxContainerElementsDataSource];
}

id objc_msgSend_thaxContainingGutterRepLabel(void *a1, const char *a2, ...)
{
  return [a1 thaxContainingGutterRepLabel];
}

id objc_msgSend_thaxContentImageAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxContentImageAccessibilityDescription];
}

id objc_msgSend_thaxContentTextRep(void *a1, const char *a2, ...)
{
  return [a1 thaxContentTextRep];
}

id objc_msgSend_thaxContext(void *a1, const char *a2, ...)
{
  return [a1 thaxContext];
}

id objc_msgSend_thaxCoversParentView(void *a1, const char *a2, ...)
{
  return [a1 thaxCoversParentView];
}

id objc_msgSend_thaxCurrentAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentAbsolutePageIndex];
}

id objc_msgSend_thaxCurrentChapter(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentChapter];
}

id objc_msgSend_thaxCurrentChapterNode(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentChapterNode];
}

id objc_msgSend_thaxCurrentContentNode(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentContentNode];
}

id objc_msgSend_thaxCurrentLessonNode(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentLessonNode];
}

id objc_msgSend_thaxCurrentNavigationUnit(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentNavigationUnit];
}

id objc_msgSend_thaxCurrentPage(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentPage];
}

id objc_msgSend_thaxCurrentResponderElement(void *a1, const char *a2, ...)
{
  return [a1 thaxCurrentResponderElement];
}

id objc_msgSend_thaxDateString(void *a1, const char *a2, ...)
{
  return [a1 thaxDateString];
}

id objc_msgSend_thaxDefinition(void *a1, const char *a2, ...)
{
  return [a1 thaxDefinition];
}

id objc_msgSend_thaxDelegate(void *a1, const char *a2, ...)
{
  return [a1 thaxDelegate];
}

id objc_msgSend_thaxDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxDescription];
}

id objc_msgSend_thaxDismiss(void *a1, const char *a2, ...)
{
  return [a1 thaxDismiss];
}

id objc_msgSend_thaxDismissExpandedViewController(void *a1, const char *a2, ...)
{
  return [a1 thaxDismissExpandedViewController];
}

id objc_msgSend_thaxDisplayPageNumber(void *a1, const char *a2, ...)
{
  return [a1 thaxDisplayPageNumber];
}

id objc_msgSend_thaxDocumentNavigator(void *a1, const char *a2, ...)
{
  return [a1 thaxDocumentNavigator];
}

id objc_msgSend_thaxDocumentRoot(void *a1, const char *a2, ...)
{
  return [a1 thaxDocumentRoot];
}

id objc_msgSend_thaxDocumentViewController(void *a1, const char *a2, ...)
{
  return [a1 thaxDocumentViewController];
}

id objc_msgSend_thaxDrawablesWidgetInfo(void *a1, const char *a2, ...)
{
  return [a1 thaxDrawablesWidgetInfo];
}

id objc_msgSend_thaxDuration(void *a1, const char *a2, ...)
{
  return [a1 thaxDuration];
}

id objc_msgSend_thaxEmbeddedScrollView(void *a1, const char *a2, ...)
{
  return [a1 thaxEmbeddedScrollView];
}

id objc_msgSend_thaxExpandedRep(void *a1, const char *a2, ...)
{
  return [a1 thaxExpandedRep];
}

id objc_msgSend_thaxExpandedRepController(void *a1, const char *a2, ...)
{
  return [a1 thaxExpandedRepController];
}

id objc_msgSend_thaxExpandedRepControllerState(void *a1, const char *a2, ...)
{
  return [a1 thaxExpandedRepControllerState];
}

id objc_msgSend_thaxExpandedStageDrawable(void *a1, const char *a2, ...)
{
  return [a1 thaxExpandedStageDrawable];
}

id objc_msgSend_thaxExpandedViewController(void *a1, const char *a2, ...)
{
  return [a1 thaxExpandedViewController];
}

id objc_msgSend_thaxFrontDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxFrontDescription];
}

id objc_msgSend_thaxFrontLayer(void *a1, const char *a2, ...)
{
  return [a1 thaxFrontLayer];
}

id objc_msgSend_thaxGotoNextCard(void *a1, const char *a2, ...)
{
  return [a1 thaxGotoNextCard];
}

id objc_msgSend_thaxGotoNextEvent(void *a1, const char *a2, ...)
{
  return [a1 thaxGotoNextEvent];
}

id objc_msgSend_thaxGotoPreviousCard(void *a1, const char *a2, ...)
{
  return [a1 thaxGotoPreviousCard];
}

id objc_msgSend_thaxGotoPreviousEvent(void *a1, const char *a2, ...)
{
  return [a1 thaxGotoPreviousEvent];
}

id objc_msgSend_thaxHasAudioControls(void *a1, const char *a2, ...)
{
  return [a1 thaxHasAudioControls];
}

id objc_msgSend_thaxHasNote(void *a1, const char *a2, ...)
{
  return [a1 thaxHasNote];
}

id objc_msgSend_thaxHighlightController(void *a1, const char *a2, ...)
{
  return [a1 thaxHighlightController];
}

id objc_msgSend_thaxHighlightStyleDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxHighlightStyleDescription];
}

id objc_msgSend_thaxHighlightedText(void *a1, const char *a2, ...)
{
  return [a1 thaxHighlightedText];
}

id objc_msgSend_thaxHighlightedTextDescription(void *a1, const char *a2, ...)
{
  return [a1 thaxHighlightedTextDescription];
}

id objc_msgSend_thaxInFlowMode(void *a1, const char *a2, ...)
{
  return [a1 thaxInFlowMode];
}

id objc_msgSend_thaxIndex(void *a1, const char *a2, ...)
{
  return [a1 thaxIndex];
}

id objc_msgSend_thaxInfo(void *a1, const char *a2, ...)
{
  return [a1 thaxInfo];
}

id objc_msgSend_thaxInfoForTopCard(void *a1, const char *a2, ...)
{
  return [a1 thaxInfoForTopCard];
}

id objc_msgSend_thaxInitializeAccessibility(void *a1, const char *a2, ...)
{
  return [a1 thaxInitializeAccessibility];
}

id objc_msgSend_thaxInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 thaxInteractiveCanvasController];
}

id objc_msgSend_thaxIntroMediaControllerIsActive(void *a1, const char *a2, ...)
{
  return [a1 thaxIntroMediaControllerIsActive];
}

id objc_msgSend_thaxIntroMediaViewDidPerformEscapeGesture(void *a1, const char *a2, ...)
{
  return [a1 thaxIntroMediaViewDidPerformEscapeGesture];
}

id objc_msgSend_thaxInvokeAction(void *a1, const char *a2, ...)
{
  return [a1 thaxInvokeAction];
}

id objc_msgSend_thaxIsAnimatingCallouts(void *a1, const char *a2, ...)
{
  return [a1 thaxIsAnimatingCallouts];
}

id objc_msgSend_thaxIsContainedInAudioRep(void *a1, const char *a2, ...)
{
  return [a1 thaxIsContainedInAudioRep];
}

id objc_msgSend_thaxIsDisabled(void *a1, const char *a2, ...)
{
  return [a1 thaxIsDisabled];
}

id objc_msgSend_thaxIsElementIgnored(void *a1, const char *a2, ...)
{
  return [a1 thaxIsElementIgnored];
}

id objc_msgSend_thaxIsExpanded(void *a1, const char *a2, ...)
{
  return [a1 thaxIsExpanded];
}

id objc_msgSend_thaxIsFlipped(void *a1, const char *a2, ...)
{
  return [a1 thaxIsFlipped];
}

id objc_msgSend_thaxIsMostOuterICC(void *a1, const char *a2, ...)
{
  return [a1 thaxIsMostOuterICC];
}

id objc_msgSend_thaxIsMoviePlaying(void *a1, const char *a2, ...)
{
  return [a1 thaxIsMoviePlaying];
}

id objc_msgSend_thaxIsPageNumberTextRep(void *a1, const char *a2, ...)
{
  return [a1 thaxIsPageNumberTextRep];
}

id objc_msgSend_thaxIsPartOfAGallery(void *a1, const char *a2, ...)
{
  return [a1 thaxIsPartOfAGallery];
}

id objc_msgSend_thaxIsPaused(void *a1, const char *a2, ...)
{
  return [a1 thaxIsPaused];
}

id objc_msgSend_thaxIsPlaying(void *a1, const char *a2, ...)
{
  return [a1 thaxIsPlaying];
}

id objc_msgSend_thaxIsRepPressable(void *a1, const char *a2, ...)
{
  return [a1 thaxIsRepPressable];
}

id objc_msgSend_thaxIsSelected(void *a1, const char *a2, ...)
{
  return [a1 thaxIsSelected];
}

id objc_msgSend_thaxIsShowingAlternateUI(void *a1, const char *a2, ...)
{
  return [a1 thaxIsShowingAlternateUI];
}

id objc_msgSend_thaxIsShowingEmptyStudyCard(void *a1, const char *a2, ...)
{
  return [a1 thaxIsShowingEmptyStudyCard];
}

id objc_msgSend_thaxIsTOCVisible(void *a1, const char *a2, ...)
{
  return [a1 thaxIsTOCVisible];
}

id objc_msgSend_thaxIsTopCard(void *a1, const char *a2, ...)
{
  return [a1 thaxIsTopCard];
}

id objc_msgSend_thaxIsVerticalScrollingDisabled(void *a1, const char *a2, ...)
{
  return [a1 thaxIsVerticalScrollingDisabled];
}

id objc_msgSend_thaxIsVisibleOnPage(void *a1, const char *a2, ...)
{
  return [a1 thaxIsVisibleOnPage];
}

id objc_msgSend_thaxItemCountDescriptionForCurrentItem(void *a1, const char *a2, ...)
{
  return [a1 thaxItemCountDescriptionForCurrentItem];
}

id objc_msgSend_thaxLabelForCurrentEvent(void *a1, const char *a2, ...)
{
  return [a1 thaxLabelForCurrentEvent];
}

id objc_msgSend_thaxLandscapeEntries(void *a1, const char *a2, ...)
{
  return [a1 thaxLandscapeEntries];
}

id objc_msgSend_thaxLastSeenEventIdentifier(void *a1, const char *a2, ...)
{
  return [a1 thaxLastSeenEventIdentifier];
}

id objc_msgSend_thaxLastSpokenAnnouncement(void *a1, const char *a2, ...)
{
  return [a1 thaxLastSpokenAnnouncement];
}

id objc_msgSend_thaxLayout(void *a1, const char *a2, ...)
{
  return [a1 thaxLayout];
}

id objc_msgSend_thaxLocalizedPageNumber(void *a1, const char *a2, ...)
{
  return [a1 thaxLocalizedPageNumber];
}

id objc_msgSend_thaxMaximumValue(void *a1, const char *a2, ...)
{
  return [a1 thaxMaximumValue];
}

id objc_msgSend_thaxMediaLabel(void *a1, const char *a2, ...)
{
  return [a1 thaxMediaLabel];
}

id objc_msgSend_thaxMinimumValue(void *a1, const char *a2, ...)
{
  return [a1 thaxMinimumValue];
}

id objc_msgSend_thaxNavigationModel(void *a1, const char *a2, ...)
{
  return [a1 thaxNavigationModel];
}

id objc_msgSend_thaxNoteCardsView(void *a1, const char *a2, ...)
{
  return [a1 thaxNoteCardsView];
}

id objc_msgSend_thaxNoteText(void *a1, const char *a2, ...)
{
  return [a1 thaxNoteText];
}

id objc_msgSend_thaxNumberOfPages(void *a1, const char *a2, ...)
{
  return [a1 thaxNumberOfPages];
}

id objc_msgSend_thaxOriginatingButton(void *a1, const char *a2, ...)
{
  return [a1 thaxOriginatingButton];
}

id objc_msgSend_thaxOverrideValue(void *a1, const char *a2, ...)
{
  return [a1 thaxOverrideValue];
}

id objc_msgSend_thaxPageContentReps(void *a1, const char *a2, ...)
{
  return [a1 thaxPageContentReps];
}

id objc_msgSend_thaxPageController(void *a1, const char *a2, ...)
{
  return [a1 thaxPageController];
}

id objc_msgSend_thaxPageNumberString(void *a1, const char *a2, ...)
{
  return [a1 thaxPageNumberString];
}

id objc_msgSend_thaxParent(void *a1, const char *a2, ...)
{
  return [a1 thaxParent];
}

id objc_msgSend_thaxParentAudioRep(void *a1, const char *a2, ...)
{
  return [a1 thaxParentAudioRep];
}

id objc_msgSend_thaxParentHighlightController(void *a1, const char *a2, ...)
{
  return [a1 thaxParentHighlightController];
}

id objc_msgSend_thaxParentPageRep(void *a1, const char *a2, ...)
{
  return [a1 thaxParentPageRep];
}

id objc_msgSend_thaxParentRep(void *a1, const char *a2, ...)
{
  return [a1 thaxParentRep];
}

id objc_msgSend_thaxPlayButton(void *a1, const char *a2, ...)
{
  return [a1 thaxPlayButton];
}

id objc_msgSend_thaxPlayButtonRep(void *a1, const char *a2, ...)
{
  return [a1 thaxPlayButtonRep];
}

id objc_msgSend_thaxPopUpInfo(void *a1, const char *a2, ...)
{
  return [a1 thaxPopUpInfo];
}

id objc_msgSend_thaxPopoverParentView(void *a1, const char *a2, ...)
{
  return [a1 thaxPopoverParentView];
}

id objc_msgSend_thaxPresentationType(void *a1, const char *a2, ...)
{
  return [a1 thaxPresentationType];
}

id objc_msgSend_thaxPresentedWidgetPopoverController(void *a1, const char *a2, ...)
{
  return [a1 thaxPresentedWidgetPopoverController];
}

id objc_msgSend_thaxPressableAction(void *a1, const char *a2, ...)
{
  return [a1 thaxPressableAction];
}

id objc_msgSend_thaxQuestionCount(void *a1, const char *a2, ...)
{
  return [a1 thaxQuestionCount];
}

id objc_msgSend_thaxQuestionIndex(void *a1, const char *a2, ...)
{
  return [a1 thaxQuestionIndex];
}

id objc_msgSend_thaxRelatedGalleryRep(void *a1, const char *a2, ...)
{
  return [a1 thaxRelatedGalleryRep];
}

id objc_msgSend_thaxRemoveInsets(void *a1, const char *a2, ...)
{
  return [a1 thaxRemoveInsets];
}

id objc_msgSend_thaxReturnToBook(void *a1, const char *a2, ...)
{
  return [a1 thaxReturnToBook];
}

id objc_msgSend_thaxRootNode(void *a1, const char *a2, ...)
{
  return [a1 thaxRootNode];
}

id objc_msgSend_thaxSceneController(void *a1, const char *a2, ...)
{
  return [a1 thaxSceneController];
}

id objc_msgSend_thaxSceneView(void *a1, const char *a2, ...)
{
  return [a1 thaxSceneView];
}

id objc_msgSend_thaxScrollContainerCanvasView(void *a1, const char *a2, ...)
{
  return [a1 thaxScrollContainerCanvasView];
}

id objc_msgSend_thaxScrollContainerICC(void *a1, const char *a2, ...)
{
  return [a1 thaxScrollContainerICC];
}

id objc_msgSend_thaxScrollContentCanvasView(void *a1, const char *a2, ...)
{
  return [a1 thaxScrollContentCanvasView];
}

id objc_msgSend_thaxScrollContentICC(void *a1, const char *a2, ...)
{
  return [a1 thaxScrollContentICC];
}

id objc_msgSend_thaxScrollView(void *a1, const char *a2, ...)
{
  return [a1 thaxScrollView];
}

id objc_msgSend_thaxScrollingDelegate(void *a1, const char *a2, ...)
{
  return [a1 thaxScrollingDelegate];
}

id objc_msgSend_thaxScrubber(void *a1, const char *a2, ...)
{
  return [a1 thaxScrubber];
}

id objc_msgSend_thaxSectionIdentifier(void *a1, const char *a2, ...)
{
  return [a1 thaxSectionIdentifier];
}

id objc_msgSend_thaxSetInsetsNeedUpdate(void *a1, const char *a2, ...)
{
  return [a1 thaxSetInsetsNeedUpdate];
}

id objc_msgSend_thaxShouldDisableElementIgnoredTest(void *a1, const char *a2, ...)
{
  return [a1 thaxShouldDisableElementIgnoredTest];
}

id objc_msgSend_thaxShouldFilterOutNonVisibleReps(void *a1, const char *a2, ...)
{
  return [a1 thaxShouldFilterOutNonVisibleReps];
}

id objc_msgSend_thaxShouldHideChildReps(void *a1, const char *a2, ...)
{
  return [a1 thaxShouldHideChildReps];
}

id objc_msgSend_thaxShouldHideElement(void *a1, const char *a2, ...)
{
  return [a1 thaxShouldHideElement];
}

id objc_msgSend_thaxShouldIgnoreCanvas(void *a1, const char *a2, ...)
{
  return [a1 thaxShouldIgnoreCanvas];
}

id objc_msgSend_thaxShouldPreceedSiblingsForHitTesting(void *a1, const char *a2, ...)
{
  return [a1 thaxShouldPreceedSiblingsForHitTesting];
}

id objc_msgSend_thaxShowLayer(void *a1, const char *a2, ...)
{
  return [a1 thaxShowLayer];
}

id objc_msgSend_thaxSibilingCaptionText(void *a1, const char *a2, ...)
{
  return [a1 thaxSibilingCaptionText];
}

id objc_msgSend_thaxStageCanvasView(void *a1, const char *a2, ...)
{
  return [a1 thaxStageCanvasView];
}

id objc_msgSend_thaxStageDrawable(void *a1, const char *a2, ...)
{
  return [a1 thaxStageDrawable];
}

id objc_msgSend_thaxTOCModel(void *a1, const char *a2, ...)
{
  return [a1 thaxTOCModel];
}

id objc_msgSend_thaxTag(void *a1, const char *a2, ...)
{
  return [a1 thaxTag];
}

id objc_msgSend_thaxTeardownAccessibility(void *a1, const char *a2, ...)
{
  return [a1 thaxTeardownAccessibility];
}

id objc_msgSend_thaxTerm(void *a1, const char *a2, ...)
{
  return [a1 thaxTerm];
}

id objc_msgSend_thaxText(void *a1, const char *a2, ...)
{
  return [a1 thaxText];
}

id objc_msgSend_thaxTileModel(void *a1, const char *a2, ...)
{
  return [a1 thaxTileModel];
}

id objc_msgSend_thaxTiles(void *a1, const char *a2, ...)
{
  return [a1 thaxTiles];
}

id objc_msgSend_thaxTitle(void *a1, const char *a2, ...)
{
  return [a1 thaxTitle];
}

id objc_msgSend_thaxTitleShape(void *a1, const char *a2, ...)
{
  return [a1 thaxTitleShape];
}

id objc_msgSend_thaxTogglePlaying(void *a1, const char *a2, ...)
{
  return [a1 thaxTogglePlaying];
}

id objc_msgSend_thaxToolbarController(void *a1, const char *a2, ...)
{
  return [a1 thaxToolbarController];
}

id objc_msgSend_thaxTopCard(void *a1, const char *a2, ...)
{
  return [a1 thaxTopCard];
}

id objc_msgSend_thaxTopPanel(void *a1, const char *a2, ...)
{
  return [a1 thaxTopPanel];
}

id objc_msgSend_thaxTotalItemCount(void *a1, const char *a2, ...)
{
  return [a1 thaxTotalItemCount];
}

id objc_msgSend_thaxValue(void *a1, const char *a2, ...)
{
  return [a1 thaxValue];
}

id objc_msgSend_thaxValueHandler(void *a1, const char *a2, ...)
{
  return [a1 thaxValueHandler];
}

id objc_msgSend_thaxView(void *a1, const char *a2, ...)
{
  return [a1 thaxView];
}

id objc_msgSend_theme(void *a1, const char *a2, ...)
{
  return [a1 theme];
}

id objc_msgSend_themeContainer(void *a1, const char *a2, ...)
{
  return [a1 themeContainer];
}

id objc_msgSend_themeDelegate(void *a1, const char *a2, ...)
{
  return [a1 themeDelegate];
}

id objc_msgSend_themeIdentifier(void *a1, const char *a2, ...)
{
  return [a1 themeIdentifier];
}

id objc_msgSend_themeMap(void *a1, const char *a2, ...)
{
  return [a1 themeMap];
}

id objc_msgSend_themePage(void *a1, const char *a2, ...)
{
  return [a1 themePage];
}

id objc_msgSend_themeProvider(void *a1, const char *a2, ...)
{
  return [a1 themeProvider];
}

id objc_msgSend_thinnedAssetSizes(void *a1, const char *a2, ...)
{
  return [a1 thinnedAssetSizes];
}

id objc_msgSend_threadDictionary(void *a1, const char *a2, ...)
{
  return [a1 threadDictionary];
}

id objc_msgSend_threadExecutionWidth(void *a1, const char *a2, ...)
{
  return [a1 threadExecutionWidth];
}

id objc_msgSend_thumb(void *a1, const char *a2, ...)
{
  return [a1 thumb];
}

id objc_msgSend_thumbImageView(void *a1, const char *a2, ...)
{
  return [a1 thumbImageView];
}

id objc_msgSend_thumbScale(void *a1, const char *a2, ...)
{
  return [a1 thumbScale];
}

id objc_msgSend_thumbSize(void *a1, const char *a2, ...)
{
  return [a1 thumbSize];
}

id objc_msgSend_thumbnail(void *a1, const char *a2, ...)
{
  return [a1 thumbnail];
}

id objc_msgSend_thumbnailBorderColor(void *a1, const char *a2, ...)
{
  return [a1 thumbnailBorderColor];
}

id objc_msgSend_thumbnailImage(void *a1, const char *a2, ...)
{
  return [a1 thumbnailImage];
}

id objc_msgSend_thumbnailImageData(void *a1, const char *a2, ...)
{
  return [a1 thumbnailImageData];
}

id objc_msgSend_thumbnailPageControl(void *a1, const char *a2, ...)
{
  return [a1 thumbnailPageControl];
}

id objc_msgSend_thumbnailQueue(void *a1, const char *a2, ...)
{
  return [a1 thumbnailQueue];
}

id objc_msgSend_thumbnailSubviews(void *a1, const char *a2, ...)
{
  return [a1 thumbnailSubviews];
}

id objc_msgSend_thumbnailTrackBackgroundView(void *a1, const char *a2, ...)
{
  return [a1 thumbnailTrackBackgroundView];
}

id objc_msgSend_thumbnailTrackCanvasController(void *a1, const char *a2, ...)
{
  return [a1 thumbnailTrackCanvasController];
}

id objc_msgSend_thumbnailTrackFrame(void *a1, const char *a2, ...)
{
  return [a1 thumbnailTrackFrame];
}

id objc_msgSend_thumbnailTrackVerticalPadding(void *a1, const char *a2, ...)
{
  return [a1 thumbnailTrackVerticalPadding];
}

id objc_msgSend_thumbnailView(void *a1, const char *a2, ...)
{
  return [a1 thumbnailView];
}

id objc_msgSend_thumbnailsHiddenForPinch(void *a1, const char *a2, ...)
{
  return [a1 thumbnailsHiddenForPinch];
}

id objc_msgSend_thumbnailsVisible(void *a1, const char *a2, ...)
{
  return [a1 thumbnailsVisible];
}

id objc_msgSend_tileModel(void *a1, const char *a2, ...)
{
  return [a1 tileModel];
}

id objc_msgSend_tileModelEntry(void *a1, const char *a2, ...)
{
  return [a1 tileModelEntry];
}

id objc_msgSend_tiles(void *a1, const char *a2, ...)
{
  return [a1 tiles];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeToBeginPlaybackAt(void *a1, const char *a2, ...)
{
  return [a1 timeToBeginPlaybackAt];
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return [a1 timestamp];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return [a1 tintColor];
}

id objc_msgSend_tinyThumbs(void *a1, const char *a2, ...)
{
  return [a1 tinyThumbs];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return [a1 title];
}

id objc_msgSend_titleAccessibilityDescription(void *a1, const char *a2, ...)
{
  return [a1 titleAccessibilityDescription];
}

id objc_msgSend_titleAttributeValue(void *a1, const char *a2, ...)
{
  return [a1 titleAttributeValue];
}

id objc_msgSend_titleColor(void *a1, const char *a2, ...)
{
  return [a1 titleColor];
}

id objc_msgSend_titleGeometry(void *a1, const char *a2, ...)
{
  return [a1 titleGeometry];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return [a1 titleLabel];
}

id objc_msgSend_titleLabelBaselineToPageLabelConstraint(void *a1, const char *a2, ...)
{
  return [a1 titleLabelBaselineToPageLabelConstraint];
}

id objc_msgSend_titleLabelBaselineToSectionLabelConstraint(void *a1, const char *a2, ...)
{
  return [a1 titleLabelBaselineToSectionLabelConstraint];
}

id objc_msgSend_titleLabelLeadingConstraint(void *a1, const char *a2, ...)
{
  return [a1 titleLabelLeadingConstraint];
}

id objc_msgSend_titleLabelNavigationBar(void *a1, const char *a2, ...)
{
  return [a1 titleLabelNavigationBar];
}

id objc_msgSend_titleLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return [a1 titleLabelTrailingConstraint];
}

id objc_msgSend_titleOfCurrentNavigationUnit(void *a1, const char *a2, ...)
{
  return [a1 titleOfCurrentNavigationUnit];
}

id objc_msgSend_titleOnly(void *a1, const char *a2, ...)
{
  return [a1 titleOnly];
}

id objc_msgSend_titleShape(void *a1, const char *a2, ...)
{
  return [a1 titleShape];
}

id objc_msgSend_titleStorage(void *a1, const char *a2, ...)
{
  return [a1 titleStorage];
}

id objc_msgSend_tmCoordinator(void *a1, const char *a2, ...)
{
  return [a1 tmCoordinator];
}

id objc_msgSend_toPoint(void *a1, const char *a2, ...)
{
  return [a1 toPoint];
}

id objc_msgSend_toValue(void *a1, const char *a2, ...)
{
  return [a1 toValue];
}

id objc_msgSend_tocGlossaryButtonItem(void *a1, const char *a2, ...)
{
  return [a1 tocGlossaryButtonItem];
}

id objc_msgSend_tocModel(void *a1, const char *a2, ...)
{
  return [a1 tocModel];
}

id objc_msgSend_tocPageNumberTextColor(void *a1, const char *a2, ...)
{
  return [a1 tocPageNumberTextColor];
}

id objc_msgSend_tocThumb(void *a1, const char *a2, ...)
{
  return [a1 tocThumb];
}

id objc_msgSend_tocTile(void *a1, const char *a2, ...)
{
  return [a1 tocTile];
}

id objc_msgSend_toggleFlowPresentation(void *a1, const char *a2, ...)
{
  return [a1 toggleFlowPresentation];
}

id objc_msgSend_toggleVisibility(void *a1, const char *a2, ...)
{
  return [a1 toggleVisibility];
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return [a1 toolbar];
}

id objc_msgSend_toolbarButtonHInset(void *a1, const char *a2, ...)
{
  return [a1 toolbarButtonHInset];
}

id objc_msgSend_toolbarDelegate(void *a1, const char *a2, ...)
{
  return [a1 toolbarDelegate];
}

id objc_msgSend_toolbarHeight(void *a1, const char *a2, ...)
{
  return [a1 toolbarHeight];
}

id objc_msgSend_toolbarSeparatorsVisible(void *a1, const char *a2, ...)
{
  return [a1 toolbarSeparatorsVisible];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return [a1 topAnchor];
}

id objc_msgSend_topBorder(void *a1, const char *a2, ...)
{
  return [a1 topBorder];
}

id objc_msgSend_topBorderWidthConstraint(void *a1, const char *a2, ...)
{
  return [a1 topBorderWidthConstraint];
}

id objc_msgSend_topConstraint(void *a1, const char *a2, ...)
{
  return [a1 topConstraint];
}

id objc_msgSend_topLevelReps(void *a1, const char *a2, ...)
{
  return [a1 topLevelReps];
}

id objc_msgSend_topMediaSearchResults(void *a1, const char *a2, ...)
{
  return [a1 topMediaSearchResults];
}

id objc_msgSend_topNoteCardIsFlipped(void *a1, const char *a2, ...)
{
  return [a1 topNoteCardIsFlipped];
}

id objc_msgSend_topOverscrollView(void *a1, const char *a2, ...)
{
  return [a1 topOverscrollView];
}

id objc_msgSend_topPanel(void *a1, const char *a2, ...)
{
  return [a1 topPanel];
}

id objc_msgSend_topPanelInfos(void *a1, const char *a2, ...)
{
  return [a1 topPanelInfos];
}

id objc_msgSend_topScrollView(void *a1, const char *a2, ...)
{
  return [a1 topScrollView];
}

id objc_msgSend_topTextSearchResults(void *a1, const char *a2, ...)
{
  return [a1 topTextSearchResults];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return [a1 topViewController];
}

id objc_msgSend_topicNumbers(void *a1, const char *a2, ...)
{
  return [a1 topicNumbers];
}

id objc_msgSend_tornDown(void *a1, const char *a2, ...)
{
  return [a1 tornDown];
}

id objc_msgSend_totalCallouts(void *a1, const char *a2, ...)
{
  return [a1 totalCallouts];
}

id objc_msgSend_totalTextRead(void *a1, const char *a2, ...)
{
  return [a1 totalTextRead];
}

id objc_msgSend_touch1(void *a1, const char *a2, ...)
{
  return [a1 touch1];
}

id objc_msgSend_touch2(void *a1, const char *a2, ...)
{
  return [a1 touch2];
}

id objc_msgSend_touchPadding(void *a1, const char *a2, ...)
{
  return [a1 touchPadding];
}

id objc_msgSend_track(void *a1, const char *a2, ...)
{
  return [a1 track];
}

id objc_msgSend_trackingController(void *a1, const char *a2, ...)
{
  return [a1 trackingController];
}

id objc_msgSend_trackingMarginNote(void *a1, const char *a2, ...)
{
  return [a1 trackingMarginNote];
}

id objc_msgSend_trackingNotesOwner(void *a1, const char *a2, ...)
{
  return [a1 trackingNotesOwner];
}

id objc_msgSend_trackingRep(void *a1, const char *a2, ...)
{
  return [a1 trackingRep];
}

id objc_msgSend_tracks(void *a1, const char *a2, ...)
{
  return [a1 tracks];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return [a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return [a1 traitCollection];
}

id objc_msgSend_traitsCache(void *a1, const char *a2, ...)
{
  return [a1 traitsCache];
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return [a1 transform];
}

id objc_msgSend_transformGR(void *a1, const char *a2, ...)
{
  return [a1 transformGR];
}

id objc_msgSend_transformInRoot(void *a1, const char *a2, ...)
{
  return [a1 transformInRoot];
}

id objc_msgSend_transformLayer(void *a1, const char *a2, ...)
{
  return [a1 transformLayer];
}

id objc_msgSend_transformToConvertNaturalFromLayerRelative(void *a1, const char *a2, ...)
{
  return [a1 transformToConvertNaturalFromLayerRelative];
}

id objc_msgSend_transformToConvertNaturalToLayerRelative(void *a1, const char *a2, ...)
{
  return [a1 transformToConvertNaturalToLayerRelative];
}

id objc_msgSend_transformedBounds(void *a1, const char *a2, ...)
{
  return [a1 transformedBounds];
}

id objc_msgSend_transitionAttributes(void *a1, const char *a2, ...)
{
  return [a1 transitionAttributes];
}

id objc_msgSend_transitionContentView(void *a1, const char *a2, ...)
{
  return [a1 transitionContentView];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return [a1 transitionCoordinator];
}

id objc_msgSend_transitionDidFinish(void *a1, const char *a2, ...)
{
  return [a1 transitionDidFinish];
}

id objc_msgSend_transitionDuration(void *a1, const char *a2, ...)
{
  return [a1 transitionDuration];
}

id objc_msgSend_transitioningFromOneUpToTwoUp(void *a1, const char *a2, ...)
{
  return [a1 transitioningFromOneUpToTwoUp];
}

id objc_msgSend_transitioningFromTwoUpToOneUp(void *a1, const char *a2, ...)
{
  return [a1 transitioningFromTwoUpToOneUp];
}

id objc_msgSend_transitioningPageToDVC(void *a1, const char *a2, ...)
{
  return [a1 transitioningPageToDVC];
}

id objc_msgSend_transitioningTOCSize(void *a1, const char *a2, ...)
{
  return [a1 transitioningTOCSize];
}

id objc_msgSend_transitioningThumbnailIndex(void *a1, const char *a2, ...)
{
  return [a1 transitioningThumbnailIndex];
}

id objc_msgSend_translation(void *a1, const char *a2, ...)
{
  return [a1 translation];
}

id objc_msgSend_translationController(void *a1, const char *a2, ...)
{
  return [a1 translationController];
}

id objc_msgSend_transportControlClone(void *a1, const char *a2, ...)
{
  return [a1 transportControlClone];
}

id objc_msgSend_transportControlCloneCanGotoFirst(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneCanGotoFirst];
}

id objc_msgSend_transportControlCloneCanGotoLast(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneCanGotoLast];
}

id objc_msgSend_transportControlCloneCanGotoNext(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneCanGotoNext];
}

id objc_msgSend_transportControlCloneCanGotoPrev(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneCanGotoPrev];
}

id objc_msgSend_transportControlCloneCount(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneCount];
}

id objc_msgSend_transportControlCloneGotoFirst(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneGotoFirst];
}

id objc_msgSend_transportControlCloneGotoNext(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneGotoNext];
}

id objc_msgSend_transportControlCloneIndex(void *a1, const char *a2, ...)
{
  return [a1 transportControlCloneIndex];
}

id objc_msgSend_transportControlDelegate(void *a1, const char *a2, ...)
{
  return [a1 transportControlDelegate];
}

id objc_msgSend_transportControlLayout(void *a1, const char *a2, ...)
{
  return [a1 transportControlLayout];
}

id objc_msgSend_transportController(void *a1, const char *a2, ...)
{
  return [a1 transportController];
}

id objc_msgSend_transportControlsFrame(void *a1, const char *a2, ...)
{
  return [a1 transportControlsFrame];
}

id objc_msgSend_transportControlsInfo(void *a1, const char *a2, ...)
{
  return [a1 transportControlsInfo];
}

id objc_msgSend_transportLayout(void *a1, const char *a2, ...)
{
  return [a1 transportLayout];
}

id objc_msgSend_transportUI(void *a1, const char *a2, ...)
{
  return [a1 transportUI];
}

id objc_msgSend_triangleCount(void *a1, const char *a2, ...)
{
  return [a1 triangleCount];
}

id objc_msgSend_tsax2DColumnFillProperty(void *a1, const char *a2, ...)
{
  return [a1 tsax2DColumnFillProperty];
}

id objc_msgSend_tsaxAccessibilityElement(void *a1, const char *a2, ...)
{
  return [a1 tsaxAccessibilityElement];
}

id objc_msgSend_tsaxAccessibilityUnregister(void *a1, const char *a2, ...)
{
  return [a1 tsaxAccessibilityUnregister];
}

id objc_msgSend_tsaxActiveFindResult(void *a1, const char *a2, ...)
{
  return [a1 tsaxActiveFindResult];
}

id objc_msgSend_tsaxAddDocumentButtonLabel(void *a1, const char *a2, ...)
{
  return [a1 tsaxAddDocumentButtonLabel];
}

id objc_msgSend_tsaxAdditionalButtonLabelsPerImageFileName(void *a1, const char *a2, ...)
{
  return [a1 tsaxAdditionalButtonLabelsPerImageFileName];
}

id objc_msgSend_tsaxAllReps(void *a1, const char *a2, ...)
{
  return [a1 tsaxAllReps];
}

id objc_msgSend_tsaxAllowsMenuVisible(void *a1, const char *a2, ...)
{
  return [a1 tsaxAllowsMenuVisible];
}

id objc_msgSend_tsaxAncestorView(void *a1, const char *a2, ...)
{
  return [a1 tsaxAncestorView];
}

id objc_msgSend_tsaxAnchorCellID(void *a1, const char *a2, ...)
{
  return [a1 tsaxAnchorCellID];
}

id objc_msgSend_tsaxAngle(void *a1, const char *a2, ...)
{
  return [a1 tsaxAngle];
}

id objc_msgSend_tsaxApproximateColorDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxApproximateColorDescription];
}

id objc_msgSend_tsaxAssociatedPopoverController(void *a1, const char *a2, ...)
{
  return [a1 tsaxAssociatedPopoverController];
}

id objc_msgSend_tsaxBaseSafeCategoryClass(void *a1, const char *a2, ...)
{
  return [a1 tsaxBaseSafeCategoryClass];
}

id objc_msgSend_tsaxBecameNotSelected(void *a1, const char *a2, ...)
{
  return [a1 tsaxBecameNotSelected];
}

id objc_msgSend_tsaxBecameSelected(void *a1, const char *a2, ...)
{
  return [a1 tsaxBecameSelected];
}

id objc_msgSend_tsaxBoolValue(void *a1, const char *a2, ...)
{
  return [a1 tsaxBoolValue];
}

id objc_msgSend_tsaxBoundingCellRange(void *a1, const char *a2, ...)
{
  return [a1 tsaxBoundingCellRange];
}

id objc_msgSend_tsaxCanMoveAXFocusIntoContent(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanMoveAXFocusIntoContent];
}

id objc_msgSend_tsaxCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvas];
}

id objc_msgSend_tsaxCanvasContainerView(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasContainerView];
}

id objc_msgSend_tsaxCanvasEditor(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasEditor];
}

id objc_msgSend_tsaxCanvasHostingLayer(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasHostingLayer];
}

id objc_msgSend_tsaxCanvasLayer(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasLayer];
}

id objc_msgSend_tsaxCanvasSelection(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasSelection];
}

id objc_msgSend_tsaxCanvasView(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasView];
}

id objc_msgSend_tsaxCanvasViewController(void *a1, const char *a2, ...)
{
  return [a1 tsaxCanvasViewController];
}

id objc_msgSend_tsaxCellRegion(void *a1, const char *a2, ...)
{
  return [a1 tsaxCellRegion];
}

id objc_msgSend_tsaxChartDrawableInfo(void *a1, const char *a2, ...)
{
  return [a1 tsaxChartDrawableInfo];
}

id objc_msgSend_tsaxChartTypeFullDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxChartTypeFullDescription];
}

id objc_msgSend_tsaxChildReps(void *a1, const char *a2, ...)
{
  return [a1 tsaxChildReps];
}

id objc_msgSend_tsaxChildren(void *a1, const char *a2, ...)
{
  return [a1 tsaxChildren];
}

id objc_msgSend_tsaxChildrenCells(void *a1, const char *a2, ...)
{
  return [a1 tsaxChildrenCells];
}

id objc_msgSend_tsaxColor(void *a1, const char *a2, ...)
{
  return [a1 tsaxColor];
}

id objc_msgSend_tsaxColorDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxColorDescription];
}

id objc_msgSend_tsaxColumnElements(void *a1, const char *a2, ...)
{
  return [a1 tsaxColumnElements];
}

id objc_msgSend_tsaxColumnIndexElements(void *a1, const char *a2, ...)
{
  return [a1 tsaxColumnIndexElements];
}

id objc_msgSend_tsaxColumns(void *a1, const char *a2, ...)
{
  return [a1 tsaxColumns];
}

id objc_msgSend_tsaxColumnsCount(void *a1, const char *a2, ...)
{
  return [a1 tsaxColumnsCount];
}

id objc_msgSend_tsaxComment(void *a1, const char *a2, ...)
{
  return [a1 tsaxComment];
}

id objc_msgSend_tsaxCompletionToken(void *a1, const char *a2, ...)
{
  return [a1 tsaxCompletionToken];
}

id objc_msgSend_tsaxContainedRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxContainedRep];
}

id objc_msgSend_tsaxContainedStorage(void *a1, const char *a2, ...)
{
  return [a1 tsaxContainedStorage];
}

id objc_msgSend_tsaxContainedTextEditingRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxContainedTextEditingRep];
}

id objc_msgSend_tsaxContainedTextEditor(void *a1, const char *a2, ...)
{
  return [a1 tsaxContainedTextEditor];
}

id objc_msgSend_tsaxContentViewController(void *a1, const char *a2, ...)
{
  return [a1 tsaxContentViewController];
}

id objc_msgSend_tsaxControlCellEditor(void *a1, const char *a2, ...)
{
  return [a1 tsaxControlCellEditor];
}

id objc_msgSend_tsaxCountLines(void *a1, const char *a2, ...)
{
  return [a1 tsaxCountLines];
}

id objc_msgSend_tsaxCreateKnobTracker(void *a1, const char *a2, ...)
{
  return [a1 tsaxCreateKnobTracker];
}

id objc_msgSend_tsaxCurrentBoundsForStandardKnobs(void *a1, const char *a2, ...)
{
  return [a1 tsaxCurrentBoundsForStandardKnobs];
}

id objc_msgSend_tsaxCurrentEditors(void *a1, const char *a2, ...)
{
  return [a1 tsaxCurrentEditors];
}

id objc_msgSend_tsaxCurrentRepDragOffset(void *a1, const char *a2, ...)
{
  return [a1 tsaxCurrentRepDragOffset];
}

id objc_msgSend_tsaxCurrentRulerUnitsDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxCurrentRulerUnitsDescription];
}

id objc_msgSend_tsaxCurrentlyWaitingOnThreadedLayoutAndRender(void *a1, const char *a2, ...)
{
  return [a1 tsaxCurrentlyWaitingOnThreadedLayoutAndRender];
}

id objc_msgSend_tsaxDelegate(void *a1, const char *a2, ...)
{
  return [a1 tsaxDelegate];
}

id objc_msgSend_tsaxDelegateForFrame(void *a1, const char *a2, ...)
{
  return [a1 tsaxDelegateForFrame];
}

id objc_msgSend_tsaxDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxDescription];
}

id objc_msgSend_tsaxDidDeleteBlankReferenceTokenForKeyboardInsertion(void *a1, const char *a2, ...)
{
  return [a1 tsaxDidDeleteBlankReferenceTokenForKeyboardInsertion];
}

id objc_msgSend_tsaxDidInvalidateChildren(void *a1, const char *a2, ...)
{
  return [a1 tsaxDidInvalidateChildren];
}

id objc_msgSend_tsaxDidPulseCaret(void *a1, const char *a2, ...)
{
  return [a1 tsaxDidPulseCaret];
}

id objc_msgSend_tsaxDidRedo(void *a1, const char *a2, ...)
{
  return [a1 tsaxDidRedo];
}

id objc_msgSend_tsaxDidUndo(void *a1, const char *a2, ...)
{
  return [a1 tsaxDidUndo];
}

id objc_msgSend_tsaxDirectionView(void *a1, const char *a2, ...)
{
  return [a1 tsaxDirectionView];
}

id objc_msgSend_tsaxDoubleValue(void *a1, const char *a2, ...)
{
  return [a1 tsaxDoubleValue];
}

id objc_msgSend_tsaxEditMenuItemProvider(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditMenuItemProvider];
}

id objc_msgSend_tsaxEditMenuItems(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditMenuItems];
}

id objc_msgSend_tsaxEditingCellID(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditingCellID];
}

id objc_msgSend_tsaxEditingController(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditingController];
}

id objc_msgSend_tsaxEditingRepContentsChanged(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditingRepContentsChanged];
}

id objc_msgSend_tsaxEditingRepWithCaret(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditingRepWithCaret];
}

id objc_msgSend_tsaxEditorController(void *a1, const char *a2, ...)
{
  return [a1 tsaxEditorController];
}

id objc_msgSend_tsaxEnclosingScrollView(void *a1, const char *a2, ...)
{
  return [a1 tsaxEnclosingScrollView];
}

id objc_msgSend_tsaxEndEditingCurrentEditingCell(void *a1, const char *a2, ...)
{
  return [a1 tsaxEndEditingCurrentEditingCell];
}

id objc_msgSend_tsaxEnsureChildrenAreLoaded(void *a1, const char *a2, ...)
{
  return [a1 tsaxEnsureChildrenAreLoaded];
}

id objc_msgSend_tsaxFieldRange(void *a1, const char *a2, ...)
{
  return [a1 tsaxFieldRange];
}

id objc_msgSend_tsaxFilename(void *a1, const char *a2, ...)
{
  return [a1 tsaxFilename];
}

id objc_msgSend_tsaxFillTechnique(void *a1, const char *a2, ...)
{
  return [a1 tsaxFillTechnique];
}

id objc_msgSend_tsaxFirstResponder(void *a1, const char *a2, ...)
{
  return [a1 tsaxFirstResponder];
}

id objc_msgSend_tsaxFocusedElement(void *a1, const char *a2, ...)
{
  return [a1 tsaxFocusedElement];
}

id objc_msgSend_tsaxFocusedRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxFocusedRep];
}

id objc_msgSend_tsaxFormulaPlainText(void *a1, const char *a2, ...)
{
  return [a1 tsaxFormulaPlainText];
}

id objc_msgSend_tsaxFrameInScreenSpace(void *a1, const char *a2, ...)
{
  return [a1 tsaxFrameInScreenSpace];
}

id objc_msgSend_tsaxFrameInUnscaledCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxFrameInUnscaledCanvas];
}

id objc_msgSend_tsaxFullDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxFullDescription];
}

id objc_msgSend_tsaxHandleSelectionChanged(void *a1, const char *a2, ...)
{
  return [a1 tsaxHandleSelectionChanged];
}

id objc_msgSend_tsaxHasComment(void *a1, const char *a2, ...)
{
  return [a1 tsaxHasComment];
}

id objc_msgSend_tsaxHasFormula(void *a1, const char *a2, ...)
{
  return [a1 tsaxHasFormula];
}

id objc_msgSend_tsaxHasFormulaError(void *a1, const char *a2, ...)
{
  return [a1 tsaxHasFormulaError];
}

id objc_msgSend_tsaxHasMultipleTableInfos(void *a1, const char *a2, ...)
{
  return [a1 tsaxHasMultipleTableInfos];
}

id objc_msgSend_tsaxHeaderElementsCache(void *a1, const char *a2, ...)
{
  return [a1 tsaxHeaderElementsCache];
}

id objc_msgSend_tsaxHue(void *a1, const char *a2, ...)
{
  return [a1 tsaxHue];
}

id objc_msgSend_tsaxHueName(void *a1, const char *a2, ...)
{
  return [a1 tsaxHueName];
}

id objc_msgSend_tsaxInPrintPreviewMode(void *a1, const char *a2, ...)
{
  return [a1 tsaxInPrintPreviewMode];
}

id objc_msgSend_tsaxInfo(void *a1, const char *a2, ...)
{
  return [a1 tsaxInfo];
}

id objc_msgSend_tsaxInspectorGeometry(void *a1, const char *a2, ...)
{
  return [a1 tsaxInspectorGeometry];
}

id objc_msgSend_tsaxInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 tsaxInteractiveCanvasController];
}

id objc_msgSend_tsaxInvalidateChildrenEventually(void *a1, const char *a2, ...)
{
  return [a1 tsaxInvalidateChildrenEventually];
}

id objc_msgSend_tsaxInvalidateChildrenImmediately(void *a1, const char *a2, ...)
{
  return [a1 tsaxInvalidateChildrenImmediately];
}

id objc_msgSend_tsaxIsAdjustable(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsAdjustable];
}

id objc_msgSend_tsaxIsChromeVisible(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsChromeVisible];
}

id objc_msgSend_tsaxIsDefaultStroke(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsDefaultStroke];
}

id objc_msgSend_tsaxIsEditing(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsEditing];
}

id objc_msgSend_tsaxIsIgnored(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsIgnored];
}

id objc_msgSend_tsaxIsInInteractiveCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsInInteractiveCanvas];
}

id objc_msgSend_tsaxIsLocked(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsLocked];
}

id objc_msgSend_tsaxIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD];
}

id objc_msgSend_tsaxIsPerformingUndoOrRedo(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsPerformingUndoOrRedo];
}

id objc_msgSend_tsaxIsPlayable(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsPlayable];
}

id objc_msgSend_tsaxIsPopoverVisible(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsPopoverVisible];
}

id objc_msgSend_tsaxIsReadyToLoadChildren(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsReadyToLoadChildren];
}

id objc_msgSend_tsaxIsScrollingDisabled(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsScrollingDisabled];
}

id objc_msgSend_tsaxIsSelectable(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsSelectable];
}

id objc_msgSend_tsaxIsSelected(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsSelected];
}

id objc_msgSend_tsaxIsSeparatorStroke(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsSeparatorStroke];
}

id objc_msgSend_tsaxIsTearingDown(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsTearingDown];
}

id objc_msgSend_tsaxIsTextBox(void *a1, const char *a2, ...)
{
  return [a1 tsaxIsTextBox];
}

id objc_msgSend_tsaxKnobAccessibilityElements(void *a1, const char *a2, ...)
{
  return [a1 tsaxKnobAccessibilityElements];
}

id objc_msgSend_tsaxKnobLabel(void *a1, const char *a2, ...)
{
  return [a1 tsaxKnobLabel];
}

id objc_msgSend_tsaxKnobTag(void *a1, const char *a2, ...)
{
  return [a1 tsaxKnobTag];
}

id objc_msgSend_tsaxKnobTrackerClass(void *a1, const char *a2, ...)
{
  return [a1 tsaxKnobTrackerClass];
}

id objc_msgSend_tsaxLabel(void *a1, const char *a2, ...)
{
  return [a1 tsaxLabel];
}

id objc_msgSend_tsaxLayer(void *a1, const char *a2, ...)
{
  return [a1 tsaxLayer];
}

id objc_msgSend_tsaxLayerFrameInScaledCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxLayerFrameInScaledCanvas];
}

id objc_msgSend_tsaxLayout(void *a1, const char *a2, ...)
{
  return [a1 tsaxLayout];
}

id objc_msgSend_tsaxLayoutDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxLayoutDescription];
}

id objc_msgSend_tsaxLeftSegmentedControl(void *a1, const char *a2, ...)
{
  return [a1 tsaxLeftSegmentedControl];
}

id objc_msgSend_tsaxLightnessModifier(void *a1, const char *a2, ...)
{
  return [a1 tsaxLightnessModifier];
}

id objc_msgSend_tsaxLinkURL(void *a1, const char *a2, ...)
{
  return [a1 tsaxLinkURL];
}

id objc_msgSend_tsaxListItemLabelForLineAtCurrentSelection(void *a1, const char *a2, ...)
{
  return [a1 tsaxListItemLabelForLineAtCurrentSelection];
}

id objc_msgSend_tsaxLoadAccessibilityInformation(void *a1, const char *a2, ...)
{
  return [a1 tsaxLoadAccessibilityInformation];
}

id objc_msgSend_tsaxLocalizedCompatibleRulerUnitsForCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxLocalizedCompatibleRulerUnitsForCanvas];
}

id objc_msgSend_tsaxLockedHint(void *a1, const char *a2, ...)
{
  return [a1 tsaxLockedHint];
}

id objc_msgSend_tsaxLockedLabel(void *a1, const char *a2, ...)
{
  return [a1 tsaxLockedLabel];
}

id objc_msgSend_tsaxLuminance(void *a1, const char *a2, ...)
{
  return [a1 tsaxLuminance];
}

id objc_msgSend_tsaxMarkerLayers(void *a1, const char *a2, ...)
{
  return [a1 tsaxMarkerLayers];
}

id objc_msgSend_tsaxMathEquationRepresentation(void *a1, const char *a2, ...)
{
  return [a1 tsaxMathEquationRepresentation];
}

id objc_msgSend_tsaxMovieLabel(void *a1, const char *a2, ...)
{
  return [a1 tsaxMovieLabel];
}

id objc_msgSend_tsaxName(void *a1, const char *a2, ...)
{
  return [a1 tsaxName];
}

id objc_msgSend_tsaxNaturalBounds(void *a1, const char *a2, ...)
{
  return [a1 tsaxNaturalBounds];
}

id objc_msgSend_tsaxNaturalSize(void *a1, const char *a2, ...)
{
  return [a1 tsaxNaturalSize];
}

id objc_msgSend_tsaxNeedsEditRotorMenu(void *a1, const char *a2, ...)
{
  return [a1 tsaxNeedsEditRotorMenu];
}

id objc_msgSend_tsaxNeedsTextEntryTrait(void *a1, const char *a2, ...)
{
  return [a1 tsaxNeedsTextEntryTrait];
}

id objc_msgSend_tsaxOrderedShapeDescriptions(void *a1, const char *a2, ...)
{
  return [a1 tsaxOrderedShapeDescriptions];
}

id objc_msgSend_tsaxOrderedTableDescriptions(void *a1, const char *a2, ...)
{
  return [a1 tsaxOrderedTableDescriptions];
}

id objc_msgSend_tsaxOrderedTextboxDescriptions(void *a1, const char *a2, ...)
{
  return [a1 tsaxOrderedTextboxDescriptions];
}

id objc_msgSend_tsaxOrigin(void *a1, const char *a2, ...)
{
  return [a1 tsaxOrigin];
}

id objc_msgSend_tsaxPageChangeCausesLayoutChange(void *a1, const char *a2, ...)
{
  return [a1 tsaxPageChangeCausesLayoutChange];
}

id objc_msgSend_tsaxParentInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentInteractiveCanvasController];
}

id objc_msgSend_tsaxParentRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentRep];
}

id objc_msgSend_tsaxParentRepForKnob(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentRepForKnob];
}

id objc_msgSend_tsaxParentRulerController(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentRulerController];
}

id objc_msgSend_tsaxParentRulerMarkerController(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentRulerMarkerController];
}

id objc_msgSend_tsaxParentTableViewCell(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentTableViewCell];
}

id objc_msgSend_tsaxParentTextRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxParentTextRep];
}

id objc_msgSend_tsaxPathSource(void *a1, const char *a2, ...)
{
  return [a1 tsaxPathSource];
}

id objc_msgSend_tsaxPerformCleanupTasksPriorToRemovalFromCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxPerformCleanupTasksPriorToRemovalFromCanvas];
}

id objc_msgSend_tsaxPerformExtraCleanupTasksPriorToRemovalFromCanvas(void *a1, const char *a2, ...)
{
  return [a1 tsaxPerformExtraCleanupTasksPriorToRemovalFromCanvas];
}

id objc_msgSend_tsaxPopObject(void *a1, const char *a2, ...)
{
  return [a1 tsaxPopObject];
}

id objc_msgSend_tsaxPopoverControllerDidBecomeInvisible(void *a1, const char *a2, ...)
{
  return [a1 tsaxPopoverControllerDidBecomeInvisible];
}

id objc_msgSend_tsaxPosition(void *a1, const char *a2, ...)
{
  return [a1 tsaxPosition];
}

id objc_msgSend_tsaxPreventPopoverAssociation(void *a1, const char *a2, ...)
{
  return [a1 tsaxPreventPopoverAssociation];
}

id objc_msgSend_tsaxPropertiesCell(void *a1, const char *a2, ...)
{
  return [a1 tsaxPropertiesCell];
}

id objc_msgSend_tsaxRange(void *a1, const char *a2, ...)
{
  return [a1 tsaxRange];
}

id objc_msgSend_tsaxRangeOfSelectedColumnsOrRows(void *a1, const char *a2, ...)
{
  return [a1 tsaxRangeOfSelectedColumnsOrRows];
}

id objc_msgSend_tsaxRepForSelecting(void *a1, const char *a2, ...)
{
  return [a1 tsaxRepForSelecting];
}

id objc_msgSend_tsaxRightSegmentedControl(void *a1, const char *a2, ...)
{
  return [a1 tsaxRightSegmentedControl];
}

id objc_msgSend_tsaxRowElements(void *a1, const char *a2, ...)
{
  return [a1 tsaxRowElements];
}

id objc_msgSend_tsaxRowIndexElements(void *a1, const char *a2, ...)
{
  return [a1 tsaxRowIndexElements];
}

id objc_msgSend_tsaxRowsCount(void *a1, const char *a2, ...)
{
  return [a1 tsaxRowsCount];
}

id objc_msgSend_tsaxRulerUnits(void *a1, const char *a2, ...)
{
  return [a1 tsaxRulerUnits];
}

id objc_msgSend_tsaxRulerUnitsInstance(void *a1, const char *a2, ...)
{
  return [a1 tsaxRulerUnitsInstance];
}

id objc_msgSend_tsaxSaturation(void *a1, const char *a2, ...)
{
  return [a1 tsaxSaturation];
}

id objc_msgSend_tsaxSaturationModifier(void *a1, const char *a2, ...)
{
  return [a1 tsaxSaturationModifier];
}

id objc_msgSend_tsaxScreenScale(void *a1, const char *a2, ...)
{
  return [a1 tsaxScreenScale];
}

id objc_msgSend_tsaxScrollAnnouncementDelay(void *a1, const char *a2, ...)
{
  return [a1 tsaxScrollAnnouncementDelay];
}

id objc_msgSend_tsaxScrollStatusFormatString(void *a1, const char *a2, ...)
{
  return [a1 tsaxScrollStatusFormatString];
}

id objc_msgSend_tsaxScrollStatusPrefersHorizontal(void *a1, const char *a2, ...)
{
  return [a1 tsaxScrollStatusPrefersHorizontal];
}

id objc_msgSend_tsaxScrollToPrimarySelection(void *a1, const char *a2, ...)
{
  return [a1 tsaxScrollToPrimarySelection];
}

id objc_msgSend_tsaxSegmentCount(void *a1, const char *a2, ...)
{
  return [a1 tsaxSegmentCount];
}

id objc_msgSend_tsaxSegmentedControl(void *a1, const char *a2, ...)
{
  return [a1 tsaxSegmentedControl];
}

id objc_msgSend_tsaxSelect(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelect];
}

id objc_msgSend_tsaxSelectedCells(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelectedCells];
}

id objc_msgSend_tsaxSelectedMultipleChoiceValueDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelectedMultipleChoiceValueDescription];
}

id objc_msgSend_tsaxSelectedTextRange(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelectedTextRange];
}

id objc_msgSend_tsaxSelection(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelection];
}

id objc_msgSend_tsaxSelectionAnchorCellElement(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelectionAnchorCellElement];
}

id objc_msgSend_tsaxSelectionType(void *a1, const char *a2, ...)
{
  return [a1 tsaxSelectionType];
}

id objc_msgSend_tsaxServesAsContainingParentForOrdering(void *a1, const char *a2, ...)
{
  return [a1 tsaxServesAsContainingParentForOrdering];
}

id objc_msgSend_tsaxShapeInfo(void *a1, const char *a2, ...)
{
  return [a1 tsaxShapeInfo];
}

id objc_msgSend_tsaxShapeLabel(void *a1, const char *a2, ...)
{
  return [a1 tsaxShapeLabel];
}

id objc_msgSend_tsaxShapeStyleName(void *a1, const char *a2, ...)
{
  return [a1 tsaxShapeStyleName];
}

id objc_msgSend_tsaxShapeTypeDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxShapeTypeDescription];
}

id objc_msgSend_tsaxSharedTableConfiguration(void *a1, const char *a2, ...)
{
  return [a1 tsaxSharedTableConfiguration];
}

id objc_msgSend_tsaxShortDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxShortDescription];
}

id objc_msgSend_tsaxShouldCacheChildren(void *a1, const char *a2, ...)
{
  return [a1 tsaxShouldCacheChildren];
}

id objc_msgSend_tsaxShouldCreateKnobs(void *a1, const char *a2, ...)
{
  return [a1 tsaxShouldCreateKnobs];
}

id objc_msgSend_tsaxShouldExposeAsAttachmentToken(void *a1, const char *a2, ...)
{
  return [a1 tsaxShouldExposeAsAttachmentToken];
}

id objc_msgSend_tsaxShouldIgnoreParentShape(void *a1, const char *a2, ...)
{
  return [a1 tsaxShouldIgnoreParentShape];
}

id objc_msgSend_tsaxShouldIgnoreSiblingPageControl(void *a1, const char *a2, ...)
{
  return [a1 tsaxShouldIgnoreSiblingPageControl];
}

id objc_msgSend_tsaxShouldSortChildrenUsingStandardAlgorithm(void *a1, const char *a2, ...)
{
  return [a1 tsaxShouldSortChildrenUsingStandardAlgorithm];
}

id objc_msgSend_tsaxSize(void *a1, const char *a2, ...)
{
  return [a1 tsaxSize];
}

id objc_msgSend_tsaxStorage(void *a1, const char *a2, ...)
{
  return [a1 tsaxStorage];
}

id objc_msgSend_tsaxStorageRangeOfRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxStorageRangeOfRep];
}

id objc_msgSend_tsaxString(void *a1, const char *a2, ...)
{
  return [a1 tsaxString];
}

id objc_msgSend_tsaxStrokeIsEmpty(void *a1, const char *a2, ...)
{
  return [a1 tsaxStrokeIsEmpty];
}

id objc_msgSend_tsaxStrokePattern(void *a1, const char *a2, ...)
{
  return [a1 tsaxStrokePattern];
}

id objc_msgSend_tsaxStyleInfoDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxStyleInfoDescription];
}

id objc_msgSend_tsaxSummaryDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxSummaryDescription];
}

id objc_msgSend_tsaxSupportsContainedTextEditing(void *a1, const char *a2, ...)
{
  return [a1 tsaxSupportsContainedTextEditing];
}

id objc_msgSend_tsaxTableChrome(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableChrome];
}

id objc_msgSend_tsaxTableEditor(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableEditor];
}

id objc_msgSend_tsaxTableLayout(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableLayout];
}

id objc_msgSend_tsaxTableModel(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableModel];
}

id objc_msgSend_tsaxTableName(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableName];
}

id objc_msgSend_tsaxTableRep(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableRep];
}

id objc_msgSend_tsaxTableSelection(void *a1, const char *a2, ...)
{
  return [a1 tsaxTableSelection];
}

id objc_msgSend_tsaxTargetClass(void *a1, const char *a2, ...)
{
  return [a1 tsaxTargetClass];
}

id objc_msgSend_tsaxTargetClassName(void *a1, const char *a2, ...)
{
  return [a1 tsaxTargetClassName];
}

id objc_msgSend_tsaxTextEditingController(void *a1, const char *a2, ...)
{
  return [a1 tsaxTextEditingController];
}

id objc_msgSend_tsaxTextInputEditor(void *a1, const char *a2, ...)
{
  return [a1 tsaxTextInputEditor];
}

id objc_msgSend_tsaxTogglePlayback(void *a1, const char *a2, ...)
{
  return [a1 tsaxTogglePlayback];
}

id objc_msgSend_tsaxTopLevelReps(void *a1, const char *a2, ...)
{
  return [a1 tsaxTopLevelReps];
}

id objc_msgSend_tsaxTransformToConvertNaturalFromLayerRelative(void *a1, const char *a2, ...)
{
  return [a1 tsaxTransformToConvertNaturalFromLayerRelative];
}

id objc_msgSend_tsaxUseContentInset(void *a1, const char *a2, ...)
{
  return [a1 tsaxUseContentInset];
}

id objc_msgSend_tsaxUserProvidedDescription(void *a1, const char *a2, ...)
{
  return [a1 tsaxUserProvidedDescription];
}

id objc_msgSend_tsaxValue(void *a1, const char *a2, ...)
{
  return [a1 tsaxValue];
}

id objc_msgSend_tsaxValueDescriptionDelegate(void *a1, const char *a2, ...)
{
  return [a1 tsaxValueDescriptionDelegate];
}

id objc_msgSend_tsaxValueWithUnits(void *a1, const char *a2, ...)
{
  return [a1 tsaxValueWithUnits];
}

id objc_msgSend_tsaxWasExplicitlyFocused(void *a1, const char *a2, ...)
{
  return [a1 tsaxWasExplicitlyFocused];
}

id objc_msgSend_tspContext(void *a1, const char *a2, ...)
{
  return [a1 tspContext];
}

id objc_msgSend_tspObjectContextPath(void *a1, const char *a2, ...)
{
  return [a1 tspObjectContextPath];
}

id objc_msgSend_tswpShapeStyle(void *a1, const char *a2, ...)
{
  return [a1 tswpShapeStyle];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return [a1 type];
}

id objc_msgSend_typeConformsToImage(void *a1, const char *a2, ...)
{
  return [a1 typeConformsToImage];
}

id objc_msgSend_typographicBounds(void *a1, const char *a2, ...)
{
  return [a1 typographicBounds];
}

id objc_msgSend_uiBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 uiBackgroundColor];
}

id objc_msgSend_uiManagedObjectContext(void *a1, const char *a2, ...)
{
  return [a1 uiManagedObjectContext];
}

id objc_msgSend_uiTextColor(void *a1, const char *a2, ...)
{
  return [a1 uiTextColor];
}

id objc_msgSend_underlineOffset(void *a1, const char *a2, ...)
{
  return [a1 underlineOffset];
}

id objc_msgSend_unhighlightAllMarginNotes(void *a1, const char *a2, ...)
{
  return [a1 unhighlightAllMarginNotes];
}

id objc_msgSend_uniquifier(void *a1, const char *a2, ...)
{
  return [a1 uniquifier];
}

id objc_msgSend_unload(void *a1, const char *a2, ...)
{
  return [a1 unload];
}

id objc_msgSend_unloadCallback(void *a1, const char *a2, ...)
{
  return [a1 unloadCallback];
}

id objc_msgSend_unloadExtraAccessibilitySupport(void *a1, const char *a2, ...)
{
  return [a1 unloadExtraAccessibilitySupport];
}

id objc_msgSend_unloadIndex(void *a1, const char *a2, ...)
{
  return [a1 unloadIndex];
}

id objc_msgSend_unloadRequested(void *a1, const char *a2, ...)
{
  return [a1 unloadRequested];
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return [a1 unlock];
}

id objc_msgSend_unmovingParentView(void *a1, const char *a2, ...)
{
  return [a1 unmovingParentView];
}

id objc_msgSend_unmovingViewForRevealingTOC(void *a1, const char *a2, ...)
{
  return [a1 unmovingViewForRevealingTOC];
}

id objc_msgSend_unscaledCenterPoint(void *a1, const char *a2, ...)
{
  return [a1 unscaledCenterPoint];
}

id objc_msgSend_unscaledPoint(void *a1, const char *a2, ...)
{
  return [a1 unscaledPoint];
}

id objc_msgSend_unscaledSize(void *a1, const char *a2, ...)
{
  return [a1 unscaledSize];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongLongValue];
}

id objc_msgSend_unversionedBookVersion(void *a1, const char *a2, ...)
{
  return [a1 unversionedBookVersion];
}

id objc_msgSend_updateAlternateLayersForViews(void *a1, const char *a2, ...)
{
  return [a1 updateAlternateLayersForViews];
}

id objc_msgSend_updateAnnotations(void *a1, const char *a2, ...)
{
  return [a1 updateAnnotations];
}

id objc_msgSend_updateBackgroundImage(void *a1, const char *a2, ...)
{
  return [a1 updateBackgroundImage];
}

id objc_msgSend_updateBookmarkButton(void *a1, const char *a2, ...)
{
  return [a1 updateBookmarkButton];
}

id objc_msgSend_updateBookmarkVisibleState(void *a1, const char *a2, ...)
{
  return [a1 updateBookmarkVisibleState];
}

id objc_msgSend_updateCachedAnnotations(void *a1, const char *a2, ...)
{
  return [a1 updateCachedAnnotations];
}

id objc_msgSend_updateChildrenFromInfo(void *a1, const char *a2, ...)
{
  return [a1 updateChildrenFromInfo];
}

id objc_msgSend_updateChildrenFromLayout(void *a1, const char *a2, ...)
{
  return [a1 updateChildrenFromLayout];
}

id objc_msgSend_updateConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 updateConstraintsIfNeeded];
}

id objc_msgSend_updateContainerInfosToDisplay(void *a1, const char *a2, ...)
{
  return [a1 updateContainerInfosToDisplay];
}

id objc_msgSend_updateFromLayout(void *a1, const char *a2, ...)
{
  return [a1 updateFromLayout];
}

id objc_msgSend_updateHistoryNavigation(void *a1, const char *a2, ...)
{
  return [a1 updateHistoryNavigation];
}

id objc_msgSend_updateInfosOnScroll(void *a1, const char *a2, ...)
{
  return [a1 updateInfosOnScroll];
}

id objc_msgSend_updateLabels(void *a1, const char *a2, ...)
{
  return [a1 updateLabels];
}

id objc_msgSend_updateLastLineBreakHint(void *a1, const char *a2, ...)
{
  return [a1 updateLastLineBreakHint];
}

id objc_msgSend_updateLayerBoundsAndWPPosition(void *a1, const char *a2, ...)
{
  return [a1 updateLayerBoundsAndWPPosition];
}

id objc_msgSend_updateNavigationAffordances(void *a1, const char *a2, ...)
{
  return [a1 updateNavigationAffordances];
}

id objc_msgSend_updatePageNumberWidth(void *a1, const char *a2, ...)
{
  return [a1 updatePageNumberWidth];
}

id objc_msgSend_updatePaginationResults(void *a1, const char *a2, ...)
{
  return [a1 updatePaginationResults];
}

id objc_msgSend_updatePlacardLayouts(void *a1, const char *a2, ...)
{
  return [a1 updatePlacardLayouts];
}

id objc_msgSend_updateRadioState(void *a1, const char *a2, ...)
{
  return [a1 updateRadioState];
}

id objc_msgSend_updateSectionProviders(void *a1, const char *a2, ...)
{
  return [a1 updateSectionProviders];
}

id objc_msgSend_updateThemeButtons(void *a1, const char *a2, ...)
{
  return [a1 updateThemeButtons];
}

id objc_msgSend_updateTopLevelLayers(void *a1, const char *a2, ...)
{
  return [a1 updateTopLevelLayers];
}

id objc_msgSend_updateViewBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 updateViewBackgroundColor];
}

id objc_msgSend_updateVisibleIndexes(void *a1, const char *a2, ...)
{
  return [a1 updateVisibleIndexes];
}

id objc_msgSend_updateVisibleInfos(void *a1, const char *a2, ...)
{
  return [a1 updateVisibleInfos];
}

id objc_msgSend_upperLeftCellID(void *a1, const char *a2, ...)
{
  return [a1 upperLeftCellID];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return [a1 uppercaseString];
}

id objc_msgSend_upwardFacingLayer(void *a1, const char *a2, ...)
{
  return [a1 upwardFacingLayer];
}

id objc_msgSend_uri(void *a1, const char *a2, ...)
{
  return [a1 uri];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return [a1 url];
}

id objc_msgSend_urlHandlerToTaskMap(void *a1, const char *a2, ...)
{
  return [a1 urlHandlerToTaskMap];
}

id objc_msgSend_urlSchemesNotRequiringUserPrompt(void *a1, const char *a2, ...)
{
  return [a1 urlSchemesNotRequiringUserPrompt];
}

id objc_msgSend_useBackgroundShape(void *a1, const char *a2, ...)
{
  return [a1 useBackgroundShape];
}

id objc_msgSend_useGestureViewForReCentering(void *a1, const char *a2, ...)
{
  return [a1 useGestureViewForReCentering];
}

id objc_msgSend_usePhoneLayout(void *a1, const char *a2, ...)
{
  return [a1 usePhoneLayout];
}

id objc_msgSend_useScrubber(void *a1, const char *a2, ...)
{
  return [a1 useScrubber];
}

id objc_msgSend_useSidebar(void *a1, const char *a2, ...)
{
  return [a1 useSidebar];
}

id objc_msgSend_useStoredViewportIndex(void *a1, const char *a2, ...)
{
  return [a1 useStoredViewportIndex];
}

id objc_msgSend_useZoom(void *a1, const char *a2, ...)
{
  return [a1 useZoom];
}

id objc_msgSend_userAnnotationDelegate(void *a1, const char *a2, ...)
{
  return [a1 userAnnotationDelegate];
}

id objc_msgSend_userContentController(void *a1, const char *a2, ...)
{
  return [a1 userContentController];
}

id objc_msgSend_userDataManager(void *a1, const char *a2, ...)
{
  return [a1 userDataManager];
}

id objc_msgSend_userDataPath(void *a1, const char *a2, ...)
{
  return [a1 userDataPath];
}

id objc_msgSend_userDidInteractInToolbar(void *a1, const char *a2, ...)
{
  return [a1 userDidInteractInToolbar];
}

id objc_msgSend_userHasCheckedAnswer(void *a1, const char *a2, ...)
{
  return [a1 userHasCheckedAnswer];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return [a1 userInfo];
}

id objc_msgSend_userInteractionEnabled(void *a1, const char *a2, ...)
{
  return [a1 userInteractionEnabled];
}

id objc_msgSend_userInteractionOccurred(void *a1, const char *a2, ...)
{
  return [a1 userInteractionOccurred];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return [a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return [a1 userInterfaceLayoutDirection];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return [a1 userInterfaceStyle];
}

id objc_msgSend_userInterruptedAnimation(void *a1, const char *a2, ...)
{
  return [a1 userInterruptedAnimation];
}

id objc_msgSend_userModificationDate(void *a1, const char *a2, ...)
{
  return [a1 userModificationDate];
}

id objc_msgSend_userWillInteractInToolbar(void *a1, const char *a2, ...)
{
  return [a1 userWillInteractInToolbar];
}

id objc_msgSend_usesApplicationFontScaling(void *a1, const char *a2, ...)
{
  return [a1 usesApplicationFontScaling];
}

id objc_msgSend_usesInflation(void *a1, const char *a2, ...)
{
  return [a1 usesInflation];
}

id objc_msgSend_usesTransportController(void *a1, const char *a2, ...)
{
  return [a1 usesTransportController];
}

id objc_msgSend_usesTransportControllerControls(void *a1, const char *a2, ...)
{
  return [a1 usesTransportControllerControls];
}

id objc_msgSend_usingLargerTextConstraints(void *a1, const char *a2, ...)
{
  return [a1 usingLargerTextConstraints];
}

id objc_msgSend_valid(void *a1, const char *a2, ...)
{
  return [a1 valid];
}

id objc_msgSend_validStoreURLSchemes(void *a1, const char *a2, ...)
{
  return [a1 validStoreURLSchemes];
}

id objc_msgSend_validURLSchemes(void *a1, const char *a2, ...)
{
  return [a1 validURLSchemes];
}

id objc_msgSend_validate(void *a1, const char *a2, ...)
{
  return [a1 validate];
}

id objc_msgSend_validateLayouts(void *a1, const char *a2, ...)
{
  return [a1 validateLayouts];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return [a1 value];
}

id objc_msgSend_valueEnumerator(void *a1, const char *a2, ...)
{
  return [a1 valueEnumerator];
}

id objc_msgSend_velocity(void *a1, const char *a2, ...)
{
  return [a1 velocity];
}

id objc_msgSend_velocityScale(void *a1, const char *a2, ...)
{
  return [a1 velocityScale];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return [a1 version];
}

id objc_msgSend_versionString(void *a1, const char *a2, ...)
{
  return [a1 versionString];
}

id objc_msgSend_vertexColorTexture(void *a1, const char *a2, ...)
{
  return [a1 vertexColorTexture];
}

id objc_msgSend_vertexCount(void *a1, const char *a2, ...)
{
  return [a1 vertexCount];
}

id objc_msgSend_vertexData(void *a1, const char *a2, ...)
{
  return [a1 vertexData];
}

id objc_msgSend_vertexUniforms(void *a1, const char *a2, ...)
{
  return [a1 vertexUniforms];
}

id objc_msgSend_verticalFlip(void *a1, const char *a2, ...)
{
  return [a1 verticalFlip];
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return [a1 verticalSizeClass];
}

id objc_msgSend_verticalSpacing(void *a1, const char *a2, ...)
{
  return [a1 verticalSpacing];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return [a1 view];
}

id objc_msgSend_viewBackgroundColor(void *a1, const char *a2, ...)
{
  return [a1 viewBackgroundColor];
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return [a1 viewController];
}

id objc_msgSend_viewDelegate(void *a1, const char *a2, ...)
{
  return [a1 viewDelegate];
}

id objc_msgSend_viewForHUD(void *a1, const char *a2, ...)
{
  return [a1 viewForHUD];
}

id objc_msgSend_viewHeaderHeight(void *a1, const char *a2, ...)
{
  return [a1 viewHeaderHeight];
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return [a1 viewIfLoaded];
}

id objc_msgSend_viewScale(void *a1, const char *a2, ...)
{
  return [a1 viewScale];
}

id objc_msgSend_viewScaleDidChange(void *a1, const char *a2, ...)
{
  return [a1 viewScaleDidChange];
}

id objc_msgSend_viewToShroud(void *a1, const char *a2, ...)
{
  return [a1 viewToShroud];
}

id objc_msgSend_viewportIndex(void *a1, const char *a2, ...)
{
  return [a1 viewportIndex];
}

id objc_msgSend_viewportStyle(void *a1, const char *a2, ...)
{
  return [a1 viewportStyle];
}

id objc_msgSend_viewsAreReadyForOpenAnimation(void *a1, const char *a2, ...)
{
  return [a1 viewsAreReadyForOpenAnimation];
}

id objc_msgSend_viewsDidResize(void *a1, const char *a2, ...)
{
  return [a1 viewsDidResize];
}

id objc_msgSend_visibleBoundsRect(void *a1, const char *a2, ...)
{
  return [a1 visibleBoundsRect];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return [a1 visibleCells];
}

id objc_msgSend_visibleContent(void *a1, const char *a2, ...)
{
  return [a1 visibleContent];
}

id objc_msgSend_visibleEventIndex(void *a1, const char *a2, ...)
{
  return [a1 visibleEventIndex];
}

id objc_msgSend_visibleHeight(void *a1, const char *a2, ...)
{
  return [a1 visibleHeight];
}

id objc_msgSend_visibleParticleCount(void *a1, const char *a2, ...)
{
  return [a1 visibleParticleCount];
}

id objc_msgSend_visibleRelativePageRange(void *a1, const char *a2, ...)
{
  return [a1 visibleRelativePageRange];
}

id objc_msgSend_visibleThumbnailIndexes(void *a1, const char *a2, ...)
{
  return [a1 visibleThumbnailIndexes];
}

id objc_msgSend_visibleUnscaledRect(void *a1, const char *a2, ...)
{
  return [a1 visibleUnscaledRect];
}

id objc_msgSend_visibleUnscaledRectBeforeRotation(void *a1, const char *a2, ...)
{
  return [a1 visibleUnscaledRectBeforeRotation];
}

id objc_msgSend_visibleUnscaledRectForContent(void *a1, const char *a2, ...)
{
  return [a1 visibleUnscaledRectForContent];
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return [a1 visibleViewController];
}

id objc_msgSend_visitedPagesAfterOpening(void *a1, const char *a2, ...)
{
  return [a1 visitedPagesAfterOpening];
}

id objc_msgSend_wait(void *a1, const char *a2, ...)
{
  return [a1 wait];
}

id objc_msgSend_waitUntilAllOperationsAreFinished(void *a1, const char *a2, ...)
{
  return [a1 waitUntilAllOperationsAreFinished];
}

id objc_msgSend_waitUntilCompleted(void *a1, const char *a2, ...)
{
  return [a1 waitUntilCompleted];
}

id objc_msgSend_waitUntilFinished(void *a1, const char *a2, ...)
{
  return [a1 waitUntilFinished];
}

id objc_msgSend_waitUntilFinishedLoading(void *a1, const char *a2, ...)
{
  return [a1 waitUntilFinishedLoading];
}

id objc_msgSend_waitUntilFinishedLoadingAndPaginating(void *a1, const char *a2, ...)
{
  return [a1 waitUntilFinishedLoadingAndPaginating];
}

id objc_msgSend_waitingBlockTimers(void *a1, const char *a2, ...)
{
  return [a1 waitingBlockTimers];
}

id objc_msgSend_wantsFullscreenOnlyDisplay(void *a1, const char *a2, ...)
{
  return [a1 wantsFullscreenOnlyDisplay];
}

id objc_msgSend_wantsNormalBodyLayouts(void *a1, const char *a2, ...)
{
  return [a1 wantsNormalBodyLayouts];
}

id objc_msgSend_wantsPlayButton(void *a1, const char *a2, ...)
{
  return [a1 wantsPlayButton];
}

id objc_msgSend_wantsPressAction(void *a1, const char *a2, ...)
{
  return [a1 wantsPressAction];
}

id objc_msgSend_wantsPressAnimation(void *a1, const char *a2, ...)
{
  return [a1 wantsPressAnimation];
}

id objc_msgSend_wantsRecoilAnimation(void *a1, const char *a2, ...)
{
  return [a1 wantsRecoilAnimation];
}

id objc_msgSend_wantsScrubber(void *a1, const char *a2, ...)
{
  return [a1 wantsScrubber];
}

id objc_msgSend_wantsStatusBarVisible(void *a1, const char *a2, ...)
{
  return [a1 wantsStatusBarVisible];
}

id objc_msgSend_wantsToHandlePan(void *a1, const char *a2, ...)
{
  return [a1 wantsToHandlePan];
}

id objc_msgSend_wantsVisibility(void *a1, const char *a2, ...)
{
  return [a1 wantsVisibility];
}

id objc_msgSend_wasAddedToCanvas(void *a1, const char *a2, ...)
{
  return [a1 wasAddedToCanvas];
}

id objc_msgSend_wasError(void *a1, const char *a2, ...)
{
  return [a1 wasError];
}

id objc_msgSend_wasInDrawer(void *a1, const char *a2, ...)
{
  return [a1 wasInDrawer];
}

id objc_msgSend_wasReversed(void *a1, const char *a2, ...)
{
  return [a1 wasReversed];
}

id objc_msgSend_wasStoppedByScrolling(void *a1, const char *a2, ...)
{
  return [a1 wasStoppedByScrolling];
}

id objc_msgSend_wasTapHold(void *a1, const char *a2, ...)
{
  return [a1 wasTapHold];
}

id objc_msgSend_wasThinned(void *a1, const char *a2, ...)
{
  return [a1 wasThinned];
}

id objc_msgSend_weakEvent(void *a1, const char *a2, ...)
{
  return [a1 weakEvent];
}

id objc_msgSend_weakToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return [a1 weakToWeakObjectsMapTable];
}

id objc_msgSend_webFrame(void *a1, const char *a2, ...)
{
  return [a1 webFrame];
}

id objc_msgSend_webFrameInRoot(void *a1, const char *a2, ...)
{
  return [a1 webFrameInRoot];
}

id objc_msgSend_webView(void *a1, const char *a2, ...)
{
  return [a1 webView];
}

id objc_msgSend_webViewDelegate(void *a1, const char *a2, ...)
{
  return [a1 webViewDelegate];
}

id objc_msgSend_webViewPosterLayer(void *a1, const char *a2, ...)
{
  return [a1 webViewPosterLayer];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return [a1 whiteColor];
}

id objc_msgSend_whitespace(void *a1, const char *a2, ...)
{
  return [a1 whitespace];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 whitespaceCharacterSet];
}

id objc_msgSend_widgetHost(void *a1, const char *a2, ...)
{
  return [a1 widgetHost];
}

id objc_msgSend_widgetInfo(void *a1, const char *a2, ...)
{
  return [a1 widgetInfo];
}

id objc_msgSend_widgetInteractionAllowAutoplay(void *a1, const char *a2, ...)
{
  return [a1 widgetInteractionAllowAutoplay];
}

id objc_msgSend_widgetInteractionDisabledOnPage(void *a1, const char *a2, ...)
{
  return [a1 widgetInteractionDisabledOnPage];
}

id objc_msgSend_widgetInteractionEnabled(void *a1, const char *a2, ...)
{
  return [a1 widgetInteractionEnabled];
}

id objc_msgSend_widgetInteractionMode(void *a1, const char *a2, ...)
{
  return [a1 widgetInteractionMode];
}

id objc_msgSend_widgetInteractionModeChanged(void *a1, const char *a2, ...)
{
  return [a1 widgetInteractionModeChanged];
}

id objc_msgSend_widgetLayout(void *a1, const char *a2, ...)
{
  return [a1 widgetLayout];
}

id objc_msgSend_widgetLayoutBounds(void *a1, const char *a2, ...)
{
  return [a1 widgetLayoutBounds];
}

id objc_msgSend_widgetStackWidth(void *a1, const char *a2, ...)
{
  return [a1 widgetStackWidth];
}

id objc_msgSend_width(void *a1, const char *a2, ...)
{
  return [a1 width];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return [a1 widthAnchor];
}

id objc_msgSend_widthForPlayButton(void *a1, const char *a2, ...)
{
  return [a1 widthForPlayButton];
}

id objc_msgSend_widthValid(void *a1, const char *a2, ...)
{
  return [a1 widthValid];
}

id objc_msgSend_willAnimate(void *a1, const char *a2, ...)
{
  return [a1 willAnimate];
}

id objc_msgSend_willClose(void *a1, const char *a2, ...)
{
  return [a1 willClose];
}

id objc_msgSend_willEnterForeground(void *a1, const char *a2, ...)
{
  return [a1 willEnterForeground];
}

id objc_msgSend_willJumpToTOC(void *a1, const char *a2, ...)
{
  return [a1 willJumpToTOC];
}

id objc_msgSend_willLayout(void *a1, const char *a2, ...)
{
  return [a1 willLayout];
}

id objc_msgSend_willModify(void *a1, const char *a2, ...)
{
  return [a1 willModify];
}

id objc_msgSend_willRead(void *a1, const char *a2, ...)
{
  return [a1 willRead];
}

id objc_msgSend_willReadJustLoad(void *a1, const char *a2, ...)
{
  return [a1 willReadJustLoad];
}

id objc_msgSend_willRevealTOC(void *a1, const char *a2, ...)
{
  return [a1 willRevealTOC];
}

id objc_msgSend_willSetImageFromQueue(void *a1, const char *a2, ...)
{
  return [a1 willSetImageFromQueue];
}

id objc_msgSend_willStart(void *a1, const char *a2, ...)
{
  return [a1 willStart];
}

id objc_msgSend_willStartRevealTOC(void *a1, const char *a2, ...)
{
  return [a1 willStartRevealTOC];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return [a1 window];
}

id objc_msgSend_windowLevel(void *a1, const char *a2, ...)
{
  return [a1 windowLevel];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return [a1 windowScene];
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return [a1 windows];
}

id objc_msgSend_worldTransform(void *a1, const char *a2, ...)
{
  return [a1 worldTransform];
}

id objc_msgSend_wpColumnHelper(void *a1, const char *a2, ...)
{
  return [a1 wpColumnHelper];
}

id objc_msgSend_wpKind(void *a1, const char *a2, ...)
{
  return [a1 wpKind];
}

id objc_msgSend_wpStorage(void *a1, const char *a2, ...)
{
  return [a1 wpStorage];
}

id objc_msgSend_wpTextHelper(void *a1, const char *a2, ...)
{
  return [a1 wpTextHelper];
}

id objc_msgSend_wrapContainerMode(void *a1, const char *a2, ...)
{
  return [a1 wrapContainerMode];
}

id objc_msgSend_wrapDirection(void *a1, const char *a2, ...)
{
  return [a1 wrapDirection];
}

id objc_msgSend_wrapEnabled(void *a1, const char *a2, ...)
{
  return [a1 wrapEnabled];
}

id objc_msgSend_wrapFitType(void *a1, const char *a2, ...)
{
  return [a1 wrapFitType];
}

id objc_msgSend_wrapPolygon(void *a1, const char *a2, ...)
{
  return [a1 wrapPolygon];
}

id objc_msgSend_wrapType(void *a1, const char *a2, ...)
{
  return [a1 wrapType];
}

id objc_msgSend_wrapperLayer(void *a1, const char *a2, ...)
{
  return [a1 wrapperLayer];
}

id objc_msgSend_xFov(void *a1, const char *a2, ...)
{
  return [a1 xFov];
}

id objc_msgSend_xmlAttributes(void *a1, const char *a2, ...)
{
  return [a1 xmlAttributes];
}

id objc_msgSend_xmlDocument(void *a1, const char *a2, ...)
{
  return [a1 xmlDocument];
}

id objc_msgSend_xmlElementId(void *a1, const char *a2, ...)
{
  return [a1 xmlElementId];
}

id objc_msgSend_xmlElementName(void *a1, const char *a2, ...)
{
  return [a1 xmlElementName];
}

id objc_msgSend_xmlReader(void *a1, const char *a2, ...)
{
  return [a1 xmlReader];
}

id objc_msgSend_xmlString(void *a1, const char *a2, ...)
{
  return [a1 xmlString];
}

id objc_msgSend_yFov(void *a1, const char *a2, ...)
{
  return [a1 yFov];
}

id objc_msgSend_yFovFixed(void *a1, const char *a2, ...)
{
  return [a1 yFovFixed];
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return [a1 year];
}

id objc_msgSend_yearFromReleaseDate(void *a1, const char *a2, ...)
{
  return [a1 yearFromReleaseDate];
}

id objc_msgSend_zPosition(void *a1, const char *a2, ...)
{
  return [a1 zPosition];
}

id objc_msgSend_zero(void *a1, const char *a2, ...)
{
  return [a1 zero];
}

id objc_msgSend_zipPackage(void *a1, const char *a2, ...)
{
  return [a1 zipPackage];
}

id objc_msgSend_zoomDuration(void *a1, const char *a2, ...)
{
  return [a1 zoomDuration];
}

id objc_msgSend_zoomGestureRecognizer(void *a1, const char *a2, ...)
{
  return [a1 zoomGestureRecognizer];
}

id objc_msgSend_zoomOutIfNecessaryPriorToNavigation(void *a1, const char *a2, ...)
{
  return [a1 zoomOutIfNecessaryPriorToNavigation];
}

id objc_msgSend_zoomableCanvasController(void *a1, const char *a2, ...)
{
  return [a1 zoomableCanvasController];
}

id objc_msgSend_zoomedInViewScale(void *a1, const char *a2, ...)
{
  return [a1 zoomedInViewScale];
}

id objc_msgSend_zoomedOutViewScale(void *a1, const char *a2, ...)
{
  return [a1 zoomedOutViewScale];
}